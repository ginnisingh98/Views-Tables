--------------------------------------------------------
--  DDL for Package Body XTR_XTRIGINS_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XTR_XTRIGINS_XMLP_PKG" AS
/* $Header: XTRIGINSB.pls 120.1 2007/12/28 12:49:31 npannamp noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    L_DMMY_NUM NUMBER;
    L_MESSAGE FND_NEW_MESSAGES.MESSAGE_TEXT%TYPE;
    CURSOR GET_LANGUAGE_DESC IS
      SELECT
        ITEM_NAME,
        SUBSTR(TEXT
              ,1
              ,100) LANG_NAME
      FROM
        XTR_SYS_LANGUAGES_VL
      WHERE MODULE_NAME = 'XTRIGINS';
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    BEGIN
      COMPANY_NAME_HEADER := CEP_STANDARD.GET_WINDOW_SESSION_TITLE;
    EXCEPTION
      WHEN OTHERS THEN
        FND_MESSAGE.SET_NAME('XTR'
                            ,'XTR_LOOKUP_ERR');
        L_MESSAGE := FND_MESSAGE.GET;
        RAISE_APPLICATION_ERROR(-20101
                               ,NULL);
    END;
    IF (P_DISPLAY_DEBUG = 'Y') THEN
      NULL;
    END IF;
    FOR c IN GET_LANGUAGE_DESC LOOP
      IF C.ITEM_NAME = 'Z2_FROM_DATE' THEN
        Z2_FROM_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2_TO_DATE' THEN
        Z2_TO_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1COMPANY' THEN
        Z1COMPANY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PARAMETERS' THEN
        Z1PARAMETERS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2ACCOUNT' THEN
        Z2ACCOUNT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2BANK_ACCOUNT' THEN
        Z2BANK_ACCOUNT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2END_OF_REPORT' THEN
        Z2END_OF_REPORT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2FOR' THEN
        Z2FOR := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2INTERGROUP' THEN
        Z2INTERGROUP := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2INTERGROUP_ACCOUNT' THEN
        Z2INTERGROUP_ACCOUNT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2INT_SETTLED' THEN
        Z2INT_SETTLED := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2NUMBER' THEN
        Z2NUMBER := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PARTY_NAME' THEN
        Z2PARTY_NAME := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2REF' THEN
        Z2REF := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SUM' THEN
        Z2SUM := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PAGE' THEN
        Z2PAGE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'REPORT_DATE' THEN
        REPORT_DATE := C.LANG_NAME;
      END IF;
    END LOOP;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION CF_SET_PARAFORMULA RETURN VARCHAR2 IS
  BEGIN
    SELECT
      SUBSTR(USER
            ,1
            ,10)
    INTO
      CP_PARA
    FROM
      DUAL;
    RETURN (CP_PARA);
  END CF_SET_PARAFORMULA;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    P_FROM_DATE_1 := TO_CHAR(TO_DATE(P_FROM_DATE
                                  ,'YYYY/MM/DD HH24:MI:SS')
                          ,'DD-MON-YYYY');
    P_TO_DATE_1 := TO_CHAR(TO_DATE(P_TO_DATE
                                ,'YYYY/MM/DD HH24:MI:SS')
                        ,'DD-MON-YYYY');
    P_FROM := P_FROM_DATE_1;
    P_TO := P_TO_DATE_1;
    SELECT
      CP.USER_CONCURRENT_PROGRAM_NAME
    INTO
      REPORT_SHORT_NAME2
    FROM
      FND_CONCURRENT_PROGRAMS_VL CP,
      FND_CONCURRENT_REQUESTS CR
    WHERE CR.REQUEST_ID = FND_GLOBAL.conc_request_id
      AND CP.APPLICATION_ID = CR.PROGRAM_APPLICATION_ID
      AND CP.CONCURRENT_PROGRAM_ID = CR.CONCURRENT_PROGRAM_ID;
      REPORT_SHORT_NAME2 := substr(REPORT_SHORT_NAME2,1,instr(REPORT_SHORT_NAME2,' (XML)'));
RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION BAL_CCYFORMULA(COMPANY_CODE IN VARCHAR2
                         ,ACCT_NUM IN VARCHAR2) RETURN CHAR IS
    L_CCY VARCHAR2(15);
  BEGIN
    SELECT
      DISTINCT
      CURRENCY
    INTO
      L_CCY
    FROM
      XTR_BANK_ACCOUNTS
    WHERE PARTY_CODE = COMPANY_CODE
      AND ACCOUNT_NUMBER = ACCT_NUM;
    RETURN (L_CCY);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END BAL_CCYFORMULA;

  FUNCTION CP_PARA_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARA;
  END CP_PARA_P;

END XTR_XTRIGINS_XMLP_PKG;


/
