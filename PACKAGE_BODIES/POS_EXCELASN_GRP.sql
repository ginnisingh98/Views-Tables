--------------------------------------------------------
--  DDL for Package Body POS_EXCELASN_GRP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."POS_EXCELASN_GRP" AS
/* $Header: POSGEXAB.pls 120.1 2005/07/21 04:42:42 bgopired noship $ */

procedure ValidateAndSave_Records(	p_api_version in number,
									x_return_status out NOCOPY varchar2,
									p_file_name in varchar2,
									p_headers_tbl in POS_EXCELASN_HEADER_TABLE,
									p_lines_tbl in POS_EXCELASN_LINE_TABLE,
									p_lots_tbl in out NOCOPY POS_EXCELASN_LOT_TABLE,
									p_serials_tbl in out NOCOPY POS_EXCELASN_SERIAL_TABLE,
									p_lpns_tbl in out NOCOPY POS_EXCELASN_LPN_TABLE,
									x_group_id out NOCOPY number,
									x_return_code out NOCOPY varchar2,
									x_return_msg out NOCOPY varchar2,
									x_error_tbl out NOCOPY POS_EXCELASN_ERROR_TABLE )
IS
l_vendor_id number;
BEGIN

	select rcv_interface_groups_s.nextval into x_group_id from dual;
	forall i in 1..p_headers_tbl.header_id.count
		insert into pos_exasn_headers(
								lpn_group_id,
								header_interface_id,
								group_id,
								Header_id		,
								Shipment_Number 		,
								Shipment_Date		,
								Expected_Receipt_Date	,
								Bill_of_Lading		,
								Packing_Slip		,
								Freight_Carrier_Code	,
								Num_of_containers	,
								Waybill_Num		,
								Gross_weight_UOM		,
								Gross_Weight		,
								Net_Weight_UOM		,
								Net_Weight		,
								Tar_weight_UOM		,
								Tar_weight		,
								Packaging_code		,
								Carrier_Method		,
								Special_handling_code	,
								Hazard_code		,
								Hazard_Class		,
								Freight_Terms		,
								Comments ,
								Invoice_Number		,
								Invoice_Date 		,
								Invoice_Amount		,
								Tax_Amount			,
								Freight_Amount		,
								Payment_Terms		,
								LINE_NUMBER 		,
								attribute_category			,
                                ship_from_location_code,
								attribute1			,
								attribute2			,
								attribute3			,
								attribute4			,
								attribute5			,
								attribute6			,
								attribute7			,
								attribute8			,
								attribute9			,
								attribute10			,
								attribute11			,
								attribute12			,
								attribute13			,
								attribute14			,
								attribute15			)
		values (
								rcv_interface_groups_s.nextval,
								rcv_headers_interface_s.nextval,
								x_group_id,
								p_headers_tbl.Header_id(i)		,
								p_headers_tbl.Shipment_Number(i) 		,
								p_headers_tbl.Shipment_Date(i)		,
								p_headers_tbl.Expected_Receipt_Date(i)	,
								p_headers_tbl.Bill_of_Lading(i)		,
								p_headers_tbl.Packing_Slip(i)		,
								p_headers_tbl.Freight_Carrier_Code(i)	,
								p_headers_tbl.Num_of_containers(i)	,
								p_headers_tbl.Waybill_Num(i)		,
								p_headers_tbl.Gross_weight_UOM(i)		,
								p_headers_tbl.Gross_Weight(i)		,
								p_headers_tbl.Net_Weight_UOM(i)		,
								p_headers_tbl.Net_Weight(i)		,
								p_headers_tbl.Tar_weight_UOM(i)		,
								p_headers_tbl.Tar_weight(i)		,
								p_headers_tbl.Packaging_code(i)		,
								p_headers_tbl.Carrier_Method(i)		,
								p_headers_tbl.Special_handling_code(i)	,
								p_headers_tbl.Hazard_code(i)		,
								p_headers_tbl.Hazard_Class(i)		,
								p_headers_tbl.Freight_Terms(i)		,
								p_headers_tbl.Comments(i) ,
								p_headers_tbl.Invoice_Number(i)		,
								p_headers_tbl.Invoice_Date(i) 		,
								p_headers_tbl.Invoice_Amount(i)		,
								p_headers_tbl.Tax_Amount(i)			,
								p_headers_tbl.Freight_Amount(i)		,
								p_headers_tbl.Payment_Terms(i)		,
								p_headers_tbl.LINE_NUMBER(i) 		,
								p_headers_tbl.attribute_category(i)			,
                                p_headers_tbl.ship_from_location_code(i),
								p_headers_tbl.attribute1(i),
								p_headers_tbl.attribute2(i),
								p_headers_tbl.attribute3(i),
								p_headers_tbl.attribute4(i),
								p_headers_tbl.attribute5(i),
								p_headers_tbl.attribute6(i),
								p_headers_tbl.attribute7(i),
								p_headers_tbl.attribute8(i),
								p_headers_tbl.attribute9(i),
								p_headers_tbl.attribute10(i),
								p_headers_tbl.attribute11(i),
								p_headers_tbl.attribute12(i),
								p_headers_tbl.attribute13(i),
								p_headers_tbl.attribute14(i),
								p_headers_tbl.attribute15(i)

	);

	forall i in 1..p_lines_tbl.header_id.count
		insert into pos_exasn_lines(
								interface_transaction_id,
							  	Header_ID,
							 	Line_ID,
							 	Operating_Unit,
							 	PO_Number,
							 	PO_Revision,
							 	PO_Release_Num,
							 	PO_Line,
							 	PO_Shipment,
							 	Quantity,
							 	UOM,
							 	Bill_of_Lading,
							 	Packing_Slip,
							 	Num_of_containers,
							 	Waybill_Num,
							 	Barcode_label,
							 	Country_of_Origin,
							 	Container_number,
							 	Truck_number,
							 	Vendor_lot,
							 	Comments,
							 	LINE_NUMBER,
							 	attribute_category,
								attribute1,
								attribute2,
								attribute3,
								attribute4,
								attribute5,
								attribute6,
								attribute7,
								attribute8,
								attribute9,
								attribute10,
								attribute11,
								attribute12,
								attribute13,
								attribute14,
								attribute15,
								sh_attribute_category,
								sh_attribute1,
								sh_attribute2,
								sh_attribute3,
								sh_attribute4,
								sh_attribute5,
								sh_attribute6,
								sh_attribute7,
								sh_attribute8,
								sh_attribute9,
								sh_attribute10,
								sh_attribute11,
								sh_attribute12,
								sh_attribute13,
								sh_attribute14,
								sh_attribute15,
								sl_attribute_category,
								sl_attribute1,
								sl_attribute2,
								sl_attribute3,
								sl_attribute4,
								sl_attribute5,
								sl_attribute6,
								sl_attribute7,
								sl_attribute8,
								sl_attribute9,
								sl_attribute10,
								sl_attribute11,
								sl_attribute12,
								sl_attribute13,
								sl_attribute14,
								sl_attribute15
		)
		values(
								rcv_transactions_interface_s.nextval,
								p_lines_tbl.Header_ID(i),
								p_lines_tbl.Line_ID(i),
								p_lines_tbl.Operating_Unit(i),
								p_lines_tbl.PO_Number(i),
								p_lines_tbl.PO_Revision(i),
								p_lines_tbl.PO_Release_Num(i),
								p_lines_tbl.PO_Line(i),
								p_lines_tbl.PO_Shipment(i),
								p_lines_tbl.Quantity(i),
								p_lines_tbl.UOM(i),
								p_lines_tbl.Bill_of_Lading(i),
								p_lines_tbl.Packing_Slip(i),
								p_lines_tbl.Num_of_containers(i),
								p_lines_tbl.Waybill_Num(i),
								p_lines_tbl.Barcode_label(i),
								p_lines_tbl.Country_of_Origin(i),
								p_lines_tbl.Container_number(i),
								p_lines_tbl.Truck_number(i),
								p_lines_tbl.Vendor_lot(i),
								p_lines_tbl.Comments(i),
								p_lines_tbl.LINE_NUMBER(i),
								p_lines_tbl.attribute_category(i),
								p_lines_tbl.attribute1(i),
								p_lines_tbl.attribute2(i),
								p_lines_tbl.attribute3(i),
								p_lines_tbl.attribute4(i),
								p_lines_tbl.attribute5(i),
								p_lines_tbl.attribute6(i),
								p_lines_tbl.attribute7(i),
								p_lines_tbl.attribute8(i),
								p_lines_tbl.attribute9(i),
								p_lines_tbl.attribute10(i),
								p_lines_tbl.attribute11(i),
								p_lines_tbl.attribute12(i),
								p_lines_tbl.attribute13(i),
								p_lines_tbl.attribute14(i),
								p_lines_tbl.attribute15(i),
								p_lines_tbl.sh_attribute_category(i),
								p_lines_tbl.sh_attribute1(i),
								p_lines_tbl.sh_attribute2(i),
								p_lines_tbl.sh_attribute3(i),
								p_lines_tbl.sh_attribute4(i),
								p_lines_tbl.sh_attribute5(i),
								p_lines_tbl.sh_attribute6(i),
								p_lines_tbl.sh_attribute7(i),
								p_lines_tbl.sh_attribute8(i),
								p_lines_tbl.sh_attribute9(i),
								p_lines_tbl.sh_attribute10(i),
								p_lines_tbl.sh_attribute11(i),
								p_lines_tbl.sh_attribute12(i),
								p_lines_tbl.sh_attribute13(i),
								p_lines_tbl.sh_attribute14(i),
								p_lines_tbl.sh_attribute15(i),
								p_lines_tbl.sl_attribute_category(i),
								p_lines_tbl.sl_attribute1(i),
								p_lines_tbl.sl_attribute2(i),
								p_lines_tbl.sl_attribute3(i),
								p_lines_tbl.sl_attribute4(i),
								p_lines_tbl.sl_attribute5(i),
								p_lines_tbl.sl_attribute6(i),
								p_lines_tbl.sl_attribute7(i),
								p_lines_tbl.sl_attribute8(i),
								p_lines_tbl.sl_attribute9(i),
								p_lines_tbl.sl_attribute10(i),
								p_lines_tbl.sl_attribute11(i),
								p_lines_tbl.sl_attribute12(i),
								p_lines_tbl.sl_attribute13(i),
								p_lines_tbl.sl_attribute14(i),
								p_lines_tbl.sl_attribute15(i)
		);
	forall i in 1..p_lots_tbl.header_id.count
		insert into pos_exasn_lots(
			  	Header_ID,
			 	Line_ID,
			 	Lot_ID,
			 	Lot_Number,
			 	License_Plate_Number,
			 	Quantity,
			 	LINE_NUMBER	,
				Vendor_ID,
				Grade_Code,
			    	Status_ID,
				Change_Date,
				Age,
			    	Retest_Date,
			    	Maturity_Date,
				Item_Size,
			    	Color,
				Volume,
			    	Volume_UOM,
			    	Place_Of_Origin,
			    	Best_By_Date,
				Length,
			    	Length_UOM,
			    	Recycled_Content,
			    	Thickness,
			    	Thickness_UOM,
			    	Width,
				Width_UOM,
			    	Curl_Wrinkle_Fold,
			    	Supplier_Lot_Number,
			    	Territory_Code,
				Vendor_Name,
			 	lot_attribute_category,
				cattribute1,
				cattribute2,
				cattribute3,
				cattribute4,
				cattribute5,
				cattribute6,
				cattribute7,
				cattribute8,
				cattribute9,
				cattribute10,
				cattribute11,
				cattribute12,
				cattribute13,
				cattribute14,
				cattribute15,
				cattribute16,
				cattribute17,
				cattribute18,
				cattribute19,
				cattribute20,
				dattribute1,
				dattribute2,
				dattribute3,
				dattribute4,
				dattribute5,
				dattribute6,
				dattribute7,
				dattribute8,
				dattribute9,
				dattribute10,
				nattribute1,
				nattribute2,
				nattribute3,
				nattribute4,
				nattribute5,
				nattribute6,
				nattribute7,
				nattribute8,
				nattribute9,
				nattribute10
		)
		values(
				p_lots_tbl.Header_ID(i),
				p_lots_tbl.Line_ID(i),
				p_lots_tbl.Lot_ID(i),
				p_lots_tbl.Lot_Number(i),
				p_lots_tbl.License_Plate_Number(i),
				p_lots_tbl.Quantity(i),
				p_lots_tbl.LINE_NUMBER(i),
				p_lots_tbl.Vendor_ID(i),
				P_lots_tbl.Grade_Code(i),
				p_lots_tbl.Status_ID(i),
				p_lots_tbl.Change_Date(i),
				p_lots_tbl.Age(i),
				p_lots_tbl.Retest_Date(i),
				p_lots_tbl.Maturity_Date(i),
				p_lots_tbl.Item_Size(i),
				p_lots_tbl.Color(i),
				p_lots_tbl.Volume(i),
				p_lots_tbl.Volume_UOM(i),
				p_lots_tbl.Place_Of_Origin(i),
				p_lots_tbl.Best_By_Date(i),
				p_lots_tbl.Length(i),
				p_lots_tbl.Length_UOM(i),
				p_lots_tbl.Recycled_Content(i),
				p_lots_tbl.Thickness(i),
				p_lots_tbl.Thickness_UOM(i),
				p_lots_tbl.Width(i),
				p_lots_tbl.Width_UOM(i),
				p_lots_tbl.Curl_Wrinkle_Fold(i),
				p_lots_tbl.Supplier_Lot_Number(i),
				p_lots_tbl.Territory_Code(i),
				p_lots_tbl.Vendor_Name(i),
				p_lots_tbl.lot_attribute_category(i),
				p_lots_tbl.cattribute1(i),
				p_lots_tbl.cattribute2(i),
				p_lots_tbl.cattribute3(i),
				p_lots_tbl.cattribute4(i),
				p_lots_tbl.cattribute5(i),
				p_lots_tbl.cattribute6(i),
				p_lots_tbl.cattribute7(i),
				p_lots_tbl.cattribute8(i),
				p_lots_tbl.cattribute9(i),
				p_lots_tbl.cattribute10(i),
				p_lots_tbl.cattribute11(i),
				p_lots_tbl.cattribute12(i),
				p_lots_tbl.cattribute13(i),
				p_lots_tbl.cattribute14(i),
				p_lots_tbl.cattribute15(i),
				p_lots_tbl.cattribute16(i),
				p_lots_tbl.cattribute17(i),
				p_lots_tbl.cattribute18(i),
				p_lots_tbl.cattribute19(i),
				p_lots_tbl.cattribute20(i),
				p_lots_tbl.dattribute1(i),
				p_lots_tbl.dattribute2(i),
				p_lots_tbl.dattribute3(i),
				p_lots_tbl.dattribute4(i),
				p_lots_tbl.dattribute5(i),
				p_lots_tbl.dattribute6(i),
				p_lots_tbl.dattribute7(i),
				p_lots_tbl.dattribute8(i),
				p_lots_tbl.dattribute9(i),
				p_lots_tbl.dattribute10(i),
				p_lots_tbl.nattribute1(i),
				p_lots_tbl.nattribute2(i),
				p_lots_tbl.nattribute3(i),
				p_lots_tbl.nattribute4(i),
				p_lots_tbl.nattribute5(i),
				p_lots_tbl.nattribute6(i),
				p_lots_tbl.nattribute7(i),
				p_lots_tbl.nattribute8(i),
				p_lots_tbl.nattribute9(i),
				p_lots_tbl.nattribute10(i)
		);
	forall i in 1..p_serials_tbl.header_id.count
		insert into pos_exasn_serials(
			  	Header_ID,
			 	Line_ID,
			 	Lot_ID,
			 	Serial_ID,
			 	From_Serial,
			 	To_Serial,
			 	License_Plate_Number,
			 	Quantity,
			 	LINE_NUMBER,
				Origination_Date,
				Status_ID,
				Territory_Code,
			 	serial_attribute_category,
				cattribute1,
				cattribute2,
				cattribute3,
				cattribute4,
				cattribute5,
				cattribute6,
				cattribute7,
				cattribute8,
				cattribute9,
				cattribute10,
				cattribute11,
				cattribute12,
				cattribute13,
				cattribute14,
				cattribute15,
				cattribute16,
				cattribute17,
				cattribute18,
				cattribute19,
				cattribute20,
				dattribute1,
				dattribute2,
				dattribute3,
				dattribute4,
				dattribute5,
				dattribute6,
				dattribute7,
				dattribute8,
				dattribute9,
				dattribute10,
				nattribute1,
				nattribute2,
				nattribute3,
				nattribute4,
				nattribute5,
				nattribute6,
				nattribute7,
				nattribute8,
				nattribute9,
				nattribute10
		)
		values(
				p_serials_tbl.Header_ID(i),
				p_serials_tbl.Line_ID(i),
				p_serials_tbl.Lot_ID(i),
				p_serials_tbl.Serial_ID(i),
				p_serials_tbl.From_Serial(i),
				p_serials_tbl.To_Serial(i),
				p_serials_tbl.License_Plate_Number(i),
				p_serials_tbl.Quantity(i),
				p_serials_tbl.LINE_NUMBER(i),
				p_serials_tbl.Origination_Date(i),
				p_serials_tbl.Status_ID(i),
				p_serials_tbl.Territory_Code(i),
				p_serials_tbl.serial_attribute_category(i),
				p_serials_tbl.cattribute1(i),
				p_serials_tbl.cattribute2(i),
				p_serials_tbl.cattribute3(i),
				p_serials_tbl.cattribute4(i),
				p_serials_tbl.cattribute5(i),
				p_serials_tbl.cattribute6(i),
				p_serials_tbl.cattribute7(i),
				p_serials_tbl.cattribute8(i),
				p_serials_tbl.cattribute9(i),
				p_serials_tbl.cattribute10(i),
				p_serials_tbl.cattribute11(i),
				p_serials_tbl.cattribute12(i),
				p_serials_tbl.cattribute13(i),
				p_serials_tbl.cattribute14(i),
				p_serials_tbl.cattribute15(i),
				p_serials_tbl.cattribute16(i),
				p_serials_tbl.cattribute17(i),
				p_serials_tbl.cattribute18(i),
				p_serials_tbl.cattribute19(i),
				p_serials_tbl.cattribute20(i),
				p_serials_tbl.dattribute1(i),
				p_serials_tbl.dattribute2(i),
				p_serials_tbl.dattribute3(i),
				p_serials_tbl.dattribute4(i),
				p_serials_tbl.dattribute5(i),
				p_serials_tbl.dattribute6(i),
				p_serials_tbl.dattribute7(i),
				p_serials_tbl.dattribute8(i),
				p_serials_tbl.dattribute9(i),
				p_serials_tbl.dattribute10(i),
				p_serials_tbl.nattribute1(i),
				p_serials_tbl.nattribute2(i),
				p_serials_tbl.nattribute3(i),
				p_serials_tbl.nattribute4(i),
				p_serials_tbl.nattribute5(i),
				p_serials_tbl.nattribute6(i),
				p_serials_tbl.nattribute7(i),
				p_serials_tbl.nattribute8(i),
				p_serials_tbl.nattribute9(i),
				p_serials_tbl.nattribute10(i)
		);

	forall i in 1..p_lpns_tbl.header_id.count
		insert into pos_exasn_lpns(
			  	Header_ID,
			 	Line_ID,
			 	Lpn_row_ID,
			 	License_Plate_Number,
			 	Parent_LPN,
			 	Quantity,
			 	Line_Number
		)
		values(
			  	p_lpns_tbl.Header_ID(i),
			 	p_lpns_tbl.Line_ID(i),
			 	p_lpns_tbl.Lpn_row_ID(i),
			 	p_lpns_tbl.License_Plate_Number(i),
			 	p_lpns_tbl.Parent_LPN(i),
			 	p_lpns_tbl.Quantity(i),
			 	p_lpns_tbl.Line_Number(i)

		);


	Pos_ExcelAsn_PVT.ProcessExcelAsn(p_api_version => 1.0,
							x_return_status => x_return_status,
							x_return_code => x_return_code,
							x_return_msg => x_return_msg,
							x_error_tbl => x_error_tbl,
							x_user_vendor_id => l_vendor_id);

	if(x_return_status = FND_API.G_RET_STS_SUCCESS) then
		insert into pos_asn_load(group_id,file_name,creation_date,created_by,vendor_id)
		values(x_group_id,p_file_name,sysdate,fnd_global.user_id,l_vendor_id);
	end if;
--	x_return_status := 'S'; --furia
exception when others then
	x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
	x_return_msg := 'Unexpected error in ValidateAndSave_Records:'||sqlerrm;
END ValidateAndSave_Records;

END Pos_ExcelAsn_GRP;

/
