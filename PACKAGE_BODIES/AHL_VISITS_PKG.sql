--------------------------------------------------------
--  DDL for Package Body AHL_VISITS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AHL_VISITS_PKG" as
/* $Header: AHLLVSTB.pls 120.1.12010000.3 2010/03/05 06:38:42 skpathak ship $ */
-- New internal procedure added by skpathak on 17-FEB-2009 for bug 8223329
-- Catch the dup_val_on_index exception and re-insert with current maximum + 1 for visit_number
procedure INTERNAL_INSERT_B_ROW (
  X_ESTIMATED_PRICE in NUMBER,
  X_PRIORITY_CODE in VARCHAR2,
  X_PROJECT_TEMPLATE_ID in NUMBER,
  X_UNIT_SCHEDULE_ID in NUMBER,
  X_ACTUAL_PRICE in NUMBER,
  X_OUTSIDE_PARTY_FLAG in VARCHAR2,
  X_ANY_TASK_CHG_FLAG in VARCHAR2,
  X_PRICE_LIST_ID in NUMBER,
  X_CLOSE_DATE_TIME in DATE,
  X_SCHEDULE_DESIGNATOR in VARCHAR2,
  X_SERVICE_REQUEST_ID in NUMBER,
  X_SPACE_CATEGORY_CODE in VARCHAR2,
  X_VISIT_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_DEPARTMENT_ID in NUMBER,
  X_STATUS_CODE in VARCHAR2,
  X_START_DATE_TIME in DATE,
  X_VISIT_TYPE_CODE in VARCHAR2,
  X_SIMULATION_PLAN_ID in NUMBER,
  X_ITEM_INSTANCE_ID in NUMBER,
  X_INVENTORY_ITEM_ID in NUMBER,
  X_ASSO_PRIMARY_VISIT_ID in NUMBER,
  X_SIMULATION_DELETE_FLAG in VARCHAR2,
  X_TEMPLATE_FLAG in VARCHAR2,
  X_OUT_OF_SYNC_FLAG in VARCHAR2,
  X_PROJECT_FLAG in VARCHAR2,
  X_PROJECT_ID in NUMBER,
  X_VISIT_NUMBER in NUMBER,
  X_ITEM_ORGANIZATION_ID in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_INV_LOCATOR_ID in NUMBER,  --Added by sowsubra
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
-- SKPATHAK :: Bug #9171735 :: 02-MAR-2010
-- Added three local variables
l_count NUMBER;
l_visit_number NUMBER;
L_MAX_RETRIES NUMBER;
begin
  L_MAX_RETRIES   := 50;
  l_count         := 0;
  l_visit_number  := X_VISIT_NUMBER;
  -- SKPATHAK :: Bug #9171735 :: 02-MAR-2010
  -- Call insert statement in a loop, till either DUP_VAL_ON_INDEX is not thrown or l_count < L_MAX_RETRIES
  WHILE l_count < L_MAX_RETRIES LOOP
    begin
      insert into AHL_VISITS_B (
        ESTIMATED_PRICE,
        PRIORITY_CODE,
        PROJECT_TEMPLATE_ID,
        UNIT_SCHEDULE_ID,
        ACTUAL_PRICE,
        OUTSIDE_PARTY_FLAG,
        ANY_TASK_CHG_FLAG,
        PRICE_LIST_ID,
        CLOSE_DATE_TIME,
        SCHEDULE_DESIGNATOR,
        SERVICE_REQUEST_ID,
        SPACE_CATEGORY_CODE,
        VISIT_ID,
        OBJECT_VERSION_NUMBER,
        ORGANIZATION_ID,
        DEPARTMENT_ID,
        STATUS_CODE,
        START_DATE_TIME,
        VISIT_TYPE_CODE,
        SIMULATION_PLAN_ID,
        ITEM_INSTANCE_ID,
        INVENTORY_ITEM_ID,
        ASSO_PRIMARY_VISIT_ID,
        SIMULATION_DELETE_FLAG,
        TEMPLATE_FLAG,
        OUT_OF_SYNC_FLAG,
        PROJECT_FLAG,
        PROJECT_ID,
        VISIT_NUMBER,
        ITEM_ORGANIZATION_ID,
        INV_LOCATOR_ID,  --Added by sowsubra
        ATTRIBUTE_CATEGORY,
        ATTRIBUTE1,
        ATTRIBUTE2,
        ATTRIBUTE3,
        ATTRIBUTE4,
        ATTRIBUTE5,
        ATTRIBUTE6,
        ATTRIBUTE7,
        ATTRIBUTE8,
        ATTRIBUTE9,
        ATTRIBUTE10,
        ATTRIBUTE11,
        ATTRIBUTE12,
        ATTRIBUTE13,
        ATTRIBUTE14,
        ATTRIBUTE15,
        CREATION_DATE,
        CREATED_BY,
        LAST_UPDATE_DATE,
        LAST_UPDATED_BY,
        LAST_UPDATE_LOGIN
      ) values (
        X_ESTIMATED_PRICE,
        X_PRIORITY_CODE,
        X_PROJECT_TEMPLATE_ID,
        X_UNIT_SCHEDULE_ID,
        X_ACTUAL_PRICE,
        X_OUTSIDE_PARTY_FLAG,
        X_ANY_TASK_CHG_FLAG,
        X_PRICE_LIST_ID,
        X_CLOSE_DATE_TIME,
        X_SCHEDULE_DESIGNATOR,
        X_SERVICE_REQUEST_ID,
        X_SPACE_CATEGORY_CODE,
        X_VISIT_ID,
        X_OBJECT_VERSION_NUMBER,
        X_ORGANIZATION_ID,
        X_DEPARTMENT_ID,
        X_STATUS_CODE,
        X_START_DATE_TIME,
        X_VISIT_TYPE_CODE,
        X_SIMULATION_PLAN_ID,
        X_ITEM_INSTANCE_ID,
        X_INVENTORY_ITEM_ID,
        X_ASSO_PRIMARY_VISIT_ID,
        X_SIMULATION_DELETE_FLAG,
        X_TEMPLATE_FLAG,
        X_OUT_OF_SYNC_FLAG,
        X_PROJECT_FLAG,
        X_PROJECT_ID,
        L_VISIT_NUMBER,  --Changed for bug #9171735 by skpathak
        X_ITEM_ORGANIZATION_ID,
        X_INV_LOCATOR_ID, --Added by sowsubra
        X_ATTRIBUTE_CATEGORY,
        X_ATTRIBUTE1,
        X_ATTRIBUTE2,
        X_ATTRIBUTE3,
        X_ATTRIBUTE4,
        X_ATTRIBUTE5,
        X_ATTRIBUTE6,
        X_ATTRIBUTE7,
        X_ATTRIBUTE8,
        X_ATTRIBUTE9,
        X_ATTRIBUTE10,
        X_ATTRIBUTE11,
        X_ATTRIBUTE12,
        X_ATTRIBUTE13,
        X_ATTRIBUTE14,
        X_ATTRIBUTE15,
        X_CREATION_DATE,
        X_CREATED_BY,
        X_LAST_UPDATE_DATE,
        X_LAST_UPDATED_BY,
        X_LAST_UPDATE_LOGIN
      );
      -- Exit the while loop if the above insert is successful
      EXIT;
      -- If the insert is not successful catch DUP_VAL_ON_INDEX and increment the l_count by 1
      -- Also fetch the current maximum visit number +1 into the local variable l_visit_number
      EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN
          -- If l_count is L_MAX_RETRIES - 1 and still there is this exception,
          -- no more retries are permitted, so raise the exception DUP_VAL_ON_INDEX
          IF (l_count = L_MAX_RETRIES - 1) THEN
            RAISE DUP_VAL_ON_INDEX;
          END IF;
          l_count := l_count + 1;
          select MAX(visit_number) + 1 INTO l_visit_number FROM Ahl_Visits_B;
    END;  -- Nested block with Exception Handler
  END LOOP;
END INTERNAL_INSERT_B_ROW;

--------------------

procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_VISIT_ID in NUMBER,
  X_ESTIMATED_PRICE in NUMBER,
  X_PRIORITY_CODE in VARCHAR2,
  X_PROJECT_TEMPLATE_ID in NUMBER,
  X_UNIT_SCHEDULE_ID in NUMBER,
  X_ACTUAL_PRICE in NUMBER,
  X_OUTSIDE_PARTY_FLAG in VARCHAR2,
  X_ANY_TASK_CHG_FLAG in VARCHAR2,
  X_PRICE_LIST_ID in NUMBER,
  X_CLOSE_DATE_TIME in DATE,
  X_SCHEDULE_DESIGNATOR in VARCHAR2,
  X_SERVICE_REQUEST_ID in NUMBER,
  X_SPACE_CATEGORY_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_DEPARTMENT_ID in NUMBER,
  X_STATUS_CODE in VARCHAR2,
  X_START_DATE_TIME in DATE,
  X_VISIT_TYPE_CODE in VARCHAR2,
  X_SIMULATION_PLAN_ID in NUMBER,
  X_ITEM_INSTANCE_ID in NUMBER,
  X_INVENTORY_ITEM_ID in NUMBER,
  X_ASSO_PRIMARY_VISIT_ID in NUMBER,
  X_SIMULATION_DELETE_FLAG in VARCHAR2,
  X_TEMPLATE_FLAG in VARCHAR2,
  X_OUT_OF_SYNC_FLAG in VARCHAR2,
  X_PROJECT_FLAG in VARCHAR2,
  X_PROJECT_ID in NUMBER,
  X_VISIT_NUMBER in NUMBER,
  X_ITEM_ORGANIZATION_ID in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_VISIT_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_INV_LOCATOR_ID in NUMBER,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from AHL_VISITS_B
    where VISIT_ID = X_VISIT_ID
    ;
begin
  -- Changed by skpathak on 17-FEB-2009 for bug 8223329
  -- Call the new internal procedure to insert into AHL_VISITS_B
  INTERNAL_INSERT_B_ROW (
    X_ESTIMATED_PRICE,
    X_PRIORITY_CODE,
    X_PROJECT_TEMPLATE_ID,
    X_UNIT_SCHEDULE_ID,
    X_ACTUAL_PRICE,
    X_OUTSIDE_PARTY_FLAG,
    X_ANY_TASK_CHG_FLAG,
    X_PRICE_LIST_ID,
    X_CLOSE_DATE_TIME,
    X_SCHEDULE_DESIGNATOR,
    X_SERVICE_REQUEST_ID,
    X_SPACE_CATEGORY_CODE,
    X_VISIT_ID,
    X_OBJECT_VERSION_NUMBER,
    X_ORGANIZATION_ID,
    X_DEPARTMENT_ID,
    X_STATUS_CODE,
    X_START_DATE_TIME,
    X_VISIT_TYPE_CODE,
    X_SIMULATION_PLAN_ID,
    X_ITEM_INSTANCE_ID,
    X_INVENTORY_ITEM_ID,
    X_ASSO_PRIMARY_VISIT_ID,
    X_SIMULATION_DELETE_FLAG,
    X_TEMPLATE_FLAG,
    X_OUT_OF_SYNC_FLAG,
    X_PROJECT_FLAG,
    X_PROJECT_ID,
    X_VISIT_NUMBER,
    X_ITEM_ORGANIZATION_ID,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_INV_LOCATOR_ID,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  insert into AHL_VISITS_TL (
    VISIT_ID,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_LOGIN,
    DESCRIPTION,
    VISIT_NAME,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_VISIT_ID,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_DESCRIPTION,
    X_VISIT_NAME,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from AHL_VISITS_TL T
    where T.VISIT_ID = X_VISIT_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_VISIT_ID in NUMBER,
  X_ESTIMATED_PRICE in NUMBER,
  X_PRIORITY_CODE in VARCHAR2,
  X_PROJECT_TEMPLATE_ID in NUMBER,
  X_UNIT_SCHEDULE_ID in NUMBER,
  X_ACTUAL_PRICE in NUMBER,
  X_OUTSIDE_PARTY_FLAG in VARCHAR2,
  X_ANY_TASK_CHG_FLAG in VARCHAR2,
  X_PRICE_LIST_ID in NUMBER,
  X_CLOSE_DATE_TIME in DATE,
  X_SCHEDULE_DESIGNATOR in VARCHAR2,
  X_SERVICE_REQUEST_ID in NUMBER,
  X_SPACE_CATEGORY_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_DEPARTMENT_ID in NUMBER,
  X_STATUS_CODE in VARCHAR2,
  X_START_DATE_TIME in DATE,
  X_VISIT_TYPE_CODE in VARCHAR2,
  X_SIMULATION_PLAN_ID in NUMBER,
  X_ITEM_INSTANCE_ID in NUMBER,
  X_INVENTORY_ITEM_ID in NUMBER,
  X_ASSO_PRIMARY_VISIT_ID in NUMBER,
  X_SIMULATION_DELETE_FLAG in VARCHAR2,
  X_TEMPLATE_FLAG in VARCHAR2,
  X_OUT_OF_SYNC_FLAG in VARCHAR2,
  X_PROJECT_FLAG in VARCHAR2,
  X_PROJECT_ID in NUMBER,
  X_VISIT_NUMBER in NUMBER,
  X_ITEM_ORGANIZATION_ID in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_VISIT_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_INV_LOCATOR_ID in NUMBER --Added by sowsubra
) is
  cursor c is select
      ESTIMATED_PRICE,
      PRIORITY_CODE,
      PROJECT_TEMPLATE_ID,
      UNIT_SCHEDULE_ID,
      ACTUAL_PRICE,
      OUTSIDE_PARTY_FLAG,
      ANY_TASK_CHG_FLAG,
      PRICE_LIST_ID,
      CLOSE_DATE_TIME,
      SCHEDULE_DESIGNATOR,
      SERVICE_REQUEST_ID,
      SPACE_CATEGORY_CODE,
      OBJECT_VERSION_NUMBER,
      ORGANIZATION_ID,
      DEPARTMENT_ID,
      STATUS_CODE,
      START_DATE_TIME,
      VISIT_TYPE_CODE,
      SIMULATION_PLAN_ID,
      ITEM_INSTANCE_ID,
      INVENTORY_ITEM_ID,
      ASSO_PRIMARY_VISIT_ID,
      SIMULATION_DELETE_FLAG,
      TEMPLATE_FLAG,
      OUT_OF_SYNC_FLAG,
      PROJECT_FLAG,
      PROJECT_ID,
      VISIT_NUMBER,
      ITEM_ORGANIZATION_ID,
      INV_LOCATOR_ID,   --Added by sowsubra
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15
    from AHL_VISITS_B
    where VISIT_ID = X_VISIT_ID
    for update of VISIT_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      VISIT_NAME,
      DESCRIPTION,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from AHL_VISITS_TL
    where VISIT_ID = X_VISIT_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of VISIT_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.ESTIMATED_PRICE = X_ESTIMATED_PRICE)
           OR ((recinfo.ESTIMATED_PRICE is null) AND (X_ESTIMATED_PRICE is null)))
           /*sowsubra B5854712*/
      AND ((recinfo.INV_LOCATOR_ID = X_INV_LOCATOR_ID)
           OR ((recinfo.INV_LOCATOR_ID is null) AND (X_INV_LOCATOR_ID is null)))
      AND ((recinfo.PRIORITY_CODE = X_PRIORITY_CODE)
           OR ((recinfo.PRIORITY_CODE is null) AND (X_PRIORITY_CODE is null)))
      AND ((recinfo.PROJECT_TEMPLATE_ID = X_PROJECT_TEMPLATE_ID)
           OR ((recinfo.PROJECT_TEMPLATE_ID is null) AND (X_PROJECT_TEMPLATE_ID is null)))
      AND ((recinfo.UNIT_SCHEDULE_ID = X_UNIT_SCHEDULE_ID)
           OR ((recinfo.UNIT_SCHEDULE_ID is null) AND (X_UNIT_SCHEDULE_ID is null)))
      AND ((recinfo.ACTUAL_PRICE = X_ACTUAL_PRICE)
           OR ((recinfo.ACTUAL_PRICE is null) AND (X_ACTUAL_PRICE is null)))
      AND ((recinfo.OUTSIDE_PARTY_FLAG = X_OUTSIDE_PARTY_FLAG)
           OR ((recinfo.OUTSIDE_PARTY_FLAG is null) AND (X_OUTSIDE_PARTY_FLAG is null)))
      AND ((recinfo.ANY_TASK_CHG_FLAG = X_ANY_TASK_CHG_FLAG)
           OR ((recinfo.ANY_TASK_CHG_FLAG is null) AND (X_ANY_TASK_CHG_FLAG is null)))
      AND ((recinfo.PRICE_LIST_ID = X_PRICE_LIST_ID)
           OR ((recinfo.PRICE_LIST_ID is null) AND (X_PRICE_LIST_ID is null)))
      AND ((recinfo.CLOSE_DATE_TIME = X_CLOSE_DATE_TIME)
           OR ((recinfo.CLOSE_DATE_TIME is null) AND (X_CLOSE_DATE_TIME is null)))
      AND ((recinfo.SCHEDULE_DESIGNATOR = X_SCHEDULE_DESIGNATOR)
           OR ((recinfo.SCHEDULE_DESIGNATOR is null) AND (X_SCHEDULE_DESIGNATOR is null)))
      AND ((recinfo.SERVICE_REQUEST_ID = X_SERVICE_REQUEST_ID)
           OR ((recinfo.SERVICE_REQUEST_ID is null) AND (X_SERVICE_REQUEST_ID is null)))
      AND ((recinfo.SPACE_CATEGORY_CODE = X_SPACE_CATEGORY_CODE)
           OR ((recinfo.SPACE_CATEGORY_CODE is null) AND (X_SPACE_CATEGORY_CODE is null)))
      AND (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
      AND ((recinfo.ORGANIZATION_ID = X_ORGANIZATION_ID)
           OR ((recinfo.ORGANIZATION_ID is null) AND (X_ORGANIZATION_ID is null)))
      AND ((recinfo.DEPARTMENT_ID = X_DEPARTMENT_ID)
           OR ((recinfo.DEPARTMENT_ID is null) AND (X_DEPARTMENT_ID is null)))
      AND ((recinfo.STATUS_CODE = X_STATUS_CODE)
           OR ((recinfo.STATUS_CODE is null) AND (X_STATUS_CODE is null)))
      AND ((recinfo.START_DATE_TIME = X_START_DATE_TIME)
           OR ((recinfo.START_DATE_TIME is null) AND (X_START_DATE_TIME is null)))
      AND ((recinfo.VISIT_TYPE_CODE = X_VISIT_TYPE_CODE)
           OR ((recinfo.VISIT_TYPE_CODE is null) AND (X_VISIT_TYPE_CODE is null)))
      AND ((recinfo.SIMULATION_PLAN_ID = X_SIMULATION_PLAN_ID)
           OR ((recinfo.SIMULATION_PLAN_ID is null) AND (X_SIMULATION_PLAN_ID is null)))
      AND ((recinfo.ITEM_INSTANCE_ID = X_ITEM_INSTANCE_ID)
           OR ((recinfo.ITEM_INSTANCE_ID is null) AND (X_ITEM_INSTANCE_ID is null)))
      AND ((recinfo.INVENTORY_ITEM_ID = X_INVENTORY_ITEM_ID)
           OR ((recinfo.INVENTORY_ITEM_ID is null) AND (X_INVENTORY_ITEM_ID is null)))
      AND ((recinfo.ASSO_PRIMARY_VISIT_ID = X_ASSO_PRIMARY_VISIT_ID)
           OR ((recinfo.ASSO_PRIMARY_VISIT_ID is null) AND (X_ASSO_PRIMARY_VISIT_ID is null)))
      AND ((recinfo.SIMULATION_DELETE_FLAG = X_SIMULATION_DELETE_FLAG)
           OR ((recinfo.SIMULATION_DELETE_FLAG is null) AND (X_SIMULATION_DELETE_FLAG is null)))
      AND (recinfo.TEMPLATE_FLAG = X_TEMPLATE_FLAG)
      AND ((recinfo.OUT_OF_SYNC_FLAG = X_OUT_OF_SYNC_FLAG)
           OR ((recinfo.OUT_OF_SYNC_FLAG is null) AND (X_OUT_OF_SYNC_FLAG is null)))
      AND (recinfo.PROJECT_FLAG = X_PROJECT_FLAG)
      AND ((recinfo.PROJECT_ID = X_PROJECT_ID)
           OR ((recinfo.PROJECT_ID is null) AND (X_PROJECT_ID is null)))
      AND (recinfo.VISIT_NUMBER = X_VISIT_NUMBER)
      AND ((recinfo.ITEM_ORGANIZATION_ID = X_ITEM_ORGANIZATION_ID)
           OR ((recinfo.ITEM_ORGANIZATION_ID is null) AND (X_ITEM_ORGANIZATION_ID is null)))
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    ((tlinfo.VISIT_NAME = X_VISIT_NAME)
               OR ((tlinfo.VISIT_NAME is null) AND (X_VISIT_NAME is null)))
          AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
               OR ((tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_VISIT_ID in NUMBER,
  X_ESTIMATED_PRICE in NUMBER,
  X_PRIORITY_CODE in VARCHAR2,
  X_PROJECT_TEMPLATE_ID in NUMBER,
  X_UNIT_SCHEDULE_ID in NUMBER,
  X_ACTUAL_PRICE in NUMBER,
  X_OUTSIDE_PARTY_FLAG in VARCHAR2,
  X_ANY_TASK_CHG_FLAG in VARCHAR2,
  X_PRICE_LIST_ID in NUMBER,
  X_CLOSE_DATE_TIME in DATE,
  X_SCHEDULE_DESIGNATOR in VARCHAR2,
  X_SERVICE_REQUEST_ID in NUMBER,
  X_SPACE_CATEGORY_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_DEPARTMENT_ID in NUMBER,
  X_STATUS_CODE in VARCHAR2,
  X_START_DATE_TIME in DATE,
  X_VISIT_TYPE_CODE in VARCHAR2,
  X_SIMULATION_PLAN_ID in NUMBER,
  X_ITEM_INSTANCE_ID in NUMBER,
  X_INVENTORY_ITEM_ID in NUMBER,
  X_ASSO_PRIMARY_VISIT_ID in NUMBER,
  X_SIMULATION_DELETE_FLAG in VARCHAR2,
  X_TEMPLATE_FLAG in VARCHAR2,
  X_OUT_OF_SYNC_FLAG in VARCHAR2,
  X_PROJECT_FLAG in VARCHAR2,
  X_PROJECT_ID in NUMBER,
  X_VISIT_NUMBER in NUMBER,
  X_ITEM_ORGANIZATION_ID in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_VISIT_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_INV_LOCATOR_ID in NUMBER,  --Added by sowsubra
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update AHL_VISITS_B set
    ESTIMATED_PRICE = X_ESTIMATED_PRICE,
    PRIORITY_CODE = X_PRIORITY_CODE,
    PROJECT_TEMPLATE_ID = X_PROJECT_TEMPLATE_ID,
    UNIT_SCHEDULE_ID = X_UNIT_SCHEDULE_ID,
    ACTUAL_PRICE = X_ACTUAL_PRICE,
    OUTSIDE_PARTY_FLAG = X_OUTSIDE_PARTY_FLAG,
    ANY_TASK_CHG_FLAG = X_ANY_TASK_CHG_FLAG,
    PRICE_LIST_ID = X_PRICE_LIST_ID,
    CLOSE_DATE_TIME = X_CLOSE_DATE_TIME,
    SCHEDULE_DESIGNATOR = X_SCHEDULE_DESIGNATOR,
    SERVICE_REQUEST_ID = X_SERVICE_REQUEST_ID,
    SPACE_CATEGORY_CODE = X_SPACE_CATEGORY_CODE,
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    ORGANIZATION_ID = X_ORGANIZATION_ID,
    DEPARTMENT_ID = X_DEPARTMENT_ID,
    STATUS_CODE = X_STATUS_CODE,
    START_DATE_TIME = X_START_DATE_TIME,
    VISIT_TYPE_CODE = X_VISIT_TYPE_CODE,
    SIMULATION_PLAN_ID = X_SIMULATION_PLAN_ID,
    ITEM_INSTANCE_ID = X_ITEM_INSTANCE_ID,
    INVENTORY_ITEM_ID = X_INVENTORY_ITEM_ID,
    ASSO_PRIMARY_VISIT_ID = X_ASSO_PRIMARY_VISIT_ID,
    SIMULATION_DELETE_FLAG = X_SIMULATION_DELETE_FLAG,
    TEMPLATE_FLAG = X_TEMPLATE_FLAG,
    OUT_OF_SYNC_FLAG = X_OUT_OF_SYNC_FLAG,
    PROJECT_FLAG = X_PROJECT_FLAG,
    PROJECT_ID = X_PROJECT_ID,
    VISIT_NUMBER = X_VISIT_NUMBER,
    ITEM_ORGANIZATION_ID = X_ITEM_ORGANIZATION_ID,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    INV_LOCATOR_ID = X_INV_LOCATOR_ID, --Added by sowsubra
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where VISIT_ID = X_VISIT_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update AHL_VISITS_TL set
    VISIT_NAME = X_VISIT_NAME,
    DESCRIPTION = X_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where VISIT_ID = X_VISIT_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_VISIT_ID in NUMBER
) is
begin
  delete from AHL_VISITS_TL
  where VISIT_ID = X_VISIT_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from AHL_VISITS_B
  where VISIT_ID = X_VISIT_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from AHL_VISITS_TL T
  where not exists
    (select NULL
    from AHL_VISITS_B B
    where B.VISIT_ID = T.VISIT_ID
    );

  update AHL_VISITS_TL T set (
      VISIT_NAME,
      DESCRIPTION
    ) = (select
      B.VISIT_NAME,
      B.DESCRIPTION
    from AHL_VISITS_TL B
    where B.VISIT_ID = T.VISIT_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.VISIT_ID,
      T.LANGUAGE
  ) in (select
      SUBT.VISIT_ID,
      SUBT.LANGUAGE
    from AHL_VISITS_TL SUBB, AHL_VISITS_TL SUBT
    where SUBB.VISIT_ID = SUBT.VISIT_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.VISIT_NAME <> SUBT.VISIT_NAME
      or (SUBB.VISIT_NAME is null and SUBT.VISIT_NAME is not null)
      or (SUBB.VISIT_NAME is not null and SUBT.VISIT_NAME is null)
      or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
      or (SUBB.DESCRIPTION is null and SUBT.DESCRIPTION is not null)
      or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
  ));

  insert into AHL_VISITS_TL (
    VISIT_ID,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_LOGIN,
    DESCRIPTION,
    VISIT_NAME,
    LANGUAGE,
    SOURCE_LANG
  ) select /*+ ORDERED */
    B.VISIT_ID,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATED_BY,
    B.CREATION_DATE,
    B.CREATED_BY,
    B.LAST_UPDATE_LOGIN,
    B.DESCRIPTION,
    B.VISIT_NAME,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from AHL_VISITS_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from AHL_VISITS_TL T
    where T.VISIT_ID = B.VISIT_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end AHL_VISITS_PKG;

/
