--------------------------------------------------------
--  DDL for Package Body IGW_PROPOSALS_ALL_TBH
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IGW_PROPOSALS_ALL_TBH" as
 /* $Header: igwtbasb.pls 115.9 2002/11/14 18:50:04 vmedikon ship $ */
procedure INSERT_ROW (
  X_ROWID  out NOCOPY rowid,
  X_PROPOSAL_ID in NUMBER,
  X_SPONSOR_ACTION_CODE in VARCHAR2,
  X_SPONSOR_ACTION_DATE in DATE,
  X_AWARD_AMOUNT in NUMBER,
  X_PROPOSAL_NUMBER in VARCHAR2,
  X_LEAD_ORGANIZATION_ID in NUMBER,
  X_PROPOSAL_STATUS in VARCHAR2,
  X_PROPOSAL_START_DATE in DATE,
  X_PROPOSAL_END_DATE in DATE,
  X_PROPOSAL_TITLE in VARCHAR2,
  X_PROPOSAL_TYPE_CODE in VARCHAR2,
  X_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_NUMBER in VARCHAR2,
  X_ORIGINAL_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_START_DATE in DATE,
  X_ORIGINAL_PROPOSAL_END_DATE in DATE,
  X_ACTIVITY_TYPE_CODE in VARCHAR2,
  X_SPONSOR_ID in NUMBER,
  X_FUNDING_SPONSOR_UNIT in VARCHAR2,
  X_ORIGINAL_SPONSOR_ID in NUMBER,
  X_SPONSOR_PROPOSAL_NUMBER in VARCHAR2,
  X_NOTICE_OF_OPPORTUNITY_CODE in VARCHAR2,
  X_PROGRAM_NUMBER in VARCHAR2,
  X_PROGRAM_TITLE in VARCHAR2,
  X_PROGRAM_URL in VARCHAR2,
  X_SUBMITTING_ORGANIZATION_ID in NUMBER,
  X_SIGNING_OFFICIAL_ID in NUMBER,
  X_ADMIN_OFFICIAL_ID in NUMBER,
  X_DEADLINE_DATE in DATE,
  X_DEADLINE_TYPE in VARCHAR2,
  X_LETTER_OF_INTENT_DUE_DATE in DATE,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_MODE in VARCHAR2 default 'R',
  X_RETURN_STATUS   OUT NOCOPY VARCHAR2
  ) is
    cursor C is select ROWID from IGW_PROPOSALS_ALL
    where PROPOSAL_ID = X_PROPOSAL_ID;
    X_LAST_UPDATE_DATE DATE;
    X_LAST_UPDATED_BY NUMBER;
    X_LAST_UPDATE_LOGIN NUMBER;
begin
  x_return_status := FND_API.G_RET_STS_SUCCESS;
  X_LAST_UPDATE_DATE := SYSDATE;
  if(X_MODE = 'I') then
    X_LAST_UPDATED_BY := 1;
    X_LAST_UPDATE_LOGIN := 0;
  elsif (X_MODE = 'R') then
    X_LAST_UPDATED_BY := FND_GLOBAL.USER_ID;
    if X_LAST_UPDATED_BY is NULL then
      X_LAST_UPDATED_BY := -1;
    end if;
    X_LAST_UPDATE_LOGIN :=FND_GLOBAL.LOGIN_ID;
    if X_LAST_UPDATE_LOGIN is NULL then
      X_LAST_UPDATE_LOGIN := -1;
    end if;
  else
    FND_MESSAGE.SET_NAME( 'FND', 'SYSTEM-INVALID ARGS');
    app_exception.raise_exception;
  end if;
  insert into IGW_PROPOSALS_ALL (
    SPONSOR_ACTION_CODE,
    SPONSOR_ACTION_DATE,
    AWARD_AMOUNT,
    PROPOSAL_ID,
    PROPOSAL_NUMBER,
    LEAD_ORGANIZATION_ID,
    PROPOSAL_STATUS,
    PROPOSAL_START_DATE,
    PROPOSAL_END_DATE,
    PROPOSAL_TITLE,
    PROPOSAL_TYPE_CODE,
    AWARD_NUMBER,
    ORIGINAL_PROPOSAL_NUMBER,
    ORIGINAL_AWARD_NUMBER,
    ORIGINAL_PROPOSAL_START_DATE,
    ORIGINAL_PROPOSAL_END_DATE,
    ACTIVITY_TYPE_CODE,
    SPONSOR_ID,
    FUNDING_SPONSOR_UNIT,
    ORIGINAL_SPONSOR_ID,
    SPONSOR_PROPOSAL_NUMBER,
    NOTICE_OF_OPPORTUNITY_CODE,
    PROGRAM_NUMBER,
    PROGRAM_TITLE,
    PROGRAM_URL,
    SUBMITTING_ORGANIZATION_ID,
    SIGNING_OFFICIAL_ID,
    ADMIN_OFFICIAL_ID,
    DEADLINE_DATE,
    DEADLINE_TYPE,
    LETTER_OF_INTENT_DUE_DATE,
    RECORD_VERSION_NUMBER,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_SPONSOR_ACTION_CODE,
    X_SPONSOR_ACTION_DATE,
    X_AWARD_AMOUNT,
    X_PROPOSAL_ID,
    X_PROPOSAL_NUMBER,
    X_LEAD_ORGANIZATION_ID,
    X_PROPOSAL_STATUS,
    X_PROPOSAL_START_DATE,
    X_PROPOSAL_END_DATE,
    X_PROPOSAL_TITLE,
    X_PROPOSAL_TYPE_CODE,
    X_AWARD_NUMBER,
    X_ORIGINAL_PROPOSAL_NUMBER,
    X_ORIGINAL_AWARD_NUMBER,
    X_ORIGINAL_PROPOSAL_START_DATE,
    X_ORIGINAL_PROPOSAL_END_DATE,
    X_ACTIVITY_TYPE_CODE,
    X_SPONSOR_ID,
    X_FUNDING_SPONSOR_UNIT,
    X_ORIGINAL_SPONSOR_ID,
    X_SPONSOR_PROPOSAL_NUMBER,
    X_NOTICE_OF_OPPORTUNITY_CODE,
    X_PROGRAM_NUMBER,
    X_PROGRAM_TITLE,
    X_PROGRAM_URL,
    X_SUBMITTING_ORGANIZATION_ID,
    X_SIGNING_OFFICIAL_ID,
    X_ADMIN_OFFICIAL_ID,
    X_DEADLINE_DATE,
    X_DEADLINE_TYPE,
    X_LETTER_OF_INTENT_DUE_DATE,
    1,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

EXCEPTION
  WHEN OTHERS THEN
    FND_MSG_PUB.add_exc_msg( p_pkg_name    => 'IGW_PROPOSALS_ALL_TBH'
                              ,p_procedure_name => 'INSERT_ROW' );
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
    RAISE;

end INSERT_ROW;

-----------------------------------------------------------------------

procedure UPDATE_ROW (
  X_ROWID in rowid,
  X_PROPOSAL_ID in NUMBER,
  X_SPONSOR_ACTION_CODE in VARCHAR2,
  X_SPONSOR_ACTION_DATE in DATE,
  X_AWARD_AMOUNT in NUMBER,
  X_PROPOSAL_NUMBER in VARCHAR2,
  X_LEAD_ORGANIZATION_ID in NUMBER,
  X_PROPOSAL_STATUS in VARCHAR2,
  X_PROPOSAL_START_DATE in DATE,
  X_PROPOSAL_END_DATE in DATE,
  X_PROPOSAL_TITLE in VARCHAR2,
  X_PROPOSAL_TYPE_CODE in VARCHAR2,
  X_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_NUMBER in VARCHAR2,
  X_ORIGINAL_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_START_DATE in DATE,
  X_ORIGINAL_PROPOSAL_END_DATE in DATE,
  X_ACTIVITY_TYPE_CODE in VARCHAR2,
  X_SPONSOR_ID in NUMBER,
  X_FUNDING_SPONSOR_UNIT in VARCHAR2,
  X_ORIGINAL_SPONSOR_ID in NUMBER,
  X_SPONSOR_PROPOSAL_NUMBER in VARCHAR2,
  --X_NOTICE_OF_OPPORTUNITY_CODE in VARCHAR2,
  --X_PROGRAM_NUMBER in VARCHAR2,
  --X_PROGRAM_TITLE in VARCHAR2,
  --X_PROGRAM_URL in VARCHAR2,
  X_SUBMITTING_ORGANIZATION_ID in NUMBER,
  X_SIGNING_OFFICIAL_ID in NUMBER,
  X_ADMIN_OFFICIAL_ID in NUMBER,
  --X_DEADLINE_DATE in DATE,
  --X_DEADLINE_TYPE in VARCHAR2,
  --X_LETTER_OF_INTENT_DUE_DATE in DATE,
  X_RECORD_VERSION_NUMBER IN NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_MODE        in VARCHAR2 default 'R',
  X_RETURN_STATUS   OUT NOCOPY VARCHAR2
  ) is
    X_LAST_UPDATE_DATE DATE;
    X_LAST_UPDATED_BY NUMBER;
    X_LAST_UPDATE_LOGIN NUMBER;

  l_row_id  ROWID := x_rowid;
  l_record_version_number  NUMBER;

  CURSOR get_row_id IS
  SELECT rowid
  FROM   igw_proposals_all
  WHERE  proposal_id = x_proposal_id;

begin

  x_return_status := FND_API.G_RET_STS_SUCCESS;

  IF l_row_id IS NULL THEN
    OPEN get_row_id;
    FETCH get_row_id INTO l_row_id;
    CLOSE get_row_id;
  END IF;

  X_LAST_UPDATE_DATE := SYSDATE;
  if(X_MODE = 'I') then
    X_LAST_UPDATED_BY := 1;
    X_LAST_UPDATE_LOGIN := 0;
  elsif (X_MODE = 'R') then
    X_LAST_UPDATED_BY := FND_GLOBAL.USER_ID;
    if X_LAST_UPDATED_BY is NULL then
      X_LAST_UPDATED_BY := -1;
    end if;
    X_LAST_UPDATE_LOGIN :=FND_GLOBAL.LOGIN_ID;
    if X_LAST_UPDATE_LOGIN is NULL then
      X_LAST_UPDATE_LOGIN := -1;
    end if;
  else
    FND_MESSAGE.SET_NAME('FND', 'SYSTEM-INVALID ARGS');
    app_exception.raise_exception;
  end if;
  update IGW_PROPOSALS_ALL set
    SPONSOR_ACTION_CODE = X_SPONSOR_ACTION_CODE,
    SPONSOR_ACTION_DATE = X_SPONSOR_ACTION_DATE,
    AWARD_AMOUNT = X_AWARD_AMOUNT,
    PROPOSAL_NUMBER = X_PROPOSAL_NUMBER,
    LEAD_ORGANIZATION_ID = X_LEAD_ORGANIZATION_ID,
    PROPOSAL_STATUS = X_PROPOSAL_STATUS,
    PROPOSAL_START_DATE = X_PROPOSAL_START_DATE,
    PROPOSAL_END_DATE = X_PROPOSAL_END_DATE,
    PROPOSAL_TITLE = X_PROPOSAL_TITLE,
    PROPOSAL_TYPE_CODE = X_PROPOSAL_TYPE_CODE,
    AWARD_NUMBER = X_AWARD_NUMBER,
    ORIGINAL_PROPOSAL_NUMBER = X_ORIGINAL_PROPOSAL_NUMBER,
    ORIGINAL_AWARD_NUMBER = X_ORIGINAL_AWARD_NUMBER,
    ORIGINAL_PROPOSAL_START_DATE = X_ORIGINAL_PROPOSAL_START_DATE,
    ORIGINAL_PROPOSAL_END_DATE = X_ORIGINAL_PROPOSAL_END_DATE,
    ACTIVITY_TYPE_CODE = X_ACTIVITY_TYPE_CODE,
    SPONSOR_ID = X_SPONSOR_ID,
    FUNDING_SPONSOR_UNIT = X_FUNDING_SPONSOR_UNIT,
    ORIGINAL_SPONSOR_ID = X_ORIGINAL_SPONSOR_ID,
    SPONSOR_PROPOSAL_NUMBER = X_SPONSOR_PROPOSAL_NUMBER,
    --NOTICE_OF_OPPORTUNITY_CODE = X_NOTICE_OF_OPPORTUNITY_CODE,
    --PROGRAM_NUMBER = X_PROGRAM_NUMBER,
    --PROGRAM_TITLE = X_PROGRAM_TITLE,
    --PROGRAM_URL = X_PROGRAM_URL,
    SUBMITTING_ORGANIZATION_ID = X_SUBMITTING_ORGANIZATION_ID,
    SIGNING_OFFICIAL_ID = X_SIGNING_OFFICIAL_ID,
    ADMIN_OFFICIAL_ID = X_ADMIN_OFFICIAL_ID,
    --DEADLINE_DATE = X_DEADLINE_DATE,
    --DEADLINE_TYPE = X_DEADLINE_TYPE,
    --LETTER_OF_INTENT_DUE_DATE = X_LETTER_OF_INTENT_DUE_DATE,
    RECORD_VERSION_NUMBER = X_RECORD_VERSION_NUMBER +1,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
    where rowid  = l_row_id
    AND   RECORD_VERSION_NUMBER = X_RECORD_VERSION_NUMBER;

  if (sql%notfound) then
    FND_MESSAGE.SET_NAME('IGW','IGW_SS_RECORD_CHANGED');
    FND_MSG_PUB.Add;
    x_return_status := FND_API.G_RET_STS_ERROR;
  end if;

EXCEPTION
  WHEN OTHERS THEN
    FND_MSG_PUB.add_exc_msg( p_pkg_name    => 'IGW_PROPOSALS_ALL_TBH'
                              ,p_procedure_name => 'UPDATE_ROW' );
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
    RAISE;

end UPDATE_ROW;

---------------------------------------------------------------------------------

procedure DELETE_ROW (
  x_rowid       in rowid
  ,p_proposal_id in number
  ,p_record_version_number in number
  ,X_RETURN_STATUS   OUT NOCOPY VARCHAR2
) is

  l_row_id  ROWID := x_rowid;
  l_record_version_number  NUMBER;

  CURSOR get_row_id IS
  SELECT rowid
  FROM   igw_proposals_all
  WHERE  proposal_id = p_proposal_id;

begin

  x_return_status := FND_API.G_RET_STS_SUCCESS;

  IF l_row_id IS NULL THEN
    OPEN get_row_id;
    FETCH get_row_id INTO l_row_id;
    CLOSE get_row_id;
  END IF;

  delete from IGW_PROPOSALS_ALL
  where rowid = l_row_id
  and   record_version_number = p_record_version_number;

  if (sql%notfound) then
    FND_MESSAGE.SET_NAME('IGW','IGW_SS_RECORD_CHANGED');
    FND_MSG_PUB.Add;
  end if;
EXCEPTION
  WHEN OTHERS THEN
    FND_MSG_PUB.add_exc_msg( p_pkg_name    => 'IGW_PROPOSALS_ALL_TBH'
                              ,p_procedure_name => 'DELETE_ROW' );
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
    RAISE;
end DELETE_ROW;

---------------------------------------------------------------------------------

procedure UPDATE_SPONSOR_ACTION (
  X_ROWID in rowid,
  X_PROPOSAL_ID in NUMBER,
  X_SPONSOR_ACTION_DATE in DATE,
  X_SPONSOR_ACTION_CODE in VARCHAR2,
  X_SPONSOR_ACTION_COMMENTS in VARCHAR2,
  X_SPONSOR_PROPOSAL_NUMBER in VARCHAR2,
  X_AWARD_NUMBER in VARCHAR2,
  X_AWARD_AMOUNT in NUMBER,
  X_RECORD_VERSION_NUMBER IN NUMBER,
  X_MODE        in VARCHAR2 default 'R',
  X_RETURN_STATUS   OUT NOCOPY VARCHAR2
  ) is
    X_LAST_UPDATE_DATE DATE;
    X_LAST_UPDATED_BY NUMBER;
    X_LAST_UPDATE_LOGIN NUMBER;

  l_row_id  ROWID := x_rowid;
  l_record_version_number  NUMBER;

  l_old_sponsor_action_date      date;
  l_old_sponsor_action_code      varchar2(30);
  l_old_sponsor_action_comments  varchar2(2000);

  CURSOR get_row_id IS
  SELECT rowid
  FROM   igw_proposals_all
  WHERE  proposal_id = x_proposal_id;

begin

  x_return_status := FND_API.G_RET_STS_SUCCESS;

  IF l_row_id IS NULL THEN
    OPEN get_row_id;
    FETCH get_row_id INTO l_row_id;
    CLOSE get_row_id;
  END IF;

  X_LAST_UPDATE_DATE := SYSDATE;
  if(X_MODE = 'I') then
    X_LAST_UPDATED_BY := 1;
    X_LAST_UPDATE_LOGIN := 0;
  elsif (X_MODE = 'R') then
    X_LAST_UPDATED_BY := FND_GLOBAL.USER_ID;
    if X_LAST_UPDATED_BY is NULL then
      X_LAST_UPDATED_BY := -1;
    end if;
    X_LAST_UPDATE_LOGIN :=FND_GLOBAL.LOGIN_ID;
    if X_LAST_UPDATE_LOGIN is NULL then
      X_LAST_UPDATE_LOGIN := -1;
    end if;
  else
    FND_MESSAGE.SET_NAME('FND', 'SYSTEM-INVALID ARGS');
    app_exception.raise_exception;
  end if;

  select sponsor_action_date,
         sponsor_action_code,
         sponsor_action_comments
  into   l_old_sponsor_action_date,
         l_old_sponsor_action_code,
         l_old_sponsor_action_comments
  from   igw_proposals_all
  where  proposal_id = x_proposal_id;

  update IGW_PROPOSALS_ALL set
    SPONSOR_ACTION_DATE = X_SPONSOR_ACTION_DATE,
    SPONSOR_ACTION_CODE = X_SPONSOR_ACTION_CODE,
    SPONSOR_ACTION_COMMENTS = X_SPONSOR_ACTION_COMMENTS,
    SPONSOR_PROPOSAL_NUMBER = X_SPONSOR_PROPOSAL_NUMBER,
    AWARD_NUMBER = X_AWARD_NUMBER,
    AWARD_AMOUNT = X_AWARD_AMOUNT,
    RECORD_VERSION_NUMBER = X_RECORD_VERSION_NUMBER +1,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
    where rowid  = l_row_id
    AND   RECORD_VERSION_NUMBER = X_RECORD_VERSION_NUMBER;

  if (sql%notfound) then
    FND_MESSAGE.SET_NAME('IGW','IGW_SS_RECORD_CHANGED');
    FND_MSG_PUB.Add;
    x_return_status := FND_API.G_RET_STS_ERROR;
  end if;

  if x_sponsor_action_date <> l_old_sponsor_action_date or
     nvl(x_sponsor_action_code,'_') <> nvl(l_old_sponsor_action_code,'_') or
     nvl(x_sponsor_action_comments,'_') <> nvl(l_old_sponsor_action_comments,'_') then

     insert into igw_prop_comments
     (
     PROPOSAL_ID,
     COMMENT_ID,
     COMMENTS,
     LAST_UPDATE_DATE,
     LAST_UPDATED_BY,
     CREATION_DATE,
     CREATED_BY,
     LAST_UPDATE_LOGIN,
     RECORD_VERSION_NUMBER,
     SPONSOR_ACTION_CODE,
     SPONSOR_ACTION_DATE
     )
     values
     (
     X_PROPOSAL_ID,
     IGW_PROP_COMMENTS_S.NEXTVAL,
     X_SPONSOR_ACTION_COMMENTS,
     X_LAST_UPDATE_DATE,
     X_LAST_UPDATED_BY,
     X_LAST_UPDATE_DATE,
     X_LAST_UPDATED_BY,
     X_LAST_UPDATE_LOGIN,
     1,
     X_SPONSOR_ACTION_CODE,
     X_SPONSOR_ACTION_DATE
     );

   end if;

EXCEPTION
  WHEN OTHERS THEN
    FND_MSG_PUB.add_exc_msg( p_pkg_name    => 'IGW_PROPOSALS_ALL_TBH'
                              ,p_procedure_name => 'UPDATE_SPONSOR_ACTION' );
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
    RAISE;

end UPDATE_SPONSOR_ACTION;

---------------------------------------------------------------------------------

end IGW_PROPOSALS_ALL_TBH;

/
