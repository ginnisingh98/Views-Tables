--------------------------------------------------------
--  DDL for Package Body JA_JAINBOER_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JA_JAINBOER_XMLP_PKG" AS
/* $Header: JAINBOERB.pls 120.1 2007/12/25 16:14:15 dwkrishn noship $ */
  FUNCTION CF_BOE_CLOSINGFORMULA(BOE_AMOUNT IN NUMBER
                                ,AMOUNT_APPLIED IN NUMBER
                                ,WRITE_OFF_AMOUNT IN NUMBER) RETURN VARCHAR2 IS
    CLOSING_AMT NUMBER;
  BEGIN
    CLOSING_AMT := NVL(BOE_AMOUNT
                      ,0) - NVL(AMOUNT_APPLIED
                      ,0) - NVL(P_TEMP_AMT
                      ,0) - NVL(WRITE_OFF_AMOUNT
                      ,0);
    IF CLOSING_AMT = 0 THEN
      RETURN ('NIL');
    ELSE
      RETURN (TO_CHAR(CLOSING_AMT
                    ,'FM99999999999990D00'));
    END IF;
    RETURN NULL;
  END CF_BOE_CLOSINGFORMULA;
  FUNCTION CF_ACCOUNTFORMULA(CHART_OF_ACCOUNTS_ID IN NUMBER
                            ,CUSTOMS_WRITE_OFF_ACCOUNT IN NUMBER) RETURN VARCHAR2 IS
    V_ACCOUNT VARCHAR2(1000);
  BEGIN
    JAI_CMN_GL_PKG.GET_ACCOUNT_NUMBER(CHART_OF_ACCOUNTS_ID
                                     ,CUSTOMS_WRITE_OFF_ACCOUNT
                                     ,V_ACCOUNT);
    RETURN (V_ACCOUNT);
  END CF_ACCOUNTFORMULA;
  FUNCTION CF_TEMP_CALFORMULA(BOE_ID IN NUMBER
                             ,WRITE_OFF_AMOUNT IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF P_TEMP_ID <> BOE_ID THEN
      P_TEMP_AMT := BALANCE(BOE_ID);
      P_TEMP_ID := BOE_ID;
      P_TEMP_AMT1 := WRITE_OFF_AMOUNT;
    ELSE
      P_TEMP_AMT := P_TEMP_AMT + P_TEMP_AMT1;
      P_TEMP_AMT1 := WRITE_OFF_AMOUNT;
    END IF;
    RETURN (1);
  END CF_TEMP_CALFORMULA;
  FUNCTION BALANCE(V_BOE_ID IN NUMBER) RETURN NUMBER IS
    CURSOR FOR_INITIAL_AMOUNT IS
      SELECT
        SUM(NVL(WRITE_OFF_AMOUNT
               ,0))
      FROM
        JAI_CMN_BOE_WRITEOFFS
      WHERE BOE_ID = V_BOE_ID
        AND TRUNC(WRITE_OFF_DATE) < TRUNC(P_START_DATE)
      ORDER BY
        WRITE_OFF_DATE;
    V_AMOUNT NUMBER;
  BEGIN
    OPEN FOR_INITIAL_AMOUNT;
    FETCH FOR_INITIAL_AMOUNT
     INTO V_AMOUNT;
    CLOSE FOR_INITIAL_AMOUNT;
    RETURN (NVL(V_AMOUNT
              ,0));
  END BALANCE;
  FUNCTION CF_SOB_NAMEFORMULA RETURN VARCHAR2 IS
    CURSOR FOR_SOB_ID(COA_ID IN NUMBER) IS
      SELECT
        SET_OF_BOOKS_ID
      FROM
        ORG_ORGANIZATION_DEFINITIONS
      WHERE CHART_OF_ACCOUNTS_ID = COA_ID;
    CURSOR FOR_SOB_NAME(SOB_ID IN NUMBER) IS
      SELECT
        NAME
      FROM
        GL_SETS_OF_BOOKS
      WHERE SET_OF_BOOKS_ID = SOB_ID;
    V_SET_OF_BOOKS_ID NUMBER;
    V_SOB_NAME VARCHAR2(100);
  BEGIN
    OPEN FOR_SOB_ID(P_CHART_OF_ACCOUNTS_ID);
    FETCH FOR_SOB_ID
     INTO V_SET_OF_BOOKS_ID;
    CLOSE FOR_SOB_ID;
    OPEN FOR_SOB_NAME(V_SET_OF_BOOKS_ID);
    FETCH FOR_SOB_NAME
     INTO V_SOB_NAME;
    CLOSE FOR_SOB_NAME;
    RETURN (V_SOB_NAME);
  END CF_SOB_NAMEFORMULA;
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR FOR_REPORT_DATA IS
      SELECT
        HDR.BOE_TYPE,
        HDR.BOE_ID,
        HDR.BOE_AMOUNT,
        HDR.AMOUNT_APPLIED,
        WRT.WRITE_OFF_AMOUNT,
        WRT.WRITE_OFF_DATE,
        WRT.WRITE_OFF_REASON,
        ORG.ORGANIZATION_NAME,
        ORG.ORGANIZATION_NAME HDR_ORG,
        LOC.LOCATION_CODE,
        JHOU.CUSTOMS_WRITE_OFF_ACCOUNT,
        LOC.ADDRESS_LINE_1,
        LOC.ADDRESS_LINE_2,
        LOC.ADDRESS_LINE_3,
        GCC.CHART_OF_ACCOUNTS_ID
      FROM
        JAI_CMN_BOE_HDRS HDR,
        JAI_CMN_BOE_WRITEOFFS WRT,
        ORG_ORGANIZATION_DEFINITIONS ORG,
        HR_LOCATIONS LOC,
        JAI_CMN_INVENTORY_ORGS JHOU,
        GL_CODE_COMBINATIONS GCC
      WHERE HDR.BOE_ID = WRT.BOE_ID
        AND HDR.ORGANIZATION_ID = ORG.ORGANIZATION_ID
        AND HDR.LOCATION_ID = LOC.LOCATION_ID
        AND HDR.ORGANIZATION_ID = JHOU.ORGANIZATION_ID
        AND HDR.LOCATION_ID = JHOU.LOCATION_ID
        AND HDR.BOE_ID = NVL(P_BOE_NO
         ,HDR.BOE_ID)
        AND HDR.BOE_TYPE = NVL(P_BOE_TYPE
         ,HDR.BOE_TYPE)
        AND TRUNC(WRT.WRITE_OFF_DATE) BETWEEN TRUNC(P_START_DATE)
        AND TRUNC(P_END_DATE)
        AND GCC.CODE_COMBINATION_ID = JHOU.CUSTOMS_WRITE_OFF_ACCOUNT
      ORDER BY
        HDR.BOE_ID,
        WRT.WRITE_OFF_DATE,
        HDR.BOE_TYPE;
    V_PREVIOUS_BOE_ID NUMBER := -1;
    V_PR_ELIER_WRTEN_OFF_AMOUNT NUMBER := 0;
    V_EARLIER_WRITTEN_OFF_AMOUNT NUMBER := 0;
    CURSOR C_PROGRAM_ID(P_REQUEST_ID IN NUMBER) IS
      SELECT
        CONCURRENT_PROGRAM_ID,
        NVL(ENABLE_TRACE
           ,'N')
      FROM
        FND_CONCURRENT_REQUESTS
      WHERE REQUEST_ID = P_REQUEST_ID;
    V_ENABLE_TRACE FND_CONCURRENT_PROGRAMS.ENABLE_TRACE%TYPE;
    V_PROGRAM_ID FND_CONCURRENT_PROGRAMS.CONCURRENT_PROGRAM_ID%TYPE;
  BEGIN
    /*SRW.MESSAGE(1275
               ,'Report Version is 120.2 Last modified date is 25/07/2005')*/NULL;
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    P_START_DATE1 := TO_CHAR(P_START_DATE,'DD-MON-YYYY');
     P_END_DATE1 := TO_CHAR(P_END_DATE,'DD-MON-YYYY');
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    BEGIN
      OPEN C_PROGRAM_ID(P_CONC_REQUEST_ID);
      FETCH C_PROGRAM_ID
       INTO V_PROGRAM_ID,V_ENABLE_TRACE;
      CLOSE C_PROGRAM_ID;
      /*SRW.MESSAGE(1275
                 ,'v_program_id -> ' || V_PROGRAM_ID || ', v_enable_trace -> ' || V_ENABLE_TRACE || ', request_id -> ' || P_CONC_REQUEST_ID)*/NULL;
      IF V_ENABLE_TRACE = 'Y' THEN
        EXECUTE IMMEDIATE
          'ALTER SESSION SET EVENTS ''10046 trace name context forever, level 4''';
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(1275
                   ,'Error during enabling the trace. ErrCode -> ' || SQLCODE || ', ErrMesg -> ' || SQLERRM)*/NULL;
    END;
    FOR i IN FOR_REPORT_DATA LOOP
      IF I.BOE_ID <> V_PREVIOUS_BOE_ID THEN
        V_EARLIER_WRITTEN_OFF_AMOUNT := BALANCE(I.BOE_ID);
        V_PR_ELIER_WRTEN_OFF_AMOUNT := I.WRITE_OFF_AMOUNT;
        V_PREVIOUS_BOE_ID := I.BOE_ID;
      ELSE
        V_EARLIER_WRITTEN_OFF_AMOUNT := V_EARLIER_WRITTEN_OFF_AMOUNT + V_PR_ELIER_WRTEN_OFF_AMOUNT;
        V_PR_ELIER_WRTEN_OFF_AMOUNT := I.WRITE_OFF_AMOUNT;
      END IF;
      INSERT INTO JAI_CMN_WRITEOFFS_T
        (CUSTOMS_WRITE_OFF_ACCOUNT
        ,ADDRESS_LINE_1
        ,ADDRESS_LINE_2
        ,ADDRESS_LINE_3
        ,ORGANIZATION_NAME
        ,CHART_OF_ACCOUNTS_ID
        ,BOE_TYPE
        ,BOE_ID
        ,BOE_AMOUNT
        ,LOCATION_CODE
        ,AMOUNT_APPLIED
        ,WRITE_OFF_AMOUNT
        ,WRITE_OFF_DATE
        ,WRITE_OFF_REASON
        ,EARLIER_WRITTEN_OFF_AMOUNT
        ,CREATED_BY
        ,CREATION_DATE
        ,LAST_UPDATED_BY
        ,LAST_UPDATE_DATE)
      VALUES   (I.CUSTOMS_WRITE_OFF_ACCOUNT
        ,I.ADDRESS_LINE_1
        ,I.ADDRESS_LINE_2
        ,I.ADDRESS_LINE_3
        ,I.ORGANIZATION_NAME
        ,I.CHART_OF_ACCOUNTS_ID
        ,I.BOE_TYPE
        ,I.BOE_ID
        ,I.BOE_AMOUNT
        ,I.LOCATION_CODE
        ,I.AMOUNT_APPLIED
        ,I.WRITE_OFF_AMOUNT
        ,I.WRITE_OFF_DATE
        ,I.WRITE_OFF_REASON
        ,V_EARLIER_WRITTEN_OFF_AMOUNT
        ,FND_GLOBAL.USER_ID
        ,SYSDATE
        ,FND_GLOBAL.USER_ID
        ,SYSDATE);
    END LOOP;
    RETURN (TRUE);
  END BEFOREREPORT;
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    DELETE FROM JAI_CMN_WRITEOFFS_T;
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;
END JA_JAINBOER_XMLP_PKG;



/
