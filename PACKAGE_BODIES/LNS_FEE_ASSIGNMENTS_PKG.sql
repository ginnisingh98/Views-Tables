--------------------------------------------------------
--  DDL for Package Body LNS_FEE_ASSIGNMENTS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."LNS_FEE_ASSIGNMENTS_PKG" AS
/* $Header: LNS_FASGM_TBLH_B.pls 120.2.12010000.4 2010/02/24 01:50:38 mbolli ship $ */

/* Insert_Row procedure */
PROCEDURE Insert_Row(
	X_FEE_ASSIGNMENT_ID		IN OUT NOCOPY NUMBER
	,P_LOAN_ID		IN NUMBER
	,P_FEE_ID		IN NUMBER
	,P_FEE_TYPE		IN VARCHAR2
	,P_FEE		IN NUMBER
	,P_FEE_BASIS		IN VARCHAR2
	,P_NUMBER_GRACE_DAYS		IN NUMBER
	,P_CREATED_BY		IN NUMBER
	,P_CREATION_DATE		IN DATE
	,P_LAST_UPDATED_BY		IN NUMBER
	,P_LAST_UPDATE_DATE		IN DATE
	,P_LAST_UPDATE_LOGIN		IN NUMBER
	,P_OBJECT_VERSION_NUMBER		IN NUMBER
	,P_COLLECTED_THIRD_PARTY_FLAG		IN VARCHAR2
	,P_BILLING_OPTION		IN VARCHAR2
	,P_RATE_TYPE		IN VARCHAR2
	,P_BEGIN_INSTALLMENT_NUMBER		IN NUMBER
	,P_END_INSTALLMENT_NUMBER		IN NUMBER
	,P_NUMBER_OF_PAYMENTS		IN NUMBER
	,P_START_DATE_ACTIVE		IN DATE
	,P_END_DATE_ACTIVE		IN DATE
	,P_DISB_HEADER_ID		IN NUMBER
	,P_DELETE_DISABLED_FLAG		IN VARCHAR2
	,P_OPEN_PHASE_FLAG		IN VARCHAR2
	,P_PHASE				IN VARCHAR2
) IS
BEGIN
	INSERT INTO LNS_FEE_ASSIGNMENTS
	(
		FEE_ASSIGNMENT_ID
		,LOAN_ID
		,FEE_ID
		,FEE_TYPE
		,FEE
		,FEE_BASIS
		,NUMBER_GRACE_DAYS
		,CREATED_BY
		,CREATION_DATE
		,LAST_UPDATED_BY
		,LAST_UPDATE_DATE
		,LAST_UPDATE_LOGIN
		,OBJECT_VERSION_NUMBER
		,COLLECTED_THIRD_PARTY_FLAG
		,BILLING_OPTION
		,RATE_TYPE
		,BEGIN_INSTALLMENT_NUMBER
		,END_INSTALLMENT_NUMBER
		,NUMBER_OF_PAYMENTS
		,START_DATE_ACTIVE
		,END_DATE_ACTIVE
		,DISB_HEADER_ID
		,DELETE_DISABLED_FLAG
		,OPEN_PHASE_FLAG
		,PHASE
	) VALUES (
		DECODE(X_FEE_ASSIGNMENT_ID, FND_API.G_MISS_NUM, LNS_FEE_ASSIGNMENTS_S.NEXTVAL, NULL, LNS_FEE_ASSIGNMENTS_S.NEXTVAL, X_FEE_ASSIGNMENT_ID)
		,DECODE(P_LOAN_ID, FND_API.G_MISS_NUM, NULL, P_LOAN_ID)
		,DECODE(P_FEE_ID, FND_API.G_MISS_NUM, NULL, P_FEE_ID)
		,DECODE(P_FEE_TYPE, FND_API.G_MISS_CHAR, NULL, P_FEE_TYPE)
		,DECODE(P_FEE, FND_API.G_MISS_NUM, NULL, P_FEE)
		,DECODE(P_FEE_BASIS, FND_API.G_MISS_CHAR, NULL, P_FEE_BASIS)
		,DECODE(P_NUMBER_GRACE_DAYS, FND_API.G_MISS_NUM, NULL, P_NUMBER_GRACE_DAYS)
		,LNS_UTILITY_PUB.CREATED_BY
		,LNS_UTILITY_PUB.CREATION_DATE
		,LNS_UTILITY_PUB.LAST_UPDATED_BY
		,LNS_UTILITY_PUB.LAST_UPDATE_DATE
		,LNS_UTILITY_PUB.LAST_UPDATE_LOGIN
		,DECODE(P_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, P_OBJECT_VERSION_NUMBER)
		,DECODE(P_COLLECTED_THIRD_PARTY_FLAG, FND_API.G_MISS_CHAR, NULL, P_COLLECTED_THIRD_PARTY_FLAG)
		,DECODE(P_BILLING_OPTION, FND_API.G_MISS_CHAR, NULL, P_BILLING_OPTION)
		,DECODE(P_RATE_TYPE, FND_API.G_MISS_CHAR, NULL, P_RATE_TYPE)
		,DECODE(P_BEGIN_INSTALLMENT_NUMBER, FND_API.G_MISS_NUM, NULL, P_BEGIN_INSTALLMENT_NUMBER)
		,DECODE(P_END_INSTALLMENT_NUMBER, FND_API.G_MISS_NUM, NULL, P_END_INSTALLMENT_NUMBER)
		,DECODE(P_NUMBER_OF_PAYMENTS, FND_API.G_MISS_NUM, NULL, P_NUMBER_OF_PAYMENTS)
		,DECODE(P_START_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL, P_START_DATE_ACTIVE)
		,DECODE(P_END_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL, P_END_DATE_ACTIVE)
		,DECODE(P_DISB_HEADER_ID, FND_API.G_MISS_NUM, NULL, P_DISB_HEADER_ID)
		,DECODE(P_DELETE_DISABLED_FLAG, FND_API.G_MISS_CHAR, NULL, P_DELETE_DISABLED_FLAG )
		,DECODE(P_OPEN_PHASE_FLAG, FND_API.G_MISS_CHAR, NULL, P_OPEN_PHASE_FLAG )
		,DECODE(P_PHASE, FND_API.G_MISS_CHAR, NULL, P_PHASE )
	) RETURNING
		 FEE_ASSIGNMENT_ID
	 INTO
		 X_FEE_ASSIGNMENT_ID;
END Insert_Row;

/* Update_Row procedure */
PROCEDURE Update_Row(
	P_FEE_ASSIGNMENT_ID		IN NUMBER
	,P_LOAN_ID		IN NUMBER
	,P_FEE_ID		IN NUMBER
	,P_FEE_TYPE		IN VARCHAR2
	,P_FEE		IN NUMBER
	,P_FEE_BASIS		IN VARCHAR2
	,P_NUMBER_GRACE_DAYS		IN NUMBER
	,P_LAST_UPDATED_BY		IN NUMBER
	,P_LAST_UPDATE_DATE		IN DATE
	,P_LAST_UPDATE_LOGIN		IN NUMBER
	,P_OBJECT_VERSION_NUMBER		IN NUMBER
	,P_COLLECTED_THIRD_PARTY_FLAG		IN VARCHAR2
	,P_BILLING_OPTION		IN VARCHAR2
	,P_RATE_TYPE		IN VARCHAR2
	,P_BEGIN_INSTALLMENT_NUMBER		IN NUMBER
	,P_END_INSTALLMENT_NUMBER		IN NUMBER
	,P_NUMBER_OF_PAYMENTS		IN NUMBER
	,P_START_DATE_ACTIVE		IN DATE
	,P_END_DATE_ACTIVE		IN DATE
	,P_DISB_HEADER_ID		IN NUMBER
	,P_DELETE_DISABLED_FLAG		IN VARCHAR2
	,P_OPEN_PHASE_FLAG		IN VARCHAR2
	,P_PHASE				IN VARCHAR2
) IS
BEGIN
	UPDATE LNS_FEE_ASSIGNMENTS SET
		LOAN_ID = DECODE(P_LOAN_ID, NULL, LOAN_ID, FND_API.G_MISS_NUM, NULL, P_LOAN_ID)
		,FEE_ID = DECODE(P_FEE_ID, NULL, FEE_ID, FND_API.G_MISS_NUM, NULL, P_FEE_ID)
		,FEE_TYPE = DECODE(P_FEE_TYPE, NULL, FEE_TYPE, FND_API.G_MISS_CHAR, NULL, P_FEE_TYPE)
		,FEE = DECODE(P_FEE, NULL, FEE, FND_API.G_MISS_NUM, NULL, P_FEE)
		,FEE_BASIS = DECODE(P_FEE_BASIS, NULL, FEE_BASIS, FND_API.G_MISS_CHAR, NULL, P_FEE_BASIS)
		,NUMBER_GRACE_DAYS = DECODE(P_NUMBER_GRACE_DAYS, NULL, NUMBER_GRACE_DAYS, FND_API.G_MISS_NUM, NULL, P_NUMBER_GRACE_DAYS)
		,LAST_UPDATED_BY = LNS_UTILITY_PUB.LAST_UPDATED_BY
		,LAST_UPDATE_DATE = LNS_UTILITY_PUB.LAST_UPDATE_DATE
		,LAST_UPDATE_LOGIN = LNS_UTILITY_PUB.LAST_UPDATE_LOGIN
		,OBJECT_VERSION_NUMBER = DECODE(P_OBJECT_VERSION_NUMBER, NULL, OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, P_OBJECT_VERSION_NUMBER)
		,COLLECTED_THIRD_PARTY_FLAG = DECODE(P_COLLECTED_THIRD_PARTY_FLAG, NULL, COLLECTED_THIRD_PARTY_FLAG, FND_API.G_MISS_CHAR, NULL, P_COLLECTED_THIRD_PARTY_FLAG)
		,BILLING_OPTION = DECODE(P_BILLING_OPTION, NULL, BILLING_OPTION, FND_API.G_MISS_CHAR, NULL, P_BILLING_OPTION)
		,RATE_TYPE = DECODE(P_RATE_TYPE, NULL, RATE_TYPE, FND_API.G_MISS_CHAR, NULL, P_RATE_TYPE)
		,BEGIN_INSTALLMENT_NUMBER = DECODE(P_BEGIN_INSTALLMENT_NUMBER, NULL, BEGIN_INSTALLMENT_NUMBER, FND_API.G_MISS_NUM, NULL, P_BEGIN_INSTALLMENT_NUMBER)
		,END_INSTALLMENT_NUMBER = DECODE(P_END_INSTALLMENT_NUMBER, NULL, END_INSTALLMENT_NUMBER, FND_API.G_MISS_NUM, NULL, P_END_INSTALLMENT_NUMBER)
		,NUMBER_OF_PAYMENTS = DECODE(P_NUMBER_OF_PAYMENTS, NULL, NUMBER_OF_PAYMENTS, FND_API.G_MISS_NUM, NULL, P_NUMBER_OF_PAYMENTS)
		,START_DATE_ACTIVE = DECODE(P_START_DATE_ACTIVE, NULL, START_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL, P_START_DATE_ACTIVE)
		,END_DATE_ACTIVE = DECODE(P_END_DATE_ACTIVE, NULL, END_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL, P_END_DATE_ACTIVE)
		,DISB_HEADER_ID = DECODE(P_DISB_HEADER_ID, NULL, DISB_HEADER_ID, FND_API.G_MISS_NUM, NULL, P_DISB_HEADER_ID)
		,DELETE_DISABLED_FLAG = DECODE(P_DELETE_DISABLED_FLAG , NULL, DELETE_DISABLED_FLAG , FND_API.G_MISS_CHAR, NULL, P_DELETE_DISABLED_FLAG )
		,OPEN_PHASE_FLAG = DECODE(P_OPEN_PHASE_FLAG , NULL, OPEN_PHASE_FLAG , FND_API.G_MISS_CHAR, NULL, P_OPEN_PHASE_FLAG )
		,PHASE = DECODE(P_PHASE , NULL, PHASE , FND_API.G_MISS_CHAR, NULL, P_PHASE )
	 WHERE FEE_ASSIGNMENT_ID = P_FEE_ASSIGNMENT_ID;

	if (sql%notfound) then
		raise no_data_found;
	end if;
END Update_Row;

/* Delete_Row procedure */
PROCEDURE Delete_Row(P_FEE_ASSIGNMENT_ID IN NUMBER) IS
BEGIN
	DELETE FROM LNS_FEE_ASSIGNMENTS
		WHERE FEE_ASSIGNMENT_ID = P_FEE_ASSIGNMENT_ID;

	if (sql%notfound) then
		raise no_data_found;
	end if;
END Delete_Row;

/* Lock_Row procedure */
PROCEDURE Lock_Row(
	P_FEE_ASSIGNMENT_ID		IN NUMBER
	,P_LOAN_ID		IN NUMBER
	,P_FEE_ID		IN NUMBER
	,P_FEE_TYPE		IN VARCHAR2
	,P_FEE		IN NUMBER
	,P_FEE_BASIS		IN VARCHAR2
	,P_NUMBER_GRACE_DAYS		IN NUMBER
	,P_CREATED_BY		IN NUMBER
	,P_CREATION_DATE		IN DATE
	,P_LAST_UPDATED_BY		IN NUMBER
	,P_LAST_UPDATE_DATE		IN DATE
	,P_LAST_UPDATE_LOGIN		IN NUMBER
	,P_OBJECT_VERSION_NUMBER		IN NUMBER
	,P_COLLECTED_THIRD_PARTY_FLAG		IN VARCHAR2
	,P_BILLING_OPTION		IN VARCHAR2
	,P_RATE_TYPE		IN VARCHAR2
	,P_BEGIN_INSTALLMENT_NUMBER		IN NUMBER
	,P_END_INSTALLMENT_NUMBER		IN NUMBER
	,P_NUMBER_OF_PAYMENTS		IN NUMBER
	,P_START_DATE_ACTIVE		IN DATE
	,P_END_DATE_ACTIVE		IN DATE
	,P_DISB_HEADER_ID		IN NUMBER
	,P_DELETE_DISABLED_FLAG		IN VARCHAR2
	,P_OPEN_PHASE_FLAG   	IN VARCHAR2
	,P_PHASE				IN VARCHAR2
) IS
	CURSOR C IS SELECT * FROM LNS_FEE_ASSIGNMENTS
		WHERE FEE_ASSIGNMENT_ID = P_FEE_ASSIGNMENT_ID
		FOR UPDATE of FEE_ASSIGNMENT_ID NOWAIT;
	Recinfo C%ROWTYPE;
BEGIN
	OPEN C;
	FETCH C INTO Recinfo;
	IF (C%NOTFOUND) THEN
		CLOSE C;
		FND_MESSAGE.Set_Name('FND', 'FORM_RECORD_DELETED');
		APP_EXCEPTION.Raise_Exception;
	END IF;
	CLOSE C;

	IF (
		(Recinfo.FEE_ASSIGNMENT_ID = P_FEE_ASSIGNMENT_ID)
		AND ( (Recinfo.LOAN_ID = P_LOAN_ID)
			OR ( (Recinfo.LOAN_ID IS NULL)
				AND (P_LOAN_ID IS NULL)))
		AND ( (Recinfo.FEE_ID = P_FEE_ID)
			OR ( (Recinfo.FEE_ID IS NULL)
				AND (P_FEE_ID IS NULL)))
		AND ( (Recinfo.FEE_TYPE = P_FEE_TYPE)
			OR ( (Recinfo.FEE_TYPE IS NULL)
				AND (P_FEE_TYPE IS NULL)))
		AND ( (Recinfo.FEE = P_FEE)
			OR ( (Recinfo.FEE IS NULL)
				AND (P_FEE IS NULL)))
		AND ( (Recinfo.FEE_BASIS = P_FEE_BASIS)
			OR ( (Recinfo.FEE_BASIS IS NULL)
				AND (P_FEE_BASIS IS NULL)))
		AND ( (Recinfo.NUMBER_GRACE_DAYS = P_NUMBER_GRACE_DAYS)
			OR ( (Recinfo.NUMBER_GRACE_DAYS IS NULL)
				AND (P_NUMBER_GRACE_DAYS IS NULL)))
		AND ( (Recinfo.CREATED_BY = P_CREATED_BY)
			OR ( (Recinfo.CREATED_BY IS NULL)
				AND (P_CREATED_BY IS NULL)))
		AND ( (Recinfo.CREATION_DATE = P_CREATION_DATE)
			OR ( (Recinfo.CREATION_DATE IS NULL)
				AND (P_CREATION_DATE IS NULL)))
		AND ( (Recinfo.LAST_UPDATED_BY = P_LAST_UPDATED_BY)
			OR ( (Recinfo.LAST_UPDATED_BY IS NULL)
				AND (P_LAST_UPDATED_BY IS NULL)))
		AND ( (Recinfo.LAST_UPDATE_DATE = P_LAST_UPDATE_DATE)
			OR ( (Recinfo.LAST_UPDATE_DATE IS NULL)
				AND (P_LAST_UPDATE_DATE IS NULL)))
		AND ( (Recinfo.LAST_UPDATE_LOGIN = P_LAST_UPDATE_LOGIN)
			OR ( (Recinfo.LAST_UPDATE_LOGIN IS NULL)
				AND (P_LAST_UPDATE_LOGIN IS NULL)))
		AND ( (Recinfo.OBJECT_VERSION_NUMBER = P_OBJECT_VERSION_NUMBER)
			OR ( (Recinfo.OBJECT_VERSION_NUMBER IS NULL)
				AND (P_OBJECT_VERSION_NUMBER IS NULL)))
		AND ( (Recinfo.COLLECTED_THIRD_PARTY_FLAG = P_COLLECTED_THIRD_PARTY_FLAG)
			OR ( (Recinfo.COLLECTED_THIRD_PARTY_FLAG IS NULL)
				AND (P_COLLECTED_THIRD_PARTY_FLAG IS NULL)))
		AND ( (Recinfo.BILLING_OPTION = P_BILLING_OPTION)
			OR ( (Recinfo.BILLING_OPTION IS NULL)
				AND (P_BILLING_OPTION IS NULL)))
		AND ( (Recinfo.RATE_TYPE = P_RATE_TYPE)
			OR ( (Recinfo.RATE_TYPE IS NULL)
				AND (P_RATE_TYPE IS NULL)))
		AND ( (Recinfo.BEGIN_INSTALLMENT_NUMBER = P_BEGIN_INSTALLMENT_NUMBER)
			OR ( (Recinfo.BEGIN_INSTALLMENT_NUMBER IS NULL)
				AND (P_BEGIN_INSTALLMENT_NUMBER IS NULL)))
		AND ( (Recinfo.END_INSTALLMENT_NUMBER = P_END_INSTALLMENT_NUMBER)
			OR ( (Recinfo.END_INSTALLMENT_NUMBER IS NULL)
				AND (P_END_INSTALLMENT_NUMBER IS NULL)))
		AND ( (Recinfo.NUMBER_OF_PAYMENTS = P_NUMBER_OF_PAYMENTS)
			OR ( (Recinfo.NUMBER_OF_PAYMENTS IS NULL)
				AND (P_NUMBER_OF_PAYMENTS IS NULL)))
		AND ( (Recinfo.START_DATE_ACTIVE = P_START_DATE_ACTIVE)
			OR ( (Recinfo.START_DATE_ACTIVE IS NULL)
				AND (P_START_DATE_ACTIVE IS NULL)))
		AND ( (Recinfo.END_DATE_ACTIVE = P_END_DATE_ACTIVE)
			OR ( (Recinfo.END_DATE_ACTIVE IS NULL)
				AND (P_END_DATE_ACTIVE IS NULL)))
		AND ( (Recinfo.DISB_HEADER_ID = P_DISB_HEADER_ID)
                        OR ( (Recinfo.DISB_HEADER_ID IS NULL)
                                AND (P_DISB_HEADER_ID IS NULL)))
		AND ( (Recinfo.DELETE_DISABLED_FLAG = P_DELETE_DISABLED_FLAG )
                        OR ( (Recinfo.DELETE_DISABLED_FLAG IS NULL)
                                AND (P_DELETE_DISABLED_FLAG IS NULL)))
		AND ( (Recinfo.OPEN_PHASE_FLAG = P_OPEN_PHASE_FLAG )
                        OR ( (Recinfo.OPEN_PHASE_FLAG IS NULL)
                                AND (P_OPEN_PHASE_FLAG IS NULL)))
		AND ( (Recinfo.PHASE = P_PHASE )
                        OR ( (Recinfo.PHASE IS NULL)
                                AND (P_PHASE IS NULL)))
	   ) THEN
		return;
	ELSE
		FND_MESSAGE.Set_Name('FND', 'FORM_RECORD_CHANGED');
		APP_EXCEPTION.Raise_Exception;
	END IF;
END Lock_Row;
END;


/
