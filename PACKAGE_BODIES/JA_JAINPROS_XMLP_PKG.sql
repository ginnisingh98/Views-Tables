--------------------------------------------------------
--  DDL for Package Body JA_JAINPROS_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JA_JAINPROS_XMLP_PKG" AS
/* $Header: JAINPROSB.pls 120.1 2007/12/25 16:24:41 dwkrishn noship $ */
  FUNCTION P_END_DATEVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    P_END_DATE1:=P_END_DATE;
    IF P_END_DATE IS NULL THEN
      P_END_DATE1 := SYSDATE;
    END IF;
    RETURN (TRUE);
  END P_END_DATEVALIDTRIGGER;

  FUNCTION P_SYSDATEVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    P_SYSDATE := TRUNC(SYSDATE);
    RETURN (TRUE);
  END P_SYSDATEVALIDTRIGGER;

  FUNCTION P_VENDOR_SITE_LEXVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    IF P_VENDOR_ID IS NULL AND P_VENDOR_SITE_ID IS NULL THEN
      P_VENDOR_SITE_LEX := ' ';
    ELSIF P_VENDOR_ID IS NOT NULL AND P_VENDOR_SITE_ID IS NULL THEN
      P_VENDOR_SITE_LEX := ' AND jipov.vendor_id = :p_vendor_id';
    ELSIF P_VENDOR_ID IS NULL AND P_VENDOR_SITE_ID IS NOT NULL THEN
      P_VENDOR_SITE_LEX := ' AND jipov.vendor_site_id = :p_vendor_site_id';
    ELSE
      P_VENDOR_SITE_LEX := ' AND jipov.vendor_id = :p_vendor_id AND jipov.vendor_site_id = :p_vendor_site_id';
    END IF;
    IF P_REPORT_TYPE = 'Unregistered Dealers' THEN
      P_VENDOR_SITE_LEX := P_VENDOR_SITE_LEX || ' AND	jipov.st_reg_no IS NULL AND jipov.cst_reg_no IS NULL';
    ELSIF P_REPORT_TYPE = 'Outside State' THEN
      P_VENDOR_SITE_LEX := P_VENDOR_SITE_LEX || ' AND	jipov.cst_reg_no IS NOT NULL';
    ELSIF P_REPORT_TYPE = 'Within State' THEN
      P_VENDOR_SITE_LEX := P_VENDOR_SITE_LEX || ' AND	jipov.st_reg_no IS NOT NULL';
    END IF;
    RETURN (TRUE);
  END P_VENDOR_SITE_LEXVALIDTRIGGER;

  FUNCTION CF_ORGN_NAMEFORMULA RETURN CHAR IS
    CURSOR C_ORGANIZATION_NAME(P_ORGANIZATION_ID IN NUMBER) IS
      SELECT
        NAME,
        INTERNAL_ADDRESS_LINE
      FROM
        HR_ALL_ORGANIZATION_UNITS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    V_ORGN_NAME HR_ALL_ORGANIZATION_UNITS.NAME%TYPE;
  BEGIN
    OPEN C_ORGANIZATION_NAME(P_INV_ORGANIZATION_ID);
    FETCH C_ORGANIZATION_NAME
     INTO V_ORGN_NAME,CP_INTADRS;
    CLOSE C_ORGANIZATION_NAME;
    RETURN V_ORGN_NAME;
  END CF_ORGN_NAMEFORMULA;

  FUNCTION CF_LOC_CODEFORMULA RETURN CHAR IS
    CURSOR C_LOCATION_CODE(P_LOCATION_ID IN NUMBER) IS
      SELECT
        LOCATION_CODE
      FROM
        HR_LOCATIONS
      WHERE LOCATION_ID = P_LOCATION_ID;
    V_LOC_CODE HR_LOCATIONS.LOCATION_CODE%TYPE;
  BEGIN
    OPEN C_LOCATION_CODE(P_LOCATION_ID);
    FETCH C_LOCATION_CODE
     INTO V_LOC_CODE;
    CLOSE C_LOCATION_CODE;
    RETURN V_LOC_CODE;
  END CF_LOC_CODEFORMULA;

  FUNCTION P_INVOICE_DATE_LEXVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    IF P_START_DATE IS NULL AND P_END_DATE1 IS NULL THEN
      P_INVOICE_DATE_LEX := ' ';
    ELSIF P_START_DATE IS NULL AND P_END_DATE1 IS NOT NULL THEN
      P_INVOICE_DATE_LEX := ' AND INV1.INVOICE_DATE <= :P_END_DATE1';
    ELSIF P_START_DATE IS NOT NULL AND P_END_DATE1 IS NULL THEN
      P_INVOICE_DATE_LEX := ' AND INV1.INVOICE_DATE BETWEEN :P_START_DATE AND :P_SYSDATE';
    ELSE
      P_INVOICE_DATE_LEX := ' AND INV1.INVOICE_DATE BETWEEN :P_START_DATE AND :P_END_DATE1';
    END IF;
    RETURN (TRUE);
  END P_INVOICE_DATE_LEXVALIDTRIGGER;

  FUNCTION CF_VEND_CSTFORMULA(VENDOR_ID IN NUMBER
                             ,VENDOR_SITE_ID IN NUMBER) RETURN CHAR IS
    CURSOR C_JA_VENDOR_DETAILS(P_VENDOR_ID IN NUMBER,P_VENDOR_SITE_ID IN NUMBER) IS
      SELECT
        CST_REG_NO,
        ST_REG_NO,
        VAT_REG_NO
      FROM
        JAI_CMN_VENDOR_SITES
      WHERE VENDOR_ID = P_VENDOR_ID
        AND VENDOR_SITE_ID = P_VENDOR_SITE_ID;
    V_CST_REG_NO JAI_CMN_VENDOR_SITES.CST_REG_NO%TYPE;
  BEGIN
    OPEN C_JA_VENDOR_DETAILS(VENDOR_ID,VENDOR_SITE_ID);
    FETCH C_JA_VENDOR_DETAILS
     INTO V_CST_REG_NO,CP_VEND_LST,CP_VEND_VAT;
    CLOSE C_JA_VENDOR_DETAILS;
    RETURN V_CST_REG_NO;
  END CF_VEND_CSTFORMULA;

  FUNCTION CF_VEND_NAMEFORMULA(VENDOR_ID IN NUMBER) RETURN CHAR IS
    CURSOR C_VENDOR_NAME(P_VENDOR_ID IN NUMBER) IS
      SELECT
        VENDOR_NAME
      FROM
        PO_VENDORS
      WHERE VENDOR_ID = P_VENDOR_ID;
    V_VENDOR_NAME PO_VENDORS.VENDOR_NAME%TYPE;
  BEGIN
    OPEN C_VENDOR_NAME(VENDOR_ID);
    FETCH C_VENDOR_NAME
     INTO V_VENDOR_NAME;
    CLOSE C_VENDOR_NAME;
    RETURN V_VENDOR_NAME;
  END CF_VEND_NAMEFORMULA;

  FUNCTION CF_VEND_SITE_CODEFORMULA(VENDOR_SITE_ID IN NUMBER) RETURN CHAR IS
    CURSOR C_VENDOR_SITE_CODE(P_VENDOR_SITE_ID IN NUMBER) IS
      SELECT
        VENDOR_SITE_CODE,
        STATE
      FROM
        PO_VENDOR_SITES_ALL
      WHERE VENDOR_SITE_ID = P_VENDOR_SITE_ID;
    V_VENDOR_SITE_CODE PO_VENDOR_SITES_ALL.VENDOR_SITE_CODE%TYPE;
  BEGIN
    OPEN C_VENDOR_SITE_CODE(VENDOR_SITE_ID);
    FETCH C_VENDOR_SITE_CODE
     INTO V_VENDOR_SITE_CODE,CP_VEND_STATE;
    CLOSE C_VENDOR_SITE_CODE;
    RETURN V_VENDOR_SITE_CODE;
  END CF_VEND_SITE_CODEFORMULA;

  FUNCTION CF_REG_NOFORMULA(VENDOR_ID IN NUMBER
                           ,VENDOR_SITE_ID IN NUMBER) RETURN CHAR IS
    CURSOR C_JA_VENDOR_DETAILS(P_VENDOR_ID IN NUMBER,P_VENDOR_SITE_ID IN NUMBER) IS
      SELECT
        CST_REG_NO,
        ST_REG_NO,
        VAT_REG_NO
      FROM
        JAI_CMN_VENDOR_SITES
      WHERE VENDOR_ID = P_VENDOR_ID
        AND VENDOR_SITE_ID = P_VENDOR_SITE_ID;
    V_CST_REG_NO JAI_CMN_VENDOR_SITES.CST_REG_NO%TYPE;
    V_ST_REG_NO JAI_CMN_VENDOR_SITES.ST_REG_NO%TYPE;
    V_VAT_REG_NO JAI_CMN_VENDOR_SITES.VAT_REG_NO%TYPE;
    V_REG_NO JAI_CMN_VENDOR_SITES.CST_REG_NO%TYPE;
  BEGIN
    OPEN C_JA_VENDOR_DETAILS(VENDOR_ID,VENDOR_SITE_ID);
    FETCH C_JA_VENDOR_DETAILS
     INTO V_CST_REG_NO,V_ST_REG_NO,V_VAT_REG_NO;
    CLOSE C_JA_VENDOR_DETAILS;
    IF P_REPORT_TYPE = 'Outside State' THEN
      V_REG_NO := V_CST_REG_NO;
    ELSIF P_REPORT_TYPE = 'Within State' THEN
      V_REG_NO := V_ST_REG_NO;
    ELSIF P_REPORT_TYPE = 'Unregistered Dealers' THEN
      V_REG_NO := 'n/a';
    ELSE
      V_REG_NO := 'N/A';
    END IF;
    RETURN V_REG_NO;
  END CF_REG_NOFORMULA;

  FUNCTION P_REPORT_TYPE_DESCVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    IF P_REPORT_TYPE = 'Outside State' THEN
      P_REPORT_TYPE_DESC := 'Outside State';
    ELSIF P_REPORT_TYPE = 'Within State' THEN
      P_REPORT_TYPE_DESC := 'Within State';
    ELSIF P_REPORT_TYPE = 'Unregistered Dealers' THEN
      P_REPORT_TYPE_DESC := 'UnRegistered Dealers';
    ELSE
      P_REPORT_TYPE_DESC := 'N/A';
    END IF;
    RETURN (TRUE);
  END P_REPORT_TYPE_DESCVALIDTRIGGER;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR C_PROGRAM_ID(P_REQUEST_ID IN NUMBER) IS
      SELECT
        CONCURRENT_PROGRAM_ID,
        NVL(ENABLE_TRACE
           ,'N')
      FROM
        FND_CONCURRENT_REQUESTS
      WHERE REQUEST_ID = P_REQUEST_ID;
    V_ENABLE_TRACE FND_CONCURRENT_PROGRAMS.ENABLE_TRACE%TYPE;
    V_PROGRAM_ID FND_CONCURRENT_PROGRAMS.CONCURRENT_PROGRAM_ID%TYPE;
    CURSOR GET_AUDSID IS
      SELECT
        A.SID,
        A.SERIAL#,
        NVL(B.SPID
           ,'')
      FROM
        V$SESSION A,
        V$PROCESS B
      WHERE AUDSID = USERENV('SESSIONID')
        AND A.PADDR = B.ADDR;
    CURSOR GET_DBNAME IS
      SELECT
        NVL(NAME
           ,'')
      FROM
        V$DATABASE;
    AUDSID NUMBER := USERENV('SESSIONID');
    SID NUMBER;
    SERIAL NUMBER;
    SPID VARCHAR2(9);
    NAME1 VARCHAR2(25);
    temp1 boolean;
    temp2 boolean;

  BEGIN
  temp1:=P_END_DATEValidTrigger;
  temp2:=P_REPORT_TYPE_DESCVALIDTRIGGER;
  temp2:=P_SYSDATEVALIDTRIGGER;
  temp2:=P_TAX_TYPE_LEXVALIDTRIGGER;
  temp2:=P_VENDOR_SITE_LEXVALIDTRIGGER;
  temp2:=P_INVOICE_DATE_LEXVALIDTRIGGER;
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.MESSAGE(1275
               ,'Report Version is 120.3 Last modified date is 21/06/2007')*/NULL;
    BEGIN
      OPEN C_PROGRAM_ID(P_CONC_REQUEST_ID);
      FETCH C_PROGRAM_ID
       INTO V_PROGRAM_ID,V_ENABLE_TRACE;
      CLOSE C_PROGRAM_ID;
      /*SRW.MESSAGE(1275
                 ,'v_program_id -> ' || V_PROGRAM_ID || ', v_enable_trace -> ' || V_ENABLE_TRACE || ', request_id -> ' || P_CONC_REQUEST_ID)*/NULL;
      IF V_ENABLE_TRACE = 'Y' THEN
        EXECUTE IMMEDIATE
          'ALTER SESSION SET EVENTS ''10046 trace name context forever, level 4''';
        OPEN GET_AUDSID;
        FETCH GET_AUDSID
         INTO SID,SERIAL,SPID;
        CLOSE GET_AUDSID;
        OPEN GET_DBNAME;
        FETCH GET_DBNAME
         INTO NAME1;
        CLOSE GET_DBNAME;
        /*SRW.MESSAGE(1275
                   ,'TraceFile Name = ' || NVL(LOWER(NAME1)
                      ,'') || '_ora_' || NVL(SPID
                      ,'') || '.trc')*/NULL;
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(1275
                   ,'Error during enabling the trace. ErrCode -> ' || SQLCODE || ', ErrMesg -> ' || SQLERRM)*/NULL;
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION P_TAX_TYPE_LEXVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    IF P_REPORT_TYPE = 'Unregistered Dealers' THEN
      P_TAX_TYPE_LEX := ' AND	jitc.tax_type IN ( ''CST'', ''Sales Tax'' )';
    ELSIF P_REPORT_TYPE = 'Outside State' THEN
      P_TAX_TYPE_LEX := ' AND	jitc.tax_type = ''CST'' ';
    ELSIF P_REPORT_TYPE = 'Within State' THEN
      P_TAX_TYPE_LEX := ' AND	jitc.tax_type = ''Sales Tax'' ';
    END IF;
    RETURN (TRUE);
  END P_TAX_TYPE_LEXVALIDTRIGGER;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CP_INTADRS_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_INTADRS;
  END CP_INTADRS_P;

  FUNCTION CP_VEND_LST_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_VEND_LST;
  END CP_VEND_LST_P;

  FUNCTION CP_VEND_VAT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_VEND_VAT;
  END CP_VEND_VAT_P;

  FUNCTION CP_VEND_STATE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_VEND_STATE;
  END CP_VEND_STATE_P;

END JA_JAINPROS_XMLP_PKG;




/
