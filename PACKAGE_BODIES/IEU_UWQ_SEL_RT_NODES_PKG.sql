--------------------------------------------------------
--  DDL for Package Body IEU_UWQ_SEL_RT_NODES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IEU_UWQ_SEL_RT_NODES_PKG" as
/* $Header: IEUSRTNB.pls 120.0 2005/06/02 15:44:00 appldev noship $ */
procedure INSERT_ROW (
  X_RESOURCE_ID in NUMBER,
  X_SEL_ENUM_ID in NUMBER,
  X_NODE_ID in NUMBER,
  X_NODE_TYPE in NUMBER,
  X_NODE_PID in NUMBER,
  X_NODE_WEIGHT in NUMBER,
  X_SEL_ENUM_PID in NUMBER,
  X_SEL_RT_NODE_ID in NUMBER,
  X_MEDIA_TYPE_ID in NUMBER,
  X_COUNT in NUMBER,
  X_DATA_SOURCE in VARCHAR2,
  X_VIEW_NAME in VARCHAR2,
  X_WHERE_CLAUSE in VARCHAR2,
  X_HIDE_IF_EMPTY in VARCHAR2,
  X_NOT_VALID in VARCHAR2,
  X_NODE_LABEL in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_REFRESH_VIEW_NAME in varchar2,
  X_RES_CAT_ENUM_FLAG in VARCHAR2,
  X_REFRESH_VIEW_SUM_COL in VARCHAR2
) is

begin
  insert into IEU_UWQ_SEL_RT_NODES (
    SEL_ENUM_ID,
    NODE_LABEL,
    NODE_WEIGHT,
    SEL_ENUM_PID,
    SEL_RT_NODE_ID,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    MEDIA_TYPE_ID,
    RESOURCE_ID,
    NODE_ID,
    NODE_TYPE,
    COUNT,
    DATA_SOURCE,
    VIEW_NAME,
    NODE_PID,
    WHERE_CLAUSE,
    HIDE_IF_EMPTY,
    REFRESH_VIEW_NAME,
    REFRESH_VIEW_SUM_COL,
    RES_CAT_ENUM_FLAG,
    NOT_VALID
  ) values
  (
    X_SEL_ENUM_ID,
    X_NODE_LABEL,
    X_NODE_WEIGHT,
    X_SEL_ENUM_PID,
    X_SEL_RT_NODE_ID,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATE_LOGIN,
    X_MEDIA_TYPE_ID,
    X_RESOURCE_ID,
    X_NODE_ID,
    X_NODE_TYPE,
    X_COUNT,
    X_DATA_SOURCE,
    X_VIEW_NAME,
    X_NODE_PID,
    X_WHERE_CLAUSE,
    X_HIDE_IF_EMPTY,
    X_REFRESH_VIEW_NAME,
    X_REFRESH_VIEW_SUM_COL,
    X_RES_CAT_ENUM_FLAG,
    X_NOT_VALID
  );

end INSERT_ROW;

procedure UPDATE_ROW (
  X_SEL_RT_NODE_ID in NUMBER,
  X_RESOURCE_ID in NUMBER,
  X_SEL_ENUM_ID in NUMBER,
  X_NODE_ID in NUMBER,
  X_NODE_TYPE in NUMBER,
  X_NODE_PID in NUMBER,
  X_NODE_WEIGHT in NUMBER,
  X_SEL_ENUM_PID in NUMBER,
  X_MEDIA_TYPE_ID in NUMBER,
  X_COUNT in NUMBER,
  X_DATA_SOURCE in VARCHAR2,
  X_VIEW_NAME in VARCHAR2,
  X_WHERE_CLAUSE in VARCHAR2,
  X_HIDE_IF_EMPTY in VARCHAR2,
  X_NOT_VALID in VARCHAR2,
  X_NODE_LABEL in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_REFRESH_VIEW_NAME in varchar2,
  X_RES_CAT_ENUM_FLAG IN VARCHAR2,
  X_REFRESH_VIEW_SUM_COL in VARCHAR2
) is
begin
  update IEU_UWQ_SEL_RT_NODES set
    SEL_ENUM_ID = X_SEL_ENUM_ID,
    NODE_ID = X_NODE_ID,
    NODE_TYPE = X_NODE_TYPE,
    NODE_PID = X_NODE_PID,
    NODE_WEIGHT = X_NODE_WEIGHT,
    SEL_ENUM_PID = X_SEL_ENUM_PID,
    MEDIA_TYPE_ID = X_MEDIA_TYPE_ID,
    COUNT = X_COUNT,
    DATA_SOURCE = X_DATA_SOURCE,
    VIEW_NAME = X_VIEW_NAME,
    WHERE_CLAUSE = X_WHERE_CLAUSE,
    HIDE_IF_EMPTY = X_HIDE_IF_EMPTY,
    REFRESH_VIEW_NAME = X_REFRESH_VIEW_NAME,
    REFRESH_VIEW_SUM_COL = X_REFRESH_VIEW_SUM_COL,
    RES_CAT_ENUM_FLAG = X_RES_CAT_ENUM_FLAG,
    NOT_VALID = X_NOT_VALID,
    NODE_LABEL = X_NODE_LABEL,
    LAST_UPDATE_DATE = sysdate,
    LAST_UPDATED_BY = FND_GLOBAL.USER_ID,
    LAST_UPDATE_LOGIN = FND_GLOBAL.LOGIN_ID
    where RESOURCE_ID = X_RESOURCE_ID
    and NODE_ID = X_NODE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

PROCEDURE LOAD_ROW (
  X_RESOURCE_ID in NUMBER,
  X_SEL_ENUM_ID in NUMBER,
  X_NODE_ID in NUMBER,
  X_NODE_TYPE in NUMBER,
  X_NODE_PID in NUMBER,
  X_NODE_WEIGHT in NUMBER,
  X_NODE_DEPTH in NUMBER,
  X_SEL_ENUM_PID in NUMBER,
  X_MEDIA_TYPE_ID in NUMBER,
  X_COUNT in NUMBER,
  X_DATA_SOURCE in VARCHAR2,
  X_VIEW_NAME in VARCHAR2,
  X_WHERE_CLAUSE in VARCHAR2,
  X_HIDE_IF_EMPTY in VARCHAR2,
  X_NOT_VALID in VARCHAR2,
  X_NODE_LABEL in VARCHAR2,
  X_REFRESH_VIEW_NAME in varchar2,
  X_RES_CAT_ENUM_FLAG IN VARCHAR2,
  X_REFRESH_VIEW_SUM_COL in varchar2

) is

 begin
  update IEU_UWQ_SEL_RT_NODES set
    SEL_ENUM_ID = X_SEL_ENUM_ID,
    NODE_ID = X_NODE_ID,
    NODE_TYPE = X_NODE_TYPE,
    NODE_PID = X_NODE_PID,
    NODE_WEIGHT = X_NODE_WEIGHT,
    NODE_DEPTH = X_NODE_DEPTH,
    SEL_ENUM_PID = X_SEL_ENUM_PID,
    MEDIA_TYPE_ID = X_MEDIA_TYPE_ID,
    COUNT = X_COUNT,
    DATA_SOURCE = X_DATA_SOURCE,
    VIEW_NAME = X_VIEW_NAME,
    WHERE_CLAUSE = X_WHERE_CLAUSE,
    HIDE_IF_EMPTY = X_HIDE_IF_EMPTY,
    REFRESH_VIEW_NAME = X_REFRESH_VIEW_NAME,
    REFRESH_VIEW_SUM_COL = X_REFRESH_VIEW_SUM_COL,
    RES_CAT_ENUM_FLAG = X_RES_CAT_ENUM_FLAG,
    NOT_VALID = X_NOT_VALID,
    NODE_LABEL = X_NODE_LABEL,
    LAST_UPDATE_DATE = sysdate,
    LAST_UPDATED_BY = FND_GLOBAL.USER_ID,
    LAST_UPDATE_LOGIN = FND_GLOBAL.LOGIN_ID
    where RESOURCE_ID = X_RESOURCE_ID
    and NODE_ID = X_NODE_ID;

    if (sql%notfound) then --dbms_output.put_line('proc load row');
      raise no_data_found;
    end if;

  exception
   when no_data_found then
  -- dbms_output.put_line('inserting');
   insert into IEU_UWQ_SEL_RT_NODES (
    SEL_RT_NODE_ID,
    SEL_ENUM_ID,
    NODE_LABEL,
    NODE_WEIGHT,
    NODE_DEPTH,
    SEL_ENUM_PID,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    MEDIA_TYPE_ID,
    RESOURCE_ID,
    NODE_ID,
    NODE_TYPE,
    COUNT,
    DATA_SOURCE,
    VIEW_NAME,
    NODE_PID,
    WHERE_CLAUSE,
    HIDE_IF_EMPTY,
    REFRESH_VIEW_NAME,
    REFRESH_VIEW_SUM_COL,
    RES_CAT_ENUM_FLAG,
    NOT_VALID
  ) values
  (
    IEU_UWQ_SEL_RT_NODES_S1.NEXTVAL,
    X_SEL_ENUM_ID,
    X_NODE_LABEL,
    X_NODE_WEIGHT,
    X_NODE_DEPTH,
    X_SEL_ENUM_PID,
    FND_GLOBAL.USER_ID,
    sysdate,
    FND_GLOBAL.USER_ID,
    sysdate,
    FND_GLOBAL.LOGIN_ID,
    X_MEDIA_TYPE_ID,
    X_RESOURCE_ID,
    X_NODE_ID,
    X_NODE_TYPE,
    X_COUNT,
    X_DATA_SOURCE,
    X_VIEW_NAME,
    X_NODE_PID,
    X_WHERE_CLAUSE,
    X_HIDE_IF_EMPTY,
    X_REFRESH_VIEW_NAME,
    X_REFRESH_VIEW_SUM_COL,
    X_RES_CAT_ENUM_FLAG,
    X_NOT_VALID
  );

END LOAD_ROW;

procedure DELETE_ROW (
  X_RESOURCE_ID in NUMBER,
  X_SEL_ENUM_ID in NUMBER,
  X_NODE_ID in NUMBER,
  X_NODE_TYPE in NUMBER,
  X_NODE_PID in NUMBER
) is
begin
  delete from IEU_UWQ_SEL_RT_NODES
  where RESOURCE_ID = X_RESOURCE_ID
  and SEL_ENUM_ID = X_SEL_ENUM_ID
  and NODE_ID = X_NODE_ID
  and NODE_TYPE = X_NODE_TYPE
  and NODE_PID = X_NODE_PID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

end DELETE_ROW;

end IEU_UWQ_SEL_RT_NODES_PKG;

/
