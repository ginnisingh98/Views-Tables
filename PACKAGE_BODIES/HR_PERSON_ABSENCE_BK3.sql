--------------------------------------------------------
--  DDL for Package Body HR_PERSON_ABSENCE_BK3
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."HR_PERSON_ABSENCE_BK3" as
/* $Header: peabsapi.pkb 120.4.12010000.29 2010/04/08 10:24:36 generated ship $ */
-- Code generated by the Oracle HRMS API Hook Pre-processor
-- Created on 2013/08/30 11:36:20 (YYYY/MM/DD HH24:MI:SS)
procedure DELETE_PERSON_ABSENCE_A
(P_ABSENCE_ATTENDANCE_ID in NUMBER
,P_OBJECT_VERSION_NUMBER in NUMBER
,P_PERSON_ID in NUMBER
)is
l_commit_unit_number number;
l_legislation_code   varchar2(30);
begin
hr_utility.set_location('Entering: HR_PERSON_ABSENCE_BK3.DELETE_PERSON_ABSENCE_A', 10);
l_commit_unit_number := hr_api.return_commit_unit;
if hr_api.call_app_hooks then
hr_person_absence_be3.DELETE_PERSON_ABSENCE_A
(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
,P_OBJECT_VERSION_NUMBER => P_OBJECT_VERSION_NUMBER
,P_PERSON_ID => P_PERSON_ID
);
end if;
if hr_api.call_leg_hooks then
l_legislation_code := PER_ABS_BUS.return_legislation_code(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
);
if l_legislation_code = 'GB' then
PER_GB_ABSENCE_RULES.SICKNESS_DATE_UPDATE
(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
);
end if;
end if;
hr_multi_message.end_validation_set;
hr_api.validate_commit_unit(l_commit_unit_number, 'DELETE_PERSON_ABSENCE', 'AP');
hr_utility.set_location(' Leaving: HR_PERSON_ABSENCE_BK3.DELETE_PERSON_ABSENCE_A', 20);
end DELETE_PERSON_ABSENCE_A;
procedure DELETE_PERSON_ABSENCE_B
(P_ABSENCE_ATTENDANCE_ID in NUMBER
,P_OBJECT_VERSION_NUMBER in NUMBER
)is
l_commit_unit_number number;
l_legislation_code   varchar2(30);
begin
hr_utility.set_location('Entering: HR_PERSON_ABSENCE_BK3.DELETE_PERSON_ABSENCE_B', 10);
l_commit_unit_number := hr_api.return_commit_unit;
if hr_api.call_leg_hooks then
l_legislation_code := PER_ABS_BUS.return_legislation_code(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
);
if l_legislation_code = 'DK' then
hr_loc_absence.delete_absence
(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
);
elsif l_legislation_code = 'FI' then
hr_loc_absence.delete_absence
(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
);
elsif l_legislation_code = 'GB' then
PER_GB_ABSENCE_RULES.VALIDATE_ABS_DELETE
(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
);
elsif l_legislation_code = 'NL' then
HR_NL_DAILY_SICK_AND_RECOVERY.DELETE_PERSON_ABSENCE_CHANGES
(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
);
elsif l_legislation_code = 'NO' then
hr_loc_absence.delete_absence
(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
);
elsif l_legislation_code = 'SE' then
hr_loc_absence.delete_absence
(P_ABSENCE_ATTENDANCE_ID => P_ABSENCE_ATTENDANCE_ID
);
end if;
end if;
hr_api.validate_commit_unit(l_commit_unit_number, 'DELETE_PERSON_ABSENCE', 'BP');
hr_utility.set_location(' Leaving: HR_PERSON_ABSENCE_BK3.DELETE_PERSON_ABSENCE_B', 20);
end DELETE_PERSON_ABSENCE_B;
end HR_PERSON_ABSENCE_BK3;

/
