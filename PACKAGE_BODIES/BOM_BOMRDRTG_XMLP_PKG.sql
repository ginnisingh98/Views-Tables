--------------------------------------------------------
--  DDL for Package Body BOM_BOMRDRTG_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."BOM_BOMRDRTG_XMLP_PKG" AS
/* $Header: BOMRDRTGB.pls 120.1 2008/01/06 10:09:37 nchinnam noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    DECLARE
      ORG_NAME VARCHAR2(60);
      DISPLAY_OPTION VARCHAR2(80);
      ALT_OPTION VARCHAR2(80);
      RPT_SELECTION VARCHAR2(80);
      DETAIL VARCHAR2(80);
      SPECIFIC_ITEM VARCHAR2(80);
      CAT_SET_NAME VARCHAR2(30);
      CURRENCY_CODE VARCHAR2(15);
      DTL_SUM_CHAR VARCHAR2(80);
      ITEM_ID_NULL EXCEPTION;
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
      IF (P_RPT_SELECTION = 1) AND (P_ITEM IS NULL) THEN
        FND_MESSAGE.SET_NAME('null'
                            ,'MFG_REQUIRED_VALUE');
        FND_MESSAGE.SET_TOKEN('ENTITY'
                             ,'specific item');
        P_MSG_BUF := FND_MESSAGE.GET;
        /*SRW.MESSAGE('999'
                   ,P_MSG_BUF)*/NULL;
        RAISE ITEM_ID_NULL;
      END IF;
      IF P_ITEM IS NOT NULL THEN
        SELECT
          ITEM_NUMBER
        INTO SPECIFIC_ITEM
        FROM
          MTL_ITEM_FLEXFIELDS
        WHERE ORGANIZATION_ID = P_ORG_ID
          AND ITEM_ID = P_ITEM;
      END IF;
      IF P_EFF_DATE IS NULL THEN
        P_EFF_DATE := TO_CHAR(SYSDATE
                             ,'YYYY/MM/DD HH24:MI:SS');
      END IF;
      P_EFF_DATE1:=P_EFF_DATE;
      SELECT
        ORG.ORGANIZATION_NAME,
        LU1.MEANING,
        LU2.MEANING,
        LU3.MEANING,
        LU4.MEANING,
        SETS.CATEGORY_SET_NAME,
        BOOKS.CURRENCY_CODE,
        LU5.MEANING
      INTO ORG_NAME,DISPLAY_OPTION,ALT_OPTION,RPT_SELECTION,DETAIL,CAT_SET_NAME,CURRENCY_CODE,DTL_SUM_CHAR
      FROM
        ORG_ORGANIZATION_DEFINITIONS ORG,
        MFG_LOOKUPS LU1,
        MFG_LOOKUPS LU2,
        MFG_LOOKUPS LU3,
        MFG_LOOKUPS LU4,
        MFG_LOOKUPS LU5,
        MTL_CATEGORY_SETS SETS,
        GL_SETS_OF_BOOKS BOOKS
      WHERE ORG.ORGANIZATION_ID = P_ORG_ID
        AND LU1.LOOKUP_CODE = P_DISPLAY_OPTION
        AND LU1.LOOKUP_TYPE = 'BOM_INQUIRY_DISPLAY_TYPE'
        AND LU2.LOOKUP_CODE = P_ALT_OPTION
        AND LU2.LOOKUP_TYPE = 'MCG_AUTOLOAD_OPTION'
        AND LU3.LOOKUP_CODE = P_RPT_SELECTION
        AND LU3.LOOKUP_TYPE = 'BOM_SELECTION_TYPE'
        AND LU4.LOOKUP_CODE = P_DETAIL
        AND LU4.LOOKUP_TYPE = 'SYS_YES_NO'
        AND SETS.CATEGORY_SET_ID = P_CAT_SET
        AND ORG.SET_OF_BOOKS_ID = BOOKS.SET_OF_BOOKS_ID
        AND LU5.LOOKUP_CODE = P_DETAIL
        AND LU5.LOOKUP_TYPE = 'CST_RPT_DETAIL_OPTION';
      P_ORG_NAME := ORG_NAME;
      P_DISPLAY_OPTION_CHAR := DISPLAY_OPTION;
      P_ALT_OPTION_CHAR := ALT_OPTION;
      P_RPT_SELECTION_CHAR := RPT_SELECTION;
      P_DETAIL_CHAR := DETAIL;
      P_SPECIFIC_ITEM_FLEX := SPECIFIC_ITEM;
      P_CAT_SET_NAME := CAT_SET_NAME;
      P_CURRENCY_CODE := CURRENCY_CODE;
      P_DTL_SUM_CHAR := DTL_SUM_CHAR;
      IF P_DETAIL = 2 THEN
        /*SRW.SET_MAXROW('Q_OP_RSC'
                      ,0)*/NULL;
      END IF;
      IF P_RPT_SELECTION = 2 THEN
        IF (P_ITEM_FROM IS NOT NULL) THEN
          IF (P_ITEM_TO IS NOT NULL) THEN
            NULL;
          ELSE
            NULL;
          END IF;
        ELSE
          IF (P_ITEM_TO IS NOT NULL) THEN
            NULL;
          END IF;
        END IF;
        IF (P_CAT_FROM IS NOT NULL) THEN
          IF (P_CAT_TO IS NOT NULL) THEN
            NULL;
          ELSE
            NULL;
          END IF;
        ELSE
          IF (P_CAT_TO IS NOT NULL) THEN
            NULL;
          END IF;
        END IF;
      END IF;
    EXCEPTION
      WHEN ITEM_ID_NULL THEN
        /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

END BOM_BOMRDRTG_XMLP_PKG;




/
