--------------------------------------------------------
--  DDL for Package Body IEX_DEL_STATUSES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IEX_DEL_STATUSES_PKG" AS
/* $Header: iextdlsb.pls 120.1 2005/07/12 20:35:40 jsanju noship $ */
/* Insert_Row procedure */
PG_DEBUG NUMBER(2) := TO_NUMBER(NVL(FND_PROFILE.value('IEX_DEBUG_LEVEL'), '20'));

PROCEDURE Insert_Row(x_rowid	IN OUT NOCOPY VARCHAR2
	,p_DEL_STATUS_ID		NUMBER
	,p_OBJECT_VERSION_NUMBER	NUMBER
	,p_SCORE_VALUE_LOW		NUMBER
	,p_SCORE_VALUE_HIGH		NUMBER
	,p_DEL_STATUS			VARCHAR2
	,p_SCORE_ID			NUMBER
	,p_REQUEST_ID			NUMBER	DEFAULT NULL
	,p_PROGRAM_APPLICATION_ID	NUMBER	DEFAULT NULL
	,p_PROGRAM_ID			NUMBER	DEFAULT NULL
	,p_PROGRAM_UPDATE_DATE		DATE	DEFAULT NULL
	,p_CREATED_BY			NUMBER
	,p_CREATION_DATE		DATE
	,p_LAST_UPDATED_BY		NUMBER
	,p_LAST_UPDATE_DATE		DATE
	,p_LAST_UPDATE_LOGIN		NUMBER	DEFAULT NULL
) IS
	CURSOR C IS SELECT ROWID FROM IEX_DEL_STATUSES
		WHERE DEL_STATUS_ID = p_DEL_STATUS_ID;

BEGIN
	INSERT INTO IEX_DEL_STATUSES
	(
		DEL_STATUS_ID
		,OBJECT_VERSION_NUMBER
		,SCORE_VALUE_LOW
		,SCORE_VALUE_HIGH
		,DEL_STATUS
		,SCORE_ID
		,REQUEST_ID
		,PROGRAM_APPLICATION_ID
		,PROGRAM_ID
		,PROGRAM_UPDATE_DATE
		,CREATED_BY
		,CREATION_DATE
		,LAST_UPDATED_BY
		,LAST_UPDATE_DATE
		,LAST_UPDATE_LOGIN
	) VALUES (
		p_DEL_STATUS_ID
		,p_OBJECT_VERSION_NUMBER
		,p_SCORE_VALUE_LOW
		,p_SCORE_VALUE_HIGH
		,p_DEL_STATUS
		,p_SCORE_ID
		,p_REQUEST_ID
		,p_PROGRAM_APPLICATION_ID
		,p_PROGRAM_ID
		,p_PROGRAM_UPDATE_DATE
		,p_CREATED_BY
		,p_CREATION_DATE
		,p_LAST_UPDATED_BY
		,p_LAST_UPDATE_DATE
		,p_LAST_UPDATE_LOGIN
	);

	OPEN C;
	FETCH C INTO x_rowid;
	IF (C%NOTFOUND) THEN
		CLOSE C;
		RAISE NO_DATA_FOUND;
	END IF;
	CLOSE C;
END Insert_Row;



/* Insert_Row procedure */
PROCEDURE Insert_Row_With_Defaults
	(x_rowid		IN OUT NOCOPY VARCHAR2
	,p_SCORE_VALUE_LOW		NUMBER
	,p_SCORE_VALUE_HIGH		NUMBER
	,p_DEL_STATUS			VARCHAR2
	,p_SCORE_ID			NUMBER
	,Commit_flag			VARCHAR2
) IS
	CURSOR C(p_del_status_id number)
	IS SELECT ROWID FROM IEX_DEL_STATUSES
		WHERE DEL_STATUS_ID = p_DEL_STATUS_ID;

	l_del_status_id	Number ;

BEGIN
    -- Slightly modified since a lot of default values will be provided

	Select IEX_DEL_STATUSES_S.nextval
	into l_del_status_id
	From dual ;

	INSERT INTO IEX_DEL_STATUSES
	(
		 DEL_STATUS_ID
		,OBJECT_VERSION_NUMBER
		,SCORE_VALUE_LOW
		,SCORE_VALUE_HIGH
		,DEL_STATUS
		,SCORE_ID
		,REQUEST_ID
		,PROGRAM_APPLICATION_ID
		,PROGRAM_ID
		,PROGRAM_UPDATE_DATE
		,CREATED_BY
		,CREATION_DATE
		,LAST_UPDATED_BY
		,LAST_UPDATE_DATE
		,LAST_UPDATE_LOGIN
	) VALUES (
		l_del_status_id
		,1
		,p_SCORE_VALUE_LOW
		,p_SCORE_VALUE_HIGH
		,p_DEL_STATUS
		,p_SCORE_ID
		,NULL
		,NULL
		,NULL
		,NULL
		,-1
		,SYSDATE
		,-1
		,SYSDATE
		,-1
	);

	OPEN C(l_del_status_id) ;
	FETCH C INTO x_rowid;
	IF (C%NOTFOUND) THEN
		CLOSE C;
		ROLLBACK ;
		RAISE NO_DATA_FOUND;
		CLOSE C;
		return ;
	END IF;
	close C ;

	if commit_flag = 'Y' then
	    Commit ;
	End If ;

END Insert_Row_With_Defaults;


/* Update_Row procedure */
PROCEDURE Update_Row(x_rowid	VARCHAR2
	,p_DEL_STATUS_ID		NUMBER
	,p_OBJECT_VERSION_NUMBER		NUMBER
	,p_SCORE_VALUE_LOW		NUMBER
	,p_SCORE_VALUE_HIGH		NUMBER
	,p_DEL_STATUS		VARCHAR2
	,p_SCORE_ID		NUMBER
	,p_REQUEST_ID		NUMBER	DEFAULT NULL
	,p_PROGRAM_APPLICATION_ID		NUMBER	DEFAULT NULL
	,p_PROGRAM_ID		NUMBER	DEFAULT NULL
	,p_PROGRAM_UPDATE_DATE		DATE	DEFAULT NULL
	,p_CREATED_BY		NUMBER
	,p_CREATION_DATE		DATE
	,p_LAST_UPDATED_BY		NUMBER
	,p_LAST_UPDATE_DATE		DATE
	,p_LAST_UPDATE_LOGIN		NUMBER	DEFAULT NULL
) IS
BEGIN
	UPDATE IEX_DEL_STATUSES SET
		DEL_STATUS_ID = p_DEL_STATUS_ID
		,OBJECT_VERSION_NUMBER = p_OBJECT_VERSION_NUMBER
		,SCORE_VALUE_LOW = p_SCORE_VALUE_LOW
		,SCORE_VALUE_HIGH = p_SCORE_VALUE_HIGH
		,DEL_STATUS = p_DEL_STATUS
		,SCORE_ID = p_SCORE_ID
		,REQUEST_ID = p_REQUEST_ID
		,PROGRAM_APPLICATION_ID = p_PROGRAM_APPLICATION_ID
		,PROGRAM_ID = p_PROGRAM_ID
		,PROGRAM_UPDATE_DATE = p_PROGRAM_UPDATE_DATE
		,CREATED_BY = p_CREATED_BY
		,CREATION_DATE = p_CREATION_DATE
		,LAST_UPDATED_BY = p_LAST_UPDATED_BY
		,LAST_UPDATE_DATE = p_LAST_UPDATE_DATE
		,LAST_UPDATE_LOGIN = p_LAST_UPDATE_LOGIN
	 WHERE rowid = x_rowid;

	if (sql%notfound) then
		raise no_data_found;
	end if;
END Update_Row;

/* Delete_Row procedure */
PROCEDURE Delete_Row(x_rowid VARCHAR2) IS
BEGIN
	DELETE FROM IEX_DEL_STATUSES
		WHERE rowid = x_rowid;

	if (sql%notfound) then
	    -- No action required since this is range delete
	    null;
	end if;
END Delete_Row;


/* Delete_Row procedure */
PROCEDURE Delete_del_config(p_scoreId NUMBER)
IS
BEGIN
	DELETE FROM IEX_DEL_STATUSES
		WHERE score_id = p_scoreId;

	if (sql%notfound) then
	    -- No action required since this is range delete
	    null;
	end if;
END Delete_del_config ;




/* Lock_Row procedure */
PROCEDURE Lock_Row(x_rowid	VARCHAR2
	,p_DEL_STATUS_ID		NUMBER
	,p_OBJECT_VERSION_NUMBER		NUMBER
	,p_SCORE_VALUE_LOW		NUMBER
	,p_SCORE_VALUE_HIGH		NUMBER
	,p_DEL_STATUS		VARCHAR2
	,p_SCORE_ID		NUMBER
	,p_REQUEST_ID		NUMBER	DEFAULT NULL
	,p_PROGRAM_APPLICATION_ID		NUMBER	DEFAULT NULL
	,p_PROGRAM_ID		NUMBER	DEFAULT NULL
	,p_PROGRAM_UPDATE_DATE		DATE	DEFAULT NULL
	,p_CREATED_BY		NUMBER
	,p_CREATION_DATE		DATE
	,p_LAST_UPDATED_BY		NUMBER
	,p_LAST_UPDATE_DATE		DATE
	,p_LAST_UPDATE_LOGIN		NUMBER	DEFAULT NULL
) IS
	CURSOR C IS SELECT * FROM IEX_DEL_STATUSES
		WHERE rowid = x_rowid
		FOR UPDATE of DEL_STATUS_ID NOWAIT;
	Recinfo C%ROWTYPE;
BEGIN
	OPEN C;
	FETCH C INTO Recinfo;
	IF (C%NOTFOUND) THEN
		CLOSE C;
		FND_MESSAGE.Set_Name('FND', 'FORM_RECORD_DELETED');
		APP_EXCEPTION.Raise_Exception;
	END IF;
	CLOSE C;

	IF (
		(Recinfo.DEL_STATUS_ID = p_DEL_STATUS_ID)
		AND ( (Recinfo.OBJECT_VERSION_NUMBER = p_OBJECT_VERSION_NUMBER)
			OR ( (Recinfo.OBJECT_VERSION_NUMBER IS NULL)
				AND (p_OBJECT_VERSION_NUMBER IS NULL)))
		AND ( (Recinfo.SCORE_VALUE_LOW = p_SCORE_VALUE_LOW)
			OR ( (Recinfo.SCORE_VALUE_LOW IS NULL)
				AND (p_SCORE_VALUE_LOW IS NULL)))
		AND ( (Recinfo.SCORE_VALUE_HIGH = p_SCORE_VALUE_HIGH)
			OR ( (Recinfo.SCORE_VALUE_HIGH IS NULL)
				AND (p_SCORE_VALUE_HIGH IS NULL)))
		AND ( (Recinfo.DEL_STATUS = p_DEL_STATUS)
			OR ( (Recinfo.DEL_STATUS IS NULL)
				AND (p_DEL_STATUS IS NULL)))
		AND ( (Recinfo.SCORE_ID = p_SCORE_ID)
			OR ( (Recinfo.SCORE_ID IS NULL)
				AND (p_SCORE_ID IS NULL)))
		AND ( (Recinfo.REQUEST_ID = p_REQUEST_ID)
			OR ( (Recinfo.REQUEST_ID IS NULL)
				AND (p_REQUEST_ID IS NULL)))
		AND ( (Recinfo.PROGRAM_APPLICATION_ID = p_PROGRAM_APPLICATION_ID)
			OR ( (Recinfo.PROGRAM_APPLICATION_ID IS NULL)
				AND (p_PROGRAM_APPLICATION_ID IS NULL)))
		AND ( (Recinfo.PROGRAM_ID = p_PROGRAM_ID)
			OR ( (Recinfo.PROGRAM_ID IS NULL)
				AND (p_PROGRAM_ID IS NULL)))
		AND ( (Recinfo.PROGRAM_UPDATE_DATE = p_PROGRAM_UPDATE_DATE)
			OR ( (Recinfo.PROGRAM_UPDATE_DATE IS NULL)
				AND (p_PROGRAM_UPDATE_DATE IS NULL)))
		AND ( (Recinfo.CREATED_BY = p_CREATED_BY)
			OR ( (Recinfo.CREATED_BY IS NULL)
				AND (p_CREATED_BY IS NULL)))
		AND ( (Recinfo.CREATION_DATE = p_CREATION_DATE)
			OR ( (Recinfo.CREATION_DATE IS NULL)
				AND (p_CREATION_DATE IS NULL)))
		AND ( (Recinfo.LAST_UPDATED_BY = p_LAST_UPDATED_BY)
			OR ( (Recinfo.LAST_UPDATED_BY IS NULL)
				AND (p_LAST_UPDATED_BY IS NULL)))
		AND ( (Recinfo.LAST_UPDATE_DATE = p_LAST_UPDATE_DATE)
			OR ( (Recinfo.LAST_UPDATE_DATE IS NULL)
				AND (p_LAST_UPDATE_DATE IS NULL)))
		AND ( (Recinfo.LAST_UPDATE_LOGIN = p_LAST_UPDATE_LOGIN)
			OR ( (Recinfo.LAST_UPDATE_LOGIN IS NULL)
				AND (p_LAST_UPDATE_LOGIN IS NULL)))
	   ) THEN
		return;
	ELSE
		FND_MESSAGE.Set_Name('FND', 'FORM_RECORD_CHANGED');
		APP_EXCEPTION.Raise_Exception;
	END IF;
END Lock_Row;
END;

/
