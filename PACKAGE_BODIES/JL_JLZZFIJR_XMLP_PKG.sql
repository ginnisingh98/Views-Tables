--------------------------------------------------------
--  DDL for Package Body JL_JLZZFIJR_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JL_JLZZFIJR_XMLP_PKG" AS
/* $Header: JLZZFIJRB.pls 120.1 2007/12/25 16:54:03 dwkrishn noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    IF P_CA_SET_OF_BOOKS_ID <> -1999 THEN
      /*SRW.MESSAGE(1
                 ,'SOB' || TO_CHAR(P_CA_SET_OF_BOOKS_ID))*/NULL;
      /*SRW.MESSAGE(1
                 ,'Curr' || CP_PARAM_CURRENCY || 'END')*/NULL;
      BEGIN
        SELECT
          GSOB.MRC_SOB_TYPE_CODE,
          GSOB.CURRENCY_CODE
        INTO P_MRCSOBTYPE,CP_PARAM_CURRENCY
        FROM
          GL_SETS_OF_BOOKS GSOB
        WHERE GSOB.SET_OF_BOOKS_ID = P_CA_SET_OF_BOOKS_ID;
      EXCEPTION
        WHEN OTHERS THEN
          P_MRCSOBTYPE := 'P';
          /*SRW.MESSAGE(2
                     ,'Curr' || CP_PARAM_CURRENCY || 'END')*/NULL;
      END;
    ELSE
      P_MRCSOBTYPE := 'P';
    END IF;
    /*SRW.MESSAGE(3
               ,'Curr' || CP_PARAM_CURRENCY || 'END')*/NULL;
    IF UPPER(P_MRCSOBTYPE) = 'R' THEN
      LP_FA_BOOK_CONTROLS := 'FA_BOOK_CONTROLS_MRC_V';
      LP_FA_BOOKS := 'FA_BOOKS_MRC_V';
      LP_FA_ADJUSTMENTS := 'FA_ADJUSTMENTS_MRC_V';
      LP_FA_DEPRN_PERIODS := 'FA_DEPRN_PERIODS_MRC_V';
      LP_FA_DEPRN_SUMMARY := 'FA_DEPRN_SUMMARY_MRC_V';
      LP_FA_DEPRN_DETAIL := 'FA_DEPRN_DETAIL_MRC_V';
    ELSE
      LP_FA_BOOK_CONTROLS := 'FA_BOOK_CONTROLS';
      LP_FA_BOOKS := 'FA_BOOKS';
      LP_FA_ADJUSTMENTS := 'FA_ADJUSTMENTS';
      LP_FA_DEPRN_PERIODS := 'FA_DEPRN_PERIODS';
      LP_FA_DEPRN_SUMMARY := 'FA_DEPRN_SUMMARY';
      LP_FA_DEPRN_DETAIL := 'FA_DEPRN_DETAIL';
    END IF;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION REPORT_NAMEFORMULA(COMPANY_NAME IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      L_REPORT_NAME VARCHAR2(2000);
      L_CONC_PROGRAM_ID NUMBER;
    BEGIN
      CP_COMPANY_NAME := COMPANY_NAME;
      SELECT
        CR.CONCURRENT_PROGRAM_ID
      INTO L_CONC_PROGRAM_ID
      FROM
        FND_CONCURRENT_REQUESTS CR
      WHERE CR.PROGRAM_APPLICATION_ID = 7004
        AND CR.REQUEST_ID = P_CONC_REQUEST_ID;
      SELECT
        CP.USER_CONCURRENT_PROGRAM_NAME
      INTO L_REPORT_NAME
      FROM
        FND_CONCURRENT_PROGRAMS_VL CP
      WHERE CP.CONCURRENT_PROGRAM_ID = L_CONC_PROGRAM_ID
        AND CP.APPLICATION_ID = 7004;
	l_report_name := substr(l_report_name,1,instr(l_report_name,' (XML)'));
      CP_REPORT_NAME := L_REPORT_NAME;
      RETURN (CP_REPORT_NAME);
    EXCEPTION
      WHEN OTHERS THEN
        CP_REPORT_NAME := 'Inflation Adjusted Asset Summary Report';
        RETURN (CP_REPORT_NAME);
    END;
    RETURN NULL;
  END REPORT_NAMEFORMULA;

  FUNCTION BOOKFORMULA RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      L_BOOK VARCHAR2(15);
      L_BOOK_CLASS VARCHAR2(15);
      L_CURRENCY_CODE VARCHAR2(15);
      L_DISTRIBUTION_SOURCE_BOOK VARCHAR2(15);
      L_PRECISION NUMBER(15);
    BEGIN
      IF UPPER(P_MRCSOBTYPE) = 'R' THEN
        BEGIN
          SELECT
            BC.BOOK_TYPE_CODE,
            BC.BOOK_CLASS,
            BC.DISTRIBUTION_SOURCE_BOOK,
            SOB.CURRENCY_CODE,
            CUR.PRECISION
          INTO L_BOOK,L_BOOK_CLASS,L_DISTRIBUTION_SOURCE_BOOK,L_CURRENCY_CODE,L_PRECISION
          FROM
            FA_BOOK_CONTROLS_MRC_V BC,
            GL_SETS_OF_BOOKS SOB,
            FND_CURRENCIES CUR
          WHERE BC.BOOK_TYPE_CODE = P_BOOK
            AND SOB.SET_OF_BOOKS_ID = BC.SET_OF_BOOKS_ID
            AND SOB.CURRENCY_CODE = CUR.CURRENCY_CODE;
        END;
      ELSE
        BEGIN
          SELECT
            BC.BOOK_TYPE_CODE,
            BC.BOOK_CLASS,
            BC.DISTRIBUTION_SOURCE_BOOK,
            SOB.CURRENCY_CODE,
            CUR.PRECISION
          INTO L_BOOK,L_BOOK_CLASS,L_DISTRIBUTION_SOURCE_BOOK,L_CURRENCY_CODE,L_PRECISION
          FROM
            FA_BOOK_CONTROLS BC,
            GL_SETS_OF_BOOKS SOB,
            FND_CURRENCIES CUR
          WHERE BC.BOOK_TYPE_CODE = P_BOOK
            AND SOB.SET_OF_BOOKS_ID = BC.SET_OF_BOOKS_ID
            AND SOB.CURRENCY_CODE = CUR.CURRENCY_CODE;
        END;
      END IF;
      BOOK_CLASS := L_BOOK_CLASS;
      DISTRIBUTION_SOURCE_BOOK := L_DISTRIBUTION_SOURCE_BOOK;
      P_MIN_PRECISION := L_PRECISION;
      CURRENCY_CODE := L_CURRENCY_CODE;
      RETURN (L_BOOK);
    END;
    RETURN NULL;
  END BOOKFORMULA;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION PERIOD_PCFORMULA RETURN NUMBER IS
    L_PERIOD_CTR NUMBER(10);
  BEGIN
    IF UPPER(P_MRCSOBTYPE) = 'R' THEN
      SELECT
        PERIOD_COUNTER
      INTO L_PERIOD_CTR
      FROM
        FA_DEPRN_PERIODS_MRC_V
      WHERE BOOK_TYPE_CODE = P_BOOK
        AND PERIOD_NAME = P_PERIOD;
    ELSE
      SELECT
        PERIOD_COUNTER
      INTO L_PERIOD_CTR
      FROM
        FA_DEPRN_PERIODS
      WHERE BOOK_TYPE_CODE = P_BOOK
        AND PERIOD_NAME = P_PERIOD;
    END IF;
    RETURN (L_PERIOD_CTR);
  END PERIOD_PCFORMULA;

  FUNCTION DEPR_RESERVE_ADJ_PERFORMULA(ASSET_ID IN NUMBER
                                      ,PERIOD_PC IN NUMBER) RETURN NUMBER IS
    L_AMT NUMBER(33,4);
  BEGIN
    IF UPPER(P_MRCSOBTYPE) = 'R' THEN
      SELECT
        NVL(ABS(SUM(DECODE(DEBIT_CREDIT_FLAG
                          ,'DR'
                          ,ADJUSTMENT_AMOUNT
                          ,'CR'
                          ,-ADJUSTMENT_AMOUNT)))
           ,0)
      INTO L_AMT
      FROM
        FA_ADJUSTMENTS_MRC_V
      WHERE BOOK_TYPE_CODE = P_BOOK
        AND SOURCE_TYPE_CODE = 'REVALUATION'
        AND ADJUSTMENT_TYPE = 'RESERVE'
        AND ASSET_ID = ASSET_ID
        AND PERIOD_COUNTER_CREATED = PERIOD_PC;
    ELSE
      SELECT
        NVL(ABS(SUM(DECODE(DEBIT_CREDIT_FLAG
                          ,'DR'
                          ,ADJUSTMENT_AMOUNT
                          ,'CR'
                          ,-ADJUSTMENT_AMOUNT)))
           ,0)
      INTO L_AMT
      FROM
        FA_ADJUSTMENTS
      WHERE BOOK_TYPE_CODE = P_BOOK
        AND SOURCE_TYPE_CODE = 'REVALUATION'
        AND ADJUSTMENT_TYPE = 'RESERVE'
        AND ASSET_ID = ASSET_ID
        AND PERIOD_COUNTER_CREATED = PERIOD_PC;
    END IF;
    RETURN (L_AMT);
  END DEPR_RESERVE_ADJ_PERFORMULA;

  FUNCTION DEPR_EXPENSE_ADJ_PERFORMULA(ASSET_ID IN NUMBER
                                      ,PERIOD_PC IN NUMBER) RETURN NUMBER IS
    L_AMT NUMBER(33,4);
  BEGIN
    IF UPPER(P_MRCSOBTYPE) = 'R' THEN
      SELECT
        NVL(ABS(SUM(DECODE(DEBIT_CREDIT_FLAG
                          ,'DR'
                          ,ADJUSTMENT_AMOUNT
                          ,'CR'
                          ,-ADJUSTMENT_AMOUNT)))
           ,0)
      INTO L_AMT
      FROM
        FA_ADJUSTMENTS_MRC_V
      WHERE BOOK_TYPE_CODE = P_BOOK
        AND SOURCE_TYPE_CODE = 'REVALUATION'
        AND ADJUSTMENT_TYPE = 'EXPENSE'
        AND ASSET_ID = ASSET_ID
        AND PERIOD_COUNTER_CREATED = PERIOD_PC;
    ELSE
      SELECT
        NVL(ABS(SUM(DECODE(DEBIT_CREDIT_FLAG
                          ,'DR'
                          ,ADJUSTMENT_AMOUNT
                          ,'CR'
                          ,-ADJUSTMENT_AMOUNT)))
           ,0)
      INTO L_AMT
      FROM
        FA_ADJUSTMENTS
      WHERE BOOK_TYPE_CODE = P_BOOK
        AND SOURCE_TYPE_CODE = 'REVALUATION'
        AND ADJUSTMENT_TYPE = 'EXPENSE'
        AND ASSET_ID = ASSET_ID
        AND PERIOD_COUNTER_CREATED = PERIOD_PC;
    END IF;
    RETURN (L_AMT);
  END DEPR_EXPENSE_ADJ_PERFORMULA;

  FUNCTION CP_CAT_CORP_COST_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CAT_CORP_COST;
  END CP_CAT_CORP_COST_P;

  FUNCTION CP_CAT_ADJ_COST_PER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CAT_ADJ_COST_PER;
  END CP_CAT_ADJ_COST_PER_P;

  FUNCTION CP_CAT_ADJ_COST_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CAT_ADJ_COST;
  END CP_CAT_ADJ_COST_P;

  FUNCTION CP_CAT_CORP_DEPR_RESERVE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CAT_CORP_DEPR_RESERVE;
  END CP_CAT_CORP_DEPR_RESERVE_P;

  FUNCTION CP_CAT_DEPR_RESERVE_ADJ_PER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CAT_DEPR_RESERVE_ADJ_PER;
  END CP_CAT_DEPR_RESERVE_ADJ_PER_P;

  FUNCTION CP_CAT_ADJ_DEPRN_RESERVE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CAT_ADJ_DEPRN_RESERVE;
  END CP_CAT_ADJ_DEPRN_RESERVE_P;

  FUNCTION CP_CAT_CORP_YTD_DEPRN_EXPE_p RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CAT_CORP_YTD_DEPRN_EXPENSE;
  END CP_CAT_CORP_YTD_DEPRN_EXPE_p;

  FUNCTION CP_CAT_YTD_DEPRN_EXPENSE_ADJ_ RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CAT_YTD_DEPRN_EXPENSE_ADJ_P;
  END CP_CAT_YTD_DEPRN_EXPENSE_ADJ_;

  FUNCTION CP_CAT_ADJ_YTD_DEPRN_EXPENSE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CAT_ADJ_YTD_DEPRN_EXPENSE;
  END CP_CAT_ADJ_YTD_DEPRN_EXPENSE_P;

  FUNCTION CP_ASSET_CORP_COST_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ASSET_CORP_COST;
  END CP_ASSET_CORP_COST_P;

  FUNCTION CP_ASSET_ADJ_COST_PER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ASSET_ADJ_COST_PER;
  END CP_ASSET_ADJ_COST_PER_P;

  FUNCTION CP_ASSET_ADJ_COST_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ASSET_ADJ_COST;
  END CP_ASSET_ADJ_COST_P;

  FUNCTION CP_ASSET_CORP_DEPR_RESERVE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ASSET_CORP_DEPR_RESERVE;
  END CP_ASSET_CORP_DEPR_RESERVE_P;

  FUNCTION CP_ASSET_DEPR_RESERVE_ADJ_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ASSET_DEPR_RESERVE_ADJ_PER;
  END CP_ASSET_DEPR_RESERVE_ADJ_P;

  FUNCTION CP_ASSET_ADJ_DEPRN_RESERVE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ASSET_ADJ_DEPRN_RESERVE;
  END CP_ASSET_ADJ_DEPRN_RESERVE_P;

  FUNCTION CP_ASSET_CORP_YTD_DEPRN_EXPEN RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ASSET_CORP_YTD_DEPRN_EXPENS;
  END CP_ASSET_CORP_YTD_DEPRN_EXPEN;

  FUNCTION CP_ASSET_YTD_DEPR_EXPN_ADJ_PE RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ASSET_YTD_DEPR_EXPN_ADJ_PER;
  END CP_ASSET_YTD_DEPR_EXPN_ADJ_PE;

  FUNCTION CP_ASSET_YTD_DEPRN_EXPENSE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ASSET_YTD_DEPRN_EXPENSE;
  END CP_ASSET_YTD_DEPRN_EXPENSE_P;

  FUNCTION BOOK_CLASS_P RETURN VARCHAR2 IS
  BEGIN
    RETURN BOOK_CLASS;
  END BOOK_CLASS_P;

  FUNCTION DISTRIBUTION_SOURCE_BOOK_P RETURN VARCHAR2 IS
  BEGIN
    RETURN DISTRIBUTION_SOURCE_BOOK;
  END DISTRIBUTION_SOURCE_BOOK_P;

  FUNCTION CP_REPORT_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_REPORT_NAME;
  END CP_REPORT_NAME_P;

  FUNCTION CP_COMPANY_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_COMPANY_NAME;
  END CP_COMPANY_NAME_P;

  FUNCTION CURRENCY_CODE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CURRENCY_CODE;
  END CURRENCY_CODE_P;

  FUNCTION CP_PARAM_CURRENCY_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARAM_CURRENCY;
  END CP_PARAM_CURRENCY_P;

END JL_JLZZFIJR_XMLP_PKG;




/
