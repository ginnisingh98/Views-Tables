--------------------------------------------------------
--  DDL for Package Body PA_PROJ_TASK_STRUC_PUB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PA_PROJ_TASK_STRUC_PUB" AS
/* $Header: PAPSWRPB.pls 120.39.12010000.23 2010/05/20 07:16:06 vgovvala ship $ */

G_PKG_NAME              CONSTANT VARCHAR2(30) := 'PA_PROJ_TASK_STRUC_PUB';

Invalid_Arg_Exc_WP      Exception ; -- Bug 2931183.

-- API name                      : create_default_structure
-- Type                          : PL/SQL Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
-- p_dest_project_id            IN NUMBER
-- p_dest_project_name          IN VARCHAR2
-- p_dest_project_number        IN VARCHAR2
-- p_dest_description           IN VARCHAR2
-- p_dest_org_id                IN NUMBER
-- x_msg_count             OUT NUMBER
-- x_msg_data              OUT VARCHAR2
-- x_return_status         OUT VARCHAR2
--
--  History
--
--  14-DEC-01   MAansari             -Created
--
--

PROCEDURE create_default_structure
( p_dest_project_id            IN NUMBER
 ,p_dest_project_name          IN VARCHAR2
 ,p_dest_project_number        IN VARCHAR2
 ,p_dest_description           IN VARCHAR2
 ,p_struc_type            IN VARCHAR2 := 'WORKPLAN'
 ,x_msg_count             OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data              OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_return_status         OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895

    cursor get_working_ver_num(c_project_id NUMBER, c_proj_element_id NUMBER) IS
    select nvl(max(version_number),0)+1
      from pa_proj_elem_ver_structure
     where project_id = c_project_id
       and proj_element_id = c_proj_element_id
       and status_code <> 'STRUCTURE_PUBLISHED';

  X_ROW_ID              VARCHAR2(18);
  x_structure_id        NUMBER;
  x_struc_version_id    NUMBER;
  -- added for Bug: 45377865
  l_new_struc_version_id    NUMBER;
  -- added for Bug: 4537865
  l_status_code         VARCHAR2(150);
  l_struc_ver_number    NUMBER;
  l_ref_task_version_id NUMBER;
  l_peer_or_sub         VARCHAR2(4);
  l_return_status       VARCHAR2(1);
  l_msg_count           NUMBER;
  l_msg_data            VARCHAR2(2000);
  x_task_version_id     NUMBER;
  x_pev_schedule_id     NUMBER;
  x_pev_structure_id    NUMBER;
  x_error_msg           VARCHAR2(250);
  l_old_wbs_level       NUMBER;
  API_ERROR            EXCEPTION;
  l_suffix              VARCHAR2(250);
  l_name                VARCHAR2(250);
  l_append              VARCHAR2(250);

    CURSOR cur_elem_ver_seq
        IS
          SELECT pa_proj_element_versions_s.nextval
            FROM sys.dual;

BEGIN

      --Clear Error Messages.
      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;

      IF p_struc_type = 'WORKPLAN'
      THEN
         l_append := ': ';

         select meaning
           into l_suffix
           from pa_lookups
          where lookup_type = 'PA_STRUCTURE_TYPE_CLASS'
            and lookup_code = 'WORKPLAN';

         l_name := substr(p_dest_project_name||l_append||l_suffix, 1, 240);
      ELSE
         l_name := p_dest_project_name;
      END IF;

      Savepoint create_dflt_structure;
      --For each project create 1 structure
      PA_PROJECT_STRUCTURE_PVT1.Create_Structure(
                        p_project_id                        => p_dest_project_id
                       ,p_structure_number                  => p_dest_project_number
                       ,p_structure_name                    => l_name
                       ,p_structure_description             => p_dest_description
                       ,p_calling_flag                      => p_struc_type
                       ,x_structure_id                      => x_structure_id
                       ,x_return_status                     => l_return_status
                       ,x_msg_count                         => l_msg_count
                       ,x_msg_data                          => l_msg_data
                     );


      IF x_structure_id IS NULL OR l_return_status <> 'S'
      THEN
          PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                               ,p_msg_name       => 'PA_PS_NO_STRUC_CREATED');
          raise API_ERROR;
      END IF;


--The following code is added to populate parent_structure version id.

      OPEN cur_elem_ver_seq;
      FETCH cur_elem_ver_seq INTO x_struc_version_id;
      CLOSE cur_elem_ver_seq;
--End

    -- Fix for 4657794 :- This is fix for regression introduced by 4537865
    -- As X_ELEMENT_VERSION_ID is an IN OUT parameter ,we need to initialize, its value l_new_struc_version_id
    -- to  x_struc_version_id

    l_new_struc_version_id := x_struc_version_id ;

    -- End 4657794

      PA_PROJ_ELEMENT_VERSIONS_PKG.Insert_Row(
            X_ROW_ID                   => X_row_id
         --,X_ELEMENT_VERSION_ID       => x_struc_version_id            * Commented for Bug Fix: 4537865
           ,X_ELEMENT_VERSION_ID       =>l_new_struc_version_id          -- added for Bug fix: 4537865
           ,X_PROJ_ELEMENT_ID          => x_structure_id
           ,X_OBJECT_TYPE              => 'PA_STRUCTURES'
           ,X_PROJECT_ID                => p_dest_project_id
           ,X_PARENT_STRUCTURE_VERSION_ID    => x_struc_version_id
           ,X_DISPLAY_SEQUENCE        => null
           ,X_WBS_LEVEL                 => null
           ,X_WBS_NUMBER          => null
           ,X_ATTRIBUTE_CATEGORY      => null
           ,X_ATTRIBUTE1          => null
           ,X_ATTRIBUTE2          => null
           ,X_ATTRIBUTE3          => null
           ,X_ATTRIBUTE4          => null
           ,X_ATTRIBUTE5          => null
           ,X_ATTRIBUTE6          => null
           ,X_ATTRIBUTE7          => null
           ,X_ATTRIBUTE8          => null
           ,X_ATTRIBUTE9          => null
           ,X_ATTRIBUTE10              => null
           ,X_ATTRIBUTE11              => null
           ,X_ATTRIBUTE12              => null
           ,X_ATTRIBUTE13              => null
           ,X_ATTRIBUTE14              => null
           ,X_ATTRIBUTE15              => null
           ,X_TASK_UNPUB_VER_STATUS_CODE => null
           ,X_SOURCE_OBJECT_ID           => p_dest_project_id
           ,X_SOURCE_OBJECT_TYPE         => 'PA_PROJECTS'
       );
      -- added for Bug fix: 4537865
        x_struc_version_id := l_new_struc_version_id;
      -- added for Bug fix: 4537865

      IF x_struc_version_id IS NULL
      THEN
          PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                               ,p_msg_name       => 'PA_PS_NO_STRUC_VER_CREATED');
          raise API_ERROR;
      END IF;

      --Get structure version number
      OPEN get_working_ver_num(p_dest_project_id, x_structure_id);
      FETCH get_working_ver_num INTO l_struc_ver_number;
      CLOSE get_working_ver_num;
      l_status_code := 'STRUCTURE_WORKING';


    PA_PROJ_ELEM_VER_STRUCTURE_PKG.insert_row(
     X_ROWID                       => x_row_id
   , X_PEV_STRUCTURE_ID            => x_pev_structure_id
   , X_ELEMENT_VERSION_ID          => x_struc_version_id
   , X_VERSION_NUMBER              => l_struc_ver_number
   , X_NAME                        => l_name
   , X_PROJECT_ID                  => p_dest_project_id
   , X_PROJ_ELEMENT_ID             => x_structure_id
   , X_DESCRIPTION                 => p_dest_description
   , X_EFFECTIVE_DATE              => null
   , X_PUBLISHED_DATE              => null
   , X_PUBLISHED_BY                => null
   , X_CURRENT_BASELINE_DATE       => null
   , X_CURRENT_BASELINE_FLAG       => 'N'
   , X_CURRENT_BASELINE_BY         => null
   , X_ORIGINAL_BASELINE_DATE      => null
   , X_ORIGINAL_BASELINE_FLAG      => 'N'
   , X_ORIGINAL_BASELINE_BY        => null
   , X_LOCK_STATUS_CODE            => NULL
   , X_LOCKED_BY                   => NULL
   , X_LOCKED_DATE                 => NULL
   , X_STATUS_CODE                 => l_status_code
   , X_WF_STATUS_CODE              => NULL
   , X_LATEST_EFF_PUBLISHED_FLAG   => 'N'
   , X_CHANGE_REASON_CODE          => NULL
   , X_RECORD_VERSION_NUMBER       => 1
   , X_CURRENT_WORKING_FLAG        => 'N'            /* Not applicable to default financial str. bug 3301192 */
   , X_SOURCE_OBJECT_ID            => p_dest_project_id
   , X_SOURCE_OBJECT_TYPE          => 'PA_PROJECTS'
    );


    IF NVL( p_struc_type, 'WORKPLAN' ) = 'WORKPLAN'
    THEN
        PA_TASK_PUB1.Create_Schedule_Version(
                   p_element_version_id        => x_struc_version_id
                  ,p_scheduled_start_date      => SYSDATE
                  ,p_scheduled_end_date        => SYSDATE
                  ,x_pev_schedule_id         => x_pev_schedule_id
                  ,x_return_status           => l_return_status
                  ,x_msg_count                     => l_msg_count
                  ,x_msg_data                      => l_msg_data
          );

        IF l_return_status <> 'S'
        THEN
            PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                 ,p_msg_name       => 'PA_PS_NO_STRUC_SCH_VER_CREATED');
            raise api_error;
        END IF;
    END IF;


  x_return_status := FND_API.G_RET_STS_SUCCESS;
EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to create_dflt_structure;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'CREATE_DEFAULT_STRUCTURE',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to create_dflt_structure;
  raise;
END create_default_structure;


-- API name                      : create_default_task_structure
-- Type                          : PL/SQL Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
-- p_project_id            IN NUMBER
-- x_msg_count             OUT NUMBER
-- x_msg_data              OUT VARCHAR2
-- x_return_status         OUT VARCHAR2
--
--  History
--
--  14-DEC-01   MAansari             -Created
--
--

PROCEDURE create_default_task_structure
( p_project_id            IN NUMBER
 ,p_struc_type            IN VARCHAR2 := 'WORKPLAN'
 ,x_msg_count             OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data              OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_return_status         OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895


  CURSOR cur_pa_tasks2 IS
   SELECT distinct top_task_id
     FROM pa_tasks pt
   WHERE project_id = p_project_id;

   CURSOR cur_pa_tasks( c_top_task_id NUMBER )
   IS
     SELECT task_id, wbs_level, parent_task_id, task_number, task_name, description, carrying_out_organization_id
       FROM pa_tasks pt
      WHERE project_id = p_project_id
       START WITH task_id = c_top_task_id
      CONNECT BY PRIOR task_id = parent_task_id;


   CURSOR parent_of_previous_task( c_task_version_id NUMBER )
   IS
     SELECT object_id_from1
       FROM pa_object_relationships
      WHERE object_id_to1 = c_task_version_id
        and object_type_from in ('PA_STRUCTURES','PA_TASKS')     -- bug 6429275
        and object_type_to = 'PA_TASKS'
        and relationship_type = 'S';


   CURSOR cur_pa_projs
   IS
     SELECT 'x'
       FROM pa_projects_all
      WHERE split_cost_from_workplan_flag = 'Y'
        AND project_id = p_project_id;

  CURSOR cur_pa_proj_elem_vers2( c_strcu_ver_id NUMBER )
  IS
    SELECT 'x'
      FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
     WHERE c.project_id = p_project_id
       AND a.structure_type_id = b.structure_type_id
       AND b.proj_element_id = c.proj_element_id
       AND a.structure_type = 'WORKPLAN'
       AND element_version_id = c_strcu_ver_id;

  -- xxlu added for DFF attributes for calling create_schedule_version
  CURSOR cur_ver_sch_attr_rec(c_element_version_id IN NUMBER) IS
    SELECT *
    FROM pa_proj_elem_ver_schedule
    WHERE element_version_id = c_element_version_id
    AND project_id = p_project_id
   ;
  l_ver_sch_attr_rec cur_ver_sch_attr_rec%ROWTYPE;
  -- end xxlu changes

--hsiu added for parent_structure_id column
  CURSOR get_structure(c_project_id NUMBER, c_struc_type VARCHAR2) IS
    select a.proj_element_id
      from pa_proj_elements a,
           pa_proj_structure_types b,
           pa_structure_types c
     where a.project_id = c_project_id
       and c.structure_type_class_code = c_struc_type
       and c.structure_type_id = b.structure_type_id
       and b.proj_element_id = a.proj_element_id;
  l_structure_id        NUMBER;

  l_split_flag          VARCHAR2(1);

  X_ROW_ID              VARCHAR2(18);
  x_structure_id        NUMBER;
  x_struc_version_id    NUMBER;
  l_status_code         VARCHAR2(150);
  l_struc_ver_number    NUMBER;
  l_ref_task_version_id NUMBER;
  l_peer_or_sub         VARCHAR2(4);
  l_return_status       VARCHAR2(1);
  l_msg_count           NUMBER;
  l_msg_data            VARCHAR2(2000);
  x_task_version_id     NUMBER;
  x_pev_schedule_id     NUMBER;
  x_pev_structure_id    NUMBER;
  x_error_msg           VARCHAR2(250);
  l_old_wbs_level       NUMBER;
  l_postfix             VARCHAR2(2) := ' ';

  API_ERROR            EXCEPTION;

  CURSOR cur_proj_elem_vers
  IS
    SELECT ppev.element_version_id
      FROM pa_proj_element_versions ppev,
           pa_proj_structure_types ppst,
           pa_structure_types pst
     WHERE ppev.project_id = p_project_id
       AND ppev.object_type = 'PA_STRUCTURES'
       AND ppev.proj_element_id = ppst.proj_element_id
       AND pst.structure_type_id = ppst.structure_type_id
       AND pst.structure_type = p_struc_type;

  l_proj_element_id NUMBER;
  l_prev_top_task_ver_id  NUMBER;
  l_dummy_char VARCHAR2(1);
BEGIN

    --Clear Error Messages.
      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;


    savepoint create_dflt_task_struc;
    if p_project_id is null then
       PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                            ,p_msg_name       => 'PA_NO_PROJECT_ID');
    end if;


l_ref_task_version_id := null;

FOR cur_pa_tasks2_rec IN cur_pa_tasks2 LOOP

    FOR cur_pa_tasks_rec IN  cur_pa_tasks( cur_pa_tasks2_rec.top_task_id ) LOOP



      --The task will be created with a different ids if the structure is a WORKPLAN and split from COSTING.
      --Otherwise same ids as in pa_tasks will be used to create tasks in pa_proj_elements if only one default
      --structure is being created.
      l_split_flag := null;
      OPEN cur_pa_projs;
      FETCH cur_pa_projs INTO l_split_flag;
      CLOSE cur_pa_projs;

      --For each project create 1 task
      IF p_struc_type = 'WORKPLAN' AND l_split_flag IS NOT NULL
      THEN
          --l_proj_element_id := null;
          SELECT pa_tasks_s.nextval INTO l_proj_element_id
            FROM sys.dual;
          l_postfix := '-'||SUBSTR( p_struc_type, 1, 1 );
--hsiu added for parent_structure_id column
          OPEN get_structure(p_project_id, 'WORKPLAN');
          FETCH get_structure into l_structure_id;
          CLOSE get_structure;
      ELSE
--hsiu added for parent_structure_id column
          l_proj_element_id := cur_pa_tasks_rec.task_id;
          OPEN get_structure(p_project_id, 'FINANCIAL');
          FETCH get_structure into l_structure_id;
          CLOSE get_structure;
      END IF;
      PA_PROJ_ELEMENTS_PKG.Insert_Row(
                 X_ROW_ID                             => X_ROW_ID
                ,X_PROJ_ELEMENT_ID                    => l_proj_element_id
                ,X_PROJECT_ID                         => p_project_id
                ,X_OBJECT_TYPE                       => 'PA_TASKS'
                ,X_ELEMENT_NUMBER                     => cur_pa_tasks_rec.task_number||l_postfix
                ,X_NAME                               => cur_pa_tasks_rec.task_name
                ,X_DESCRIPTION                       => cur_pa_tasks_rec.description
                ,X_STATUS_CODE                       => '124'          --- NOT_STARTED  -- 124 bug 2826235
                ,X_WF_STATUS_CODE                     => null
                ,X_PM_PRODUCT_CODE                    => null
                ,X_PM_TASK_REFERENCE                  => null
                ,X_CLOSED_DATE                       => null
                ,X_LOCATION_ID                       => null
                ,X_MANAGER_PERSON_ID                => null
                ,X_CARRYING_OUT_ORGANIZATION_ID       => cur_pa_tasks_rec.carrying_out_organization_id
                ,X_TYPE_ID                            => 1
                ,X_PRIORITY_CODE                     => null
                ,X_INC_PROJ_PROGRESS_FLAG             => 'N'
                ,X_REQUEST_ID                         => null
                ,X_PROGRAM_APPLICATION_ID             => null
                ,X_PROGRAM_ID                         => null
                ,X_PROGRAM_UPDATE_DATE              => null
                ,X_LINK_TASK_FLAG                     => 'N'
                ,X_ATTRIBUTE_CATEGORY               => null
                ,X_ATTRIBUTE1                         => null
                ,X_ATTRIBUTE2                         => null
                ,X_ATTRIBUTE3                         => null
                ,X_ATTRIBUTE4                         => null
                ,X_ATTRIBUTE5                         => null
                ,X_ATTRIBUTE6                         => null
                ,X_ATTRIBUTE7                         => null
                ,X_ATTRIBUTE8                         => null
                ,X_ATTRIBUTE9                         => null
                ,X_ATTRIBUTE10                       => null
                ,X_ATTRIBUTE11                       => null
                ,X_ATTRIBUTE12                       => null
                ,X_ATTRIBUTE13                       => null
                ,X_ATTRIBUTE14                       => null
                ,X_ATTRIBUTE15                       => null
                ,X_TASK_WEIGHTING_DERIV_CODE       => NULl
                ,X_WORK_ITEM_CODE                  => NULL
                ,X_UOM_CODE                        => NULL
                ,X_WQ_ACTUAL_ENTRY_CODE            => NULL
                ,X_TASK_PROGRESS_ENTRY_PAGE_ID => NULL
                ,X_PARENT_STRUCTURE_ID         => l_structure_id
                ,X_PHASE_CODE                  => NULL
                ,X_PHASE_VERSION_ID            => NULL
                ,X_SOURCE_OBJECT_ID            => p_project_id
              ,X_SOURCE_OBJECT_TYPE          => 'PA_PROJECTS'
             );


             IF cur_pa_tasks%ROWCOUNT = 1
             THEN

                 IF cur_pa_tasks2%ROWCOUNT = 1
                 THEN
                     OPEN cur_proj_elem_vers;
                     FETCH cur_proj_elem_vers INTO x_struc_version_id;
                     CLOSE cur_proj_elem_vers;

                     l_ref_task_version_id := x_struc_version_id;
                     l_peer_or_sub         := 'SUB';
                 ELSE
                     l_ref_task_version_id := l_prev_top_task_ver_id;
                     l_peer_or_sub         := 'PEER';
                 END IF;
             ELSE
                 IF cur_pa_tasks_rec.wbs_level > l_old_wbs_level
                 THEN
                     l_peer_or_sub         := 'SUB';
                 ELSIF cur_pa_tasks_rec.wbs_level = l_old_wbs_level
                 THEN
                     l_peer_or_sub         := 'PEER';
                 ELSE
                     OPEN parent_of_previous_task( l_ref_task_version_id );
                     FETCH parent_of_previous_task INTO l_ref_task_version_id;
                     CLOSE parent_of_previous_task;
                     l_peer_or_sub         := 'PEER';
                 END IF;
             END IF;

              PA_TASK_PVT1.Create_Task_Version(
                   p_ref_task_version_id     => l_ref_task_version_id
                  ,p_peer_or_sub         => l_peer_or_sub
                  ,p_task_id              => l_proj_element_id
                  ,p_WEIGHTING_PERCENTAGE  => 100
                  ,p_task_unpub_ver_status_code => 'WORKING'
                  ,x_task_version_id      => x_task_version_id
                  ,x_return_status        => l_return_status
                  ,x_msg_count           => l_msg_count
                  ,x_msg_data             => l_msg_data
                );

             IF cur_pa_tasks%ROWCOUNT = 1
             THEN
                l_prev_top_task_ver_id := x_task_version_id;
             END IF;

              IF l_return_status <> 'S'
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_NO_TASK_VER_CREATED');
                  raise api_error;
              END IF;

              l_ref_task_version_id := x_task_version_id;
              l_old_wbs_level := cur_pa_tasks_rec.wbs_level;

--            IF p_struc_type = 'WORKPLAN'

            --if it is a workplan structure.
            OPEN cur_pa_proj_elem_vers2( x_struc_version_id );
            FETCH cur_pa_proj_elem_vers2 INTO l_dummy_char;
            IF cur_pa_proj_elem_vers2%FOUND
            THEN
              -- xxlu added DFF attributes
              OPEN cur_ver_sch_attr_rec(x_task_version_id);
              FETCH cur_ver_sch_attr_rec INTO l_ver_sch_attr_rec;
              CLOSE cur_ver_sch_attr_rec;

               PA_TASK_PUB1.Create_Schedule_Version(
                      p_element_version_id     => x_task_version_id
                     ,p_scheduled_start_date   => SYSDATE
                     ,p_scheduled_end_date     => SYSDATE
                     ,p_attribute_category        => l_ver_sch_attr_rec.attribute_category
                     ,p_attribute1              => l_ver_sch_attr_rec.attribute1
                     ,p_attribute2              => l_ver_sch_attr_rec.attribute2
                     ,p_attribute3              => l_ver_sch_attr_rec.attribute3
                     ,p_attribute4              => l_ver_sch_attr_rec.attribute4
                     ,p_attribute5              => l_ver_sch_attr_rec.attribute5
                     ,p_attribute6              => l_ver_sch_attr_rec.attribute6
                     ,p_attribute7              => l_ver_sch_attr_rec.attribute7
                     ,p_attribute8              => l_ver_sch_attr_rec.attribute8
                     ,p_attribute9              => l_ver_sch_attr_rec.attribute9
                     ,p_attribute10                => l_ver_sch_attr_rec.attribute10
                     ,p_attribute11                => l_ver_sch_attr_rec.attribute11
                     ,p_attribute12                => l_ver_sch_attr_rec.attribute12
                     ,p_attribute13                => l_ver_sch_attr_rec.attribute13
                     ,p_attribute14                => l_ver_sch_attr_rec.attribute14
                     ,p_attribute15                => l_ver_sch_attr_rec.attribute15
                     ,x_pev_schedule_id         => x_pev_schedule_id
                     ,x_return_status           => l_return_status
                     ,x_msg_count                => l_msg_count
                     ,x_msg_data                 => l_msg_data
                 );
               -- end xxlu changes

              IF l_return_status <> 'S'
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_NO_TASK_SCH_VER_CREATED');
                  raise api_error;
              END IF;
            END IF;
            CLOSE cur_pa_proj_elem_vers2;
    END LOOP;  --task loop end.
END LOOP;

  x_return_status := FND_API.G_RET_STS_SUCCESS;
EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to create_dflt_task_struc;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'CREATE_DEFAULT_TASK_STRUCTURE',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to create_dflt_task_struc;
  raise;
END create_default_task_structure;


-- API name                      : create_task_structure
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
-- p_project_id            IN NUMBER
-- x_msg_count             OUT NUMBER
-- x_msg_data              OUT VARCHAR2
-- x_return_status         OUT VARCHAR2
--
--  History
--
--  14-DEC-01   MAansari             -Created
--
--  Notes: This api is called from form PAXPREPR.fmb ON-INSERT of tasks block.
--         The call is in PA_TASKS_PKG.ON_INSERT API.

PROCEDURE create_task_structure(
   p_calling_module         IN VARCHAR2 := 'FORMS'
  ,p_project_id           IN NUMBER
  ,p_task_id              IN NUMBER
  ,p_parent_task_id       IN NUMBER
  ,p_ref_task_id          IN NUMBER   := -9999
  ,p_task_number          IN VARCHAR2
  ,p_task_name            IN VARCHAR2
  ,p_task_description     IN VARCHAR2
  ,p_carrying_out_organization_id IN NUMBER
  ,p_structure_type       IN VARCHAR2 := 'FINANCIAL'
  ,p_actual_start_date                  IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_actual_finish_date                 IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_early_start_date                   IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_early_finish_date                  IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_late_start_date                    IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_late_finish_date                   IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_scheduled_start_date               IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_scheduled_finish_date              IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_OBLIGATION_START_DATE              IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_OBLIGATION_FINISH_DATE             IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_ESTIMATED_START_DATE               IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_ESTIMATED_FINISH_DATE              IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_BASELINE_START_DATE                IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_BASELINE_FINISH_DATE               IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_CLOSED_DATE                        IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_WQ_UOM_CODE                        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_WQ_ITEM_CODE                       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_STATUS_CODE                        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_WF_STATUS_CODE                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_PM_SOURCE_CODE                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_PRIORITY_CODE                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_MILESTONE_FLAG                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_CRITICAL_FLAG                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_INC_PROJ_PROGRESS_FLAG             IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_LINK_TASK_FLAG                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_CALENDAR_ID                        IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_PLANNED_EFFORT                     IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_DURATION                           IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_PLANNED_WORK_QUANTITY              IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_TASK_TYPE                          IN NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_PM_SOURCE_reference                IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_location_id                        IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_manager_person_id                  IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_structure_version_id               IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_parent_structure_id                IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_phase_version_id                   IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_PHASE_CODE                         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_create_task_version_only           IN VARCHAR2 := 'N'
  ,p_financial_task_flag                IN VARCHAR2 := 'Y'   --bug 3301192

  -- (begin venkat) new params for bug #3450684 ----------------------------------------------
  ,p_ext_act_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
  ,p_ext_remain_duration         IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
  ,p_ext_sch_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
  -- (end venkat) new params for bug #3450684 -------------------------------------------------

  -- (begin) add new params bug - 3654243 -----
  ,p_base_percent_comp_deriv_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_sch_tool_tsk_type_code     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_type_code       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_date            IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_free_slack             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_total_slack            IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_effort_driven_flag         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_level_assignments_flag     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_invoice_method         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_customer_id            IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_gen_etc_source_code        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- (end) add new params bug - 3654243 -----

  --Bug 6153503
  ,p_validate_dff                  IN VARCHAR2 := 'N'
  ,p_attribute_category            IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute1                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute2                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute3                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute4                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute5                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute6                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute7                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute8                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute9                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute10                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute11                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute12                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute13                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute14                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute15                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   --Bug 6153503

  ,x_task_version_id                    OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_task_id                            OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_count                          OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data             OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status        OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895

  X_ROW_ID              VARCHAR2(18);
  x_structure_id        NUMBER;
  x_struc_version_id    NUMBER;
  l_status_code         VARCHAR2(150);
  l_struc_ver_number    NUMBER;
  l_ref_task_version_id NUMBER;
  l_peer_or_sub         VARCHAR2(4);
  l_return_status       VARCHAR2(1);
  l_msg_count           NUMBER;
  l_msg_data            VARCHAR2(2000);
  l_task_version_id     NUMBER;
  x_pev_schedule_id     NUMBER;
  x_pev_structure_id    NUMBER;
  x_error_msg           VARCHAR2(250);
  l_old_wbs_level       NUMBER;
  API_ERROR            EXCEPTION;
  l_task_id            NUMBER;
  l_dummy_char         VARCHAR2(1);
  l_task_number        VARCHAR2(100);

  -- <Bug#2843596>
  l_sharing_enabled VARCHAR(1);

--hsiu: bug 2691868
  l_scheduled_start_date DATE;
  l_scheduled_finish_date DATE;

--hsiu added for task version status
  CURSOR cur_proj_is_template
  IS     select 'Y'
           from pa_projects_all
          where project_id = p_project_id
            and template_flag = 'Y';
  l_template_flag VARCHAR2(1);
  l_task_unpub_ver_status_code PA_PROJ_ELEMENT_VERSIONS.task_unpub_ver_status_code%TYPE;
  l_parent_struc_ver_id NUMBER;

--end changes

  CURSOR cur_proj_elem_vers( c_structure_version_id NUMBER )
  IS
       SELECT element_version_id
         FROM pa_proj_element_versions
        WHERE project_id = p_project_id
          AND object_type = 'PA_TASKS'
          AND parent_structure_version_id = c_structure_version_id
          AND ( ( proj_element_id = ( select top_task_id
                                        from pa_tasks
                                       where task_id = p_ref_task_id ) AND p_structure_type = 'FINANCIAL' )
                --OR ( proj_element_id = p_ref_task_id AND p_structure_type = 'WORKPLAN' )
               )
        --bug  2852891
         UNION
       SELECT element_version_id
         FROM pa_proj_element_versions
        WHERE project_id = p_project_id
          AND object_type = 'PA_TASKS'
          AND parent_structure_version_id = c_structure_version_id
          AND p_structure_type = 'WORKPLAN'
          AND display_sequence = ( SELECT max( display_sequence )
                                     FROM pa_proj_element_versions
                                    WHERE project_id = p_project_id
                                      AND object_type = 'PA_TASKS'
                                      AND parent_structure_version_id = c_structure_version_id
                                      AND wbs_level = 1    --Since there is no parent task id passed therefore its always created as top task
                                      AND display_sequence <= ( SELECT display_sequence
                                                                 FROM pa_proj_element_versions
                                                                WHERE project_id = p_project_id
                                                                  AND object_type = 'PA_TASKS'
                                                                  AND parent_structure_version_id = c_structure_version_id
                                                                  AND proj_element_id = p_ref_task_id )
                                   )
        --bug  2852891
;

  CURSOR cur_ref_task_ver_id( c_structure_version_id NUMBER )
  IS
       SELECT element_version_id
         FROM pa_proj_element_versions
        WHERE project_id = p_project_id
          AND object_type = 'PA_TASKS'
          AND parent_structure_version_id = c_structure_version_id
          AND proj_element_id = p_ref_task_id
          ;

--AMG bug
  CURSOR cur_ref_task_ver_id2( c_structure_version_id NUMBER, c_parent_task_version_id NUMBER )
  IS
       SELECT element_version_id
         FROM pa_proj_element_versions
        WHERE project_id = p_project_id
          AND object_type = 'PA_TASKS'
          AND parent_structure_version_id = c_structure_version_id
          and element_version_id in ( SELECT object_id_to1
                                        FROM pa_object_relationships
                                       WHERE object_id_from1 = c_parent_task_version_id
                                         and relationship_type = 'S'
                                         )
          AND display_sequence = ( SELECT max( display_sequence )
                                     FROM pa_proj_element_versions
                                    WHERE project_id = p_project_id
                                      AND object_type = 'PA_TASKS'
                                      AND parent_structure_version_id = c_structure_version_id
                                      and element_version_id in ( SELECT object_id_to1
                                                                    FROM pa_object_relationships
                                                                    WHERE object_id_from1 = c_parent_task_version_id
                                                                    and relationship_type = 'S'
                                                                 )
                                 );

l_parent_task_version_id   NUMBER;
--AMG bug

    CURSOR cur_pa_proj_elem_vers2( c_task_version_id NUMBER )
  IS
    SELECT 'x'
      FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
     WHERE c.project_id = p_project_id
       AND a.structure_type_id = b.structure_type_id
       AND b.proj_element_id = c.proj_element_id
       AND a.structure_type = 'WORKPLAN'
       AND element_version_id = ( SELECT parent_structure_version_id
                                   FROM  pa_proj_element_versions
                                   WHERE element_version_id = c_task_version_id );


       --The above sql will return the element_version id that will be served as a
       --reference task version to create task version for p_task_id.

  CURSOR cur_proj_elem_vers2( c_structure_version_id NUMBER, c_task_id NUMBER )
  IS
    SELECT element_version_id
      FROM pa_proj_element_versions
     WHERE project_id = p_project_id
       AND proj_element_id = c_task_id
       AND parent_structure_version_id = c_structure_version_id
       AND object_type = 'PA_TASKS';

  CURSOR cur_child_exists(c_task_ver_id NUMBER)
  IS
    select 'Y'
      FROM pa_object_relationships
     where object_id_from1 = c_task_ver_id
       AND object_type_from IN ('PA_TASKS', 'PA_STRUCTURES') --Corrected 'PA_TASK' TO 'PA_TASKS' for Bug 4035526
       and relationship_type = 'S';
  l_child_exists  VARCHAR2(1);

  -- xxlu added for DFF attributes for calling create_schedule_version
  CURSOR cur_ver_sch_attr_rec(c_element_version_id IN NUMBER) IS
    SELECT *
    FROM pa_proj_elem_ver_schedule
    WHERE element_version_id = c_element_version_id
      and project_id = p_project_id
    ;
  l_ver_sch_attr_rec cur_ver_sch_attr_rec%ROWTYPE;
  -- end xxlu changes

         --Adding the following cursor to avoid create_task_structure call if
         --execute_update_project is called from import or publish apis.
  CURSOR cur_pa_temp_import
  IS
    SELECT 'X' from PA_TEMP_IMPORT_TASKS
     WHERE project_id = p_project_id;

/* Bug 2680486 -- Performance changes -- Added d.project_id= c.project_id
                  join in the following cursor*/

   CURSOR cur_struc_ver_fin
   IS
     SELECT c.element_version_id
       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
            ,pa_proj_elem_ver_structure d
      WHERE c.project_id = p_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = p_structure_type
     AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND d.status_code = 'STRUCTURE_PUBLISHED'
        AND d.latest_eff_published_flag = 'Y'
        ;

/* Bug 2680486 -- Performance changes -- Added d.project_id= c.project_id
                  join in the following cursor*/

   CURSOR cur_struc_ver_wp
   IS
     SELECT c.element_version_id
       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
            ,pa_proj_elem_ver_structure d
      WHERE c.project_id = p_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = p_structure_type
     AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND d.status_code = 'STRUCTURE_WORKING'
        ;

--hsiu added for parent_structure_id column
  CURSOR get_structure(c_project_id NUMBER, c_struc_type VARCHAR2) IS
    select a.proj_element_id
      from pa_proj_elements a,
           pa_proj_structure_types b,
           pa_structure_types c
     where a.project_id = c_project_id
       and c.structure_type_class_code = c_struc_type
       and c.structure_type_id = b.structure_type_id
       and b.proj_element_id = a.proj_element_id;
  l_structure_id        NUMBER;
  l_weighting           NUMBER(17,2);


--hsiu added for task status
  CURSOR get_parent_version_id(c_elem_ver_id NUMBER) IS
    select object_id_from1
      from pa_object_relationships
     where object_id_to1 = c_elem_ver_id
       and object_type_to = 'PA_TASKS'
       and relationship_type = 'S';
  l_parent_ver_id NUMBER;
  l_error_msg_code VARCHAR2(255);
  l_structure_version_id  NUMBER;

   --proj conn
   CURSOR c1( c_element_version_id NUMBER )
   IS
      SELECT wbs_level
        FROM pa_proj_element_versions
       WHERE element_version_id = c_element_version_id;

   CURSOR c2( c_structure_version_id NUMBER, c_element_version_id NUMBER, c_wbs_level NUMBER )
   IS
      SELECT element_version_id
        FROM pa_proj_element_versions
       WHERE display_sequence = ( SELECT max( display_sequence) from pa_proj_element_versions
                                   WHERE parent_structure_version_id = c_structure_version_id
                                     AND display_sequence < ( SELECT display_sequence from pa_proj_element_versions
                                                               WHERE element_version_id = c_element_version_id )
                                     AND wbs_level = c_wbs_level )
         AND parent_structure_version_id = c_structure_version_id;
    l_wbs_level    NUMBER;

   CURSOR cur_proj_wrk_attr
   IS
     select AUTO_PUB_UPON_CREATION_FLAG
     from   pa_proj_workplan_attr
    where project_id = p_project_id;
    l_auto_pub_flag    VARCHAR2(1);
   --proj conn
--bug 2736392
  l_str_status_code            VARCHAR2(150);
--bug 2736392
  l_init_msg_list              VARCHAR2(1);

  /* Bug 2736392 Begin */
     CURSOR cur_struc_ver_wp2
   IS
     SELECT c.element_version_id
       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
            ,pa_proj_elem_ver_structure d
      WHERE c.project_id = p_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = p_structure_type
     AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND (d.status_code = 'STRUCTURE_SUBMITTED' OR d.status_code='STRUCTURE_REJECTED' OR d.status_code= 'STRUCTURE_APPROVED')
        ;
l_dummy_num number;
/* Bug 2736392 End */

  l_tasks_out     pa_project_pub.task_out_tbl_type ;     --dummy variables.  --bug 2732895

--bug 2824612
  l_wq_planned_quantity     NUMBER;
  l_task_type_id            NUMBER;
--bug 2824612

  l_workplan_enabled        VARCHAR2(1);

--3035902: process update flag changes
  cursor get_task_type_id(c_proj_element_id NUMBER) IS
      select type_id
        from pa_proj_elements
       where proj_element_id = c_proj_element_id;
--3035902: end process update flag changes

l_versioned                VARCHAR2(1);
l_shared                   VARCHAR2(1);
l_published_ver_exists     VARCHAR2(1);

/* Bug # 3420093 - Adding Progress Management modifications to create_task flow. */

    l_add_task_ver_ids      PA_NUM_1000_NUM := PA_NUM_1000_NUM();
    l_add_planned_effort    PA_NUM_1000_NUM := PA_NUM_1000_NUM();
    l_add_start_date    PA_DATE_1000_DATE := PA_DATE_1000_DATE();
    l_add_end_date          PA_DATE_1000_DATE := PA_DATE_1000_DATE();

        l_del_task_ver_ids      SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();

/* Bug # 3420093 - Adding Progress Management modifications to create_task flow. */

--Bug 6153503
l_attribute_category          VARCHAR2(30);
l_attribute1                  VARCHAR2(150);
l_attribute2                  VARCHAR2(150);
l_attribute3                  VARCHAR2(150);
l_attribute4                  VARCHAR2(150);
l_attribute5                  VARCHAR2(150);
l_attribute6                  VARCHAR2(150);
l_attribute7                  VARCHAR2(150);
l_attribute8                  VARCHAR2(150);
l_attribute9                  VARCHAR2(150);
l_attribute10                 VARCHAR2(150);
l_attribute11                 VARCHAR2(150);
l_attribute12                 VARCHAR2(150);
l_attribute13                 VARCHAR2(150);
l_attribute14                 VARCHAR2(150);
l_attribute15                 VARCHAR2(150);
l_return_msg                  varchar2(2000);
l_validate_status             varchar2(1);

BEGIN

   --Clear Error Messages.
      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;

   SAVEPOINT create_task_struc;

   OPEN cur_proj_is_template;
   FETCH cur_proj_is_template into l_template_flag;
   IF cur_proj_is_template%NOTFOUND THEN
     l_template_flag := 'N';
   END IF;
   CLOSE cur_proj_is_template;

   OPEN cur_pa_temp_import;
   FETCH cur_pa_temp_import INTO l_dummy_char;
   IF cur_pa_temp_import%NOTFOUND
   THEN

       l_versioned               := PA_WORKPLAN_ATTR_UTILS.Check_Wp_Versioning_Enabled(p_project_id);
       l_shared                  := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(p_project_id);

       IF p_task_id IS NOT NULL AND p_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       THEN
           l_task_id := p_task_id;
       ELSE
           l_task_id := null;
       END IF;

       IF p_structure_type = 'WORKPLAN'
       THEN
          --The following logic found in add_task_round_one api
          IF p_task_number = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR p_task_number IS NULL
          THEN
             l_task_number := P_PM_SOURCE_reference;
          ELSE
             l_task_number := p_task_number;
          END IF;
          --Get workplan structure id

          -- <Bug#2843596>
          -- only retrieve cached value if projectId matches
          -- and the cached workplan struct id is not null
          IF (nvl(g_project_id,-99) = p_project_id and g_workplan_struct_id IS NOT NULL) THEN
             l_structure_id := g_workplan_struct_id;
          ELSE
             OPEN get_structure(p_project_id, 'WORKPLAN');
             FETCH get_structure into l_structure_id;
             CLOSE get_structure;
             g_project_id      := p_project_id;
             g_workplan_struct_id := l_structure_id;
          END IF;
          -- </Bug#2843596>

          IF p_structure_version_id IS NULL OR
             p_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN
              --proj conn
              --If auto publish upon creation is on and versioning is enabled then
              --update the workplan structure as working bcoz it is created as pub by copy structure.
              OPEN  cur_proj_wrk_attr;
              FETCH cur_proj_wrk_attr INTO l_auto_pub_flag ;
              CLOSE cur_proj_wrk_attr;
              IF NVL( l_auto_pub_flag,'N' ) = 'Y' AND
                 NVL( IS_WP_VERSIONING_ENABLED(p_project_id), 'N' ) = 'Y'
              THEN
                 UPDATE pa_proj_elem_ver_structure
                    set status_code = 'STRUCTURE_WORKING'
                  where project_id = p_project_id
                    and proj_element_id = l_structure_id;
              END IF;
              --proj conn
              OPEN cur_struc_ver_wp;
              FETCH cur_struc_ver_wp INTO l_structure_version_id;
              CLOSE cur_struc_ver_wp;
              IF l_structure_version_id IS NULL   /* If auto publish upon creation is on then
                                                     l_structure_version_id will be null */
              THEN
                  DECLARE

            /* Bug 2680486 -- Performance changes -- Added d.project_id= c.project_id
                  join in the following cursor*/

                     CURSOR c1 is
                     SELECT c.element_version_id
                       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
                            ,pa_proj_elem_ver_structure d
                      WHERE c.project_id = p_project_id
                        AND a.structure_type_id = b.structure_type_id
                        AND b.proj_element_id = c.proj_element_id
                        AND a.structure_type = p_structure_type
               AND d.project_id = c.project_id
                        AND d.element_version_id = c.element_version_id
                        AND d.status_code = 'STRUCTURE_PUBLISHED'
                                          ;
                 begin
                     OPEN C1;
                     FETCH C1 into l_structure_version_id;
                     CLOSE C1;
                 end;
              END IF;
          ELSE
              l_structure_version_id := p_structure_version_id;
          END IF;
       ELSE
          l_task_number := p_task_number;
          --Get financial structure id
          -- <Bug#2843596>
          -- only retrieve cached value if projectId matches
          -- and the cached financial struct id is not null
          IF (nvl(g_project_id,-99) = p_project_id and g_financial_struct_id IS NOT NULL) THEN
             l_structure_id := g_financial_struct_id;
          ELSE
             OPEN get_structure(p_project_id, 'FINANCIAL');
             FETCH get_structure into l_structure_id;
             CLOSE get_structure;
             g_project_id      := p_project_id;
             g_financial_struct_id := l_structure_id;
          END IF;
          -- </Bug#2843596>

          IF p_structure_version_id IS NULL OR
             p_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN
              IF l_template_flag = 'N'
              THEN

                 /*IF p_calling_module = 'FORMS'   --get the published version bcoz forms cannot add to working version
                                        --This is true only if there are any published version.
                 THEN
                     --get structure version if its a top task
                      OPEN cur_struc_ver_fin;
                      FETCH cur_struc_ver_fin INTO l_structure_version_id;
                      CLOSE cur_struc_ver_fin;
                 ELSE    should not stop adding tasks to a WORKING version if there is no PUBLISHED version bug 2777656
                 */
                      --get structure version if its a top task
                      OPEN cur_struc_ver_wp;
                      FETCH cur_struc_ver_wp INTO l_structure_version_id;
                      CLOSE cur_struc_ver_wp;
                      IF l_structure_version_id IS NULL  --if versioning is diabled then get the published version
                      THEN
                          OPEN cur_struc_ver_fin;
                          FETCH cur_struc_ver_fin INTO l_structure_version_id;
                          CLOSE cur_struc_ver_fin;
                      END IF;
                 --END IF;
              ELSE
                 --get structure version if its a top task
                 OPEN cur_struc_ver_wp;
                 FETCH cur_struc_ver_wp INTO l_structure_version_id;
                 CLOSE cur_struc_ver_wp;
              END IF;
          ELSE
              l_structure_version_id := p_structure_version_id;
          END IF;
       END IF;


      /*** Commented for Bug 2736392 -- Added new code below
           This code will never do the intended task because p_structure_version_id and l_structure_version_id
           will be null in this case. If a structure version is in approved, submitted or rejected state, then it
           will never be returned from cursor cur_struc_ver_wp, so how can we get the status of a null struc ver.

          IF p_structure_version_id IS NOT NULL AND
             p_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN
              --Validate the incoming structure version id

              PA_PROJECT_STRUCTURE_UTILS.Structure_Version_Name_Or_Id(
                      p_structure_id                     => null
                     ,p_structure_version_name           => null
                     ,p_structure_version_id             => p_structure_version_id
                     ,p_check_id_flag                    => 'Y'
                     ,x_structure_version_id             => l_structure_version_id
                     ,x_return_status                    => l_return_status
                     ,x_error_message_code               => l_msg_data
                 );
              IF l_return_status <> 'S'
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                ,p_msg_name       => l_msg_data );
                  raise api_error;
              END IF;

           --bug 2736392
              l_str_status_code := PA_PROJECT_STRUCTURE_UTILS.get_structrue_version_status
                           ( p_project_id                => p_project_id
                             ,p_structure_version_id      => p_structure_version_id );
              IF l_str_status_code IS NULL
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID' );
                  raise api_error;
              ELSIF l_str_status_code in ( 'STRUCTURE_SUBMITTED', 'STRUCTURE_REJECTED', 'STRUCTURE_APPROVED' )
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID2' );
                  raise api_error;
              END IF;
              --bug 2736392

          END IF;
     ***/

     /* New Code Begin for Bug 2736392 -- Commnted the above code*/

       IF p_structure_version_id IS NOT NULL AND p_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN
              l_str_status_code := PA_PROJECT_STRUCTURE_UTILS.get_structrue_version_status
                           ( p_project_id                => p_project_id
                             ,p_structure_version_id      => p_structure_version_id );
              IF l_str_status_code IS NULL
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID' );
                  raise api_error;
              ELSIF l_str_status_code in ( 'STRUCTURE_SUBMITTED', 'STRUCTURE_REJECTED', 'STRUCTURE_APPROVED' )
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID2' );
                  raise api_error;
              END IF;
       ELSIF l_structure_version_id IS  NULL
          THEN
                 OPEN cur_struc_ver_wp2;
                 FETCH cur_struc_ver_wp2 INTO l_dummy_num;
                 CLOSE cur_struc_ver_wp2;

           IF l_dummy_num is NOT NULL THEN
                       PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID2' );
                    raise api_error;
           ELSE
                        PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                      ,p_msg_name       => 'PA_PS_INV_STR_VER_ID' );
                       raise api_error;
           END IF;
          END IF;

      /* New Code End for Bug 2736392 */

---The following code is added to prevent message list re-initialization if there are any messages already on stack.
        IF p_calling_module = 'AMG' AND FND_MSG_PUB.count_msg > 0
        THEN
            l_init_msg_list := 'F';
        ELSE
            l_init_msg_list := 'T';
        END IF;

       IF p_create_task_version_only = 'N'
       THEN

           --For each project create 1 task
           PA_TASK_PUB1.create_task(
               p_calling_module          => p_calling_module
               ,p_init_msg_list            => l_init_msg_list
               ,p_object_type             => 'PA_TASKS'
               ,p_project_id              => p_project_id
               ,p_structure_id             => l_structure_id --1    --anything. does not matter since its not gonna useful to create record
                                                   --in pa_proj_elements in PA_TASK_PVT1.CREATE_TASK.
               ,p_task_number             => l_task_number
               ,p_task_name               => p_task_name
               ,p_task_description       => p_task_description
               ,p_location_id             => p_location_id
               ,p_task_manager_id        => p_manager_person_id
               ,p_carrying_out_org_id   => p_carrying_out_organization_id
               ,p_priority_code          => p_priority_code
               ,p_TYPE_ID                 => p_task_type
               ,p_status_code             => p_status_code
               ,p_inc_proj_progress_flag     => p_inc_proj_progress_flag
               ,p_pm_product_code        => P_PM_SOURCE_CODE
               ,p_pm_task_reference           => P_PM_SOURCE_reference
               ,p_closed_date             => p_closed_date
               ,p_link_task_flag           => p_link_task_flag
               ,P_UOM_CODE              => P_WQ_UOM_CODE
               ,p_work_item_code           => P_WQ_ITEM_CODE
               ,x_task_id                 => l_task_id
----- begin Bug 3654243 --------------------------------------------
           ,p_Base_Perc_Comp_Deriv_Code => p_base_percent_comp_deriv_code
----- end Bug 3654243 ----------------------------------------------

               ,x_return_status          => l_return_status
               ,x_msg_count               => l_msg_count
               ,x_msg_data                => l_msg_data
               );

              IF l_return_status <> 'S'
              THEN
                 /*PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => l_msg_data );
                  */
                  raise api_error;
              END IF;
       END IF;

              x_task_id := l_task_id;

--              IF p_structure_type = 'FINANCIAL'
--              THEN
                 IF p_parent_task_id IS NOT NULL AND p_parent_task_id <> l_task_id
                    AND p_parent_task_id = p_ref_task_id
                 THEN
                    l_peer_or_sub := 'SUB';
                    --get reference task version id
                    OPEN cur_proj_elem_vers2( l_structure_version_id, p_parent_task_id );
                    FETCH cur_proj_elem_vers2 INTO l_ref_task_version_id;
                    CLOSE cur_proj_elem_vers2;

                    OPEN cur_child_exists(l_ref_task_version_id);
                    FETCH cur_child_exists into l_child_exists;
                    IF (cur_child_exists%NOTFOUND) THEN
                      l_weighting := 100;
                    ELSE
                      l_weighting := 0;
                    END IF;
                    CLOSE cur_child_exists;

                    --Bug 2732907
                    IF l_ref_task_version_id IS NOT NULL
                    THEN
                       update pa_proj_elem_ver_schedule
                          set WQ_PLANNED_QUANTITY = null
                        where element_version_id = l_ref_task_version_id
                          and project_id = p_project_id
                          and proj_element_id = p_parent_task_id;
                    END IF;
                    --Bug 2732907

                 ELSIF p_ref_task_id IS NOT NULL
                 THEN
                     l_peer_or_sub := 'PEER';
                     IF p_parent_task_id IS NULL   --top task
                     THEN
                         OPEN cur_proj_elem_vers( l_structure_version_id );
                         FETCH cur_proj_elem_vers INTO l_ref_task_version_id;
                         CLOSE cur_proj_elem_vers;
                     ELSE   -- not a top task. Added the following to maintain sequence between the two
                            --leaf level peer tasks.

                         OPEN cur_proj_elem_vers2( l_structure_version_id, p_parent_task_id );
                         FETCH cur_proj_elem_vers2 INTO l_parent_task_version_id;
                         CLOSE cur_proj_elem_vers2;

                       /**  OPEN cur_ref_task_ver_id2( l_structure_version_id, l_parent_task_version_id );
                         fetch cur_ref_task_ver_id2 INTO l_ref_task_version_id;
                         CLOSE cur_ref_task_ver_id2; **/
                           --  Above code commented and code below added for 4038249. The code above
               -- was resetting the p_ref_task_version_id to that of that latest task
               -- instead of setting it to the p_ref_task_id passed by the user.
             OPEN cur_proj_elem_vers2( l_structure_version_id, p_ref_task_id );
                         FETCH cur_proj_elem_vers2 INTO l_ref_task_version_id;
                         CLOSE cur_proj_elem_vers2;
                         --  Code changes end for 4038249
                     END IF;
                     l_weighting := 0;
                 ELSIF p_ref_task_id IS NULL
                 THEN
                     --get structure version if its a top task
                     l_peer_or_sub := 'SUB';
                     /*IF l_template_flag = 'N'
                     THEN
                         --get structure version if its a top task
                         OPEN cur_struc_ver_fin;
                         FETCH cur_struc_ver_fin INTO l_ref_task_version_id;
                         CLOSE cur_struc_ver_fin;
                     ELSE
                         --For templates its always WORKING_STRUCTURE
                         OPEN cur_struc_ver_wp;
                         FETCH cur_struc_ver_wp INTO l_ref_task_version_id;
                         CLOSE cur_struc_ver_wp;
                     END IF;*/
                     l_ref_task_version_id := l_structure_version_id;
                     OPEN cur_child_exists(l_ref_task_version_id);
                     FETCH cur_child_exists into l_child_exists;
                     IF cur_child_exists%NOTFOUND THEN
                       l_weighting := 100;
                     ELSE
                       l_weighting := 0;
                     END IF;
                     CLOSE cur_child_exists;
                 END IF;
--Commenting out the following as its not needed. We dont any separate logic for WORKPLAN and FINANCIAL to get the
--ref task version id. There is only one cursor cur_proj_elem_vers that takes structure type
/*              ELSIF p_structure_type = 'WORKPLAN'
              THEN
                 IF p_parent_task_id IS NOT NULL AND p_parent_task_id <> l_task_id AND
                    p_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                 THEN
                    l_peer_or_sub := 'SUB';
                    --get reference task version id
                    OPEN cur_proj_elem_vers2( l_structure_version_id, p_parent_task_id );
                    FETCH cur_proj_elem_vers2 INTO l_ref_task_version_id;
                    CLOSE cur_proj_elem_vers2;

                    OPEN cur_child_exists(l_ref_task_version_id);
                    FETCH cur_child_exists into l_child_exists;
                    IF (cur_child_exists%NOTFOUND) THEN
                      l_weighting := 100;
                    ELSE
                      l_weighting := 0;
                    END IF;
                    CLOSE cur_child_exists;

                    --Bug 2732907
                    IF l_ref_task_version_id IS NOT NULL
                    THEN
                       update pa_proj_elem_ver_schedule
                          set WQ_PLANNED_QUANTITY = null
                        where element_version_id = l_ref_task_version_id
                          and project_id = p_project_id
                          and proj_element_id = p_parent_task_id;
                    END IF;
                    --Bug 2732907

                 ELSIF ( p_parent_task_id IS NULL OR p_parent_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                 --proj conn
                       AND ( p_ref_task_id is null OR p_ref_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
                 --proj conn
                 THEN
                     --get structure version if its a top task
                     l_ref_task_version_id := l_structure_version_id;

                     OPEN cur_child_exists(l_ref_task_version_id);
                     FETCH cur_child_exists into l_child_exists;
                     IF cur_child_exists%NOTFOUND THEN
                       l_weighting := 100;
                     ELSE
                       l_weighting := 0;
                     END IF;
                     CLOSE cur_child_exists;

                     l_peer_or_sub := 'SUB';
*/
                     /*IF p_structure_version_id IS NULL OR
                        p_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                     THEN
                         OPEN cur_struc_ver_wp;
                         FETCH cur_struc_ver_wp INTO l_ref_task_version_id;
                         CLOSE cur_struc_ver_wp;
                     ELSE
                         l_ref_task_version_id := p_structure_version_id;
                     END IF;
                     */
/*                 ELSIF p_ref_task_id IS NOT NULL AND p_ref_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                 THEN
                    l_weighting := 0;
                    OPEN cur_proj_elem_vers2( l_structure_version_id, p_ref_task_id );
                    FETCH cur_proj_elem_vers2 INTO l_ref_task_version_id;
                    CLOSE cur_proj_elem_vers2;
                    --proj conn
                       OPEN c1(   l_ref_task_version_id );
                       FETCH c1 into l_wbs_level;
                       CLOSE c1;

                       IF l_wbs_level > 1
                       THEN
                          OPEN c2( l_structure_version_id,l_ref_task_version_id,1 );
                          FETCH c2 into l_ref_task_version_id;
                          CLOSE c2;
                       END IF;
                       l_peer_or_sub := 'PEER';
                    --proj conn
                 END IF;
              END IF;  --<< p_structrue_type >>
*/

              IF (l_template_flag = 'N') THEN
                --check if structure is shared
                --  if shared, check if versioned
                --    'WORKING' if versioned; 'PUBLISHED' if not
                --  if split, check if 'FINANCIAL'
                --    'PUBLISHED' if financial
                --    check if versioned
                --    'WORKING' if versioend; 'PUBLISHED' if not

                -- <Bug#2843596>
                IF (nvl(g_project_id,-99) = p_project_id and g_sharing_enabled IS NOT NULL) THEN
                    l_sharing_enabled := g_sharing_enabled;
                ELSE
                    l_sharing_enabled := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(p_project_id);
                    g_project_id      := p_project_id;
                    g_sharing_enabled := l_sharing_enabled;
                END IF;
                -- </Bug#2843596>

                IF ('Y' = l_sharing_enabled) THEN
        -- Bug 4067757 used l_versioned instead of calling Check_Wp_Versioning_Enabled multiple times
                /*  IF ('Y' = PA_WORKPLAN_ATTR_UTILS.Check_Wp_Versioning_Enabled(p_project_id)) THEN  */
                  IF (l_versioned = 'Y') THEN
                    l_task_unpub_ver_status_code := 'WORKING';
                  ELSE
                    l_task_unpub_ver_status_code := 'PUBLISHED';
                  END IF;
                ELSE --split
                  IF ('Y' = PA_PROJECT_STRUCTURE_UTILS.get_struc_type_for_structure(l_structure_id, 'FINANCIAL')  AND
                      'N' = PA_PROJECT_STRUCTURE_UTILS.get_struc_type_for_structure(l_structure_id, 'WORKPLAN')) THEN
                    l_task_unpub_ver_status_code := 'PUBLISHED';
                  ELSE --workplan only
          -- Bug 4067757 used l_versioned instead of calling Check_Wp_Versioning_Enabled multiple times
                 /*   IF ('Y' = PA_WORKPLAN_ATTR_UTILS.Check_Wp_Versioning_Enabled(p_project_id)) THEN */
                      IF (l_versioned = 'Y') THEN
                      l_task_unpub_ver_status_code := 'WORKING';
                    ELSE
                      l_task_unpub_ver_status_code := 'PUBLISHED';
                    END IF;
                  END IF;
                END IF;
              ELSE
                l_task_unpub_ver_status_code := 'WORKING';
              END IF;

              --hsiu added for task status
              --check if ok to create subtask
              IF (l_peer_or_sub = 'PEER') THEN
                OPEN get_parent_version_id(l_ref_task_version_id);
                FETCH get_parent_version_id into l_parent_ver_id;
                CLOSE get_parent_version_id;
                PA_PROJ_ELEMENTS_UTILS.Check_create_subtask_ok(
                  p_parent_task_ver_id => l_parent_ver_id
                 ,x_return_status      => l_return_status
                 ,x_error_message_code => l_error_msg_code
                );

                IF (l_return_status <> 'Y') THEN
                  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                       p_msg_name => l_error_msg_code);
                  raise api_error;
                END IF;
              ELSE
                PA_PROJ_ELEMENTS_UTILS.Check_create_subtask_ok(
                  p_parent_task_ver_id => l_ref_task_version_id
                 ,x_return_status      => l_return_status
                 ,x_error_message_code => l_error_msg_code
                );

                IF (l_return_status <> 'Y') THEN
                  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                             p_msg_name => l_error_msg_code);
                  raise api_error;
                END IF;
              END IF;
              --end changes for task status

              PA_TASK_PVT1.Create_Task_Version(
                   p_ref_task_version_id     => l_ref_task_version_id
                  ,p_init_msg_list           => l_init_msg_list            --Added for bug 4955475
                  ,p_peer_or_sub         => l_peer_or_sub
                  ,p_task_id              => l_task_id
                  ,p_WEIGHTING_PERCENTAGE   => l_weighting
                  ,p_task_unpub_ver_status_code => l_task_unpub_ver_status_code
                  ,p_financial_task_flag => p_financial_task_flag    --bug 3301192
                  ,x_task_version_id      => l_task_version_id
                  ,x_return_status        => l_return_status
                  ,x_msg_count           => l_msg_count
                  ,x_msg_data             => l_msg_data
                );

              IF l_return_status <> 'S'
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_NO_TASK_VER_CREATED');
                  raise api_error;
              END IF;

              x_task_version_id      := l_task_version_id;


              --bug 3010538

              --3035902: process update flag changes
              OPEN get_task_type_id(l_task_id);
              FETCH get_task_type_id INTO l_task_type_id;
              CLOSE get_task_type_id;
           --Bug No 3450684 SMukka Commented if condition
           --IF NOT ( p_structure_type = 'WORKPLAN' AND
           --         l_shared = 'N' AND
           --        ( PA_PROGRESS_UTILS.GET_TASK_WEIGHTING_BASIS(p_project_id) = 'MANUAL' OR
           --           pa_task_type_utils.check_tk_type_progressable(l_task_type_id)='N') )
           --THEN

              PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG
               (  p_calling_context       => p_calling_module
                 ,p_project_id            => p_project_id
                 ,p_structure_version_id  => l_structure_version_id
                 ,p_update_wbs_flag       => 'Y'
                 ,x_return_status         => l_return_status
                 ,x_msg_count             => l_msg_count
                 ,x_msg_data              => l_msg_data);

             if l_return_status <> FND_API.G_RET_STS_SUCCESS then
                 x_msg_count := l_msg_count;
                 x_msg_data := l_msg_data;
                 RAISE API_ERROR;
             end if;
           --END IF;

             IF p_structure_type = 'FINANCIAL'
             THEN
                 l_published_ver_exists := PA_PROJECT_STRUCTURE_UTILS.CHECK_PUBLISHED_VER_EXISTS( p_project_id, l_structure_id );
                 IF ( l_versioned = 'N' OR
                      l_shared = 'N' OR
                      ( l_versioned = 'Y' AND
                        l_shared = 'Y' AND
                        l_published_ver_exists = 'N' ) )
                 THEN
                     pa_fp_refresh_elements_pub.set_process_flag_proj(
                           p_project_id               => p_project_id
                          ,p_request_id               => null
                          ,p_process_code             => null
                          ,p_refresh_required_flag    => 'Y'
                          ,x_return_status            => l_return_status
                          ,x_msg_count                => l_msg_count
                          ,x_msg_data                 => l_msg_data );

                      if l_return_status <> FND_API.G_RET_STS_SUCCESS then
                         x_msg_count := l_msg_count;
                         x_msg_data := l_msg_data;
                         RAISE API_ERROR;
                      end if;
                  END IF;
             END IF;

           --End bug 3010538

--hsiu added task status rollup
              select parent_structure_version_id
                into l_parent_struc_ver_id
                from pa_proj_element_versions
               where element_version_id = l_task_version_id;

              IF (PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(p_project_id) = 'Y') AND
           -- Bug 4067757 used l_versioned instead of calling Check_Wp_Versioning_Enabled multiple times
           /*      (PA_WORKPLAN_ATTR_UTILS.Check_Wp_Versioning_Enabled(p_project_id) = 'N') AND */
             (l_versioned = 'N') AND
                 (PA_PROJECT_STRUCTURE_UTILS.get_struc_type_for_structure(l_structure_id, 'WORKPLAN') = 'Y') THEN
                PA_STRUCT_TASK_ROLLUP_PUB.Task_Status_Rollup(
                  p_structure_version_id => l_parent_struc_ver_id
                 ,p_element_version_id => l_task_version_id
                 ,x_return_status => l_return_status
                 ,x_msg_count => l_msg_count
                 ,x_msg_data => l_msg_data
                );

                IF (l_return_status <> 'S') THEN
                  x_msg_count := l_msg_count;
                  x_msg_data := l_msg_data;
                  RAISE API_ERROR;
                END IF;

              END IF;
--end task status rollup


--Hsiu added
--inherit task type
              IF p_create_task_version_only = 'N'
              THEN
                  PA_TASK_PVT1.Inherit_task_type_attr(
                      p_task_id => l_task_id
                     ,p_task_version_id => l_task_version_id
                     ,x_return_status => l_return_status
                     ,x_msg_count => l_msg_count
                     ,x_msg_data => l_msg_data
                     );

                  IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                     raise api_error;
                  END IF;
              END IF;
--end inherit task type

              OPEN cur_pa_proj_elem_vers2(l_task_version_id);
              FETCH cur_pa_proj_elem_vers2 INTO l_dummy_char;
              IF cur_pa_proj_elem_vers2%FOUND
              THEN
                  -- xxlu added DFF attributes
                  OPEN cur_ver_sch_attr_rec(l_task_version_id);
                  FETCH cur_ver_sch_attr_rec INTO l_ver_sch_attr_rec;
                  CLOSE cur_ver_sch_attr_rec;

                  --hsiu: added for bug 2691868
                  IF (p_scheduled_start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) THEN
                    l_scheduled_start_date := sysdate;
                  ELSE
                    l_scheduled_start_date := p_scheduled_start_date;
                  END IF;

                  IF (p_scheduled_finish_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) THEN
                    l_scheduled_finish_date := sysdate;
                  ELSE
                    l_scheduled_finish_date := p_scheduled_finish_date;
                  END IF;

                  --bug  2824612

/*
                  SELECT type_id  INTO l_task_type_id
                    FROM pa_proj_elements
                   WHERE proj_element_id = l_task_id
                     AND project_id = p_project_id;
*/

                  IF ('N' = PA_TASK_TYPE_UTILS.check_tk_type_wq_enabled(l_task_type_id) OR
                      'N' = PA_PROGRESS_UTILS.get_project_wq_flag(p_project_id)) THEN
                      IF (P_PLANNED_WORK_QUANTITY <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND P_PLANNED_WORK_QUANTITY IS NOT NULL) THEN
                          l_wq_planned_quantity := NULL;
                      END IF;
                  ELSE
                     l_wq_planned_quantity := P_PLANNED_WORK_QUANTITY;    --bug 2826992
                  END IF;

                  l_workplan_enabled := 'Y';
                  --bug  2824612

                  --Bug 6153503 start
                  if (--p_attribute_category is null or
                        p_attribute_category = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute_category :=  l_ver_sch_attr_rec.attribute_category;
                    else
                          l_attribute_category :=  p_attribute_category;
                    end if;



                    if (--p_attribute1 is null or
                        p_attribute1 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute1  :=  l_ver_sch_attr_rec.attribute1;
                    else
                         l_attribute1  :=  p_attribute1;
                    end if;



                    if (--p_attribute2 is null or
                        p_attribute2 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute2  :=  l_ver_sch_attr_rec.attribute2;
                    else
                         l_attribute2  :=  p_attribute2;
                    end if;


                    if (--p_attribute3 is null or
                        p_attribute3 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute3 :=  l_ver_sch_attr_rec.attribute3;
                    else
                          l_attribute3 :=  p_attribute3;
                    end if;

                    if (--p_attribute4 is null or
                        p_attribute4 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute4 :=  l_ver_sch_attr_rec.attribute4;
                    else
                          l_attribute4 :=  p_attribute4;
                    end if;

                    if (--p_attribute5 is null or
                        p_attribute5 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute5 :=  l_ver_sch_attr_rec.attribute5;
                    else
                          l_attribute5 :=  p_attribute5;
                    end if;

                    if (--p_attribute6 is null or
                        p_attribute6 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute6 :=  l_ver_sch_attr_rec.attribute6;
                    else
                          l_attribute6 :=  p_attribute6;
                    end if;

                    if (--p_attribute7 is null or
                        p_attribute7 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)  -- Changed for Bug #6153681
                    then
                         l_attribute7 :=  l_ver_sch_attr_rec.attribute7;
                    else
                          l_attribute7 :=  p_attribute7;
                    end if;

                    if (--p_attribute8 is null or
                        p_attribute8 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute8 :=  l_ver_sch_attr_rec.attribute8;
                    else
                          l_attribute8  :=  p_attribute8;
                    end if;

                    if (--p_attribute9 is null or
                        p_attribute9 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute9 :=  l_ver_sch_attr_rec.attribute9;
                    else
                         l_attribute9 :=  p_attribute9;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute10 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute10 :=  l_ver_sch_attr_rec.attribute10;
                    else
                          l_attribute10 :=  p_attribute10;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute11 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute11 :=  l_ver_sch_attr_rec.attribute11;
                    else
                          l_attribute11 :=  p_attribute11;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute12 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute12 :=  l_ver_sch_attr_rec.attribute12;
                    else
                          l_attribute12 :=  p_attribute12;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute13 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute13 :=  l_ver_sch_attr_rec.attribute13;
                    else
                          l_attribute13 :=  p_attribute13;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute14 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute14 :=  l_ver_sch_attr_rec.attribute14;
                    else
                          l_attribute14 :=  p_attribute14;
                    end if;


                    if (--p_attribute10 is null or
                        p_attribute15 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute15 :=  l_ver_sch_attr_rec.attribute15;
                    else
                          l_attribute15 :=  p_attribute15;
                    end if;

                  --if added while fixing BUG 3919800
                  --Add validation for PA_PROJ_ELEM_VER_SCH_DESC_FLEX
                  --if l_attribute_category is not null and l_attribute_category <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                  --then
                  IF p_validate_dff = 'Y' THEN
                       pa_task_utils.validate_flex_fields(
                       p_desc_flex_name        => 'PA_PROJ_ELEM_VER_SCH_DESC_FLEX'
                      ,p_attribute_category    => l_attribute_category
                      ,p_attribute1            => l_attribute1
                      ,p_attribute2            => l_attribute2
                      ,p_attribute3            => l_attribute3
                      ,p_attribute4            => l_attribute4
                      ,p_attribute5            => l_attribute5
                      ,p_attribute6            => l_attribute6
                      ,p_attribute7            => l_attribute7
                      ,p_attribute8            => l_attribute8
                      ,p_attribute9            => l_attribute9
                      ,p_attribute10           => l_attribute10
                      ,p_attribute11           => l_attribute11
                      ,p_attribute12           => l_attribute12
                      ,p_attribute13           => l_attribute13
                      ,p_attribute14           => l_attribute14
                      ,p_attribute15           => l_attribute15
                      ,p_RETURN_msg            => l_return_msg
                      ,p_validate_status       => l_validate_status
                      );

                 --end if;

                  IF l_validate_status = 'N'
                    THEN
                         IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                         THEN
                              pa_interface_utils_pub.map_new_amg_msg
                                        ( p_old_message_code => 'PA_INVALID_FF_VALUES'
                                        ,p_msg_attribute    => 'CHANGE'
                                        ,p_resize_flag      => 'N'
                                        ,p_msg_context      => 'FLEX'
                                        ,p_attribute1       => l_return_msg
                                        ,p_attribute2       => ''
                                        ,p_attribute3       => ''
                                        ,p_attribute4       => ''
                                        ,p_attribute5       => '');
                        END IF;
                    RAISE FND_API.G_EXC_ERROR;
                  END IF;
               END IF;
        --Bug 6153503 end
--End add rtarway, 3908013

                  PA_TASK_PUB1.Create_Schedule_Version(
                      p_element_version_id     => l_task_version_id
                     ,p_init_msg_list            => l_init_msg_list
                     ,p_scheduled_start_date   => l_scheduled_start_date
                     ,p_scheduled_end_date     => l_scheduled_finish_date
                     ,p_calendar_id                   => P_CALENDAR_ID
                     ,p_obligation_start_date     => p_obligation_start_date
                     ,p_obligation_end_date    => p_obligation_finish_date
                     ,p_actual_start_date            => p_actual_start_date
                     ,p_actual_finish_date     => p_actual_finish_date
                     ,p_estimate_start_date    => p_estimated_start_date
                     ,p_estimate_finish_date   => p_estimated_finish_date
                     ,p_duration                 => p_duration
                     ,p_early_start_date             => p_early_start_date
                     ,p_early_end_date          => p_early_finish_date
                     ,p_late_start_date         => p_late_start_date
                     ,p_late_end_date           => p_late_finish_date
                     ,p_milestone_flag          => p_milestone_flag
                     ,p_critical_flag           => p_critical_flag
                     ,p_WQ_PLANNED_QUANTITY     => l_wq_planned_quantity  --bug  2824612
                     ,p_PLANNED_EFFORT          => p_planned_effort
                     --Bug 6153503
                     ,p_attribute_category      => l_attribute_category --l_ver_sch_attr_rec.attribute_category
                     ,p_attribute1              => l_attribute1--l_ver_sch_attr_rec.attribute1
                     ,p_attribute2              => l_attribute2--l_ver_sch_attr_rec.attribute2
                     ,p_attribute3              => l_attribute3--l_ver_sch_attr_rec.attribute3
                     ,p_attribute4              => l_attribute4--l_ver_sch_attr_rec.attribute4
                     ,p_attribute5              => l_attribute5--l_ver_sch_attr_rec.attribute5
                     ,p_attribute6              => l_attribute6--l_ver_sch_attr_rec.attribute6
                     ,p_attribute7              => l_attribute7--l_ver_sch_attr_rec.attribute7
                     ,p_attribute8              => l_attribute8--l_ver_sch_attr_rec.attribute8
                     ,p_attribute9              => l_attribute9--l_ver_sch_attr_rec.attribute9
                     ,p_attribute10             => l_attribute10--l_ver_sch_attr_rec.attribute10
                     ,p_attribute11             => l_attribute11--l_ver_sch_attr_rec.attribute11
                     ,p_attribute12             => l_attribute12--l_ver_sch_attr_rec.attribute12
                     ,p_attribute13             => l_attribute13--l_ver_sch_attr_rec.attribute13
                     ,p_attribute14             => l_attribute14--l_ver_sch_attr_rec.attribute14
                     ,p_attribute15             => l_attribute15--l_ver_sch_attr_rec.attribute15
                     --Bug 6153503 end
-- (Begin Venkat) new params for bug #3450684 ----------------------------------------------
             ,p_ext_act_duration    => p_ext_act_duration
             ,p_ext_remain_duration => p_ext_remain_duration
             ,p_ext_sch_duration    => p_ext_sch_duration
-- (End Venkat) new params for bug #3450684 -------------------------------------------------

-- begin Bug 3654243 -----------------------------------------------------------------------
        ,p_def_sch_tool_tsk_type_code =>   p_sch_tool_tsk_type_code
        ,p_constraint_type_code  =>        p_constraint_type_code
        ,p_constraint_date =>              p_constraint_date
        ,p_free_slack =>                   p_free_slack
        ,p_total_slack =>                  p_total_slack
        ,p_effort_driven_flag =>           p_effort_driven_flag
        ,p_level_assignments_flag =>       p_level_assignments_flag
-- end Bug 3654243 -------------------------------------------------------------------------

                     ,x_pev_schedule_id         => x_pev_schedule_id
                     ,x_return_status           => l_return_status
                     ,x_msg_count                => l_msg_count
                     ,x_msg_data                 => l_msg_data
                 );
                 -- end xxlu changes
              END IF;
              CLOSE cur_pa_proj_elem_vers2;

              IF l_return_status <> 'S'
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_NO_TASK_SCH_VER_CREATED');
                  raise api_error;
              END IF;

              --bug 2732895   --create_task_structure
              --The following API should NOT be called if CREATE_TASK_STRUCTURE is called from AMG.
              --AMG recalculates the weightings once all the tasks are created.
              IF p_calling_module = 'FORMS'
              THEN
                  IF l_workplan_enabled  = 'Y'
                  THEN
                      PA_PROJ_TASK_STRUC_PUB.recalc_task_weightings(
                            p_tasks_in             => l_tasks_out            --null if called for one task
                           ,p_task_version_id      => l_task_version_id
                           ,x_msg_count            => l_msg_count
                           ,x_msg_data             => l_msg_data
                           ,x_return_status        => l_return_status
                       );
                      IF l_return_status <> 'S'
                      THEN
                          raise api_error;
                      END IF;

                      --Bug 3170832  --uncommenting the call to rollup dates
                      PA_PROJ_TASK_STRUC_PUB.rollup_dates(
                            p_tasks_in             => l_tasks_out            --null if called for one task
                           ,p_task_version_id      => l_task_version_id
                           ,p_structure_version_id => l_structure_version_id
                           ,p_project_id           => p_project_id
                           ,x_msg_count            => l_msg_count
                           ,x_msg_data             => l_msg_data
                           ,x_return_status        => l_return_status
                       );
                      IF l_return_status <> 'S'
                      THEN
                          raise api_error;
                      END IF;
                      --Bug 3170832  --uncommenting the call to rollup dates

                  END IF;
              END IF;
              --bug 2732895

   END IF;
   CLOSE cur_pa_temp_import;

/* Bug # 3420093 - Adding Progress Management modifications to create_task flow. */

    if (p_structure_type = 'WORKPLAN' ) then

                if (PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(x_task_version_id) = 'Y') then
                l_add_task_ver_ids.extend(1);
                l_add_planned_effort.extend(1);
                l_add_start_date.extend(1);
                l_add_end_date.extend(1);

                l_add_task_ver_ids(l_add_task_ver_ids.count):= x_task_version_id;
                l_add_planned_effort(l_add_planned_effort.count):= p_planned_effort;
                                l_add_start_date(l_add_start_date.count):= p_actual_start_date;
                                l_add_end_date(l_add_end_date.count):= p_actual_finish_date;
            else
                                l_del_task_ver_ids.extend(1);

                                l_del_task_ver_ids(l_del_task_ver_ids.count):= x_task_version_id;
            end if;
    end if;

    -- Calling pa_task_pub1.call_add_planning_txns for lowest level tasks.

    begin
            pa_task_pub1.call_add_planning_txns(
            p_tasks_ver_ids                  => l_add_task_ver_ids,
            p_planned_effort                 => l_add_planned_effort,
            p_project_id                     => p_project_id,
            p_structure_version_id           => l_structure_version_id,  --replace p_structure_version_id, bug 3838186
            p_start_date                     => l_add_start_date,
            p_end_date                       => l_add_end_date,
            p_pm_product_code                => P_PM_SOURCE_CODE,   --bug 3811243
            x_return_status                  => l_return_status,
            x_msg_count                      => l_msg_count,
            x_msg_data                       => l_msg_data
            );
    exception
            when others then
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'pa_project_pub',
                                p_procedure_name => 'CREATE_PROJECT',
                                        p_error_text     => substrb('PA_TASK_PUB1.CALL_ADD_PLANNING_TXNS:'||sqlerrm,1,240));
            raise fnd_api.g_exc_error;
        end;

    -- Calling pa_fp_planning_transaction_pub.delete_planning_transactions for higher level tasks.

       begin
           pa_fp_planning_transaction_pub.delete_planning_transactions
           (
            p_context                      => 'WORKPLAN'
           ,p_task_or_res                  => 'TASKS'
           ,p_element_version_id_tbl       => l_del_task_ver_ids
           ,x_return_status                => l_return_status
           ,x_msg_count                    => l_msg_count
           ,x_msg_data                     => l_msg_data
          );
       exception
           when others then
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'pa_project_pub',
                                        p_procedure_name => 'CREATE_PROJECT',
                                        p_error_text     => SUBSTRB('PA_FP_PLANNING_TRANSACTION_PUB.DELETE_PLANNING_TRANSACTIONS:'||SQLERRM,1,240));
           raise fnd_api.g_exc_error;
       end;

/* Bug # 3420093 - Adding Progress Management modifications to create_task flow. */


  x_return_status := FND_API.G_RET_STS_SUCCESS;
EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to create_task_struc;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'create_task_structure',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to create_task_struc;
  raise;
END create_task_structure;
-- API name                      : update_task_structure
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
--   p_calling_module                   IN VARCHAR2
--  ,p_task_id                          IN NUMBER
--  ,p_task_number                      IN VARCHAR2
--  ,p_task_name                        IN VARCHAR2
--  ,p_task_description                 IN VARCHAR2
--  ,p_carrying_out_organization_id     IN NUMBER
--  ,p_task_manager_id                  IN NUMBER
--  ,p_pm_product_code                  IN VARCHAR2
--  ,p_pm_task_reference                IN VARCHAR2
--  ,p_record_version_number           IN NUMBER
--  ,x_msg_count                        OUT NUMBER
--  ,x_msg_data                         OUT VARCHAR2
--  ,x_return_status                    OUT VARCHAR2--
--  History
--
--  25-APR-02      MAansari             -Created
--  05-APR-2004    Rakesh Raghavan      Progress Management Changes. Bug # 3420093.
--  18-MAY-2004    Rakesh Raghavan      Modified call to API: pa_task_pub1.update_task_det_sch_info().

PROCEDURE update_task_structure
(
   p_calling_module                   IN VARCHAR2 := 'FORMS'
  ,p_ref_task_id                      IN NUMBER
  ,p_project_id                       IN NUMBER
  ,p_task_id                          IN NUMBER
  ,p_task_number                      IN VARCHAR2
  ,p_task_name                        IN VARCHAR2
  ,p_task_description                 IN VARCHAR2
  ,p_carrying_out_organization_id     IN NUMBER
  ,p_structure_type                   IN VARCHAR2 := 'FINANCIAL'
  ,p_task_manager_id                  IN NUMBER
  ,p_pm_product_code                  IN VARCHAR2
  ,p_pm_task_reference                IN VARCHAR2
  ,p_location_id                      IN NUMBER
  ,p_actual_start_date                  IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_actual_finish_date                 IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_early_start_date                   IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_early_finish_date                  IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_late_start_date                    IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_late_finish_date                   IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_scheduled_start_date               IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_scheduled_finish_date              IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_OBLIGATION_START_DATE              IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_OBLIGATION_FINISH_DATE             IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_ESTIMATED_START_DATE               IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_ESTIMATED_FINISH_DATE              IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_BASELINE_START_DATE                IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_BASELINE_FINISH_DATE               IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_CLOSED_DATE                        IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,P_WQ_UOM_CODE                        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_WQ_ITEM_CODE                       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_STATUS_CODE                        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_WF_STATUS_CODE                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_PRIORITY_CODE                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_MILESTONE_FLAG                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_CRITICAL_FLAG                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_INC_PROJ_PROGRESS_FLAG             IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_LINK_TASK_FLAG                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,P_CALENDAR_ID                        IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_PLANNED_EFFORT                     IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_DURATION                           IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_PLANNED_WORK_QUANTITY              IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_TASK_TYPE                          IN NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_structure_version_id               IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_parent_structure_id               IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_phase_version_id                  IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,P_PHASE_CODE                         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- (begin venkat) new params for bug #3450684 ----------------------------------------------
  ,p_ext_act_duration               IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
  ,p_ext_remain_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
  ,p_ext_sch_duration               IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
-- (end venkat) new params for bug #3450684 -------------------------------------------------
-- (begin) add new params bug - 3654243 -----
  ,p_base_percent_comp_deriv_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_sch_tool_tsk_type_code     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_type_code       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_date            IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_free_slack             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_total_slack            IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_effort_driven_flag         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_level_assignments_flag     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_invoice_method         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_customer_id            IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_gen_etc_source_code        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- (end) add new params bug - 3654243 -----
-- Progress Management Changes. Bug # 3420093.
  ,p_etc_effort                 IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_percent_complete           IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
-- Progress Management Changes. Bug # 3420093.
-- rtarway, BUG 3908013
     ,p_attribute_category            IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute1                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute2                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute3                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute4                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute5                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute6                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute7                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute8                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute9                    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute10                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     --Bug 6153503
     ,p_attribute11                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute12                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute13                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute14                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_attribute15                   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,x_msg_count                        OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data                         OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status                    OUT NOCOPY VARCHAR2  --File.Sql.39 bug 4440895
  ) IS

  l_return_status       VARCHAR2(1);
  l_msg_count           NUMBER;
  l_msg_data            VARCHAR2(2000);
  API_ERROR            EXCEPTION;
  l_record_version_number NUMBER;


  CURSOR cur_proj_is_template
  IS     select 'Y'
           from pa_projects_all
          where project_id = p_project_id
            and template_flag = 'Y';
  l_template_flag VARCHAR2(1);

    CURSOR cur_rec_ver_num
    IS
      SELECT record_version_number
        FROM pa_proj_elements
       WHERE proj_element_id = p_task_id
         AND object_type = 'PA_TASKS';

/* Bug 2680486 -- Performance changes -- Added d.project_id= c.project_id
                  join in the following cursor*/

   CURSOR cur_struc_ver_fin
   IS
     SELECT c.element_version_id
       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
            ,pa_proj_elem_ver_structure d
      WHERE c.project_id = p_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = p_structure_type
     AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND d.status_code = 'STRUCTURE_PUBLISHED'
        AND d.latest_eff_published_flag = 'Y'
        ;

/* Bug 2680486 -- Performance changes -- Added d.project_id= c.project_id
                  join in the following cursor*/


   CURSOR cur_struc_ver_wp
   IS
     SELECT c.element_version_id
       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
            ,pa_proj_elem_ver_structure d
      WHERE c.project_id = p_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = p_structure_type
     AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND d.status_code = 'STRUCTURE_WORKING'
        ;

   CURSOR cur_pa_tasks( c_task_id NUMBER )
   IS
     SELECT parent_task_id
       FROM pa_tasks
      WHERE project_id = p_project_id
        AND task_id = c_task_id;

   CURSOR cur_pa_task_ver( c_structure_version_id NUMBER, c_task_id NUMBER )
   IS
     SELECT element_version_id, record_version_number
       FROM pa_proj_element_versions
      WHERE project_id = p_project_id
        AND proj_element_id = c_task_id
        AND parent_structure_version_id = c_structure_version_id
        AND object_type = 'PA_TASKS';

   CURSOR cur_pa_peer_task_above( c_structure_version_id NUMBER, c_task_version_id NUMBER )
   IS
     SELECT element_version_id
       FROM pa_proj_element_versions
      WHERE project_id = p_project_id
        AND parent_structure_version_id = c_structure_version_id
        AND display_sequence = ( SELECT max( display_sequence ) FROM pa_proj_element_versions
                                  WHERE parent_structure_version_id = c_structure_version_id
                                    AND display_sequence < ( SELECT display_sequence FROM pa_proj_element_versions
                                                               WHERE element_version_id = c_task_version_id )
                                    AND wbs_level = ( SELECT wbs_level FROM pa_proj_element_versions
                                                       WHERE element_version_id = c_task_version_id )
                               )
        AND object_type = 'PA_TASKS';

  CURSOR cur_proj_sch( c_task_version_id NUMBER )
  IS
    SELECT pev_schedule_id, record_version_number
      FROM pa_proj_elem_ver_schedule
     WHERE element_version_id = c_task_version_id
       AND project_id = p_project_id
       AND proj_element_id = p_task_id;  --This will give u unique record.

    CURSOR cur_pa_obj_rel( c_task_version_id NUMBER )
    IS
      SELECT object_id_from1
        FROM pa_object_relationships
       WHERE object_id_to1 = c_task_version_id
         and relationship_type = 'S';

    CURSOR cur_pa_proj_elem_ver( c_task_version_id NUMBER )
    IS
      SELECT proj_element_id
        FROM pa_proj_element_versions
       WHERE project_id = p_project_id
         AND element_version_id = c_task_version_id
         AND object_type = 'PA_TASKS';

    CURSOR cur_pa_proj_elem_vers2( c_task_version_id NUMBER )
  IS
    SELECT 'x'
      FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
     WHERE c.project_id = p_project_id
       AND a.structure_type_id = b.structure_type_id
       AND b.proj_element_id = c.proj_element_id
       AND a.structure_type = 'WORKPLAN'
       AND element_version_id = ( SELECT parent_structure_version_id
                                   FROM  pa_proj_element_versions
                                   WHERE element_version_id = c_task_version_id );

  -- xxlu added for DFF attributes for calling update_schedule_version
  CURSOR cur_ver_sch_attr_rec(c_element_version_id IN NUMBER) IS
    SELECT *
    FROM pa_proj_elem_ver_schedule
    WHERE element_version_id = c_element_version_id
     and  project_id = p_project_id;
  l_ver_sch_attr_rec cur_ver_sch_attr_rec%ROWTYPE;
  -- end xxlu changes

  l_structure_version_id   NUMBER;
  l_parent_task_id         NUMBER;
  l_parent_of_ref_task_id  NUMBER;
  l_ref_task_version_id    NUMBER;
  l_task_version_id        NUMBER;
  l_peer_or_sub            VARCHAR2(4);
  l_pev_schedule_id        NUMBER;

  v_parent_task_ver_id_of_ref  NUMBER;
  v_parent_task_version_id     NUMBER;
  l_dummy_char                 VARCHAR2(1);
--bug 2736392
  l_str_status_code            VARCHAR2(150);
--bug 2736392
  l_init_msg_list              VARCHAR2(1);

/* Bug 2736392 Begin */
    CURSOR cur_struc_ver_wp2
   IS
     SELECT c.element_version_id
       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
            ,pa_proj_elem_ver_structure d
      WHERE c.project_id = p_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = p_structure_type
     AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND (d.status_code = 'STRUCTURE_SUBMITTED' OR d.status_code='STRUCTURE_REJECTED' OR d.status_code= 'STRUCTURE_APPROVED')
        ;
l_dummy_num number;
/* Bug 2736392 End */

l_db_parent_task_version_id number; -- Bug 2790275
l_passed_parent_task_ver_id number; -- Bug 2790275

--bug 2824612
  l_wq_planned_quantity     NUMBER;
  l_task_type_id            NUMBER;
--bug 2824612

  l_tasks_out     pa_project_pub.task_out_tbl_type ;     --dummy variables.  --bug 2856033
  l_process_code           VARCHAR2(30);

  l_request_id    pa_proj_elem_ver_structure.conc_request_id%TYPE; -- Bug 3091798

/* Added for bug 3290037 */

   CURSOR cur_task_attr IS
     SELECT pe.ELEMENT_NUMBER, pe.NAME
       FROM pa_proj_elements pe
      WHERE pe.proj_element_id = p_task_id
        AND pe.object_type = 'PA_TASKS';

   l_task_number       pa_proj_elements.element_number%TYPE;
   l_task_name         pa_proj_elements.name%TYPE;

   --rtarway,3666023
   l_task_id           pa_proj_elements.PROJ_ELEMENT_ID%TYPE;

/* End of code for bug 3290037 */

/* Bug # 3420093 - Adding Progress Management modifications to update_task flow. */

--Bug 5256359. Changed the type of these pl-sql tbls to SYSTEM.pa_xxx_tbl_type from PA_xxx_1000_xxx.

--New tbls (suffixed with _prm), created  below will be used as parameters in the call to
--pa_task_pub1.call_add_planning_txns

l_add_task_ver_ids          SYSTEM.pa_num_tbl_type  := SYSTEM.pa_num_tbl_type();
l_add_planned_effort        SYSTEM.pa_num_tbl_type  := SYSTEM.pa_num_tbl_type();
l_add_start_date            SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();
l_add_end_date              SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();
l_add_task_ver_ids_prm      PA_NUM_1000_NUM         := PA_NUM_1000_NUM();
l_add_planned_effort_prm    PA_NUM_1000_NUM         := PA_NUM_1000_NUM();
l_add_start_date_prm        PA_DATE_1000_DATE       := PA_DATE_1000_DATE();
l_add_end_date_prm          PA_DATE_1000_DATE       := PA_DATE_1000_DATE();
rec_count                   NUMBER;

        l_del_task_ver_ids      SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();

    cursor l_task_cur(p_project_id NUMBER, p_struct_ver_id NUMBER) is
/*  --bug 3880482
    select
    element_version_id,planned_effort,actual_start_date,actual_finish_date
    from pa_proj_elem_ver_schedule ppevs, pa_proj_elements ppe
    where ppevs.project_id = ppe.project_id
    and ppevs.proj_element_id = ppe.proj_element_id
    and ppe.object_type = 'PA_TASKS'
    and ppevs.project_id = p_project_id;
*/
    SELECT
      ppv.element_version_id
     ,ppevs.planned_effort
     ,ppevs.actual_start_date
     ,ppevs.actual_finish_date
    FROM
      pa_proj_elem_ver_schedule ppevs
     ,pa_proj_element_versions ppv
    WHERE
      ppevs.project_id = ppv.project_id
      and ppevs.proj_element_id = ppv.proj_element_id
      and ppv.object_type = 'PA_TASKS'
      and ppv.element_version_id = ppevs.element_version_id
      and ppv.project_id = p_project_id
      and ppv.parent_structure_version_id = p_struct_ver_id;

    l_task_cur_rec      l_task_cur%rowtype;

/* Bug # 3420093 - Adding Progress Management modifications to update_task flow. */

--rtarway, 3908013
l_attribute_category          VARCHAR2(150);
l_attribute1                  VARCHAR2(150);
l_attribute2                  VARCHAR2(150);
l_attribute3                  VARCHAR2(150);
l_attribute4                  VARCHAR2(150);
l_attribute5                  VARCHAR2(150);
l_attribute6                  VARCHAR2(150);
l_attribute7                  VARCHAR2(150);
l_attribute8                  VARCHAR2(150);
l_attribute9                  VARCHAR2(150);
l_attribute10                 VARCHAR2(150);
--Bug 6153503
l_attribute11                 VARCHAR2(150);
l_attribute12                 VARCHAR2(150);
l_attribute13                 VARCHAR2(150);
l_attribute14                 VARCHAR2(150);
l_attribute15                 VARCHAR2(150);
l_return_msg                  varchar2(2000);
l_validate_status             varchar2(1);

-- Begin fix for Bug # 4373055.

l_str_ver_id            NUMBER:= null;
l_conc_request_id       NUMBER := null;
l_message_name      VARCHAR2(30) := null;
l_message_type      VARCHAR2(30) := null;

-- End fix for Bug # 4373055.

-- 7358214

CURSOR check_hidden_assgn_exists(p_element_version_id IN NUMBER) IS
SELECT 'Y'
FROM pa_resource_assignments ra
WHERE ra.ta_display_flag = 'N'
AND ra.wbs_element_version_id = p_element_version_id
AND rownum = 1;

l_hidden_assgn VARCHAR2(1);
-- 7358214
BEGIN

      --Clear Error Messages.
      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;

      SAVEPOINT update_task_struc;

      OPEN cur_proj_is_template;
      FETCH cur_proj_is_template into l_template_flag;
      IF cur_proj_is_template%NOTFOUND THEN
         l_template_flag := 'N';
      END IF;
      CLOSE cur_proj_is_template;

      OPEN cur_rec_ver_num;
      FETCH cur_rec_ver_num INTO l_record_version_number;
      CLOSE cur_rec_ver_num;

---The following code is added to prevent message list re-initialization if there are any messages already on stack.
        IF p_calling_module = 'AMG' AND FND_MSG_PUB.count_msg > 0
        THEN
            l_init_msg_list := 'F';
        ELSE
            l_init_msg_list := 'T';
        END IF;

     /* Added for bug 3290037 */

       OPEN cur_task_attr;
       FETCH cur_task_attr INTO l_task_number, l_task_name;
       CLOSE cur_task_attr;
       --dbms_output.put_line(('Value of p_task_number' ||p_task_number);
       --dbms_output.put_line(('Value of l_task_number' ||l_task_number);

      IF ( p_task_number <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR AND p_task_number IS NOT NULL)
      /* bug#5243018 : Reverting the fix in Bug 4120380
      AND nvl(p_task_number,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <>
           nvl(l_task_number,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)) --check added for BUg 4120380 Aditi */
      THEN
       l_task_number := p_task_number;
	 /* bug#5243018 : Reverting the fix in Bug 4120380
       -- dbms_output.put_line('printed once');
       IF p_calling_module = 'AMG' THEN --Added this clause for Bug 4762147
       -- This is required so that when Update_tas_Strcucture is caled from forms , - sign does not get prepended
       l_task_number := '-'||p_task_number;
       ELSE
       l_task_number := p_task_number;
       END IF;*/ /** '-' prefixed to p_task_number for Bug 4120380. This is to ensure that the when task_numbers are being interchanged,tasks get saved to the database sucessfully to bypass the constranit PA_PROJ_ELEMENTS_U2.
       After updating all the tasks in the script, code again updates the task_number, trimming the '-' added. **/
      END IF;
       --dbms_output.put_line('Value of l_task_number' ||l_task_number);

      IF ( p_task_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR AND p_task_name IS NOT NULL )
      THEN
       l_task_name := p_task_name;
      END IF;

      /* End of code added for bug 3290037 */
      --Begin add by rtarway for BUG 3666023
      --3663712, changed 'OR' to and 'AND' in following If condition
      IF (  p_task_id IS NOT NULL AND p_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  )
      THEN
             l_task_id := p_task_id;
      ELSIF
          ( p_pm_task_reference IS NOT NULL AND p_pm_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
      THEN
             PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_all
                                              (p_pa_project_id     => p_project_id
                                              ,p_pm_task_reference => p_pm_task_reference
                                              ,p_structure_type    => p_structure_type
                                              ,p_out_task_id       => l_task_id
                                              ,p_return_status     => l_return_status);

             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
             END IF;
      END IF;
      --End add by rtarway for BUG 3666023


      PA_TASK_PUB1.Update_Task(
         p_calling_module             => p_calling_module
        ,p_init_msg_list            => l_init_msg_list
        --rtarway for BUG 3666023
        --,p_task_id                    => p_task_id
        ,p_task_id                    => l_task_id
        ,p_task_number                 => l_task_number  /* Modified p_task_number to l_task_number for 3290037 */
        ,p_task_name                   => l_task_name    /* Modified p_task_name to l_task_name for 3290037 */
        ,p_task_description           => p_task_description
        ,p_task_manager_id            => p_TASK_MANAGER_ID
        ,p_carrying_out_org_id       => p_carrying_out_organization_id
        ,p_pm_product_code            => p_pm_product_code
        ,p_pm_task_reference          => p_pm_task_reference
        ,p_location_id                 => p_location_id
        ,p_priority_code         => p_priority_code
        ,p_TYPE_ID                     => p_task_type
        ,p_status_code                 => P_STATUS_CODE
        ,p_inc_proj_progress_flag     => p_inc_proj_progress_flag
        ,p_closed_date                 => p_closed_date
        ,p_record_version_number      => l_record_version_number
        ,P_UOM_CODE              => P_WQ_UOM_CODE
        ,p_work_item_code           => P_WQ_ITEM_CODE
----- begin Bug 3654243 --------------------------------------------
    ,p_Base_Perc_Comp_Deriv_Code => p_base_percent_comp_deriv_code
        ,p_gen_etc_src_code          => p_gen_etc_source_code
----- end Bug 3654243 ----------------------------------------------
        ,x_return_status         => l_return_status
        ,x_msg_count                   => l_msg_count
        ,x_msg_data               => l_msg_data
       );
--dbms_output.put_line('Before calling PA_TASK_PUB1.Update_Task l_return_status'||l_return_status);

        IF l_return_status <> 'S'
        THEN
            PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                 ,p_msg_name       => 'PA_PS_TASK_NOT_UPDATED'
                 /* ADDED PROJECT_ID AND TASK_ID TOKENS FOR BUG 4219451 */
                 ,p_token1         => 'PROJECT'
                 ,p_value1         =>  p_project_id
                 ,p_token2          => 'TASK'
                 ,p_value2          => l_task_id);
            raise api_error;
        END IF;

        IF p_calling_module = 'AMG' AND
           p_ref_task_id is NOT NULL    --to make sure that hierarchy is changed.
           AND p_ref_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  --bug 3701460
                                        --if p_ref_task_id is null then there is no hierarchy change
                                        --It is also true that it is not necessary that the hierarchy is changed even if
                                        --it p_ref_task_id is NOT null.
        THEN

          IF p_structure_version_id IS NULL OR
             p_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN

              IF p_structure_type = 'FINANCIAL'
              THEN
                  IF l_template_flag   = 'N'
                  THEN
                      --get structure version if its a top task
                      OPEN cur_struc_ver_fin;
                      FETCH cur_struc_ver_fin INTO l_structure_version_id;
                      CLOSE cur_struc_ver_fin;
                  ELSE
                      --For templates its always WORKING_STRUCTURE
                      OPEN cur_struc_ver_wp;
                      FETCH cur_struc_ver_wp INTO l_structure_version_id;
                      CLOSE cur_struc_ver_wp;
                  END IF;
              ELSE
                  OPEN cur_struc_ver_wp;
                  FETCH cur_struc_ver_wp INTO l_structure_version_id;
                  CLOSE cur_struc_ver_wp;
              END IF;
          ELSE
              l_structure_version_id := p_structure_version_id;
          END IF;

      /*** Commented for Bug 2736392 -- Added new code below
           This code will never do the intended task because p_structure_version_id and l_structure_version_id
           will be null in this case. If a structure version is in approved, submitted or rejected state, then it
           will never be returned from cursor cur_struc_ver_wp, so how can we get the status of a null struc ver.

          IF p_structure_version_id IS NOT NULL AND
             p_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN
              --Validate the incoming structure version id
              PA_PROJECT_STRUCTURE_UTILS.Structure_Version_Name_Or_Id(
                      p_structure_id                     => null
                     ,p_structure_version_name           => null
                     ,p_structure_version_id             => p_structure_version_id
                     ,p_check_id_flag                    => 'Y'
                     ,x_structure_version_id             => l_structure_version_id
                     ,x_return_status                    => l_return_status
                     ,x_error_message_code               => l_msg_data
                 );
              IF l_return_status <> 'S'
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                ,p_msg_name       => l_msg_data );
                  raise api_error;
              END IF;
              --bug 2736392
              l_str_status_code := PA_PROJECT_STRUCTURE_UTILS.get_structrue_version_status
                           ( p_project_id                => p_project_id
                             ,p_structure_version_id      => p_structure_version_id );
              IF l_str_status_code IS NULL
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID' );
                  raise api_error;
              ELSIF l_str_status_code in ( 'STRUCTURE_SUBMITTED', 'STRUCTURE_REJECTED', 'STRUCTURE_APPROVED' )
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID2' );
                  raise api_error;
              END IF;
              --bug 2736392
          END IF;
        ***/
     /* New Code Begin for Bug 2736392 -- Commnted the above code*/

       IF p_structure_version_id IS NOT NULL AND p_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN
              l_str_status_code := PA_PROJECT_STRUCTURE_UTILS.get_structrue_version_status
                           ( p_project_id                => p_project_id
                             ,p_structure_version_id      => p_structure_version_id );
              IF l_str_status_code IS NULL
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID' );
                  raise api_error;
              ELSIF l_str_status_code in ( 'STRUCTURE_SUBMITTED', 'STRUCTURE_REJECTED', 'STRUCTURE_APPROVED' )
              THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID2' );
                  raise api_error;
              END IF;
       ELSIF l_structure_version_id IS  NULL
          THEN
                 OPEN cur_struc_ver_wp2;
                 FETCH cur_struc_ver_wp2 INTO l_dummy_num;
                 CLOSE cur_struc_ver_wp2;

           IF l_dummy_num is NOT NULL THEN
                       PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID2' );
                    raise api_error;
           ELSE
                        PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                      ,p_msg_name       => 'PA_PS_INV_STR_VER_ID' );
                       raise api_error;
           END IF;
          END IF;

        /* New Code End for Bug 2736392 */


            --get the task version id of the reference task
            OPEN cur_pa_task_ver( l_structure_version_id, p_ref_task_id );
            FETCH cur_pa_task_ver INTO l_ref_task_version_id, l_record_version_number;
            CLOSE cur_pa_task_ver;
            --get task version id of the task being moved or updated
            --rtarway, 3666023, replace by l_task_id
            --OPEN cur_pa_task_ver( l_structure_version_id, p_task_id );
            OPEN cur_pa_task_ver( l_structure_version_id, l_task_id );
            FETCH cur_pa_task_ver INTO l_task_version_id, l_record_version_number;
            CLOSE cur_pa_task_ver;


            IF p_structure_type = 'FINANCIAL'
            THEN
               --get the parent of the tak id
               --rtarway, 3666023, replace by l_task_id
               --OPEN cur_pa_tasks( p_task_id );
               OPEN cur_pa_tasks( l_task_id );
               FETCH cur_pa_tasks INTO l_parent_task_id;
               CLOSE cur_pa_tasks;

               --get the parent of the ref tak id
               OPEN cur_pa_tasks( p_ref_task_id );
               FETCH cur_pa_tasks INTO l_parent_of_ref_task_id;
               CLOSE cur_pa_tasks;

            ELSIF p_structure_type = 'WORKPLAN'
            THEN
              --get the parent task version id of the task version id
              OPEN cur_pa_obj_rel( l_task_version_id ) ;
              FETCH cur_pa_obj_rel INTO v_parent_task_version_id;
              CLOSE cur_pa_obj_rel;


              --get the parent task id of the parent task version id
              OPEN cur_pa_proj_elem_ver( v_parent_task_version_id ) ;
              FETCH cur_pa_proj_elem_ver INTO l_parent_task_id;
              CLOSE cur_pa_proj_elem_ver;



              --get the parent task version id of the ref task version id
              OPEN cur_pa_obj_rel( l_ref_task_version_id ) ;
              FETCH cur_pa_obj_rel INTO v_parent_task_ver_id_of_ref;
              CLOSE cur_pa_obj_rel;


              --get the parent task id of the parent ref task version id
              OPEN cur_pa_proj_elem_ver( v_parent_task_ver_id_of_ref ) ;
              FETCH cur_pa_proj_elem_ver INTO l_parent_of_ref_task_id;
              CLOSE cur_pa_proj_elem_ver;


            END IF;

            IF p_ref_task_id = l_parent_task_id
            THEN
               l_peer_or_sub := 'SUB';
            ELSIF l_parent_of_ref_task_id = l_parent_task_id
            THEN
               l_peer_or_sub := 'PEER';
            ELSE
               l_peer_or_sub := 'PEER';
               OPEN cur_pa_peer_task_above( l_structure_version_id, l_task_version_id );
               FETCH cur_pa_peer_task_above INTO l_ref_task_version_id;
               CLOSE cur_pa_peer_task_above;
            END IF;

            IF l_ref_task_version_id IS NOT NULL
            THEN

          /* Bug 2790275 Begin */
              OPEN cur_pa_obj_rel( l_task_version_id ) ;
              FETCH cur_pa_obj_rel INTO l_db_parent_task_version_id;
              CLOSE cur_pa_obj_rel;

              OPEN cur_pa_obj_rel( l_ref_task_version_id ) ;
              FETCH cur_pa_obj_rel INTO l_passed_parent_task_ver_id;
              CLOSE cur_pa_obj_rel;

           IF ((l_peer_or_sub = 'SUB' AND l_ref_task_version_id <> l_db_parent_task_version_id)
                                       OR
           (l_peer_or_sub = 'PEER' AND l_passed_parent_task_ver_id <> l_db_parent_task_version_id))
           THEN
          /* Bug 2790275 End */

         -- Check for the status of the process only if the wbs is going to change.
         -- PA L Changes 3010538
         -- Need not use map_new_amg_msg api as no context is involved and no _amg messages
         -- have been created.
         IF p_calling_module = 'AMG' THEN

-- Begin fix for Bug # 4373055.

/*

              l_process_code :=
                                PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_CODE(p_project_id => p_project_id
                                                                                  ,p_structure_type => p_structure_type );
               IF nvl(l_process_code,'-1') = 'WUP' THEN

                    l_request_id := PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_ID(p_project_id => p_project_id  -- Bug 3091798
                                                                                  ,p_structure_type => p_structure_type );
                    PA_UTILS.ADD_MESSAGE
                          (p_app_short_name => 'PA',
                          -- p_msg_name       => 'PA_PS_VD_UPDWBS_PRC_INPROC'); Bug 3091798
                           p_msg_name       => 'PA_PS_UPDWBS_PRC_INPROC_AMG',  -- Bug 3091798. Message includes the request id.
                           p_token1         => 'REQUESTID',
                           p_value1         => l_request_id);

                  raise api_error;

               ELSIF nvl(l_process_code,'-1') = 'WUE' THEN
                    l_request_id := PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_ID(p_project_id => p_project_id  --Bug 3091798
                                                                                  ,p_structure_type => p_structure_type );
                    PA_UTILS.ADD_MESSAGE
                          (p_app_short_name => 'PA',
                       --    p_msg_name       => 'PA_PS_VD_UPD_WBS_PRC_ERR');
                           p_msg_name       => 'PA_PS_UPDWBS_PRC_ERR_AMG',  -- Bug 3091798. Message includes the request id.
                           p_token1         => 'REQUESTID',
                           p_value1         => l_request_id);

                  raise api_error;

               END IF;

*/

        PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_MSG(
        p_project_id              => p_project_id
        , p_structure_type        => p_structure_type
        , p_structure_version_id  => null
        , p_context               => 'UPDATE_AMG'
        , x_message_name          => l_message_name
        , x_message_type          => l_message_type
        , x_structure_version_id  => l_str_ver_id
        , x_conc_request_id       => l_conc_request_id);


        if l_message_name is not null then

                     PA_UTILS.ADD_MESSAGE(
                     p_app_short_name => 'PA'
                     , p_msg_name       => l_message_name
                     , p_token1         => 'REQUESTID'
                     , p_value1         => l_conc_request_id);

                      RAISE FND_API.G_EXC_ERROR;
        end if;

-- End fix for Bug # 4373055.

         END IF ;

         -- PA L Changes 3010538

          PA_TASK_PUB1.move_task_version(
                    p_calling_module            => p_calling_module
                   ,p_init_msg_list            => l_init_msg_list
                   ,p_structure_version_id      => l_structure_version_id
                   ,p_task_version_id           => l_task_version_id
                   ,p_ref_task_version_id    => l_ref_task_version_id
                   ,p_peer_or_sub          => l_peer_or_sub
                   ,p_record_version_number     => l_record_version_number
                   ,x_return_status             => l_return_status
                   ,x_msg_count                    => l_msg_count
                   ,x_msg_data                     => l_msg_data
                 );

               IF l_return_status <> 'S'
               THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                        ,p_msg_name       => 'PA_PS_TASK_NOT_UPDATED'
                    /* ADDED PROJECT_ID AND TASK_ID TOKENS FOR BUG 4219451 */
                        ,p_token1         => 'PROJECT'
                        ,p_value1         =>  p_project_id
                        ,p_token2          => 'TASK'
                        ,p_value2          => l_task_id);
                  raise api_error;
               END IF;
              END IF; -- Bug 2790275
            END IF;
        END IF;  --< p-calling_module = 'AMG' >>

        -- Bug#Bug#3747312
        -- Commenting the below if statement as cur_pa_proj_elem_vers2
        -- will take care of not calling the WORKPLAN related API
        -- in FINANCIAL alone structure.

        --IF p_structure_type = 'WORKPLAN'
        --THEN
            --get task version id of the task being moved or updated if
            IF l_task_version_id IS NULL
            THEN
               --rtarway, 3666023, replace by l_task_id
               --OPEN cur_pa_task_ver( p_structure_version_id, p_task_id );       --structure version id should be provided for a workplan structure
               OPEN cur_pa_task_ver( p_structure_version_id, l_task_id );
               FETCH cur_pa_task_ver INTO l_task_version_id, l_record_version_number;
               CLOSE cur_pa_task_ver;
            END IF;

         --END IF;   --<< p_structrue_type >


          OPEN cur_pa_proj_elem_vers2(l_task_version_id);
          FETCH cur_pa_proj_elem_vers2 INTO l_dummy_char;
          IF cur_pa_proj_elem_vers2%FOUND
          THEN

            OPEN cur_proj_sch( l_task_version_id );
            FETCH cur_proj_sch INTO l_pev_schedule_id, l_record_version_number;
            CLOSE cur_proj_sch;

            -- xxlu added DFF attributes
            OPEN cur_ver_sch_attr_rec(l_task_version_id);
            FETCH cur_ver_sch_attr_rec INTO l_ver_sch_attr_rec;
            CLOSE cur_ver_sch_attr_rec;

                  --bug  2824612

                  SELECT type_id  INTO l_task_type_id
                    FROM pa_proj_elements
                    --WHERE proj_element_id = p_task_id, rtarway, BUG 3666023, replace by l_task_id
                    WHERE proj_element_id = l_task_id
                    AND project_id = p_project_id;

                  IF ('N' = PA_TASK_TYPE_UTILS.check_tk_type_wq_enabled(l_task_type_id) OR
                      'N' = PA_PROGRESS_UTILS.get_project_wq_flag(p_project_id)) THEN
                      IF (P_PLANNED_WORK_QUANTITY <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND P_PLANNED_WORK_QUANTITY IS NOT NULL) THEN
                          l_wq_planned_quantity := NULL;
                      END IF;
                  ELSE
                     l_wq_planned_quantity := P_PLANNED_WORK_QUANTITY;    --bug 2826992
                  END IF;

                  --bug  2824612

                    --Bug 6153503 start
                  -- rtarway, BUG 3908013
                    if (--p_attribute_category is null or
                        p_attribute_category = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute_category :=  l_ver_sch_attr_rec.attribute_category;
                    else
                          l_attribute_category :=  p_attribute_category;
                    end if;



                    if (--p_attribute1 is null or
                        p_attribute1 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute1  :=  l_ver_sch_attr_rec.attribute1;
                    else
                         l_attribute1  :=  p_attribute1;
                    end if;



                    if (--p_attribute2 is null or
                        p_attribute2 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute2  :=  l_ver_sch_attr_rec.attribute2;
                    else
                         l_attribute2  :=  p_attribute2;
                    end if;


                    if (--p_attribute3 is null or
                        p_attribute3 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute3 :=  l_ver_sch_attr_rec.attribute3;
                    else
                          l_attribute3 :=  p_attribute3;
                    end if;

                    if (--p_attribute4 is null or
                        p_attribute4 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute4 :=  l_ver_sch_attr_rec.attribute4;
                    else
                          l_attribute4 :=  p_attribute4;
                    end if;

                    if (--p_attribute5 is null or
                        p_attribute5 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute5 :=  l_ver_sch_attr_rec.attribute5;
                    else
                          l_attribute5 :=  p_attribute5;
                    end if;

                    if (--p_attribute6 is null or
                        p_attribute6 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute6 :=  l_ver_sch_attr_rec.attribute6;
                    else
                          l_attribute6 :=  p_attribute6;
                    end if;

                    if (--p_attribute7 is null or
                        p_attribute7 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)  -- Changed for Bug #6153681
                    then
                         l_attribute7 :=  l_ver_sch_attr_rec.attribute7;
                    else
                          l_attribute7 :=  p_attribute7;
                    end if;

                    if (--p_attribute8 is null or
                        p_attribute8 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute8 :=  l_ver_sch_attr_rec.attribute8;
                    else
                          l_attribute8  :=  p_attribute8;
                    end if;

                    if (--p_attribute9 is null or
                        p_attribute9 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute9 :=  l_ver_sch_attr_rec.attribute9;
                    else
                         l_attribute9 :=  p_attribute9;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute10 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute10 :=  l_ver_sch_attr_rec.attribute10;
                    else
                          l_attribute10 :=  p_attribute10;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute11 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute11 :=  l_ver_sch_attr_rec.attribute11;
                    else
                          l_attribute11 :=  p_attribute11;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute12 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute12 :=  l_ver_sch_attr_rec.attribute12;
                    else
                          l_attribute12 :=  p_attribute12;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute13 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute13 :=  l_ver_sch_attr_rec.attribute13;
                    else
                          l_attribute13 :=  p_attribute13;
                    end if;

                    if (--p_attribute10 is null or
                        p_attribute14 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute14 :=  l_ver_sch_attr_rec.attribute14;
                    else
                          l_attribute14 :=  p_attribute14;
                    end if;


                    if (--p_attribute10 is null or
                        p_attribute15 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                    then
                         l_attribute15 :=  l_ver_sch_attr_rec.attribute15;
                    else
                          l_attribute15 :=  p_attribute15;
                    end if;


                  --if added while fixing BUG 3919800
                  --Add validation for PA_PROJ_ELEM_VER_SCH_DESC_FLEX
                 -- if l_attribute_category is not null and l_attribute_category <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                 -- then
                       pa_task_utils.validate_flex_fields(
                       p_desc_flex_name        => 'PA_PROJ_ELEM_VER_SCH_DESC_FLEX'
                      ,p_attribute_category    => l_attribute_category
                      ,p_attribute1            => l_attribute1
                      ,p_attribute2            => l_attribute2
                      ,p_attribute3            => l_attribute3
                      ,p_attribute4            => l_attribute4
                      ,p_attribute5            => l_attribute5
                      ,p_attribute6            => l_attribute6
                      ,p_attribute7            => l_attribute7
                      ,p_attribute8            => l_attribute8
                      ,p_attribute9            => l_attribute9
                      ,p_attribute10           => l_attribute10
                      ,p_attribute11           => l_attribute11
                      ,p_attribute12           => l_attribute12
                      ,p_attribute13           => l_attribute13
                      ,p_attribute14           => l_attribute14
                      ,p_attribute15           => l_attribute15
                      ,p_RETURN_msg            => l_return_msg
                      ,p_validate_status       => l_validate_status
                      );
                 --end if;

                  IF l_validate_status = 'N'
                    THEN
                         IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                         THEN
                              pa_interface_utils_pub.map_new_amg_msg
                                        ( p_old_message_code => 'PA_INVALID_FF_VALUES'
                                        ,p_msg_attribute    => 'CHANGE'
                                        ,p_resize_flag      => 'N'
                                        ,p_msg_context      => 'FLEX'
                                        ,p_attribute1       => l_return_msg
                                        ,p_attribute2       => ''
                                        ,p_attribute3       => ''
                                        ,p_attribute4       => ''
                                        ,p_attribute5       => '');
                        END IF;
                    RAISE FND_API.G_EXC_ERROR;
                  END IF;

            --Bug 6153503 end
--End add rtarway, 3908013



            PA_TASK_PUB1.Update_Schedule_Version(
                    p_calling_module          => p_calling_module
                   ,p_init_msg_list            => l_init_msg_list
                   ,p_pev_schedule_id         => l_pev_schedule_id
                   ,p_calendar_id              => p_calendar_id
                   ,p_scheduled_start_date   => p_scheduled_start_date
                   ,p_scheduled_end_date           => p_scheduled_finish_date
                   ,p_obligation_start_date     => p_obligation_start_date
                   ,p_obligation_end_date          => p_obligation_finish_date
                   ,p_actual_start_date       => p_actual_start_date
                   ,p_actual_finish_date           => p_actual_finish_date
                   ,p_estimate_start_date          => p_estimated_start_date
                   ,p_estimate_finish_date   => p_estimated_finish_date
                   ,p_duration                 => p_duration
                   ,p_early_start_date        => p_early_start_date
                   ,p_early_end_date          => p_early_finish_date
                   ,p_late_start_date         => p_late_start_date
                   ,p_late_end_date           => p_late_finish_date
                   ,p_milestone_flag          => p_milestone_flag
                   ,p_critical_flag                 => p_critical_flag
                   ,p_WQ_PLANNED_QUANTITY     => l_wq_planned_quantity   --bug  2824612
                   ,p_PLANNED_EFFORT          => p_planned_effort
                   ,p_record_version_number    => l_record_version_number
                   --Changed the param names to l_....rtarway, BUG 3908013
                   ,p_attribute_category          => l_attribute_category
                   ,p_attribute1                => l_attribute1
                   ,p_attribute2                => l_attribute2
                   ,p_attribute3                => l_attribute3
                   ,p_attribute4                => l_attribute4
                   ,p_attribute5                => l_attribute5
                   ,p_attribute6                => l_attribute6
                   ,p_attribute7                => l_attribute7
                   ,p_attribute8                => l_attribute8
                   ,p_attribute9                => l_attribute9
                   ,p_attribute10             => l_attribute10
                   --end rtarway, BUG 3908013
                   --Bug 6153503
                   ,p_attribute11             => l_attribute11--l_ver_sch_attr_rec.attribute11
                   ,p_attribute12             => l_attribute12--l_ver_sch_attr_rec.attribute12
                   ,p_attribute13             => l_attribute13--l_ver_sch_attr_rec.attribute13
                   ,p_attribute14             => l_attribute14--l_ver_sch_attr_rec.attribute14
                   ,p_attribute15             => l_attribute15--l_ver_sch_attr_rec.attribute15
-- (begin venkat) new params for bug #3450684 ----------------------------------------------
                   ,p_ext_act_duration        => p_ext_act_duration
                   ,p_ext_remain_duration     => p_ext_remain_duration
                   ,p_ext_sch_duration        => p_ext_sch_duration
-- (end venkat) new params for bug #3450684 ------------------------------------------------


-- begin Bug 3654243 -----------------------------------------------------------------------
        ,p_def_sch_tool_tsk_type_code =>   p_sch_tool_tsk_type_code
        ,p_constraint_type_code  =>        p_constraint_type_code
        ,p_constraint_date =>              p_constraint_date
        ,p_free_slack =>                   p_free_slack
        ,p_total_slack =>                  p_total_slack
        ,p_effort_driven_flag =>           p_effort_driven_flag
        ,p_level_assignments_flag =>       p_level_assignments_flag
-- end Bug 3654243 -------------------------------------------------------------------------
                   ,x_return_status                 => l_return_status
                   ,x_msg_count                => l_msg_count
                   ,x_msg_data                 => l_msg_data
               );
               -- end xxlu changes                   ,
            IF l_return_status <> 'S'
            THEN
               PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                    ,p_msg_name       => 'PA_PS_TASK_NOT_UPDATED'
                                /* ADDED PROJECT_ID AND TASK_ID TOKENS FOR BUG 4219451 */
                        ,p_token1         => 'PROJECT'
                    ,p_value1         =>  p_project_id
                    ,p_token2          => 'TASK'
                    ,p_value2          => l_task_id);
               raise api_error;
            END IF;

              --The following API should NOT be called if CREATE_TASK_STRUCTURE is called from AMG.
              --AMG recalculates the weightings once all the tasks are created.
              IF p_calling_module = 'FORMS'
              THEN
/*                      PA_PROJ_TASK_STRUC_PUB.rollup_dates(
                            p_tasks_in             => l_tasks_out            --null if called for one task
                           ,p_task_version_id      => l_task_version_id
                           ,p_structure_version_id => l_structure_version_id
                           ,p_project_id           => p_project_id
                           ,x_msg_count            => l_msg_count
                           ,x_msg_data             => l_msg_data
                           ,x_return_status        => l_return_status
                       );
                      IF l_return_status <> 'S'
                      THEN
                          raise api_error;
                      END IF;
*/
null;
              END IF;
        END IF;  --< cur_pa_proj_elem_vers2 >

/* Bug # 3420093 - Adding Progress Management modifications to update_task flow. */

    -- Bug#3747312
    -- Added PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN = 'N'
    -- as the add_planning_txn/delete_planning_txn should be called in
    -- SHARED case and for SPLIT case if p_structure_type is passed as
    -- WORKPLAN.


/* Commenting for bug 7358214

    if (p_structure_type = 'WORKPLAN' OR nvl(PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( p_project_id ),'N') = 'N')then

            for l_task_cur_rec in l_task_cur(p_project_id, l_structure_version_id)
            loop
                if (PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(l_task_cur_rec.element_version_id) = 'Y') then
                l_add_task_ver_ids.extend(1);
                l_add_planned_effort.extend(1);
                l_add_start_date.extend(1);
                l_add_end_date.extend(1);

                l_add_task_ver_ids(l_add_task_ver_ids.count):= l_task_cur_rec.element_version_id;
                l_add_planned_effort(l_add_planned_effort.count):= l_task_cur_rec.planned_effort;
                l_add_start_date(l_add_start_date.count):= l_task_cur_rec.actual_start_date;
                l_add_end_date(l_add_end_date.count):= l_task_cur_rec.actual_finish_date;
            else
                l_del_task_ver_ids.extend(1);
                l_del_task_ver_ids(l_del_task_ver_ids.count):= l_task_cur_rec.element_version_id;
            end if;
        end loop;
    end if;

    -- Calling pa_task_pub1.call_add_planning_txns for lowest level tasks.
 --Bug 5256359. Introduced the loop to call pa_task_pub1.call_add_planning_txns
--for set of 1000 records.
rec_count:=0;
for i  in 1..l_add_task_ver_ids.count loop

        rec_count := rec_count+1;
 	l_add_task_ver_ids_prm.extend;
 	l_add_planned_effort_prm.extend;
 	l_add_start_date_prm.extend;
 	l_add_end_date_prm.extend;

        l_add_task_ver_ids_prm(rec_count)  :=l_add_task_ver_ids(i);
 	l_add_planned_effort_prm(rec_count):=l_add_planned_effort(i);
 	l_add_start_date_prm(rec_count)    :=l_add_start_date(i);
 	l_add_end_date_prm(rec_count)      :=l_add_end_date(i);

 	if rec_count=1000 OR
 	   i=l_add_task_ver_ids.count then
    begin
            pa_task_pub1.call_add_planning_txns(
            p_tasks_ver_ids                  => l_add_task_ver_ids_prm,
            p_planned_effort                 => l_add_planned_effort_prm,
            p_project_id                     => p_project_id,
            p_structure_version_id           => l_structure_version_id,  --replace p_structure_version_id, bug 3838186
            p_start_date                     => l_add_start_date_prm,
            p_end_date                       => l_add_end_date_prm,
            p_pm_product_code                => p_pm_product_code,   --bug 3811243
            x_return_status                  => l_return_status,
            x_msg_count                      => l_msg_count,
            x_msg_data                       => l_msg_data
            );
    exception
            when others then
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'pa_project_pub',
                                p_procedure_name => 'CREATE_PROJECT',
                                        p_error_text     => substrb('PA_TASK_PUB1.CALL_ADD_PLANNING_TXNS:'||sqlerrm,1,240));
            raise fnd_api.g_exc_error;
        end;

	l_add_task_ver_ids_prm   := PA_NUM_1000_NUM();
 	l_add_planned_effort_prm := PA_NUM_1000_NUM();
 	l_add_start_date_prm     := PA_DATE_1000_DATE();
 	l_add_end_date_prm       := PA_DATE_1000_DATE();

 	rec_count:=0;

	end if;

end loop;
--End of loop for bug 5256359

*/
-- End of commenting for bug 7358214

-- Added for bug 7358214
IF (p_structure_type = 'WORKPLAN' OR
nvl(PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( p_project_id ),'N') = 'N')
THEN
  FOR l_task_cur_rec in l_task_cur(p_project_id, l_structure_version_id) LOOP

    -- Bug 7437034 (Initialize l_hidden_assgn to N for each iteration)
    l_hidden_assgn := 'N';

    OPEN  check_hidden_assgn_exists(l_task_cur_rec.element_version_id);
    FETCH check_hidden_assgn_exists into l_hidden_assgn;
    CLOSE check_hidden_assgn_exists;

    IF PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(l_task_cur_rec.element_version_id)
= 'N' AND l_hidden_assgn = 'Y' THEN
        l_del_task_ver_ids.extend(1);
        l_del_task_ver_ids(l_del_task_ver_ids.count):=
l_task_cur_rec.element_version_id;
    END IF;
  END LOOP;
END IF;
-- End of bug 7358214

    -- Calling pa_fp_planning_transaction_pub.delete_planning_transactions for higher level tasks.

     IF l_del_task_ver_ids.exists(1) THEN -- Bug 7358214
       begin
           pa_fp_planning_transaction_pub.delete_planning_transactions
           (
            p_context                      => 'WORKPLAN'
           ,p_task_or_res                  => 'TASKS'
           ,p_element_version_id_tbl       => l_del_task_ver_ids
           ,x_return_status                => l_return_status
           ,x_msg_count                    => l_msg_count
           ,x_msg_data                     => l_msg_data
          );
       exception
           when others then
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'pa_project_pub',
                                        p_procedure_name => 'CREATE_PROJECT',
                                        p_error_text     => SUBSTRB('PA_FP_PLANNING_TRANSACTION_PUB.DELETE_PLANNING_TRANSACTIONS:'||SQLERRM,1,240));
           raise fnd_api.g_exc_error;
       end;
     END IF ; --bug 7358214
/* Bug # 3420093 - Adding Progress Management modifications to update_task flow. */

-- Progress Management Changes. Bug # 3420093.

/* Commenting out the condition to check if workplan versioning is enabled for the project
   as PA_TASK_PUB1.update_task_det_sch_info() should be called for both versioning enabled
   and versioning disabled projects. */

/* if (PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED(p_project_id) = 'Y') then */

/* Calling  API: pa_task_pub1.update_task_det_sch_info() only if calling module is not 'FORMS'. */

   if p_calling_module <> 'FORMS' then

    pa_task_pub1.update_task_det_sch_info(
    p_calling_module    =>      p_calling_module
    ,p_task_ver_id      =>  l_task_version_id
    ,p_project_id       =>  p_project_id
    ,p_planned_effort   =>      p_planned_effort
    ,p_ETC_effort       =>  p_etc_effort
    ,p_structure_version_id =>  p_structure_version_id
    ,p_percent_complete =>  p_percent_complete
    ,x_return_status    =>  x_return_status
    ,x_msg_count        =>  x_msg_count
    ,x_msg_data     =>  x_msg_data
    );

   end if;

/* end if; */

-- Progress Management Changes. Bug # 3420093.

        x_return_status := FND_API.G_RET_STS_SUCCESS;
EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to update_task_struc;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'update_task_structure',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to update_task_struc;
  raise;
END update_task_structure;

-- API name                      : delete_task_structure
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
--   p_calling_module                   IN VARCHAR2
--  ,p_task_id                          IN NUMBER
--  ,p_record_version_number           IN NUMBER
--  ,x_msg_count                        OUT NUMBER
--  ,x_msg_data                         OUT VARCHAR2
--  ,x_return_status                    OUT VARCHAR2--
--  History
--
--  25-APR-02   MAansari             -Created
--
--  Notes: This api is called from form PAXPREPR.fmb ON-DELETE of tasks block.
--         The call is in PA_PROJECT_STRUCTURES.delete_task_structure API.

PROCEDURE delete_task_structure
(
   p_calling_module                   IN VARCHAR2
  ,p_task_id                          IN NUMBER
  ,p_task_version_id                  IN NUMBER := -9999    --mandatory for workplan task version
  ,p_project_id                  IN NUMBER := -9999      --bug 2765115
  ,p_structure_type              IN VARCHAR2 := 'FINANCIAL'   --bug 3301192
  ,x_msg_count                        OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data                         OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status                    OUT NOCOPY VARCHAR2 ) --File.Sql.39 bug 4440895
IS

  l_return_status       VARCHAR2(1);
  l_msg_count           NUMBER;
  l_msg_data            VARCHAR2(2000);
  l_task_version_id     NUMBER;
  l_record_version_number NUMBER;
  API_ERROR            EXCEPTION;

  CURSOR cur_task_ver_id IS
       SELECT element_version_id, record_version_number
         FROM pa_proj_element_versions ppev
        WHERE proj_element_id = p_task_id
          AND object_type = 'PA_TASKS'
          AND parent_structure_version_id = PA_PROJECT_STRUCTURE_UTILS.GET_LATEST_FIN_STRUC_VER_ID( p_project_id );   -- bug 2765115

  CURSOR cur_task_ver_id2 IS
       SELECT record_version_number
         FROM pa_proj_element_versions ppev
        WHERE element_version_id = p_task_version_id
          AND object_type = 'PA_TASKS';

-- bug 2765115
  CURSOR cur_pa_proj
  IS
    SELECT template_flag from pa_projects_all where project_id = p_project_id;

   l_template_flag   VARCHAR2(1) := 'N';

  CURSOR cur_task_ver_id3 IS
       SELECT element_version_id, record_version_number
         FROM pa_proj_element_versions ppev
        WHERE proj_element_id = p_task_id
          AND object_type = 'PA_TASKS'
          AND project_id = p_project_id;
-- bug 2765115


BEGIN

      --Clear Error Messages.
      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;

      SAVEPOINT delete_task_struc;

      IF p_task_version_id IS NULL OR
         p_task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
         p_task_version_id = -9999
      THEN

-- bug 2765115
          OPEN cur_pa_proj;
          FETCH  cur_pa_proj INTO l_template_flag;
          CLOSE cur_pa_proj;
-- bug 2765115

          IF l_template_flag = 'N'   -- bug 2765115
          THEN
              OPEN cur_task_ver_id;
              FETCH cur_task_ver_id INTO l_task_version_id, l_record_version_number;
              CLOSE cur_task_ver_id;
          END IF;                    -- bug 2765115

-- bug 2765115
          IF l_task_version_id IS NULL
          THEN
              OPEN cur_task_ver_id3;
              FETCH cur_task_ver_id3 INTO l_task_version_id, l_record_version_number;
              CLOSE cur_task_ver_id3;
          END IF;
-- bug 2765115

      ELSE
          OPEN cur_task_ver_id2;
          FETCH cur_task_ver_id2 INTO l_record_version_number;
          CLOSE cur_task_ver_id2;

          l_task_version_id := p_task_version_id;
      END IF;

      IF l_task_version_id > 0
      THEN
          PA_TASK_PUB1.Delete_Task_Version(
               p_calling_module                   => p_calling_module
              ,p_structure_type                   => p_structure_type   --bug 3301192
              ,p_task_version_id                  => l_task_version_id
              ,p_record_version_number           => l_record_version_number
              ,x_return_status                    => l_return_status
              ,x_msg_count                         => l_msg_count
              ,x_msg_data                          => l_msg_data
         );
      END IF;

      IF l_return_status <> 'S'
      THEN
         PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                              ,p_msg_name       => 'PA_PS_TASK_NOT_DELETED');
         raise api_error;
      END IF;
      x_return_status := FND_API.G_RET_STS_SUCCESS;

EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to delete_task_struc;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'delete_task_structure',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to delete_task_struc;
  raise;
END delete_task_structure;

-- API name                      : delete_project_structure
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
--   p_calling_module                   IN VARCHAR2
--  ,p_project_id                       IN NUMBER
--  ,x_msg_count                        OUT NUMBER
--  ,x_msg_data                         OUT VARCHAR2
--  ,x_return_status                    OUT VARCHAR2--
--  History
--
--  26-APR-02   MAansari             -Created
--  01-JUL-2004 Rakesh Raghavan      Modified.
--
--  Notes: This api is called from form PAXPREPR.fmb ON-DELETE of project block.
--         The call is in PA_PROJECT_STRUCTURES.delete_project_structure API.
--         This api deletes all records from structure tables.

PROCEDURE delete_project_structure
(
   p_calling_module                   IN VARCHAR2
  ,p_project_id                          IN NUMBER
  ,x_msg_count                        OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data                         OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status                    OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895

  l_return_status       VARCHAR2(1);
  l_msg_count           NUMBER;
  l_msg_data            VARCHAR2(2000);
  l_error_message_code  VARCHAR2(250);
  l_task_version_id     NUMBER;
  l_record_version_number NUMBER;
  API_ERROR            EXCEPTION;

  CURSOR cur_str_ver
  IS
    SELECT rowid, element_version_id
      FROM pa_proj_element_versions
     WHERE OBJECT_TYPE = 'PA_STRUCTURES'
       AND project_id = p_project_id;

  CURSOR cur_task_ver( c_parent_structure_version_id NUMBER )
  IS
    SELECT rowid, element_version_id
      FROM pa_proj_element_versions
     WHERE OBJECT_TYPE = 'PA_TASKS'
       AND project_id = p_project_id
       AND parent_structure_version_id = c_parent_structure_version_id;

 CURSOR cur_proj_elems
 IS
   SELECT rowid, proj_element_id
     FROM pa_proj_elements
    WHERE project_id = p_project_id;


BEGIN

     --Clear Error Messages.
      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;

     SAVEPOINT delete_project_struc;


     FOR cur_str_ver_rec IN cur_str_ver LOOP
         FOR cur_task_ver_rec IN cur_task_ver( cur_str_ver_rec.element_version_id ) LOOP
             --Check to see if deleting a version is ok
             PA_PROJ_ELEMENTS_UTILS.Check_Delete_task_Ver_Ok(
                       p_project_id                 => p_project_id
                      ,p_task_version_id            => cur_task_ver_rec.element_version_id
                      ,p_parent_structure_ver_id    => cur_str_ver_rec.element_version_id
                      ,x_return_status              => l_return_status
                      ,x_error_message_code         => l_error_message_code
                    );

             IF l_return_status <> 'S'
             THEN
                 PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                      ,p_msg_name       => l_error_message_code);
                 raise api_error;
             END IF;

             DELETE FROM pa_object_relationships
              WHERE relationship_type = 'S' AND
                    (object_id_from1 = cur_task_ver_rec.element_version_id OR
                    object_id_to1   = cur_task_ver_rec.element_version_id);

             PA_PROJ_ELEMENT_VERSIONS_PKG.DELETE_ROW( cur_task_ver_rec.rowid );


         END LOOP;

         PA_PROJECT_STRUCTURE_UTILS.Check_Delete_Structure_Ver_Ok(
             p_project_id                        => p_project_id
            ,p_structure_version_id              => cur_str_ver_rec.element_version_id
            ,x_return_status                     => l_return_status
            ,x_error_message_code                => l_error_message_code
         );

         IF l_return_status <> 'S'
         THEN
             PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                  ,p_msg_name       => l_error_message_code);
             raise api_error;
         END IF;

         DELETE FROM pa_object_relationships
          WHERE relationship_type = 'S' AND
                (object_id_from1 = cur_str_ver_rec.element_version_id OR
                 object_id_to1   = cur_str_ver_rec.element_version_id);

         PA_PROJ_ELEMENT_VERSIONS_PKG.DELETE_ROW( cur_str_ver_rec.rowid );

     END LOOP;

     FOR cur_proj_elems_rec IN cur_proj_elems LOOP
         DELETE FROM pa_proj_structure_types
          WHERE proj_element_id = cur_proj_elems_rec.proj_element_id;

         PA_PROJ_ELEMENTS_PKG.DELETE_ROW( cur_proj_elems_rec.rowid );
     END LOOP;

     DELETE FROM pa_proj_elem_ver_schedule where project_id = p_project_id;
     DELETE FROM pa_proj_elem_ver_structure where project_id = p_project_id;

     /* Code to delete project records from tables: pa_progress_rollup, pa_proj_progress_attr
    and pa_proj_workplan_attr. */

      BEGIN

           PA_PROGRESS_PUB.delete_working_wp_progress (
                     p_project_id               => p_project_id
                    ,p_calling_context          => 'PROJECT_STRUCTURE'
                    ,x_return_status            => x_return_status
                    ,x_msg_count                => x_msg_count
                    ,x_Msg_data                 => x_msg_data
                    );
       EXCEPTION

           WHEN OTHERS THEN

                fnd_msg_pub.add_exc_msg(
                   p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                   p_procedure_name => 'delete_project_structure',
                   p_error_text     => SUBSTR('PA_PROGRESS_PUB.delete_working_wp_progress:'||SQLERRM,1,240));

           RAISE FND_API.G_EXC_ERROR;

       END;


      IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN

         RAISE FND_API.G_EXC_ERROR;

      END IF;

     x_return_status := FND_API.G_RET_STS_SUCCESS;

EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to delete_project_struc;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'delete_project_structure',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to delete_project_struc;
  raise;
END delete_project_structure;

-- API name                      : Published_version_exists
-- Type                          : PL/sql Public Function
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
-- p_project_id                       IN NUMBER
--  History
--
--  29-APR-02   MAansari             -Created
--
--  Notes: This api is called from form PAXPREPR.fmb ON-DELETE of task block.
--         To check if there exists any published ver.
--  bug 3654011: Added conditions to check for shared or workplan only structure

FUNCTION Published_version_exists
(
  p_project_id                       IN NUMBER
 ) RETURN VARCHAR2 IS

    CURSOR cur_pub_versions is
      select 'Y'
        from pa_proj_elem_ver_structure ppevs,
             pa_proj_structure_types ppst,
             pa_structure_types pst
       where ppevs.project_id = p_project_id
         and ppevs.STATUS_CODE = 'STRUCTURE_PUBLISHED'
         and ppevs.proj_element_id = ppst.proj_element_id
         and ppst.structure_type_id = pst.structure_type_id
         and pst.structure_type_class_code = 'WORKPLAN';
   l_dummy_char VARCHAR2(1);
BEGIN
   OPEN cur_pub_versions;
   FETCH cur_pub_versions INTO l_dummy_char;
   IF cur_pub_versions%FOUND
   THEN
      CLOSE cur_pub_versions;
      RETURN 'Y';
   ELSE
      CLOSE cur_pub_versions;
      RETURN 'N';
   END IF;
END Published_version_exists;

-- API name                      : approve_project
-- Type                          : PL/sql Public Function
-- Pre-reqs                      : None
-- Return Value                  : 'Y', 'N'
-- Prameters
-- p_project_id                       IN NUMBER
--  History
--
--  29-APR-02   MAansari             -Created
--
--  Notes: This api is called from Pa_project_stus_utils.Handle_Project_Status_Change api
--         to check the following before changing status to APPROVE.
--         1) The project should contain one structure for Workplan and Costing
--         2) There should be a published version.

FUNCTION approve_project
(
  p_project_id                       IN NUMBER
 ) RETURN VARCHAR2 IS
   CURSOR cur_proj_strs
   IS
     SELECT 'X'
       FROM pa_projects_all
      WHERE project_id = p_project_id
        AND split_cost_from_workplan_flag = 'N';

    CURSOR cur_pub_versions is
      select 'Y'
        from pa_proj_elem_ver_structure
       where project_id = p_project_id
         and STATUS_CODE = 'STRUCTURE_PUBLISHED';

   l_approve  VARCHAR2(1);
   l_dummy_char VARCHAR2(1);
BEGIN
   OPEN cur_proj_strs;
   FETCH cur_proj_strs INTO l_dummy_char;
   IF cur_proj_strs%FOUND
   THEN
      l_approve := 'Y';
      OPEN cur_pub_versions;
      FETCH cur_pub_versions INTO l_dummy_char;
      IF cur_pub_versions%NOTFOUND
      THEN
         l_approve := 'N';
      END IF;
      CLOSE cur_pub_versions;
   ELSE
      CLOSE cur_proj_strs;
      l_approve := 'Y';
   END IF;
   RETURN ( l_approve );
END approve_project;

-- API name                      : Is_PJT_Licensed
-- Type                          : PL/sql Public Function
-- Pre-reqs                      : None
-- Return Value                  : 'Y', 'N'
-- Prameters
--  History
--
--  01-MAY-02   MAansari             -Created
--
--  Notes: This api is called from Projects form and Self Service to display SPLIT_COST_FROM_WORKPLAN_FLAG.

FUNCTION Is_PJT_Licensed RETURN VARCHAR2 IS
BEGIN
    RETURN ( PA_INSTALL.IS_PJT_LICENSED );
END Is_PJT_Licensed;

-- API name                      : Progress_rec_exists
-- Type                          : PL/sql Public Function
-- Pre-reqs                      : None
-- Return Value                  : 'Y', 'N'
-- Prameters
-- p_project_id                  NUMBER
--  History
--
--  01-MAY-02   MAansari             -Created
--
--  Notes: This api is called from Projects form and Self Service to allow users to update
--  SPLIT_COST_FROM_WORKPLAN_FLAG.

FUNCTION Progress_rec_exists( p_project_id NUMBER ) RETURN VARCHAR2 IS
   l_return_value VARCHAR2(1) := 'N';
BEGIN
    --l_return_value := call here api from selva's team.
    RETURN l_return_value;
END Progress_rec_exists;

-- API name                      : create_delete_workplan_struc
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
-- p_project_id                  NUMBER
-- p_calling_module                   IN VARCHAR2
-- p_project_id                       IN NUMBER
-- p_project_number                   IN VARCHAR2 := 'JUNK_CHARS'
-- p_project_name                     IN VARCHAR2 := 'JUNK_CHARS'
-- p_project_description              IN VARCHAR2 := 'JUNK_CHARS'
-- p_split_workplan                   IN VARCHAR2
--  History
--
--  01-MAY-02   MAansari             -Created
--
--  Notes: This api is called from Projects form and Self Service when the SPLIT_COST_FROM_WORKPLAN_FLAG
--         is checked

PROCEDURE create_delete_workplan_struc(
   p_calling_module                   IN VARCHAR2
  ,p_project_id                       IN NUMBER
  ,p_project_number                   IN VARCHAR2
  ,p_project_name                     IN VARCHAR2
  ,p_project_description              IN VARCHAR2
  ,p_split_workplan                   IN VARCHAR2
  ,x_msg_count                        OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data                         OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status                    OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ) IS

  l_return_status       VARCHAR2(1);
  l_msg_count           NUMBER;
  l_msg_data            VARCHAR2(2000);
  l_data               VARCHAR2(2000);
  l_msg_index_out      NUMBER;
  l_error_message_code  VARCHAR2(250);
  API_ERROR            EXCEPTION;

  CURSOR cur_projects
  IS
    SELECT split_cost_from_workplan_flag
      FROM pa_projects_all
     WHERE project_id = p_project_id;

  CURSOR cur_pa_proj_elems
  IS
    SELECT proj_element_id
      FROM pa_proj_elements
     WHERE project_id = p_project_id
       AND object_type = 'PA_STRUCTURES';

  CURSOR cur_pa_proj_elem_vers( c_structure_id NUMBER )
  IS
    SELECT element_version_id, record_version_number
      FROM pa_proj_element_versions
     WHERE project_id = p_project_id
       AND object_type = 'PA_STRUCTURES'
       AND proj_element_id = c_structure_id;

   CURSOR cur_struc_type_id
    IS
    select structure_type_id
      from pa_structure_types
     where structure_type_class_code = 'WORKPLAN';

  CURSOR cur_pa_proj_elem_vers2
  IS
    SELECT element_version_id
      FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
     WHERE c.project_id = p_project_id
       AND a.structure_type_id = b.structure_type_id
       AND b.proj_element_id = c.proj_element_id
       AND a.structure_type = 'WORKPLAN';

  CURSOR cur_pa_proj_elem_vers3( c_parent_struc_ver_id NUMBER )
    IS
    SELECT element_version_id
      FROM pa_proj_element_versions
     WHERE project_id = p_project_id
       AND parent_structure_version_id = c_parent_struc_ver_id
       AND object_type = 'PA_TASKS';


  l_structure_type_id      NUMBER;
  l_proj_structure_type_id NUMBER;
  l_rowid                  VARCHAR2(18);
  l_structure_id           NUMBER;
  l_structure_version_id   NUMBER;
  l_split_flag             VARCHAR2(1);
  x_pev_schedule_id        NUMBER;

  l_append   VARCHAR2(10);
  l_suffix   VARCHAR2(80);
  l_name     VARCHAR2(240);
BEGIN

     --Clear Error Messages.
      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;

     SAVEPOINT create_delete_wp_struc;

     OPEN cur_projects;
     FETCH cur_projects INTO l_split_flag;
     CLOSE cur_projects;

     UPDATE pa_projects_all
        SET split_cost_from_workplan_flag = p_split_workplan
      WHERE project_id = p_project_id;

     IF p_split_workplan = l_split_flag
     THEN
         PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                              ,p_msg_name       => 'PA_PS_WRONG_SPLIT_OPTION');
         raise api_error;
     END IF;

     IF p_project_id IS NULL
     THEN
         PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                              ,p_msg_name       => 'PA_PS_PROJ_ID_NULL');
         raise api_error;
     END IF;

     IF p_split_workplan = 'Y'
     THEN

        IF p_project_number IS NULL OR p_project_number = 'JUNK_CHARS'
        THEN
            PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                 ,p_msg_name       => 'PA_PS_INV_PROJ_NUM');
            raise api_error;
        END IF;

        IF p_project_name IS NULL OR p_project_name = 'JUNK_CHARS'
        THEN
            PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                 ,p_msg_name       => 'PA_PS_INV_PROJ_NAME');
            raise api_error;
        ELSE
           l_name := p_project_name;
        END IF;

        l_append := ': ';

        select meaning
          into l_suffix
          from pa_lookups
         where lookup_type = 'PA_STRUCTURE_TYPE_CLASS'
           and lookup_code = 'WORKPLAN';

        l_name := substr(l_name||l_append||l_suffix, 1, 240);

        PA_PROJECT_STRUCTURE_PVT1.SPLIT_WORKPLAN(
             p_project_id                 => p_project_id
            ,p_structure_name             => l_name
            ,p_structure_number           => p_project_number
            ,p_description                => p_project_description
            ,x_structure_id               => l_structure_id
            ,x_structure_version_id       => l_structure_version_id
            ,x_msg_count                  => l_msg_count
            ,x_msg_data                   => l_msg_data
            ,x_return_status              => l_return_status
          );

       l_msg_count := FND_MSG_PUB.count_msg;
       if l_msg_count > 0 then
          x_msg_count := l_msg_count;
         if x_msg_count = 1 then
            pa_interface_utils_pub.get_messages
             (p_encoded        => FND_API.G_TRUE,
              p_msg_index      => 1,
              p_msg_count      => l_msg_count,
              p_msg_data       => l_msg_data,
              p_data           => l_data,
              p_msg_index_out  => l_msg_index_out);
            x_msg_data := l_data;
         end if;
         raise API_ERROR;
      end if;
     ELSE  --delete the workplan structure including all its structure versions.
         FOR cur_pa_proj_elems_rec IN cur_pa_proj_elems LOOP
             --should obly be WORKPLAN structure
             IF  PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Structure( cur_pa_proj_elems_rec.proj_element_id, 'WORKPLAN' ) = 'Y' AND
                 PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Structure( cur_pa_proj_elems_rec.proj_element_id, 'FINANCIAL' ) = 'N'
             THEN
                FOR cur_pa_proj_elem_vers_rec IN cur_pa_proj_elem_vers( cur_pa_proj_elems_rec.proj_element_id ) LOOP
                    PA_PROJECT_STRUCTURE_PUB1.Delete_Structure_Version(
                               p_structure_version_id              => cur_pa_proj_elem_vers_rec.element_version_id
                              ,p_record_version_number             => cur_pa_proj_elem_vers_rec.record_version_number
                              ,x_return_status                     => l_return_status
                              ,x_msg_count                         => l_msg_count
                              ,x_msg_data                          => l_msg_data
                            );

                     l_msg_count := FND_MSG_PUB.count_msg;
                     if l_msg_count > 0 then
                        x_msg_count := l_msg_count;
                       if x_msg_count = 1 then
                         pa_interface_utils_pub.get_messages
                         (p_encoded        => FND_API.G_TRUE,
                          p_msg_index      => 1,
                          p_msg_count      => l_msg_count,
                          p_msg_data       => l_msg_data,
                          p_data           => l_data,
                          p_msg_index_out  => l_msg_index_out);
                          x_msg_data := l_data;
                        end if;
                        raise API_ERROR;
                     end if;
                END LOOP;
             END IF;

             --Now associate the WORKPLAN structure type with the COSTING structure.
             IF PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Structure( cur_pa_proj_elems_rec.proj_element_id, 'FINANCIAL' ) = 'Y'
             THEN
                 OPEN cur_struc_type_id;
                 FETCH cur_struc_type_id INTO l_structure_type_id;
                 CLOSE cur_struc_type_id;
                 PA_PROJ_STRUCTURE_TYPES_PKG.insert_row(
                            X_ROWID                  => l_rowid
                          , X_PROJ_STRUCTURE_TYPE_ID => l_proj_structure_type_id
                          , X_PROJ_ELEMENT_ID        => cur_pa_proj_elems_rec.proj_element_id
                          , X_STRUCTURE_TYPE_ID      => l_structure_type_id
                          , X_RECORD_VERSION_NUMBER  => 1
                          , X_ATTRIBUTE_CATEGORY     => NULL
                          , X_ATTRIBUTE1             => NULL
                          , X_ATTRIBUTE2             => NULL
                          , X_ATTRIBUTE3             => NULL
                          , X_ATTRIBUTE4             => NULL
                          , X_ATTRIBUTE5             => NULL
                          , X_ATTRIBUTE6             => NULL
                          , X_ATTRIBUTE7             => NULL
                          , X_ATTRIBUTE8             => NULL
                          , X_ATTRIBUTE9             => NULL
                          , X_ATTRIBUTE10            => NULL
                          , X_ATTRIBUTE11            => NULL
                          , X_ATTRIBUTE12            => NULL
                          , X_ATTRIBUTE13            => NULL
                          , X_ATTRIBUTE14            => NULL
                          , X_ATTRIBUTE15            => NULL
                        );
             END IF;
         END LOOP;
         --Now create the schedule versions for the workplan structure version and task versions.
         FOR cur_pa_proj_elem_vers_rec2 IN cur_pa_proj_elem_vers2 LOOP
             x_pev_schedule_id := null;
             PA_TASK_PUB1.Create_Schedule_Version(
                   p_element_version_id        => cur_pa_proj_elem_vers_rec2.element_version_id
                  ,p_scheduled_start_date      => SYSDATE
                  ,p_scheduled_end_date        => SYSDATE
                  ,x_pev_schedule_id           => x_pev_schedule_id
                  ,x_return_status             => l_return_status
                  ,x_msg_count                 => l_msg_count
                  ,x_msg_data                  => l_msg_data
             );

            IF l_return_status <> 'S'
            THEN
               PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                    ,p_msg_name       => 'PA_PS_NO_STRUC_SCH_VER_CREATED');
               raise api_error;
            END IF;
            FOR cur_pa_proj_elem_vers_rec3 IN cur_pa_proj_elem_vers3(cur_pa_proj_elem_vers_rec2.element_version_id) LOOP
               x_pev_schedule_id := null;
               PA_TASK_PUB1.Create_Schedule_Version(
                   p_element_version_id        => cur_pa_proj_elem_vers_rec3.element_version_id
                  ,p_scheduled_start_date      => SYSDATE
                  ,p_scheduled_end_date        => SYSDATE
                  ,x_pev_schedule_id           => x_pev_schedule_id
                  ,x_return_status             => l_return_status
                  ,x_msg_count                 => l_msg_count
                  ,x_msg_data                  => l_msg_data
                );

               IF l_return_status <> 'S'
               THEN
                   PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                        ,p_msg_name       => 'PA_PS_NO_STRUC_SCH_VER_CREATED');
                   raise api_error;
               END IF;
            END LOOP;
         END LOOP;
     END IF;
     x_return_status := FND_API.G_RET_STS_SUCCESS;
EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to create_delete_wp_struc;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'create_delete_workplan_struc',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to create_delete_wp_struc;
  raise;
END create_delete_workplan_struc;


-- API name                      : Copy_Structure
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
-- p_src_project_id                  NUMBER
-- p_dest_project_id                  NUMBER
--  History
--
--  03-MAY-02   MAansari             -Created
--
--  Notes: This api is called from PA_PROJECT_CORE1.COPY_PROJECT

PROCEDURE Copy_Structure(
   p_src_project_id                       IN NUMBER
  ,p_dest_project_id                      IN NUMBER
  ,p_delta                            IN NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_copy_task_flag                   IN VARCHAR2 := 'Y'
  ,p_dest_template_flag            IN VARCHAR2    := 'N'     --bug 2805602
  ,p_src_template_flag            IN VARCHAR2    := 'N'   --bug 2805602
  ,p_dest_project_name             IN VARCHAR2               --bug 2805602
  ,p_target_start_date             IN DATE                --bug 2805602
  ,p_target_finish_date             IN DATE               --bug 2805602
  ,p_calendar_id                   IN NUMBER
  ,x_msg_count                        OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data                         OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status                    OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ) IS

  l_return_status       VARCHAR2(1);
  l_msg_count           NUMBER;
  l_msg_data            VARCHAR2(2000);
  l_data               VARCHAR2(2000);
  l_msg_index_out      NUMBER;
  l_error_message_code  VARCHAR2(250);
  API_ERROR            EXCEPTION;

BEGIN

     --Clear Error Messages.
      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;

     SAVEPOINT cp_struc;
     --bug 2805602

/*     PA_PROJECT_STRUCTURE_PUB1.Copy_Structure
                    (
                  p_src_project_id       => p_src_project_id
                 ,p_dest_project_id      => p_dest_project_id
                 ,p_delta                => p_delta
                 ,p_copy_task_flag       => p_copy_task_flag
                 ,x_return_status        => l_return_status
                 ,x_msg_count            => l_msg_count
                 ,x_msg_data             => l_msg_data
                    );
*/

     IF p_copy_task_flag = 'Y'
     THEN

          --copying structrues and tasks
          PA_PROJ_TASK_STRUC_PUB.copy_structures_tasks_bulk
                    (
                  p_init_msg_list        => FND_API.G_FALSE
                 ,p_src_project_id       => p_src_project_id
                 ,p_dest_project_id      => p_dest_project_id
                 ,p_delta                => p_delta
                 ,p_copy_task_flag       => p_copy_task_flag
                 ,p_dest_template_flag   => p_dest_template_flag
                 ,p_src_template_flag    => p_src_template_flag
                 ,p_dest_project_name    => p_dest_project_name
                 ,p_target_start_date    => p_target_start_date
                 ,p_target_finish_date   => p_target_finish_date
                 ,p_calendar_id          => p_calendar_id
                 ,x_return_status        => l_return_status
                 ,x_msg_count            => l_msg_count
                 ,x_msg_data             => l_msg_data
                    );
     ELSE

      -- Bug 4146369 : Added following condition so that the copy_structures_bulk is not get called
      -- when both structures are disabled in source project.
      IF PA_PROJECT_STRUCTURE_UTILS.check_workplan_enabled( p_src_project_id )= 'Y' OR
         PA_PROJECT_STRUCTURE_UTILS.check_financial_enabled( p_src_project_id )= 'Y' THEN
          --copying only structrues   --This is for AMG
          PA_PROJ_TASK_STRUC_PUB.copy_structures_bulk
                    (
                  p_src_project_id       => p_src_project_id
                 ,p_dest_project_id      => p_dest_project_id
                 ,p_delta                => p_delta
                 ,p_copy_task_flag       => p_copy_task_flag
                 ,p_dest_template_flag   => p_dest_template_flag
                 ,p_src_template_flag    => p_src_template_flag
                 ,p_dest_project_name    => p_dest_project_name
                 ,p_target_start_date    => p_target_start_date
                 ,p_target_finish_date   => p_target_finish_date
                 ,p_calendar_id          => p_calendar_id
                 ,x_return_status        => l_return_status
                 ,x_msg_count            => l_msg_count
                 ,x_msg_data             => l_msg_data
                    );
    END IF;
     END IF;
     --bug 2805602


       l_msg_count := FND_MSG_PUB.count_msg;
       if l_msg_count > 0 then
          x_msg_count := l_msg_count;
         if x_msg_count = 1 then
            pa_interface_utils_pub.get_messages
             (p_encoded        => FND_API.G_TRUE,
              p_msg_index      => 1,
              p_msg_count      => l_msg_count,
              p_msg_data       => l_msg_data,
              p_data           => l_data,
              p_msg_index_out  => l_msg_index_out);
            x_msg_data := l_data;
         end if;
         raise API_ERROR;
      end if;

     x_return_status := FND_API.G_RET_STS_SUCCESS;
EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to cp_struc;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'Copy_Structure',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to cp_struc;
  raise;

END Copy_Structure;

-- API name                      : Clean_unwanted_tasks
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
-- p_project_id                  NUMBER
--  History
--
--  25-MAY-02   MAansari             -Created
--
--  Notes: This api is called from PA_PROJECT_PUB.CREATE_PROJECT to clean up the tasks in pa_proj_elements that were created
--         by calling copy structure api. Copy structure api copies template's tasks to pro_elements though there
--         are no pa_TASKs for the new project. However pa_tasks and pa_proj_elements must be in syn. To d this we need to firts remove
--         tasks from pa_proj_elements as they were erroneously created by COPY_STRUCTURE and then call create_default_structure
--         to syn up pa_pro_elements with pa_tasks.
--

PROCEDURE Clean_unwanted_tasks(
   p_project_id                       IN NUMBER
  ,x_msg_count                        OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data                         OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status                    OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ) IS

  l_return_status       VARCHAR2(1);
  l_msg_count           NUMBER;
  l_msg_data            VARCHAR2(2000);
  l_data               VARCHAR2(2000);
  l_msg_index_out      NUMBER;
  l_error_message_code  VARCHAR2(250);
  API_ERROR            EXCEPTION;

  CURSOR cur_pa_proj_elem_vers
  IS
    SELECT element_version_id
      FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
     WHERE c.project_id = p_project_id
       AND a.structure_type_id = b.structure_type_id
       AND b.proj_element_id = c.proj_element_id
       AND a.structure_type = 'FINANCIAL';

  CURSOR cur_task_vers( c_parent_str_ver_id NUMBER )
  IS
    SELECT element_version_id, proj_element_id
      FROM pa_proj_element_versions
     WHERE project_id = p_project_id
       AND parent_structure_version_id = c_parent_str_ver_id
       AND object_type = 'PA_TASKS';

l_cur_pa_proj_elem_vers_rec  cur_pa_proj_elem_vers%ROWTYPE;
BEGIN

     --Clear Error Messages.
      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;

     SAVEPOINT clean_struc;

     OPEN  cur_pa_proj_elem_vers;
     FETCH cur_pa_proj_elem_vers INTO l_cur_pa_proj_elem_vers_rec;
     IF cur_pa_proj_elem_vers%FOUND
     THEN
         FOR cur_task_vers_rec IN cur_task_vers( l_cur_pa_proj_elem_vers_rec.element_version_id ) LOOP
             DELETE FROM pa_object_relationships WHERE relationship_type = 'S' AND
                                                       (object_id_to1 = cur_task_vers_rec.element_version_id OR
                                                        object_id_from1 = cur_task_vers_rec.element_version_id);

             --it is possible that COSTING and WORKPLAN str are same. so delete from schedule versions as well.
             DELETE FROM pa_proj_elem_ver_schedule WHERE element_version_id = cur_task_vers_rec.element_version_id and project_id = p_project_id;

             DELETE FROM pa_proj_element_versions WHERE element_version_id = cur_task_vers_rec.element_version_id;

             DELETE FROM pa_proj_elements WHERE proj_element_id = cur_task_vers_rec.proj_element_id;

         END LOOP;
     END IF;
     CLOSE cur_pa_proj_elem_vers;
    x_return_status := FND_API.G_RET_STS_SUCCESS;
EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to clean_struc;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'Clean_unwanted_tasks',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to clean_struc;
  raise;

END Clean_unwanted_tasks;

-- API name                      : get_task_above
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters

--  History
--
--  14-AUG-02   MAansari             -Created
--
--  Notes: This api is called from Projects form and Self Service when the SPLIT_COST_FROM_WORKPLAN_FLAG
--         is checked

/*PROCEDURE get_task_above(
   p_task_id                              IN      NUMBER
  ,p_tasks_in                             IN      pa_project_pub.task_in_tbl_type
  ,p_tasks_out                            IN      pa_project_pub.task_out_tbl_type
  ,x_task_id_above                        OUT     NUMBER
  ,x_return_status                    OUT VARCHAR2
 ) IS

  v_task_id_above   NUMBER;
  l_msg_count       NUMBER ;
  l_msg_data        VARCHAR2(2000);
  l_return_status   VARCHAR2(1);
  l_last_index1      Number;
  l_first_index1      Number;
  l_index_number    number;

BEGIN
     x_return_status := 'S';

     l_first_index1 := p_tasks_in.first;
     l_last_index1 := p_tasks_in.last;

     for i in l_first_index1..l_last_index1 loop

         IF p_task_id = p_tasks_out(i).pa_task_id
         THEN
            l_index_number := i;
            exit;
         END IF;
     end loop;

     IF l_index_number > l_first_index1 AND
        p_tasks_in(l_index_number-1).pa_task_id IS NOT NULL AND
        p_tasks_in(l_index_number-1).pa_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        --existing task becomes the ref_task_id
     THEN
        v_task_id_above := p_tasks_in(l_index_number-1).pa_task_id;  --Get the task above.
     ELSIF l_index_number > l_first_index1 AND
        p_tasks_out(l_index_number-1).pa_task_id IS NOT NULL AND
        p_tasks_out(l_index_number-1).pa_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        --new task becomes the ref_task_id
     THEN
        v_task_id_above := p_tasks_out(l_index_number-1).pa_task_id;  --Get the task above created newly
     ELSIF  ( p_tasks_in(l_index_number).pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
              p_tasks_in(l_index_number).pa_task_id IS NULL
            ) AND
         l_index_number = l_first_index1
     THEN
         v_task_id_above := null;  --ref is the structure version. structure version is
                                   --derived in PA_PROJ_TASK_STRUC_PUB.create_task_structure API.
     END IF;
     x_task_id_above := v_task_id_above;

EXCEPTION WHEN OTHERS THEN
          x_return_status := 'E';

END get_task_above;*/

-- API name                      : convert_pm_parent_task_ref
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters

--  History
--
--  14-AUG-02   MAansari             -Created
--
--  Notes: This api is not included in PA_PROJECT_PVT to avoid dependency.

PROCEDURE convert_pm_parent_task_ref(
   p_pm_parent_task_reference             IN      VARCHAR2
  ,p_project_id                           IN      NUMBER
  ,x_parent_task_id                       OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_return_status                        OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ) IS
   CURSOR cur_pa_proj_elems
   IS
     SELECT proj_element_id
       FROM pa_proj_elements
      WHERE PM_SOURCE_REFERENCE = p_pm_parent_task_reference
        AND project_id = p_project_id
        AND OBJECT_TYPE = 'PA_TASKS';
BEGIN
     x_return_status := FND_API.G_RET_STS_SUCCESS;

     OPEN cur_pa_proj_elems;
     FETCH cur_pa_proj_elems INTO x_parent_task_id;
     IF cur_pa_proj_elems%NOTFOUND
     THEN
         x_return_status := FND_API.G_RET_STS_ERROR;
     END IF;

     CLOSE cur_pa_proj_elems;
EXCEPTION WHEN OTHERS THEN
          x_return_status := FND_API.G_RET_STS_ERROR;
END convert_pm_parent_task_ref;

-- API name                      : publish_structure
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters

--  History
--
--  19-AUG-02   MAansari             -Created
--
--  Notes: This api is a wrapper called from AMG

PROCEDURE publish_structure(
    p_api_version                       IN  NUMBER      := 1.0
   ,p_init_msg_list                     IN  VARCHAR2    := FND_API.G_TRUE
   ,p_commit                            IN  VARCHAR2    := FND_API.G_FALSE
   ,p_validate_only                     IN  VARCHAR2    := FND_API.G_TRUE
   ,p_validation_level                  IN  VARCHAR2    := 100
   ,p_calling_module                    IN  VARCHAR2    := 'SELF_SERVICE'
   ,p_debug_mode                        IN  VARCHAR2    := 'N'
   ,p_max_msg_count                     IN  NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
   ,p_responsibility_id                 IN  NUMBER      := 0
   ,p_structure_version_id              IN  NUMBER
   ,p_publish_structure_ver_name        IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,p_structure_ver_desc                IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,p_effective_date                    IN  DATE        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
   ,p_original_baseline_flag            IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,p_current_baseline_flag             IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,x_published_struct_ver_id           OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_return_status                     OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
   ,x_msg_count                         OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_msg_data                          OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS
BEGIN
  x_return_status := 'S';
  PA_PROJECT_STRUCTURE_PUB1.PUBLISH_STRUCTURE(
    p_api_version                       => p_api_version
   ,p_init_msg_list                     => p_init_msg_list
   ,p_commit                            => p_commit
   ,p_validate_only                     => p_validate_only
   ,p_validation_level                  => p_validation_level
   ,p_calling_module                    => p_calling_module
   ,p_debug_mode                        => p_debug_mode
   ,p_max_msg_count                     => p_max_msg_count
   ,p_responsibility_id                 => p_responsibility_id
   ,p_structure_version_id              => p_structure_version_id
   ,p_publish_structure_ver_name        => p_publish_structure_ver_name
   ,p_structure_ver_desc                => p_structure_ver_desc
   ,p_effective_date                    => p_effective_date
   ,p_original_baseline_flag            => p_original_baseline_flag
   ,p_current_baseline_flag             => p_current_baseline_flag
   ,x_published_struct_ver_id           => x_published_struct_ver_id
   ,x_return_status                     => x_return_status
   ,x_msg_count                         => x_msg_count
   ,x_msg_data                          => x_msg_data
  );

END publish_structure;

-- API name                      : delete_structure_version
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters

--  History
--
--  19-AUG-02   MAansari             -Created
--
--  Notes: This api is a wrapper called from AMG

PROCEDURE delete_structure_version(
    p_api_version                       IN  NUMBER      := 1.0
   ,p_init_msg_list                     IN  VARCHAR2    := FND_API.G_TRUE
   ,p_commit                            IN  VARCHAR2    := FND_API.G_FALSE
   ,p_validate_only                     IN  VARCHAR2    := FND_API.G_TRUE
   ,p_validation_level                  IN  VARCHAR2    := 100
   ,p_calling_module                    IN  VARCHAR2    := 'SELF_SERVICE'
   ,p_debug_mode                        IN  VARCHAR2    := 'N'
   ,p_max_msg_count                     IN  NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
   ,p_structure_version_id              IN  NUMBER
   ,p_record_version_number             IN  NUMBER
   ,x_return_status                     OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
   ,x_msg_count                         OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_msg_data                          OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS
BEGIN
  x_return_status := 'S';
  PA_PROJECT_STRUCTURE_PUB1.Delete_Structure_Version(
    p_api_version                       => p_api_version
   ,p_init_msg_list                     => p_init_msg_list
   ,p_commit                            => p_commit
   ,p_validate_only                     => p_validate_only
   ,p_validation_level                  => p_validation_level
   ,p_calling_module                    => p_calling_module
   ,p_debug_mode                        => p_debug_mode
   ,p_max_msg_count                     => p_max_msg_count
   ,p_structure_version_id              => p_structure_version_id
   ,p_record_version_number             => p_record_version_number
   ,x_return_status                     => x_return_status
   ,x_msg_count                         => x_msg_count
   ,x_msg_data                          => x_msg_data
  );

END delete_structure_version;

-- API name                      : create_structure
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters

--  History
--
--  19-AUG-02   HUBERT             -Created
--
--  Notes: This api is a wrapper called from AMG

  --This API will only be called with the structure type = 'WORKPLAN'
procedure create_structure(
    p_project_id             IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
   ,p_structure_type         IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,p_structure_version_name IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,p_description            IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,x_structure_id           OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_structure_version_id   OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_msg_count              OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_msg_data               OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
   ,x_return_status          OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  )
  IS
    l_return_status          VARCHAR2(1);
    l_msg_count              NUMBER;
    l_msg_data               VARCHAR2(2000);
    l_error_message_code     VARCHAR2(30);

    l_project_name           PA_PROJECTS_ALL.name%TYPE;
    l_project_number         PA_PROJECTS_ALL.segment1%TYPE;

    l_suffix                 VARCHAR2(250);
    l_name                   VARCHAR2(240);
    l_number                 VARCHAR2(25);
    l_struc_ver_number       NUMBER;
    l_append                 VARCHAR2(250);
    l_status_code            VARCHAR2(150);
    x_row_id                 VARCHAR2(18);
    x_pev_structure_id       NUMBER;
    x_pev_schedule_id        NUMBER;
    -- added for Bug Fix: 4537865
    l_new_structure_version_id  NUMBER;
    -- added for Bug Fix: 4537865

    CURSOR c1 IS
      select segment1, name from pa_projects_all
       where project_id = p_project_id;

    CURSOR cur_elem_ver_seq IS
      SELECT pa_proj_element_versions_s.nextval
        FROM sys.dual;

    cursor get_working_ver_num(c_project_id NUMBER, c_proj_element_id NUMBER) IS
    select nvl(max(version_number),0)+1
      from pa_proj_elem_ver_structure
     where project_id = c_project_id
       and proj_element_id = c_proj_element_id
       and status_code <> 'STRUCTURE_PUBLISHED';

    l_current_working_ver_flag     VARCHAR2(1);   /* FPM bug 3301192 */
    l_latest_eff_published_flag    VARCHAR2(1);   /* FPM bug 3301192 */ /* this is added to fix the bug. If version enabled the status should be working other wise it should be published. */
  BEGIN

      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;
    --check if the project have any structures
    PA_PROJECT_STRUCTURE_UTILS.Check_Structure_Type_Exists(
                                p_project_id,
                                p_structure_type,
                                l_return_status,
                                l_error_message_code);
    IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
      --PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                           --,p_msg_name => l_error_message_code);
      --raise FND_API.G_EXC_ERROR;

      -- Bug 3075609. When the structure type exists we need to ignore the error.
      -- This check has been used just to return with out doing any further
      -- processing.
      IF l_error_message_code <> 'PA_PS_STRUC_TYPE_EXISTS' THEN
           x_return_status := FND_API.G_RET_STS_ERROR;   -- Bug3044915
           x_msg_data := l_error_message_code ;          -- Bug3044915
           x_msg_count := FND_MSG_PUB.count_msg;         -- Bug3044915
      ELSE
           x_return_status := FND_API.G_RET_STS_SUCCESS;
           x_msg_data := NULL;
           x_msg_count := NULL;
      END IF;
      Return;
    END IF;
    --If no error, create structure
    OPEN c1;
    FETCH c1 into l_number, l_name;
    CLOSE c1;

    select meaning
      into l_suffix
      from pa_lookups
     where lookup_type = 'PA_STRUCTURE_TYPE_CLASS'
       and lookup_code = 'WORKPLAN';

    l_name := substr(l_name||l_append||l_suffix,1,240);
    --Create structure
    PA_PROJECT_STRUCTURE_PVT1.Create_Structure(
                        p_project_id            => p_project_id
                       ,p_structure_number      => l_number
                       ,p_structure_name        => l_name
                       ,p_structure_description => p_description
                       ,p_calling_flag          => p_structure_type
                       ,x_structure_id          => x_structure_id
                       ,x_return_status         => l_return_status
                       ,x_msg_count             => l_msg_count
                       ,x_msg_data              => l_msg_data
                     );
    IF x_structure_id IS NULL OR l_return_status <> 'S' THEN
      PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                           ,p_msg_name       => 'PA_PS_NO_STRUC_CREATED');
      raise FND_API.G_EXC_ERROR;
    END IF;
    --Create structure version
    OPEN cur_elem_ver_seq;
    FETCH cur_elem_ver_seq INTO x_structure_version_id;
    CLOSE cur_elem_ver_seq;

    -- Fix for 4657794 :- This is fix for regression introduced by 4537865
    -- As X_ELEMENT_VERSION_ID is an IN OUT parameter ,we need to initialize, its value l_new_structure_version_id
    -- to  x_structure_version_id

    l_new_structure_version_id := x_structure_version_id ;

    -- End 4657794

    PA_PROJ_ELEMENT_VERSIONS_PKG.Insert_Row(
            X_ROW_ID                     => X_row_id
         --,X_ELEMENT_VERSION_ID         => x_structure_version_id      * commented got Bug Fix: 4537865
           ,X_ELEMENT_VERSION_ID     => l_new_structure_version_id      --added for Bug Fix: 4537865
           ,X_PROJ_ELEMENT_ID            => x_structure_id
           ,X_OBJECT_TYPE                => 'PA_STRUCTURES'
           ,X_PROJECT_ID                 => p_project_id
           ,X_PARENT_STRUCTURE_VERSION_ID=> x_structure_version_id
           ,X_DISPLAY_SEQUENCE           => null
           ,X_WBS_LEVEL                   => null
           ,X_WBS_NUMBER          => '0'
           ,X_ATTRIBUTE_CATEGORY    => null
           ,X_ATTRIBUTE1          => null
           ,X_ATTRIBUTE2          => null
           ,X_ATTRIBUTE3          => null
           ,X_ATTRIBUTE4          => null
           ,X_ATTRIBUTE5          => null
           ,X_ATTRIBUTE6          => null
           ,X_ATTRIBUTE7          => null
           ,X_ATTRIBUTE8          => null
           ,X_ATTRIBUTE9          => null
           ,X_ATTRIBUTE10              => null
           ,X_ATTRIBUTE11              => null
           ,X_ATTRIBUTE12              => null
           ,X_ATTRIBUTE13              => null
           ,X_ATTRIBUTE14              => null
           ,X_ATTRIBUTE15              => null
           ,X_TASK_UNPUB_VER_STATUS_CODE => null
           ,X_SOURCE_OBJECT_ID            => p_project_id
           ,X_SOURCE_OBJECT_TYPE          => 'PA_PROJECTS'
       );
    -- added for Bug Fix: 4537865
        x_structure_version_id := l_new_structure_version_id;
    -- added for Bug Fix: 4537865

    IF x_structure_version_id IS NULL THEN
      PA_UTILS.ADD_MESSAGE(
                         p_app_short_name => 'PA'
                        ,p_msg_name       => 'PA_PS_NO_STRUC_VER_CREATED');
      raise FND_API.G_EXC_ERROR;
    END IF;
    --Get structure version number
    OPEN get_working_ver_num(p_project_id, x_structure_id);
    FETCH get_working_ver_num INTO l_struc_ver_number;
    CLOSE get_working_ver_num;

    --FPM bug 3301192
    IF NVL( PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED(p_project_id), 'N' ) = 'Y'
    THEN
       l_status_code := 'STRUCTURE_WORKING';
       l_current_working_ver_flag := 'Y';
       l_latest_eff_published_flag := 'N';
    ELSE
       l_status_code := 'STRUCTURE_PUBLISHED';
       l_current_working_ver_flag := 'N';
       l_latest_eff_published_flag := 'Y';
    END IF;
    --end FPM bug 3301192

    PA_PROJ_ELEM_VER_STRUCTURE_PKG.insert_row(
     X_ROWID                       => x_row_id
   , X_PEV_STRUCTURE_ID            => x_pev_structure_id
   , X_ELEMENT_VERSION_ID          => x_structure_version_id
   , X_VERSION_NUMBER              => l_struc_ver_number
   , X_NAME                        => l_name
   , X_PROJECT_ID                  => p_project_id
   , X_PROJ_ELEMENT_ID             => x_structure_id
   , X_DESCRIPTION                 => p_description
   , X_EFFECTIVE_DATE              => null
   , X_PUBLISHED_DATE              => null
   , X_PUBLISHED_BY                => null
   , X_CURRENT_BASELINE_DATE       => null
   , X_CURRENT_BASELINE_FLAG       => 'N'
   , X_CURRENT_BASELINE_BY         => null
   , X_ORIGINAL_BASELINE_DATE      => null
   , X_ORIGINAL_BASELINE_FLAG      => 'N'
   , X_ORIGINAL_BASELINE_BY        => null
   , X_LOCK_STATUS_CODE            => NULL
   , X_LOCKED_BY                   => NULL
   , X_LOCKED_DATE                 => NULL
   , X_STATUS_CODE                 => l_status_code
   , X_WF_STATUS_CODE              => NULL
   , X_LATEST_EFF_PUBLISHED_FLAG   => l_latest_eff_published_flag
   , X_RECORD_VERSION_NUMBER       => 1
   , X_CHANGE_REASON_CODE          => NULL
   , X_CURRENT_WORKING_FLAG        => l_current_working_ver_flag      /* bug 3301192 */
   , X_SOURCE_OBJECT_ID            => p_project_id
   , X_SOURCE_OBJECT_TYPE          => 'PA_PROJECTS'
    );

    PA_TASK_PUB1.Create_Schedule_Version(
                   p_element_version_id        => x_structure_version_id
                  ,p_scheduled_start_date      => SYSDATE
                  ,p_scheduled_end_date        => SYSDATE
                  ,x_pev_schedule_id           => x_pev_schedule_id
                  ,x_return_status             => l_return_status
                  ,x_msg_count                 => l_msg_count
                  ,x_msg_data                  => l_msg_data
    );

    IF l_return_status <> 'S' THEN
      PA_UTILS.ADD_MESSAGE(
                       p_app_short_name => 'PA'
                      ,p_msg_name       => 'PA_PS_NO_STRUC_SCH_VER_CREATED');
      raise FND_API.G_EXC_ERROR;
    END IF;
    x_return_status := FND_API.G_RET_STS_SUCCESS;
  EXCEPTION
    WHEN FND_API.G_EXC_ERROR THEN
      x_msg_count := FND_MSG_PUB.count_msg;
      x_return_status := FND_API.G_RET_STS_ERROR;
    WHEN OTHERS THEN
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'CREATE_STRUCTURE',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
      raise;
END create_structure;

-- API name                      : create_structure
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters

--  History
--
--  19-AUG-02   HUBERT             -Created
--
--  Notes: This api is a wrapper called from AMG

procedure create_update_struct_ver(
    p_project_id             IN  NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
   ,p_structure_type         IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,p_structure_version_name IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,p_structure_version_id   IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
   ,p_description            IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   ,x_structure_version_id   OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_msg_count              OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_msg_data               OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
   ,x_return_status          OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  )
  IS
    cursor c1 is
      select pev_structure_id, name, record_version_number
        from pa_proj_elem_ver_structure
       where project_id = p_project_id
         and element_version_id = p_structure_version_id;

    l_name             VARCHAR2(240);
    l_pev_structure_id NUMBER;
    l_record_version_number NUMBER;
    l_proj_element_id NUMBER;
    l_enable_wp_version_flag varchar2(1);
    l_dummy varchar2(1);
    l_struc_ver_number       NUMBER;
    l_return_status          VARCHAR2(1);
    l_msg_count              NUMBER;
    l_msg_data               VARCHAR2(2000);
    -- added for Bug Fix: 4537865
    l_new_structure_version_id  NUMBER;
    -- added for Bug Fix: 4537865
    x_row_id                 VARCHAR2(18);
    x_pev_structure_id       NUMBER;
    x_pev_schedule_id        NUMBER;

    cursor c2 is
      select b.proj_element_id
        from pa_proj_elements a, pa_proj_structure_types b,
             pa_structure_types c
       where a.project_id = p_project_id
         and a.object_type = 'PA_STRUCTURES'
         and a.proj_element_id = b.proj_element_id
         and b.structure_type_id = c.structure_type_id
         and c.structure_type = p_structure_type;

    cursor c3 is
      select wp_enable_version_flag
        from pa_proj_workplan_attr
       where project_id = p_project_id;

    cursor c4(c_proj_elem_id NUMBER) is
      select '1' from pa_proj_elem_ver_structure
       where project_id = p_project_id
         and proj_element_id = c_proj_elem_id
         and status_code <> 'STRUCTURE_PUBLISHED';

    CURSOR cur_elem_ver_seq IS
      SELECT pa_proj_element_versions_s.nextval
        FROM sys.dual;

    cursor get_working_ver_num(c_project_id NUMBER, c_proj_element_id NUMBER) IS
    select nvl(max(version_number),0)+1
      from pa_proj_elem_ver_structure
     where project_id = c_project_id
       and proj_element_id = c_proj_element_id
       and status_code <> 'STRUCTURE_PUBLISHED';

    l_current_working_ver_flag    VARCHAR2(1);   /* FPM bug 3301192 */
  BEGIN

      IF FND_MSG_PUB.count_msg = 0
      THEN
          FND_MSG_PUB.initialize;
      END IF;

    IF (p_structure_version_name IS NOT NULL) AND
       (p_structure_version_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
       ((p_structure_version_id IS NULL) OR (p_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) THEN
      --get structure for input type
      OPEN c2;
      FETCH c2 into l_proj_element_id;
      IF c2%NOTFOUND THEN
        PA_UTILS.ADD_MESSAGE(
                         p_app_short_name => 'PA'
                        ,p_msg_name       => 'PA_PS_NO_STRUC_VER_CREATED');
        CLOSE c2;
        RAISE FND_API.G_EXC_ERROR;
      END IF;
      CLOSE c2;

      IF l_proj_element_id IS NOT NULL
      THEN
          IF PA_PROJECT_STRUCTURE_UTILS.Check_Struc_Ver_Name_Unique(
                   p_structure_version_name       => p_structure_version_name
                  ,p_pev_structure_id             => null
                  ,p_project_id                   => p_project_id
                  ,p_structure_id                 => l_proj_element_id
               ) = 'N'
          THEN
              PA_UTILS.ADD_MESSAGE(
                         p_app_short_name => 'PA'
                        ,p_msg_name       => 'PA_PS_STRUC_VER_NAM_UNIQUE');
              RAISE FND_API.G_EXC_ERROR;
          END IF;
      END IF;

      IF (p_structure_type = 'FINANCIAL') THEN
        --If this is financial, check if there is working version
        OPEN c3;
        FETCH c3 into l_enable_wp_version_flag;
        CLOSE c3;
        IF (l_enable_wp_version_flag = 'Y') THEN
          --if enable wp version flag is 'Y', and if a working (unpublished)
          --version exist.
          OPEN c4 (l_proj_element_id);
          FETCH c4 into l_dummy;
          IF (c4%FOUND) THEN
            --there is a working version; cannot create another one.
            CLOSE c4;
            PA_UTILS.ADD_MESSAGE(
                         p_app_short_name => 'PA'
                        --,p_msg_name       => 'PA_PS_NO_STRUC_VER_CREATED');
            ,p_msg_name       => 'PA_PS_WORKING_STRUC_VER_EXIST'); --bug # 3713107
            RAISE FND_API.G_EXC_ERROR;
          END IF;
          CLOSE c4;
          --create a new financial structure version

          --Create structure version
          OPEN cur_elem_ver_seq;
          FETCH cur_elem_ver_seq INTO x_structure_version_id;
          CLOSE cur_elem_ver_seq;

    -- Fix for 4657794 :- This is fix for regression introduced by 4537865
    -- As X_ELEMENT_VERSION_ID is an IN OUT parameter ,we need to initialize, its value l_new_structure_version_id
    -- to  x_structure_version_id

    l_new_structure_version_id := x_structure_version_id ;

    -- End 4657794

          PA_PROJ_ELEMENT_VERSIONS_PKG.Insert_Row(
            X_ROW_ID                     => X_row_id
         --,X_ELEMENT_VERSION_ID         => x_structure_version_id       * Commented for Bug Fix: 4537865
           ,X_ELEMENT_VERSION_ID     => l_new_structure_version_id       -- added for Bug fix: 4537865
           ,X_PROJ_ELEMENT_ID            => l_proj_element_id
           ,X_OBJECT_TYPE                => 'PA_STRUCTURES'
           ,X_PROJECT_ID                 => p_project_id
           ,X_PARENT_STRUCTURE_VERSION_ID=> x_structure_version_id
           ,X_DISPLAY_SEQUENCE           => null
           ,X_WBS_LEVEL                   => null
           ,X_WBS_NUMBER          => '0'
           ,X_ATTRIBUTE_CATEGORY    => null
           ,X_ATTRIBUTE1          => null
           ,X_ATTRIBUTE2          => null
           ,X_ATTRIBUTE3          => null
           ,X_ATTRIBUTE4          => null
           ,X_ATTRIBUTE5          => null
           ,X_ATTRIBUTE6          => null
           ,X_ATTRIBUTE7          => null
           ,X_ATTRIBUTE8          => null
           ,X_ATTRIBUTE9          => null
           ,X_ATTRIBUTE10              => null
           ,X_ATTRIBUTE11              => null
           ,X_ATTRIBUTE12              => null
           ,X_ATTRIBUTE13              => null
           ,X_ATTRIBUTE14              => null
           ,X_ATTRIBUTE15              => null
           ,X_TASK_UNPUB_VER_STATUS_CODE => null
           ,X_SOURCE_OBJECT_ID           => p_project_id
           ,X_SOURCE_OBJECT_TYPE         => 'PA_PROJECTS'
          );
          -- added for Bug fix: 4537865
            x_structure_version_id := l_new_structure_version_id;
          -- added for Bug fix: 4537865

          IF x_structure_version_id IS NULL THEN
            PA_UTILS.ADD_MESSAGE(
                         p_app_short_name => 'PA'
                        ,p_msg_name       => 'PA_PS_NO_STRUC_VER_CREATED');
            raise FND_API.G_EXC_ERROR;
          END IF;

          --Get structure version number
          OPEN get_working_ver_num(p_project_id, l_proj_element_id);
          FETCH get_working_ver_num INTO l_struc_ver_number;
          CLOSE get_working_ver_num;

          PA_PROJ_ELEM_VER_STRUCTURE_PKG.insert_row(
            X_ROWID                       => x_row_id
          , X_PEV_STRUCTURE_ID            => x_pev_structure_id
          , X_ELEMENT_VERSION_ID          => x_structure_version_id
          , X_VERSION_NUMBER              => l_struc_ver_number
          , X_NAME                        => p_structure_version_name
          , X_PROJECT_ID                  => p_project_id
          , X_PROJ_ELEMENT_ID             => l_proj_element_id
          , X_DESCRIPTION                 => p_description
          , X_EFFECTIVE_DATE              => null
          , X_PUBLISHED_DATE              => null
          , X_PUBLISHED_BY                => null
          , X_CURRENT_BASELINE_DATE       => null
          , X_CURRENT_BASELINE_FLAG       => 'N'
          , X_CURRENT_BASELINE_BY         => null
          , X_ORIGINAL_BASELINE_DATE      => null
          , X_ORIGINAL_BASELINE_FLAG      => 'N'
          , X_ORIGINAL_BASELINE_BY        => null
          , X_LOCK_STATUS_CODE            => NULL
          , X_LOCKED_BY                   => NULL
          , X_LOCKED_DATE                 => NULL
          , X_STATUS_CODE                 => 'STRUCTURE_WORKING'
          , X_WF_STATUS_CODE              => NULL
          , X_LATEST_EFF_PUBLISHED_FLAG   => 'N'
          , X_RECORD_VERSION_NUMBER       => 1
          , X_CHANGE_REASON_CODE          => NULL
          , X_CURRENT_WORKING_FLAG        => 'Y'            /* Since this is a shared + versioned senario and only one struc version then it should be CWV. bug 3301192 */
          , X_SOURCE_OBJECT_ID            => p_project_id
          , X_SOURCE_OBJECT_TYPE          => 'PA_PROJECTS'
          );

            PA_TASK_PUB1.Create_Schedule_Version(
                   p_element_version_id        => x_structure_version_id
                  ,p_scheduled_start_date      => SYSDATE
                  ,p_scheduled_end_date        => SYSDATE
                  ,x_pev_schedule_id           => x_pev_schedule_id
                  ,x_return_status             => l_return_status
                  ,x_msg_count                 => l_msg_count
                  ,x_msg_data                  => l_msg_data
             );

            IF l_return_status <> 'S' THEN
                PA_UTILS.ADD_MESSAGE(
                       p_app_short_name => 'PA'
                      ,p_msg_name       => 'PA_PS_NO_STRUC_SCH_VER_CREATED');
                raise FND_API.G_EXC_ERROR;
            END IF;

        ELSE
          --a version exists. Cannot create.
          PA_UTILS.ADD_MESSAGE(
                         p_app_short_name => 'PA'
                        ,p_msg_name       => 'PA_PS_NO_STRUC_VER_CREATED');
          RAISE FND_API.G_EXC_ERROR;
        END IF;
      ELSE
/*
        --check if this is workplan type structure only
        IF (PA_PROJECT_STRUCTURE_UTILS.Get_struc_Type_for_Structure(
                                       l_proj_element_id, 'FINANCIAL') = 'Y') THEN
          --cannot create because this structure contains financial information also
          PA_UTILS.ADD_MESSAGE(
                         p_app_short_name => 'PA'
                        ,p_msg_name       => 'PA_PS_NO_STRUC_VER_CREATED');
          RAISE FND_API.G_EXC_ERROR;
        END IF;
*/
        IF NVL( IS_WP_VERSIONING_ENABLED( p_project_id ), 'N' ) = 'N'
        THEN
          --cannot create because versioning is not enabled.
          PA_UTILS.ADD_MESSAGE(
                         p_app_short_name => 'PA'
                        ,p_msg_name       => 'PA_PS_NO_STRUC_VER_CREATED');
          RAISE FND_API.G_EXC_ERROR;
        END IF;
        --create a new workplan structure version
        OPEN cur_elem_ver_seq;
        FETCH cur_elem_ver_seq INTO x_structure_version_id;
        CLOSE cur_elem_ver_seq;

    -- Fix for 4657794 :- This is fix for regression introduced by 4537865
    -- As X_ELEMENT_VERSION_ID is an IN OUT parameter ,we need to initialize, its value l_new_structure_version_id
    -- to  x_structure_version_id

    l_new_structure_version_id := x_structure_version_id ;

    -- End 4657794

        PA_PROJ_ELEMENT_VERSIONS_PKG.Insert_Row(
            X_ROW_ID                     => X_row_id
         --,X_ELEMENT_VERSION_ID         => x_structure_version_id      * commented for Bug fix: 4537865
           , X_ELEMENT_VERSION_ID    => l_new_structure_version_id       -- added for Bug fix: 4537865
           ,X_PROJ_ELEMENT_ID            => l_proj_element_id
           ,X_OBJECT_TYPE                => 'PA_STRUCTURES'
           ,X_PROJECT_ID                 => p_project_id
           ,X_PARENT_STRUCTURE_VERSION_ID=> x_structure_version_id
           ,X_DISPLAY_SEQUENCE           => null
           ,X_WBS_LEVEL                   => null
           ,X_WBS_NUMBER          => '0'
           ,X_ATTRIBUTE_CATEGORY    => null
           ,X_ATTRIBUTE1          => null
           ,X_ATTRIBUTE2          => null
           ,X_ATTRIBUTE3          => null
           ,X_ATTRIBUTE4          => null
           ,X_ATTRIBUTE5          => null
           ,X_ATTRIBUTE6          => null
           ,X_ATTRIBUTE7          => null
           ,X_ATTRIBUTE8          => null
           ,X_ATTRIBUTE9          => null
           ,X_ATTRIBUTE10              => null
           ,X_ATTRIBUTE11              => null
           ,X_ATTRIBUTE12              => null
           ,X_ATTRIBUTE13              => null
           ,X_ATTRIBUTE14              => null
           ,X_ATTRIBUTE15              => null
           ,X_TASK_UNPUB_VER_STATUS_CODE => null
           ,X_SOURCE_OBJECT_ID           => p_project_id
           ,X_SOURCE_OBJECT_TYPE         => 'PA_PROJECTS'
        );
         -- added for Bug fix: 4537865
         x_structure_version_id := l_new_structure_version_id;
          -- added for Bug fix: 4537865

        IF x_structure_version_id IS NULL THEN
          PA_UTILS.ADD_MESSAGE(
                         p_app_short_name => 'PA'
                        ,p_msg_name       => 'PA_PS_NO_STRUC_VER_CREATED');
          raise FND_API.G_EXC_ERROR;
        END IF;

        --Get structure version number
        OPEN get_working_ver_num(p_project_id, l_proj_element_id);
        FETCH get_working_ver_num INTO l_struc_ver_number;
        --FPM bug 3301192
        --if there is no working version( un-publihsed) then this is the CWV
        IF get_working_ver_num%NOTFOUND
        THEN
           l_current_working_ver_flag := 'Y';
        ELSE
           l_current_working_ver_flag := 'N';
        END IF;
        --end FPM bug 3301192
        CLOSE get_working_ver_num;

        PA_PROJ_ELEM_VER_STRUCTURE_PKG.insert_row(
            X_ROWID                       => x_row_id
          , X_PEV_STRUCTURE_ID            => x_pev_structure_id
          , X_ELEMENT_VERSION_ID          => x_structure_version_id
          , X_VERSION_NUMBER              => l_struc_ver_number
          , X_NAME                        => p_structure_version_name
          , X_PROJECT_ID                  => p_project_id
          , X_PROJ_ELEMENT_ID             => l_proj_element_id
          , X_DESCRIPTION                 => p_description
          , X_EFFECTIVE_DATE              => null
          , X_PUBLISHED_DATE              => null
          , X_PUBLISHED_BY                => null
          , X_CURRENT_BASELINE_DATE       => null
          , X_CURRENT_BASELINE_FLAG       => 'N'
          , X_CURRENT_BASELINE_BY         => null
          , X_ORIGINAL_BASELINE_DATE      => null
          , X_ORIGINAL_BASELINE_FLAG      => 'N'
          , X_ORIGINAL_BASELINE_BY        => null
          , X_LOCK_STATUS_CODE            => NULL
          , X_LOCKED_BY                   => NULL
          , X_LOCKED_DATE                 => NULL
          , X_STATUS_CODE                 => 'STRUCTURE_WORKING'
          , X_WF_STATUS_CODE              => NULL
          , X_LATEST_EFF_PUBLISHED_FLAG   => 'N'
          , X_RECORD_VERSION_NUMBER       => 1
          , X_CHANGE_REASON_CODE          => NULL
          , X_CURRENT_WORKING_FLAG        => l_current_working_ver_flag      /* bug 3301192 */
          , X_SOURCE_OBJECT_ID            => p_project_id
          , X_SOURCE_OBJECT_TYPE          => 'PA_PROJECTS'
        );

        PA_TASK_PUB1.Create_Schedule_Version(
                   p_element_version_id        => x_structure_version_id
                  ,p_scheduled_start_date      => SYSDATE
                  ,p_scheduled_end_date        => SYSDATE
                  ,x_pev_schedule_id           => x_pev_schedule_id
                  ,x_return_status             => l_return_status
                  ,x_msg_count                 => l_msg_count
                  ,x_msg_data                  => l_msg_data
        );

        IF l_return_status <> 'S' THEN
          PA_UTILS.ADD_MESSAGE(
                       p_app_short_name => 'PA'
                      ,p_msg_name       => 'PA_PS_NO_STRUC_SCH_VER_CREATED');
          raise FND_API.G_EXC_ERROR;
        END IF;
    -- Bug 4574032 Begin
    BEGIN
    PA_FP_PLANNING_TRANSACTION_PUB.add_planning_transactions
              (
                p_context                => 'WORKPLAN'
               ,p_project_id             => p_project_id
               ,p_struct_elem_version_id => x_structure_version_id
               ,x_return_status          => l_return_status
               ,x_msg_count              => l_msg_count
               ,x_Msg_data               => l_msg_data
              );
    EXCEPTION
        WHEN OTHERS THEN
            fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                p_procedure_name => 'CREATE_UPDATE_STRUCT_VER',
                p_error_text => SUBSTRB('call of pa_fp_planning_transaction_pub.add_planning_transactions failed. sqlerrm= :'||SQLERRM,1,240));
                        raise  fnd_api.g_exc_error;
    END;
        IF l_return_status <> 'S' THEN
          raise FND_API.G_EXC_ERROR;
        END IF;
    -- Bug 4574032 End
      END IF;
    ELSE
      --update existing structure
      IF (p_structure_version_id IS NOT NULL) AND (p_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN

        --check if name is passed in
        open c1;
        fetch c1 into l_pev_structure_id, l_name, l_record_version_number;
        close c1;
        If (p_structure_version_name IS NOT NULL) AND
           (p_structure_version_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
          l_name := p_structure_version_name;
        END IF;

        --call update_structure_version_attr API
        PA_PROJECT_STRUCTURE_PVT1.update_structure_version_attr(
          p_pev_structure_id => l_pev_structure_id
         ,p_structure_version_name => l_name
         ,p_structure_version_desc => p_description
         ,p_record_version_number => l_record_version_number
         ,x_return_status => x_return_status
         ,x_msg_count => x_msg_count
         ,x_msg_data => x_msg_data
        );
      END IF;
    END IF;
  EXCEPTION
    WHEN FND_API.G_EXC_ERROR THEN
      x_msg_count := FND_MSG_PUB.count_msg;
      x_return_status := FND_API.G_RET_STS_ERROR;
    WHEN OTHERS THEN
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'CREATE_UPDATE_STRUCT_VER',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
END create_update_struct_ver;

-- API name                      : IS_WP_SEPARATE_FROM_FN
-- Type                          : PL/sql Public Function
-- Pre-reqs                      : None
-- Return Value                  : 'Y', 'N'
-- Prameters
-- p_project_id                       IN NUMBER
--  History
--
--  21-AUG-02   MAansari             -Created
--
--  Notes: This api is returns 'TRUE' if WORKPLAN is separate from
--         FINANCIAL structure

FUNCTION IS_WP_SEPARATE_FROM_FN
(
  p_project_id                       IN NUMBER
 ) RETURN VARCHAR2 IS
   l_return_value  VARCHAR2(1) := 'N';

BEGIN
    --Call Huberts API to check whether a workplan structure is separate from financial
    IF PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED( p_project_id ) = 'N'
    THEN
        l_return_value := 'Y';
    END IF;
    RETURN ( NVL( l_return_value, 'N' ) );
END IS_WP_SEPARATE_FROM_FN;

-- API name                      : IS_WP_VERSIONING_ENABLED
-- Type                          : PL/sql Public Function
-- Pre-reqs                      : None
-- Return Value                  : 'Y', 'N'
-- Prameters
-- p_project_id                       IN NUMBER
--  History
--
--  22-AUG-02   MAansari             -Created
--
--  Notes: This api is returns 'Y' if WORKPLAN is separate from
--         FINANCIAL structure

FUNCTION IS_WP_VERSIONING_ENABLED
(
  p_project_id                       IN NUMBER
 ) RETURN VARCHAR2 IS
   l_return_value  VARCHAR2(1) := 'Y';

BEGIN
    --Call Andrews API to check whether a workplan versioning is enabled or not.
    l_return_value := PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED( p_project_id );
    RETURN ( NVL( l_return_value, 'N' ) );

END IS_WP_VERSIONING_ENABLED;

-- API name                      : get_proj_dates_delta
-- Type                          : PL/sql Public Function
-- Pre-reqs                      : None
-- Return Value                  : NUMBER
-- Prameters
-- p_project_id                       IN NUMBER
--  History
--
--  22-AUG-02   MAansari             -Created
--
--  Notes:

     -- get original project start and completion dates
     -- determine the shift days (delta).
     -- delta = new project start date - nvl(old project start date,
     --             earlist task start date)

   --        old project   new project
   --  case  start date    start date    new start date     new end date
   --  ----   -----------   -----------  -----------------  -----------------
   --   A     not null      not null     old start date     old end date
   --                          + delta      + delta
   --   B-1   null      not null     old start date     old end date
   --         (old task has start date)    + delta         + delta
   --   B-2   null      not null     new proj start     new proj completion
   --         (old task has no start date) date            date
   --   C     not null       null   old start date         old end date
   --   D     null      null   old start date         old end date

FUNCTION get_proj_dates_delta(
   x_orig_project_id  IN NUMBER
  ,x_start_date       IN DATE )
RETURN NUMBER IS

        cursor c1 is
          select start_date
          from pa_projects
          where project_id = x_orig_project_id;

            -- use min(start_date) as pseudo original project start
         cursor c2 is
               select min(start_date) min_start
                 from pa_tasks
                where project_id = x_orig_project_id;

         c2_rec  c2%rowtype;
         x_delta       NUMBER;
         x_orig_start_date DATE;
begin

          open c1;
          fetch c1 into x_orig_start_date;
          close c1;

          if (x_start_date is null) then
               -- case C or D
               x_delta := 0;
          elsif (x_orig_start_date is not null) then
               -- case A
               x_delta := x_start_date - x_orig_start_date;
          else
               -- case B
                        open c2;
                        fetch c2 into c2_rec;
                        if c2%found then
                  -- case B-1:  x_delta is difference between
                  --            new project start date and the
                  --            start date of the earlist task
                  --            of old project
                  -- case B-2:  x_delta is NULL
                           x_delta := x_start_date - c2_rec.min_start;
                        end if;
                        close c2;

          end if;
            RETURN x_delta;
end get_proj_dates_delta;

-- API name                      : create_task_structure2
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
-- p_project_id            IN NUMBER
--  ,p_task_id              IN NUMBER
--  ,p_parent_task_id       IN NUMBER
--  ,p_task_number          IN VARCHAR2
--  ,p_task_name            IN VARCHAR2
--  ,p_task_description     IN VARCHAR2
--  ,p_carrying_out_organization_id NUMBER
-- x_msg_count             OUT NUMBER
-- x_msg_data              OUT VARCHAR2
-- x_return_status         OUT VARCHAR2
--
--  History
--
--  22-AUG-01   MAansari             -Created
--
--  Notes : THis is API is created to avoid the Implementation level error that is thrown
--          in the forms if any parameter with default containg a remote package variable is referenced.

PROCEDURE create_task_structure2(
   p_calling_module         IN VARCHAR2 := 'FORMS'
  ,p_project_id           IN NUMBER
  ,p_task_id              IN NUMBER
  ,p_parent_task_id       IN NUMBER
  ,p_ref_task_id          IN NUMBER   := -9999
  ,p_task_number          IN VARCHAR2
  ,p_task_name            IN VARCHAR2
  ,p_task_description     IN VARCHAR2
  ,p_carrying_out_organization_id IN NUMBER
  ,p_structure_type       IN VARCHAR2 := 'FINANCIAL'
  ,P_PM_SOURCE_reference                IN VARCHAR2
  ,P_PM_SOURCE_code                     IN VARCHAR2
  ,p_task_manager_id                  IN NUMBER
  ,p_location_id                      IN NUMBER
  ,p_financial_task_flag              IN VARCHAR2 := 'Y'   --bug 3301192
  ,x_task_version_id                    OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_task_id                            OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_count            OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data             OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status        OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895
BEGIN
    create_task_structure(
       p_calling_module                => p_calling_module
      ,p_project_id                    => p_project_id
      ,p_task_id                       => p_task_id
      ,p_parent_task_id                => p_parent_task_id
      ,p_ref_task_id                   => p_ref_task_id
      ,p_task_number                   => p_task_number
      ,p_task_name                     => p_task_name
      ,p_task_description              => p_task_description
      ,p_carrying_out_organization_id  => p_carrying_out_organization_id
      ,p_manager_person_id             => p_task_manager_id
      ,p_location_id                   => p_location_id
      ,p_structure_type                => p_structure_type
      ,p_financial_task_flag           => p_financial_task_flag  --bug 3301192
      ,x_task_version_id               => x_task_version_id
      ,x_task_id                       => x_task_id
      ,x_msg_count                     => x_msg_count
      ,x_msg_data                      => x_msg_data
      ,x_return_status                 => x_return_status
    );
END create_task_structure2;

-- API name                      : update_task_structure2
-- Type                          : PL/sql Public procedure
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
--   p_calling_module                   IN VARCHAR2
--  ,p_task_id                          IN NUMBER
--  ,p_task_number                      IN VARCHAR2
--  ,p_task_name                        IN VARCHAR2
--  ,p_task_description                 IN VARCHAR2
--  ,p_carrying_out_organization_id     IN NUMBER
--  ,p_task_manager_id                  IN NUMBER
--  ,p_pm_product_code                  IN VARCHAR2
--  ,p_pm_task_reference                IN VARCHAR2
--  ,p_record_version_number           IN NUMBER
--  ,x_msg_count                        OUT NUMBER
--  ,x_msg_data                         OUT VARCHAR2
--  ,x_return_status                    OUT VARCHAR2--
--  History
--
--  22-AUG-02   MAansari             -Created
--
--  Notes : THis is API is created to avoid the Implementation level error that is thrown
--          in the forms if any parameter with default containg a remote package variable is referenced.

PROCEDURE update_task_structure2
(
   p_calling_module                   IN VARCHAR2 := 'FORMS'
  ,p_ref_task_id                      IN NUMBER
  ,p_project_id                       IN NUMBER
  ,p_task_id                          IN NUMBER
  ,p_task_number                      IN VARCHAR2
  ,p_task_name                        IN VARCHAR2
  ,p_task_description                 IN VARCHAR2
  ,p_carrying_out_organization_id     IN NUMBER
  ,p_structure_type                   IN VARCHAR2 := 'FINANCIAL'
  ,p_task_manager_id                  IN NUMBER
  ,p_pm_product_code                  IN VARCHAR2
  ,p_pm_task_reference                IN VARCHAR2
  ,p_location_id                      IN NUMBER
  ,x_msg_count                        OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data                         OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status                    OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895
BEGIN

    update_task_structure(
       p_calling_module                => p_calling_module
      ,p_ref_task_id                   => p_ref_task_id
      ,p_project_id                    => p_project_id
      ,p_task_id                       => p_task_id
      ,p_task_number                   => p_task_number
      ,p_task_name                     => p_task_name
      ,p_task_description              => p_task_description
      ,p_carrying_out_organization_id  => p_carrying_out_organization_id
      ,p_structure_type                => p_structure_type
      ,p_task_manager_id               => p_task_manager_id
      ,p_pm_product_code               => p_pm_product_code
      ,p_pm_task_reference             => p_pm_task_reference
      ,p_location_id                   => p_location_id
      ,x_msg_count                     => x_msg_count
      ,x_msg_data                      => x_msg_data
      ,x_return_status                 => x_return_status
    );

END update_task_structure2;

-- API name                      : get_struc_task_ver_ids
-- Type                          : PL/sql Public Function
-- Pre-reqs                      : None
-- Return Value                  : N/A
-- Prameters
-- p_project_id                       IN NUMBER
--  History
--
--  21-AUG-02   MAansari             -Created
--
--  Notes: This api returns task_version_id and parent_structure_version_id for the tasks
--         displayed in Forms.

PROCEDURE get_struc_task_ver_ids
  (
    p_project_id                       IN NUMBER
    ,p_task_id                          IN NUMBER
    ,x_task_version_id                  OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
    ,x_parent_struc_version_id          OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
   ) IS

     CURSOR cur_proj_elems( c_parent_struc_ver_id NUMBER )
     IS
       SELECT element_version_id, parent_structure_version_id
         FROM pa_proj_element_versions
        WHERE project_id = p_project_id
          AND proj_element_id = p_task_id
          AND parent_structure_version_id = c_parent_struc_ver_id
          AND object_type = 'PA_TASKS';

      CURSOR cur_pa_work_ver
      IS
         SELECT element_version_id
           FROM pa_proj_elem_ver_structure
          WHERE project_id = p_project_id
            AND status_code = 'STRUCTURE_WORKING';

      l_structure_version_id NUMBER;
  BEGIN
      l_structure_version_id := PA_PROJ_ELEMENTS_UTILS.latest_published_ver_id( p_project_id,'FINANCIAL' );

      IF l_structure_version_id IS NULL OR l_structure_version_id = -1
      THEN
          OPEN cur_pa_work_ver;
          FETCH cur_pa_work_ver INTO l_structure_version_id;
          CLOSE cur_pa_work_ver;
      END IF;

      IF p_task_id IS NOT NULL
      THEN
       OPEN cur_proj_elems( l_structure_version_id );
       FETCH cur_proj_elems INTO x_task_version_id, x_parent_struc_version_id;
       CLOSE cur_proj_elems;
      ELSE
         IF l_structure_version_id <> -1 THEN
            x_parent_struc_version_id := l_structure_version_id;
         END IF;
      END IF;
  END get_struc_task_ver_ids;

-- API name                      : WP_STR_EXISTS
-- Type                          : PL/sql Public Function
-- Pre-reqs                      : None
-- Return Value                  : 'Y', 'N'
-- Prameters
-- p_project_id                       IN NUMBER
--  History
--
--  21-AUG-02   MAansari             -Created
--
--  Notes: This api is returns 'TRUE' if WORKPLAN str exists

FUNCTION WP_STR_EXISTS
(
  p_project_id                       IN NUMBER
 ) RETURN VARCHAR2 IS
   l_return_value  VARCHAR2(1) := 'N';
   l_dummy_char  VARCHAR2(1) := 'N';

  CURSOR cur_pa_proj
  IS
/*    SELECT proj_element_id
      FROM pa_proj_elements
     WHERE project_id = p_project_id
       AND object_type = 'PA_STRUCTURES';
*/
    SELECT 'x'
      FROM pa_proj_elements ppe, pa_proj_structure_types ppst
     WHERE ppe.project_id = p_project_id
       AND ppe.object_type = 'PA_STRUCTURES'
       AND ppe.proj_element_id = ppst.proj_element_id
       AND ppst.structure_type_id = 1;  --'WORKPLAN'


BEGIN
    --Call Huberts API to check whether a workplan structure is separate from financial

 /*   FOR cur_pa_proj_rec in cur_pa_proj LOOP
        l_return_value := PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Structure(
                          cur_pa_proj_rec.proj_element_id, 'WORKPLAN' );
        IF NVL( l_return_value, 'N' ) = 'Y'
        THEN
            Exit;
        END IF;
    END LOOP;
*/
    open cur_pa_proj;
    fetch cur_pa_proj INTO l_dummy_char;
    IF cur_pa_proj%FOUND
    THEN
        l_return_value  := 'Y';
    ELSE
        l_return_value  := 'N';
    END IF;
    CLOSE cur_pa_proj;

    RETURN ( NVL( l_return_value, 'N' ) );

END WP_STR_EXISTS;

FUNCTION DATE_SYNC_UP_METHOD
(
  p_project_id                       IN NUMBER
 ) RETURN VARCHAR2 IS
  CURSOR cur_pa_proj_elems
  IS
    SELECT ppe.proj_element_id
      FROM pa_proj_elements ppe, pa_proj_structure_types ppst
     WHERE ppe.project_id = p_project_id
       AND ppe.object_type = 'PA_STRUCTURES'
       AND ppe.proj_element_id = ppst.proj_element_id
       AND ppst.structure_type_id = 1;  --'WORKPLAN'

    l_proj_element_id  NUMBER;
  l_return_value   VARCHAR2(1);

BEGIN

    OPEN cur_pa_proj_elems;
    FETCH cur_pa_proj_elems INTO l_proj_element_id;
    CLOSE cur_pa_proj_elems;

    l_return_value := PA_WORKPLAN_ATTR_UTILS.CHECK_AUTO_DATE_SYNC_ENABLED( l_proj_element_id );
    RETURN l_return_value;
END DATE_SYNC_UP_METHOD;

PROCEDURE update_trans_dates(
   p_project_id                       IN  NUMBER
  ,x_msg_count                        OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data                         OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status                    OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895
BEGIN

    x_return_status := 'S';
    PA_PROJECT_DATES_PUB.COPY_PROJECT_DATES
  (
     p_project_id                    => p_project_id
    ,x_return_status                 => x_return_status
    ,x_msg_count                     => x_msg_count
    ,x_msg_data                      => x_msg_data
  );

END update_trans_dates;


PROCEDURE update_wp_calendar(
    p_project_id                      IN  NUMBER
   ,p_calendar_id                     IN  NUMBER
   ,x_return_status                   OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
   ,x_msg_count                       OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_msg_data                        OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  )
IS
BEGIN
  PA_PROJECT_STRUCTURE_PVT1.update_wp_calendar(
            p_project_id => p_project_id
           ,p_calendar_id => p_calendar_id
           ,x_return_status => x_return_status
           ,x_msg_count => x_msg_count
           ,x_msg_data => x_msg_data
          );
END update_wp_calendar;

PROCEDURE create_tasks_versions_only(
   p_calling_module       IN VARCHAR2 := 'FORMS'
  ,p_structure_type       IN VARCHAR2 := 'FINANCIAL'
  ,p_project_id           IN NUMBER
  ,p_structure_version_id IN NUMBER
  ,p_pm_product_code      IN VARCHAR2 := 'JUNK_CHARS'
  ,p_tasks_in              IN pa_project_pub.task_in_tbl_type
  ,x_msg_count            OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data             OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status        OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895


  v_first_index                NUMBER;
  i                            NUMBER;
  v_parent_task_id             NUMBER;
  l_return_status          VARCHAR2(1);
  l_msg_count              NUMBER;
  l_msg_data               VARCHAR2(2000);
  v_ref_task_id            NUMBER;
  l_task_version_id        NUMBER;
  l_task_id                NUMBER;
  --Added by rtarway for BUG 3990873
  l_pa_task_id             NUMBER;
 --Added by rbruno bug 9544348
  l_actual_start_date      DATE;
  l_actual_finish_date     DATE;

  CURSOR cur_get_existing_task_id (c_project_id pa_projects_all.project_id%TYPE,
                            c_pm_source_reference pa_proj_elements.pm_source_reference%TYPE) IS
    SELECT proj_element_id
    FROM   pa_proj_elements pelem
    WHERE  project_id  = c_project_id
    AND    pm_source_reference = c_pm_source_reference
    AND    exists(select 1
                     from pa_proj_structure_types pstype, pa_structure_types types
                     where pstype.proj_element_id = pelem.parent_structure_id
                     and pstype.structure_type_id = types.structure_type_id
                     and types.structure_type = p_structure_type);
  --End Added by rtarway for BUG 3990873
BEGIN

i := p_tasks_in.first;
v_first_index := i;

IF p_tasks_in.exists(i)
THEN
     WHILE i IS NOT NULL LOOP
        --Added by rtarway for BUG 4320731
    l_pa_task_id := NULL;
        --Commented by rtarway , chnaged If condition, BUG 3990873
        /*IF p_tasks_in(i).pa_task_id IS NOT NULL AND
           p_tasks_in(i).pa_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN*/

          --Begin add by rtarway, for BUG 3990873
          if ( p_tasks_in(i).pa_task_id is null or p_tasks_in(i).pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          then
               if (p_tasks_in(i).pm_task_reference is not null and p_tasks_in(i).pm_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
               then
                    --Cursor is deliberately used here, because we dont want to populate message in global error stack, in case new tasks
                    --are being added. At many places in update_task flow, error is raised based on fnd_msg_pub.count > 0
                    --If NO_DATA_FOUND occurs for this cursor, it will pass without error.
                    OPEN  cur_get_existing_task_id(p_project_id,p_tasks_in(i).pm_task_reference);
                    FETCH cur_get_existing_task_id into l_pa_task_id;
            --Added by rtarway for BUG 4320731
            IF ( cur_get_existing_task_id%NOTFOUND ) THEN
               l_pa_task_id := NULL;
            END IF;
                    CLOSE cur_get_existing_task_id;
               end if;
          else
               l_pa_task_id := p_tasks_in(i).pa_task_id;
          end if;
           IF l_pa_task_id IS NOT NULL
           then
          --end add by rtarway, for BUG 3990873
            IF (p_tasks_in(i).pa_parent_task_id IS NOT NULL
                AND p_tasks_in(i).pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
            THEN
                v_parent_task_id := p_tasks_in(i).pa_parent_task_id;
            ELSIF (p_tasks_in(i).pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                AND p_tasks_in(i).pm_parent_task_reference IS NOT NULL)
            THEN
                --convert pm_parent_task_reference to parent_task_id.
                --All the parent tasks are created first then child tasks are created. See TRM for AMG load_task api.

-- Bug 3601700 changed function call from  PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref
-- to PA_PROJECT_PVT.Convert_pm_taskref_to_id_all to retrieve task id for task reference
-- because PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref may return financial task id
-- in case of SHARED structure
-- new api call takes structure type as parameter, so it will return task id for the passed structure type only */
              /*   PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref(
                    p_pm_parent_task_reference      =>  p_tasks_in(i).pm_parent_task_reference
                   ,p_project_id                    =>  p_project_id
                   ,x_parent_task_id                =>  v_parent_task_id
                   ,x_return_status                 =>  l_return_status
                 ); */

           PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                    p_pa_project_id      => p_project_id
                  , p_structure_type    => 'WORKPLAN'
                  , p_pm_task_reference  => p_tasks_in(i).pm_parent_task_reference
                  , p_out_task_id        => v_parent_task_id
                  , p_return_status      => l_return_status );

        /*IF l_return_status <> FND_API.G_RET_STS_SUCCESS
                THEN
                   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                   THEN
                       pa_interface_utils_pub.map_new_amg_msg
                          ( p_old_message_code => 'PA_PARENT_TASK_MISSING'
                           ,p_msg_attribute    => 'CHANGE'
                           ,p_resize_flag      => 'N'
                           ,p_msg_context      => 'TASK'
                           ,p_attribute1       => l_amg_segment1
                           ,p_attribute2       => l_amg_task_number
                           ,p_attribute3       => ''
                           ,p_attribute4       => ''
                           ,p_attribute5       => '');
                    END IF;
                    RAISE  FND_API.G_EXC_ERROR;
                END IF;
                */
            ELSE
                v_parent_task_id := null;
            END IF;

           --get the previous task
           IF i = v_first_index
           THEN
               v_ref_task_id := null;
           ELSE
               --v_ref_task_id := p_tasks_in(i-1).pa_task_id;
               --Added by rtarway for BUG 3990873
               if ( p_tasks_in(i-1).pa_task_id is not null
                    and p_tasks_in(i-1).pa_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
               then
                    v_ref_task_id := p_tasks_in(i-1).pa_task_id;
               else
                     if ( p_tasks_in(i-1).pm_task_reference is not null
                          and p_tasks_in(i-1).pm_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
                     then
                         --get the task id from reference
                         --Cursor is deliberately used here, because we dont want to populate message in global error stack, in case new tasks
                         --are being added. At many places in update_task flow, error is raised based on fnd_msg_pub.count > 0
                         --If NO_DATA_FOUND occurs for this cursor, it will pass without error.
                          OPEN  cur_get_existing_task_id(p_project_id,p_tasks_in(i-1).pm_task_reference);
                          FETCH cur_get_existing_task_id into v_ref_task_id;
                          CLOSE cur_get_existing_task_id;
                     end if;
               end if;
           END IF;


      ---Added by rbruno bug 9544348 begin
       l_actual_start_date := null;
       l_actual_finish_date := null;


       IF p_tasks_in(i).actual_start_date IS NULL OR
          p_tasks_in(i).actual_start_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_actual_start_date := NULL;
       ELSE
          l_actual_start_date := p_tasks_in(i).actual_start_date;
       END IF;

       IF p_tasks_in(i).actual_finish_date IS NULL OR
          p_tasks_in(i).actual_finish_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_actual_finish_date := NULL;
       ELSE
          l_actual_finish_date := p_tasks_in(i).actual_finish_date;
       END IF;

     ---Added by rbruno bug 9544348 end

            PA_PROJ_TASK_STRUC_PUB.CREATE_TASK_STRUCTURE(
                         p_project_id                   => p_project_id
--                        ,p_task_id                      => p_tasks_in(i).pa_task_id, rtarway, BUG 3990873
                        ,p_task_id                      => l_pa_task_id
                        ,p_parent_task_id               => v_parent_task_id
                        ,p_ref_task_id                  => v_ref_task_id
                        ,p_task_number                  => p_tasks_in(i).pa_task_number
                        ,p_task_name                    => p_tasks_in(i).task_name
                        ,p_task_description             => p_tasks_in(i).task_description
                        ,p_carrying_out_organization_id => p_tasks_in(i).carrying_out_organization_id
                        ,p_calling_module               => 'AMG'
                        ,p_structure_type               => p_structure_type
                        ,p_OBLIGATION_START_DATE        => p_tasks_in(i).OBLIGATION_START_DATE
                        ,p_OBLIGATION_FINISH_DATE       => p_tasks_in(i).OBLIGATION_FINISH_DATE
                        ,p_ESTIMATED_START_DATE         => p_tasks_in(i).ESTIMATED_START_DATE
                        ,p_ESTIMATED_FINISH_DATE        => p_tasks_in(i).ESTIMATED_FINISH_DATE
                        ,p_BASELINE_START_DATE          => p_tasks_in(i).BASELINE_START_DATE
                        ,p_BASELINE_FINISH_DATE         => p_tasks_in(i).BASELINE_FINISH_DATE
                        ,p_CLOSED_DATE                  => p_tasks_in(i).CLOSED_DATE
                        ,p_WQ_UOM_CODE                  => p_tasks_in(i).WQ_UOM_CODE
                        ,p_WQ_ITEM_CODE                 => p_tasks_in(i).WQ_ITEM_CODE
                        ,p_STATUS_CODE                  => p_tasks_in(i).STATUS_CODE
                        ,p_WF_STATUS_CODE               => p_tasks_in(i).WF_STATUS_CODE
                        ,p_PM_SOURCE_CODE               => p_pm_product_code        --bug 2665656
                        ,p_PRIORITY_CODE                => p_tasks_in(i).PRIORITY_CODE
                        ,p_MILESTONE_FLAG               => p_tasks_in(i).MILESTONE_FLAG
                        ,p_CRITICAL_FLAG                => p_tasks_in(i).CRITICAL_FLAG
                        ,p_INC_PROJ_PROGRESS_FLAG       => p_tasks_in(i).INC_PROJ_PROGRESS_FLAG
                        ,p_LINK_TASK_FLAG               => p_tasks_in(i).LINK_TASK_FLAG
                        ,p_CALENDAR_ID                  => p_tasks_in(i).CALENDAR_ID
                        ,p_PLANNED_EFFORT               => p_tasks_in(i).PLANNED_EFFORT
                        ,p_DURATION                     => p_tasks_in(i).DURATION
                        ,p_PLANNED_WORK_QUANTITY        => p_tasks_in(i).PLANNED_WORK_QUANTITY
                        ,p_TASK_TYPE                    => p_tasks_in(i).TASK_TYPE
                        ,p_actual_start_date            => l_actual_start_date --bug 9544348
                        ,p_actual_finish_date           => l_actual_finish_date --bug 9544348
                        ,p_early_start_date                   => p_tasks_in(i).early_start_date
                        ,p_early_finish_date                  => p_tasks_in(i).early_finish_date
                        ,p_late_start_date                    => p_tasks_in(i).late_start_date
                        ,p_late_finish_date                   => p_tasks_in(i).late_finish_date
                        ,p_scheduled_start_date               => p_tasks_in(i).scheduled_start_date
                        ,p_scheduled_finish_date              => p_tasks_in(i).scheduled_finish_date
                        ,P_PM_SOURCE_reference                => p_tasks_in(i).pm_task_reference
                        ,p_location_id                        => p_tasks_in(i).address_id
                        ,p_manager_person_id                  => p_tasks_in(i).task_manager_person_id
                        ,p_structure_version_id               => p_structure_version_id
                        ,p_create_task_version_only           => 'Y'    --we dont need to create tasks in pa_tasks or pa_proj_elements for the existing tasks.
                                                                        --All we need is just to create task versions under the new structure version.
                        ,x_task_version_id                    => l_task_version_id
                        ,x_task_id                            => l_task_id
                        ,x_msg_count                    => x_msg_count
                        ,x_msg_data                     => x_msg_data
                        ,x_return_status                => x_return_status
                     );
        END IF;
        i := p_tasks_in.next(i);
     END LOOP;
END IF;

END create_tasks_versions_only;


--The following API is added to re-calculate task weights to call PA_TASK_PUB1.CALC_TASK_WEIGHTS
--The API is called from PA_PROJECT_PUB.create_project and PA_PROJECT_PUB.update_project

PROCEDURE recalc_task_weightings(
   p_tasks_in             IN pa_project_pub.task_out_tbl_type
  ,p_task_version_id      IN NUMBER
  ,x_msg_count            OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data             OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status        OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895

  CURSOR cur_pa_proj_elem_ver( c_task_ver_id  NUMBER )
  IS
    SELECT wbs_level
      FROM pa_proj_element_versions
    WHERE element_version_id = c_task_ver_id;

  i                    NUMBER;
  j                    NUMBER := 1;

  l_tasks_ver_ids      PA_NUM_1000_NUM := PA_NUM_1000_NUM();
  l_outline_level      PA_NUM_1000_NUM := PA_NUM_1000_NUM();
  l_total_top_tasks    NUMBER := 0;
  l_wbs_level          NUMBER;

  l_msg_count          NUMBER;
  l_return_status      VARCHAR2(1);
  l_msg_data           VARCHAR2(2000);
  l_data               VARCHAR2(2000);
  l_msg_index_out      NUMBER;
  API_ERROR            EXCEPTION;
  l_recalculate_flag   VARCHAR2(1);

BEGIN

IF p_task_version_id IS NULL
THEN

  i := p_tasks_in.first;

  IF p_tasks_in.exists(i)
  THEN
     WHILE i IS NOT NULL LOOP
        IF p_tasks_in(i).task_version_id IS NOT NULL AND
           p_tasks_in(i).task_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
            l_tasks_ver_ids.extend;
            l_tasks_ver_ids(l_tasks_ver_ids.count) := p_tasks_in(i).task_version_id;

            OPEN cur_pa_proj_elem_ver( p_tasks_in(i).task_version_id );
            FETCH cur_pa_proj_elem_ver INTO l_wbs_level;
            CLOSE cur_pa_proj_elem_ver;

            IF l_wbs_level = 1
            THEN
                l_total_top_tasks := l_total_top_tasks + 1;
            END IF;

            l_outline_level.extend;
            l_outline_level(l_outline_level.count) := l_wbs_level;
            l_recalculate_flag := 'Y';
        END IF;
        j := j + 1;
        IF NVL( l_recalculate_flag, 'N' ) = 'Y' AND j >= 1000
        THEN
            --To avoid no_data_found when this array is read in PA_TASK_PUB1.Cal_Task_weights
            l_outline_level.extend;
            l_outline_level(l_outline_level.count) := null;

/*--bug 2856033
    PA_STRUCT_TASK_ROLLUP_PUB.Tasks_Rollup(
                       p_commit => FND_API.G_FALSE,
                       p_element_versions => l_tasks_ver_ids,
                       x_return_status => l_return_status,
                       x_msg_count => l_msg_count,
                       x_msg_data => l_msg_data);

     if l_return_status <> FND_API.G_RET_STS_SUCCESS then
       x_msg_count := FND_MSG_PUB.count_msg;
       if x_msg_count = 1 then
         pa_interface_utils_pub.get_messages
         (p_encoded        => FND_API.G_TRUE,
          p_msg_index      => 1,
          p_msg_count      => l_msg_count,
          p_msg_data       => l_msg_data,
          p_data           => l_data,
          p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
       end if;
       raise API_ERROR;
     end if;
--bug 2856033
*/

            PA_TASK_PUB1.Calc_Task_Weights(
            p_element_versions => l_tasks_ver_ids
           ,p_outline_level    => l_outline_level
           ,p_top_sub_count    => l_total_top_tasks
           ,x_return_status    => l_return_status
           ,x_msg_count        => l_msg_count
           ,x_msg_data         => l_msg_data );

          if l_return_status <> FND_API.G_RET_STS_SUCCESS then
             x_msg_count := FND_MSG_PUB.count_msg;
             x_return_status := l_return_status ;     --bug 3044915
            if x_msg_count = 1 then
               pa_interface_utils_pub.get_messages
               (p_encoded        => FND_API.G_TRUE,
                p_msg_index      => 1,
                p_msg_count      => l_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);
                x_msg_data := l_data;
            end if;
            raise API_ERROR;
         end if;
         l_tasks_ver_ids.DELETE;
         l_outline_level.DELETE;
         l_recalculate_flag := 'N';
         j := 1;
        END IF;
        i := p_tasks_in.next(i);
     END LOOP;
  END IF;

ELSIF p_task_version_id IS NOT NULL
THEN
    l_tasks_ver_ids.extend;
    l_tasks_ver_ids(l_tasks_ver_ids.count) := p_task_version_id;

    OPEN cur_pa_proj_elem_ver( p_task_version_id );
    FETCH cur_pa_proj_elem_ver INTO l_wbs_level;
    CLOSE cur_pa_proj_elem_ver;

    IF l_wbs_level = 1
    THEN
       l_total_top_tasks := l_total_top_tasks + 1;
    END IF;

    l_outline_level.extend;
    l_outline_level(l_outline_level.count) := l_wbs_level;
    l_recalculate_flag := 'Y';

END IF;

IF NVL( l_recalculate_flag, 'N' ) = 'Y'
THEN

    --To avoid no_data_found when this array is read in PA_TASK_PUB1.Cal_Task_weights
    l_outline_level.extend;
    l_outline_level(l_outline_level.count) := null;

/*--bug 2856033
    PA_STRUCT_TASK_ROLLUP_PUB.Tasks_Rollup(
                       p_commit => FND_API.G_FALSE,
                       p_element_versions => l_tasks_ver_ids,
                       x_return_status => l_return_status,
                       x_msg_count => l_msg_count,
                       x_msg_data => l_msg_data);

     if l_return_status <> FND_API.G_RET_STS_SUCCESS then
       x_msg_count := FND_MSG_PUB.count_msg;
       if x_msg_count = 1 then
         pa_interface_utils_pub.get_messages
         (p_encoded        => FND_API.G_TRUE,
          p_msg_index      => 1,
          p_msg_count      => l_msg_count,
          p_msg_data       => l_msg_data,
          p_data           => l_data,
          p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
       end if;
       raise API_ERROR;
     end if;
--bug 2856033
*/


  PA_TASK_PUB1.Calc_Task_Weights(
     p_element_versions => l_tasks_ver_ids
    ,p_outline_level    => l_outline_level
    ,p_top_sub_count    => l_total_top_tasks
    ,x_return_status    => l_return_status
    ,x_msg_count        => l_msg_count
    ,x_msg_data         => l_msg_data );

    if l_return_status <> FND_API.G_RET_STS_SUCCESS then
      x_msg_count := FND_MSG_PUB.count_msg;
      x_return_status := l_return_status ;     --bug 3044915
      if x_msg_count = 1 then
        pa_interface_utils_pub.get_messages
        (p_encoded        => FND_API.G_TRUE,
         p_msg_index      => 1,
         p_msg_count      => l_msg_count,
         p_msg_data       => l_msg_data,
         p_data           => l_data,
         p_msg_index_out  => l_msg_index_out);
         x_msg_data := l_data;
      end if;
      raise API_ERROR;
    end if;
END IF;
x_return_status := FND_API.G_RET_STS_SUCCESS;        -- Bug 3044915
END recalc_task_weightings;

  FUNCTION GET_MAX_LAST_UPD_DT_WRKNG_VER
  (  p_structure_version_id IN NUMBER
  ) return DATE
  IS
    --bug 3074706
    CURSOR c2 IS
      select project_id
        from pa_proj_element_versions
       where element_version_id = p_structure_version_id;
    l_project_id NUMBER;

    CURSOR c1 IS
       select MAX(a.last_update_date)
         from pa_proj_element_versions b,
              pa_proj_elem_ver_schedule a,
              pa_proj_elem_ver_structure c
        where p_structure_version_id = c.element_version_id
          and l_project_id  = c.project_id
          and c.status_code <> 'STRUCTURE_PUBLISHED'
          and b.parent_structure_version_id = c.element_version_id
          and b.project_id = c.project_id
          and a.element_version_id (+)= b.element_version_id
          and a.project_id (+) = b.project_id
          and a.proj_element_id (+) = b.proj_element_id;
/*
    CURSOR c1 IS
      SELECT MAX(a.last_update_date)
        FROM pa_proj_element_versions b,
             pa_proj_elem_ver_schedule a,
             pa_proj_elem_ver_structure c
       WHERE a.element_version_id (+)= b.element_version_id
         AND a.project_id (+) = b.project_id
         AND a.proj_element_id (+) = b.proj_element_id
         AND b.parent_structure_version_id = c.element_version_id
         AND b.project_id = c.project_id
         AND c.status_code <> 'STRUCTURE_PUBLISHED'
         AND b.parent_structure_version_id = p_structure_version_id
    ;
*/
    --end bug 3074706

    l_date                 DATE;
    l_structure_version_id NUMBER;
  BEGIN
    --bug 3074706
    OPEN c2;
    FETCH c2 into l_project_id;
    CLOSE c2;
    --end bug 3074706
    OPEN c1;
    FETCH c1 into l_date;
    CLOSE c1;
    return l_date;
  END GET_MAX_LAST_UPD_DT_WRKNG_VER;

-- Procedure            : copy_src_financial_version
-- Type                 : PRIVATE
-- Purpose              : Contains logic for copying the financial version from the source to the destination version
-- Note                 :
-- Assumptions          : All FLAGS and WORKPLAN record(s) have been populated in the global temporary table
-- Parameters                    Type      Required  Description and Purpose
-- ---------------------------  ------     --------  --------------------------------------------------------
-- p_src_project_id             NUMBER        Y      The source project id
-- p_dest_project_id            NUMBER        Y      The destination project id
-- p_dest_fn_structure_id       NUMBER        Y      The destination project's financial structure id
-- p_shared                     VARCHAR2      Y      Whether source/destination project is shared or not
-- p_publish_person_id          NUMBER        Y      The person id required for publishing a version
-- p_dest_template_flag         VARCHAR2      Y      Creating a template or a project
PROCEDURE copy_src_financial_version(  p_api_version        IN  NUMBER      := 1.0
                                      ,p_commit             IN  VARCHAR2    := FND_API.G_FALSE
                                      ,p_init_msg_list      IN  VARCHAR2    := FND_API.G_TRUE
                                      ,p_validate_only      IN  VARCHAR2    := FND_API.G_FALSE
                                      ,p_validation_level   IN  VARCHAR2    := FND_API.G_VALID_LEVEL_FULL
                                      ,p_calling_module     IN  VARCHAR2    := 'SELF_SERVICE'
                                      ,p_debug_mode         IN  VARCHAR2    := 'N'
                                      ,p_src_project_id       IN NUMBER
                                      ,p_dest_project_id      IN NUMBER
                                      ,p_dest_fn_structure_id IN NUMBER
                                      ,p_shared               IN VARCHAR2
                                      ,p_dest_template_flag   IN VARCHAR2
                                      ,p_publish_person_id    IN NUMBER
                                      ,x_return_status  OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
                                      ,x_msg_count      OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
                                      ,x_msg_data       OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
                                     ) IS
--This cursor fetches the workplan structure attributes
CURSOR cur_get_wp_attr IS
SELECT ppwa.WP_ENABLE_VERSION_FLAG
FROM   pa_proj_workplan_attr   ppwa
      ,pa_proj_structure_types ppst
      ,pa_structure_types      pst
WHERE  ppwa.project_id = p_src_project_id
AND    ppwa.proj_element_id = ppst.proj_element_id
AND    ppst.structure_type_id = pst.structure_type_id
AND    pst.structure_type = 'WORKPLAN' ;

--This cursor retrieves the LATEST PUBLISHED WP version from the source project
CURSOR cur_get_src_fin_version_id IS
SELECT ppev.element_version_id
FROM   pa_proj_element_versions ppev,
       pa_proj_elem_ver_structure ppevs
WHERE  ppev.project_id = p_src_project_id
AND    ppev.object_type = 'PA_STRUCTURES'
AND    ppev.element_version_id = ppevs.element_version_id
AND    ppevs.project_id = p_src_project_id
AND    ppevs.latest_eff_published_flag = 'Y';

--This cursor retrieves the CURRENT WORKING WP version from the source project
CURSOR cur_get_src_fin_version_id2 IS
SELECT ppev.element_version_id
FROM   pa_proj_element_versions ppev,
       pa_proj_elem_ver_structure ppevs
WHERE  ppev.project_id = p_src_project_id
AND    ppev.object_type = 'PA_STRUCTURES'
AND    ppev.element_version_id = ppevs.element_version_id
AND    ppevs.project_id = p_src_project_id
AND    ppevs.current_working_flag = 'Y';

--This cursor retrieves the version for the financial structure form the source project
CURSOR cur_get_split_fin_ver IS
SELECT ppev.element_version_id
FROM   pa_proj_element_versions ppev,
       pa_proj_structure_types ppst,
       pa_structure_types pst
WHERE  ppev.project_id = p_src_project_id
AND    ppev.object_type = 'PA_STRUCTURES'
AND    ppev.proj_element_id = ppst.proj_element_id
AND    ppst.structure_type_id = pst.structure_type_id
AND    pst.structure_type = 'FINANCIAL' ;

--This cursor gets the schedule start date from the source project
CURSOR cur_get_src_sch_st_date(c_project_id NUMBER, c_struc_ver_id NUMBER) IS
SELECT scheduled_start_date
FROM   pa_proj_elem_ver_schedule
WHERE project_id = c_project_id
AND   element_version_id = c_struc_ver_id;

l_debug_mode                     VARCHAR2(1);
l_debug_level2                   CONSTANT NUMBER := 2;
l_debug_level3                   CONSTANT NUMBER := 3;
l_debug_level4                   CONSTANT NUMBER := 4;
l_debug_level5                   CONSTANT NUMBER := 5;

l_src_fin_version_id     NUMBER(15);
l_versioning_enabled     VARCHAR2(1);
dest_latest_eff_pub_flag VARCHAR2(1);
dest_current_flag        VARCHAR2(1);
l_user_id               NUMBER := FND_GLOBAL.USER_ID;
l_login_id              NUMBER := FND_GLOBAL.LOGIN_ID;
BEGIN

     x_msg_count := 0;
     x_return_status := FND_API.G_RET_STS_SUCCESS;
     l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

     IF (p_commit = FND_API.G_TRUE) THEN
        SAVEPOINT copy_src_fin_ver;
     END IF;

     IF p_init_msg_list = FND_API.G_TRUE THEN
          FND_MSG_PUB.initialize;
     END IF;

     IF l_debug_mode = 'Y' THEN
        PA_DEBUG.set_curr_function( p_function   => 'copy_src_financial_version',
                                    p_debug_mode => l_debug_mode );
     END IF;

     IF l_debug_mode = 'Y' THEN
        Pa_Debug.g_err_stage:= 'Printing Input parameters';
        Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_src_project_id'||':'||p_src_project_id,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_dest_project_id'||':'||p_dest_project_id,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_dest_fn_structure_id'||':'||p_dest_fn_structure_id,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_shared'||':'||p_shared,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_publish_person_id'||':'||p_publish_person_id,
                                   l_debug_level3);
     END IF;

     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'Validating Input parameters';
          Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                                     l_debug_level3);
     END IF;

     IF ( ( p_src_project_id       IS NULL OR p_src_project_id       = FND_API.G_MISS_NUM  ) AND
          ( p_dest_project_id      IS NULL OR p_dest_project_id      = FND_API.G_MISS_NUM  ) AND
          ( p_dest_fn_structure_id IS NULL OR p_dest_fn_structure_id = FND_API.G_MISS_NUM  ) AND
          ( p_shared               IS NULL OR p_shared               = FND_API.G_MISS_CHAR ) AND
          ( p_publish_person_id    IS NULL OR p_publish_person_id    = FND_API.G_MISS_NUM  )
        )
     THEN
           IF l_debug_mode = 'Y' THEN
               Pa_Debug.g_err_stage:= 'PA_PROJ_TASK_STRUC_PUB : copy_src_financial_version :
               p_src_project_id, p_dest_project_id, p_dest_fn_structure_id, p_shared, p_publish_person_id are NULL';
               Pa_Debug.WRITE(G_PKG_NAME, Pa_Debug.g_err_stage, l_debug_level3);
           END IF;
          RAISE Invalid_Arg_Exc_WP;
     END IF;

    IF 'Y' = p_shared THEN
        --Fetch the WP latest published, else the current working in the source project
        OPEN  cur_get_src_fin_version_id;
        FETCH cur_get_src_fin_version_id INTO l_src_fin_version_id;
        IF cur_get_src_fin_version_id%NOTFOUND THEN
            OPEN  cur_get_src_fin_version_id2;
            FETCH cur_get_src_fin_version_id2 INTO l_src_fin_version_id;
            CLOSE cur_get_src_fin_version_id2;
        END IF;
        CLOSE cur_get_src_fin_version_id;
    ELSE
        --Fetch the financial version from the source project
        OPEN  cur_get_split_fin_ver;
        FETCH cur_get_split_fin_ver INTO l_src_fin_version_id;
        CLOSE cur_get_split_fin_ver;
    END IF;

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME,'Source financial version id : '||l_src_fin_version_id, l_debug_level3);
    END IF;

    --Copy entry into pa_proj_element_versions for the financial version in the source project
    INSERT INTO pa_proj_element_versions(
     ELEMENT_VERSION_ID
    ,PROJ_ELEMENT_ID
    ,OBJECT_TYPE
    ,PROJECT_ID
    ,PARENT_STRUCTURE_VERSION_ID
    ,DISPLAY_SEQUENCE
    ,WBS_LEVEL
    ,WBS_NUMBER
    ,CREATION_DATE
    ,CREATED_BY
    ,LAST_UPDATE_DATE
    ,LAST_UPDATED_BY
    ,LAST_UPDATE_LOGIN
    ,RECORD_VERSION_NUMBER
    ,attribute15          --This column stores the stucture version id in the src project, to be used to create relationships.
    ,ATTRIBUTE_CATEGORY
    ,ATTRIBUTE1
    ,ATTRIBUTE2
    ,ATTRIBUTE3
    ,ATTRIBUTE4
    ,ATTRIBUTE5
    ,ATTRIBUTE6
    ,ATTRIBUTE7
    ,ATTRIBUTE8
    ,ATTRIBUTE9
    ,ATTRIBUTE10
    ,ATTRIBUTE11
    ,ATTRIBUTE12
    ,ATTRIBUTE13
    ,ATTRIBUTE14
    ,TASK_UNPUB_VER_STATUS_CODE
    ,FINANCIAL_TASK_FLAG
    ,source_object_id
    ,source_object_type
    )
    SELECT
     pa_proj_element_versions_s.nextval
    ,p_dest_fn_structure_id --This would be the WP/FIN structure id in shared case and FIN structure id in split case
    ,ppev.object_type
    ,p_dest_project_id
    ,pa_proj_element_versions_s.nextval --nextval occuring twice in the same select returns the same value
    ,ppev.DISPLAY_SEQUENCE
    ,ppev.WBS_LEVEL
    ,ppev.WBS_NUMBER
    ,SYSDATE                    ------CREATION_DATE
    ,l_user_id                  ------CREATED_BY
    ,SYSDATE                    ------LAST_UPDATE_DATE
    ,l_user_id                  ------LAST_UPDATED_BY
    ,l_login_id                 ------LAST_UPDATE_LOGIN
    ,ppev.RECORD_VERSION_NUMBER ------RECORD_VERSION_NUMBER
    ,ppev.element_version_id
    ,ppev.ATTRIBUTE_CATEGORY
    ,ppev.ATTRIBUTE1
    ,ppev.ATTRIBUTE2
    ,ppev.ATTRIBUTE3
    ,ppev.ATTRIBUTE4
    ,ppev.ATTRIBUTE5
    ,ppev.ATTRIBUTE6
    ,ppev.ATTRIBUTE7
    ,ppev.ATTRIBUTE8
    ,ppev.ATTRIBUTE9
    ,ppev.ATTRIBUTE10
    ,ppev.ATTRIBUTE11
    ,ppev.ATTRIBUTE12
    ,ppev.ATTRIBUTE13
    ,ppev.ATTRIBUTE14
    ,ppev.TASK_UNPUB_VER_STATUS_CODE
    ,ppev.FINANCIAL_TASK_FLAG
    ,p_dest_project_id
    ,'PA_PROJECTS'
    FROM pa_proj_element_versions ppev
    WHERE ppev.project_id = p_src_project_id
    AND   ppev.element_version_id = l_src_fin_version_id ;

    OPEN  cur_get_wp_attr;
    FETCH cur_get_wp_attr INTO l_versioning_enabled;
    CLOSE cur_get_wp_attr;

    --IF split and financial enabled THEN
    IF 'N' = p_shared THEN
          IF p_dest_template_flag = 'Y' THEN
               dest_latest_eff_pub_flag := 'N';
               dest_current_flag := 'N';
          ELSE
               dest_latest_eff_pub_flag := 'Y';
               dest_current_flag := 'S';
          END IF;
    ELSE
    --IF shared AND no wp ver is selected AND fin tasks flag is checked
          --IF creating a project AND versioning is disabled THEN
          IF 'N' = p_dest_template_flag AND 'N' = l_versioning_enabled THEN
               dest_latest_eff_pub_flag := 'Y';
               dest_current_flag        := 'Y';
          ELSE
          --IF creating a template OR creating a project with versioning enabled
               dest_latest_eff_pub_flag := 'N';
               dest_current_flag        := 'N';
          END IF;
    END IF;

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME,'dest_latest_eff_pub_flag : '||dest_latest_eff_pub_flag, l_debug_level3);
        Pa_Debug.WRITE(G_PKG_NAME,'dest_current_flag : '||dest_current_flag, l_debug_level3);
    END IF;

    --Copy entry into pa_proj_elem_ver_structure for financial version in the source project
    INSERT INTO PA_PROJ_ELEM_VER_STRUCTURE(
     PEV_STRUCTURE_ID
    ,ELEMENT_VERSION_ID
    ,VERSION_NUMBER
    ,NAME
    ,PROJECT_ID
    ,PROJ_ELEMENT_ID
    ,DESCRIPTION
    ,EFFECTIVE_DATE
    ,PUBLISHED_DATE
    ,PUBLISHED_BY_PERSON_ID
    ,CURRENT_BASELINE_DATE
    ,CURRENT_FLAG
    ,CURRENT_BASELINE_PERSON_ID
    ,ORIGINAL_BASELINE_DATE
    ,ORIGINAL_FLAG
    ,ORIGINAL_BASELINE_PERSON_ID
    ,LOCK_STATUS_CODE
    ,LOCKED_BY_PERSON_ID
    ,LOCKED_DATE
    ,STATUS_CODE
    ,WF_STATUS_CODE
    ,LATEST_EFF_PUBLISHED_FLAG
    ,RECORD_VERSION_NUMBER
    ,WBS_RECORD_VERSION_NUMBER
    ,CREATION_DATE
    ,CREATED_BY
    ,LAST_UPDATE_DATE
    ,LAST_UPDATED_BY
    ,LAST_UPDATE_LOGIN
    ,change_reason_code
    ,PROCESS_UPDATE_WBS_FLAG
    ,current_working_flag
    ,source_object_id
    ,source_object_type
    )
    SELECT
     pa_proj_elem_ver_structure_s.nextval
    ,ppev.element_version_id
    ,ppevs.version_number
    ,ppevs.name
    ,p_dest_project_id
    ,p_dest_fn_structure_id  --This would be WP/FIN structure id in shared case and FIN structure id in split case
    ,ppevs.DESCRIPTION
    ,ppevs.EFFECTIVE_DATE
    ,decode(dest_latest_eff_pub_flag,'Y',sysdate,to_date(null) )                                       --PUBLISHED_DATE
    ,decode(dest_latest_eff_pub_flag,'Y',p_publish_person_id,null )                                    --PUBLISHED_BY_PERSON_ID
    ,decode(dest_current_flag,'S',ppevs.current_baseline_date,
            decode(dest_current_flag,'Y',sysdate,to_date(null) ) )                                     --CURRENT_BASELINE_DATE
    ,decode(dest_current_flag,'S',ppevs.current_flag,dest_current_flag)                                --CURRENT_FLAG
    ,decode(dest_current_flag,'S',ppevs.current_baseline_person_id,
            decode(dest_current_flag,'Y',p_publish_person_id,null) )                                   --CURRENT_BASELINE_PERSON_ID
    ,ppevs.original_baseline_date                                                                      --ORIGINAL_BASELINE_DATE
    ,ppevs.original_flag                                                                               --ORIGINAL_FLAG
    ,ppevs.original_baseline_person_id                                                                 --ORIGINAL_BASELINE_PERSON_ID
    ,'UNLOCKED'
    ,null
    ,null
    ,decode(dest_latest_eff_pub_flag,'Y','STRUCTURE_PUBLISHED','STRUCTURE_WORKING')                    --STATUS_CODE
    ,ppevs.WF_STATUS_CODE
    ,dest_latest_eff_pub_flag                                                                          --LATEST_EFF_PUBLISHED_FLAG
    ,ppevs.RECORD_VERSION_NUMBER
    ,ppevs.WBS_RECORD_VERSION_NUMBER
    ,SYSDATE
    ,l_user_id
    ,SYSDATE
    ,l_user_id
    ,l_login_id
    ,ppevs.change_reason_code
    ,ppevs.process_update_wbs_flag
    ,decode(p_shared,'N',ppevs.current_working_flag,'Y')                                              --CURRENT_WROKING_FLAG
            --If SPLIT and fin enabled case, copy cw from source, else populate it as Y
    ,p_dest_project_id
    ,'PA_PROJECTS'
    FROM pa_proj_elem_ver_structure ppevs,
         pa_proj_element_versions ppev
    WHERE ppevs.project_id = p_src_project_id
    AND   ppevs.element_version_id = l_src_fin_version_id
    AND   ppev.attribute15 = ppevs.element_version_id
    AND   ppev.project_id = p_dest_project_id  ;

    IF (p_commit = FND_API.G_TRUE) THEN
      COMMIT;
    END IF;

EXCEPTION

WHEN Invalid_Arg_Exc_WP THEN
     x_return_status := Fnd_Api.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := ' PA_PROJ_TASK_STRUC_PUB : copy_src_financial_version : NULL parameters passed';

     IF p_commit = FND_API.G_TRUE THEN
        ROLLBACK TO copy_src_fin_ver;
     END IF;

     Fnd_Msg_Pub.add_exc_msg
               (  p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                , p_procedure_name  => 'copy_src_financial_version'
                , p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                              l_debug_level5);
          Pa_Debug.reset_curr_function;
     END IF;
     RAISE;

WHEN OTHERS THEN
     x_return_status := Fnd_Api.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     IF p_commit = FND_API.G_TRUE THEN
        ROLLBACK TO copy_src_fin_ver;
     END IF;

     Fnd_Msg_Pub.add_exc_msg
       (  p_pkg_name         => 'PA_PROJ_TASK_STRUC_PUB'
        , p_procedure_name  => 'copy_src_financial_version'
        , p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                              l_debug_level5);
          Pa_Debug.reset_curr_function;
     END IF;
     RAISE;

END copy_src_financial_version;





-- Procedure            : copy_src_financial_ver_tasks
-- Type                 : PRIVATE
-- Purpose              : Contains logic for copying the tasks belonging to the financial version
--                        from the source to the destination project
-- Note                 :
-- Assumptions          : All FLAGS and WORKPLAN record(s) have been populated in the global temporary table
-- Parameters                    Type      Required  Description and Purpose
-- ---------------------------  ------     --------  --------------------------------------------------------
-- p_src_project_id             NUMBER        Y      The source project id
-- p_dest_project_id            NUMBER        Y      The destination project id
-- p_dest_fn_structure_id       NUMBER        Y      The destination project's financial structure id
-- p_shared                     VARCHAR2      Y      Whether source/destination project is shared or not
-- p_copy_ppevSchedules_flag    NUMBER        Y      Whether pa_proj_elem_ver_schedule entry from the source project
--                                                   should be copied into the destination project or not
-- p_target_start_date          DATE          Y      The start date of the destination project
-- p_target_finish_date         DATE          Y      The finish date of the destination project
-- p_calendar_id                NUMBER        Y      The calendar id
PROCEDURE copy_src_financial_ver_tasks(  p_api_version        IN  NUMBER      := 1.0
                                        ,p_commit             IN  VARCHAR2    := FND_API.G_FALSE
                                        ,p_init_msg_list      IN  VARCHAR2    := FND_API.G_TRUE
                                        ,p_validate_only      IN  VARCHAR2    := FND_API.G_FALSE
                                        ,p_validation_level   IN  VARCHAR2    := FND_API.G_VALID_LEVEL_FULL
                                        ,p_calling_module     IN  VARCHAR2    := 'SELF_SERVICE'
                                        ,p_debug_mode         IN  VARCHAR2    := 'N'
                                        ,p_src_project_id           IN NUMBER
                                        ,p_dest_project_id          IN NUMBER
                                        ,p_dest_fn_structure_id     IN NUMBER
                                        ,p_shared                   IN VARCHAR2
                                        ,p_copy_ppevSchedules_flag  IN VARCHAR2
                                        ,p_target_start_date        IN DATE
                                        ,p_target_finish_date       IN DATE
                                        ,p_calendar_id              IN NUMBER
                                        ,x_return_status  OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
                                        ,x_msg_count      OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
                                        ,x_msg_data       OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
                                      ) IS
--This cursor retrieves the LATEST PUBLISHED WP version from the source project
CURSOR cur_get_src_fin_version_id IS
SELECT ppev.element_version_id
FROM   pa_proj_element_versions ppev,
       pa_proj_elem_ver_structure ppevs
WHERE  ppev.project_id = p_src_project_id
AND    ppev.object_type = 'PA_STRUCTURES'
AND    ppev.element_version_id = ppevs.element_version_id
AND    ppevs.project_id = p_src_project_id
AND    ppevs.latest_eff_published_flag = 'Y';

--This cursor retrieves the CURRENT WORKING WP version from the source project
CURSOR cur_get_src_fin_version_id2 IS
SELECT ppev.element_version_id
FROM   pa_proj_element_versions ppev,
       pa_proj_elem_ver_structure ppevs
WHERE  ppev.project_id = p_src_project_id
AND    ppev.object_type = 'PA_STRUCTURES'
AND    ppev.element_version_id = ppevs.element_version_id
AND    ppevs.project_id = p_src_project_id
AND    ppevs.current_working_flag = 'Y';

--This cursor retrieves the version for the financial structure form the source project
CURSOR cur_get_split_fin_ver IS
SELECT ppev.element_version_id
FROM   pa_proj_element_versions ppev,
       pa_proj_structure_types ppst,
       pa_structure_types pst
WHERE  ppev.project_id = p_src_project_id
AND    ppev.object_type = 'PA_STRUCTURES'
AND    ppev.proj_element_id = ppst.proj_element_id
AND    ppst.structure_type_id = pst.structure_type_id
AND    pst.structure_type = 'FINANCIAL' ;

--This cursor gets the schedule start date from the source project
CURSOR cur_get_src_sch_st_date(c_project_id NUMBER, c_struc_ver_id NUMBER) IS
SELECT scheduled_start_date
FROM pa_proj_elem_ver_schedule
WHERE project_id = c_project_id
AND   element_version_id = c_struc_ver_id;

--Bug 3387963 - Cursor to get destination and source project's organization id
CURSOR cur_get_carrying_out_org IS
SELECT old.carrying_out_organization_id,
       new.carrying_out_organization_id
FROM pa_projects_all old,
     pa_projects_all new
WHERE old.project_id = p_src_project_id
AND   new.project_id = p_dest_project_id;

l_old_proj_org_id       NUMBER;
l_new_proj_org_id       NUMBER;
-- End of code added for bug 3387963

/* Code added for 6211012*/

TYPE typ_obj_rela_id is TABLE OF pa_object_relationships.object_relationship_id%TYPE
INDEX BY BINARY_INTEGER;
l_obj_rel_id typ_obj_rela_id;

TYPE typ_obj_typ_from is TABLE OF pa_object_relationships.object_type_from%TYPE
INDEX BY BINARY_INTEGER;
l_obj_typ_from typ_obj_typ_from;

TYPE typ_obj_from_id is TABLE OF pa_object_relationships.object_id_from1%TYPE
INDEX BY BINARY_INTEGER;
l_obj_from_id typ_obj_from_id;

TYPE typ_obj_typ_to is TABLE OF pa_object_relationships.object_type_to%TYPE
INDEX BY BINARY_INTEGER;
l_obj_typ_to typ_obj_typ_to;

TYPE typ_obj_to_id is TABLE OF pa_object_relationships.object_id_to1%TYPE
INDEX BY BINARY_INTEGER;
l_obj_to_id typ_obj_to_id;

TYPE typ_rel_typ is TABLE OF pa_object_relationships.relationship_type%TYPE
INDEX BY BINARY_INTEGER;
l_rel_typ typ_rel_typ;

TYPE typ_rel_subtyp is TABLE OF pa_object_relationships.relationship_subtype%TYPE
INDEX BY BINARY_INTEGER;
l_rel_subtyp typ_rel_subtyp;

TYPE typ_rec_ver_num is TABLE OF pa_object_relationships.Record_Version_Number%TYPE
INDEX BY BINARY_INTEGER;
l_rec_ver_num typ_rec_ver_num;

TYPE typ_wt_percent is TABLE OF pa_object_relationships.weighting_percentage%TYPE
INDEX BY BINARY_INTEGER;
l_wt_percent typ_wt_percent;


CURSOR cur_pa_obj_rela_1(c_src_fin_version_id NUMBER,
		     c_dest_project_id NUMBER
		     ) IS
SELECT
     pa_object_relationships_s.nextval,
     pobj.object_type_from,
     ppev1.element_version_id,
     pobj.object_type_to,
     ppev2.element_version_id,
     pobj.relationship_type,
     pobj.relationship_subtype,
     pobj.Record_Version_Number,
     pobj.weighting_percentage
FROM ( SELECT object_type_from,
             object_id_from1,
             object_type_to,
             object_id_to1,
             relationship_type,
             relationship_subtype,
             Record_Version_Number,
             weighting_percentage
      FROM pa_object_relationships
      START WITH object_id_from1 = c_src_fin_version_id
      AND  RELATIONSHIP_TYPE = 'S'
      CONNECT BY  object_id_from1 =  PRIOR object_id_to1
      AND  RELATIONSHIP_TYPE = 'S' ) pobj,
    pa_proj_element_versions ppev1,
    pa_proj_element_versions ppev2
    WHERE ppev1.attribute15 = pobj.object_id_from1
    AND   ppev2.attribute15 = pobj.object_id_to1
    AND   ppev1.project_id = c_dest_project_id
    AND   ppev2.project_id = c_dest_project_id ;

/*End of Code added for 6211012*/

l_debug_mode                     VARCHAR2(1);
l_debug_level2                   CONSTANT NUMBER := 2;
l_debug_level3                   CONSTANT NUMBER := 3;
l_debug_level4                   CONSTANT NUMBER := 4;
l_debug_level5                   CONSTANT NUMBER := 5;

l_src_fin_version_id    NUMBER(15);
l_user_id               NUMBER := FND_GLOBAL.USER_ID;
l_login_id              NUMBER := FND_GLOBAL.LOGIN_ID;
l_delta                 NUMBER;
l_src_sch_st_date       DATE;

BEGIN


     x_msg_count := 0;
     x_return_status := FND_API.G_RET_STS_SUCCESS;
     l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

     IF (p_commit = FND_API.G_TRUE) THEN
        SAVEPOINT copy_src_fin_ver_tasks;
     END IF;

     IF p_init_msg_list = FND_API.G_TRUE THEN
          FND_MSG_PUB.initialize;
     END IF;

     IF l_debug_mode = 'Y' THEN
        PA_DEBUG.set_curr_function( p_function   => 'copy_src_financial_ver_tasks',
                                    p_debug_mode => l_debug_mode );
     END IF;

     IF l_debug_mode = 'Y' THEN
        Pa_Debug.g_err_stage:= 'Printing Input parameters';
        Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_src_project_id'||':'||p_src_project_id,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_dest_project_id'||':'||p_dest_project_id,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_dest_fn_structure_id'||':'||p_dest_fn_structure_id,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_shared'||':'||p_shared,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_copy_ppevSchedules_flag'||':'||p_copy_ppevSchedules_flag,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_target_start_date'||':'||p_target_start_date,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_target_finish_date'||':'||p_target_finish_date,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_calendar_id'||':'||p_calendar_id,
                                   l_debug_level3);
     END IF;

     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'Validating Input parameters';
          Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                                     l_debug_level3);
     END IF;

     IF ( ( p_src_project_id          IS NULL OR p_src_project_id          = FND_API.G_MISS_NUM  ) AND
          ( p_dest_project_id         IS NULL OR p_dest_project_id         = FND_API.G_MISS_NUM  ) AND
          ( p_dest_fn_structure_id    IS NULL OR p_dest_fn_structure_id    = FND_API.G_MISS_NUM  ) AND
          ( p_shared                  IS NULL OR p_shared                  = FND_API.G_MISS_CHAR ) AND
          ( p_copy_ppevSchedules_flag IS NULL OR p_copy_ppevSchedules_flag = FND_API.G_MISS_NUM  ) AND
          ( p_calendar_id             IS NULL OR p_calendar_id             = FND_API.G_MISS_NUM  )
        )
     THEN
           IF l_debug_mode = 'Y' THEN
               Pa_Debug.g_err_stage:= 'PA_PROJ_TASK_STRUC_PUB : copy_src_financial_ver_tasks : p_src_project_id,
               p_dest_project_id, p_dest_fn_structure_id, p_shared, p_copy_ppevSchedules_flag, p_calendar_id are NULL';
               Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                              l_debug_level3);
           END IF;
          RAISE Invalid_Arg_Exc_WP;
     END IF;

    IF 'Y' = p_shared THEN
        --Fetch the WP latest published, else the current working in the source project
        OPEN  cur_get_src_fin_version_id;
        FETCH cur_get_src_fin_version_id INTO l_src_fin_version_id;
        IF cur_get_src_fin_version_id%NOTFOUND THEN
            OPEN  cur_get_src_fin_version_id2;
            FETCH cur_get_src_fin_version_id2 INTO l_src_fin_version_id;
            CLOSE cur_get_src_fin_version_id2;
        END IF;
        CLOSE cur_get_src_fin_version_id;
    ELSE
        --Fetch the financial version from the source project
        OPEN  cur_get_split_fin_ver;
        FETCH cur_get_split_fin_ver INTO l_src_fin_version_id;
        CLOSE cur_get_split_fin_ver;
    END IF;

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'Source financial version id : '||l_src_fin_version_id, l_debug_level3);
    END IF;

     --Bug 3387963 - Added to get the cursor values
    OPEN  cur_get_carrying_out_org;
    FETCH cur_get_carrying_out_org INTO l_old_proj_org_id, l_new_proj_org_id;
    CLOSE cur_get_carrying_out_org;

    --Copy tasks belonging to the single financial version in the source project
    INSERT INTO pa_proj_elements(
     PROJ_ELEMENT_ID
    ,PROJECT_ID
    ,OBJECT_TYPE
    ,ELEMENT_NUMBER
    ,NAME
    ,DESCRIPTION
    ,STATUS_CODE
    ,WF_STATUS_CODE
    ,PM_SOURCE_CODE
    ,PM_SOURCE_REFERENCE
    ,CLOSED_DATE
    ,LOCATION_ID
    ,MANAGER_PERSON_ID
    ,CARRYING_OUT_ORGANIZATION_ID
    ,TYPE_ID
    ,PRIORITY_CODE
    ,CREATION_DATE
    ,CREATED_BY
    ,LAST_UPDATE_DATE
    ,LAST_UPDATED_BY
    ,LAST_UPDATE_LOGIN
    ,RECORD_VERSION_NUMBER
    ,REQUEST_ID
    ,PROGRAM_APPLICATION_ID
    ,PROGRAM_ID
    ,PROGRAM_UPDATE_DATE
    ,LINK_TASK_FLAG
    ,BASELINE_START_DATE
    ,BASELINE_FINISH_DATE
    ,progress_outdated_flag
    ,ATTRIBUTE_CATEGORY
    ,ATTRIBUTE1
    ,ATTRIBUTE2
    ,ATTRIBUTE3
    ,ATTRIBUTE4
    ,ATTRIBUTE5
    ,ATTRIBUTE6
    ,ATTRIBUTE7
    ,ATTRIBUTE8
    ,ATTRIBUTE9
    ,ATTRIBUTE10
    ,ATTRIBUTE11
    ,ATTRIBUTE12
    ,ATTRIBUTE13
    ,ATTRIBUTE14
    ,ATTRIBUTE15
    ,parent_structure_id
    ,TYPE_CODE
    ,INC_PROJ_PROGRESS_FLAG
    ,WQ_ITEM_CODE
    ,WQ_UOM_CODE
    ,WQ_ACTUAL_ENTRY_CODE
    ,TASK_PROGRESS_ENTRY_PAGE_ID
    ,BASELINE_DURATION
    ,PHASE_CODE
    ,PHASE_VERSION_ID
    ,source_object_id
    ,source_object_type
    )
    SELECT
     pt.task_id
    ,p_dest_project_id
    ,ppe.object_type
    ,ppe.element_number
    ,ppe.name
    ,ppe.DESCRIPTION
    ,INITIAL_STATUS_CODE
    ,ppe.WF_STATUS_CODE
    ,ppe.PM_SOURCE_CODE
    ,ppe.PM_SOURCE_REFERENCE
    ,ppe.CLOSED_DATE
    ,ppe.LOCATION_ID
    ,ppe.MANAGER_PERSON_ID
    ,decode(ppe.CARRYING_OUT_ORGANIZATION_ID,l_old_proj_org_id, l_new_proj_org_id,
            ppe.CARRYING_OUT_ORGANIZATION_ID) -- Bug 3387963
    ,ppe.TYPE_ID
    ,ppe.PRIORITY_CODE
    ,SYSDATE
    ,l_user_id
    ,SYSDATE
    ,l_user_id
    ,l_login_id
    ,ppe.RECORD_VERSION_NUMBER
    ,ppe.REQUEST_ID
    ,ppe.PROGRAM_APPLICATION_ID
    ,ppe.PROGRAM_ID
    ,ppe.PROGRAM_UPDATE_DATE
    ,ppe.LINK_TASK_FLAG
    ,ppe.BASELINE_START_DATE
    ,ppe.BASELINE_FINISH_DATE
    ,'N'       --,ppe.progress_outdated_flag
    ,ppe.ATTRIBUTE_CATEGORY
    ,ppe.ATTRIBUTE1
    ,ppe.ATTRIBUTE2
    ,ppe.ATTRIBUTE3
    ,ppe.ATTRIBUTE4
    ,ppe.ATTRIBUTE5
    ,ppe.ATTRIBUTE6
    ,ppe.ATTRIBUTE7
    ,ppe.ATTRIBUTE8
    ,ppe.ATTRIBUTE9
    ,ppe.ATTRIBUTE10
    ,ppe.ATTRIBUTE11
    ,ppe.ATTRIBUTE12
    ,ppe.ATTRIBUTE13
    ,ppe.ATTRIBUTE14
    ,ppe.proj_element_id    --attribute 15 is used to store old ids.
    ,p_dest_fn_structure_id  --This would be WP/FIN structure id in shared case. FIN structure id in split case
    ,ppe.TYPE_CODE
    ,ppe.INC_PROJ_PROGRESS_FLAG
    ,ppe.WQ_ITEM_CODE
    ,ppe.WQ_UOM_CODE
    ,ppe.WQ_ACTUAL_ENTRY_CODE
    ,ppe.TASK_PROGRESS_ENTRY_PAGE_ID
    ,ppe.BASELINE_DURATION
    ,ppe.PHASE_CODE
    ,ppe.PHASE_VERSION_ID
    ,p_dest_project_id
    ,'PA_PROJECTS'
    FROM pa_task_types ptt,
         pa_proj_elements ppe,
         pa_proj_element_versions ppev,
         pa_tasks      pt
    WHERE pt.project_id = p_dest_project_id
    AND   ppe.project_id = p_src_project_id          --Added by Sunkalya For the fix of Bug#4600825. This change is done for R12
    						     --Merging of code fix done thru Bug#4589176(115.315) for performance issues.
    AND   pt.task_number = substrb(rtrim(ppe.element_number),1,25) -- Substrb added for Bug 5152448
    AND   ptt.object_type    = 'PA_TASKS'
    AND   ppe.type_id        = ptt.task_type_id
    AND   ppe.object_type = 'PA_TASKS'
    AND   nvl(ppe.link_task_flag,'N') <> 'Y' -- 4348868
    AND   ppe.parent_structure_id = ppev.proj_element_id
    AND   ppev.element_version_id = l_src_fin_version_id ;

    --Copy tasks versions belonging to the single financial version in the source project
    INSERT INTO pa_proj_element_versions(
     ELEMENT_VERSION_ID
    ,PROJ_ELEMENT_ID
    ,OBJECT_TYPE
    ,PROJECT_ID
    ,PARENT_STRUCTURE_VERSION_ID
    ,DISPLAY_SEQUENCE
    ,WBS_LEVEL
    ,WBS_NUMBER
    ,CREATION_DATE
    ,CREATED_BY
    ,LAST_UPDATE_DATE
    ,LAST_UPDATED_BY
    ,LAST_UPDATE_LOGIN
    ,RECORD_VERSION_NUMBER
    ,attribute15          --this column is used to store task ver id of the source project's task versions to be used to created relationships.
    ,ATTRIBUTE_CATEGORY
    ,ATTRIBUTE1
    ,ATTRIBUTE2
    ,ATTRIBUTE3
    ,ATTRIBUTE4
    ,ATTRIBUTE5
    ,ATTRIBUTE6
    ,ATTRIBUTE7
    ,ATTRIBUTE8
    ,ATTRIBUTE9
    ,ATTRIBUTE10
    ,ATTRIBUTE11
    ,ATTRIBUTE12
    ,ATTRIBUTE13
    ,ATTRIBUTE14
    ,TASK_UNPUB_VER_STATUS_CODE
    ,FINANCIAL_TASK_FLAG
    ,source_object_id
    ,source_object_type
    )
    SELECT
     pa_proj_element_versions_s.nextval
    ,ppe.proj_element_id
    ,ppev.object_type
    ,p_dest_project_id
    ,ppev2.element_version_id
    ,ppev.DISPLAY_SEQUENCE
    ,ppev.WBS_LEVEL
    ,ppev.WBS_NUMBER
    ,SYSDATE                     ------CREATION_DATE
    ,l_user_id                   ------CREATED_BY
    ,SYSDATE                     ------LAST_UPDATE_DATE
    ,l_user_id                   ------LAST_UPDATED_BY
    ,l_login_id                  ------LAST_UPDATE_LOGIN
    ,ppev.RECORD_VERSION_NUMBER  ------RECORD_VERSION_NUMBER
    ,ppev.element_version_id     -- to help create relationships from source
    ,ppev.ATTRIBUTE_CATEGORY
    ,ppev.ATTRIBUTE1
    ,ppev.ATTRIBUTE2
    ,ppev.ATTRIBUTE3
    ,ppev.ATTRIBUTE4
    ,ppev.ATTRIBUTE5
    ,ppev.ATTRIBUTE6
    ,ppev.ATTRIBUTE7
    ,ppev.ATTRIBUTE8
    ,ppev.ATTRIBUTE9
    ,ppev.ATTRIBUTE10
    ,ppev.ATTRIBUTE11
    ,ppev.ATTRIBUTE12
    ,ppev.ATTRIBUTE13
    ,ppev.ATTRIBUTE14
    ,decode( ppevs.status_code, 'STRUCTURE_PUBLISHED', 'PUBLISHED', 'WORKING' )
    ,ppev.FINANCIAL_TASK_FLAG
    ,p_dest_project_id
    ,'PA_PROJECTS'
    FROM pa_proj_element_versions ppev,
         pa_proj_elements ppe,
         pa_proj_element_versions ppev2,
         pa_proj_elem_ver_structure ppevs
    WHERE ppev.project_id = p_src_project_id
    AND   ppev.object_type = 'PA_TASKS'
    AND   ppev.parent_structure_version_id = l_src_fin_version_id
    AND   ppev.proj_element_id = ppe.attribute15
    AND   ppe.project_id = p_dest_project_id
    AND   ppe.object_type = 'PA_TASKS'
    AND   ppev.parent_structure_version_id = ppev2.attribute15
    AND   ppev2.project_id = p_dest_project_id
    AND   ppev2.object_type = 'PA_STRUCTURES'
    AND   ppevs.project_id = p_dest_project_id
    AND   ppevs.element_version_id = ppev2.element_version_id ;

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'Creating object relatiionships for financial tasks', l_debug_level3);
    END IF;

    --Copy relationships for structure and tasks into destination project
  /* Start of addition for bug 6211012 */

        l_obj_rel_id.delete;
	l_obj_typ_from.delete;
	l_obj_from_id.delete;
	l_obj_typ_to.delete;
	l_obj_to_id.delete;
	l_rel_typ.delete;
	l_rel_subtyp.delete;
	l_rec_ver_num.delete;
	l_wt_percent.delete;

        OPEN cur_pa_obj_rela_1(l_src_fin_version_id,p_dest_project_id);

	LOOP

	  FETCH cur_pa_obj_rela_1
	  BULK COLLECT INTO
		l_obj_rel_id,
		l_obj_typ_from,
		l_obj_from_id,
		l_obj_typ_to,
		l_obj_to_id,
		l_rel_typ,
		l_rel_subtyp,
		l_rec_ver_num,
		l_wt_percent
	  LIMIT 1000;

	  IF l_obj_rel_id.COUNT >0 THEN

	    FORALL i IN l_obj_rel_id.FIRST..l_obj_rel_id.LAST
            insert into PA_OBJECT_RELATIONSHIPS (
                 object_relationship_id,
                 object_type_from,
                 object_id_from1,
                 object_type_to,
                 object_id_to1,
                 relationship_type,
                 relationship_subtype,
                 Record_Version_Number,
                 CREATED_BY,
                 CREATION_DATE,
                 LAST_UPDATED_BY,
                 LAST_UPDATE_DATE,
                 LAST_UPDATE_LOGIN,
                 weighting_percentage
                       )
		 values(
		 l_obj_rel_id(i),
	         l_obj_typ_from(i),
	         l_obj_from_id(i),
	         l_obj_typ_to(i),
	         l_obj_to_id(i),
	         l_rel_typ(i),
	         l_rel_subtyp(i),
	         l_rec_ver_num(i),
                 l_user_id,
                 SYSDATE,
                 l_user_id,
                 SYSDATE,
                 l_login_id,
	         l_wt_percent(i)
		 );

	  END IF;

          EXIT WHEN l_obj_rel_id.COUNT < 1000 ;
	END LOOP;

	l_obj_rel_id.delete;
	l_obj_typ_from.delete;
	l_obj_from_id.delete;
	l_obj_typ_to.delete;
	l_obj_to_id.delete;
	l_rel_typ.delete;
	l_rel_subtyp.delete;
	l_rec_ver_num.delete;
	l_wt_percent.delete;

	CLOSE cur_pa_obj_rela_1;

/*

    INSERT INTO PA_OBJECT_RELATIONSHIPS (
     object_relationship_id
    ,object_type_from
    ,object_id_from1
    ,object_type_to
    ,object_id_to1
    ,relationship_type
    ,relationship_subtype
    ,Record_Version_Number
    ,CREATED_BY
    ,CREATION_DATE
    ,LAST_UPDATED_BY
    ,LAST_UPDATE_DATE
    ,LAST_UPDATE_LOGIN
    ,weighting_percentage
    )
    SELECT
     pa_object_relationships_s.nextval
    ,pobj.object_type_from
    ,ppev1.element_version_id
    ,pobj.object_type_to
    ,ppev2.element_version_id
    ,pobj.relationship_type
    ,pobj.relationship_subtype
    ,pobj.Record_Version_Number
    ,l_user_id
    ,SYSDATE
    ,l_user_id
    ,SYSDATE
    ,l_login_id
    ,pobj.weighting_percentage
    FROM
    ( SELECT object_type_from,
             object_id_from1,
             object_type_to,
             object_id_to1,
             relationship_type,
             relationship_subtype,
             Record_Version_Number,
             weighting_percentage
      FROM pa_object_relationships
      START WITH object_id_from1 = l_src_fin_version_id
      AND  RELATIONSHIP_TYPE = 'S'
      CONNECT BY  object_id_from1 =  PRIOR object_id_to1
      AND  RELATIONSHIP_TYPE = 'S' ) pobj,
    pa_proj_element_versions ppev1,
    pa_proj_element_versions ppev2
    WHERE ppev1.attribute15 = pobj.object_id_from1
    AND   ppev2.attribute15 = pobj.object_id_to1
    AND   ppev1.project_id = p_dest_project_id
    AND   ppev2.project_id = p_dest_project_id ;
*/
/* End of changes for bug 6211012 */

    IF 'Y' = p_copy_ppevSchedules_flag THEN

        --calculate delta before inserting schedule rows
        --select source structure version scheduled start date
        IF (p_target_start_date IS NULL) THEN
            l_delta := 0;
        ELSE
            OPEN cur_get_src_sch_st_date( p_src_project_id, l_src_fin_version_id );
            FETCH cur_get_src_sch_st_date INTO l_src_sch_st_date;
            CLOSE cur_get_src_sch_st_date;
            l_delta := p_target_start_date - l_src_sch_st_date;
        END IF;

        --Copy entries into pa_proj_elem_ver_schedule
        INSERT INTO pa_proj_elem_ver_schedule(
         PEV_SCHEDULE_ID
        ,ELEMENT_VERSION_ID
        ,PROJECT_ID
        ,PROJ_ELEMENT_ID
        ,CREATION_DATE
        ,CREATED_BY
        ,LAST_UPDATE_DATE
        ,LAST_UPDATED_BY
        ,SCHEDULED_START_DATE
        ,SCHEDULED_FINISH_DATE
        ,OBLIGATION_START_DATE
        ,OBLIGATION_FINISH_DATE
        ,ACTUAL_START_DATE
        ,ACTUAL_FINISH_DATE
        ,ESTIMATED_START_DATE
        ,ESTIMATED_FINISH_DATE
        ,DURATION
        ,EARLY_START_DATE
        ,EARLY_FINISH_DATE
        ,LATE_START_DATE
        ,LATE_FINISH_DATE
        ,CALENDAR_ID
        ,MILESTONE_FLAG
        ,CRITICAL_FLAG
        ,RECORD_VERSION_NUMBER
        ,LAST_UPDATE_LOGIN
        ,WQ_PLANNED_QUANTITY
        ,PLANNED_EFFORT
        ,ACTUAL_DURATION
        ,ESTIMATED_DURATION
        ,ATTRIBUTE_CATEGORY
        ,ATTRIBUTE1
        ,ATTRIBUTE2
        ,ATTRIBUTE3
        ,ATTRIBUTE4
        ,ATTRIBUTE5
        ,ATTRIBUTE6
        ,ATTRIBUTE7
        ,ATTRIBUTE8
        ,ATTRIBUTE9
        ,ATTRIBUTE10
        ,ATTRIBUTE11
        ,ATTRIBUTE12
        ,ATTRIBUTE13
        ,ATTRIBUTE14
        ,ATTRIBUTE15
        ,source_object_id
        ,source_object_type
        )
        SELECT
         pa_proj_elem_ver_schedule_s.nextval
        ,ppev1.ELEMENT_VERSION_ID
        ,p_dest_project_id
        ,ppev1.PROJ_ELEMENT_ID
        ,SYSDATE
        ,l_user_id
        ,SYSDATE
        ,l_user_id
        ,PA_PROJ_TASK_STRUC_PUB.get_adjusted_dates( p_target_start_date,
                                                    p_target_finish_date,
                                                    l_delta,
                                                    ppevs.SCHEDULED_START_DATE,
                                                    null )
        ,PA_PROJ_TASK_STRUC_PUB.get_adjusted_dates( p_target_start_date,
                                                    p_target_finish_date,
                                                    l_delta,
                                                    ppevs.SCHEDULED_START_DATE,
                                                    SCHEDULED_FINISH_DATE )
        ,ppevs.OBLIGATION_START_DATE
        ,ppevs.OBLIGATION_FINISH_DATE
        ,null
        ,null
        ,null
        ,null
        ,ppevs.DURATION
        ,ppevs.EARLY_START_DATE
        ,ppevs.EARLY_FINISH_DATE
        ,ppevs.LATE_START_DATE
        ,ppevs.LATE_FINISH_DATE
        ,p_calendar_id
        ,ppevs.MILESTONE_FLAG
        ,ppevs.CRITICAL_FLAG
        ,ppevs.RECORD_VERSION_NUMBER
        ,l_login_id
        ,ppevs.WQ_PLANNED_QUANTITY
        ,ppevs.PLANNED_EFFORT
        ,ppevs.ACTUAL_DURATION
        ,ppevs.ESTIMATED_DURATION
        ,ppevs.ATTRIBUTE_CATEGORY
        ,ppevs.ATTRIBUTE1
        ,ppevs.ATTRIBUTE2
        ,ppevs.ATTRIBUTE3
        ,ppevs.ATTRIBUTE4
        ,ppevs.ATTRIBUTE5
        ,ppevs.ATTRIBUTE6
        ,ppevs.ATTRIBUTE7
        ,ppevs.ATTRIBUTE8
        ,ppevs.ATTRIBUTE9
        ,ppevs.ATTRIBUTE10
        ,ppevs.ATTRIBUTE11
        ,ppevs.ATTRIBUTE12
        ,ppevs.ATTRIBUTE13
        ,ppevs.ATTRIBUTE14
        ,ppevs.ATTRIBUTE15
    ,p_dest_project_id
    ,'PA_PROJECTS'
        FROM pa_proj_elem_ver_schedule ppevs,
             pa_proj_element_versions ppev1,
             pa_proj_element_versions ppev2
        WHERE ppev1.project_id = p_dest_project_id
        AND   ppev1.attribute15 = ppevs.element_version_id
        AND   ppevs.project_id = p_src_project_id
        AND   ppev1.attribute15 = ppev2.element_version_id
        AND   ppev2.project_id = p_src_project_id
        AND   ppev2.parent_structure_version_id = l_src_fin_version_id ;
    END IF; --If p_copy_ppevSchedules_flag = 'Y'

    IF (p_commit = FND_API.G_TRUE) THEN
      COMMIT;
    END IF;

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'Exiting copy_src_financial_ver_tasks...', l_debug_level3);
    END IF;
EXCEPTION

WHEN Invalid_Arg_Exc_WP THEN
     x_return_status := Fnd_Api.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := ' PA_PROJ_TASK_STRUC_PUB : copy_src_financial_ver_tasks : NULL parameters passed';

     IF p_commit = FND_API.G_TRUE THEN
        ROLLBACK TO copy_src_fin_ver_tasks;
     END IF;

     Fnd_Msg_Pub.add_exc_msg
               (  p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                , p_procedure_name  => 'copy_src_financial_ver_tasks'
                , p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                              l_debug_level5);
          Pa_Debug.reset_curr_function;
     END IF;
     RAISE;

WHEN OTHERS THEN
     x_return_status := Fnd_Api.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     IF p_commit = FND_API.G_TRUE THEN
        ROLLBACK TO copy_src_fin_ver_tasks;
     END IF;

     Fnd_Msg_Pub.add_exc_msg
       ( p_pkg_name         => 'PA_PROJ_TASK_STRUC_PUB'
        , p_procedure_name  => 'copy_src_financial_ver_tasks'
        , p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                              l_debug_level5);
          Pa_Debug.reset_curr_function;
     END IF;
     RAISE;

END copy_src_financial_ver_tasks;




-- Procedure            : copy_structures_tasks_bulk
-- Type                 : PUBLIC
-- Purpose              : Contains logic for copying WP/FIN structures, versions and tasks alongwith
--                        intra and inter project dependencies, mapping, deliverables etc.
--                        All this is done only for the SELECTED or DEFAULTED versions that are present
--                        in the global temporary table PA_PROJECT_COPY_OPTIONS_TMP
-- Note                 : **** THIS API HAS BEEN RE-WRITTEN FOR FPM ****
-- Assumptions          : All FLAGS and WORKPLAN record(s) have been populated in the global temporary table
-- Parameters                    Type      Required  Description and Purpose
-- ---------------------------  ------     --------  --------------------------------------------------------
-- p_src_project_id             NUMBER        Y      The source project id
-- p_dest_project_id            NUMBER        Y      The destination project id
-- p_delta                      NUMBER        N
-- p_dest_template_flag         VARCHAR2      N      Whether destination is a template or not
-- p_dest_project_name          VARCHAR2      Y      The name of the destination project
-- p_target_start_date          DATE          Y      The start date of the destination project
-- p_target_finish_date         DATE          Y      The finish date of the destination project
-- p_calendar_id                NUMBER        Y      The calendar id
PROCEDURE copy_structures_tasks_bulk
( p_api_version                  IN  NUMBER      := 1.0
 ,p_commit                       IN  VARCHAR2    := FND_API.G_FALSE
 ,p_init_msg_list                IN  VARCHAR2    := FND_API.G_TRUE
 ,p_validate_only                IN  VARCHAR2    := FND_API.G_FALSE
 ,p_validation_level             IN  VARCHAR2    := FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module               IN  VARCHAR2    := 'SELF_SERVICE'
 ,p_debug_mode                   IN  VARCHAR2    := 'N'
 ,p_max_msg_count                IN  NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_src_project_id               IN  NUMBER
 ,p_dest_project_id              IN  NUMBER
 ,p_delta                        IN  NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_copy_task_flag               IN  VARCHAR2    := 'Y'  /**NOT USED **/
 ,p_dest_template_flag           IN  VARCHAR2    := 'N'
 ,p_src_template_flag            IN  VARCHAR2    := 'N'  /**NOT USED **/
 ,p_dest_project_name            IN  VARCHAR2
 ,p_target_start_date            IN  DATE
 ,p_target_finish_date           IN  DATE
 ,p_calendar_id                  IN  NUMBER
 ,x_return_status                OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                    OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                     OUT NOCOPY VARCHAR2 )  IS --File.Sql.39 bug 4440895

--This cursor fetches the workplan structure attributes
CURSOR cur_get_wp_attr IS
SELECT ppwa.WP_ENABLE_VERSION_FLAG
FROM   pa_proj_workplan_attr   ppwa
      ,pa_proj_structure_types ppst
      ,pa_structure_types      pst
WHERE  ppwa.project_id = p_src_project_id
AND    ppwa.proj_element_id = ppst.proj_element_id
AND    ppst.structure_type_id = pst.structure_type_id
AND    pst.structure_type = 'WORKPLAN';

--This cursor determines if atleast one WP version has been selected by the user
CURSOR cur_min_one_wp_version_sel IS
SELECT 'Y'
FROM   dual
WHERE EXISTS( SELECT 'Y'
              FROM  PA_PROJECT_COPY_OPTIONS_TMP
              WHERE CONTEXT = 'WORKPLAN'
              AND   VERSION_ID IS NOT NULL) ;

--This cursor retrieves the values of various flags from the global temporary table
CURSOR cur_get_flag(c_flag_name IN VARCHAR2) IS
SELECT FLAG
FROM   PA_PROJECT_COPY_OPTIONS_TMP
WHERE  CONTEXT = c_flag_name ;

--This cursor is used to retrieve the destination project's WP/FIN structure id
CURSOR cur_get_dest_structure_id( c_structure_type IN VARCHAR2 ) IS
SELECT ppe.proj_element_id,
       ppe.attribute15
FROM   pa_proj_elements ppe,
       pa_proj_structure_types ppst,
       pa_structure_types pst
WHERE  ppe.project_id = p_dest_project_id
AND    ppe.object_type = 'PA_STRUCTURES'
AND    ppe.proj_element_id = ppst.proj_element_id
AND    ppst.structure_type_id = pst.structure_type_id
AND    pst.structure_type = c_structure_type ;

CURSOR cur_get_person_id(c_user_id NUMBER) IS
SELECT p.person_id
FROM   per_all_people_f p,
       fnd_user f
WHERE f.employee_id = p.person_id
AND   sysdate between p.effective_start_date and p.effective_end_date
AND   f.user_id = c_user_id;

--This cursor retrieves all the WP versions of the destination project
CURSOR cur_get_dest_wp_struc_versions(c_dest_wp_struc_id IN NUMBER) IS
SELECT ppev.element_version_id
      ,ppev.attribute15
      ,ppcot.flag
FROM   pa_proj_element_versions ppev,
       pa_project_copy_options_tmp ppcot
WHERE  ppev.project_id = p_dest_project_id
AND    ppev.proj_element_id = c_dest_wp_struc_id
AND    ppev.attribute15 = ppcot.version_id
AND    ppcot.context = 'WORKPLAN' ;

--This cursor gets the schedule start date from the source project
CURSOR cur_get_src_sch_st_date(c_project_id NUMBER, c_struc_ver_id NUMBER) IS
SELECT scheduled_start_date
FROM   pa_proj_elem_ver_schedule
WHERE project_id = c_project_id
AND   element_version_id = c_struc_ver_id;

CURSOR cur_get_working_ver_num(c_project_id NUMBER, c_proj_element_id NUMBER) IS
SELECT nvl(max(version_number),0)+1
  FROM pa_proj_elem_ver_structure
 WHERE project_id = c_project_id
   AND proj_element_id = c_proj_element_id
   AND status_code <> 'STRUCTURE_PUBLISHED';

--This cursor will retrieve the destination project's shared structure id
CURSOR cur_get_shared_struc_id IS
SELECT ppe.proj_element_id,
       ppe.attribute15
FROM  pa_proj_elements ppe
WHERE ppe.project_id = p_dest_project_id
AND   ppe.object_type = 'PA_STRUCTURES'
AND   PA_PROJ_ELEMENTS_UTILS.check_fin_or_wp_structure( ppe.proj_element_id ) = 'Y' ;

--This cursor will retrieve the single version id created for the shared structure
CURSOR cur_get_shared_ver_id IS
SELECT ppev.element_version_id
FROM   pa_proj_element_versions ppev
WHERE ppev.project_id = p_dest_project_id
AND   ppev.object_type = 'PA_STRUCTURES'
AND   PA_PROJ_ELEMENTS_UTILS.check_fin_or_wp_structure( ppev.proj_element_id ) = 'Y' ;

--This cursor gets the copied tasks' proj_element_id
CURSOR cur_get_copied_tasks( c_dest_parent_structure_id IN NUMBER ) IS
SELECT dest.attribute15     src_ppe_id,
       dest.proj_element_id dest_ppe_id
FROM   pa_proj_elements dest
WHERE  dest.project_id = p_dest_project_id
AND    dest.object_type = 'PA_TASKS'
AND    dest.parent_structure_id = c_dest_parent_structure_id  ;

--Bug 3387963 - Cursor to get destination and source project's organization id
CURSOR cur_get_carrying_out_org IS
SELECT old.carrying_out_organization_id,
       new.carrying_out_organization_id
FROM pa_projects_all old,
     pa_projects_all new
WHERE old.project_id = p_src_project_id
AND   new.project_id = p_dest_project_id;

/*Included by avaithia for Bug 3922019*/
CURSOR c_template_flag(l_prj_id IN NUMBER) IS
SELECT template_flag
FROM pa_projects_all
WHERE project_id = l_prj_id ;

CURSOR c_only_wp_ver_id(l_proj_id IN NUMBER) IS
SELECT ppv.element_version_id
  FROM pa_proj_element_versions ppv ,
       pa_proj_structure_types pps,
       pa_structure_types pst
 WHERE ppv.proj_element_id = pps.proj_element_id
   AND ppv.object_type = 'PA_STRUCTURES'
   AND pps.structure_type_id = pst.structure_type_id
   AND pst.structure_type = 'WORKPLAN'
   AND ppv.project_id = l_proj_id ;

l_template_flag         PA_PROJECTS_ALL.template_flag%TYPE ;
l_only_wp_ver_id        PA_PROJ_ELEMENT_VERSIONS.element_version_id%TYPE ;

/*End of declaration included by avaithia for Bug 3922019*/

l_old_proj_org_id       NUMBER;
l_new_proj_org_id       NUMBER;
-- End of code added for bug 3387963

l_return_status         VARCHAR2(1);
l_msg_count             NUMBER;
l_msg_data              VARCHAR2(250);
l_debug_mode            VARCHAR2(1);
l_data                  VARCHAR2(2000);
l_msg_index_out         NUMBER;
l_debug_level2          CONSTANT NUMBER := 2;
l_debug_level3          CONSTANT NUMBER := 3;
l_debug_level4          CONSTANT NUMBER := 4;
l_debug_level5          CONSTANT NUMBER := 5;

l_workplan_enabled      VARCHAR2(1) := 'N';
l_fin_enabled           VARCHAR2(1) := 'N';
l_dlv_enabled           VARCHAR2(1) := 'N';
l_shared                VARCHAR2(1) := 'N';
l_versioning_enabled    VARCHAR2(1) := 'N';
l_min_one_wp_ver_sel    VARCHAR2(1) := 'N';
l_fin_tasks_flag        VARCHAR2(1) := 'Y';

l_wp_deliverables_flag     VARCHAR2(1);
l_wp_dlv_item_det_flag     VARCHAR2(1);
l_wp_dlv_attach_flag       VARCHAR2(1);
l_wp_dlv_assoc_task_flag   VARCHAR2(1);

l_suffix                VARCHAR2(250);
l_append                VARCHAR2(10) := ': ';
l_name                  VARCHAR2(250);
l_user_id               NUMBER := FND_GLOBAL.USER_ID;
l_login_id              NUMBER := FND_GLOBAL.LOGIN_ID;
l_dest_wp_structure_id  NUMBER;
l_src_wp_structure_id   NUMBER;
l_dest_fn_structure_id  NUMBER;
l_src_fn_structure_id   NUMBER;
l_dest_shared_struc_id  NUMBER;
l_src_shared_struc_id   NUMBER;

l_publish_person_id         NUMBER;
l_cw_version_id             NUMBER(15)  := NULL;
l_dest_status_code          VARCHAR(150);
l_dest_latest_eff_pub_flag  VARCHAR2(1) := 'N';
l_dest_current_working_flag VARCHAR2(1) := 'N';
l_shared_make_working_copy  NUMBER(15);
l_new_wp_ver_id             NUMBER(15);
l_prefix                    VARCHAR2(240);

l_default_lat_pub_and_cw_flag VARCHAR2(1) := 'N';
l_delta                     NUMBER;
l_src_sch_st_date           DATE;
l_shared_dest_ver_id        NUMBER(15);
l_struc_ver_number          NUMBER;
l_dest_latest_pub_ver_id    NUMBER;
l_wp_task_attach_flag       VARCHAR2(1);
l_fn_task_attach_flag       VARCHAR2(1);

rec_dest_wp_struc_versions   cur_get_dest_wp_struc_versions%ROWTYPE;

--bug 3907862, start
l_struct_version_number           NUMBER;
--bug 3912603, Satish, start
x_pev_schedule_id     NUMBER;
check_str_sel_flag   VARCHAR2(1) := 'N';
--bug 3912603, Satish, end

cursor get_published_ver_num(c_project_id NUMBER, c_proj_element_id NUMBER) IS
select nvl(max(version_number),0)+1
from pa_proj_elem_ver_structure
where project_id = c_project_id
and proj_element_id = c_proj_element_id
and status_code = 'STRUCTURE_PUBLISHED';

cursor get_working_ver_num(c_project_id NUMBER, c_proj_element_id NUMBER) IS
select nvl(max(version_number),0)+1
from pa_proj_elem_ver_structure
where project_id = c_project_id
and proj_element_id = c_proj_element_id
and status_code <> 'STRUCTURE_PUBLISHED';
--bug 3907862, end

--3916763 Begin
CURSOR c_get_approval_options IS
    SELECT wp_approval_reqd_flag, wp_auto_publish_flag, wp_approver_source_id
    FROM PA_PROJ_WORKPLAN_ATTR ppwa
    , PA_PROJ_STRUCTURE_TYPES ppst
    , PA_STRUCTURE_TYPES pst
    WHERE ppwa.PROJECT_ID = p_src_project_id
    AND ppwa.PROJ_ELEMENT_ID = ppst.PROJ_ELEMENT_ID
    AND ppst.structure_type_id = pst.structure_type_id
    and pst.structure_type = 'WORKPLAN';
l_wp_approval_reqd_flag VARCHAR2(1);
l_wp_auto_publish_flag VARCHAR2(1);
l_wp_approver_source_id NUMBER;
l_submit_wf_required VARCHAR2(1);
l_submit_wf_str_version_id NUMBER;
l_submit_wf_str_id NUMBER;
l_puc_version_id           NUMBER(15);
l_current_working_selected NUMBER(15) := NULL;
--3916763 End

/* Code added for 6211012*/

TYPE typ_obj_rela_id is TABLE OF pa_object_relationships.object_relationship_id%TYPE
INDEX BY BINARY_INTEGER;
l_obj_rel_id typ_obj_rela_id;

TYPE typ_obj_typ_from is TABLE OF pa_object_relationships.object_type_from%TYPE
INDEX BY BINARY_INTEGER;
l_obj_typ_from typ_obj_typ_from;

TYPE typ_obj_from_id is TABLE OF pa_object_relationships.object_id_from1%TYPE
INDEX BY BINARY_INTEGER;
l_obj_from_id typ_obj_from_id;

TYPE typ_obj_typ_to is TABLE OF pa_object_relationships.object_type_to%TYPE
INDEX BY BINARY_INTEGER;
l_obj_typ_to typ_obj_typ_to;

TYPE typ_obj_to_id is TABLE OF pa_object_relationships.object_id_to1%TYPE
INDEX BY BINARY_INTEGER;
l_obj_to_id typ_obj_to_id;

TYPE typ_rel_typ is TABLE OF pa_object_relationships.relationship_type%TYPE
INDEX BY BINARY_INTEGER;
l_rel_typ typ_rel_typ;

TYPE typ_rel_subtyp is TABLE OF pa_object_relationships.relationship_subtype%TYPE
INDEX BY BINARY_INTEGER;
l_rel_subtyp typ_rel_subtyp;

TYPE typ_rec_ver_num is TABLE OF pa_object_relationships.Record_Version_Number%TYPE
INDEX BY BINARY_INTEGER;
l_rec_ver_num typ_rec_ver_num;

TYPE typ_wt_percent is TABLE OF pa_object_relationships.weighting_percentage%TYPE
INDEX BY BINARY_INTEGER;
l_wt_percent typ_wt_percent;


CURSOR cur_pa_obj_rela_2(c_src_str_version_id NUMBER,
		       c_struc_version_id NUMBER
		       ) IS
SELECT /*+ USE_HASH(ppev2 ppev1)*/
     pa_object_relationships_s.nextval,
     pobj.object_type_from,
     ppev1.element_version_id,
     pobj.object_type_to,
     ppev2.element_version_id,
     pobj.relationship_type,
     pobj.relationship_subtype,
     pobj.Record_Version_Number,
     pobj.weighting_percentage
FROM ( SELECT  object_type_from, object_id_from1,
               object_type_to,   object_id_to1,
               relationship_type, relationship_subtype,
               Record_Version_Number, weighting_percentage
       FROM pa_object_relationships
       START WITH object_id_from1 = c_src_str_version_id
             AND  RELATIONSHIP_TYPE = 'S'
             CONNECT BY  object_id_from1 =  PRIOR object_id_to1
             AND  RELATIONSHIP_TYPE = 'S' ) pobj,
            pa_proj_element_versions ppev1,
            pa_proj_element_versions ppev2
       WHERE ppev1.attribute15 = pobj.object_id_from1
       AND   ppev2.attribute15 = pobj.object_id_to1
       AND   ppev1.parent_structure_version_id = c_struc_version_id
       AND   ppev2.parent_structure_version_id = c_struc_version_id ;

/*End of Code added for 6211012*/

BEGIN

     x_msg_count := 0;
     x_return_status := FND_API.G_RET_STS_SUCCESS;
     l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

     IF (p_commit = FND_API.G_TRUE) THEN
        SAVEPOINT copy_struc_tasks_bulk;
     END IF;

     IF p_init_msg_list = FND_API.G_TRUE THEN
          FND_MSG_PUB.initialize;
     END IF;

     IF l_debug_mode = 'Y' THEN
        PA_DEBUG.set_curr_function( p_function   => 'copy_structures_tasks_bulk',
                                    p_debug_mode => l_debug_mode );
     END IF;

     IF l_debug_mode = 'Y' THEN
        Pa_Debug.g_err_stage:= 'Printing Input parameters';
        Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_src_project_id'||':'||p_src_project_id,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_dest_project_id'||':'||p_dest_project_id,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_delta'||':'||p_delta,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_copy_task_flag'||':'||p_copy_task_flag,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_dest_template_flag'||':'||p_dest_template_flag,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_src_template_flag'||':'||p_src_template_flag,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_dest_project_name'||':'||p_dest_project_name,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_target_start_date'||':'||p_target_start_date,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_target_finish_date'||':'||p_target_finish_date,
                                   l_debug_level3);

        Pa_Debug.WRITE(G_PKG_NAME,'p_calendar_id'||':'||p_calendar_id,
                                   l_debug_level3);
     END IF;

    --If source and destination project are the same
    IF p_src_project_id = p_dest_project_id THEN
        x_return_status := FND_API.G_RET_STS_SUCCESS;
        RETURN;
    END IF;

    --Check whether WP structure is enabled for the source project
    l_workplan_enabled := PA_PROJECT_STRUCTURE_UTILS.check_workplan_enabled( p_src_project_id );
    --Check whether Financial structure is enabled for the source project
    l_fin_enabled      := PA_PROJECT_STRUCTURE_UTILS.check_financial_enabled( p_src_project_id );
    IF NVL( l_workplan_enabled, 'N' ) = 'Y' THEN
        --Check whether the structures are shared or not in the source project
        l_shared := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(p_src_project_id);
        --Retrieve whether versioning is enabled or not
        OPEN  cur_get_wp_attr;
        FETCH cur_get_wp_attr INTO l_versioning_enabled;
        CLOSE cur_get_wp_attr;
    END IF;

    --Check whether deliverables is enabled
    l_dlv_enabled := PA_PROJECT_STRUCTURE_UTILS.check_Deliverable_enabled(p_src_project_id);

    --If deliverables is enabled, retrieve the various deliverables flags
    IF 'Y' = l_dlv_enabled  THEN
        OPEN  cur_get_flag('WP_DELIVERABLES_FLAG');
        FETCH cur_get_flag INTO l_wp_deliverables_flag;
        CLOSE cur_get_flag;

        OPEN  cur_get_flag('WP_DLV_ITEM_DET_FLAG');
        FETCH cur_get_flag INTO l_wp_dlv_item_det_flag;
        CLOSE cur_get_flag;

        OPEN  cur_get_flag('WP_DLV_ATTACH_FLAG');
        FETCH cur_get_flag INTO l_wp_dlv_attach_flag;
        CLOSE cur_get_flag;

        OPEN  cur_get_flag('WP_DLV_ASSOC_TASK_FLAG');
        FETCH cur_get_flag INTO l_wp_dlv_assoc_task_flag;
        CLOSE cur_get_flag;
    END IF;

    --If both workplan and financial structures are disabled, we only need to copy deliverables and return
    IF 'N' = l_workplan_enabled AND 'N' = l_fin_enabled THEN
        --If deliverables is enabled and deliverables are selected for copying
        IF ( 'Y' = l_dlv_enabled AND 'Y' = l_wp_deliverables_flag ) THEN

            PA_DELIVERABLE_PUB.copy_deliverables
             (p_source_project_id    => p_src_project_id
             ,p_target_project_id    => p_dest_project_id
             ,p_item_details_flag    => l_wp_dlv_item_det_flag
             ,p_dlv_actions_flag     => 'Y'
             ,p_dlv_attachments_flag => l_wp_dlv_attach_flag
             ,p_association_flag     => l_wp_dlv_assoc_task_flag
             ,p_prefix               => 'CP'
             ,p_delta                => p_delta
             ,p_calling_context      => 'COPY_PROJECT'
             ,x_return_status        => x_return_status
             ,x_msg_count            => x_msg_count
             ,x_Msg_data             => x_msg_data
             );

            IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
             RAISE FND_API.G_EXC_ERROR;
            END IF;

            --Update back the attributes column in pa_proj_elements and pa_proj_element_versions with actual data from source project
            UPDATE pa_proj_elements ppe1
            SET attribute15 = ( SELECT attribute15 FROM pa_proj_elements ppe2
                                 WHERE ppe2.project_id = p_src_project_id
                                   AND ppe2.proj_element_id = ppe1.attribute15 )
            WHERE project_id = p_dest_project_id ;

            UPDATE pa_proj_element_versions ppevs1
            SET attribute15 = ( SELECT attribute15 FROM pa_proj_element_versions ppevs2
                                 WHERE ppevs2.project_id = p_src_project_id
                                   AND ppevs2.element_version_id = ppevs1.attribute15 )
            WHERE project_id = p_dest_project_id ;

        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS ;

        IF (p_commit = FND_API.G_TRUE) THEN
            COMMIT;
        END IF;

        RETURN;
    END IF;

    --Check whether atleast one WP version has been selected by the user or not
    OPEN  cur_min_one_wp_version_sel;
    FETCH cur_min_one_wp_version_sel INTO l_min_one_wp_ver_sel;
    CLOSE cur_min_one_wp_version_sel;

    --Check whether the financial tasks flag is checked or not
    OPEN  cur_get_flag('FN_FIN_TASKS_FLAG');
    FETCH cur_get_flag INTO l_fin_tasks_flag;
    CLOSE cur_get_flag;

    -------------------------------------------------------------------------------------------------------
    /**** THE FOLLOWING SECTION INSERTS WORKPLAN AND FINANCIAL STRUCTURES AND RELATED ATTRIBUTES INTO THE
          DESTINATION PROJECT ****/
    -------------------------------------------------------------------------------------------------------

    l_name := substr(p_dest_project_name, 1, 240);

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'Atleast one WP ver selected : '||l_min_one_wp_ver_sel, l_debug_level3);
        Pa_Debug.WRITE(G_PKG_NAME, 'Financial Tasks flag : '||l_fin_tasks_flag, l_debug_level3);
    END IF;

    --Copy workplan/financial structures into the destination project
    INSERT INTO pa_proj_elements(
     PROJ_ELEMENT_ID
    ,PROJECT_ID
    ,OBJECT_TYPE
    ,ELEMENT_NUMBER
    ,NAME
    ,DESCRIPTION
    ,STATUS_CODE
    ,WF_STATUS_CODE
    ,PM_SOURCE_CODE
    ,PM_SOURCE_REFERENCE
    ,CLOSED_DATE
    ,LOCATION_ID
    ,MANAGER_PERSON_ID
    ,CARRYING_OUT_ORGANIZATION_ID
    ,TYPE_ID
    ,PRIORITY_CODE
    ,CREATION_DATE
    ,CREATED_BY
    ,LAST_UPDATE_DATE
    ,LAST_UPDATED_BY
    ,LAST_UPDATE_LOGIN
    ,RECORD_VERSION_NUMBER
    ,REQUEST_ID
    ,PROGRAM_APPLICATION_ID
    ,PROGRAM_ID
    ,PROGRAM_UPDATE_DATE
    ,LINK_TASK_FLAG
    ,BASELINE_START_DATE
    ,BASELINE_FINISH_DATE
    ,PROGRESS_OUTDATED_FLAG
    ,ATTRIBUTE_CATEGORY
    ,ATTRIBUTE1
    ,ATTRIBUTE2
    ,ATTRIBUTE3
    ,ATTRIBUTE4
    ,ATTRIBUTE5
    ,ATTRIBUTE6
    ,ATTRIBUTE7
    ,ATTRIBUTE8
    ,ATTRIBUTE9
    ,ATTRIBUTE10
    ,ATTRIBUTE11
    ,ATTRIBUTE12
    ,ATTRIBUTE13
    ,ATTRIBUTE14
    ,ATTRIBUTE15
    ,PARENT_STRUCTURE_ID
    ,TYPE_CODE
    ,INC_PROJ_PROGRESS_FLAG
    ,WQ_ITEM_CODE
    ,WQ_UOM_CODE
    ,WQ_ACTUAL_ENTRY_CODE
    ,TASK_PROGRESS_ENTRY_PAGE_ID
    ,BASELINE_DURATION
    ,PHASE_CODE
    ,PHASE_VERSION_ID
    ,PROGRESS_WEIGHT
    ,BASE_PERCENT_COMP_DERIV_CODE
    ,FUNCTION_CODE
    ,ENABLE_WF_FLAG
    ,WF_ITEM_TYPE
    ,WF_PROCESS
    ,WF_START_LEAD_DAYS
    ,source_object_id
    ,source_object_type
    )
    SELECT
     pa_tasks_s.nextval
    ,p_dest_project_id
    ,ppe.object_type
    ,pa_tasks_s.nextval     --Set element_number same as proj_element_id
    ,l_name
    ,ppe.DESCRIPTION
    ,ppe.STATUS_CODE
    ,ppe.WF_STATUS_CODE
    ,NULL                   --bug 3810263 replacing ppe.PM_SOURCE_CODE
    ,NULL                   --bug 3810263 replacing ppe.PM_SOURCE_REFERENCE
    ,ppe.CLOSED_DATE
    ,ppe.LOCATION_ID
    ,ppe.MANAGER_PERSON_ID
    ,ppe.CARRYING_OUT_ORGANIZATION_ID
    ,ppe.TYPE_ID
    ,ppe.PRIORITY_CODE
    ,SYSDATE
    ,l_user_id
    ,SYSDATE
    ,l_user_id
    ,l_login_id
    ,ppe.RECORD_VERSION_NUMBER
    ,ppe.REQUEST_ID
    ,ppe.PROGRAM_APPLICATION_ID
    ,ppe.PROGRAM_ID
    ,ppe.PROGRAM_UPDATE_DATE
    ,ppe.LINK_TASK_FLAG
    ,ppe.BASELINE_START_DATE
    ,ppe.BASELINE_FINISH_DATE
    ,'N'    --,ppe.progress_outdated_flag
    ,ppe.ATTRIBUTE_CATEGORY
    ,ppe.ATTRIBUTE1
    ,ppe.ATTRIBUTE2
    ,ppe.ATTRIBUTE3
    ,ppe.ATTRIBUTE4
    ,ppe.ATTRIBUTE5
    ,ppe.ATTRIBUTE6
    ,ppe.ATTRIBUTE7
    ,ppe.ATTRIBUTE8
    ,ppe.ATTRIBUTE9
    ,ppe.ATTRIBUTE10
    ,ppe.ATTRIBUTE11
    ,ppe.ATTRIBUTE12
    ,ppe.ATTRIBUTE13
    ,ppe.ATTRIBUTE14
    ,ppe.proj_element_id    --attribute 15 is used to store old structure id to identify the structure type
    ,null                   --parent_structure_id is NULL in case of structures
    ,ppe.TYPE_CODE
    ,ppe.INC_PROJ_PROGRESS_FLAG
    ,ppe.WQ_ITEM_CODE
    ,ppe.WQ_UOM_CODE
    ,ppe.WQ_ACTUAL_ENTRY_CODE
    ,ppe.TASK_PROGRESS_ENTRY_PAGE_ID
    ,ppe.BASELINE_DURATION
    ,ppe.PHASE_CODE
    ,ppe.PHASE_VERSION_ID
    ,ppe.PROGRESS_WEIGHT
    ,ppe.BASE_PERCENT_COMP_DERIV_CODE
    ,ppe.FUNCTION_CODE
    ,ppe.ENABLE_WF_FLAG    --'N'  Bug 3616964
    ,ppe.WF_ITEM_TYPE
    ,ppe.WF_PROCESS
    ,ppe.WF_START_LEAD_DAYS
    ,p_dest_project_id
    ,'PA_PROJECTS'
    FROM pa_proj_elements ppe
    WHERE ppe.project_id = p_src_project_id
    AND   ppe.proj_element_id IN
       ( SELECT ppe2.proj_element_id
           FROM  pa_proj_elements ppe2
                ,pa_proj_structure_types ppst
                ,pa_structure_types pst
          WHERE ppe2.project_id = p_src_project_id
            AND ppe2.object_type = 'PA_STRUCTURES'
            AND ppe2.proj_element_id = ppst.proj_element_id
            AND ppst.structure_type_id = pst.structure_type_id
            AND pst.structure_type IN ('WORKPLAN','FINANCIAL') );
    --DONOT use the fn call PA_PROJ_ELEMENTS_UTILS.check_fin_or_wp_structure( ppe.proj_element_id ) = 'Y' in above insert
    --Inner query is necessary rather than a straight join of three tables in the outer query bec in case of shared,
    --the same record from source project is returned twice.

    SELECT meaning INTO l_suffix
    FROM pa_lookups
    WHERE lookup_type = 'PA_STRUCTURE_TYPE_CLASS'
    AND   lookup_code = 'WORKPLAN';

    --If Split and Workplan enabled
    IF 'N' = l_shared AND 'Y' = l_workplan_enabled THEN
        --Update the name of the WP structure record
        UPDATE pa_proj_elements ppe
        SET    name = substr(p_dest_project_name||l_append||l_suffix, 1, 240)
        WHERE project_id = p_dest_project_id
        AND   object_type = 'PA_STRUCTURES'
        AND   EXISTS ( SELECT proj_element_id FROM pa_proj_structure_types
                       WHERE proj_element_id = ppe.proj_element_id
                       AND   structure_type_id = 1 );
    END IF;

    --Copy entries in pa_proj_structure_types for financial and workplan structures
    INSERT INTO PA_PROJ_STRUCTURE_TYPES(
     PROJ_STRUCTURE_TYPE_ID
    ,PROJ_ELEMENT_ID
    ,STRUCTURE_TYPE_ID
    ,CREATION_DATE
    ,CREATED_BY
    ,LAST_UPDATE_DATE
    ,LAST_UPDATED_BY
    ,LAST_UPDATE_LOGIN
    ,RECORD_VERSION_NUMBER )
    SELECT
     pa_proj_structure_types_s.nextval
    ,ppe.proj_element_id
    ,ppst.structure_type_id            --structure type
    ,sysdate
    ,l_user_id
    ,sysdate
    ,l_user_id
    ,l_login_id
    ,1
    FROM pa_proj_elements ppe,
         pa_proj_structure_types ppst
    WHERE ppe.project_id = p_dest_project_id
    AND   ppe.attribute15 IN        --DoNot use PA_PROJ_ELEMENTS_UTILS.check_fin_or_wp_structure( ppe.attribute15 ) = 'Y'
       ( SELECT ppe2.proj_element_id
           FROM  pa_proj_elements ppe2
                ,pa_proj_structure_types ppst
                ,pa_structure_types pst
          WHERE ppe2.project_id = p_src_project_id
            AND ppe2.object_type = 'PA_STRUCTURES'
            AND ppe2.proj_element_id = ppst.proj_element_id
            AND ppst.structure_type_id = pst.structure_type_id
            AND pst.structure_type IN ('WORKPLAN','FINANCIAL') )
    AND   ppe.attribute15 = ppst.proj_element_id ; --proj_element_id is unique in pa_proj_structure_types

    --Copy workplan attributes for financial and workplan structures
    INSERT INTO pa_proj_workplan_attr(
     PROJ_ELEMENT_ID
    ,PROJECT_ID
    ,LAST_UPDATE_DATE
    ,LAST_UPDATED_BY
    ,CREATION_DATE
    ,CREATED_BY
    ,WP_APPROVAL_REQD_FLAG
    ,WP_AUTO_PUBLISH_FLAG
    ,WP_DEFAULT_DISPLAY_LVL
    ,WP_ENABLE_VERSION_FLAG
    ,AUTO_PUB_UPON_CREATION_FLAG
    ,AUTO_SYNC_TXN_DATE_FLAG
    ,WP_APPROVER_SOURCE_ID
    ,WP_APPROVER_SOURCE_TYPE
    ,RECORD_VERSION_NUMBER
    ,LAST_UPDATE_LOGIN
    ,TXN_DATE_SYNC_BUF_DAYS
    ,LIFECYCLE_VERSION_ID
    ,CURRENT_PHASE_VERSION_ID
    ,SCHEDULE_THIRD_PARTY_FLAG
    ,ALLOW_LOWEST_TSK_DEP_FLAG
--    ,PROGRAM_FLAG
    ,AUTO_ROLLUP_SUBPROJ_FLAG
    ,THIRD_PARTY_SCHEDULE_CODE
    ,source_object_id
    ,source_object_type
    -- gboomina added for bug 8586393 - start
    ,use_task_schedule_flag
    -- gboomina added for bug 8586393 - end
    )
    SELECT
     ppe.PROJ_ELEMENT_ID
    ,ppe.PROJECT_ID
    ,SYSDATE
    ,l_user_id
    ,SYSDATE
    ,l_user_id
    ,ppwa.WP_APPROVAL_REQD_FLAG
    ,ppwa.WP_AUTO_PUBLISH_FLAG
    ,ppwa.WP_DEFAULT_DISPLAY_LVL
    ,ppwa.WP_ENABLE_VERSION_FLAG
    ,ppwa.AUTO_PUB_UPON_CREATION_FLAG
    ,ppwa.AUTO_SYNC_TXN_DATE_FLAG
    ,ppwa.WP_APPROVER_SOURCE_ID
    ,ppwa.WP_APPROVER_SOURCE_TYPE
    ,ppwa.RECORD_VERSION_NUMBER
    ,l_login_id
    ,ppwa.TXN_DATE_SYNC_BUF_DAYS
    ,ppwa.LIFECYCLE_VERSION_ID
    ,ppwa.CURRENT_PHASE_VERSION_ID
    ,ppwa.SCHEDULE_THIRD_PARTY_FLAG
    ,ppwa.ALLOW_LOWEST_TSK_DEP_FLAG
--    ,ppwa.PROGRAM_FLAG
    ,ppwa.AUTO_ROLLUP_SUBPROJ_FLAG
    ,ppwa.THIRD_PARTY_SCHEDULE_CODE
    ,ppe.PROJECT_ID
    ,'PA_PROJECTS'
    -- gboomina added for bug 8586393 - start
    ,ppwa.use_task_schedule_flag
    -- gboomina added for bug 8586393 - end
    FROM pa_proj_elements ppe,
         pa_proj_workplan_attr ppwa
    WHERE ppwa.project_id = p_src_project_id
    AND   ppe.attribute15 = ppwa.proj_element_id
    AND   PA_PROJ_ELEMENTS_UTILS.check_fin_or_wp_structure( ppe.proj_element_id ) = 'Y'
    AND   ppe.project_id = p_dest_project_id   --bug 3939786
    ;

    --Copy progress attributes for financial and workplan structures
    INSERT INTO pa_proj_progress_attr(
     PROJ_PROGRESS_ATTR_ID
    ,OBJECT_TYPE
    ,OBJECT_ID
    ,LAST_UPDATE_DATE
    ,LAST_UPDATED_BY
    ,CREATION_DATE
    ,CREATED_BY
    ,LAST_UPDATE_LOGIN
    ,PROJECT_ID
    ,PROGRESS_CYCLE_ID
    ,WQ_ENABLE_FLAG
    ,REMAIN_EFFORT_ENABLE_FLAG
    ,PERCENT_COMP_ENABLE_FLAG
    ,NEXT_PROGRESS_UPDATE_DATE
    ,RECORD_VERSION_NUMBER
    ,TASK_WEIGHT_BASIS_CODE
    ,ALLOW_COLLAB_PROG_ENTRY
    ,ALLOW_PHY_PRCNT_CMP_OVERRIDES
    ,STRUCTURE_TYPE
    )
    SELECT
     PA_PROJ_PROGRESS_ATTR_S.nextval
    ,ppe.OBJECT_TYPE
    ,ppe.proj_element_ID
    ,sysdate
    ,l_user_id
    ,SYSDATE
    ,l_user_id
    ,l_login_id
    ,p_dest_project_id
    ,pppa.PROGRESS_CYCLE_ID
    ,pppa.WQ_ENABLE_FLAG
    ,pppa.REMAIN_EFFORT_ENABLE_FLAG
    ,pppa.PERCENT_COMP_ENABLE_FLAG
    ,pppa.NEXT_PROGRESS_UPDATE_DATE
    ,pppa.RECORD_VERSION_NUMBER
    ,pppa.TASK_WEIGHT_BASIS_CODE
    ,pppa.ALLOW_COLLAB_PROG_ENTRY
    ,pppa.ALLOW_PHY_PRCNT_CMP_OVERRIDES
    ,pppa.STRUCTURE_TYPE
    FROM pa_proj_progress_attr pppa,
         pa_proj_elements ppe
    WHERE ppe.project_id = p_dest_project_id
    AND   PA_PROJ_ELEMENTS_UTILS.check_fin_or_wp_structure( ppe.proj_element_id ) = 'Y'
    AND   ppe.attribute15 = pppa.object_id
    AND   pppa.project_id = p_src_project_id
    AND   pppa.object_type = 'PA_STRUCTURES' ;

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'After inserting WP/FIN structures and related attributes', l_debug_level3);
    END IF;

    ---------------------------------------------------------------------------------------------------------
    /**** THE FOLLOWING SECTION COPIES/INSERTS WORKPLAN VERSIONS AND TASKS INTO THE DESTINATION PROJECT ****/
    ---------------------------------------------------------------------------------------------------------
--IF 'ATLEAST ONE WP VER IS SELECTED' FOR COPYING THEN
--  Copy selected version(s) and tasks belonging to these version(s)
--  Call API to sync up pa_tasks with pa_proj_elements in case of SHARED structure
--ELSE (if no WP ver selected for copying)
--  IF 'SHARED' AND 'FINANCIAL TASKS FLAG IS CHECKED' THEN
--      Copy financial structure version in the source project and tasks belonging to this version
--  ENF IF;
--  IF ('SHARED' AND 'FINANCAIL TASKS FLAG IS NOT CHECKED') OR (SPLIT AND WORKPLAN ENABLED) THEN
--      Insert new (default) structure version for WP
--  END IF;
--END IF;

    --Get the destination project's wp structure id
    OPEN  cur_get_dest_structure_id('WORKPLAN');
    FETCH cur_get_dest_structure_id INTO l_dest_wp_structure_id, l_src_wp_structure_id;
    CLOSE cur_get_dest_structure_id;

    --Get the destination project's financial structure id
    OPEN  cur_get_dest_structure_id('FINANCIAL');
    FETCH cur_get_dest_structure_id INTO l_dest_fn_structure_id, l_src_fn_structure_id;
    CLOSE cur_get_dest_structure_id;

    --Get the publish person id
    OPEN cur_get_person_id(FND_GLOBAL.USER_ID);
    FETCH cur_get_person_id INTO l_publish_person_id;
        IF cur_get_person_id%NOTFOUND THEN
            l_publish_person_id := NULL;
        END IF;
    CLOSE cur_get_person_id;

     --Bug 3387963 - Added to get the cursor values
    OPEN  cur_get_carrying_out_org;
    FETCH cur_get_carrying_out_org INTO l_old_proj_org_id, l_new_proj_org_id;
    CLOSE cur_get_carrying_out_org;



    --If there is atleast one WP version selected for copying
    IF 'Y' = nvl(l_min_one_wp_ver_sel,'N') THEN

        IF l_debug_mode = 'Y' THEN
            Pa_Debug.WRITE(G_PKG_NAME, 'Inserting versions and tasks for selected WP version(s)', l_debug_level3);
        END IF;

        --Copy SELECTED workplan versions
        INSERT INTO pa_proj_element_versions(
         ELEMENT_VERSION_ID
        ,PROJ_ELEMENT_ID
        ,OBJECT_TYPE
        ,PROJECT_ID
        ,PARENT_STRUCTURE_VERSION_ID
        ,DISPLAY_SEQUENCE
        ,WBS_LEVEL
        ,WBS_NUMBER
        ,CREATION_DATE
        ,CREATED_BY
        ,LAST_UPDATE_DATE
        ,LAST_UPDATED_BY
        ,LAST_UPDATE_LOGIN
        ,RECORD_VERSION_NUMBER
        ,attribute15          --This column stores the stucture version id in the src project, to be used to create relationships.
        ,ATTRIBUTE_CATEGORY
        ,ATTRIBUTE1
        ,ATTRIBUTE2
        ,ATTRIBUTE3
        ,ATTRIBUTE4
        ,ATTRIBUTE5
        ,ATTRIBUTE6
        ,ATTRIBUTE7
        ,ATTRIBUTE8
        ,ATTRIBUTE9
        ,ATTRIBUTE10
        ,ATTRIBUTE11
        ,ATTRIBUTE12
        ,ATTRIBUTE13
        ,ATTRIBUTE14
        ,TASK_UNPUB_VER_STATUS_CODE
        ,FINANCIAL_TASK_FLAG
        ,PRG_GROUP
        ,PRG_LEVEL
        ,PRG_COUNT
       ,source_object_id
       ,source_object_type
        )
        SELECT
         pa_proj_element_versions_s.nextval
        ,l_dest_wp_structure_id
        ,ppev.object_type
        ,p_dest_project_id
        ,pa_proj_element_versions_s.nextval --nextval occuring twice in the same select returns the same value
        ,ppev.DISPLAY_SEQUENCE
        ,ppev.WBS_LEVEL
        ,ppev.WBS_NUMBER
        ,SYSDATE                    ------CREATION_DATE
        ,l_user_id                  ------CREATED_BY
        ,SYSDATE                    ------LAST_UPDATE_DATE
        ,l_user_id                  ------LAST_UPDATED_BY
        ,l_login_id                 ------LAST_UPDATE_LOGIN
        ,ppev.RECORD_VERSION_NUMBER ------RECORD_VERSION_NUMBER
        ,ppev.element_version_id
        ,ppev.ATTRIBUTE_CATEGORY
        ,ppev.ATTRIBUTE1
        ,ppev.ATTRIBUTE2
        ,ppev.ATTRIBUTE3
        ,ppev.ATTRIBUTE4
        ,ppev.ATTRIBUTE5
        ,ppev.ATTRIBUTE6
        ,ppev.ATTRIBUTE7
        ,ppev.ATTRIBUTE8
        ,ppev.ATTRIBUTE9
        ,ppev.ATTRIBUTE10
        ,ppev.ATTRIBUTE11
        ,ppev.ATTRIBUTE12
        ,ppev.ATTRIBUTE13
        ,ppev.ATTRIBUTE14
        ,ppev.TASK_UNPUB_VER_STATUS_CODE
        ,ppev.FINANCIAL_TASK_FLAG
        ,NULL --bug 4261419
        ,NULL --bug 4261419
        ,NULL --bug 4261419
    ,p_dest_project_id
    ,'PA_PROJECTS'
        FROM pa_proj_element_versions ppev,
             pa_project_copy_options_tmp ppcot
        WHERE ppcot.context = 'WORKPLAN'
         AND  ppev.element_version_id = ppcot.version_id
         AND  ppev.project_id = p_src_project_id
         AND  ppev.object_type = 'PA_STRUCTURES' ;

        /** THE FOLLOWING SECTION OF THE CODE IDENTIFIES THE CURRENT_WORKING VERSION IN THE DESTINATION PROJECT **/

        --IF current_working version from source is selected and is not published upon creation
        --      --> Copy the same as current_working in the destination project
        --IF current_working version from the source is not selected or it is publish upon creation
        --      --> Copy the lastest updated working WP version that is selected and is not publish upon creation
        --IF no working version is selected or the single selected working version is publish upon creation
        --      --> Copy the latest published version as current working, if it is selected and is not publish upon creation
        --      --> Else, copy the next latest published version which is selected and is not PUC, as current working
        IF 'Y' = l_versioning_enabled AND 'N' = p_dest_template_flag THEN
            DECLARE

            --This cursor gets the WP version which is selected for Publish Upon Creation
            CURSOR get_puc_version_id IS
            SELECT version_id
            FROM   pa_project_copy_options_tmp ppcot
            WHERE context = 'WORKPLAN'
            AND   flag = 'Y';

            --Gets the current working version of the source project ONLY if it has been SELECTED for copying
            CURSOR get_current_working_selected IS
            SELECT ppevs.element_version_id
            FROM pa_proj_elem_ver_structure ppevs,
                 pa_project_copy_options_tmp ppcot
            WHERE ppevs.current_working_flag = 'Y'
            AND   ppevs.status_code = 'STRUCTURE_WORKING'
            AND   ppevs.project_id = p_src_project_id
            AND   ppevs.element_version_id = ppcot.version_id
            AND   ppcot.context = 'WORKPLAN' ;

            --This cursor gets the LATEST UPDATED WORKING version from the src project, which is SELECTED for
            --copying and is NOT Publish Upon Creation
            CURSOR get_latest_working_version IS
            SELECT element_version_id FROM
            ( SELECT ppevs.element_version_id
              FROM pa_proj_elem_ver_structure ppevs,
                   pa_project_copy_options_tmp ppcot
              WHERE ppevs.element_version_id = ppcot.version_id
              AND   ppevs.project_id  = p_src_project_id
              AND   ppevs.status_code = 'STRUCTURE_WORKING'
              AND   ppcot.context = 'WORKPLAN'
              AND   ppcot.flag = 'N'
              ORDER BY ppevs.last_update_date desc)
            WHERE rownum = 1;

            --Gets the LATEST PUBLISHED VERSION from the source project, which is SELECTED for copying and is
            --NOT Publish Upon Creation
            CURSOR get_latest_published IS
            SELECT ppevs.element_version_id
            FROM pa_proj_elem_ver_structure ppevs,
                 pa_project_copy_options_tmp ppcot
            WHERE ppevs.latest_eff_published_flag = 'Y'
            AND   ppevs.status_code = 'STRUCTURE_PUBLISHED'
            AND   ppevs.element_version_id = ppcot.version_id
            AND   ppcot.context = 'WORKPLAN'
            AND   ppevs.project_id= p_src_project_id     --bug 4868867 sql id = 14909148
            AND   ppcot.flag = 'N' ;

            --Gets the LAST PUBLISHED version from the source project, which is SELECTED for copying but is
            --NOT selected for PUBLISH UPON CREATION
            CURSOR get_last_published IS
            SELECT element_version_id FROM
            ( SELECT ppevs.element_version_id
              FROM pa_proj_elem_ver_structure ppevs,
                   pa_project_copy_options_tmp ppcot
              WHERE ppevs.element_version_id = ppcot.version_id
              AND   ppevs.status_code = 'STRUCTURE_PUBLISHED'
              AND   ppevs.project_id = p_src_project_id
              AND   ppcot.context = 'WORKPLAN'
              AND   ppcot.flag = 'N'
              ORDER BY ppevs.published_date DESC )
            WHERE ROWNUM = 1;

            --l_puc_version_id           NUMBER(15); Bug 3916763 : Moved this variable outside so that it can be used ahead
            --l_current_working_selected NUMBER(15) := NULL; Bug 3916763 : Moved this variable outside so that it can be used ahead

            BEGIN

                --Fetch the version which is selected for PUBLISH UPON CREATION
                OPEN  get_puc_version_id;
                FETCH get_puc_version_id INTO l_puc_version_id;
                CLOSE get_puc_version_id;

                --Fetch the CURRENT WORKING version, if it has been SELECTED for copying
                OPEN  get_current_working_selected;
                FETCH get_current_working_selected INTO l_current_working_selected;

        IF l_debug_mode = 'Y' THEN
            pa_debug.write(G_PKG_NAME, 'l_puc_version_id='||l_puc_version_id, l_debug_level3);
            pa_debug.write(G_PKG_NAME, 'l_current_working_selected='||l_current_working_selected, l_debug_level3);
        END IF;


                --If the CURRENT WORKING version is SELECTED for copying and is NOT Publish Upon Creatiion
                IF l_current_working_selected IS NOT NULL AND l_current_working_selected <> nvl(l_puc_version_id,-88) THEN
                    l_cw_version_id := l_current_working_selected;
                ELSE
                    OPEN  get_latest_working_version;
                    FETCH get_latest_working_version INTO l_cw_version_id;
                    IF get_latest_working_version%NOTFOUND THEN
                        OPEN  get_latest_published;
                        FETCH get_latest_published INTO l_cw_version_id;
                        IF get_latest_published %NOTFOUND THEN
                            OPEN  get_last_published;
                            FETCH get_last_published INTO l_cw_version_id;
                            CLOSE get_last_published;
                        END IF;
                        CLOSE get_latest_published;
                    END IF;
                    CLOSE get_latest_working_version;
                END IF;
                CLOSE get_current_working_selected;

        IF l_debug_mode = 'Y' THEN
            pa_debug.write(G_PKG_NAME, 'l_cw_version_id='||l_cw_version_id, l_debug_level3);
        END IF;
            END;
        END IF; --IF versioning is enabled
        /** END OF CODE TO DETERMINE CURRENT WORKING VERSION IN DESTINATION PROJECT **/

        IF l_debug_mode = 'Y' THEN
            Pa_Debug.WRITE(G_PKG_NAME, 'Source version to be set as current working in dest project : '||l_cw_version_id,
                           l_debug_level3);
            Pa_Debug.WRITE(G_PKG_NAME, 'Printing  l_dest_wp_structure_id: '||l_dest_wp_structure_id,
                           l_debug_level3);
        END IF;


        --Loop for selected wp versions
        FOR rec_dest_wp_struc_versions IN cur_get_dest_wp_struc_versions(l_dest_wp_structure_id) LOOP

            IF rec_dest_wp_struc_versions.flag = 'Y' THEN
            --In case of versioning disabled, publish upon creation flag would always be 'Y'
                l_dest_status_code := 'STRUCTURE_PUBLISHED';
                l_dest_latest_eff_pub_flag  := 'Y';
                l_dest_current_working_flag := 'N';
                --We need to make a working copy of the published version in SHARED case and when
                --versioning is enabled, becuase in SHARED, it is not possible to create a WORKING copy from
                --a publshied version

                --Bug 7270458 Need to create a workign version if auto publish is enabled for versioning
                --enabled workplan.
                --IF 'Y' = l_shared AND 'Y' = l_versioning_enabled THEN
                IF 'Y' = l_versioning_enabled THEN  --Bug 7270458
                    l_shared_make_working_copy := rec_dest_wp_struc_versions.element_version_id;
                END IF;
        --3916763 Begin
        l_submit_wf_required := 'N';

        IF l_debug_mode = 'Y' THEN
            pa_debug.write(G_PKG_NAME, 'l_workplan_enabled='||l_workplan_enabled, l_debug_level3);
            pa_debug.write(G_PKG_NAME, 'l_versioning_enabled='||l_versioning_enabled, l_debug_level3);
            pa_debug.write(G_PKG_NAME, 'l_min_one_wp_ver_sel='||l_min_one_wp_ver_sel, l_debug_level3);
            pa_debug.write(G_PKG_NAME, 'l_cw_version_id='||l_cw_version_id, l_debug_level3);
            pa_debug.write(G_PKG_NAME, 'rec_dest_wp_struc_versions.attribute15='||rec_dest_wp_struc_versions.attribute15, l_debug_level3);
            pa_debug.write(G_PKG_NAME, 'l_shared='||l_shared, l_debug_level3);
            pa_debug.write(G_PKG_NAME, 'p_dest_template_flag='||p_dest_template_flag, l_debug_level3);
        END IF;

        IF NVL(l_workplan_enabled,'N') = 'Y' AND nvl(l_versioning_enabled,'N') = 'Y' AND nvl(l_min_one_wp_ver_sel,'N') = 'Y' THEN
            OPEN  c_get_approval_options;
            FETCH c_get_approval_options INTO l_wp_approval_reqd_flag, l_wp_auto_publish_flag,l_wp_approver_source_id;
            CLOSE c_get_approval_options;

            IF l_debug_mode = 'Y' THEN
               pa_debug.write(G_PKG_NAME, 'l_wp_approval_reqd_flag='||l_wp_approval_reqd_flag, l_debug_level3);
               pa_debug.write(G_PKG_NAME, 'l_wp_auto_publish_flag='||l_wp_auto_publish_flag, l_debug_level3);
               pa_debug.write(G_PKG_NAME, 'l_wp_approver_source_id='||l_wp_approver_source_id, l_debug_level3);
               pa_debug.write(G_PKG_NAME, 'fnd_global.employee_id='||fnd_global.employee_id, l_debug_level3);
            END IF;

            IF NVL(l_wp_approval_reqd_flag,'N') <> 'N' THEN
              IF nvl(fnd_global.employee_id,-999) <> NVL(l_wp_approver_source_id,-999) THEN
              -- 3916763 : Use fnd_global.employee_id instead of fnd_global.party_id
                l_submit_wf_required := 'Y';
                l_dest_status_code := 'STRUCTURE_WORKING';
                l_dest_latest_eff_pub_flag  := 'N';
                IF l_current_working_selected = nvl(l_puc_version_id,-88) OR 'Y' = l_shared OR 'Y' = p_dest_template_flag THEN
                    l_dest_current_working_flag := 'Y';
                ELSE
                    l_dest_current_working_flag := 'N';
                END IF;
                l_shared_make_working_copy  := null;
                l_submit_wf_str_version_id  := rec_dest_wp_struc_versions.element_version_id;
                l_submit_wf_str_id := l_dest_wp_structure_id;
              END IF;
            END IF;
        END IF;
        --3916763 End

        --bug 3907862, start
            OPEN get_published_ver_num(p_dest_project_id, l_dest_wp_structure_id);
            FETCH get_published_ver_num INTO l_struct_version_number;
            CLOSE get_published_ver_num;
        IF l_debug_mode = 'Y' THEN
               Pa_Debug.WRITE(G_PKG_NAME, 'After Getting published version l_struct_version_number: '||l_struct_version_number,
               l_debug_level3);
        END If;
        --bug 3907862, end

        ELSE
            --In case of creating template, Publish Upon Creation flag is always 'N'
                l_dest_status_code := 'STRUCTURE_WORKING';
                l_dest_latest_eff_pub_flag  := 'N';
                IF l_cw_version_id = rec_dest_wp_struc_versions.attribute15 OR 'Y' = l_shared OR 'Y' = p_dest_template_flag THEN
                    l_dest_current_working_flag := 'Y';
                ELSE
                    l_dest_current_working_flag := 'N';
                END IF;

        --bug 3907862, start
            OPEN get_working_ver_num(p_dest_project_id, l_dest_wp_structure_id);
            FETCH get_working_ver_num INTO l_struct_version_number;
            CLOSE get_working_ver_num;
        IF l_debug_mode = 'Y' THEN
            Pa_Debug.WRITE(G_PKG_NAME, 'After Getting working version l_struct_version_number: '||l_struct_version_number,
                             l_debug_level3);
        END If;
        --bug 3907862, end

        END IF;

            IF l_debug_mode = 'Y' THEN
                Pa_Debug.WRITE(G_PKG_NAME, 'Creating version : '||rec_dest_wp_struc_versions.element_version_id,
                               l_debug_level3);
             END IF;


            INSERT INTO PA_PROJ_ELEM_VER_STRUCTURE(
             PEV_STRUCTURE_ID
            ,ELEMENT_VERSION_ID
            ,VERSION_NUMBER
            ,NAME
            ,PROJECT_ID
            ,PROJ_ELEMENT_ID
            ,DESCRIPTION
            ,EFFECTIVE_DATE
            ,PUBLISHED_DATE
            ,PUBLISHED_BY_PERSON_ID
            ,CURRENT_BASELINE_DATE
            ,CURRENT_FLAG
            ,CURRENT_BASELINE_PERSON_ID
            ,ORIGINAL_BASELINE_DATE
            ,ORIGINAL_FLAG
            ,ORIGINAL_BASELINE_PERSON_ID
            ,LOCK_STATUS_CODE
            ,LOCKED_BY_PERSON_ID
            ,LOCKED_DATE
            ,STATUS_CODE
            ,WF_STATUS_CODE
            ,LATEST_EFF_PUBLISHED_FLAG
            ,RECORD_VERSION_NUMBER
            ,WBS_RECORD_VERSION_NUMBER
            ,CREATION_DATE
            ,CREATED_BY
            ,LAST_UPDATE_DATE
            ,LAST_UPDATED_BY
            ,LAST_UPDATE_LOGIN
            ,change_reason_code
            ,PROCESS_UPDATE_WBS_FLAG
            ,current_working_flag
           ,source_object_id
           ,source_object_type
            )
            SELECT
             pa_proj_elem_ver_structure_s.nextval
            ,rec_dest_wp_struc_versions.element_version_id
            --,ppevs.version_number   --bug 3907862, insert the new version number, intead of coying the old.
        ,l_struct_version_number
            ,ppevs.name
            ,p_dest_project_id
            ,ppe.proj_element_id
            ,ppevs.DESCRIPTION
            ,ppevs.EFFECTIVE_DATE
            ,decode(l_dest_status_code, 'STRUCTURE_PUBLISHED', sysdate, to_date(NULL))
            ,decode(l_dest_status_code, 'STRUCTURE_PUBLISHED', l_publish_person_id, NULL)
            ,decode(l_dest_latest_eff_pub_flag, 'Y', trunc(sysdate), to_date(NULL))
            ,l_dest_latest_eff_pub_flag
            ,decode(l_dest_latest_eff_pub_flag, 'Y', l_publish_person_id, NULL)
            ,decode(l_dest_latest_eff_pub_flag, 'Y', trunc(sysdate), to_date(NULL))
            ,l_dest_latest_eff_pub_flag
            ,decode(l_dest_latest_eff_pub_flag, 'Y', l_publish_person_id, NULL)
            ,'UNLOCKED'
            ,null
            ,null
            ,l_dest_status_code
            ,ppevs.WF_STATUS_CODE
            ,l_dest_latest_eff_pub_flag  --If version is 'publish upon creation', it is the latest eff published version
                                         --In case of version disabled, it'll always be 'publish upon creation'
            ,ppevs.RECORD_VERSION_NUMBER
            ,ppevs.WBS_RECORD_VERSION_NUMBER
            ,SYSDATE
            ,l_user_id
            ,SYSDATE
            ,l_user_id
            ,l_login_id
            ,ppevs.change_reason_code
            ,ppevs.process_update_wbs_flag
            ,decode(l_versioning_enabled,'N','Y',l_dest_current_working_flag)
                    --If versioning is disabled, both LATEST PUBLISHED AND CURRENT WORKING FLAGS are 'Y'
        ,p_dest_project_id
        ,'PA_PROJECTS'
            FROM pa_proj_elem_ver_structure ppevs,
                 pa_proj_elements ppe
            WHERE ppevs.project_id = p_src_project_id
            AND   ppevs.element_version_id = rec_dest_wp_struc_versions.attribute15
            AND   ppevs.proj_element_id = ppe.attribute15
            AND   ppe.proj_element_id = l_dest_wp_structure_id;
        END LOOP;

        --If it is a shared structure and the only WP version selected is Publish Upon Creation, then
        --create a working copy of the Published version
        IF l_shared_make_working_copy IS NOT NULL THEN
            SELECT pa_proj_element_versions_s.nextval INTO l_new_wp_ver_id
            FROM dual;

            SELECT meaning INTO l_prefix
            FROM   pa_lookups
            WHERE lookup_type = 'PA_STRUCTURES_PREFIX'
            AND   lookup_code = 'PA_PREFIX_COPY';

            IF l_debug_mode = 'Y' THEN
                Pa_Debug.WRITE(G_PKG_NAME, 'Making working copy of '||l_shared_make_working_copy,
                               l_debug_level3);
            END IF;

            --Make a copy of the published version
            INSERT INTO pa_proj_element_versions(
             ELEMENT_VERSION_ID
            ,PROJ_ELEMENT_ID
            ,OBJECT_TYPE
            ,PROJECT_ID
            ,PARENT_STRUCTURE_VERSION_ID
            ,DISPLAY_SEQUENCE
            ,WBS_LEVEL
            ,WBS_NUMBER
            ,CREATION_DATE
            ,CREATED_BY
            ,LAST_UPDATE_DATE
            ,LAST_UPDATED_BY
            ,LAST_UPDATE_LOGIN
            ,RECORD_VERSION_NUMBER
            ,attribute15          --This column stores the stucture version id in the src project, to be used to create relationships.
            ,ATTRIBUTE_CATEGORY
            ,ATTRIBUTE1
            ,ATTRIBUTE2
            ,ATTRIBUTE3
            ,ATTRIBUTE4
            ,ATTRIBUTE5
            ,ATTRIBUTE6
            ,ATTRIBUTE7
            ,ATTRIBUTE8
            ,ATTRIBUTE9
            ,ATTRIBUTE10
            ,ATTRIBUTE11
            ,ATTRIBUTE12
            ,ATTRIBUTE13
            ,ATTRIBUTE14
            ,TASK_UNPUB_VER_STATUS_CODE
            ,FINANCIAL_TASK_FLAG
           ,source_object_id
           ,source_object_type
            )
            SELECT
             l_new_wp_ver_id
            ,ppev.proj_element_id
            ,ppev.object_type
            ,ppev.project_id
            ,l_new_wp_ver_id
            ,ppev.DISPLAY_SEQUENCE
            ,ppev.WBS_LEVEL
            ,ppev.WBS_NUMBER
            ,SYSDATE                    ------CREATION_DATE
            ,l_user_id                  ------CREATED_BY
            ,SYSDATE                    ------LAST_UPDATE_DATE
            ,l_user_id                  ------LAST_UPDATED_BY
            ,l_login_id                 ------LAST_UPDATE_LOGIN
            ,ppev.RECORD_VERSION_NUMBER ------RECORD_VERSION_NUMBER
            ,ppev.attribute15
            ,ppev.ATTRIBUTE_CATEGORY
            ,ppev.ATTRIBUTE1
            ,ppev.ATTRIBUTE2
            ,ppev.ATTRIBUTE3
            ,ppev.ATTRIBUTE4
            ,ppev.ATTRIBUTE5
            ,ppev.ATTRIBUTE6
            ,ppev.ATTRIBUTE7
            ,ppev.ATTRIBUTE8
            ,ppev.ATTRIBUTE9
            ,ppev.ATTRIBUTE10
            ,ppev.ATTRIBUTE11
            ,ppev.ATTRIBUTE12
            ,ppev.ATTRIBUTE13
            ,ppev.ATTRIBUTE14
            ,ppev.TASK_UNPUB_VER_STATUS_CODE
            ,ppev.FINANCIAL_TASK_FLAG
        ,ppev.project_id
        ,'PA_PROJECTS'
            FROM pa_proj_element_versions ppev
            WHERE ppev.project_id = p_dest_project_id
            AND   ppev.element_version_id = l_shared_make_working_copy ;

            INSERT INTO PA_PROJ_ELEM_VER_STRUCTURE(
             PEV_STRUCTURE_ID
            ,ELEMENT_VERSION_ID
            ,VERSION_NUMBER
            ,NAME
            ,PROJECT_ID
            ,PROJ_ELEMENT_ID
            ,DESCRIPTION
            ,EFFECTIVE_DATE
            ,PUBLISHED_DATE
            ,PUBLISHED_BY_PERSON_ID
            ,CURRENT_BASELINE_DATE
            ,CURRENT_FLAG
            ,CURRENT_BASELINE_PERSON_ID
            ,ORIGINAL_BASELINE_DATE
            ,ORIGINAL_FLAG
            ,ORIGINAL_BASELINE_PERSON_ID
            ,LOCK_STATUS_CODE
            ,LOCKED_BY_PERSON_ID
            ,LOCKED_DATE
            ,STATUS_CODE
            ,WF_STATUS_CODE
            ,LATEST_EFF_PUBLISHED_FLAG
            ,RECORD_VERSION_NUMBER
            ,WBS_RECORD_VERSION_NUMBER
            ,CREATION_DATE
            ,CREATED_BY
            ,LAST_UPDATE_DATE
            ,LAST_UPDATED_BY
            ,LAST_UPDATE_LOGIN
            ,change_reason_code
            ,PROCESS_UPDATE_WBS_FLAG
            ,current_working_flag
           ,source_object_id
           ,source_object_type
            )
            SELECT
             pa_proj_elem_ver_structure_s.nextval
            ,l_new_wp_ver_id
            ,ppevs.version_number
            ,substr(l_prefix||ppevs.name, 1, 240)
            ,ppevs.project_id
            ,ppe.proj_element_id
            ,ppevs.DESCRIPTION
            ,ppevs.EFFECTIVE_DATE
            ,to_date(NULL)
            ,NULL
            ,to_date(NULL)
            ,'N'
            ,NULL
            ,to_date(NULL)
            ,'N'
            ,NULL
            ,'UNLOCKED'
            ,null
            ,null
            ,'STRUCTURE_WORKING'
            ,ppevs.WF_STATUS_CODE
            ,'N'
            ,ppevs.RECORD_VERSION_NUMBER
            ,ppevs.WBS_RECORD_VERSION_NUMBER
            ,SYSDATE
            ,l_user_id
            ,SYSDATE
            ,l_user_id
            ,l_login_id
            ,ppevs.change_reason_code
            ,ppevs.process_update_wbs_flag
            ,'Y'
        ,ppevs.project_id
        ,'PA_PROJECTS'
            FROM pa_proj_elem_ver_structure ppevs,
                 pa_proj_elements ppe
            WHERE ppevs.project_id = p_dest_project_id
            AND   ppevs.element_version_id = l_shared_make_working_copy
            AND   ppevs.proj_element_id = ppe.proj_element_id
            AND   ppe.proj_element_id = l_dest_wp_structure_id;

        END IF;--If l_shared_make_working_copy IS NOT NULL

        --Create tasks in the selected WP versions
        IF 'Y' = l_shared THEN
        --If SHARED case, join with PA_TASKS table
             INSERT INTO pa_proj_elements(
              PROJ_ELEMENT_ID
             ,PROJECT_ID
             ,OBJECT_TYPE
             ,ELEMENT_NUMBER
             ,NAME
             ,DESCRIPTION
             ,STATUS_CODE
             ,WF_STATUS_CODE
             ,PM_SOURCE_CODE
             ,PM_SOURCE_REFERENCE
             ,CLOSED_DATE
             ,LOCATION_ID
             ,MANAGER_PERSON_ID
             ,CARRYING_OUT_ORGANIZATION_ID
             ,TYPE_ID
             ,PRIORITY_CODE
             ,CREATION_DATE
             ,CREATED_BY
             ,LAST_UPDATE_DATE
             ,LAST_UPDATED_BY
             ,LAST_UPDATE_LOGIN
             ,RECORD_VERSION_NUMBER
             ,REQUEST_ID
             ,PROGRAM_APPLICATION_ID
             ,PROGRAM_ID
             ,PROGRAM_UPDATE_DATE
             ,LINK_TASK_FLAG
             ,BASELINE_START_DATE
             ,BASELINE_FINISH_DATE
             ,progress_outdated_flag
             ,ATTRIBUTE_CATEGORY
             ,ATTRIBUTE1
             ,ATTRIBUTE2
             ,ATTRIBUTE3
             ,ATTRIBUTE4
             ,ATTRIBUTE5
             ,ATTRIBUTE6
             ,ATTRIBUTE7
             ,ATTRIBUTE8
             ,ATTRIBUTE9
             ,ATTRIBUTE10
             ,ATTRIBUTE11
             ,ATTRIBUTE12
             ,ATTRIBUTE13
             ,ATTRIBUTE14
             ,ATTRIBUTE15
             ,parent_structure_id
             ,TYPE_CODE
             ,INC_PROJ_PROGRESS_FLAG
             ,WQ_ITEM_CODE
             ,WQ_UOM_CODE
             ,WQ_ACTUAL_ENTRY_CODE
             ,TASK_PROGRESS_ENTRY_PAGE_ID
             ,BASELINE_DURATION
             ,PHASE_CODE
             ,PHASE_VERSION_ID
             ,PROGRESS_WEIGHT
             ,BASE_PERCENT_COMP_DERIV_CODE
             ,FUNCTION_CODE
             ,ENABLE_WF_FLAG
             ,WF_ITEM_TYPE
             ,WF_PROCESS
             ,WF_START_LEAD_DAYS
            ,source_object_id
            ,source_object_type
             )
             SELECT
              nvl(pt.task_id,pa_tasks_s.nextval)
             ,p_dest_project_id
             ,ppe.object_type
             ,ppe.element_number
             ,ppe.name
             ,ppe.DESCRIPTION
             ,INITIAL_STATUS_CODE
             ,ppe.WF_STATUS_CODE
             ,NULL --bug 3810263 replacing ppe.PM_SOURCE_CODE
             ,NULL --bug 3810263 replacing ppe.PM_SOURCE_REFERENCE
             ,ppe.CLOSED_DATE
             ,ppe.LOCATION_ID
             ,ppe.MANAGER_PERSON_ID
             ,decode(ppe.CARRYING_OUT_ORGANIZATION_ID,l_old_proj_org_id, l_new_proj_org_id,
                     ppe.CARRYING_OUT_ORGANIZATION_ID) -- Bug 3387963
             ,ppe.TYPE_ID
             ,ppe.PRIORITY_CODE
             ,SYSDATE
             ,l_user_id
             ,SYSDATE
             ,l_user_id
             ,l_login_id
             ,ppe.RECORD_VERSION_NUMBER
             ,ppe.REQUEST_ID
             ,ppe.PROGRAM_APPLICATION_ID
             ,ppe.PROGRAM_ID
             ,ppe.PROGRAM_UPDATE_DATE
             ,ppe.LINK_TASK_FLAG
             ,ppe.BASELINE_START_DATE
             ,ppe.BASELINE_FINISH_DATE
             ,'N'     --,ppe.progress_outdated_flag
             ,ppe.ATTRIBUTE_CATEGORY
             ,ppe.ATTRIBUTE1
             ,ppe.ATTRIBUTE2
             ,ppe.ATTRIBUTE3
             ,ppe.ATTRIBUTE4
             ,ppe.ATTRIBUTE5
             ,ppe.ATTRIBUTE6
             ,ppe.ATTRIBUTE7
             ,ppe.ATTRIBUTE8
             ,ppe.ATTRIBUTE9
             ,ppe.ATTRIBUTE10
             ,ppe.ATTRIBUTE11
             ,ppe.ATTRIBUTE12
             ,ppe.ATTRIBUTE13
             ,ppe.ATTRIBUTE14
             ,ppe.proj_element_id    --attribute 15 is used to store old ids.
             ,l_dest_wp_structure_id
             ,ppe.TYPE_CODE
             ,ppe.INC_PROJ_PROGRESS_FLAG
             ,ppe.WQ_ITEM_CODE
             ,ppe.WQ_UOM_CODE
             ,ppe.WQ_ACTUAL_ENTRY_CODE
             ,ppe.TASK_PROGRESS_ENTRY_PAGE_ID
             ,ppe.BASELINE_DURATION
             ,ppe.PHASE_CODE
             ,ppe.PHASE_VERSION_ID
             ,ppe.PROGRESS_WEIGHT
             ,ppe.BASE_PERCENT_COMP_DERIV_CODE
             ,ppe.FUNCTION_CODE
             ,'N'
             ,ppe.WF_ITEM_TYPE
             ,ppe.WF_PROCESS
             ,ppe.WF_START_LEAD_DAYS
         ,p_dest_project_id
         ,'PA_PROJECTS'
             FROM pa_task_types ptt,
                  pa_tasks pt,
                  pa_proj_elements ppe
             WHERE ptt.object_type    = 'PA_TASKS'
             AND   ppe.type_id        = ptt.task_type_id
             AND   nvl(ppe.link_task_flag,'N') <> 'Y' -- 4348868
             AND   pt.task_number (+) = substrb(rtrim(ppe.element_number),1,25) -- Substrb added for Bug 5152448
             AND   pt.project_id  (+) = p_dest_project_id
             AND   ppe.proj_element_id IN
             ( SELECT distinct ppev.proj_element_id
               FROM   PA_PROJ_ELEMENT_VERSIONS ppev,
                      PA_PROJECT_COPY_OPTIONS_TMP ppcot
               WHERE  ppcot.CONTEXT = 'WORKPLAN'
               AND    ppev.parent_structure_version_id = ppcot.version_id
               AND    ppev.project_id = p_src_project_id
               AND    ppev.object_type = 'PA_TASKS' ) ;
        ELSE
        --If SPLIT case, there should be no join with PA_TASKS table
             INSERT INTO pa_proj_elements(
              PROJ_ELEMENT_ID
             ,PROJECT_ID
             ,OBJECT_TYPE
             ,ELEMENT_NUMBER
             ,NAME
             ,DESCRIPTION
             ,STATUS_CODE
             ,WF_STATUS_CODE
             ,PM_SOURCE_CODE
             ,PM_SOURCE_REFERENCE
             ,CLOSED_DATE
             ,LOCATION_ID
             ,MANAGER_PERSON_ID
             ,CARRYING_OUT_ORGANIZATION_ID
             ,TYPE_ID
             ,PRIORITY_CODE
             ,CREATION_DATE
             ,CREATED_BY
             ,LAST_UPDATE_DATE
             ,LAST_UPDATED_BY
             ,LAST_UPDATE_LOGIN
             ,RECORD_VERSION_NUMBER
             ,REQUEST_ID
             ,PROGRAM_APPLICATION_ID
             ,PROGRAM_ID
             ,PROGRAM_UPDATE_DATE
             ,LINK_TASK_FLAG
             ,BASELINE_START_DATE
             ,BASELINE_FINISH_DATE
             ,progress_outdated_flag
             ,ATTRIBUTE_CATEGORY
             ,ATTRIBUTE1
             ,ATTRIBUTE2
             ,ATTRIBUTE3
             ,ATTRIBUTE4
             ,ATTRIBUTE5
             ,ATTRIBUTE6
             ,ATTRIBUTE7
             ,ATTRIBUTE8
             ,ATTRIBUTE9
             ,ATTRIBUTE10
             ,ATTRIBUTE11
             ,ATTRIBUTE12
             ,ATTRIBUTE13
             ,ATTRIBUTE14
             ,ATTRIBUTE15
             ,parent_structure_id
             ,TYPE_CODE
             ,INC_PROJ_PROGRESS_FLAG
             ,WQ_ITEM_CODE
             ,WQ_UOM_CODE
             ,WQ_ACTUAL_ENTRY_CODE
             ,TASK_PROGRESS_ENTRY_PAGE_ID
             ,BASELINE_DURATION
             ,PHASE_CODE
             ,PHASE_VERSION_ID
             ,PROGRESS_WEIGHT
             ,BASE_PERCENT_COMP_DERIV_CODE
             ,FUNCTION_CODE
             ,ENABLE_WF_FLAG
             ,WF_ITEM_TYPE
             ,WF_PROCESS
             ,WF_START_LEAD_DAYS
            ,source_object_id
            ,source_object_type
             )
             SELECT
              pa_tasks_s.nextval
             ,p_dest_project_id
             ,ppe.object_type
             ,ppe.element_number
             ,ppe.name
             ,ppe.DESCRIPTION
             ,INITIAL_STATUS_CODE
             ,ppe.WF_STATUS_CODE
             ,NULL --bug 3810263 replacing ppe.PM_SOURCE_CODE
             ,NULL --bug 3810263 replacing ppe.PM_SOURCE_REFERENCE
             ,ppe.CLOSED_DATE
             ,ppe.LOCATION_ID
             ,ppe.MANAGER_PERSON_ID
             ,decode(ppe.CARRYING_OUT_ORGANIZATION_ID,l_old_proj_org_id, l_new_proj_org_id,
                     ppe.CARRYING_OUT_ORGANIZATION_ID) -- Bug 3387963
             ,ppe.TYPE_ID
             ,ppe.PRIORITY_CODE
             ,SYSDATE
             ,l_user_id
             ,SYSDATE
             ,l_user_id
             ,l_login_id
             ,ppe.RECORD_VERSION_NUMBER
             ,ppe.REQUEST_ID
             ,ppe.PROGRAM_APPLICATION_ID
             ,ppe.PROGRAM_ID
             ,ppe.PROGRAM_UPDATE_DATE
             ,ppe.LINK_TASK_FLAG
             ,ppe.BASELINE_START_DATE
             ,ppe.BASELINE_FINISH_DATE
             ,'N'      --,ppe.progress_outdated_flag
             ,ppe.ATTRIBUTE_CATEGORY
             ,ppe.ATTRIBUTE1
             ,ppe.ATTRIBUTE2
             ,ppe.ATTRIBUTE3
             ,ppe.ATTRIBUTE4
             ,ppe.ATTRIBUTE5
             ,ppe.ATTRIBUTE6
             ,ppe.ATTRIBUTE7
             ,ppe.ATTRIBUTE8
             ,ppe.ATTRIBUTE9
             ,ppe.ATTRIBUTE10
             ,ppe.ATTRIBUTE11
             ,ppe.ATTRIBUTE12
             ,ppe.ATTRIBUTE13
             ,ppe.ATTRIBUTE14
             ,ppe.proj_element_id    --attribute 15 is used to store old ids.
             ,l_dest_wp_structure_id
             ,ppe.TYPE_CODE
             ,ppe.INC_PROJ_PROGRESS_FLAG
             ,ppe.WQ_ITEM_CODE
             ,ppe.WQ_UOM_CODE
             ,ppe.WQ_ACTUAL_ENTRY_CODE
             ,ppe.TASK_PROGRESS_ENTRY_PAGE_ID
             ,ppe.BASELINE_DURATION
             ,ppe.PHASE_CODE
             ,ppe.PHASE_VERSION_ID
             ,ppe.PROGRESS_WEIGHT
             ,ppe.BASE_PERCENT_COMP_DERIV_CODE
             ,ppe.FUNCTION_CODE
             ,'N'
             ,ppe.WF_ITEM_TYPE
             ,ppe.WF_PROCESS
             ,ppe.WF_START_LEAD_DAYS
         ,p_dest_project_id
         ,'PA_PROJECTS'
             FROM pa_task_types ptt,
                  pa_proj_elements ppe
             WHERE ptt.object_type    = 'PA_TASKS'
             AND   ppe.type_id        = ptt.task_type_id
         AND   nvl(ppe.link_task_flag,'N') <> 'Y' -- 4348868
             AND   ppe.proj_element_id IN
             ( SELECT distinct ppev.proj_element_id
               FROM   PA_PROJ_ELEMENT_VERSIONS ppev,
                      PA_PROJECT_COPY_OPTIONS_TMP ppcot
               WHERE  ppcot.CONTEXT = 'WORKPLAN'
               AND    ppev.parent_structure_version_id = ppcot.version_id
               AND    ppev.project_id = p_src_project_id
               AND    ppev.object_type = 'PA_TASKS' ) ;
        END IF;

        --Copy tasks versions for tasks belonging to the selected wp versions
        INSERT INTO pa_proj_element_versions(
         ELEMENT_VERSION_ID
        ,PROJ_ELEMENT_ID
        ,OBJECT_TYPE
        ,PROJECT_ID
        ,PARENT_STRUCTURE_VERSION_ID
        ,DISPLAY_SEQUENCE
        ,WBS_LEVEL
        ,WBS_NUMBER
        ,CREATION_DATE
        ,CREATED_BY
        ,LAST_UPDATE_DATE
        ,LAST_UPDATED_BY
        ,LAST_UPDATE_LOGIN
        ,RECORD_VERSION_NUMBER
        ,attribute15          --this column is used to store task ver id of the source project's task versions to be used to created relationships.
        ,ATTRIBUTE_CATEGORY
        ,ATTRIBUTE1
        ,ATTRIBUTE2
        ,ATTRIBUTE3
        ,ATTRIBUTE4
        ,ATTRIBUTE5
        ,ATTRIBUTE6
        ,ATTRIBUTE7
        ,ATTRIBUTE8
        ,ATTRIBUTE9
        ,ATTRIBUTE10
        ,ATTRIBUTE11
        ,ATTRIBUTE12
        ,ATTRIBUTE13
        ,ATTRIBUTE14
        ,TASK_UNPUB_VER_STATUS_CODE
        ,FINANCIAL_TASK_FLAG
       ,source_object_id
        ,source_object_type
        )
        SELECT
         pa_proj_element_versions_s.nextval
        ,ppe.proj_element_id
        ,ppev.object_type
        ,p_dest_project_id
        ,ppev2.element_version_id
        ,ppev.DISPLAY_SEQUENCE
        ,ppev.WBS_LEVEL
        ,ppev.WBS_NUMBER
        ,SYSDATE                     ------CREATION_DATE
        ,l_user_id                   ------CREATED_BY
        ,SYSDATE                     ------LAST_UPDATE_DATE
        ,l_user_id                   ------LAST_UPDATED_BY
        ,l_login_id                  ------LAST_UPDATE_LOGIN
        ,ppev.RECORD_VERSION_NUMBER  ------RECORD_VERSION_NUMBER
        ,ppev.element_version_id     -- to help create relationships from source
        ,ppev.ATTRIBUTE_CATEGORY
        ,ppev.ATTRIBUTE1
        ,ppev.ATTRIBUTE2
        ,ppev.ATTRIBUTE3
        ,ppev.ATTRIBUTE4
        ,ppev.ATTRIBUTE5
        ,ppev.ATTRIBUTE6
        ,ppev.ATTRIBUTE7
        ,ppev.ATTRIBUTE8
        ,ppev.ATTRIBUTE9
        ,ppev.ATTRIBUTE10
        ,ppev.ATTRIBUTE11
        ,ppev.ATTRIBUTE12
        ,ppev.ATTRIBUTE13
        ,ppev.ATTRIBUTE14
        ,decode( ppevs.status_code, 'STRUCTURE_PUBLISHED', 'PUBLISHED', 'WORKING' )
        ,ppev.FINANCIAL_TASK_FLAG   --Check if this is correct ?
    ,p_dest_project_id
    ,'PA_PROJECTS'
        FROM pa_proj_elements ppe,
             pa_proj_element_versions ppev,
             pa_proj_element_versions ppev2,
             pa_proj_elem_ver_structure ppevs
        WHERE ppe.project_id = p_dest_project_id
        AND   ppe.object_type = 'PA_TASKS'
        AND   ppe.attribute15 = ppev.proj_element_id
        AND   ppev.project_id = p_src_project_id
        AND   ppev.object_type = 'PA_TASKS'
        AND   ppev.parent_structure_version_id = ppev2.attribute15
        AND   ppev2.project_id = p_dest_project_id
        AND   ppev2.object_type = 'PA_STRUCTURES'
        AND   ppevs.element_version_id = ppev2.element_version_id
        AND   ppevs.project_id = p_dest_project_id
    AND   ppevs.project_id = ppe.project_id -- Bug 4141027
    AND   ppev2.project_id = ppe.project_id -- Bug 4141027
    ;

        IF l_debug_mode = 'Y' THEN
            Pa_Debug.WRITE(G_PKG_NAME, 'Going to insert object relationships',
                           l_debug_level3);
        END IF;

        FOR rec_dest_wp_struc_versions IN cur_get_dest_wp_struc_versions(l_dest_wp_structure_id) LOOP
            --Copy relationships for structure and tasks into destination project

  /* Start of addition for bug 6211012 */

        l_obj_rel_id.delete;
	l_obj_typ_from.delete;
	l_obj_from_id.delete;
	l_obj_typ_to.delete;
	l_obj_to_id.delete;
	l_rel_typ.delete;
	l_rel_subtyp.delete;
	l_rec_ver_num.delete;
	l_wt_percent.delete;

        OPEN cur_pa_obj_rela_2(rec_dest_wp_struc_versions.attribute15,rec_dest_wp_struc_versions.element_version_id);

	LOOP

	  FETCH cur_pa_obj_rela_2
	  BULK COLLECT INTO
		l_obj_rel_id,
		l_obj_typ_from,
		l_obj_from_id,
		l_obj_typ_to,
		l_obj_to_id,
		l_rel_typ,
		l_rel_subtyp,
		l_rec_ver_num,
		l_wt_percent
	  LIMIT 1000;

	  IF l_obj_rel_id.COUNT >0 THEN

	    FORALL i IN l_obj_rel_id.FIRST..l_obj_rel_id.LAST
            insert into PA_OBJECT_RELATIONSHIPS (
                 object_relationship_id,
                 object_type_from,
                 object_id_from1,
                 object_type_to,
                 object_id_to1,
                 relationship_type,
                 relationship_subtype,
                 Record_Version_Number,
                 CREATED_BY,
                 CREATION_DATE,
                 LAST_UPDATED_BY,
                 LAST_UPDATE_DATE,
                 LAST_UPDATE_LOGIN,
                 weighting_percentage
                       )
		 values(
		 l_obj_rel_id(i),
	         l_obj_typ_from(i),
	         l_obj_from_id(i),
	         l_obj_typ_to(i),
	         l_obj_to_id(i),
	         l_rel_typ(i),
	         l_rel_subtyp(i),
	         l_rec_ver_num(i),
                 l_user_id,
                 SYSDATE,
                 l_user_id,
                 SYSDATE,
                 l_login_id,
	         l_wt_percent(i)
		 );

	  END IF;

          EXIT WHEN l_obj_rel_id.COUNT < 1000 ;
	END LOOP;

	l_obj_rel_id.delete;
	l_obj_typ_from.delete;
	l_obj_from_id.delete;
	l_obj_typ_to.delete;
	l_obj_to_id.delete;
	l_rel_typ.delete;
	l_rel_subtyp.delete;
	l_rec_ver_num.delete;
	l_wt_percent.delete;

	CLOSE cur_pa_obj_rela_2;

/*
            INSERT INTO PA_OBJECT_RELATIONSHIPS (
             object_relationship_id
            ,object_type_from
            ,object_id_from1
            ,object_type_to
            ,object_id_to1
            ,relationship_type
            ,relationship_subtype
            ,Record_Version_Number
            ,CREATED_BY
            ,CREATION_DATE
            ,LAST_UPDATED_BY
            ,LAST_UPDATE_DATE
            ,LAST_UPDATE_LOGIN
            ,weighting_percentage
            )
        /*Added the hint for the bug 3513853*/
    /*       SELECT /*+ USE_HASH(ppev2 ppev1)*/
   /*          pa_object_relationships_s.nextval
            ,pobj.object_type_from
            ,ppev1.element_version_id
            ,pobj.object_type_to
            ,ppev2.element_version_id
            ,pobj.relationship_type
            ,pobj.relationship_subtype
            ,pobj.Record_Version_Number
            ,l_user_id
            ,SYSDATE
            ,l_user_id
            ,SYSDATE
            ,l_login_id
            ,pobj.weighting_percentage
            FROM
            ( SELECT object_type_from,
                     object_id_from1,
                     object_type_to,
                     object_id_to1,
                     relationship_type,
                     relationship_subtype,
                     Record_Version_Number,
                     weighting_percentage
              FROM pa_object_relationships
              START WITH object_id_from1 = rec_dest_wp_struc_versions.attribute15
              AND  RELATIONSHIP_TYPE = 'S'
              CONNECT BY  object_id_from1 =  PRIOR object_id_to1
              AND  RELATIONSHIP_TYPE = 'S' ) pobj,
            pa_proj_element_versions ppev1,
            pa_proj_element_versions ppev2
            WHERE ppev1.attribute15 = pobj.object_id_from1
            AND   ppev2.attribute15 = pobj.object_id_to1
            AND   ppev1.parent_structure_version_id = rec_dest_wp_struc_versions.element_version_id
            AND   ppev2.parent_structure_version_id = rec_dest_wp_struc_versions.element_version_id ;
*/
/* End of changes for bug 6211012 */

            --calculate delta before inserting schedule rows
            --select source structure version scheduled start date
            IF (p_target_start_date IS NULL) THEN
                l_delta := 0;
            ELSE
                OPEN  cur_get_src_sch_st_date( p_src_project_id, rec_dest_wp_struc_versions.attribute15 );
                FETCH cur_get_src_sch_st_date INTO l_src_sch_st_date;
                CLOSE cur_get_src_sch_st_date;
                l_delta := p_target_start_date - l_src_sch_st_date;
            END IF;

            --Copy entries into pa_proj_elem_ver_schedule
            INSERT INTO pa_proj_elem_ver_schedule(
             PEV_SCHEDULE_ID
            ,ELEMENT_VERSION_ID
            ,PROJECT_ID
            ,PROJ_ELEMENT_ID
            ,CREATION_DATE
            ,CREATED_BY
            ,LAST_UPDATE_DATE
            ,LAST_UPDATED_BY
            ,SCHEDULED_START_DATE
            ,SCHEDULED_FINISH_DATE
            ,OBLIGATION_START_DATE
            ,OBLIGATION_FINISH_DATE
            ,ACTUAL_START_DATE
            ,ACTUAL_FINISH_DATE
            ,ESTIMATED_START_DATE
            ,ESTIMATED_FINISH_DATE
            ,DURATION
            ,EARLY_START_DATE
            ,EARLY_FINISH_DATE
            ,LATE_START_DATE
            ,LATE_FINISH_DATE
            ,CALENDAR_ID
            ,MILESTONE_FLAG
            ,CRITICAL_FLAG
            ,RECORD_VERSION_NUMBER
            ,LAST_UPDATE_LOGIN
            ,WQ_PLANNED_QUANTITY
            ,PLANNED_EFFORT
            ,ACTUAL_DURATION
            ,ESTIMATED_DURATION
            ,ATTRIBUTE_CATEGORY
            ,ATTRIBUTE1
            ,ATTRIBUTE2
            ,ATTRIBUTE3
            ,ATTRIBUTE4
            ,ATTRIBUTE5
            ,ATTRIBUTE6
            ,ATTRIBUTE7
            ,ATTRIBUTE8
            ,ATTRIBUTE9
            ,ATTRIBUTE10
            ,ATTRIBUTE11
            ,ATTRIBUTE12
            ,ATTRIBUTE13
            ,ATTRIBUTE14
            ,ATTRIBUTE15
           ,source_object_id
           ,source_object_type
            ,DEF_SCH_TOOL_TSK_TYPE_CODE            --Bug 9378153
            ,CONSTRAINT_TYPE_CODE                  --Bug 3762437
            ,CONSTRAINT_DATE
            ,FREE_SLACK
            ,TOTAL_SLACK
            ,EFFORT_DRIVEN_FLAG
            ,LEVEL_ASSIGNMENTS_FLAG
            ,EXT_ACT_DURATION
            ,EXT_REMAIN_DURATION
            ,EXT_SCH_DURATION                       --Bug 3762437
            )
            SELECT
             pa_proj_elem_ver_schedule_s.nextval
            ,ppev.ELEMENT_VERSION_ID
            ,p_dest_PROJECT_ID
            ,ppev.PROJ_ELEMENT_ID
            ,SYSDATE
            ,l_user_id
            ,SYSDATE
            ,l_user_id
            ,PA_PROJ_TASK_STRUC_PUB.get_adjusted_dates( p_target_start_date,
                                                        p_target_finish_date,
                                                        l_delta,
                                                        ppevs.SCHEDULED_START_DATE,
                                                        null )
            ,PA_PROJ_TASK_STRUC_PUB.get_adjusted_dates( p_target_start_date,
                                                        p_target_finish_date,
                                                        l_delta,
                                                        ppevs.SCHEDULED_START_DATE,
                                                        SCHEDULED_FINISH_DATE )
            ,ppevs.OBLIGATION_START_DATE
            ,ppevs.OBLIGATION_FINISH_DATE
            ,null
            ,null
            ,null
            ,null
            ,ppevs.DURATION
            ,ppevs.EARLY_START_DATE
            ,ppevs.EARLY_FINISH_DATE
            ,ppevs.LATE_START_DATE
            ,ppevs.LATE_FINISH_DATE
            ,p_calendar_id
            ,ppevs.MILESTONE_FLAG
            ,ppevs.CRITICAL_FLAG
            ,ppevs.RECORD_VERSION_NUMBER
            ,l_login_id
            ,ppevs.WQ_PLANNED_QUANTITY
            ,ppevs.PLANNED_EFFORT
            ,ppevs.ACTUAL_DURATION
            ,ppevs.ESTIMATED_DURATION
            ,ppevs.ATTRIBUTE_CATEGORY
            ,ppevs.ATTRIBUTE1
            ,ppevs.ATTRIBUTE2
            ,ppevs.ATTRIBUTE3
            ,ppevs.ATTRIBUTE4
            ,ppevs.ATTRIBUTE5
            ,ppevs.ATTRIBUTE6
            ,ppevs.ATTRIBUTE7
            ,ppevs.ATTRIBUTE8
            ,ppevs.ATTRIBUTE9
            ,ppevs.ATTRIBUTE10
            ,ppevs.ATTRIBUTE11
            ,ppevs.ATTRIBUTE12
            ,ppevs.ATTRIBUTE13
            ,ppevs.ATTRIBUTE14
            ,ppevs.ATTRIBUTE15
        ,p_dest_PROJECT_ID
        ,'PA_PROJECTS'
            ,ppevs.DEF_SCH_TOOL_TSK_TYPE_CODE            --Bug 9378153
            ,CONSTRAINT_TYPE_CODE                  --Bug 3762437
            ,CONSTRAINT_DATE
            ,FREE_SLACK
            ,TOTAL_SLACK
            ,EFFORT_DRIVEN_FLAG
            ,LEVEL_ASSIGNMENTS_FLAG
            ,EXT_ACT_DURATION
            ,EXT_REMAIN_DURATION
            ,EXT_SCH_DURATION                       --Bug 3762437
            FROM pa_proj_element_versions ppev,
                 pa_proj_elem_ver_schedule ppevs
            WHERE ppev.project_id = p_dest_project_id
            AND   ppev.parent_structure_version_id = rec_dest_wp_struc_versions.element_version_id
            AND   ppev.attribute15 = ppevs.element_version_id
            AND   ppevs.project_id = p_src_project_id ;

        END LOOP; --FOR rec_dest_wp_struc_versions IN cur_get_dest_wp_struc_versions

        IF 'Y' = l_shared AND 'N' = p_src_template_flag THEN
        --No need to sync up if source is a template
        IF l_submit_wf_required <> 'Y' THEN --3916763
            OPEN  cur_get_shared_ver_id;
            FETCH cur_get_shared_ver_id INTO l_shared_dest_ver_id;
            CLOSE cur_get_shared_ver_id;

            IF l_debug_mode = 'Y' THEN
            Pa_Debug.WRITE(G_PKG_NAME, 'Calling pa_tasks sync up API for struc version :'||l_shared_dest_ver_id,
                       l_debug_level3);
            END IF;

            --Call API to sync up tasks in pa_tasks table, with the new (shared) version [WP version copied from src]
            PA_TASKS_MAINT_PUB.SYNC_UP_WP_TASKS_WITH_FIN(
              p_project_id             => p_dest_project_id
            , p_structure_version_id   => l_shared_dest_ver_id
            , p_mode                   => 'ALL'
            , x_return_status          => l_return_status
            , x_msg_count              => l_msg_count
            , x_msg_data               => l_msg_data );

            IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
            x_msg_count := FND_MSG_PUB.count_msg;
            IF x_msg_count = 1 THEN
                x_msg_data := l_msg_data;
            END IF;
            RAISE FND_API.G_EXC_ERROR;
            END IF;
         END IF; --3916763
        END IF;
    ELSE --IF THERE IS NO WP VERSION SELECTED FOR COPYING

        --If shared and copy financial tasks flag is checked
        IF 'Y' = l_shared AND 'Y' = l_fin_tasks_flag THEN

            --The following API call will copy the financial version from the source project to the destination project
            copy_src_financial_version(  p_init_msg_list        => p_init_msg_list
                                        ,p_src_project_id       => p_src_project_id
                                        ,p_dest_project_id      => p_dest_project_id
                                        ,p_dest_fn_structure_id => l_dest_wp_structure_id
                                        ,p_shared               => l_shared
                                        ,p_dest_template_flag   => p_dest_template_flag
                                        ,p_publish_person_id    => l_publish_person_id
                                        ,x_return_status        => l_return_status
                                        ,x_msg_count            => l_msg_count
                                        ,x_msg_data             => l_msg_data
                                      );

            IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                x_msg_count := FND_MSG_PUB.count_msg;
                IF x_msg_count = 1 THEN
                    x_msg_data := l_msg_data;
                END IF;
                RAISE FND_API.G_EXC_ERROR;
            END IF;

            --The following API call will copy the tasks belonging to the financial version in the source project into
            --the destination project
            copy_src_financial_ver_tasks( p_init_msg_list            => p_init_msg_list
                                         ,p_src_project_id           => p_src_project_id
                                         ,p_dest_project_id          => p_dest_project_id
                                         ,p_dest_fn_structure_id     => l_dest_wp_structure_id
                                         ,p_shared                   => l_shared
                                         ,p_copy_ppevSchedules_flag  => 'Y'   --Copy pa_proj_elem_ver_schedules or not
                                         ,p_target_start_date        => p_target_start_date
                                         ,p_target_finish_date       => p_target_finish_date
                                         ,p_calendar_id              => p_calendar_id
                                         ,x_return_status            => l_return_status
                                         ,x_msg_count                => l_msg_count
                                         ,x_msg_data                 => l_msg_data
                                        );
            IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                x_msg_count := FND_MSG_PUB.count_msg;
                IF x_msg_count = 1 THEN
                    x_msg_data := l_msg_data;
                END IF;
                RAISE FND_API.G_EXC_ERROR;
            END IF;

        END IF;--If shared and copy financial tasks flag is checked

        --If no WP version is selected
        --If shared and copy financial tasks flag is not checked OR split and workplan is enabled
        IF ('Y' = l_shared AND 'N' = l_fin_tasks_flag)
        OR ('N' = l_shared AND 'Y' = l_workplan_enabled) THEN

            IF l_debug_mode = 'Y' THEN
                Pa_Debug.WRITE(G_PKG_NAME, 'Creating new default WP version', l_debug_level3);
            END IF;
        --bug 3912603, Satish, this flag is for using this same condition below.
        check_str_sel_flag := 'Y';

            --Create new default WP structure version
            SELECT pa_proj_element_versions_s.nextval INTO l_new_wp_ver_id
            FROM dual;

            INSERT INTO pa_proj_element_versions(
             ELEMENT_VERSION_ID
            ,PROJ_ELEMENT_ID
            ,OBJECT_TYPE
            ,PROJECT_ID
            ,CREATION_DATE
            ,CREATED_BY
            ,LAST_UPDATE_DATE
            ,LAST_UPDATED_BY
            ,LAST_UPDATE_LOGIN
            ,PARENT_STRUCTURE_VERSION_ID
            ,WBS_NUMBER
            ,RECORD_VERSION_NUMBER
            ,FINANCIAL_TASK_FLAG
           ,source_object_id
           ,source_object_type
            )
            VALUES (
             l_new_wp_ver_id
            ,l_dest_wp_structure_id
            ,'PA_STRUCTURES'
            ,p_dest_project_id
            ,sysdate
            ,l_user_id
            ,sysdate
            ,l_user_id
            ,l_login_id
            ,l_new_wp_ver_id
            ,'0'
            ,1
            ,'N'
        ,p_dest_project_id
        ,'PA_PROJECTS'
            );

            OPEN  cur_get_working_ver_num(p_dest_project_id, l_dest_wp_structure_id);
            FETCH cur_get_working_ver_num INTO l_struc_ver_number;
            CLOSE cur_get_working_ver_num;

            --If creating a project AND versioning is disabled, then should have both latest published and
            --current working flags as 'Y'
            IF 'N' = p_dest_template_flag AND 'N' = l_versioning_enabled THEN
                l_default_lat_pub_and_cw_flag := 'Y';
            END IF;

            INSERT INTO PA_PROJ_ELEM_VER_STRUCTURE(
             PEV_STRUCTURE_ID
            ,ELEMENT_VERSION_ID
            ,VERSION_NUMBER
            ,NAME
            ,PROJECT_ID
            ,PROJ_ELEMENT_ID
            ,PUBLISHED_DATE
            ,LATEST_EFF_PUBLISHED_FLAG
            ,PUBLISHED_BY_PERSON_ID
            ,CURRENT_BASELINE_DATE
            ,CURRENT_FLAG
            ,CURRENT_BASELINE_PERSON_ID
            ,ORIGINAL_BASELINE_DATE
            ,ORIGINAL_FLAG
            ,ORIGINAL_BASELINE_PERSON_ID
            ,CREATION_DATE
            ,CREATED_BY
            ,LAST_UPDATE_DATE
            ,LAST_UPDATED_BY
            ,LAST_UPDATE_LOGIN
            ,STATUS_CODE
            ,RECORD_VERSION_NUMBER
            ,WBS_RECORD_VERSION_NUMBER
            ,CURRENT_WORKING_FLAG
           ,SOURCE_OBJECT_ID
           ,source_object_type)
            VALUES (
             pa_proj_elem_ver_structure_s.nextval
            ,l_new_wp_ver_id
            ,l_struc_ver_number
            ,substr(p_dest_project_name||l_append||l_suffix, 1, 240)
            ,p_dest_project_id
            ,l_dest_wp_structure_id
            ,decode(l_default_lat_pub_and_cw_flag,'Y',sysdate,to_date(null))
            ,l_default_lat_pub_and_cw_flag
            ,decode(l_default_lat_pub_and_cw_flag, 'Y', l_publish_person_id, NULL)
            ,decode(l_default_lat_pub_and_cw_flag,'Y',sysdate,to_date(null))
            ,l_default_lat_pub_and_cw_flag
            ,decode(l_default_lat_pub_and_cw_flag, 'Y', l_publish_person_id, NULL)
            ,decode(l_default_lat_pub_and_cw_flag,'Y',sysdate,to_date(null))
            ,l_default_lat_pub_and_cw_flag
            ,decode(l_default_lat_pub_and_cw_flag, 'Y', l_publish_person_id, NULL)
            ,sysdate
            ,l_user_id
            ,sysdate
            ,l_user_id
            ,l_login_id
            ,decode(l_default_lat_pub_and_cw_flag,'Y','STRUCTURE_PUBLISHED','STRUCTURE_WORKING')
            ,1
            ,1
            ,'Y'
        ,p_dest_project_id
        ,'PA_PROJECTS'
            );

      --bug 3912603, insert records into pa_proj_elem_ver_Schedule, Satish, start
          PA_TASK_PUB1.Create_Schedule_Version(
                   p_element_version_id        => l_new_wp_ver_id
                  ,p_scheduled_start_date      => SYSDATE
                  ,p_scheduled_end_date        => SYSDATE
                  ,x_pev_schedule_id           => x_pev_schedule_id
                  ,x_return_status             => l_return_status
                  ,x_msg_count                 => l_msg_count
                  ,x_msg_data                  => l_msg_data
          );
          IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
              x_msg_count := FND_MSG_PUB.count_msg;
              IF x_msg_count = 1 THEN
                    x_msg_data := l_msg_data;
              END IF;
              RAISE FND_API.G_EXC_ERROR;
          END IF;
          --bug 3912603, insert records into pa_proj_elem_ver_Schedule, Satish, end

        END IF;
    END IF;--If  there is atleast one WP version selected

    ---------------------------------------------------------------------------------------------------------
    /**** THE FOLLOWING SECTION COPIES/INSERTS FINANCIAL VERSIONS AND TASKS INTO THE DESTINATION PROJECT ****/
    ---------------------------------------------------------------------------------------------------------
    --If split and financial is enabled
    IF 'N' = l_shared AND 'Y' = l_fin_enabled THEN

        IF l_debug_mode = 'Y' THEN
            Pa_Debug.WRITE(G_PKG_NAME, 'Creating financial version in split case', l_debug_level3);
        END IF;

        --The following API call will copy the financial version from the source project to the destination project
        copy_src_financial_version(  p_init_msg_list        => p_init_msg_list
                                    ,p_src_project_id       => p_src_project_id
                                    ,p_dest_project_id      => p_dest_project_id
                                    ,p_dest_fn_structure_id => l_dest_fn_structure_id
                                    ,p_shared               => l_shared
                                    ,p_dest_template_flag   => p_dest_template_flag
                                    ,p_publish_person_id    => l_publish_person_id
                                    ,x_return_status        => l_return_status
                                    ,x_msg_count            => l_msg_count
                                    ,x_msg_data             => l_msg_data
                                  );

        IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
            x_msg_count := FND_MSG_PUB.count_msg;
            IF x_msg_count = 1 THEN
                x_msg_data := l_msg_data;
            END IF;
            RAISE FND_API.G_EXC_ERROR;
        END IF;

        --If copy financial tasks flag is checked
        IF 'Y' = l_fin_tasks_flag THEN

            IF l_debug_mode = 'Y' THEN
                Pa_Debug.WRITE(G_PKG_NAME, 'Creating financial tasks in split case', l_debug_level3);
            END IF;

            --The following API call will copy the tasks belonging to the financial version in the source project into
            --the destination project
            copy_src_financial_ver_tasks( p_init_msg_list            => p_init_msg_list
                                         ,p_src_project_id           => p_src_project_id
                                         ,p_dest_project_id          => p_dest_project_id
                                         ,p_dest_fn_structure_id     => l_dest_fn_structure_id
                                         ,p_shared                   => l_shared
                                         ,p_copy_ppevSchedules_flag  => 'N'   --Copy pa_proj_elem_ver_schedules or not
                                         ,p_target_start_date        => p_target_start_date
                                         ,p_target_finish_date       => p_target_finish_date
                                         ,p_calendar_id              => p_calendar_id
                                         ,x_return_status            => l_return_status
                                         ,x_msg_count                => l_msg_count
                                         ,x_msg_data                 => l_msg_data
                                        );
            IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                x_msg_count := FND_MSG_PUB.count_msg;
                IF x_msg_count = 1 THEN
                    x_msg_data := l_msg_data;
                END IF;
                RAISE FND_API.G_EXC_ERROR;
            END IF;
        END IF;

    END IF;--If split and financial is enabled

    ---------------------------------------------------------------------------------------------------------------------
    /**** THE FOLLOWING SECTION COPIES OTHER INFORMATION RELATED TO VERSIONS AND TASKS INTO THE DESTINATION PROJECT ****/
    ---------------------------------------------------------------------------------------------------------------------

    IF 'Y' = l_shared THEN
        --Get the destination project's shared structure id
        OPEN  cur_get_shared_struc_id;
        FETCH cur_get_shared_struc_id INTO l_dest_shared_struc_id, l_src_shared_struc_id;
        CLOSE cur_get_shared_struc_id;
    END IF;

    --Updating Duration
    IF l_workplan_enabled = 'Y' THEN
         -- Bug 3657808 Remove duration calculation using calendar
     -- and rewritting the query
        /*UPDATE pa_proj_elem_ver_schedule
           SET duration = PA_PROJ_TASK_STRUC_PUB.calc_duration( p_calendar_id,
                                                                scheduled_start_date,
                                                                scheduled_finish_date )
         WHERE project_id = p_dest_project_id;*/
        UPDATE pa_proj_elem_ver_schedule
           SET duration = trunc(scheduled_finish_date) - trunc(scheduled_start_date) + 1
         WHERE project_id = p_dest_project_id;
    END IF;

    ---Updating Baselined Dates
    UPDATE PA_PROJ_ELEMENTS ppe
       SET ( BASELINE_START_DATE
            ,BASELINE_FINISH_DATE
            ,BASELINE_DURATION
           ) = ( SELECT ppevs.scheduled_start_date
                       ,ppevs.scheduled_finish_date
                       ,ppevs.duration
                   FROM pa_proj_elem_ver_schedule ppevs,
                        pa_proj_element_versions ppev
                  WHERE ppevs.project_id           = p_dest_project_id
                    AND ppevs.proj_element_id      = ppev.proj_element_id
                    AND ppevs.element_version_id   = ppev.element_version_id
                    AND ppev.project_id            = p_dest_project_id
                    AND ppevs.proj_element_id      = ppe.proj_element_id
                    AND ppev.proj_element_id       = ppe.proj_element_id
                    AND ppev.parent_structure_version_id =
                            (  SELECT ppevst.element_version_id   --Changed the inner query for bug 4215666.
                               FROM   pa_proj_elem_ver_structure ppevst,
                                      pa_proj_structure_types struc,
                                      pa_structure_types stype
                               WHERE  ppevst.project_id          = p_dest_project_id
                               AND    ppevst.current_flag        = 'Y'
                               AND    ppevst.status_code         = 'STRUCTURE_PUBLISHED'
                               AND    ppevst.proj_element_id     = struc.proj_element_id
                               AND    struc.structure_type_id    = stype.structure_type_id
                               AND    stype.structure_type       = 'WORKPLAN'
                            )
                )
    WHERE project_id = p_dest_project_id;

    --Updating Projects Dates
    UPDATE pa_projects_all
       SET ( BASELINE_START_DATE ,BASELINE_FINISH_DATE,  baseline_duration, baseline_as_of_date ) =
              ( SELECT BASELINE_START_DATE ,BASELINE_FINISH_DATE,  baseline_duration,
                             decode( BASELINE_START_DATE, null, null, sysdate)
                  FROM pa_proj_elements ppe, pa_proj_structure_types ppst
                 WHERE project_id = p_dest_project_id
                   AND object_type = 'PA_STRUCTURES'
                   AND ppe.proj_element_id = ppst.proj_element_id
                   AND ppst.structure_type_id = 1
               )
    WHERE project_id = p_dest_project_id;

    --Get the latest published version id in the destination project
    l_dest_latest_pub_ver_id := PA_PROJ_ELEMENTS_UTILS.latest_published_ver_id( p_dest_project_id, 'WORKPLAN' ) ;

     IF l_dest_latest_pub_ver_id IS NOT NULL THEN
         UPDATE pa_projects_all
            SET ( scheduled_START_DATE ,scheduled_FINISH_DATE,  scheduled_duration, scheduled_as_of_date ) =
                    ( SELECT SCHEDULED_START_DATE ,SCHEDULED_FINISH_DATE,  duration,
                             decode( SCHEDULED_START_DATE, null, null, sysdate )
                        FROM pa_proj_elem_ver_schedule
                       WHERE project_id = p_dest_project_id
                         AND element_version_id = l_dest_latest_pub_ver_id
                     )
            WHERE project_id = p_dest_project_id;
     END IF;

    /* Included  for Bug 3922019
       In case of templates l_dest_latest_pub_ver_id will be NULL (No latest published version etc. for templates)
       So,In that case,Select the Only Workplan Version Id that would be available for the template*/

    OPEN c_template_flag(p_dest_project_id) ;
    FETCH c_template_flag INTO l_template_flag ;
    CLOSE c_template_flag ;

    IF nvl(l_template_flag,'N') = 'Y' THEN
        OPEN c_only_wp_ver_id(p_dest_project_id) ;
        FETCH c_only_wp_ver_id INTO l_only_wp_ver_id ;
        CLOSE c_only_wp_ver_id ;

        UPDATE pa_projects_all
       SET ( scheduled_START_DATE ,scheduled_FINISH_DATE,  scheduled_duration, scheduled_as_of_date ) =
           ( SELECT SCHEDULED_START_DATE ,SCHEDULED_FINISH_DATE,  duration,
                decode( SCHEDULED_START_DATE, null, null, sysdate )
               FROM pa_proj_elem_ver_schedule
              WHERE project_id = p_dest_project_id
                        AND element_version_id = l_only_wp_ver_id
                     )
           WHERE project_id = p_dest_project_id;
    END IF;

    /* End of code changes for Bug 3922019*/

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'Copying task attachments...', l_debug_level3);
    END IF;

    --Copy Task Attachments
    OPEN  cur_get_flag('WP_TASK_ATTACH_FLAG');
    FETCH cur_get_flag INTO l_wp_task_attach_flag;
    CLOSE cur_get_flag;

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'l_wp_task_attach_flag '||l_wp_task_attach_flag, l_debug_level3);
    END IF;

    OPEN  cur_get_flag('FN_ATTACHMENTS_FLAG');
    FETCH cur_get_flag INTO l_fn_task_attach_flag;
    CLOSE cur_get_flag;

    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'l_fn_task_attach_flag '||l_fn_task_attach_flag, l_debug_level3);
    END IF;

    IF 'Y' = l_shared THEN
        IF ('Y' = l_min_one_wp_ver_sel AND 'Y' = l_wp_task_attach_flag )
        OR ('Y' = l_fin_tasks_flag AND 'Y' = l_fn_task_attach_flag ) THEN
            FOR rec_copied_tasks IN cur_get_copied_tasks( l_dest_shared_struc_id ) LOOP
                FND_ATTACHED_DOCUMENTS2_PKG.COPY_ATTACHMENTS(
                'PA_TASKS',
                rec_copied_tasks.src_ppe_id,
                null, null, null, null,
                'PA_TASKS',
                rec_copied_tasks.dest_ppe_id,
                null, null, null, null,
                FND_GLOBAL.USER_ID,
                FND_GLOBAL.LOGIN_ID,
                275, null, null
                );
            END LOOP;
        END IF;
    ELSE
        IF 'Y' = l_wp_task_attach_flag THEN
            FOR rec_copied_tasks IN cur_get_copied_tasks( l_dest_wp_structure_id ) LOOP
                FND_ATTACHED_DOCUMENTS2_PKG.COPY_ATTACHMENTS(
                'PA_TASKS',
                rec_copied_tasks.src_ppe_id,
                null, null, null, null,
                'PA_TASKS',
                rec_copied_tasks.dest_ppe_id,
                null, null, null, null,
                FND_GLOBAL.USER_ID,
                FND_GLOBAL.LOGIN_ID,
                275, null, null
                );
            END LOOP;
        END IF;

        IF 'Y' = l_fn_task_attach_flag THEN
            FOR rec_copied_tasks IN cur_get_copied_tasks( l_dest_fn_structure_id ) LOOP
                FND_ATTACHED_DOCUMENTS2_PKG.COPY_ATTACHMENTS(
                'PA_TASKS',
                rec_copied_tasks.src_ppe_id,
                null, null, null, null,
                'PA_TASKS',
                rec_copied_tasks.dest_ppe_id,
                null, null, null, null,
                FND_GLOBAL.USER_ID,
                FND_GLOBAL.LOGIN_ID,
                275, null, null
                );
            END LOOP;
        END IF;
    END IF;

    --Need To Sync Up Transaction Dates If Auto Sync Is On
    IF l_shared = 'Y' THEN

        IF  (PA_WORKPLAN_ATTR_UTILS.CHECK_AUTO_DATE_SYNC_ENABLED(l_dest_shared_struc_id) = 'Y')
        AND (PA_WORKPLAN_ATTR_UTILS.CHECK_AUTO_PUB_AT_CREATION(p_src_project_id) = 'Y')  THEN
            --Copy to transaction date
            PA_PROJECT_DATES_PUB.COPY_PROJECT_DATES(
             p_project_id => p_dest_project_id,
             x_return_status => l_return_status,
             x_msg_count => l_msg_count,
             x_msg_data => l_msg_data
            );

           IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                x_msg_count := FND_MSG_PUB.count_msg;
                IF x_msg_count = 1 THEN
                    x_msg_data := l_msg_data;
                END IF;
                RAISE FND_API.G_EXC_ERROR;
           END IF;
        END IF;
    END IF;

    DECLARE
        Old_Versions_Tab  SYSTEM.pa_num_tbl_type;
        New_Versions_Tab  SYSTEM.pa_num_tbl_type;

        l_wp_inter_proj_depend_flag VARCHAR2(1);
    BEGIN
        SELECT Element_Version_ID, attribute15 BULK COLLECT
        INTO   New_Versions_Tab, Old_Versions_Tab
        FROM   PA_Proj_Element_Versions
        WHERE  Project_ID = p_dest_project_id;

        PA_Relationship_Pvt.Copy_Intra_Dependency (
          P_Source_Ver_Tbl  => Old_Versions_Tab,
          P_Destin_Ver_Tbl  => New_Versions_Tab,
          X_Return_Status   => X_Return_Status,
          X_Msg_Count       => X_Msg_Count,
          X_Msg_Data        => X_Msg_Data
        );
        IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
           RAISE FND_API.G_EXC_ERROR;
        END IF;

        OPEN  cur_get_flag('WP_INTER_PROJ_DEPEND_FLAG');
        FETCH cur_get_flag INTO l_wp_inter_proj_depend_flag;
        CLOSE cur_get_flag;

        IF 'Y' = l_wp_inter_proj_depend_flag THEN
            PA_RELATIONSHIP_PVT.Copy_Inter_Project_Dependency (
            P_Source_Ver_Tbl     => Old_Versions_Tab,
            P_Destin_Ver_Tbl     => New_Versions_Tab,
            X_Return_Status      => X_Return_Status,
            X_Msg_Count          => X_Msg_Count,
            X_Msg_Data           => X_Msg_Data
            );
            IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
               RAISE FND_API.G_EXC_ERROR;
            END IF;
        END IF;
    END ;--Finished copying Intra and Inter Project Dependencies

    DECLARE
        CURSOR cur_get_str_shr_code IS
        SELECT structure_sharing_code
        FROM   pa_projects_all
        WHERE  project_id = p_dest_project_id;

        src_versions_tab   SYSTEM.pa_num_tbl_type;
        dest_versions_tab  SYSTEM.pa_num_tbl_type;
        l_dest_proj_struc_shr_code VARCHAR2(30);

        l_wp_res_assign_flag       VARCHAR2(1) := 'N';
        l_wp_ra_people_flag        VARCHAR2(1) := 'N';
        l_wp_ra_equipment_flag     VARCHAR2(1) := 'N';
        l_wp_ra_material_flag      VARCHAR2(1) := 'N';
        l_wp_ra_fin_element_flag   VARCHAR2(1) := 'N';

    BEGIN

        SELECT Element_Version_ID, attribute15 BULK COLLECT
        INTO   dest_versions_tab, src_Versions_Tab
        FROM   PA_Proj_Element_Versions
        WHERE  Project_ID = p_dest_project_id
        AND ( PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(element_version_id, 'WORKPLAN') = 'Y')
        AND object_type = 'PA_STRUCTURES';

        OPEN  cur_get_str_shr_code;
        FETCH cur_get_str_shr_code INTO l_dest_proj_struc_shr_code;
        CLOSE cur_get_str_shr_code;

        IF l_dest_proj_struc_shr_code = 'SPLIT_MAPPING' THEN
             -- Copy mapping only in case of split structures with mapping
             PA_PROJ_STRUC_MAPPING_PUB.copy_mapping
             ( p_context               => 'COPY_PROJECT'
              ,p_src_project_id        => p_src_project_id
              ,p_dest_project_id       => p_dest_project_id
              ,x_return_status          => x_return_status
              ,x_msg_count              => x_msg_count
              ,x_Msg_data               => x_msg_data
             );
             IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                RAISE FND_API.G_EXC_ERROR;
             END IF;
        END IF;

        OPEN  cur_get_flag('WP_RES_ASSIGN_FLAG');
        FETCH cur_get_flag INTO l_wp_res_assign_flag;
        CLOSE cur_get_flag;
        --NOTE : If Resource Assignments flag is unchecked, all other flags - people, equipment, material
        --and financial elements would be 'N'

        IF 'Y' = l_wp_res_assign_flag THEN
            OPEN  cur_get_flag('WP_RA_PEOPLE_FLAG');
            FETCH cur_get_flag INTO l_wp_ra_people_flag;
            CLOSE cur_get_flag;

            OPEN  cur_get_flag('WP_RA_EQUIPMENT_FLAG');
            FETCH cur_get_flag INTO l_wp_ra_equipment_flag;
            CLOSE cur_get_flag;

            OPEN  cur_get_flag('WP_RA_MATERIAL_FLAG');
            FETCH cur_get_flag INTO l_wp_ra_material_flag;
            CLOSE cur_get_flag;

            OPEN  cur_get_flag('WP_RA_FIN_ELEMENT_FLAG');
            FETCH cur_get_flag INTO l_wp_ra_fin_element_flag;
            CLOSE cur_get_flag;
        END IF;

        --bug 3912603, call add_planning_transactions if no wp selected and split, Satish
        -- Copies budget versions, resource assignments and budget lines as required for the workplan version.
        --IF ('Y' = l_shared AND 'N' = l_fin_tasks_flag)
        --OR ('N' = l_shared AND 'Y' = l_workplan_enabled) THEN
    IF ('Y' = check_str_sel_flag AND 'N' = nvl(l_min_one_wp_ver_sel,'N')) THEN
        IF l_debug_mode = 'Y' THEN
            Pa_Debug.WRITE(G_PKG_NAME, 'Calling  add_planning_transactions ', l_debug_level3);
            Pa_Debug.WRITE(G_PKG_NAME, 'Calling  add_planning_transactions p_dest_project_id '||p_dest_project_id, l_debug_level3);
            Pa_Debug.WRITE(G_PKG_NAME, 'Calling  add_planning_transactions l_new_wp_ver_id '||l_new_wp_ver_id, l_debug_level3);
        END IF;
        PA_FP_PLANNING_TRANSACTION_PUB.add_planning_transactions
        (
            p_context                => 'WORKPLAN'
            ,p_project_id             => p_dest_project_id
            ,p_struct_elem_version_id => l_new_wp_ver_id
            ,x_return_status          => x_return_status
            ,x_msg_count              => x_msg_count
            ,x_Msg_data               => x_msg_data
        );
        IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
           RAISE FND_API.G_EXC_ERROR;
        END IF;
    ELSE
        IF l_debug_mode = 'Y' THEN
            Pa_Debug.WRITE(G_PKG_NAME, 'Calling  copy_wp_budget_versions ', l_debug_level3);
        END IF;
        PA_FP_COPY_FROM_PKG.copy_wp_budget_versions
         ( p_source_project_id            => p_src_project_id
          ,p_target_project_id            => p_dest_project_id
          ,p_src_sv_ids_tbl               => src_Versions_Tab  -- Workplan version id tbl
          ,p_target_sv_ids_tbl            => dest_Versions_Tab -- Workplan version id tbl
          ,p_copy_people_flag             => l_wp_ra_people_flag
          ,p_copy_equip_flag              => l_wp_ra_equipment_flag
          ,p_copy_mat_item_flag           => l_wp_ra_material_flag
          ,p_copy_fin_elem_flag           => l_wp_ra_fin_element_flag
          ,x_return_status                => x_return_status
          ,x_msg_count                    => x_msg_count
          ,x_Msg_data                     => x_msg_data
         );
        IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
           RAISE FND_API.G_EXC_ERROR;
        END IF;
    END IF;

    IF ( 'Y' = l_dlv_enabled AND 'Y' = l_wp_deliverables_flag ) THEN

            PA_DELIVERABLE_PUB.copy_deliverables
             (p_source_project_id    => p_src_project_id
             ,p_target_project_id    => p_dest_project_id
             ,p_item_details_flag    => l_wp_dlv_item_det_flag
             ,p_dlv_actions_flag     => 'Y'
             ,p_dlv_attachments_flag => l_wp_dlv_attach_flag
             ,p_association_flag     => l_wp_dlv_assoc_task_flag
             ,p_prefix               => 'CP'
             ,p_delta                => p_delta
             ,p_calling_context      => 'COPY_PROJECT'
             ,x_return_status        => x_return_status
             ,x_msg_count            => x_msg_count
             ,x_Msg_data             => x_msg_data
             );

            IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
             RAISE FND_API.G_EXC_ERROR;
            END IF;
        END IF;
    END;

/* This code is moved to Copy_Project API for bug 4200168 so that BF can use attribute15 to access source task id in copy finplan API*/
 /* Now update back the attributes column in pa_proj_elements and pa_proj_element_versions with actual data from source project
    UPDATE pa_proj_elements ppe1
    SET attribute15 = ( SELECT attribute15 FROM pa_proj_elements ppe2
                         WHERE ppe2.project_id = p_src_project_id
                           AND ppe2.proj_element_id = ppe1.attribute15 )
    WHERE project_id = p_dest_project_id ;

    UPDATE pa_proj_element_versions ppevs1
    SET attribute15 = ( SELECT attribute15 FROM pa_proj_element_versions ppevs2
                         WHERE ppevs2.project_id = p_src_project_id
                           AND ppevs2.element_version_id = ppevs1.attribute15 )
    WHERE project_id = p_dest_project_id ; */

    --3916763 Begin

    IF l_debug_mode = 'Y' THEN
    Pa_Debug.WRITE(G_PKG_NAME, 'l_submit_wf_required='||l_submit_wf_required, l_debug_level3);
    Pa_Debug.WRITE(G_PKG_NAME, 'p_dest_project_id='||p_dest_project_id, l_debug_level3);
    Pa_Debug.WRITE(G_PKG_NAME, 'l_submit_wf_str_id='||l_submit_wf_str_id, l_debug_level3);
    Pa_Debug.WRITE(G_PKG_NAME, 'l_submit_wf_str_version_id='||l_submit_wf_str_version_id, l_debug_level3);
    Pa_Debug.WRITE(G_PKG_NAME, 'fnd_global.resp_id='||fnd_global.resp_id, l_debug_level3);
    END IF;

    IF l_submit_wf_required = 'Y' AND l_submit_wf_str_version_id IS NOT NULL THEN
    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'Calling SUBMIT_WORKPLAN ', l_debug_level3);
    END IF;

    PA_PROJECT_STRUCTURE_PUB1.SUBMIT_WORKPLAN
        (
                     p_calling_module       => p_calling_module
                    ,p_project_id       => p_dest_project_id
                    ,p_structure_id     => l_submit_wf_str_id
                ,p_structure_version_id     => l_submit_wf_str_version_id
            ,p_responsibility_id        => fnd_global.resp_id
            ,x_return_status            => x_return_status
                    ,x_msg_count                => x_msg_count
                    ,x_msg_data                 => x_msg_data
                );
    IF l_debug_mode = 'Y' THEN
        Pa_Debug.WRITE(G_PKG_NAME, 'After Call SUBMIT_WORKPLAN x_return_status='||x_return_status, l_debug_level3);
    END IF;
    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;
    END IF;
    --3916763 End

    x_return_status := FND_API.G_RET_STS_SUCCESS ;

    IF (p_commit = FND_API.G_TRUE) THEN
        COMMIT;
    END IF;

    IF (p_debug_mode = 'Y') THEN
        pa_debug.debug('PA_PROJ_TASK_STRUC_PUB.copy_structures_tasks_bulk END');
        Pa_Debug.reset_curr_function; --For bug 4252182
    END IF;

EXCEPTION

WHEN FND_API.G_EXC_ERROR THEN

     x_return_status := Fnd_Api.G_RET_STS_ERROR;

     IF p_commit = FND_API.G_TRUE THEN
        ROLLBACK TO copy_struc_tasks_bulk;
     END IF;

     l_msg_count := Fnd_Msg_Pub.count_msg;
     IF l_msg_count = 1 AND x_msg_data IS NULL
      THEN
          Pa_Interface_Utils_Pub.get_messages
              ( p_encoded        => Fnd_Api.G_FALSE
              , p_msg_index      => 1
              , p_msg_count      => l_msg_count
              , p_msg_data       => l_msg_data
              , p_data           => l_data
              , p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF l_debug_mode = 'Y' THEN
          Pa_Debug.reset_curr_function;
     END IF;

WHEN Invalid_Arg_Exc_WP THEN
     x_return_status := Fnd_Api.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := ' PA_PROJ_TASK_STRUC_PUB : copy_structures_tasks_bulk : NULL parameters passed';

     IF p_commit = FND_API.G_TRUE THEN
        ROLLBACK TO copy_struc_tasks_bulk;
     END IF;

     Fnd_Msg_Pub.add_exc_msg
                   (  p_pkg_name         => 'PA_TOP_TASK_CUST_INVOICE_PVT'
                    , p_procedure_name  => 'copy_structures_tasks_bulk'
                    , p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                         l_debug_level5);
          Pa_Debug.reset_curr_function;
     END IF;
     RAISE;

WHEN OTHERS THEN
     x_return_status := Fnd_Api.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     IF p_commit = FND_API.G_TRUE THEN
        ROLLBACK TO copy_struc_tasks_bulk;
     END IF;

     Fnd_Msg_Pub.add_exc_msg
       ( p_pkg_name         => 'PA_PROJ_TASK_STRUC_PUB'
        , p_procedure_name  => 'copy_structures_tasks_bulk'
        , p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,
                         l_debug_level5);
          Pa_Debug.reset_curr_function;
     END IF;
     RAISE;
END copy_structures_tasks_bulk;


FUNCTION get_adjusted_dates(
   p_target_start_date    DATE
  ,p_target_finish_date   DATE
  ,p_delta NUMBER
  ,p_scheduled_start_date  DATE
  ,p_scheduled_finish_date  DATE
 ) RETURN DATE IS
--fix bug 2831973
-- l_delta    NUMBER;
 l_scheduled_start_date  DATE;
 l_scheduled_finish_date DATE;
BEGIN

--fix bug 2831973
--replace all l_delta with p_delta
--    IF (p_target_start_date IS NULL) THEN
--       l_delta := 0;
--    ELSE
--       l_delta := p_target_start_date - p_scheduled_start_date;
--    END IF;

    --calculate scheduled start and finish dates
    IF (p_target_finish_date < p_scheduled_start_date + p_delta) THEN
        l_scheduled_start_date := p_target_finish_date;
    ELSE
        l_scheduled_start_date := p_scheduled_start_date + p_delta;
    END IF;

    IF (p_target_finish_date < p_scheduled_finish_date + p_delta) THEN
        l_scheduled_finish_date := p_target_finish_date;
    ELSE
        l_scheduled_finish_date := p_scheduled_finish_date + p_delta;
    END IF;

    IF p_scheduled_finish_date IS NULL
    THEN
       RETURN l_scheduled_start_date;
    ELSE
       RETURN l_scheduled_finish_date;
    END IF;

END get_adjusted_dates;

PROCEDURE copy_structures_bulk
( p_commit                        IN VARCHAR2    := FND_API.G_FALSE
 ,p_validate_only                 IN VARCHAR2    := FND_API.G_TRUE
 ,p_validation_level              IN VARCHAR2    := 100
 ,p_calling_module                IN VARCHAR2    := 'SELF_SERVICE'
 ,p_debug_mode                    IN VARCHAR2    := 'N'
 ,p_max_msg_count                 IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_src_project_id                IN NUMBER
 ,p_dest_project_id               IN NUMBER
 ,p_delta                         IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_copy_task_flag                IN VARCHAR2    := 'Y'
 ,p_dest_template_flag            IN VARCHAR2    := 'N'     --bug 2805602
 ,p_src_template_flag            IN VARCHAR2    := 'N'   --bug 2805602
 ,p_dest_project_name             IN VARCHAR2               --bug 2805602
 ,p_target_start_date             IN DATE
 ,p_target_finish_date             IN DATE
 ,p_calendar_id                   IN NUMBER
 ,x_return_status                OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                    OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                     OUT NOCOPY VARCHAR2 ) --File.Sql.39 bug 4440895
IS
  l_return_status                VARCHAR2(1);
  l_msg_count                    NUMBER;
  l_msg_data                     VARCHAR2(250);
  l_append                       VARCHAR2(10) := ': ';
  l_project_name             VARCHAR2(250);
  l_workplan_enabled         VARCHAR2(1);
  l_shared                   VARCHAR2(1);
  l_versioning_enabled       VARCHAR2(1);
  l_auto_pub_enabled         VARCHAR2(1);
  l_src_template_flag        VARCHAR2(1);
  l_dest_template_flag       VARCHAR2(1);
  l_copy_flag_set            VARCHAR2(1);
  l_max_date                 DATE;
  l_max_date2                DATE;
  l_latst_upd_wrkng_str_ver  NUMBER;
  l_fin_str_copy_flag       VARCHAR2(1);
  l_LATEST_EFF_PUBLISHED_FLAG   VARCHAR2(1);
  l_name                     VARCHAR2(250);
  l_suffix                   VARCHAR2(250);
  l_struc_version_id         NUMBER;
  l_src_str_version_id       NUMBER;
  i                          NUMBER;
  j                          NUMBER ;
  k                          NUMBER ;

  --fix bug 2831973
  l_delta                    NUMBER;
  l_src_sch_st_date          DATE;
  CURSOR get_src_sch_st_date(c_project_id NUMBER, c_struc_ver_id NUMBER) IS
    select scheduled_start_date
    from pa_proj_elem_ver_schedule
    where project_id = c_project_id
    and element_version_id = c_struc_ver_id;


/*bug 3737444 : The below code commented */
/*  CURSOR get_wp_attr IS
    select *
    from   pa_proj_workplan_attr
    where  project_id = p_src_project_id; */

/* Code Addition starts for bug 3737444 */
  CURSOR get_wp_attr IS
    select * from  pa_proj_workplan_attr pppa where pppa.project_id=p_src_project_id
    and exists (select null from pa_proj_structure_types pst, pa_structure_types ps
                where pst.structure_type_id=ps.structure_type_id
                and  ps. STRUCTURE_TYPE ='WORKPLAN'
                and pst.proj_element_id=pppa.proj_element_id);


/* Code Addition ends for bug 3737444 */

  l_wp_attr_rec get_wp_attr%ROWTYPE;
  l_user_id    NUMBER := FND_GLOBAL.USER_ID;
  l_login_id   NUMBER := FND_GLOBAL.LOGIN_ID;

  CURSOR l_get_structure_attr_csr
  IS
/*  SELECT *
  FROM PA_PROJ_ELEM_ver_structure ppevs
  WHERE project_id = p_src_project_id;*//*Commented below query and following criteria by SMUKKA */
  select ppevs.*
    from pa_structure_types pst,
         pa_proj_structure_types ppst,
         pa_proj_elem_ver_structure ppevs
   where ppevs.project_id = p_src_project_id
     and ppevs.proj_element_id= ppst.proj_element_id
     and ppst.structure_type_id = pst.structure_type_id
     and pst.structure_type in ('WORKPLAN','FINANCIAL');

  CURSOR l_get_structure_attr_csr2
  IS
  SELECT ppevs.element_version_id, ppevs.status_code, ppevs.LATEST_EFF_PUBLISHED_FLAG, ppevs.current_flag,
         ppst.structure_type_id
/*  FROM PA_PROJ_ELEM_ver_structure ppevs,
       pa_proj_structure_types ppst
  WHERE project_id = p_src_project_id
    AND ppst.proj_element_id(+) = ppevs.proj_element_id;*//*Commented below query and following criteria by SMUKKA */
  from pa_proj_elem_ver_structure ppevs,
       pa_proj_structure_types ppst,
       pa_structure_types pst
 where project_id = p_src_project_id
   and ppst.proj_element_id(+) = ppevs.proj_element_id
   and ppst.structure_type_id = pst.structure_type_id
   and pst.structure_type in ('WORKPLAN','FINANCIAL');

   CURSOR cur_elem_ver_seq
        IS
          SELECT pa_proj_element_versions_s.nextval
            FROM sys.dual;

l_get_structure_attr_csr_rec    l_get_structure_attr_csr%ROWTYPE;
l_get_structure_attr_csr_rec2    l_get_structure_attr_csr2%ROWTYPE;

TYPE structure_ver_record IS RECORD
(src_str_version_id         NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 src_str_status                 VARCHAR2(150)     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 latest_pub_flag           VARCHAR2(1)      := 'N',
 current_flag           VARCHAR2(1)      := 'N',
 last_update_date           DATE                := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 copy_flag                 VARCHAR2(1)      := 'N',
 dest_str_status           VARCHAR2(150)     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 src_stru_type_id          NUMBER           := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
);

TYPE l_dest_str_versions IS TABLE OF structure_ver_record
     INDEX BY BINARY_INTEGER;
l_dest_str_versions_tbl  l_dest_str_versions;
l_latest_pub_str_ver_id  NUMBER;

/* Code added for 6211012*/

TYPE typ_obj_rela_id is TABLE OF pa_object_relationships.object_relationship_id%TYPE
INDEX BY BINARY_INTEGER;
l_obj_rel_id typ_obj_rela_id;

TYPE typ_obj_typ_from is TABLE OF pa_object_relationships.object_type_from%TYPE
INDEX BY BINARY_INTEGER;
l_obj_typ_from typ_obj_typ_from;

TYPE typ_obj_from_id is TABLE OF pa_object_relationships.object_id_from1%TYPE
INDEX BY BINARY_INTEGER;
l_obj_from_id typ_obj_from_id;

TYPE typ_obj_typ_to is TABLE OF pa_object_relationships.object_type_to%TYPE
INDEX BY BINARY_INTEGER;
l_obj_typ_to typ_obj_typ_to;

TYPE typ_obj_to_id is TABLE OF pa_object_relationships.object_id_to1%TYPE
INDEX BY BINARY_INTEGER;
l_obj_to_id typ_obj_to_id;

TYPE typ_rel_typ is TABLE OF pa_object_relationships.relationship_type%TYPE
INDEX BY BINARY_INTEGER;
l_rel_typ typ_rel_typ;

TYPE typ_rel_subtyp is TABLE OF pa_object_relationships.relationship_subtype%TYPE
INDEX BY BINARY_INTEGER;
l_rel_subtyp typ_rel_subtyp;

TYPE typ_rec_ver_num is TABLE OF pa_object_relationships.Record_Version_Number%TYPE
INDEX BY BINARY_INTEGER;
l_rec_ver_num typ_rec_ver_num;

TYPE typ_wt_percent is TABLE OF pa_object_relationships.weighting_percentage%TYPE
INDEX BY BINARY_INTEGER;
l_wt_percent typ_wt_percent;


CURSOR cur_pa_obj_rela_3(c_src_str_version_id NUMBER,
		     c_struc_version_id NUMBER
		     ) IS
SELECT /*+ USE_HASH(ppev2 ppev1)*/
     pa_object_relationships_s.nextval,
     pobj.object_type_from,
     ppev1.element_version_id,
     pobj.object_type_to,
     ppev2.element_version_id,
     pobj.relationship_type,
     pobj.relationship_subtype,
     pobj.Record_Version_Number,
     pobj.weighting_percentage
FROM ( SELECT  object_type_from, object_id_from1,
               object_type_to,   object_id_to1,
               relationship_type, relationship_subtype,
               Record_Version_Number, weighting_percentage
       FROM pa_object_relationships
       --bug#3094283WHERE RELATIONSHIP_TYPE = 'S'
            start with object_id_from1 = c_src_str_version_id
            and RELATIONSHIP_TYPE = 'S'  /* Bug 2881667 - Added this condition */
            connect by  object_id_from1 =  prior object_id_to1
            and RELATIONSHIP_TYPE = 'S' ) pobj,     /* Bug 2881667 - Added this condition */
            pa_proj_element_versions ppev1,
            pa_proj_element_versions ppev2
WHERE
       --bug#3094283   ppev1.project_id = p_dest_project_id
            ppev1.attribute15 = pobj.object_id_from1
       --bug#3094283 AND ppev2.project_id = p_dest_project_id
        AND ppev2.attribute15 = pobj.object_id_to1
        AND ppev1.parent_structure_version_id = c_struc_version_id
        AND ppev2.parent_structure_version_id = c_struc_version_id;

/*End of Code added for 6211012*/

--bug 3138959

CURSOR cur_pa_struct IS
SELECT ppe.proj_element_id, ppe.attribute15, ppst.structure_type_id
/*  FROM pa_proj_elements ppe, pa_proj_structure_types ppst
 WHERE ppe.proj_element_id = ppst.proj_element_id
   AND ppe.project_id = p_dest_project_id
   AND ppe.object_type = 'PA_STRUCTURES';*//*Commented below query and following criteria by SMUKKA */
  from pa_proj_elements ppe,
       pa_proj_structure_types ppst,
       pa_structure_types pst
 where ppe.proj_element_id =ppst.proj_element_id
   and ppe.project_id = p_dest_project_id
   and ppe.object_type = 'PA_STRUCTURES'
   and ppst.structure_type_id = pst.structure_type_id
   and pst.structure_type in ('WORKPLAN','FINANCIAL');


  x_err_code             NUMBER;
  x_err_stage            VARCHAR2(2000);
  x_err_stack            VARCHAR2(2000);


--bug 3140032

  CURSOR c_attach_tasks(c_orig_parent_structure_id NUMBER,
                        c_new_parent_structure_id NUMBER) is
  SELECT orig.proj_element_id orig_task_id,
         new.proj_element_id new_task_id
    FROM pa_proj_elements orig, pa_proj_elements new
   WHERE orig.project_id = p_src_project_id
     AND new.element_number = orig.element_number
     AND new.project_id = p_dest_project_id
     AND new.object_type = 'PA_TASKS'
     AND orig.object_type = 'PA_TASKS'
     AND orig.parent_structure_id = c_orig_parent_structure_id
     AND new.parent_structure_id = c_new_parent_structure_id
     ;

  c_atch                        c_attach_tasks%ROWTYPE ;
  l_source_parent_structure_id  NUMBER;
  l_financial_structure_id      Number;
--bug 3140032
--bug 3138959

  --fix bug 2831775
  l_structure_id             NUMBER;
  CURSOR get_shared_struc_id IS
    select ppe.proj_element_id
/*    from pa_proj_elements
    where project_id = p_dest_project_id
    and object_type = 'PA_STRUCTURES';*//*Commented below query and following criteria by SMUKKA */
    from pa_proj_elements ppe,
         pa_proj_structure_types ppst,
         pa_structure_types pst
    where project_id = p_dest_project_id
    and object_type = 'PA_STRUCTURES'
    and ppe.proj_element_id =ppst.proj_element_id
    and ppst.structure_type_id = pst.structure_type_id
    and pst.structure_type in ('WORKPLAN','FINANCIAL');

--bug 2838547
    cursor get_person_id(p_user_id NUMBER) IS
    select p.person_id
      from per_all_people_f p, fnd_user f
     where f.employee_id = p.person_id
       and sysdate between p.effective_start_date and p.effective_end_date
       and f.user_id = p_user_id;

  l_publish_person_id   NUMBER;
--bug 2838547

  --Bug 2955589.
  l_structure_ver_name   pa_projects_all.name%TYPE;
  l_working_ver_count    NUMBER;
  l_structure_version_id pa_proj_element_versions.element_version_id%TYPE;
  -- The following two flags will indicate if the respective version has to be
  -- created when versioning is enabled and no working version exists for the
  -- source project.
  l_create_fin_version   VARCHAR2(1);
  l_create_wk_version    VARCHAR2(1);

BEGIN

  IF (p_debug_mode = 'Y') THEN
    pa_debug.init_err_stack ('PA_PROJ_TASK_STRUC_PUB.copy_structures_bulk');  --For bug 4252182
    pa_debug.debug('PA_PROJ_TASK_STRUC_PUB.copy_structures_bulk begin');
  END IF;

  IF (p_commit = FND_API.G_TRUE) THEN
    savepoint copy_structure_bulk_pvt;
  END IF;

  -- Check if source and destination project are the same
  if p_src_project_id = p_dest_project_id then
    x_return_status := FND_API.G_RET_STS_SUCCESS;
    return;
  end if;
  l_dest_template_flag        := p_dest_template_flag;        --bug 2805602
  l_src_template_flag         := p_src_template_flag;          --bug 2805602
  l_project_name              := p_dest_project_name;   --bug 2805602

  select meaning
    into l_suffix
    from pa_lookups
   where lookup_type = 'PA_STRUCTURE_TYPE_CLASS'
     and lookup_code = 'WORKPLAN';

     -- Bug 3717026 Begin, commented as the structure name should be same as the project name.
    --IF pa_project_pub.G_structure_in_rec.structure_version_name is NOT NULL AND pa_project_pub.G_structure_in_rec.structure_version_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
    --l_name := pa_project_pub.G_structure_in_rec.structure_version_name;
    --ELSE
    l_name := substr(l_project_name, 1, 240);
    --END IF;
     -- Bug 3717026 End
    l_workplan_enabled := PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( p_src_project_id );

    --bug 2838547
    open get_person_id(FND_GLOBAL.USER_ID);
    fetch get_person_id into l_publish_person_id;
    IF get_person_id%NOTFOUND then
      l_publish_person_id := NULL;
    END IF;
    close get_person_id;
    --bug 2838547

    IF NVL( l_workplan_enabled, 'N' ) = 'Y'
    THEN

        l_shared := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(p_src_project_id);
        --Get workplan attributes
        OPEN get_wp_attr;
        FETCH get_wp_attr into l_wp_attr_rec;
        CLOSE get_wp_attr;

        l_versioning_enabled := l_wp_attr_rec.WP_ENABLE_VERSION_FLAG;
        l_auto_pub_enabled   := l_wp_attr_rec.AUTO_PUB_UPON_CREATION_FLAG;

        --Modify name; add suffix
        --l_name := substr(l_project_name||l_append||l_suffix, 1, 240);   --update it later

    END IF;


--copy pa_proj_elements
--copying structures and tasks as is.
    INSERT INTO pa_proj_elements(
                  PROJ_ELEMENT_ID
                 ,PROJECT_ID
                 ,OBJECT_TYPE
                 ,ELEMENT_NUMBER
                 ,NAME
                 ,DESCRIPTION
                 ,STATUS_CODE
                 ,WF_STATUS_CODE
                 ,PM_SOURCE_CODE
                 ,PM_SOURCE_REFERENCE
                 ,CLOSED_DATE
                 ,LOCATION_ID
                 ,MANAGER_PERSON_ID
                 ,CARRYING_OUT_ORGANIZATION_ID
                 ,TYPE_ID
                 ,PRIORITY_CODE
                 ,CREATION_DATE
                 ,CREATED_BY
                 ,LAST_UPDATE_DATE
                 ,LAST_UPDATED_BY
                 ,LAST_UPDATE_LOGIN
                 ,RECORD_VERSION_NUMBER
                 ,REQUEST_ID
                 ,PROGRAM_APPLICATION_ID
                 ,PROGRAM_ID
                 ,PROGRAM_UPDATE_DATE
                 ,LINK_TASK_FLAG
                 ,BASELINE_START_DATE
                 ,BASELINE_FINISH_DATE
                 ,progress_outdated_flag
                  ,ATTRIBUTE_CATEGORY
                  ,ATTRIBUTE1
                  ,ATTRIBUTE2
                  ,ATTRIBUTE3
                  ,ATTRIBUTE4
                  ,ATTRIBUTE5
                  ,ATTRIBUTE6
                  ,ATTRIBUTE7
                  ,ATTRIBUTE8
                  ,ATTRIBUTE9
                  ,ATTRIBUTE10
                  ,ATTRIBUTE11
                  ,ATTRIBUTE12
                  ,ATTRIBUTE13
                  ,ATTRIBUTE14
                  ,ATTRIBUTE15
                  ,parent_structure_id
                               ,TYPE_CODE
                               ,INC_PROJ_PROGRESS_FLAG
                               ,WQ_ITEM_CODE
                               ,WQ_UOM_CODE
                               ,WQ_ACTUAL_ENTRY_CODE
                               ,TASK_PROGRESS_ENTRY_PAGE_ID
                               ,BASELINE_DURATION
                               ,PHASE_CODE
                               ,PHASE_VERSION_ID
                 ,source_object_id
                 ,source_object_type
                 ,PROGRESS_WEIGHT               --Bug 3616964
                 ,BASE_PERCENT_COMP_DERIV_CODE
                 ,FUNCTION_CODE
                 ,ENABLE_WF_FLAG
                 ,WF_ITEM_TYPE
                 ,WF_PROCESS
                 ,WF_START_LEAD_DAYS
                   )
                SELECT
                  pa_tasks_s.nextval
                 ,p_dest_project_id
                 ,ppe.object_type
                 ,ppe.element_number
                 ,DECODE( ppe.object_type, 'PA_STRUCTURES',l_name, ppe.name )
                 ,ppe.DESCRIPTION
                 ,ppe.STATUS_CODE
                 ,ppe.WF_STATUS_CODE
                 ,ppe.PM_SOURCE_CODE
                 ,ppe.PM_SOURCE_REFERENCE
                 ,ppe.CLOSED_DATE
                 ,ppe.LOCATION_ID
                 ,ppe.MANAGER_PERSON_ID
                 ,ppe.CARRYING_OUT_ORGANIZATION_ID
                 ,ppe.TYPE_ID
                 ,ppe.PRIORITY_CODE
                 ,SYSDATE
                 ,l_user_id
                 ,SYSDATE
                 ,l_user_id
                 ,l_login_id
                 ,ppe.RECORD_VERSION_NUMBER
                 ,ppe.REQUEST_ID
                 ,ppe.PROGRAM_APPLICATION_ID
                 ,ppe.PROGRAM_ID
                 ,ppe.PROGRAM_UPDATE_DATE
                 ,ppe.LINK_TASK_FLAG
                 ,ppe.BASELINE_START_DATE
                 ,ppe.BASELINE_FINISH_DATE
                 ,'N'     --,ppe.progress_outdated_flag
                  ,ppe.ATTRIBUTE_CATEGORY
                  ,ppe.ATTRIBUTE1
                  ,ppe.ATTRIBUTE2
                  ,ppe.ATTRIBUTE3
                  ,ppe.ATTRIBUTE4
                  ,ppe.ATTRIBUTE5
                  ,ppe.ATTRIBUTE6
                  ,ppe.ATTRIBUTE7
                  ,ppe.ATTRIBUTE8
                  ,ppe.ATTRIBUTE9
                  ,ppe.ATTRIBUTE10
                  ,ppe.ATTRIBUTE11
                  ,ppe.ATTRIBUTE12
                  ,ppe.ATTRIBUTE13
                  ,ppe.ATTRIBUTE14
                  ,ppe.proj_element_id    --attribute 15 is used to store old structure id to identify the structure type
                  ,ppe.parent_structure_id
                               ,ppe.TYPE_CODE
                               ,ppe.INC_PROJ_PROGRESS_FLAG
                               ,ppe.WQ_ITEM_CODE
                               ,ppe.WQ_UOM_CODE
                               ,ppe.WQ_ACTUAL_ENTRY_CODE
                               ,ppe.TASK_PROGRESS_ENTRY_PAGE_ID
                               ,ppe.BASELINE_DURATION
                               ,ppe.PHASE_CODE
                               ,ppe.PHASE_VERSION_ID
                  ,p_dest_project_id
                  ,'PA_PROJECTS'
                  ,ppe.PROGRESS_WEIGHT               --Bug 3616964
                  ,ppe.BASE_PERCENT_COMP_DERIV_CODE
                  ,ppe.FUNCTION_CODE
                  ,ppe.ENABLE_WF_FLAG
                  ,ppe.WF_ITEM_TYPE
                  ,ppe.WF_PROCESS
                  ,ppe.WF_START_LEAD_DAYS
                /* FROM pa_proj_elements ppe
                 where project_id = p_src_project_id
                   and ppe.object_type = 'PA_STRUCTURES';*//*Commented below query and following criteria by SMUKKA */
                   from pa_proj_elements ppe
                  where ppe.project_id = p_src_project_id
                    and ppe.object_type = 'PA_STRUCTURES'
                    and ppe.proj_element_id IN (select ppe2.proj_element_id
                                                  from pa_proj_elements ppe2,
                                                       pa_proj_structure_types ppst,
                                                       pa_structure_types pst
                                                 where ppe2.project_id = p_src_project_id
                                                   and ppe2.object_type = 'PA_STRUCTURES'
                                                   and ppe2.proj_element_id = ppst.proj_element_id
                                                   and ppst.structure_type_id = pst.structure_type_id
                                                   and pst.structure_type in ('WORKPLAN','FINANCIAL'));


         --updating element_number with the proj_element_id
         update pa_proj_elements
            set element_number = proj_element_id
          WHERE project_id = p_dest_project_id
            AND object_type = 'PA_STRUCTURES'
          ;


--Copy pa_proj_structure_types

          INSERT INTO PA_PROJ_STRUCTURE_TYPES(
                PROJ_STRUCTURE_TYPE_ID
               ,PROJ_ELEMENT_ID
               ,STRUCTURE_TYPE_ID
               ,CREATION_DATE
               ,CREATED_BY
               ,LAST_UPDATE_DATE
               ,LAST_UPDATED_BY
               ,LAST_UPDATE_LOGIN
               ,RECORD_VERSION_NUMBER )
           SELECT
             pa_proj_structure_types_s.nextval
            , ppe.proj_element_id
            , ppst.structure_type_id            --structure type
            , sysdate
            , l_user_id
            , sysdate
            , l_user_id
            , l_login_id
            , 1
           /*from pa_proj_elements ppe, pa_proj_structure_types ppst
           where ppe.project_id = p_dest_project_id
             and ppe.attribute15 = ppst.proj_element_id   ---join with copy_from_proj_element_id to get the structure types
             and ppe.object_type = 'PA_STRUCTURES';*//*Commented below query and following criteria by SMUKKA */
           from pa_proj_elements ppe,
                pa_proj_structure_types ppst,
                pa_structure_types pst
          where ppe.project_id = p_dest_project_id
            and ppe.attribute15 = ppst.proj_element_id
            and ppe.object_type = 'PA_STRUCTURES'
            and ppst.structure_type_id = pst.structure_type_id
            and pst.structure_type in ('WORKPLAN','FINANCIAL');

          --bug 3138959
          IF l_shared = 'N' AND l_workplan_enabled = 'Y'       -- For Split structures
             AND pa_project_pub.G_structure_in_rec.structure_type = 'WORKPLAN'
          THEN
              FOR cur_pa_struct_rec in cur_pa_struct LOOP
                   IF cur_pa_struct_rec.structure_type_id = 6          --Financial
                   THEN
                        --call PA_PROJECT_CORE2.copy_task to copy PA_TASKSi tasks.

                        pa_project_core2.copy_task (
                           x_orig_project_id   => p_src_project_id ,
                           x_new_project_id    => p_dest_project_id,
                           x_err_code          => x_err_code,
                           x_err_stage         => x_err_stage,
                           x_err_stack         => x_err_stack);

                        if ( x_err_code > 0 or x_err_code < 0 ) then
                             x_msg_data := x_err_stage;
                             raise FND_API.G_EXC_ERROR;
                        end if;

                       --Split; Creating Financial tasks
                       INSERT INTO pa_proj_elements(
                                PROJ_ELEMENT_ID
                               ,PROJECT_ID
                               ,OBJECT_TYPE
                               ,ELEMENT_NUMBER
                               ,NAME
                               ,DESCRIPTION
                               ,STATUS_CODE
                               ,WF_STATUS_CODE
                               ,PM_SOURCE_CODE
                               ,PM_SOURCE_REFERENCE
                               ,CLOSED_DATE
                               ,LOCATION_ID
                               ,MANAGER_PERSON_ID
                               ,CARRYING_OUT_ORGANIZATION_ID
                               ,TYPE_ID
                               ,PRIORITY_CODE
                               ,CREATION_DATE
                               ,CREATED_BY
                               ,LAST_UPDATE_DATE
                               ,LAST_UPDATED_BY
                               ,LAST_UPDATE_LOGIN
                               ,RECORD_VERSION_NUMBER
                               ,REQUEST_ID
                               ,PROGRAM_APPLICATION_ID
                               ,PROGRAM_ID
                               ,PROGRAM_UPDATE_DATE
                               ,LINK_TASK_FLAG
                               ,BASELINE_START_DATE
                               ,BASELINE_FINISH_DATE
                               ,progress_outdated_flag
                               ,ATTRIBUTE_CATEGORY
                               ,ATTRIBUTE1
                               ,ATTRIBUTE2
                               ,ATTRIBUTE3
                               ,ATTRIBUTE4
                               ,ATTRIBUTE5
                               ,ATTRIBUTE6
                               ,ATTRIBUTE7
                               ,ATTRIBUTE8
                               ,ATTRIBUTE9
                               ,ATTRIBUTE10
                               ,ATTRIBUTE11
                               ,ATTRIBUTE12
                               ,ATTRIBUTE13
                               ,ATTRIBUTE14
                               ,ATTRIBUTE15
                               ,parent_structure_id
                               ,TYPE_CODE
                               ,INC_PROJ_PROGRESS_FLAG
                               ,WQ_ITEM_CODE
                               ,WQ_UOM_CODE
                               ,WQ_ACTUAL_ENTRY_CODE
                               ,TASK_PROGRESS_ENTRY_PAGE_ID
                               ,BASELINE_DURATION
                               ,PHASE_CODE
                               ,PHASE_VERSION_ID
                               ,source_object_id
                               ,source_object_type
                               ,PROGRESS_WEIGHT               --Bug 3616964
                               ,BASE_PERCENT_COMP_DERIV_CODE
                               ,FUNCTION_CODE
                               ,ENABLE_WF_FLAG
                               ,WF_ITEM_TYPE
                               ,WF_PROCESS
                               ,WF_START_LEAD_DAYS
                               )
                          SELECT
                               pt.task_id
                              ,p_dest_project_id
                              ,ppe.object_type
                              ,ppe.element_number
                              ,ppe.name
                              ,ppe.DESCRIPTION
                              ,INITIAL_STATUS_CODE             --bug 2827090
                              ,ppe.WF_STATUS_CODE
                              ,ppe.PM_SOURCE_CODE    --update the source code later
                              ,decode(ppe.PM_SOURCE_REFERENCE, null,pt.task_number, ppe.PM_SOURCE_REFERENCE )
                              ,ppe.CLOSED_DATE
                              ,ppe.LOCATION_ID
                              ,ppe.MANAGER_PERSON_ID
                              ,ppe.CARRYING_OUT_ORGANIZATION_ID
                              ,ppe.TYPE_ID
                              ,ppe.PRIORITY_CODE
                              ,SYSDATE
                              ,l_user_id
                              ,SYSDATE
                              ,l_user_id
                              ,l_login_id
                              ,ppe.RECORD_VERSION_NUMBER
                              ,ppe.REQUEST_ID
                              ,ppe.PROGRAM_APPLICATION_ID
                              ,ppe.PROGRAM_ID
                              ,ppe.PROGRAM_UPDATE_DATE
                              ,ppe.LINK_TASK_FLAG
                              ,ppe.BASELINE_START_DATE
                              ,ppe.BASELINE_FINISH_DATE
                              ,'N'    --,ppe.progress_outdated_flag
                              ,ppe.ATTRIBUTE_CATEGORY
                              ,ppe.ATTRIBUTE1
                              ,ppe.ATTRIBUTE2
                              ,ppe.ATTRIBUTE3
                              ,ppe.ATTRIBUTE4
                              ,ppe.ATTRIBUTE5
                              ,ppe.ATTRIBUTE6
                              ,ppe.ATTRIBUTE7
                              ,ppe.ATTRIBUTE8
                              ,ppe.ATTRIBUTE9
                              ,ppe.ATTRIBUTE10
                              ,ppe.ATTRIBUTE11
                              ,ppe.ATTRIBUTE12
                              ,ppe.ATTRIBUTE13
                              ,ppe.ATTRIBUTE14
                              ,ppe.proj_element_id    --attribute 15 is used to store old ids
                              ,cur_pa_struct_rec.proj_element_id
                               ,ppe.TYPE_CODE
                               ,ppe.INC_PROJ_PROGRESS_FLAG
                               ,ppe.WQ_ITEM_CODE
                               ,ppe.WQ_UOM_CODE
                               ,ppe.WQ_ACTUAL_ENTRY_CODE
                               ,ppe.TASK_PROGRESS_ENTRY_PAGE_ID
                               ,ppe.BASELINE_DURATION
                               ,ppe.PHASE_CODE
                               ,ppe.PHASE_VERSION_ID
                               ,p_dest_project_id
                               ,'PA_PROJECTS'
                               ,ppe.PROGRESS_WEIGHT              --Bug 3616964
                               ,ppe.BASE_PERCENT_COMP_DERIV_CODE
                               ,ppe.FUNCTION_CODE
                               ,'N'
                               ,ppe.WF_ITEM_TYPE
                               ,ppe.WF_PROCESS
                               ,ppe.WF_START_LEAD_DAYS
                         FROM pa_proj_elements ppe,
                              pa_tasks pt,
                              pa_task_types ptt     --bug 2827090
                        WHERE ppe.project_id  = p_src_project_id
                          AND pt.project_id   = p_dest_project_id
                          AND pt.task_number  = substrb(rtrim(ppe.element_number),1,25) -- Substrb added for Bug 5152448
                          AND ppe.parent_structure_id = cur_pa_struct_rec.attribute15
                          and ppe.object_type = 'PA_TASKS'
                          and ppe.type_id        = ptt.task_type_id    --bug 2827090
                           ;

                        l_financial_structure_id := cur_pa_struct_rec.proj_element_id;
                        ---update task reference in pa_tasks for all the
                           update pa_tasks
                              set PM_TASK_REFERENCE = task_number
                            where project_id = p_dest_project_id
                              and pm_task_reference IS NULL
                  ;


                        --bug 3140032
                        OPEN c_attach_tasks( cur_pa_struct_rec.attribute15,
                                             cur_pa_struct_rec.proj_element_id);
                        LOOP
                           FETCH c_attach_tasks INTO c_atch ;
                           if c_attach_tasks%notfound then
                              exit ;
                           end if;
                           fnd_attached_documents2_pkg.copy_attachments('PA_TASKS',
                                             c_atch.orig_task_id,
                                             null, null, null, null,
                                             'PA_TASKS',
                                             c_atch.new_task_id,
                                             null, null, null, null,
                                             FND_GLOBAL.USER_ID,
                                             FND_GLOBAL.LOGIN_ID,
                                             275, null, null);

                        END LOOP ;
                        CLOSE c_attach_tasks;
                        --bug 3140032
                ELSIF cur_pa_struct_rec.structure_type_id = 1
                THEN

                        ---update source reference in pa_proj_elements for all the
                           Update pa_proj_elements
                              set PM_SOURCE_CODE = ( SELECT PM_SOURCE_CODE FROM pa_proj_elements
                                                      WHERE project_id =  p_dest_project_id
                                                      AND object_type = 'PA_STRUCTURES'
                                                      AND proj_element_id = cur_pa_struct_rec.proj_element_id
                                                      AND PM_SOURCE_CODE IS NOT NULL
                                                      )
                            WHERE  proj_element_id = l_financial_structure_id
                             AND project_id = p_dest_project_id
                             AND PM_SOURCE_CODE IS NULL;

                        ---update source reference in pa_tasks for all the
                           Update pa_tasks
                              set PM_PRODUCT_CODE = ( SELECT PM_SOURCE_CODE FROM pa_proj_elements
                                                      WHERE project_id =  p_dest_project_id
                                                      AND object_type = 'PA_STRUCTURES'
                                                      AND proj_element_id = cur_pa_struct_rec.proj_element_id
                                                      AND PM_SOURCE_CODE IS NOT NULL
                                                      )
                            WHERE project_id = p_dest_project_id
                             AND PM_PRODUCT_CODE IS NULL;

                END IF; --if structure type = 6
             END LOOP;
          END IF; --bug 3138959

    IF NVL( l_workplan_enabled, 'N' ) = 'N'
    THEN
      --Only FINANCIAL
      --Creating structure version first
      OPEN cur_elem_ver_seq;
      FETCH cur_elem_ver_seq INTO l_struc_version_id;
      CLOSE cur_elem_ver_seq;


      --First copy structure version and then copy all task versions
      --We cannot perform both with the same sql bcoz we need parent_structure version id for tasks.
      INSERT INTO pa_proj_element_versions(
                     ELEMENT_VERSION_ID
                    ,PROJ_ELEMENT_ID
                    ,OBJECT_TYPE
                    ,PROJECT_ID
                    ,PARENT_STRUCTURE_VERSION_ID
                    ,DISPLAY_SEQUENCE
                    ,WBS_LEVEL
                    ,WBS_NUMBER
                    ,CREATION_DATE
                    ,CREATED_BY
                    ,LAST_UPDATE_DATE
                    ,LAST_UPDATED_BY
                    ,LAST_UPDATE_LOGIN
                    ,RECORD_VERSION_NUMBER
                    ,attribute15          --this column is used to store structure ver id of the source project to be used to created relationships.
                    ,ATTRIBUTE_CATEGORY
                     ,ATTRIBUTE1
                     ,ATTRIBUTE2
                     ,ATTRIBUTE3
                     ,ATTRIBUTE4
                     ,ATTRIBUTE5
                     ,ATTRIBUTE6
                     ,ATTRIBUTE7
                     ,ATTRIBUTE8
                     ,ATTRIBUTE9
                     ,ATTRIBUTE10
                     ,ATTRIBUTE11
                     ,ATTRIBUTE12
                     ,ATTRIBUTE13
                     ,ATTRIBUTE14
                     ,TASK_UNPUB_VER_STATUS_CODE
                   ,source_object_id
                   ,source_object_type
                    )
              SELECT
                     l_struc_version_id
                    ,ppe.proj_element_id
                    ,ppev.object_type
                    ,p_dest_project_id
                    ,l_struc_version_id
                    ,ppev.DISPLAY_SEQUENCE
                    ,ppev.WBS_LEVEL
                    ,ppev.WBS_NUMBER
                    ,SYSDATE                     ------CREATION_DATE
                    ,l_user_id          ------CREATED_BY
                    ,SYSDATE                     ------LAST_UPDATE_DATE
                    ,l_user_id          ------LAST_UPDATED_BY
                    ,l_login_id         ------LAST_UPDATE_LOGIN
                    ,ppev.RECORD_VERSION_NUMBER                           ------RECORD_VERSION_NUMBER
                    ,ppev.element_version_id
                    ,ppev.ATTRIBUTE_CATEGORY
                     ,ppev.ATTRIBUTE1
                     ,ppev.ATTRIBUTE2
                     ,ppev.ATTRIBUTE3
                     ,ppev.ATTRIBUTE4
                     ,ppev.ATTRIBUTE5
                     ,ppev.ATTRIBUTE6
                     ,ppev.ATTRIBUTE7
                     ,ppev.ATTRIBUTE8
                     ,ppev.ATTRIBUTE9
                     ,ppev.ATTRIBUTE10
                     ,ppev.ATTRIBUTE11
                     ,ppev.ATTRIBUTE12
                     ,ppev.ATTRIBUTE13
                     ,ppev.ATTRIBUTE14
                     ,ppev.TASK_UNPUB_VER_STATUS_CODE
             ,p_dest_project_id
             ,'PA_PROJECTS'
             /*from pa_proj_element_versions ppev,
                  pa_proj_elements ppe
              where ppev.project_id = p_src_project_id
                and ppe.project_id = p_dest_project_id
                and ppev.proj_element_id = ppe.attribute15
                and ppe.object_type = 'PA_STRUCTURES'
                and ppev.object_type = 'PA_STRUCTURES';*//*Commented below query and following criteria by SMUKKA */
             from pa_proj_element_Versions ppev,
                  pa_proj_elements ppe
            where ppev.project_id = p_src_project_id
              and ppe.project_id = p_dest_project_id
              and ppev.proj_element_id = ppe.attribute15
              and ppe.object_type = 'PA_STRUCTURES'
              and ppev.object_type = 'PA_STRUCTURES'
              and ppe.proj_element_id IN
                 (select ppe2.proj_element_id
                    from pa_proj_elements ppe2,
                         pa_proj_structure_types ppst,
                         pa_structure_types pst
--                   where ppe2.project_id = p_src_project_id
                   where ppe2.project_id = p_dest_project_id  --Bug 3585699 SMukka Replaced p_src_project_id by p_dest_project_id
                     and ppe2.object_type = 'PA_STRUCTURES'
                     and ppe2.proj_element_id = ppst.proj_element_id
                     and ppst.structure_type_id = pst.structure_type_id
                     and pst.structure_type in ('WORKPLAN','FINANCIAL'));



           SELECT element_version_id INTO l_src_str_version_id
             /*FROM pa_proj_element_versions
            WHERE project_id = p_src_project_id
              AND object_type = 'PA_STRUCTURES';*//*Commented below query and following criteria by SMUKKA */
             FROM pa_proj_element_versions
            WHERE project_id = p_src_project_id
              AND object_type = 'PA_STRUCTURES'
              and proj_element_id IN (select ppe2.proj_element_id
                                        from pa_proj_elements ppe2,
                                             pa_proj_structure_types ppst,
                                             pa_structure_types pst
                                       where ppe2.project_id = p_src_project_id
                                         and ppe2.object_type = 'PA_STRUCTURES'
                                         and ppe2.proj_element_id = ppst.proj_element_id
                                         and ppst.structure_type_id = pst.structure_type_id
                                         and pst.structure_type in ('WORKPLAN','FINANCIAL'));


--bug 3010538
--added PROCESS_UPDATE_WBS_FLAG
      INSERT INTO PA_PROJ_ELEM_VER_STRUCTURE(
         PEV_STRUCTURE_ID
        ,ELEMENT_VERSION_ID
        ,VERSION_NUMBER
        ,NAME
        ,PROJECT_ID
        ,PROJ_ELEMENT_ID
        ,DESCRIPTION
        ,EFFECTIVE_DATE
        ,PUBLISHED_DATE
        ,PUBLISHED_BY_PERSON_ID
        ,CURRENT_BASELINE_DATE
        ,CURRENT_FLAG
        ,CURRENT_BASELINE_PERSON_ID
        ,ORIGINAL_BASELINE_DATE
        ,ORIGINAL_FLAG
        ,ORIGINAL_BASELINE_PERSON_ID
        ,LOCK_STATUS_CODE
        ,LOCKED_BY_PERSON_ID
        ,LOCKED_DATE
        ,STATUS_CODE
        ,WF_STATUS_CODE
        ,LATEST_EFF_PUBLISHED_FLAG
        ,RECORD_VERSION_NUMBER
        ,WBS_RECORD_VERSION_NUMBER
        ,CREATION_DATE
        ,CREATED_BY
        ,LAST_UPDATE_DATE
        ,LAST_UPDATED_BY
        ,LAST_UPDATE_LOGIN
        ,change_reason_code
        ,PROCESS_UPDATE_WBS_FLAG
        ,current_working_flag   /* FPM bug 3301192 */
       ,source_object_id
       ,source_object_type
         )
       SELECT
         pa_proj_elem_ver_structure_s.nextval
        ,l_struc_version_id
        ,1
        --,ppevs.name, rtarway, 3655698, replaced ppevs.name with ppe.name
        ,ppe.name
        ,p_dest_project_id
        ,ppe.proj_element_id
        --,ppevs.DESCRIPTION , rtarway, 3655698 replaced ppevs.DESCRIPTION with ppe.DESCRIPTION
        ,ppe.description
        ,ppevs.EFFECTIVE_DATE
        ,decode(p_dest_template_flag, 'N', sysdate, to_date(NULL)) --bug 2838547
        ,decode(p_dest_template_flag, 'N', l_publish_person_id, NULL)     --bug 2838547
        ,ppevs.CURRENT_BASELINE_DATE
        ,ppevs.CURRENT_FLAG
        ,ppevs.CURRENT_BASELINE_PERSON_ID
        ,ppevs.ORIGINAL_BASELINE_DATE
        ,ppevs.ORIGINAL_FLAG
        ,ppevs.ORIGINAL_BASELINE_PERSON_ID
        ,'UNLOCKED'
        ,null
        ,null
        ,decode( p_dest_template_flag, 'N', 'STRUCTURE_PUBLISHED', ppevs.STATUS_CODE )
        ,ppevs.WF_STATUS_CODE
        ,decode( p_dest_template_flag, 'N', 'Y', ppevs.LATEST_EFF_PUBLISHED_FLAG )
        ,ppevs.RECORD_VERSION_NUMBER
        ,ppevs.WBS_RECORD_VERSION_NUMBER
        ,SYSDATE
        ,l_user_id
        ,SYSDATE
        ,l_user_id
        ,l_login_id
        ,ppevs.change_reason_code
        ,'N'
        ,ppevs.current_working_flag    /* FPM bug 3301192 */
    ,p_dest_project_id
    ,'PA_PROJECTS'
        /*FROM PA_PROJ_ELEM_VER_STRUCTURE ppevs, pa_proj_elements ppe
        WHERE ppevs.project_id = p_src_project_id
          AND ppe.project_id = p_dest_project_id
          and ppevs.proj_element_id = ppe.attribute15
          AND ppe.object_type = 'PA_STRUCTURES';*//*Commented below query and following criteria by SMUKKA */
         FROM PA_PROJ_ELEM_VER_STRUCTURE ppevs, pa_proj_elements ppe
        WHERE ppevs.project_id = p_src_project_id
          AND ppe.project_id = p_dest_project_id
          and ppevs.proj_element_id = ppe.attribute15
          AND ppe.object_type = 'PA_STRUCTURES'
      and ppe.proj_element_id IN (SELECT ppe2.proj_element_id
                                        FROM pa_proj_elements ppe2,
                                             pa_proj_structure_types ppst,
                                             pa_structure_types pst
                                       WHERE ppe2.project_id = p_dest_project_id
                                         AND ppe2.object_type = 'PA_STRUCTURES'
                                         AND ppe2.proj_element_id = ppst.proj_element_id
                                         AND ppst.structure_type_id = pst.structure_type_id
                                         AND pst.structure_type in ('WORKPLAN','FINANCIAL'));
    --Added by rtarway for BUG 3951701
    --Copy workplan attributes for financial only structures

         INSERT INTO pa_proj_workplan_attr(
          PROJ_ELEMENT_ID
         ,PROJECT_ID
         ,LAST_UPDATE_DATE
         ,LAST_UPDATED_BY
         ,CREATION_DATE
         ,CREATED_BY
         ,WP_APPROVAL_REQD_FLAG
         ,WP_AUTO_PUBLISH_FLAG
         ,WP_DEFAULT_DISPLAY_LVL
         ,WP_ENABLE_VERSION_FLAG
         ,AUTO_PUB_UPON_CREATION_FLAG
         ,AUTO_SYNC_TXN_DATE_FLAG
         ,WP_APPROVER_SOURCE_ID
         ,WP_APPROVER_SOURCE_TYPE
         ,RECORD_VERSION_NUMBER
         ,LAST_UPDATE_LOGIN
         ,TXN_DATE_SYNC_BUF_DAYS
         ,LIFECYCLE_VERSION_ID
         ,CURRENT_PHASE_VERSION_ID
         ,SCHEDULE_THIRD_PARTY_FLAG
         ,ALLOW_LOWEST_TSK_DEP_FLAG
         ,AUTO_ROLLUP_SUBPROJ_FLAG
         ,THIRD_PARTY_SCHEDULE_CODE
         ,source_object_id
         ,source_object_type
         -- gboomina Bug 8586393 - start
         ,use_task_schedule_flag
         -- gboomina Bug 8586393 - end
         )
         SELECT
          ppe.PROJ_ELEMENT_ID
         ,ppe.PROJECT_ID
         ,SYSDATE
         ,l_user_id
         ,SYSDATE
         ,l_user_id
         ,ppwa.WP_APPROVAL_REQD_FLAG
         ,ppwa.WP_AUTO_PUBLISH_FLAG
         ,ppwa.WP_DEFAULT_DISPLAY_LVL
         ,ppwa.WP_ENABLE_VERSION_FLAG
         ,ppwa.AUTO_PUB_UPON_CREATION_FLAG
         ,ppwa.AUTO_SYNC_TXN_DATE_FLAG
         ,ppwa.WP_APPROVER_SOURCE_ID
         ,ppwa.WP_APPROVER_SOURCE_TYPE
         ,ppwa.RECORD_VERSION_NUMBER
         ,l_login_id
         ,ppwa.TXN_DATE_SYNC_BUF_DAYS
         ,ppwa.LIFECYCLE_VERSION_ID
         ,ppwa.CURRENT_PHASE_VERSION_ID
         ,ppwa.SCHEDULE_THIRD_PARTY_FLAG
         ,ppwa.ALLOW_LOWEST_TSK_DEP_FLAG
         ,ppwa.AUTO_ROLLUP_SUBPROJ_FLAG
         ,ppwa.THIRD_PARTY_SCHEDULE_CODE
         ,ppe.PROJECT_ID
         ,'PA_PROJECTS'
         -- gboomina Bug 8586393 - start
         ,ppwa.use_task_schedule_flag
         -- gboomina Bug 8586393 - end
         FROM pa_proj_elements ppe,
              pa_proj_workplan_attr ppwa
         WHERE ppwa.project_id = p_src_project_id
         AND   ppe.attribute15 = ppwa.proj_element_id
         AND   ppe.project_id = p_dest_project_id
         AND   ppe.object_type='PA_STRUCTURES';

         --Copy progress attributes for financial only structures
         INSERT INTO pa_proj_progress_attr(
          PROJ_PROGRESS_ATTR_ID
         ,OBJECT_TYPE
         ,OBJECT_ID
         ,LAST_UPDATE_DATE
         ,LAST_UPDATED_BY
         ,CREATION_DATE
         ,CREATED_BY
         ,LAST_UPDATE_LOGIN
         ,PROJECT_ID
         ,PROGRESS_CYCLE_ID
         ,WQ_ENABLE_FLAG
         ,REMAIN_EFFORT_ENABLE_FLAG
         ,PERCENT_COMP_ENABLE_FLAG
         ,NEXT_PROGRESS_UPDATE_DATE
         ,RECORD_VERSION_NUMBER
         ,TASK_WEIGHT_BASIS_CODE
         ,ALLOW_COLLAB_PROG_ENTRY
         ,ALLOW_PHY_PRCNT_CMP_OVERRIDES
         ,STRUCTURE_TYPE
         )
         SELECT
          PA_PROJ_PROGRESS_ATTR_S.nextval
         ,ppe.OBJECT_TYPE
         ,ppe.proj_element_ID
         ,sysdate
         ,l_user_id
         ,SYSDATE
         ,l_user_id
         ,l_login_id
         ,p_dest_project_id
         ,pppa.PROGRESS_CYCLE_ID
         ,pppa.WQ_ENABLE_FLAG
         ,pppa.REMAIN_EFFORT_ENABLE_FLAG
         ,pppa.PERCENT_COMP_ENABLE_FLAG
         ,pppa.NEXT_PROGRESS_UPDATE_DATE
         ,pppa.RECORD_VERSION_NUMBER
         ,pppa.TASK_WEIGHT_BASIS_CODE
         ,pppa.ALLOW_COLLAB_PROG_ENTRY
         ,pppa.ALLOW_PHY_PRCNT_CMP_OVERRIDES
         ,pppa.STRUCTURE_TYPE
         FROM pa_proj_progress_attr pppa,
              pa_proj_elements ppe
         WHERE ppe.project_id = p_dest_project_id
         AND   ppe.attribute15 = pppa.object_id
         AND   pppa.project_id = p_src_project_id
         AND   pppa.object_type = 'PA_STRUCTURES' ;

   --End Added by rtarway for BUG 3951701

    ELSE

        i := 1;
        IF l_shared = 'Y'
        THEN
           FOR l_get_structure_attr_csr_rec in l_get_structure_attr_csr LOOP
            l_dest_str_versions_tbl(i).src_str_version_id := l_get_structure_attr_csr_rec.element_version_id;
            l_dest_str_versions_tbl(i).src_str_status := l_get_structure_attr_csr_rec.status_code;
            l_dest_str_versions_tbl(i).latest_pub_flag := l_get_structure_attr_csr_rec.LATEST_EFF_PUBLISHED_FLAG;
            l_dest_str_versions_tbl(i).current_flag := l_get_structure_attr_csr_rec.current_flag;
            i := i + 1;
          END LOOP;
        ELSE
           FOR l_get_structure_attr_csr_rec2 in l_get_structure_attr_csr2 LOOP
            l_dest_str_versions_tbl(i).src_str_version_id := l_get_structure_attr_csr_rec2.element_version_id;
            l_dest_str_versions_tbl(i).src_str_status := l_get_structure_attr_csr_rec2.status_code;
            l_dest_str_versions_tbl(i).latest_pub_flag := l_get_structure_attr_csr_rec2.LATEST_EFF_PUBLISHED_FLAG;
            l_dest_str_versions_tbl(i).src_stru_type_id := l_get_structure_attr_csr_rec2.structure_type_id;
            l_dest_str_versions_tbl(i).current_flag := l_get_structure_attr_csr_rec2.current_flag;
            i := i + 1;
          END LOOP;
        END IF;
        IF l_shared = 'Y'
        THEN
            IF l_versioning_enabled = 'Y'
            THEN
                IF l_src_template_flag = 'N'   --source is a project
                THEN
                    IF  l_dest_template_flag = 'N'
                    THEN
                        --senario 1 page 5
                        --Bug 2955589. Need to copy only one working version to the destination project in AMG
                        --context. Set the copy flag to N for published versions. Set the copy flag to Y for the
                        --first working version. If there are no working versions create a new one.
                        l_working_ver_count := 0;
                        FOR j in 1..l_dest_str_versions_tbl.count LOOP
                            IF ( ( l_dest_str_versions_tbl(j).latest_pub_flag = 'Y' OR
                                   l_dest_str_versions_tbl(j).current_flag = 'Y' ) AND     --baselined version
                                 l_dest_str_versions_tbl(j).src_str_status = 'STRUCTURE_PUBLISHED' )
                            THEN
                                --l_dest_str_versions_tbl(j).copy_flag := 'Y';  Bug 2955589
                                l_dest_str_versions_tbl(j).copy_flag := 'N';
                                l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
                            ELSIF l_dest_str_versions_tbl(j).src_str_status  <> 'STRUCTURE_PUBLISHED'
                            THEN
                                IF l_working_ver_count = 0 THEN   --Bug 2955589
                                   l_dest_str_versions_tbl(j).copy_flag := 'Y';
                                ELSE
                                   l_dest_str_versions_tbl(j).copy_flag := 'N';
                                END IF;
                                l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';
                                l_working_ver_count := l_working_ver_count + 1;
                            END IF;
                        END LOOP;
                        -- If no working version was found, set the flag so that the version can be created.
                        -- Bug 2955589.
                        IF l_working_ver_count = 0 THEN
                              l_create_fin_version := 'Y';
                        END IF;
                    ELSE
                        --senario 7 page 5
                        FOR j in 1..l_dest_str_versions_tbl.count LOOP
                            IF ( l_dest_str_versions_tbl(j).latest_pub_flag = 'Y' AND
                                 l_dest_str_versions_tbl(j).src_str_status = 'STRUCTURE_PUBLISHED' )
                            THEN
                                l_dest_str_versions_tbl(j).copy_flag := 'Y';
                                l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';
                                l_copy_flag_set := 'Y';
                            END IF;
                        END LOOP;
                        IF NVL( l_copy_flag_set, 'N' ) = 'N'    --latest published was not found, now look for latest updated unpublished str ver
                        THEN
                            l_max_date := null;
                            FOR j in 1..l_dest_str_versions_tbl.count LOOP --look for last updated unpublished version
                               IF l_dest_str_versions_tbl(j).src_str_status <> 'STRUCTURE_PUBLISHED'
                               THEN
                                    --Find out which unpublihsed version is last updated.
                                    IF l_max_date IS NULL
                                    THEN
                                        l_latst_upd_wrkng_str_ver := l_dest_str_versions_tbl(j).src_str_version_id;
                                        l_max_date := PA_PROJ_TASK_STRUC_PUB.GET_MAX_LAST_UPD_DT_WRKNG_VER( l_dest_str_versions_tbl(j).src_str_version_id );
                                    ELSE
                                        l_max_date2 := PA_PROJ_TASK_STRUC_PUB.GET_MAX_LAST_UPD_DT_WRKNG_VER( l_dest_str_versions_tbl(j).src_str_version_id );
                                        IF  l_max_date2 > l_max_date
                                        THEN
                                           --for bug 2834111
                                           l_max_date := l_max_date2;
                                           l_latst_upd_wrkng_str_ver := l_dest_str_versions_tbl(j).src_str_version_id;
                                        END IF;
                                    END IF;
                               END IF;  --l_dest_str_versions_tbl(j).src_str_status <> 'STRUCTURE_PUBLISHED'
                            END LOOP; --look for last updated unpublished version
                            --for bug 2834111
                            --mark the last updated unpublished version for copying.
                            FOR j in 1..l_dest_str_versions_tbl.count LOOP
                               IF l_dest_str_versions_tbl(j).src_str_version_id = l_latst_upd_wrkng_str_ver
                               THEN
                                  l_dest_str_versions_tbl(j).copy_flag := 'Y';
                                  l_dest_str_versions_tbl(j).dest_str_status := l_dest_str_versions_tbl(j).src_str_status;
                               END IF;
                           END LOOP;
                        END IF; --NVL( l_copy_flag_set, 'N' ) := 'N'    --latest published was not found, now look for latest updated unpublished str ver
                    END IF;  --l_dest_template_flag = 'N'
                ELSE
                    --source is a template
                    --senario 3  on page 5
                    FOR j in 1..l_dest_str_versions_tbl.count LOOP
                        l_dest_str_versions_tbl(j).copy_flag := 'Y';
                        IF  l_dest_template_flag = 'N' ---senario 3
                        THEN
                               /* Bug 2955589. Irrespective of the value in auto publish flag set the version
                                  status to working so that the process_task_structure_bulk api will process
                                  on this version. Refer to the bug for more details.

                               IF l_auto_pub_enabled = 'N'
                               THEN
                                  l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';
                               ELSE
                                  l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
--bug 2858216
                                  l_dest_str_versions_tbl(j).current_flag := 'Y';
                                  l_dest_str_versions_tbl(j).latest_pub_flag := 'Y';

                               END IF;
                               */
                               l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';
                        ELSE   ---senario 5
                            l_dest_str_versions_tbl(j).dest_str_status := l_dest_str_versions_tbl(j).src_str_status;
                        END IF;
                        exit;
                    END LOOP;
                END IF; --l_src_template_flag = 'N'
            ELSE
                --Shared and Versioning disabled.
                --senario 2, 4, 6  8 page 5
                FOR j in 1..l_dest_str_versions_tbl.count LOOP
                    l_dest_str_versions_tbl(j).copy_flag := 'Y';
                    IF  l_dest_template_flag = 'N'  --senario 2 , 4
                    THEN
                        l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
                    ELSE
                        --senario 6 ,  8
                        l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';
                    END IF;
                    exit;
                END LOOP;
            END IF; --l_versioning_enabled = 'Y'
        ELSE
            --Split structrues
            IF l_versioning_enabled = 'Y'
            THEN
                IF l_src_template_flag = 'N'   --source is a project
                THEN
                    IF  l_dest_template_flag = 'N'
                    THEN
                        --senario 9; page 6
                        --Bug 2955589. Need to copy only one working version to the destination project in AMG
                        --context. Set the copy flag to N for published versions. Set the copy flag to Y for the
                        --first working version. If there are no working versions create a new one.
                        l_working_ver_count := 0;
                        FOR j in 1..l_dest_str_versions_tbl.count LOOP
                           --Copying workplan str
                           IF l_dest_str_versions_tbl(j).src_stru_type_id = 1   --WORKPLAN
                           THEN
                              IF ( ( l_dest_str_versions_tbl(j).latest_pub_flag = 'Y' OR
                                   l_dest_str_versions_tbl(j).current_flag = 'Y' ) AND     --baselined version
                                 l_dest_str_versions_tbl(j).src_str_status = 'STRUCTURE_PUBLISHED' )
                              THEN
                                  --l_dest_str_versions_tbl(j).copy_flag := 'Y';  --Bug 2955589
                                  l_dest_str_versions_tbl(j).copy_flag := 'N';
                                  l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
                               ELSIF ( l_dest_str_versions_tbl(j).src_str_status  <> 'STRUCTURE_PUBLISHED' )
                               THEN
                                  IF l_working_ver_count = 0 THEN   --Bug 2955589
                                    l_dest_str_versions_tbl(j).copy_flag := 'Y';
                                  ELSE
                                     l_dest_str_versions_tbl(j).copy_flag := 'N';
                                  END IF;
                                  l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';
                                  l_working_ver_count := l_working_ver_count + 1;
                               END IF;
                           ELSE
                               --Copying financial str
                               IF NVL( l_fin_str_copy_flag, 'N' ) = 'N'
                               THEN
                                   l_dest_str_versions_tbl(j).copy_flag := 'Y';
                                   l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
                                   l_fin_str_copy_flag := 'Y';
                               END IF;
                           END IF;
                        END LOOP;
                        -- If no working version was found, set the flag so that a version can be created.
                        -- Bug 2955589.
                        IF l_working_ver_count = 0 THEN
                              l_create_wk_version := 'Y';
                        END IF;
                    ELSE
                        --senario 15 page 6
                        FOR j in 1..l_dest_str_versions_tbl.count LOOP
                           IF l_dest_str_versions_tbl(j).src_stru_type_id = 1   --WORKPLAN
                           THEN
                              IF ( l_dest_str_versions_tbl(j).latest_pub_flag = 'Y' AND
                                   l_dest_str_versions_tbl(j).src_str_status = 'STRUCTURE_PUBLISHED' )
                              THEN
                                  l_dest_str_versions_tbl(j).copy_flag := 'Y';
                                  l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';
                                  l_copy_flag_set := 'Y';
                              END IF;
                           ELSE
                               --Copying financial str
                               IF NVL( l_fin_str_copy_flag, 'N' ) = 'N'
                               THEN
                                   l_dest_str_versions_tbl(j).copy_flag := 'Y';
                                   l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';
                                   l_fin_str_copy_flag := 'Y';
                               END IF;
                           END IF;
                        END LOOP;
                        IF NVL( l_copy_flag_set, 'N' ) = 'N'    --latest published was not found, now look for latest updated unpublished str ver
                        THEN
                            l_max_date := null;
                            FOR j in 1..l_dest_str_versions_tbl.count LOOP --look for last updated unpublished version
                             IF l_dest_str_versions_tbl(j).src_stru_type_id = 1   --WORKPLAN
                             THEN
                               IF l_dest_str_versions_tbl(j).src_str_status <> 'STRUCTURE_PUBLISHED'
                               THEN
                                    --Find out which unpublihsed version is last updated.
                                    IF l_max_date IS NULL
                                    THEN
                                        l_latst_upd_wrkng_str_ver := l_dest_str_versions_tbl(j).src_str_version_id;
                                        l_max_date := PA_PROJ_TASK_STRUC_PUB.GET_MAX_LAST_UPD_DT_WRKNG_VER( l_dest_str_versions_tbl(j).src_str_version_id );
                                    ELSE
                                        l_max_date2 := PA_PROJ_TASK_STRUC_PUB.GET_MAX_LAST_UPD_DT_WRKNG_VER( l_dest_str_versions_tbl(j).src_str_version_id );
                                        IF  l_max_date2 > l_max_date
                                        THEN
                                           --for bug 2834111
                                           l_max_date := l_max_date2;
                                           l_latst_upd_wrkng_str_ver := l_dest_str_versions_tbl(j).src_str_version_id;
                                        END IF;
                                    END IF;
                               END IF;  --l_dest_str_versions_tbl(j).src_str_status <> 'STRUCTURE_PUBLISHED'
                             END IF;  --l_dest_str_versions_tbl(j).src_stru_type_id = 1   --WORKPLAN
                            END LOOP; --look for last updated unpublished version
                            --for bug 2834111
                            --mark the last updated unpublished version for copying.
                            FOR j in 1..l_dest_str_versions_tbl.count LOOP
                               IF l_dest_str_versions_tbl(j).src_str_version_id = l_latst_upd_wrkng_str_ver
                               THEN
                                  l_dest_str_versions_tbl(j).copy_flag := 'Y';
                                  l_dest_str_versions_tbl(j).dest_str_status := l_dest_str_versions_tbl(j).src_str_status;
                               END IF;
                           END LOOP;

                        END IF; --NVL( l_copy_flag_set, 'N' ) := 'N'    --latest published was not found, now look for latest updated unpublished str ver
                    END IF;  --l_dest_template_flag = 'N'
                ELSE
                    --source is a template
                    --senario 11  on page 5
                    --copying workplan
                    FOR j in 1..l_dest_str_versions_tbl.count LOOP
                        IF l_dest_str_versions_tbl(j).src_stru_type_id = 1   --WORKPLAN
                        THEN
                           l_dest_str_versions_tbl(j).copy_flag := 'Y';
                           IF  l_dest_template_flag = 'N' ---senario 11
                           THEN
                               /* Bug 2955589. Irrespective of the value in auto publish flag set the version
                                  status to working so that the process_task_structure_bulk api will process
                                  on this version. Refer to the bug for more details.

                               IF l_auto_pub_enabled = 'N'
                               THEN
                                  l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';
                               ELSE
                                  l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
--bug 2858216
                                  l_dest_str_versions_tbl(j).current_flag := 'Y';
                                  l_dest_str_versions_tbl(j).latest_pub_flag := 'Y';
                               END IF;
                               */
                               l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_WORKING';

                           ELSE   ---senario 13
                               l_dest_str_versions_tbl(j).dest_str_status := l_dest_str_versions_tbl(j).src_str_status;
                           END IF;
                          exit;
                        END IF;
                    END LOOP;
                    --senario 11  on page 5
                    --copying financail
                    FOR j in 1..l_dest_str_versions_tbl.count LOOP
                        IF l_dest_str_versions_tbl(j).src_stru_type_id = 6   --FINANCIAL
                        THEN
                           l_dest_str_versions_tbl(j).copy_flag := 'Y';
                           IF  l_dest_template_flag = 'N' ---senario 11
                           THEN
                               l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
                           ELSE   ---senario 13
                               l_dest_str_versions_tbl(j).dest_str_status := l_dest_str_versions_tbl(j).src_str_status;
                           END IF;
                          exit;
                        END IF;
                    END LOOP;
                END IF; --l_src_template_flag = 'N'
            ELSE
                --Versioning disabled.
                IF l_src_template_flag = 'N'   --source is a project
                THEN
                    --senario 10 and 16; page 6 and 7 respectively
                     --copying workplan
                     FOR j in 1..l_dest_str_versions_tbl.count LOOP
                       IF l_dest_str_versions_tbl(j).src_stru_type_id = 1   --WORKPLAN
                       THEN
                         l_dest_str_versions_tbl(j).copy_flag := 'Y';
                         IF  l_dest_template_flag = 'N'  --senario 10
                         THEN
                             l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
                         ELSE
                             --senario 8
                             l_dest_str_versions_tbl(j).dest_str_status := l_dest_str_versions_tbl(j).src_str_status;
                         END IF;
                         exit;
                       END IF;
                     END LOOP;
                     --copying financial
                     FOR j in 1..l_dest_str_versions_tbl.count LOOP
                       IF l_dest_str_versions_tbl(j).src_stru_type_id = 6   --FINANCIAL
                       THEN
                         l_dest_str_versions_tbl(j).copy_flag := 'Y';
                         IF  l_dest_template_flag = 'N'  --senario 16
                         THEN
                             l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
                         ELSE
                             --senario 8
                             l_dest_str_versions_tbl(j).dest_str_status := l_dest_str_versions_tbl(j).src_str_status;
                         END IF;
                         exit;
                       END IF;
                     END LOOP;
                ELSE
                    --source is a template
                    --senario 12 and 14; page 6
                     FOR j in 1..l_dest_str_versions_tbl.count LOOP
                        IF l_dest_template_flag = 'N'
                        THEN
                            l_dest_str_versions_tbl(j).copy_flag := 'Y';
                            l_dest_str_versions_tbl(j).dest_str_status := 'STRUCTURE_PUBLISHED';
                         ELSE
                            l_dest_str_versions_tbl(j).copy_flag := 'Y';
                            l_dest_str_versions_tbl(j).dest_str_status := l_dest_str_versions_tbl(j).src_str_status;
                        END IF;
                     END LOOP;
                END IF; --l_src_template_flag = 'N'
            END IF; --l_versioning_enabled = 'Y'
        END IF;  --Share Y or N

        --WORKPLAN  ENABLED ( SHARED or SPLIT )

       IF NOT l_dest_str_versions_tbl.exists(1)
          AND nvl(l_create_fin_version,'N') = 'N'   --Bug 2955589
          AND nvl(l_create_wk_version,'N') = 'N'
       THEN
           return;
       END IF;

             IF l_shared = 'N'
             THEN
               UPDATE pa_proj_elements ppe
                  set name = substr(l_project_name||l_append||l_suffix, 1, 240)
                WHERE project_id = p_dest_project_id
                  AND object_type = 'PA_STRUCTURES'
                  AND EXISTS ( SELECT proj_element_id FROM pa_proj_structure_types
                                WHERE proj_element_id = ppe.proj_element_id
                                  AND structure_type_id = 1 );
             END IF;

               INSERT INTO pa_proj_workplan_attr(
                            PROJ_ELEMENT_ID
                           ,PROJECT_ID
                           ,LAST_UPDATE_DATE
                           ,LAST_UPDATED_BY
                           ,CREATION_DATE
                           ,CREATED_BY
                           ,WP_APPROVAL_REQD_FLAG
                           ,WP_AUTO_PUBLISH_FLAG
                           ,WP_DEFAULT_DISPLAY_LVL
                           ,WP_ENABLE_VERSION_FLAG
                           ,AUTO_PUB_UPON_CREATION_FLAG
                           ,AUTO_SYNC_TXN_DATE_FLAG
                           ,WP_APPROVER_SOURCE_ID
                           ,WP_APPROVER_SOURCE_TYPE
                           ,RECORD_VERSION_NUMBER
                           ,LAST_UPDATE_LOGIN
                           ,TXN_DATE_SYNC_BUF_DAYS
                           ,LIFECYCLE_VERSION_ID
                           ,CURRENT_PHASE_VERSION_ID
--bug 4061876
         ,SCHEDULE_THIRD_PARTY_FLAG
         ,ALLOW_LOWEST_TSK_DEP_FLAG
         ,AUTO_ROLLUP_SUBPROJ_FLAG
         ,THIRD_PARTY_SCHEDULE_CODE
                        ,source_object_id
                        ,source_object_type
                        -- gboomina bug 8586393 - start
                        ,use_task_schedule_flag
                        -- gboomina bug 8586393 - end
                          )
                      SELECT
                            ppe.PROJ_ELEMENT_ID
                           ,ppe.PROJECT_ID
                           ,SYSDATE
                           ,l_user_id
                           ,SYSDATE
                           ,l_user_id
                           ,ppwa.WP_APPROVAL_REQD_FLAG
                           ,ppwa.WP_AUTO_PUBLISH_FLAG
                           ,ppwa.WP_DEFAULT_DISPLAY_LVL
                           ,ppwa.WP_ENABLE_VERSION_FLAG
                           ,ppwa.AUTO_PUB_UPON_CREATION_FLAG
                           ,ppwa.AUTO_SYNC_TXN_DATE_FLAG
                           ,ppwa.WP_APPROVER_SOURCE_ID
                           ,ppwa.WP_APPROVER_SOURCE_TYPE
                           ,ppwa.RECORD_VERSION_NUMBER
                           ,ppwa.LAST_UPDATE_LOGIN
                           ,ppwa.TXN_DATE_SYNC_BUF_DAYS
                           ,ppwa.LIFECYCLE_VERSION_ID
                           ,ppwa.CURRENT_PHASE_VERSION_ID
--bug 4061876
         ,ppwa.SCHEDULE_THIRD_PARTY_FLAG
         ,ppwa.ALLOW_LOWEST_TSK_DEP_FLAG
         ,ppwa.AUTO_ROLLUP_SUBPROJ_FLAG
         ,ppwa.THIRD_PARTY_SCHEDULE_CODE
                           ,ppe.PROJECT_ID
                           ,'PA_PROJECTS'
                           -- gboomina bug 8586393 - start
                           ,ppwa.use_task_schedule_flag
                           -- gboomina bug 8586393 - end
                         /*FROM pa_proj_elements ppe,
                              pa_proj_workplan_attr ppwa
                         WHERE ppe.project_id = p_dest_project_id
                           and object_type = 'PA_STRUCTURES'
                           and ppwa.project_id = p_src_project_id
                           and ppwa.proj_element_id = ppe.attribute15;*//*Commented below query and following criteria by SMUKKA */
                         FROM pa_proj_elements ppe,
                              pa_proj_workplan_attr ppwa
                        WHERE ppwa.project_id = p_src_project_id
            AND   ppe.project_id = p_dest_project_id
            AND   ppe.object_type ='PA_STRUCTURES'
            AND   ppe.attribute15 = ppwa.proj_element_id
            AND   PA_PROJ_ELEMENTS_UTILS.check_fin_or_wp_structure( ppe.proj_element_id ) = 'Y'; /* bug 3621613 */

--bug 3010538
--added task weighting basis code
              INSERT INTO pa_proj_progress_attr(
                       PROJ_PROGRESS_ATTR_ID
                      ,OBJECT_TYPE
                      ,OBJECT_ID
                      ,LAST_UPDATE_DATE
                      ,LAST_UPDATED_BY
                      ,CREATION_DATE
                      ,CREATED_BY
                      ,LAST_UPDATE_LOGIN
                      ,PROJECT_ID
                      ,PROGRESS_CYCLE_ID
                      ,WQ_ENABLE_FLAG
                      ,REMAIN_EFFORT_ENABLE_FLAG
                      ,PERCENT_COMP_ENABLE_FLAG
                      ,NEXT_PROGRESS_UPDATE_DATE
                      ,RECORD_VERSION_NUMBER
                      ,TASK_WEIGHT_BASIS_CODE
        /* FP-M Bug # 3420093. Modified: copy_structures_bulk. */
                      ,ALLOW_COLLAB_PROG_ENTRY
                      ,ALLOW_PHY_PRCNT_CMP_OVERRIDES
                      ,STRUCTURE_TYPE
        /* FP-M Bug # 3420093. Modified: copy_structures_bulk. */
                   ) SELECT
                           PA_PROJ_PROGRESS_ATTR_S.nextval
                          ,ppe.OBJECT_TYPE
                          ,ppe.proj_element_ID
                          ,sysdate
                          ,l_user_id
                          ,SYSDATE
                          ,l_user_id
                          ,l_login_id
                          ,p_dest_project_id
                          ,pppa.PROGRESS_CYCLE_ID
                          ,pppa.WQ_ENABLE_FLAG
                          ,pppa.REMAIN_EFFORT_ENABLE_FLAG
                          ,pppa.PERCENT_COMP_ENABLE_FLAG
                          ,pppa.NEXT_PROGRESS_UPDATE_DATE
                          ,pppa.RECORD_VERSION_NUMBER
                          ,pppa.TASK_WEIGHT_BASIS_CODE
        /* FP-M Bug # 3420093. Modified: copy_structures_bulk. */
                          ,pppa.ALLOW_COLLAB_PROG_ENTRY
                          ,pppa.ALLOW_PHY_PRCNT_CMP_OVERRIDES
                          ,pppa.STRUCTURE_TYPE
        /* FP-M Bug # 3420093. Modified: copy_structures_bulk. */
                      /*FROM  pa_proj_progress_attr pppa,
                            pa_proj_elements ppe
                       WHERE ppe.project_id = p_dest_project_id
                         and ppe.attribute15 = pppa.object_id         --no need to join with
                         and pppa.object_type = 'PA_STRUCTURES'
                         and ppe.object_type = 'PA_STRUCTURES'
                         and pppa.project_id = p_src_project_id;*//*Commented below query and following criteria by SMUKKA */
                      FROM pa_proj_progress_attr pppa,
                           pa_proj_elements ppe
                    WHERE ppe.project_id = p_dest_project_id
                       and ppe.attribute15 = pppa.object_id
                       and pppa.object_type = 'PA_STRUCTURES'
                       and ppe.object_type = 'PA_STRUCTURES'
                       and pppa.project_id = p_src_project_id
                       AND   PA_PROJ_ELEMENTS_UTILS.check_fin_or_wp_structure( ppe.proj_element_id ) = 'Y' ;  /* bug 3621613 */

       --Bug 2955589. If Versioning is enabled and it is a project to project copy, the plsql table will not
       --contain any records if there were no working verisons. We need to create one if any of the flags
       --l_create_fin_version or l_create_wk_version is 'Y'.
       IF nvl(l_create_fin_version,'N') = 'Y' THEN
           l_structure_ver_name := substr(l_project_name, 1, 240);
           PA_PROJ_TASK_STRUC_PUB.create_update_struct_ver(
                        p_project_id             => p_dest_project_id
                       ,p_structure_type         => 'FINANCIAL'
                       ,p_structure_version_name => l_structure_ver_name
                       ,p_structure_version_id   => null
                       ,x_structure_version_id   => l_structure_version_id
                       ,x_msg_count              => x_msg_count
                       ,x_msg_data               => x_msg_data
                       ,x_return_status          => x_return_status
                     );
           IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR
           THEN
              RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
           ELSIF x_return_status = FND_API.G_RET_STS_ERROR
           THEN
             RAISE FND_API.G_EXC_ERROR;
           END IF;
       ELSIF nvl(l_create_wk_version,'N') = 'Y' THEN
          l_structure_ver_name := substr(l_project_name||l_append||l_suffix, 1, 240);

          PA_PROJ_TASK_STRUC_PUB.create_update_struct_ver(
                       p_project_id             => p_dest_project_id
                      ,p_structure_type         => 'WORKPLAN'
                      ,p_structure_version_name => l_structure_ver_name
                      ,p_structure_version_id   => null
                      ,x_structure_version_id   => l_structure_version_id
                      ,x_msg_count              => x_msg_count
                      ,x_msg_data               => x_msg_data
                      ,x_return_status          => x_return_status
                    );
          IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR
          THEN
             RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF x_return_status = FND_API.G_RET_STS_ERROR
          THEN
            RAISE FND_API.G_EXC_ERROR;
          END IF;
       END IF;

       FOR k in 1..l_dest_str_versions_tbl.count LOOP
           IF l_dest_str_versions_tbl(k).copy_flag = 'Y'
           THEN


              OPEN cur_elem_ver_seq;
              FETCH cur_elem_ver_seq INTO l_struc_version_id;
              CLOSE cur_elem_ver_seq;
              --First copy structure version and then copy all task versions
              --We cannot perform both with the same sql bcoz we need parent_structure version id for tasks.
              INSERT INTO pa_proj_element_versions(
                     ELEMENT_VERSION_ID
                    ,PROJ_ELEMENT_ID
                    ,OBJECT_TYPE
                    ,PROJECT_ID
                    ,PARENT_STRUCTURE_VERSION_ID
                    ,DISPLAY_SEQUENCE
                    ,WBS_LEVEL
                    ,WBS_NUMBER
                    ,CREATION_DATE
                    ,CREATED_BY
                    ,LAST_UPDATE_DATE
                    ,LAST_UPDATED_BY
                    ,LAST_UPDATE_LOGIN
                    ,RECORD_VERSION_NUMBER
                    ,attribute15          --this column is used to store structure ver id of the source project to be used to created relationships.
                    ,ATTRIBUTE_CATEGORY
                     ,ATTRIBUTE1
                     ,ATTRIBUTE2
                     ,ATTRIBUTE3
                     ,ATTRIBUTE4
                     ,ATTRIBUTE5
                     ,ATTRIBUTE6
                     ,ATTRIBUTE7
                     ,ATTRIBUTE8
                     ,ATTRIBUTE9
                     ,ATTRIBUTE10
                     ,ATTRIBUTE11
                     ,ATTRIBUTE12
                     ,ATTRIBUTE13
                     ,ATTRIBUTE14
                     ,TASK_UNPUB_VER_STATUS_CODE
                     ,source_object_id
                     ,source_object_type
                    )
                  SELECT
                     l_struc_version_id
                    ,ppe.proj_element_id
                    ,ppev.object_type
                    ,p_dest_project_id
                    ,l_struc_version_id
                    ,ppev.DISPLAY_SEQUENCE
                    ,ppev.WBS_LEVEL
                    ,ppev.WBS_NUMBER
                    ,SYSDATE                     ------CREATION_DATE
                    ,l_user_id          ------CREATED_BY
                    ,SYSDATE                     ------LAST_UPDATE_DATE
                    ,l_user_id          ------LAST_UPDATED_BY
                    ,l_login_id         ------LAST_UPDATE_LOGIN
                    ,ppev.RECORD_VERSION_NUMBER                           ------RECORD_VERSION_NUMBER
                    ,ppev.element_version_id
                    ,ppev.ATTRIBUTE_CATEGORY
                     ,ppev.ATTRIBUTE1
                     ,ppev.ATTRIBUTE2
                     ,ppev.ATTRIBUTE3
                     ,ppev.ATTRIBUTE4
                     ,ppev.ATTRIBUTE5
                     ,ppev.ATTRIBUTE6
                     ,ppev.ATTRIBUTE7
                     ,ppev.ATTRIBUTE8
                     ,ppev.ATTRIBUTE9
                     ,ppev.ATTRIBUTE10
                     ,ppev.ATTRIBUTE11
                     ,ppev.ATTRIBUTE12
                     ,ppev.ATTRIBUTE13
                     ,ppev.ATTRIBUTE14
                     ,ppev.TASK_UNPUB_VER_STATUS_CODE
                     ,p_dest_project_id
                     ,'PA_PROJECTS'
                  FROM pa_proj_element_versions ppev,
                       pa_proj_elements ppe
                  WHERE ppev.project_id = p_src_project_id
                    and ppe.project_id = p_dest_project_id
                    and ppev.element_version_id = l_dest_str_versions_tbl(k).src_str_version_id
                    and ppev.proj_element_id = ppe.attribute15
                    and ppe.object_type = 'PA_STRUCTURES'
                    and ppev.object_type = 'PA_STRUCTURES';

--bug 3138959
          --User adding tasks under WORKPLAN structure from AMG, financial plan should be copied over.

          IF PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version( l_struc_version_id, 'FINANCIAL' ) = 'Y'
             AND l_shared = 'N' AND l_workplan_enabled = 'Y'       -- For Split structures
             AND pa_project_pub.G_structure_in_rec.structure_type = 'WORKPLAN'
          THEN
                  --Copy financial tasks

                  INSERT INTO pa_proj_element_versions(
                     ELEMENT_VERSION_ID
                    ,PROJ_ELEMENT_ID
                    ,OBJECT_TYPE
                    ,PROJECT_ID
                    ,PARENT_STRUCTURE_VERSION_ID
                    ,DISPLAY_SEQUENCE
                    ,WBS_LEVEL
                    ,WBS_NUMBER
                    ,CREATION_DATE
                    ,CREATED_BY
                    ,LAST_UPDATE_DATE
                    ,LAST_UPDATED_BY
                    ,LAST_UPDATE_LOGIN
                    ,RECORD_VERSION_NUMBER
                    ,attribute15          --this column is used to store task ver id of the source project's task versions to be used to created relationships.
                    ,ATTRIBUTE_CATEGORY
                     ,ATTRIBUTE1
                     ,ATTRIBUTE2
                     ,ATTRIBUTE3
                     ,ATTRIBUTE4
                     ,ATTRIBUTE5
                     ,ATTRIBUTE6
                     ,ATTRIBUTE7
                     ,ATTRIBUTE8
                     ,ATTRIBUTE9
                     ,ATTRIBUTE10
                     ,ATTRIBUTE11
                     ,ATTRIBUTE12
                     ,ATTRIBUTE13
                     ,ATTRIBUTE14
                     ,TASK_UNPUB_VER_STATUS_CODE
                     ,source_object_id
                     ,source_object_type
             ,financial_task_flag                    --Bug no 3651255
                    )
              SELECT
                     pa_proj_element_versions_s.nextval
                    ,ppe.proj_element_id
                    ,ppev.object_type
                    ,p_dest_project_id
                    ,l_struc_version_id            --from previous sql
                    ,ppev.DISPLAY_SEQUENCE
                    ,ppev.WBS_LEVEL
                    ,ppev.WBS_NUMBER
                    ,SYSDATE                     ------CREATION_DATE
                    ,l_user_id          ------CREATED_BY
                    ,SYSDATE                     ------LAST_UPDATE_DATE
                    ,l_user_id          ------LAST_UPDATED_BY
                    ,l_login_id         ------LAST_UPDATE_LOGIN
                    ,ppev.RECORD_VERSION_NUMBER                           ------RECORD_VERSION_NUMBER
                    ,ppev.element_version_id     -- to help create relationships from source
                    ,ppev.ATTRIBUTE_CATEGORY
                     ,ppev.ATTRIBUTE1
                     ,ppev.ATTRIBUTE2
                     ,ppev.ATTRIBUTE3
                     ,ppev.ATTRIBUTE4
                     ,ppev.ATTRIBUTE5
                     ,ppev.ATTRIBUTE6
                     ,ppev.ATTRIBUTE7
                     ,ppev.ATTRIBUTE8
                     ,ppev.ATTRIBUTE9
                     ,ppev.ATTRIBUTE10
                     ,ppev.ATTRIBUTE11
                     ,ppev.ATTRIBUTE12
                     ,ppev.ATTRIBUTE13
                     ,ppev.ATTRIBUTE14
                     ,decode( l_dest_str_versions_tbl(k).dest_str_status, 'STRUCTURE_PUBLISHED', 'PUBLISHED', 'WORKING' )
                     ,p_dest_project_id
                     ,'PA_PROJECTS'
             ,ppev.financial_task_flag                    --Bug no 3651255
                 FROM pa_proj_element_versions ppev,
                      pa_proj_elements ppe
                WHERE ppev.project_id = p_src_project_id
                  and ppe.project_id = p_dest_project_id
                  and ppev.parent_structure_version_id = l_dest_str_versions_tbl(k).src_str_version_id
                  and ppev.proj_element_id = ppe.attribute15
                  and ppe.object_type = 'PA_TASKS'
                  and ppev.object_type = 'PA_TASKS';

               --Create relationships for structure and tasks

  /* Start of changes for bug 6211012 */

        l_obj_rel_id.delete;
	l_obj_typ_from.delete;
	l_obj_from_id.delete;
	l_obj_typ_to.delete;
	l_obj_to_id.delete;
	l_rel_typ.delete;
	l_rel_subtyp.delete;
	l_rec_ver_num.delete;
	l_wt_percent.delete;

        OPEN cur_pa_obj_rela_3(l_dest_str_versions_tbl(k).src_str_version_id,l_struc_version_id);

	LOOP

	FETCH cur_pa_obj_rela_3
	BULK COLLECT INTO
		l_obj_rel_id,
		l_obj_typ_from,
		l_obj_from_id,
		l_obj_typ_to,
		l_obj_to_id,
		l_rel_typ,
		l_rel_subtyp,
		l_rec_ver_num,
		l_wt_percent
	LIMIT 1000;

	  IF l_obj_rel_id.COUNT >0 THEN

	    FORALL i IN l_obj_rel_id.FIRST..l_obj_rel_id.LAST
            insert into PA_OBJECT_RELATIONSHIPS (
                 object_relationship_id,
                 object_type_from,
                 object_id_from1,
                 object_type_to,
                 object_id_to1,
                 relationship_type,
                 relationship_subtype,
                 Record_Version_Number,
                 CREATED_BY,
                 CREATION_DATE,
                 LAST_UPDATED_BY,
                 LAST_UPDATE_DATE,
                 LAST_UPDATE_LOGIN,
                 weighting_percentage
                       )
		 values(
		 l_obj_rel_id(i),
	         l_obj_typ_from(i),
	         l_obj_from_id(i),
	         l_obj_typ_to(i),
	         l_obj_to_id(i),
	         l_rel_typ(i),
	         l_rel_subtyp(i),
	         l_rec_ver_num(i),
                 l_user_id,
                 SYSDATE,
                 l_user_id,
                 SYSDATE,
                 l_login_id,
	         l_wt_percent(i)
		 );
	  END IF;

          EXIT WHEN l_obj_rel_id.COUNT < 1000 ;
	END LOOP;

	l_obj_rel_id.delete;
	l_obj_typ_from.delete;
	l_obj_from_id.delete;
	l_obj_typ_to.delete;
	l_obj_to_id.delete;
	l_rel_typ.delete;
	l_rel_subtyp.delete;
	l_rec_ver_num.delete;
	l_wt_percent.delete;

	CLOSE cur_pa_obj_rela_3;

/*
              INSERT INTO PA_OBJECT_RELATIONSHIPS (
                                  object_relationship_id,
                                  object_type_from,
                                  object_id_from1,
                                  object_type_to,
                                  object_id_to1,
                                  relationship_type,
                                  relationship_subtype,
                                  Record_Version_Number,
                                  CREATED_BY,
                                  CREATION_DATE,
                                  LAST_UPDATED_BY,
                                  LAST_UPDATE_DATE,
                                  LAST_UPDATE_LOGIN,
                                  weighting_percentage
                                  )
              /*Added the hint for the bug 3513853*/
  /*               SELECT /*+ USE_HASH(ppev2 ppev1)*/
  /*                             pa_object_relationships_s.nextval,
                               pobj.object_type_from,
                                  ppev1.element_version_id,
                                  pobj.object_type_to,
                                  ppev2.element_version_id,
                                  pobj.relationship_type,
                                  pobj.relationship_subtype,
                               pobj.Record_Version_Number,
                               l_user_id,
                               SYSDATE,
                               l_user_id,
                               SYSDATE,
                               l_login_id,
                               pobj.weighting_percentage
                    FROM ( SELECT  object_type_from, object_id_from1,
                                   object_type_to,   object_id_to1,
                                   relationship_type, relationship_subtype,
                                   Record_Version_Number, weighting_percentage
                             FROM pa_object_relationships
                            --bug#3094283WHERE RELATIONSHIP_TYPE = 'S'
                             start with object_id_from1 = l_dest_str_versions_tbl(k).src_str_version_id
                             and  RELATIONSHIP_TYPE = 'S' /* Bug 2881667 Added this condition */
   /*                          connect by  object_id_from1 =  prior object_id_to1
                             and  RELATIONSHIP_TYPE = 'S' ) pobj, /* Bug 2881667 Added this condition */
   /*                      pa_proj_element_versions ppev1,
                         pa_proj_element_versions ppev2
                 WHERE
                   --bug#3094283    ppev1.project_id = p_dest_project_id
                    ppev1.attribute15 = pobj.object_id_from1
                   --bug#3094283  ppev2.project_id = p_dest_project_id
                   AND ppev2.attribute15 = pobj.object_id_to1
                   AND ppev1.parent_structure_version_id = l_struc_version_id
                   AND ppev2.parent_structure_version_id = l_struc_version_id
                   ;
		   */
/* End of Code added for 6211012 */
          END IF;
--bug 3138959

              IF l_dest_str_versions_tbl(k).dest_str_status = 'STRUCTURE_PUBLISHED'
                 and l_dest_str_versions_tbl(k).current_flag = 'N'
                 and l_dest_str_versions_tbl(k).latest_pub_flag = 'N'
              THEN
                  l_LATEST_EFF_PUBLISHED_FLAG := 'Y';
              ELSE
                  l_LATEST_EFF_PUBLISHED_FLAG := l_dest_str_versions_tbl(k).latest_pub_flag;
              END IF;

              IF l_dest_template_flag = 'Y'
              THEN
                  l_LATEST_EFF_PUBLISHED_FLAG := 'N';
                  l_dest_str_versions_tbl(k).current_flag := 'N';
                  IF l_dest_str_versions_tbl(k).dest_str_status <> 'STRUCTURE_WORKING'
                  THEN
                     l_dest_str_versions_tbl(k).dest_str_status := 'STRUCTURE_WORKING';
                  END IF;
              END IF;

              IF l_LATEST_EFF_PUBLISHED_FLAG = 'Y' OR l_dest_template_flag = 'Y'
              THEN
                 l_latest_pub_str_ver_id := l_struc_version_id;
              ELSE
                 l_latest_pub_str_ver_id := null;
              END IF;

--bug 3010538
--added PROCESS_UPDATE_WBS_FLAG

             INSERT INTO PA_PROJ_ELEM_VER_STRUCTURE(
                            PEV_STRUCTURE_ID
                           ,ELEMENT_VERSION_ID
                           ,VERSION_NUMBER
                           ,NAME
                           ,PROJECT_ID
                           ,PROJ_ELEMENT_ID
                           ,DESCRIPTION
                           ,EFFECTIVE_DATE
                           ,PUBLISHED_DATE
                           ,PUBLISHED_BY_PERSON_ID
                           ,CURRENT_BASELINE_DATE
                           ,CURRENT_FLAG
                           ,CURRENT_BASELINE_PERSON_ID
                           ,ORIGINAL_BASELINE_DATE
                           ,ORIGINAL_FLAG
                           ,ORIGINAL_BASELINE_PERSON_ID
                           ,LOCK_STATUS_CODE
                           ,LOCKED_BY_PERSON_ID
                           ,LOCKED_DATE
                           ,STATUS_CODE
                           ,WF_STATUS_CODE
                           ,LATEST_EFF_PUBLISHED_FLAG
                           ,RECORD_VERSION_NUMBER
                           ,WBS_RECORD_VERSION_NUMBER
                           ,CREATION_DATE
                           ,CREATED_BY
                           ,LAST_UPDATE_DATE
                           ,LAST_UPDATED_BY
                           ,LAST_UPDATE_LOGIN
                           ,change_reason_code
                           ,PROCESS_UPDATE_WBS_FLAG
                           ,current_working_flag   /* FPM bug 3301192 */
                           ,source_object_id
                           ,source_object_type
                           )
                   SELECT
                         pa_proj_elem_ver_structure_s.nextval
                        ,l_struc_version_id
                        ,ppevs.version_number     --replaced k with source version_number  bug 2829385
            --,ppevs.name 3717026, replaced ppevs.name with ppe.name
            ,ppe.name
                        ,p_dest_project_id
                        ,ppe.proj_element_id
                        ,ppevs.DESCRIPTION
                        ,ppevs.EFFECTIVE_DATE
                        ,decode(l_dest_str_versions_tbl(k).dest_str_status, 'STRUCTURE_PUBLISHED', sysdate, to_date(null)) --bug 2838547
                        ,decode(l_dest_str_versions_tbl(k).dest_str_status, 'STRUCTURE_PUBLISHED', l_publish_person_id, NULL) --bug 2838547
                        ,decode(l_dest_str_versions_tbl(k).current_flag, 'Y', trunc(sysdate), to_date(NULL)) --bug 2838547
                        ,l_dest_str_versions_tbl(k).current_flag
                        ,decode(l_dest_str_versions_tbl(k).current_flag, 'Y', l_publish_person_id, NULL) --bug 2838547
                        ,ppevs.ORIGINAL_BASELINE_DATE
                        ,ppevs.ORIGINAL_FLAG
                        ,ppevs.ORIGINAL_BASELINE_PERSON_ID
                        ,'UNLOCKED'
                        ,null
                        ,null
                        ,l_dest_str_versions_tbl(k).dest_str_status
                        ,ppevs.WF_STATUS_CODE
                        ,l_LATEST_EFF_PUBLISHED_FLAG
                        ,ppevs.RECORD_VERSION_NUMBER
                        ,ppevs.WBS_RECORD_VERSION_NUMBER
                        ,SYSDATE
                        ,l_user_id
                        ,SYSDATE
                        ,l_user_id
                        ,l_login_id
                        ,ppevs.change_reason_code
                        ,'N'
                        ,ppevs.current_working_flag   /* FPM bug 3301192 */
                        ,p_dest_project_id
                        ,'PA_PROJECTS'
                  FROM PA_PROJ_ELEM_VER_STRUCTURE ppevs, pa_proj_elements ppe
                 WHERE ppevs.project_id = p_src_project_id
                  AND ppe.project_id = p_dest_project_id
                  and ppevs.element_version_id = l_dest_str_versions_tbl(k).src_str_version_id
                  and ppevs.proj_element_id = ppe.attribute15
                  AND ppe.object_type = 'PA_STRUCTURES';

              --fix bug 2831973
              --calculate delta before inserting schedule rows
              --select source structure version scheduled start date
              IF (p_target_start_date IS NULL) THEN
                l_delta := 0;
              ELSE
                OPEN get_src_sch_st_date(p_src_project_id,
                         l_dest_str_versions_tbl(k).src_str_version_id);
                FETCH get_src_sch_st_date into l_src_sch_st_date;
                CLOSE get_src_sch_st_date;
                l_delta := p_target_start_date - l_src_sch_st_date;
              END IF;

              INSERT INTO pa_proj_elem_ver_schedule(
                            PEV_SCHEDULE_ID
                           ,ELEMENT_VERSION_ID
                           ,PROJECT_ID
                           ,PROJ_ELEMENT_ID
                           ,CREATION_DATE
                           ,CREATED_BY
                           ,LAST_UPDATE_DATE
                           ,LAST_UPDATED_BY
                           ,SCHEDULED_START_DATE
                           ,SCHEDULED_FINISH_DATE
                           ,OBLIGATION_START_DATE
                           ,OBLIGATION_FINISH_DATE
                           ,ACTUAL_START_DATE
                           ,ACTUAL_FINISH_DATE
                           ,ESTIMATED_START_DATE
                           ,ESTIMATED_FINISH_DATE
                           ,DURATION
                           ,EARLY_START_DATE
                           ,EARLY_FINISH_DATE
                           ,LATE_START_DATE
                           ,LATE_FINISH_DATE
                           ,CALENDAR_ID
                           ,MILESTONE_FLAG
                           ,CRITICAL_FLAG
                           ,RECORD_VERSION_NUMBER
                           ,LAST_UPDATE_LOGIN
                           ,WQ_PLANNED_QUANTITY
                           ,PLANNED_EFFORT
                           ,ACTUAL_DURATION
                           ,ESTIMATED_DURATION
                           ,ATTRIBUTE_CATEGORY
                           ,ATTRIBUTE1
                           ,ATTRIBUTE2
                           ,ATTRIBUTE3
                           ,ATTRIBUTE4
                           ,ATTRIBUTE5
                           ,ATTRIBUTE6
                           ,ATTRIBUTE7
                           ,ATTRIBUTE8
                           ,ATTRIBUTE9
                           ,ATTRIBUTE10
                           ,ATTRIBUTE11
                           ,ATTRIBUTE12
                           ,ATTRIBUTE13
                           ,ATTRIBUTE14
                           ,ATTRIBUTE15
                           ,source_object_id
                           ,source_object_type
                           ,DEF_SCH_TOOL_TSK_TYPE_CODE            --Bug 9378153
                           ,CONSTRAINT_TYPE_CODE                  --Bug 3762437
                           ,CONSTRAINT_DATE
                           ,FREE_SLACK
                           ,TOTAL_SLACK
                           ,EFFORT_DRIVEN_FLAG
                           ,LEVEL_ASSIGNMENTS_FLAG
                           ,EXT_ACT_DURATION
                           ,EXT_REMAIN_DURATION
                           ,EXT_SCH_DURATION                       --Bug 3762437
                              )
                        SELECT
                            pa_proj_elem_ver_schedule_s.nextval
                           ,ppev1.ELEMENT_VERSION_ID
                           ,p_dest_PROJECT_ID
                           ,ppev1.PROJ_ELEMENT_ID
                           ,SYSDATE
                           ,l_user_id
                           ,SYSDATE
                           ,l_user_id
                           ,PA_PROJ_TASK_STRUC_PUB.get_adjusted_dates( p_target_start_date,  --fix bug 2831973
                                                                       p_target_finish_date,
                                                                       l_delta,
                                                                       ppevs.SCHEDULED_START_DATE,
                                                                       null )                --sch start date
                           ,PA_PROJ_TASK_STRUC_PUB.get_adjusted_dates( p_target_start_date,  --fix bug 2831973
                                                                       p_target_finish_date,
                                                                       l_delta,
                                                                       ppevs.SCHEDULED_START_DATE,
                                                                       SCHEDULED_FINISH_DATE ) --sch end date
                           ,ppevs.OBLIGATION_START_DATE
                           ,ppevs.OBLIGATION_FINISH_DATE
                           ,null                       --ppevs.ACTUAL_START_DATE   bug 2827090
                           ,null                       --ppevs.ACTUAL_FINISH_DATE
                           ,null                       --ppevs.ESTIMATED_START_DATE
                           ,null                       --ppevs.ESTIMATED_FINISH_DATE
                           ,ppevs.DURATION
                           ,ppevs.EARLY_START_DATE
                           ,ppevs.EARLY_FINISH_DATE
                           ,ppevs.LATE_START_DATE
                           ,ppevs.LATE_FINISH_DATE
                           ,p_calendar_id              --,ppevs.CALENDAR_ID  Bug # 2955589. Use the calendar id passed to
                                                       --this API.
                           ,ppevs.MILESTONE_FLAG
                           ,ppevs.CRITICAL_FLAG
                           ,ppevs.RECORD_VERSION_NUMBER
                           ,l_login_id
                           ,ppevs.WQ_PLANNED_QUANTITY
                           ,ppevs.PLANNED_EFFORT
                           ,ppevs.ACTUAL_DURATION
                           ,ppevs.ESTIMATED_DURATION
                           ,ppevs.ATTRIBUTE_CATEGORY
                           ,ppevs.ATTRIBUTE1
                           ,ppevs.ATTRIBUTE2
                           ,ppevs.ATTRIBUTE3
                           ,ppevs.ATTRIBUTE4
                           ,ppevs.ATTRIBUTE5
                           ,ppevs.ATTRIBUTE6
                           ,ppevs.ATTRIBUTE7
                           ,ppevs.ATTRIBUTE8
                           ,ppevs.ATTRIBUTE9
                           ,ppevs.ATTRIBUTE10
                           ,ppevs.ATTRIBUTE11
                           ,ppevs.ATTRIBUTE12
                           ,ppevs.ATTRIBUTE13
                           ,ppevs.ATTRIBUTE14
                           ,ppevs.ATTRIBUTE15
                           ,p_dest_PROJECT_ID
                           ,'PA_PROJECTS'
                           ,ppevs.DEF_SCH_TOOL_TSK_TYPE_CODE            --Bug 9378153
                           ,CONSTRAINT_TYPE_CODE          --Bug 3762437
                           ,CONSTRAINT_DATE
                           ,FREE_SLACK
                           ,TOTAL_SLACK
                           ,EFFORT_DRIVEN_FLAG
                           ,LEVEL_ASSIGNMENTS_FLAG
                           ,EXT_ACT_DURATION
                           ,EXT_REMAIN_DURATION
                           ,EXT_SCH_DURATION              --Bug 3762437
                         FROM pa_proj_elem_ver_schedule ppevs,
                              pa_proj_element_versions ppev1,
                              pa_proj_element_versions ppev2
                           where ppev1.attribute15 = ppevs.element_version_id
                            and  ppevs.project_id = p_src_project_id
                            and  ppev2.project_id = p_src_project_id
                            and  ppev2.parent_structure_version_id = l_dest_str_versions_tbl(k).src_str_version_id
                            and  ppev2.element_version_id = ppevs.element_version_id
                            and  ppev1.attribute15 = ppev2.element_version_id
                            and ppev1.object_type = 'PA_STRUCTURES'
                            and ppev2.object_type = 'PA_STRUCTURES'
                            and  ppev1.project_id = p_dest_project_id;


           END IF;  --l_dest_str_versions_tbl(k).copy_flag = 'Y'
       END LOOP;
    END IF;  --IF NVL( l_workplan_enabled, 'N' ) = 'N'

                IF l_workplan_enabled = 'Y'
                THEN
                    --updating duration
                    -- Bug 3657808 Remove duration calculation using calendar
                    -- and rewritting the query
                    /*UPDATE pa_proj_elem_ver_schedule
                       SET duration = PA_PROJ_TASK_STRUC_PUB.calc_duration( p_calendar_id,
                                                                            scheduled_start_date,
                                                                            scheduled_finish_date )
                     WHERE project_id = p_dest_project_id;*/
                    UPDATE pa_proj_elem_ver_schedule
                       SET duration = trunc(scheduled_finish_date) - trunc(scheduled_start_date) + 1
                     WHERE project_id = p_dest_project_id;
                END IF;

                    ---updating baselined dates
                    UPDATE PA_PROJ_ELEMENTS ppe
                       SET ( BASELINE_START_DATE ,BASELINE_FINISH_DATE,
                             BASELINE_DURATION ) =
                               ( Select ppevs.scheduled_start_date, ppevs.scheduled_finish_date,
                                        ppevs.duration
                                   from pa_proj_elem_ver_schedule ppevs,
                                        pa_proj_elem_ver_structure ppevst
                                  WHERE ppevs.project_id           = p_dest_project_id
                                    and ppevst.project_id          = p_dest_project_id
                                    and ppevst.current_flag        = 'Y'             --assuming this is the flag used to identify the baselined structure ver.
                                    and ppevst.STATUS_CODE         = 'STRUCTURE_PUBLISHED'
                                    and ppevs.element_version_id = ppevst.element_version_id
                                )
                    WHERE project_id = p_dest_project_id;
--                      and object_type = 'PA_STRUCTURES'
--                      and EXISTS ( SELECT proj_element_id FROM pa_proj_structure_types
--                                WHERE proj_element_id = ppe.proj_element_id
--                                  AND structure_type_id = 1 );

                    --updating projects dates
                    update pa_projects_all
                       set ( BASELINE_START_DATE ,BASELINE_FINISH_DATE,  baseline_duration, baseline_as_of_date) =
                          ( SELECT BASELINE_START_DATE ,BASELINE_FINISH_DATE,  baseline_duration,
                                         decode(BASELINE_START_DATE, null, null, sysdate)
                            FROM pa_proj_elements ppe, pa_proj_structure_types ppst
                            WHERE project_id = p_dest_project_id
                              and object_type = 'PA_STRUCTURES'
                              and ppe.proj_element_id = ppst.proj_element_id
                              and ppst.structure_type_id = 1 )
                     where project_id = p_dest_project_id;

                     IF l_latest_pub_str_ver_id IS NOT NULL
                     THEN
                      update pa_projects_all
                       set ( scheduled_START_DATE ,scheduled_FINISH_DATE,  scheduled_duration, scheduled_as_of_date ) =
                          ( SELECT SCHEDULED_START_DATE ,SCHEDULED_FINISH_DATE,duration,
                                   decode(SCHEDULED_START_DATE, null, null, sysdate)
                            FROM pa_proj_elem_ver_schedule
                            WHERE project_id = p_dest_project_Id
                              and element_version_id = l_latest_pub_str_ver_id)
                       where project_id = p_dest_project_id;
                     END IF;


  --bug 2831775
  --need to sync up transaction dates if auto sync is on
  If l_shared = 'Y' and l_workplan_enabled = 'Y' THEN
    OPEN get_shared_struc_id;
    FETCH get_shared_struc_id into l_structure_id;
    CLOSE get_shared_struc_id;

    If (PA_WORKPLAN_ATTR_UTILS.CHECK_AUTO_DATE_SYNC_ENABLED(l_structure_id) = 'Y') AND (PA_WORKPLAN_ATTR_UTILS.CHECK_AUTO_PUB_AT_CREATION(p_src_project_id) = 'Y')THEN

       --Copy to transaction date
       PA_PROJECT_DATES_PUB.COPY_PROJECT_DATES(
         p_project_id => p_dest_project_id,
         x_return_status => l_return_status,
         x_msg_count => l_msg_count,
         x_msg_data => l_msg_data
       );

       if (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
         x_msg_count := FND_MSG_PUB.count_msg;
         if x_msg_count = 1 then
           x_msg_data := l_msg_data;
         end if;
         raise FND_API.G_EXC_ERROR;
       end if;

    END IF;
  END IF;
  --end bug 2831775
------------------------------------------------------------------------------
  -- Changes added by skannoji
  -- Added code for doosan customer
  Declare
    /* Bug #: 3305199 SMukka                                                         */
    /* Changing data type from PA_PLSQL_DATATYPES.IdTabTyp to SYSTEM.pa_num_tbl_type */
    /* src_versions_tab   PA_PLSQL_DATATYPES.IdTabTyp;                               */
    /* dest_versions_tab  PA_PLSQL_DATATYPES.IdTabTyp;                               */
    src_versions_tab   SYSTEM.pa_num_tbl_type;
    dest_versions_tab  SYSTEM.pa_num_tbl_type;
  Begin
    Select Element_Version_ID, attribute15 BULK COLLECT
    INTO   dest_versions_tab, src_Versions_Tab
    From   PA_Proj_Element_Versions
    Where  Project_ID = p_dest_project_id
    AND ( PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(element_version_id, 'WORKPLAN') = 'Y')
    AND object_type = 'PA_STRUCTURES';

    -- Copies budget versions, resource assignments and budget lines as required for the workplan version.
    /*Smukka Bug No. 3474141 Date 03/01/2004                                    */
    /*moved PA_FP_COPY_FROM_PKG.copy_wp_budget_versions into plsql block        */
    BEGIN
        PA_FP_COPY_FROM_PKG.copy_wp_budget_versions
        (
          p_source_project_id            => p_src_project_id
         ,p_target_project_id            => p_dest_project_id
         ,p_src_sv_ids_tbl               => src_Versions_Tab  -- Workplan version id tbl
         ,p_target_sv_ids_tbl            => dest_Versions_Tab -- Workplan version id tbl
         ,p_copy_mode                    => null -- Bug 4277801
         ,x_return_status                => x_return_status
         ,x_msg_count                    => x_msg_count
         ,x_Msg_data                     => x_msg_data
        );
    EXCEPTION
        WHEN OTHERS THEN
             fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                                     p_procedure_name => 'copy_structures_bulk',
                                     p_error_text     => SUBSTRB('PA_FP_COPY_FROM_PKG.copy_wp_budget_versions:'||SQLERRM,1,240));
        RAISE FND_API.G_EXC_ERROR;
    END;
    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
       RAISE FND_API.G_EXC_ERROR;
    END IF;
  End;
   -- till here by skannoji
------------------------------------------------------------------------------

  update pa_proj_elements ppe1
     set attribute15 = ( select attribute15 from pa_proj_elements ppe2
                          where ppe2.project_id = p_src_project_id
                            and ppe2.proj_element_id = ppe1.attribute15 )
   where project_id = p_dest_project_id
   ;

  update pa_proj_element_versions ppevs1
     set attribute15 = ( select attribute15 from pa_proj_element_versions ppevs2
                          where ppevs2.project_id = p_src_project_id
                            and ppevs2.element_version_id = ppevs1.attribute15 )
   where project_id = p_dest_project_id
   ;

/* Not required to call the concurrent program bcoz it will
   be called from AMG upon project creation. Otherwise it will
   be redundant code
  --bug 3035902 maansari
   DECLARE

       CURSOR cur_strs_n_types
       IS
         SELECT ppe.proj_element_id, ppst.structure_type_id
           FROM pa_proj_elements ppe, pa_proj_structure_types ppst
          WHERE ppe.project_id = p_dest_project_id
            AND ppe.object_type = 'PA_STRUCTURES'
            AND ppe.proj_element_id = ppst.proj_element_id
          ;

       CURSOR cur_str_vers( c_structure_id NUMBER )
       IS
         SELECT ppevs.element_version_id
           FROM pa_proj_element_versions ppevs
          WHERE ppevs.project_id = p_dest_project_id
            AND ppevs.object_type = 'PA_STRUCTURES'
            AND ppevs.proj_element_id = c_structure_id
          ;

       l_fn_str_id          NUMBER;
       l_wp_str_id          NUMBER;
       l_fn_str_ver_id      NUMBER;
       l_wp_str_ver_id      NUMBER;
       l_task_weight_basis  PA_PROJ_PROGRESS_ATTR.task_weight_basis_code%TYPE;
   BEGIN
       l_task_weight_basis := PA_PROGRESS_UTILS.GET_TASK_WEIGHTING_BASIS( p_dest_project_id );
       IF NVL( l_task_weight_basis, 'X' ) = 'DURATION'
       THEN
           FOR cur_strs_n_types_rec in cur_strs_n_types LOOP
              IF cur_strs_n_types_rec.structure_type_id = 1  --'WORKPLAN' structure
              THEN
                  l_wp_str_id  := cur_strs_n_types_rec.proj_element_id;
                  UPDATE pa_proj_elem_ver_structure
                     SET PROCESS_UPDATE_WBS_FLAG = 'Y'
                   WHERE proj_element_id = cur_strs_n_types_rec.proj_element_id
                     AND project_id = p_dest_project_id
                     AND PROCESS_UPDATE_WBS_FLAG = 'N'
                    ;
              ELSE
                  l_fn_str_id := cur_strs_n_types_rec.proj_element_id;
              END IF;
           END LOOP;
       END IF;

       IF l_shared = 'Y' AND NVL( l_task_weight_basis, 'X' ) = 'DURATION'
       THEN
           OPEN cur_str_vers( l_wp_str_id );
           FETCH cur_str_vers INTO l_wp_str_ver_id;
           CLOSE cur_str_vers;

           PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP
                (
              p_calling_context       => 'COPY_PROJECT'
             ,p_project_id            => p_dest_project_id
             ,p_structure_version_id  => l_wp_str_ver_id
             ,x_return_status         => l_return_status
             ,x_msg_count             => l_msg_count
             ,x_msg_data              => l_msg_data);

           if (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
               x_msg_count := FND_MSG_PUB.count_msg;
               if x_msg_count = 1 then
                  x_msg_data := l_msg_data;
               end if;
               raise FND_API.G_EXC_ERROR;
           end if;

       ELSIF l_shared = 'N' AND NVL( l_task_weight_basis, 'X' ) = 'DURATION'   --Split then call the api twice.
       THEN
           OPEN cur_str_vers( l_wp_str_id );
           FETCH cur_str_vers INTO l_wp_str_ver_id;
           CLOSE cur_str_vers;

           PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP
                (
              p_calling_context       => 'COPY_PROJECT'
             ,p_project_id            => p_dest_project_id
             ,p_structure_version_id  => l_wp_str_ver_id
             ,x_return_status         => l_return_status
             ,x_msg_count             => l_msg_count
             ,x_msg_data              => l_msg_data);

           if (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
               x_msg_count := FND_MSG_PUB.count_msg;
               if x_msg_count = 1 then
                  x_msg_data := l_msg_data;
               end if;
               raise FND_API.G_EXC_ERROR;
           end if;


           OPEN cur_str_vers( l_fn_str_id );
           FETCH cur_str_vers INTO l_fn_str_ver_id;
           CLOSE cur_str_vers;

           PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP
                (
              p_calling_context       => 'COPY_PROJECT'
             ,p_project_id            => p_dest_project_id
             ,p_structure_version_id  => l_fn_str_ver_id
             ,x_return_status         => l_return_status
             ,x_msg_count             => l_msg_count
             ,x_msg_data              => l_msg_data);

           if (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
               x_msg_count := FND_MSG_PUB.count_msg;
               if x_msg_count = 1 then
                  x_msg_data := l_msg_data;
               end if;
               raise FND_API.G_EXC_ERROR;
           end if;

       END IF;
   END;
  --End 3035902 maansari
*/


  x_return_status := FND_API.G_RET_STS_SUCCESS;


  IF (p_debug_mode = 'Y') THEN
    pa_debug.debug('PA_PROJ_TASK_STRUC_PUB.copy_structures_bulk END');
  END IF;

EXCEPTION
  when FND_API.G_EXC_ERROR then
    if p_commit = FND_API.G_TRUE then
      rollback to copy_structure_bulk_pvt;
    end if;
    x_return_status := FND_API.G_RET_STS_ERROR;
  when FND_API.G_EXC_UNEXPECTED_ERROR then
    if p_commit = FND_API.G_TRUE then
      rollback to copy_structure_bulk_pvt;
    end if;
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
    fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                            p_procedure_name => 'copy_structures_bulk',
                            p_error_text     => SUBSTRB(SQLERRM,1,240));
  when OTHERS then
    if p_commit = FND_API.G_TRUE then
      rollback to copy_structure_bulk_pvt;
    end if;
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
    fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                            p_procedure_name => 'copy_structures_bulk',
                            p_error_text     => SUBSTRB(SQLERRM,1,240));
    raise;
END copy_structures_bulk;

FUNCTION calc_duration( p_calendar_id NUMBER, p_start_date DATE, p_finish_date DATE ) RETURN NUMBER IS
    l_return_duration  NUMBER;
    l_duration_days    NUMBER;
    l_msg_count                    NUMBER;
    l_msg_data                     VARCHAR2(250);
    l_return_status                VARCHAR2(2);
BEGIN

    pa_duration_utils.get_duration(p_calendar_id   => p_calendar_id ,
                                   p_start_date    => p_start_date,
                                   p_end_date      => p_finish_date,
                                   x_duration_days => l_duration_days,
                                   x_duration_hours => l_return_duration ,
                                   x_return_status  => l_return_status,
                                   x_msg_count      => l_msg_count,
                                   x_msg_data       => l_msg_data);
    return l_return_duration;

END calc_duration;

PROCEDURE get_version_ids(
 p_task_id            NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_task_version_id   NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_project_id        NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,x_structure_version_id OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
,x_task_version_id      OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
)  IS
   CURSOR cur_str_ver_id1
   IS
     SELECT parent_structure_version_id
       FROM pa_proj_element_versions
      WHERE element_version_id = p_task_version_id;

   CURSOR cur_str_ver_id2
   IS
     SELECT element_version_id, parent_structure_version_id
       FROM pa_proj_element_versions
      WHERE proj_element_id = p_task_id
        AND project_id = p_project_id
      ;

BEGIN

        IF p_task_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND p_task_version_id IS NOT NULL
        THEN
            OPEN cur_str_ver_id1;
            FETCH cur_str_ver_id1 INTO x_structure_version_id;
            CLOSE cur_str_ver_id1;
            x_task_version_id := p_task_version_id;
        ELSIF ( p_task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR p_task_version_id IS NULL ) AND
             ( p_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND p_task_id IS NOT NULL )
        THEN
            OPEN cur_str_ver_id2;
            FETCH cur_str_ver_id2 INTO x_task_version_id, x_structure_version_id;
            CLOSE cur_str_ver_id2;
        END IF;

END get_version_ids;


PROCEDURE get_task_version_id(
 p_project_id        NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_structure_version_id   NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_task_id            NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,x_task_version_id      OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
)  IS

   CURSOR cur_task_ver_id
   IS
     SELECT element_version_id
       FROM pa_proj_element_versions
      WHERE proj_element_id = p_task_id
        AND parent_structure_version_id = p_structure_version_id
        AND project_id = p_project_id;

BEGIN
        IF p_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND p_structure_version_id IS NOT NULL AND
           p_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND p_task_id IS NOT NULL AND
           p_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND p_project_id IS NOT NULL
        THEN
            OPEN cur_task_ver_id;
            FETCH cur_task_ver_id INTO x_task_version_id;
            CLOSE cur_task_ver_id;
        END IF;
END get_task_version_id;


PROCEDURE rollup_dates(
   p_tasks_in             IN pa_project_pub.task_out_tbl_type
  ,p_task_version_id      IN NUMBER  := null
  ,p_structure_version_id IN NUMBER
  ,p_project_id           IN NUMBER
  ,x_msg_count            OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
  ,x_msg_data             OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  ,x_return_status        OUT NOCOPY VARCHAR2 ) IS --File.Sql.39 bug 4440895

  i                    NUMBER;

  l_tasks_ver_ids      PA_STRUCT_TASK_ROLLUP_PUB.pa_element_version_id_tbl_typ;
  l_task_version_id    NUMBER;

  l_msg_count          NUMBER;
  l_return_status      VARCHAR2(1);
  l_msg_data           VARCHAR2(2000);
  l_data               VARCHAR2(2000);
  l_msg_index_out      NUMBER;
  API_ERROR            EXCEPTION;
  j                    NUMBER;

BEGIN

 IF p_task_version_id IS NULL
 THEN
     i := p_tasks_in.first;
     j := 1;
     IF p_tasks_in.exists(i)
     THEN
         WHILE i IS NOT NULL LOOP
             IF p_tasks_in(i).task_version_id IS NOT NULL AND
                p_tasks_in(i).task_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
             THEN
                 --l_tasks_ver_ids.extend;
                 l_tasks_ver_ids(j) := p_tasks_in(i).task_version_id;

             ELSIF ( p_tasks_in(i).pa_task_id IS NOT NULL AND p_tasks_in(i).pa_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) AND
                   ( p_tasks_in(i).task_version_id IS NULL OR p_tasks_in(i).task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) AND p_structure_version_id IS NOT NULL
             THEN
                 --PA_PROJECT_PUB.update_project does not populate task versions for the tasks being updated.
                 --in this case we have to pick this from databse.
                 get_task_version_id(
                       p_project_id                  => p_project_id
                      ,p_task_id                     => p_tasks_in(i).pa_task_id
                      ,p_structure_version_id        => p_structure_version_id
                      ,x_task_version_id                => l_task_version_id
                     );

                 --l_tasks_ver_ids.extend;
                 l_tasks_ver_ids(j) := l_task_version_id;

             END IF;
            i := p_tasks_in.next(i);
            j := j + 1;
         END LOOP;
     END IF;
     --To avoid no_data_found when this array is read in PA_TASK_PUB1.Cal_Task_weights
     --l_tasks_ver_ids.extend;
     --l_tasks_ver_ids(l_tasks_ver_ids.count) := null;
 ELSE
     l_tasks_ver_ids(1) := p_task_version_id;
 END IF;

     PA_STRUCT_TASK_ROLLUP_PUB.TASKS_ROLLUP_UNLIMITED(
                   p_calling_module        => 'AMG'
                  ,p_element_versions      => l_tasks_ver_ids
                  ,x_return_status         => l_return_status
                  ,x_msg_count             => l_msg_count
                  ,x_msg_data              => l_msg_data);

         if l_return_status <> FND_API.G_RET_STS_SUCCESS then
            x_msg_count := FND_MSG_PUB.count_msg;
            x_return_status := l_return_status ;        -- Bug 3044915
            if x_msg_count = 1 then
               pa_interface_utils_pub.get_messages
                    (p_encoded        => FND_API.G_TRUE,
                     p_msg_index      => 1,
                     p_msg_count      => l_msg_count,
                     p_msg_data       => l_msg_data,
                     p_data           => l_data,
                     p_msg_index_out  => l_msg_index_out);
              x_msg_data := l_data;
            end if;
             raise API_ERROR;
         end if;
         x_return_status :=  FND_API.G_RET_STS_SUCCESS;    -- Bug3044915

-- Start Changes for Bug 6633233
EXCEPTION
  WHEN API_ERROR THEN
    x_return_status := FND_API.G_RET_STS_ERROR;

  WHEN OTHERS THEN
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
    fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
 	                          p_procedure_name => 'ROLLUP_DATES',
 	                          p_error_text     => SUBSTRB(SQLERRM,1,240));
    raise;
-- End Changes for Bug 6633233

END rollup_dates;

/*==================================================================
   This API is called from pa_project_pub.create_project and does the
   processing to create the structure information for the tasks.
   Included the api for Post FP K one off. Bug 2931183
   This API is called from pa_project_pub.update_project which passes
   the structure version id through p_structure_version_id parameter.
   The complete WBS is passed to this API in p_tasks_in_tbl. Depending
   on whether the task is an existing task or a new task, task creation
   or task updation is performed.
 ==================================================================*/

PROCEDURE PROCESS_TASK_STRUCTURE_BULK
   (  p_api_version_number              IN        NUMBER
     ,p_commit                          IN        VARCHAR2
     ,p_init_msg_list                   IN        VARCHAR2
     ,p_calling_module                  IN        VARCHAR2
     ,p_project_id                      IN        pa_projects_all.project_id%TYPE
     ,p_source_project_id               IN        pa_projects_all.project_id%TYPE
     ,p_pm_product_code                 IN        pa_projects_all.pm_product_code%TYPE
     ,p_structure_type                  IN        pa_structure_types.structure_type_class_code%TYPE
     ,p_tasks_in_tbl                    IN        pa_project_pub.task_in_tbl_type
     ,p_create_task_version_only        IN        VARCHAR2
     ,p_wp_str_exists                   IN        VARCHAR2
     ,p_is_wp_separate_from_fn          IN        VARCHAR2
     ,p_is_wp_versioning_enabled        IN        VARCHAR2
     ,p_structure_version_id            IN        pa_proj_elem_ver_structure.element_version_id%TYPE --IUP: Populated only in case of Update_project context
     -- Included NOCOPY for the following parameter.
     -- PA L Changes 3010538
     ,p_process_mode                    IN        VARCHAR2
     -- Bug 3075609. To identify create task version only context.
     ,p_create_task_versions_only       IN        VARCHAR2
     ,px_tasks_out_tbl                  IN OUT NOCOPY   pa_project_pub.task_out_tbl_type
     ,x_return_status                   OUT       NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
     ,x_msg_count                       OUT       NOCOPY NUMBER --File.Sql.39 bug 4440895
     ,x_msg_data                        OUT       NOCOPY VARCHAR2) --File.Sql.39 bug 4440895
AS

-- Cursors Definition

-- This cursor is used to get the auto publish flag on creation for a given project_id
/* Bug 2955589. This cursor is no longer used.
CURSOR cur_auto_pub_flag(c_project_id pa_projects_all.project_id%TYPE)
  IS
  SELECT AUTO_PUB_UPON_CREATION_FLAG
    FROM pa_proj_workplan_attr
   WHERE project_id = c_project_id;
*/
-- This cursor is used to get the structure id given the structure type and project_id
CURSOR get_structure(c_project_id pa_projects_all.project_id%TYPE, c_struc_type pa_structure_types.structure_type_class_code%TYPE) IS
    select pelem.proj_element_id
      from pa_proj_elements pelem,
           pa_proj_structure_types ppstr,
           pa_structure_types pstr
     where pelem.project_id = c_project_id
       and pstr.structure_type_class_code = c_struc_type
       and pstr.structure_type_id = ppstr.structure_type_id
       and ppstr.proj_element_id = pelem.proj_element_id;

-- This cursor is used to get the project number given the project_id
CURSOR   l_amg_project_csr(c_project_id pa_projects.project_id%type)
   IS
   SELECT   segment1
   FROM     pa_projects p
   WHERE    p.project_id = c_project_id;

--The following cursor will be used when the structure type is
--Financial as some of the attributes have been derived and updated
--in the pa_tasks table and we need to use them for structures processing.
CURSOR cur_pa_tasks(c_project_id pa_projects_all.project_id%TYPE,c_task_id pa_tasks.task_id%TYPE)
   IS
   SELECT task_number, long_task_name, description,
          parent_task_id,carrying_out_organization_id,
          pm_task_reference, address_id, task_manager_person_id
     FROM pa_tasks
    WHERE project_id = c_project_id
      AND task_id = c_task_id;

l_cur_pa_tasks_rec cur_pa_tasks%ROWTYPE; -- userd only for create task case

--ADUT. This cursor is required to identify if the source is a project / template.
Cursor cur_template_flag(c_proj_id pa_projects_all.project_id%TYPE)
   Is
   select NVL(template_flag,'N')
   from pa_projects
   where project_id = c_proj_id;

-- IUP: Cursors added for changes done to this api so it can be called from update_project
--Cursor to get the record version number of the task record which needs to be updated in pa_proj_elements table
CURSOR cur_rec_ver_num(c_task_id pa_tasks.task_id%TYPE)
    IS
    SELECT record_version_number
    FROM pa_proj_elements
    WHERE proj_element_id = c_task_id
    AND object_type = 'PA_TASKS';

--Cursor to get the task version id when task id and structure version id is known
CURSOR cur_pa_task_ver( c_structure_version_id pa_proj_element_versions.parent_structure_version_id%TYPE, c_task_id pa_tasks.task_id%TYPE )
    IS
    SELECT element_version_id, record_version_number
    FROM pa_proj_element_versions
    WHERE project_id = p_project_id
    AND proj_element_id = c_task_id
    AND parent_structure_version_id = c_structure_version_id
    AND object_type = 'PA_TASKS';

--Cursor to get the parent version id of the task version id
CURSOR cur_parent_object_rel( c_task_version_id pa_proj_elem_ver_schedule.element_version_id%TYPE )
    IS
    SELECT object_id_from1   -- parent task id
          ,object_relationship_id,  -- relationship id reqd for update relationship API
           record_version_number,
           weighting_percentage     -- Bug 3075609. We need to get hold of the weightage of the task in db.
    FROM pa_object_relationships
    WHERE object_id_to1 = c_task_version_id
    AND relationship_type = 'S';

 -- Added for DFF attributes for calling update_schedule_version
CURSOR cur_ver_sch_attr_rec(c_element_version_id IN pa_proj_elem_ver_schedule.element_version_id%TYPE)
    IS
    SELECT *
    FROM pa_proj_elem_ver_schedule
    WHERE element_version_id = c_element_version_id
    AND project_id = p_project_id;

l_ver_sch_attr_rec              cur_ver_sch_attr_rec%ROWTYPE;

--Cursor to get the task type associated with the task id
CURSOR cur_task_type_id(c_task_id pa_tasks.task_id%TYPE)
    IS
    SELECT type_id
    FROM pa_proj_elements
    WHERE proj_element_id = c_task_id
    AND project_id = p_project_id;

--Cursor to get the task id if task element version id is known
CURSOR cur_elem_ver_to_task_id( c_task_version_id pa_proj_element_versions.element_version_id%TYPE )
    IS
      SELECT proj_element_id
        FROM pa_proj_element_versions
       WHERE project_id = p_project_id
         AND element_version_id = c_task_version_id;


--Cursor added for bug 3057575 :
--Cursor to get all the task ver id for a particular Structure version
CURSOR   cur_all_task_ver_id( c_structure_version_id pa_proj_element_versions.parent_structure_version_id%TYPE )
   IS
   Select element_version_id
   from pa_proj_element_versions
   where parent_structure_version_id = c_structure_version_id
   and object_type = 'PA_TASKS'
    -- rbruno added for bug 9484327 to get task which are not marked for deletion - start
    and task_unpub_ver_status_code <> 'TO_BE_DELETED';
    -- rbruno added for bug 9484327 - end


--Cursor added for bug 3057575 :
--Cursor to get the task number from task ver id
CURSOR cur_ver_id_to_task_num( c_task_version_id pa_proj_element_versions.element_version_id%TYPE )
    IS
    SELECT p1.element_number
    FROM pa_proj_elements p1, pa_proj_element_versions pv1
    WHERE pv1.element_version_id = c_task_version_id
    AND p1.proj_element_id = pv1.proj_element_id;

-- End Cursors Definition

-- Definition for the table types used in this API
TYPE display_sequence_tbl IS TABLE OF pa_proj_element_versions.display_sequence%TYPE
        INDEX BY BINARY_INTEGER;
TYPE wbs_level_tbl IS TABLE OF pa_proj_element_versions.wbs_level%TYPE
        INDEX BY BINARY_INTEGER;
TYPE wbs_number_tbl IS TABLE OF pa_proj_element_versions.wbs_number%TYPE
        INDEX BY BINARY_INTEGER;
TYPE child_count_tbl IS TABLE OF NUMBER
        INDEX BY BINARY_INTEGER;
TYPE weighting_percentage_tbl IS TABLE OF pa_object_relationships.weighting_percentage%TYPE
        INDEX BY BINARY_INTEGER;
TYPE task_version_id_tbl IS TABLE OF pa_proj_element_versions.element_version_id%TYPE
        INDEX BY BINARY_INTEGER;

----Table Type added for bug 3057575 :
TYPE task_parent_id_tbl_type IS TABLE OF pa_tasks.task_id%TYPE
        INDEX BY BINARY_INTEGER;
----Table Type added for bug 3057575 :
TYPE task_ver_id_passed_tbl_type IS TABLE OF pa_proj_element_versions.element_version_id%TYPE
        INDEX BY BINARY_INTEGER;

-- End of Definition for the table types

-- Header level variables common to all tasks required for update/create task/project cases.
l_structure_id                  pa_proj_elements.proj_element_id%TYPE;
l_structure_version_id          pa_proj_element_versions.element_version_id%TYPE;
l_task_unpub_ver_status_code    pa_proj_element_versions.task_unpub_ver_status_code%TYPE;
l_add_task_security             VARCHAR2(1);
l_default_task_type_id          pa_proj_elements.type_id%TYPE;
l_update_task_security          VARCHAR2(1);
l_str_status_code               pa_proj_elem_ver_structure.status_code%TYPE;
l_amg_segment1                  pa_projects_all.segment1%TYPE;

-- Bug 3075609
l_maintain_weightages           VARCHAR2(1); -- We need not maintain weightages during code flow always. This var will track it.
l_existing_task_set_max_wt      VARCHAR2(1); -- If a task is indented/ moved under a parent with no other progressible task, this
                                             -- task should have a weightage of 100. This flag will track this.

-- Bug 3075609
l_new_structure_version         varchar2(1) := 'Y';  -- In the update context, we could be either updating an existing
                                                     -- structure version or be creating a new structure version. We need
                                                     -- to differentiate the two scenarios.

-- rec that contains all tasks information.
l_task_in_rec                   pa_project_pub.task_in_rec_type;

-- proj element level variables
l_task_id                       pa_tasks.task_id%TYPE;         -- task id of the current task being processed in loop
l_parent_task_id                pa_tasks.parent_task_id%TYPE;  -- parent task id of the current task being processed in loop
l_task_version_id               pa_proj_element_versions.element_version_id%TYPE;     -- stores version id of current task being processed

-- version level variables required only for update task case.
l_proj_elem_ver_rvn             pa_proj_element_versions.record_version_number%TYPE;  -- record version number of proj element table
l_proj_elem_ver_rowid           VARCHAR2(255);                                        -- rowid of the task being updated.
l_relationship_id               pa_object_relationships.object_relationship_id%TYPE;
l_obj_rel_rvn                   NUMBER;

-- flexfield attributes used for updating/creating element version and schedule versions table.
l_attribute_category            PA_PROJ_ELEMENT_VERSIONS.attribute_category%TYPE;
l_attribute1                    PA_PROJ_ELEMENT_VERSIONS.attribute1%TYPE;
l_attribute2                    PA_PROJ_ELEMENT_VERSIONS.attribute2%TYPE;
l_attribute3                    PA_PROJ_ELEMENT_VERSIONS.attribute3%TYPE;
l_attribute4                    PA_PROJ_ELEMENT_VERSIONS.attribute4%TYPE;
l_attribute5                    PA_PROJ_ELEMENT_VERSIONS.attribute5%TYPE;
l_attribute6                    PA_PROJ_ELEMENT_VERSIONS.attribute6%TYPE;
l_attribute7                    PA_PROJ_ELEMENT_VERSIONS.attribute7%TYPE;
l_attribute8                    PA_PROJ_ELEMENT_VERSIONS.attribute8%TYPE;
l_attribute9                    PA_PROJ_ELEMENT_VERSIONS.attribute9%TYPE;
l_attribute10                   PA_PROJ_ELEMENT_VERSIONS.attribute10%TYPE;
l_attribute11                   PA_PROJ_ELEMENT_VERSIONS.attribute11%TYPE;
l_attribute12                   PA_PROJ_ELEMENT_VERSIONS.attribute12%TYPE;
l_attribute13                   PA_PROJ_ELEMENT_VERSIONS.attribute13%TYPE;
l_attribute14                   PA_PROJ_ELEMENT_VERSIONS.attribute14%TYPE;
l_attribute15                   PA_PROJ_ELEMENT_VERSIONS.attribute15%TYPE;
--Bug 6153503
l_return_msg                  varchar2(2000);
l_validate_status             varchar2(1);

-- Variables required for calculating display sequence, wbs level and weightage etc.
l_display_sequence_tbl          display_sequence_tbl;
l_wbs_level_tbl                 wbs_level_tbl;
l_wbs_number_tbl                wbs_number_tbl;
l_child_count_tbl               child_count_tbl;
l_weighting_percentage_tbl      weighting_percentage_tbl;
l_task_version_id_tbl           task_version_id_tbl;
l_top_task_count                NUMBER;
l_disp_seq                      NUMBER;

-- Bug 3075609. The following plsql table will indicate at any point of time if the parent
-- contains a task which has progress enabled.
l_child_indicator_tbl           PA_PLSQL_DATATYPES.Char1TabTyp;

-- Bug 3075609. This is a table of task versions for which atleast one of its child has changed
-- its parent. That a child task has moved out of this branch. This local variable will be indexed
-- with the task version ids so that eliminating duplicates is easy.
l_affected_parents_tbl          PA_PLSQL_DATATYPES.Char1TabTyp;

l_dummy_char                    VARCHAR2(1);
l_dummy_number                  NUMBER;

-- Standard parameters
l_return_status                 varchar2(1);
l_error_msg_code                varchar2(30);
l_msg_count                     NUMBER := 0;
l_data                          VARCHAR2(2000);
l_msg_data                      VARCHAR2(2000);
l_msg_index_out                 NUMBER;
l_debug_mode                    VARCHAR2(1);
l_module_name                   VARCHAR2(100) := 'pa.plsql.PA_PROJ_TASK_STRUC_PUB';
l_process_code                  VARCHAR2(30);
l_task_weight_basis_code        VARCHAR2(30);
l_update_wbs_flag               VARCHAR2(1);

l_debug_level2                  CONSTANT NUMBER := 2;
l_debug_level3                  CONSTANT NUMBER := 3;
l_debug_level4                  CONSTANT NUMBER := 4;
l_debug_level5                  CONSTANT NUMBER := 5;
l_debug_level6                  CONSTANT NUMBER := 6;

--bug 3010538
l_WBS_changed_flag              VARCHAR2(1) := 'N';
l_progressable_task             VARCHAR2(1);  --bug 3035902 maansari
--end bug 3010538

-- Bug 3091798
l_request_id                    pa_proj_elem_ver_structure.conc_request_id%TYPE;

-- Variables added for bug 3057575 :
row_task_ver_id                 cur_all_task_ver_id%ROWTYPE;
task_parent_id_tbl              task_parent_id_tbl_type;
task_ver_id_passed_tbl          task_ver_id_passed_tbl_type;
l_temp_count                    NUMBER;
l_temp_success                  VARCHAR2(1);
l_hierarchy_count               NUMBER;
 -- l_err_task_number               pa_tasks.task_number%TYPE; bug 6193314
 	 l_err_task_number               pa_proj_elements.element_number%TYPE;
l_shared                        VARCHAR(1) := 'N'; -- Added for Bug#3451073

/* Bug # 3420093 - Adding Progress Management modifications to create_project and update_project flow. */

    -- Amit Bug 3964548 Begin
    -- Changed l_add_task_ver_ids, l_add_planned_effort, l_add_start_date, l_add_end_date
    -- to SYSTEM.pa_num_tbl_type from PA_NUM_1000_NUM
    --l_add_task_ver_ids      PA_NUM_1000_NUM := PA_NUM_1000_NUM();
    --l_add_planned_effort    PA_NUM_1000_NUM := PA_NUM_1000_NUM();
    --l_add_start_date        PA_DATE_1000_DATE := PA_DATE_1000_DATE();
    --l_add_end_date          PA_DATE_1000_DATE := PA_DATE_1000_DATE();

    l_add_task_ver_ids      SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
    l_add_planned_effort    SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
    l_add_start_date        SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();
    l_add_end_date          SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();
    l_pm_product_code       SYSTEM.PA_VARCHAR2_30_TBL_TYPE := SYSTEM.PA_VARCHAR2_30_TBL_TYPE();
    l_add_plan_task_id      NUMBER;

    CURSOR cur_wp_task_csr_duplicate (c_project_id pa_projects_all.project_id%TYPE,
                            c_pm_source_reference pa_proj_elements.pm_source_reference%TYPE) IS
    SELECT proj_element_id
    FROM   pa_proj_elements pelem
    WHERE  project_id  = c_project_id
    AND    pm_source_reference = c_pm_source_reference
    AND    exists(select 1
                     from pa_proj_structure_types pstype, pa_structure_types types
                     where pstype.proj_element_id = pelem.parent_structure_id
                     and pstype.structure_type_id = types.structure_type_id
                     and types.structure_type = p_structure_type);
    -- Amit Bug 3964548 End

    l_del_task_ver_ids      SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();

    cursor l_task_cur(p_project_id NUMBER) is
    select
    element_version_id,planned_effort,actual_start_date,actual_finish_date
    from pa_proj_elem_ver_schedule ppevs, pa_proj_elements ppe
    where ppevs.project_id = ppe.project_id
    and ppevs.proj_element_id = ppe.proj_element_id
    and ppe.object_type = 'PA_TASKS'
    and ppevs.project_id = p_project_id;
    /** cursor added by aditi for bug 4120380. This is added to verify if the task_number is being modified by AMG Update_project script,
    Only then we need to prefix the task_number with a '-', so as to prevent primary key violation, and sucessful update.**/
   /*bug#5243018 : Reverting the fix in Bug 4120380
    CURSOR cur_proj_elements_info(c_task_id pa_proj_elements.proj_element_id%TYPE)
                              IS
                              SELECT  element_number, name
                              FROM    pa_proj_elements
                              WHERE   proj_element_id = c_task_id;
      l_proj_elements_info    cur_proj_elements_info%ROWTYPE; */
    /** changes end for bug 4120380 by aditi **/
    l_task_cur_rec      l_task_cur%rowtype;

    l_taskin_rec        pa_project_pub.task_in_rec_type;
    l_taskout_rec       pa_project_pub.task_out_rec_type;

    l_i         NUMBER;
    --Added by rtarway for BUG 4059962
    l_financial_task_flag VARCHAR2(1);
    l_share_code          VARCHAR2(30);
    --Added by rtarway for BUG 4059962

    --Added by rtarway for BUG 4132590
     CURSOR check_hidden_assgn_exists(p_element_version_id IN NUMBER) IS
     SELECT 'Y'
     FROM pa_resource_assignments ra
     WHERE ra.ta_display_flag = 'N'
     AND ra.wbs_element_version_id = p_element_version_id
     AND rownum = 1;

     l_hidden_assgn VARCHAR2(1);
   --Added by rtarway for BUG 4132590
     l_fin_task_id NUMBER;
     l_fin_task_reference VARCHAR2(250);

/* Bug # 3420093 - Adding Progress Management modifications to create_project and update_project flow. */

-- Begin fix for Bug # 4373055.

l_str_ver_id            NUMBER:= null;
l_conc_request_id       NUMBER := null;
l_message_name  VARCHAR2(30) := null;
l_message_type  VARCHAR2(30) := null;

-- End fix for Bug # 4373055.

-- Addition for Bug 6458891
    cursor cur_prev_prog (p_project_id NUMBER, p_object_id NUMBER, p_object_version_id NUMBER) is
        select
        planned_effort, est_remaining_effort, completed_percentage
        from PA_TASK_PROGRESS_AMG_V
        where
        project_id = p_project_id
        and OBJECT_ID = p_object_id
        and OBJECT_VERSION_ID = p_object_version_id
        and STRUCTURE_TYPE_CLASS_CODE='WORKPLAN';

l_prev_planned_effort Number;
l_prev_etc_effort Number;
l_prev_percent_comp Number;
l_update_task_det_flag varchar2(1);

--  Bug 6717386
CURSOR cur_struc_ver_wp(c_project_id pa_projects_all.project_id%TYPE, c_structure_type pa_structure_types.structure_type%TYPE)
   IS
     SELECT c.element_version_id
       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
            ,pa_proj_elem_ver_structure d
      WHERE c.project_id = c_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = c_structure_type
        AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND d.status_code = 'STRUCTURE_WORKING';

l_struct_ver_id      pa_proj_element_versions.element_version_id%TYPE;
l_status_code        pa_proj_elements.status_code%type;
--  Bug 6717386

BEGIN

     IF p_commit = FND_API.G_TRUE THEN
             SAVEPOINT process_task_struc;
     END IF;

     IF p_init_msg_list = FND_API.G_TRUE THEN
          FND_MSG_PUB.initialize;
     END IF;

     x_msg_count := 0;
     x_return_status := FND_API.G_RET_STS_SUCCESS;
     l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

     -- Moved down this code during UT.
     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Entering PROCESS_TASK_STRUCTURE_BULK';
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                   l_debug_level2);

          --For bug 4252182
          pa_debug.set_curr_function( p_function   => 'PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK',
                                 p_debug_mode => l_debug_mode );

     END IF;

     -- Check for business rules violations
     IF l_debug_mode = 'Y' THEN

          pa_debug.g_err_stage:= 'Input parameter List :';
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);

          pa_debug.g_err_stage:= 'p_project_id : ' || p_project_id;
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);

          pa_debug.g_err_stage:= 'p_pm_product_code : ' || p_pm_product_code;
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);

          pa_debug.g_err_stage:= 'p_structure_type : ' || p_structure_type;
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);

          pa_debug.g_err_stage:= 'p_wp_str_exists : ' || p_wp_str_exists;
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);

          pa_debug.g_err_stage:= 'p_is_wp_separate_from_fn :' || p_is_wp_separate_from_fn;
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);

          pa_debug.g_err_stage:= 'p_is_wp_versioning_enabled :' || p_is_wp_versioning_enabled;
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);

          -- IUP: Impact of Update_project
          pa_debug.g_err_stage:= 'p_structure_version_id :' || p_structure_version_id;
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);

          pa_debug.g_err_stage:= 'p_sprocess_mode :' || p_process_mode;
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);

     END IF;


     IF l_debug_mode = 'Y' THEN

          pa_debug.g_err_stage:= 'Validating input parameters';
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                     l_debug_level3);
     END IF;

     IF  (p_project_id IS NULL) OR
         (p_pm_product_code IS NULL) OR
         (p_structure_type IS NULL) OR
         (p_wp_str_exists IS NULL) OR
         (p_is_wp_separate_from_fn IS NULL) OR
         (p_is_wp_versioning_enabled IS NULL)OR
         (p_process_mode IS NULL)
     THEN

          PA_UTILS.ADD_MESSAGE
                (p_app_short_name => 'PA',
                  p_msg_name     => 'PA_INV_PARAM_PASSED');  -- Bug 2955589. Changed the message name to
          RAISE Invalid_Arg_Exc_WP;                          -- have a generic message.

     END IF;

     -- The following check is not required in the create_project context, but will be required
     -- in the update_project context in case we are calling the api for publishing. Having
     -- this check as a placeholder for future changes.

     ---IUP:below code is commented out as calling api itself is taking care.
     /*
     open cur_pa_temp_import(p_project_id);
     fetch cur_pa_temp_import into l_dummy_char;
     IF cur_pa_temp_import%FOUND THEN
          IF l_debug_mode = 'Y' THEN
               pa_debug.g_err_stage:= 'Records found in PA_TEMP_IMPORT_TASKS - Returning';
               pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                          l_debug_level3);
          END IF;

          close cur_pa_temp_import;
          pa_debug.reset_curr_function;
          RETURN;
     END IF;
     close cur_pa_temp_import;*/


     -- IUP: Added the below if condition As the processing under this needs to be done only for update_project
     -- Following local variables are populated within this if condition
     --    l_structure_version_id
     --    l_structure_id
     --    l_task_unpub_ver_status_code
     --    l_add_task_security
     --    l_update_task_security populated only for update task case.
-- PA L Changes 3010538
    IF p_structure_type IS NOT NULL THEN

-- Begin fix for Bug # 4373055.

    /*

    l_process_code :=
                      PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_CODE(p_project_id => p_project_id
                                                                        ,p_structure_type => p_structure_type );
          IF nvl(l_process_code,'-1') = 'WUP' THEN

              IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
                   --Commented out as there is no message defined for amg corresponding to PA_PS_VD_UPDWBS_PRC_INPROC
                   --pa_interface_utils_pub.map_new_amg_msg
                   --  ( p_old_message_code => 'PA_PS_VD_UPDWBS_PRC_INPROC'
                   --   ,p_msg_attribute    => 'CHANGE'
                   --   ,p_resize_flag      => 'N'
                   --   ,p_msg_context      => 'GENERAL'
                   --   ,p_attribute1       => ''
                   --   ,p_attribute2       => ''
                   --   ,p_attribute3       => ''
                   --   ,p_attribute4       => ''
                   --   ,p_attribute5       => '');
                   l_request_id := PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_ID(p_project_id => p_project_id  -- Bug 3091798
                                                                                  ,p_structure_type => p_structure_type );

                   PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                      --   ,p_msg_name       => 'PA_PS_VD_UPDWBS_PRC_INPROC');Bug 3091798.
                                        ,p_msg_name       => 'PA_PS_UPDWBS_PRC_INPROC_AMG',  -- Bug 3091798. Message includes the request id.
                                         p_token1         => 'REQUESTID',
                                         p_value1         => l_request_id);


                   raise Invalid_Arg_Exc_WP;
              END IF ;
          ELSIF nvl(l_process_code,'-1') = 'WUE' THEN

              IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
                   l_request_id := PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_ID(p_project_id => p_project_id  --Bug 3091798
                                                                                  ,p_structure_type => p_structure_type );

                   --Commented out as there is no message defined for amg corresponding to PA_PS_VD_UPD_WBS_PRC_ERR
                   --pa_interface_utils_pub.map_new_amg_msg
                   --  ( p_old_message_code => 'PA_PS_VD_UPD_WBS_PRC_ERR'
                   --   ,p_msg_attribute    => 'CHANGE'
                   --   ,p_resize_flag      => 'N'
                   --   ,p_msg_context      => 'GENERAL'
                   --   ,p_attribute1       => ''
                   --   ,p_attribute2       => ''
                   --    ,p_attribute3       => ''
                   --   ,p_attribute4       => ''
                   --   ,p_attribute5       => '');
                   PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       --  ,p_msg_name       => 'PA_PS_VD_UPD_WBS_PRC_ERR');Bug 3091798.
                                        ,p_msg_name       => 'PA_PS_UPDWBS_PRC_ERR_AMG',  -- Bug 3091798. Message includes the request id.
                                         p_token1         => 'REQUESTID',
                                         p_value1         => l_request_id);

                  raise Invalid_Arg_Exc_WP;
              END IF;
          END IF;

      */

        PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_MSG(
        p_project_id              => p_project_id
        , p_structure_type        => p_structure_type
        , p_structure_version_id  => null
        , p_context               => 'UPDATE_AMG'
        , x_message_name          => l_message_name
        , x_message_type          => l_message_type
        , x_structure_version_id  => l_str_ver_id
        , x_conc_request_id       => l_conc_request_id);


        if l_message_name is not null then

                     PA_UTILS.ADD_MESSAGE(
                     p_app_short_name => 'PA'
                     , p_msg_name       => l_message_name
                     , p_token1         => 'REQUESTID'
                     , p_value1         => l_conc_request_id);

                      RAISE Invalid_Arg_Exc_WP;
        end if;

-- End fix for Bug # 4373055.

    END IF ;
-- PA L Changes 3010538

     IF (p_structure_version_id IS NOT NULL)
      THEN
          --IUP:Check whether the structure version passed is in a valid status
          l_str_status_code := PA_PROJECT_STRUCTURE_UTILS.get_structrue_version_status(
                                                       p_project_id                => p_project_id
                                                       ,p_structure_version_id     => p_structure_version_id );
          IF l_str_status_code IS NULL
          THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID' );
                  raise Invalid_Arg_Exc_WP;
          ELSIF l_str_status_code in ( 'STRUCTURE_SUBMITTED', 'STRUCTURE_REJECTED', 'STRUCTURE_APPROVED' )
          THEN
                  PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                       ,p_msg_name       => 'PA_PS_INV_STR_VER_ID2' );
                  raise Invalid_Arg_Exc_WP;
          END IF;

          IF l_debug_mode = 'Y' THEN
              pa_debug.g_err_stage := 'Structure is in a valid Status' ;
               pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
          END IF;

          l_structure_version_id := p_structure_version_id;

          -- get the structure id from structure version id
          OPEN  cur_elem_ver_to_task_id(l_structure_version_id);
          FETCH cur_elem_ver_to_task_id INTO l_structure_id;
          CLOSE cur_elem_ver_to_task_id;

          IF l_debug_mode = 'Y' THEN
               pa_debug.g_err_stage:= 'Structure id : '||l_structure_id;
               pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                          l_debug_level3);

               pa_debug.g_err_stage:= 'Structure version id : '|| l_structure_version_id;
               pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                          l_debug_level3);

          END IF;

/*
  Bug Fix 5263429
  Unable to delete the task from MSP.

  After succesful deletion of a task and the publishing of the structure, a new task is added to the current
  working version. And that the task was deleted and the MSP was returning a message saying 'Mark this task for deletion?'.
  Ideally this should be used for tasks which are present in the published versions as well. Only those tasks will be marked
  for deletion and during publishing those marked tasks will be deleted. All the other tasks which dont have any transactions
  and are not present in the published versions should be deleted right away and the MSP should not show any message.

Analysis:
---------
  This is happening due to value 'M' being returned from the PA_PROJECT_PUB.check_task_mfd APIs OUT param  p_check_task_mfd_flag.
  This was happening due to the value 'PUBLISHED' was populated in the task_unpub_ver_status_code column.
  When ever a task is created in MSP and sent to oracle projects the pa_project_pub.load_project and
  pa_project_pub.execute_update_project are called.

  The pa_project_pub.execute_update_project -> update_project API ...> PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK is called.

  Inside this API the following code is used to derive the value for task_unpub_ver_status_code  column.
  This is correct. But after this piece of code all the passed in tasks are processed in a loop. In the
  loop the same variable l_task_unpub_ver_status_code is used to get the other tasks status. Hence the
  earlier derived value for the new task is getting overridden with the other published task status.
  Had the tasks processing happned in such a way that (working) the newly added task is processed
  first then this is not an issue at all. Due to the published tasks presence the other value is overwritten
  and the same got stored for the new task.

Solution:
---------

  Moved the task status derivation code into the loop right before the insert into the element versions table.



          --IUP:get the status of newly created task under the passed structure version
          IF p_is_wp_separate_from_fn = 'N'
          THEN
              IF p_is_wp_versioning_enabled = 'Y'
              THEN
                   l_task_unpub_ver_status_code := 'WORKING';
              ELSE
                   l_task_unpub_ver_status_code := 'PUBLISHED';
              END IF;
          ELSE ---split
               IF p_structure_type = 'FINANCIAL'
               THEN
                   l_task_unpub_ver_status_code := 'PUBLISHED';
               ELSE --workplan only
                   IF p_is_wp_versioning_enabled = 'Y'
                   THEN
                       l_task_unpub_ver_status_code := 'WORKING';
                   ELSE
                       l_task_unpub_ver_status_code := 'PUBLISHED';
                   END IF;
               END IF;
          END IF;

*/

          --IUP:getting the security function allowed into local variables.
          PA_PM_FUNCTION_SECURITY_PUB.check_function_security
                      (p_api_version_number => 1.0,
                       p_responsibility_id  => FND_GLOBAL.Resp_id,
                       p_function_name      => 'PA_PM_ADD_TASK',
                       p_msg_count          => x_msg_count,
                       p_msg_data           => x_msg_data,
                       p_return_status      => x_return_status,
                       p_function_allowed   => l_add_task_security);

          IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                IF l_debug_mode = 'Y' THEN
                   pa_debug.g_err_stage := 'Error obtaining the value of add task function allowed' ;
                   pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                 END IF;
                 RAISE Invalid_Arg_Exc_WP;
            END IF;

            PA_PM_FUNCTION_SECURITY_PUB.check_function_security
                      (p_api_version_number => 1.0,
                       p_responsibility_id  => FND_GLOBAL.Resp_id,
                       p_function_name      => 'PA_PM_UPDATE_TASK',
                       p_msg_count          => x_msg_count,
                       p_msg_data           => x_msg_data,
                       p_return_status      => x_return_status,
                       p_function_allowed   => l_update_task_security);

          IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              IF l_debug_mode = 'Y' THEN
                   pa_debug.g_err_stage := 'Error obtaining the value of update task function allowed' ;
                   pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
               END IF;
               RAISE Invalid_Arg_Exc_WP;
          END IF;

     ELSE  -- IF (p_structure_version_id IS NOT NULL) create project case

          l_add_task_security := 'Y'; /* this check is already done in create proejct */

          -- get structure id and structure version id and
          -- If auto publish upon creation is on and versioning is enabled then
          -- update the workplan structure as working bcoz it is created as pub by copy structure.

          DECLARE
             -- We dont require this local var anymore. Bug 2955589.
             --l_auto_publish_flag             VARCHAR2(1);
             --l_source_template_flag          VARCHAR2(1);
          BEGIN
               /*   Bug  2955589. As the update is taken care in Copy_Structures_bulk API, the following
                    cursor need not be opened.

               open cur_auto_pub_flag(p_project_id);
               fetch cur_auto_pub_flag into l_auto_publish_flag;
               close cur_auto_pub_flag;

               IF l_debug_mode = 'Y' THEN
                    pa_debug.g_err_stage:= 'Auto publish flag : '||l_auto_publish_flag;
                    pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                               l_debug_level3);
               END IF;
               */

               -- This condition included after UT.
               IF p_structure_type = 'FINANCIAL' THEN
                    open get_structure(p_project_id, 'FINANCIAL');
                    fetch get_structure into l_structure_id;
                    close get_structure;
               ELSE -- structure type is WORKPLAN
                    open get_structure(p_project_id, 'WORKPLAN');
                    fetch get_structure into l_structure_id;
                    close get_structure;
               END IF;

               IF l_debug_mode = 'Y' THEN
                    pa_debug.g_err_stage:= 'Structure id : '||l_structure_id;
                    pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                               l_debug_level3);
               END IF;

               /*   Bug 2955589. The following code is taken care of in Copy_Structures_bulk API.
               --ADUT. This cursor will not be opened in the update project context.
               open cur_template_flag(p_source_project_id);
               fetch cur_template_flag into l_source_template_flag;
               close cur_template_flag;

               --IF p_structure_type = 'WORKPLAN' and
               IF p_wp_str_exists = 'Y' and --ADUT
                  nvl(l_auto_publish_flag,'N') = 'Y' and
                  nvl(p_is_wp_versioning_enabled,'N') = 'Y' and
                  l_source_template_flag = 'Y' --ADUT
               THEN

                    UPDATE pa_proj_elem_ver_structure
                       set status_code = 'STRUCTURE_WORKING'
                     where project_id = p_project_id
                       and proj_element_id = l_structure_id;

                    IF l_debug_mode = 'Y' THEN
                         pa_debug.g_err_stage:= 'No of updated records :' || sql%rowcount || ' for structure : ' || l_structure_id;
                         pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                                    l_debug_level3);
                    END IF;

               END IF;

               */
               -- Obtain the structure version id to proceed with the processing.
               PA_PROJ_ELEMENTS_UTILS.GET_STRUCTURE_INFO(
                     p_project_id                 => p_project_id
                    ,p_structure_type             => p_structure_type
                    ,p_structure_id               => l_structure_id
                    ,p_is_wp_separate_from_fn     => p_is_wp_separate_from_fn
                    ,p_is_wp_versioning_enabled   => p_is_wp_versioning_enabled
                    ,x_structure_version_id       => l_structure_version_id
                    ,x_task_unpub_ver_status_code => l_task_unpub_ver_status_code
                    ,x_return_status              => x_return_status
                    ,x_msg_count                  => x_msg_count
                    ,x_msg_data                   => x_msg_data
                    );

               IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    IF l_debug_mode = 'Y' THEN
                       pa_debug.g_err_stage := 'Error obtaining the structure version id' ;
                       pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                    END IF;
                    RAISE Invalid_Arg_Exc_WP;
               END IF;

               IF l_debug_mode = 'Y' THEN
                    pa_debug.g_err_stage:= 'Structure version id : '||l_structure_version_id;
                    pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                               l_debug_level3);
                    pa_debug.g_err_stage:= 'Task unpublished version status code : '||l_task_unpub_ver_status_code;
                    pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                               l_debug_level3);
               END IF;
          END;

     END IF; -- End for if p_structure_version_id is null

     -- Bug 3075609. Determine if we want to maintain the task weightages during the program
     -- flow or they will be recalculated at the end of the flow.
     l_task_weight_basis_code := PA_PROGRESS_UTILS.GET_TASK_WEIGHTING_BASIS(p_project_id => p_project_id) ;

     -- In the following conditions we will be recalculating the weightages completely. So we need to
     -- take care of the rest of the scenarios. Where we need not take care we will just set the task
     -- weightage to 0.
     IF  NOT (
              ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'N' AND
                nvl(l_task_weight_basis_code,'-1') <> 'MANUAL'
              ) OR
              ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
                PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'   AND
                PA_PROJECT_PUB.G_Published_version_exists = 'N' AND
                nvl(l_task_weight_basis_code,'-1') <> 'MANUAL'
              ) OR
              (
                nvl(l_task_weight_basis_code,'-1') = 'MANUAL' AND
                p_structure_version_id is NULL
              )
             )
     THEN
            l_maintain_weightages    := 'Y';
     ELSE
            l_maintain_weightages    := 'N';
     END IF;

     -- Initialize l_top_task_cnt to 0. This denotes the number of top tasks processed
     -- at any point in this API. This is used to calculate the wbs number of the top task.
     -- Intialize l_disp_seq to 0. This is used to determines the display sequence of the currenly
     -- processed task.

     l_top_task_count := 0;
     l_disp_seq       := 0;

     ----Added for bug 3057575 :
     l_hierarchy_count     := 1;

     -- Get the default task type id. In workplan context, when we create a schedule
     -- version we check if the task type allows for non null work quantity. If the task type
     -- is passed as null in the input task record, we use the default task type id derived
     -- below.
     l_default_task_type_id := PA_PROJ_ELEMENTS_UTILS.GET_DEFAULT_TASK_TYPE_ID;

     -- Get the segment1 for the project. Used to show context for error messages.
     open l_amg_project_csr(p_project_id);
     fetch l_amg_project_csr into l_amg_segment1;
     close l_amg_project_csr;

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Entering Loop';
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                                         l_debug_level3);
     END IF;
     -- Do the processing for all the tasks in the plsql table.

     --Added by rtarway for BUG 4320731
     task_ver_id_passed_tbl.delete;

     IF nvl(p_tasks_in_tbl.last,0) > 0 THEN
          l_shared := PA_PROJECT_STRUCTURE_UTILS.Check_Sharing_Enabled(p_project_id); -- Added for bug#3451073
          FOR i in p_tasks_in_tbl.first..p_tasks_in_tbl.last LOOP

               -- Reset the locals at the beginning of the loop.
               l_parent_task_id         := null;
               l_task_in_rec            := p_tasks_in_tbl(i);

                --Bug 6153503
               l_attribute1  :=  null;
               l_attribute2  :=  null;
               l_attribute3  :=  null;
               l_attribute4  :=  null;
               l_attribute5  :=  null;
               l_attribute6  :=  null;
               l_attribute7  :=  null;
               l_attribute8  :=  null;
               l_attribute9  :=  null;
               l_attribute10 :=  null;
               l_attribute11  :=  null;
               l_attribute12  :=  null;
               l_attribute13  :=  null;
               l_attribute14  :=  null;
               l_attribute15  :=  null;

               -- Bug 2982072. Derive the task id if task reference only is passed.
               -- Currently the api differenciates the task create / update contexts only based
               -- on the task_id in the input plsql table which is not correct. The user doesnot pass
               -- the task ids even for existing tasks but just passes the task reference. We have to
               -- derive the task id from the task reference.
               -- Irrespective of the structure type we always query for the proj elements table for
               -- the task id given the task reference.
               DECLARE
/* Bug 3588013 - Added the exists clause for this bug to get proj_element_id for the correct structure
             Task Reference should be unique with in structure.
*/
                    CURSOR cur_wp_task_csr (c_project_id pa_projects_all.project_id%TYPE,
                                            c_pm_source_reference pa_proj_elements.pm_source_reference%TYPE) IS
                       SELECT proj_element_id
                       FROM   pa_proj_elements pelem
                       WHERE  project_id  = c_project_id
                       AND    pm_source_reference = c_pm_source_reference
                       AND    exists(select 1
                              from pa_proj_structure_types pstype, pa_structure_types types
                              where pstype.proj_element_id = pelem.parent_structure_id
                      and pstype.structure_type_id = types.structure_type_id
                   and types.structure_type = p_structure_type);
               BEGIN
                    IF (l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                        l_task_in_rec.pa_task_id IS NULL )
                    THEN
                        IF  l_task_in_rec.pm_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR
                            l_task_in_rec.pm_task_reference IS NULL
                        THEN
                              IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                              THEN
                                pa_interface_utils_pub.map_new_amg_msg
                                  ( p_old_message_code => 'PA_TASK_REF_AND_ID_MISSING'
                                   ,p_msg_attribute    => 'CHANGE'
                                   ,p_resize_flag      => 'N'
                                   ,p_msg_context      => 'PROJ'
                                   ,p_attribute1       => l_amg_segment1
                                   ,p_attribute2       => ''
                                   ,p_attribute3       => ''
                                   ,p_attribute4       => ''
                                   ,p_attribute5       => '');
                              END IF;
                              px_tasks_out_tbl(i).return_status :=  FND_API.G_RET_STS_ERROR ;
                              RAISE Invalid_Arg_Exc_WP;
                        ELSE
                              -- We need the differenciator only in the update project context.
                              -- This is not done in create context to avoid cursor opening for each task.
                              IF p_structure_version_id is not null THEN
                                   OPEN cur_wp_task_csr(p_project_id,l_task_in_rec.pm_task_reference);
                                   FETCH cur_wp_task_csr INTO l_task_in_rec.pa_task_id;
                                   CLOSE cur_wp_task_csr;
                              END IF;
                        END IF;
                    END IF;
               END;
               -- End fix for Bug 2982072.

               -- Included the following initializations after UT.
               -- In the absence of these we will get unique constraint violation.
               l_task_version_id        := null;
               l_relationship_id        := null;
               l_proj_elem_ver_rvn      := null;
               l_proj_elem_ver_rowid    := null;
               l_obj_rel_rvn            := null;

               -- Initialize the return status for the task record to success.
               px_tasks_out_tbl(i).return_status       := FND_API.G_RET_STS_SUCCESS;


               -- Validation block
               -- validate security, task_reference and task names in appropriate contexts.
               IF l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                  l_task_in_rec.pa_task_id IS NULL -- new tasks to be crated
               THEN
                    -- Added to check the security as it is not done when called from update_project
                    IF l_add_task_security = 'N'
                    THEN
                         pa_interface_utils_pub.map_new_amg_msg(
                                p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
                                ,p_msg_attribute    => 'CHANGE'
                                ,p_resize_flag      => 'Y'
                                ,p_msg_context      => 'GENERAL'
                                ,p_attribute1       => ''
                                ,p_attribute2       => ''
                                ,p_attribute3       => ''
                                ,p_attribute4       => ''
                                ,p_attribute5       => '');
                         RAISE Invalid_Arg_Exc_WP;
                    END IF;
                    --rtarway, for DHI ER, BUG 4413568
            IF (PA_PROJECT_PUB.G_TASK_STR_UPDATE_MODE  = 'PA_UPD_TASK_ATTR') THEN   --bug 4534919
            PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
            p_msg_name => 'PA_WBS_CANT_CHANGE');
            RAISE Invalid_Arg_Exc_WP;
            END IF;
                    -- task reference and task names need to be validated only for workplan cases. For financial cases
                    -- these validations are done in add_task_round_one/two.
                    IF p_structure_type = 'WORKPLAN' THEN

                         -- Task reference should be non null in AMG flow. For financial tasks this
                         -- is checked in add_task_round_one API.
                         IF l_task_in_rec.pm_task_reference IS NULL
                         OR l_task_in_rec.pm_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                         THEN
                              IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                              THEN
                                 pa_interface_utils_pub.map_new_amg_msg
                                  ( p_old_message_code => 'PA_TASK_REF_IS_NULL'
                                   ,p_msg_attribute    => 'CHANGE'
                                   ,p_resize_flag      => 'N'
                                   ,p_msg_context      => 'PROJ'
                                   ,p_attribute1       => l_amg_segment1
                                   ,p_attribute2       => ''
                                   ,p_attribute3       => ''
                                   ,p_attribute4       => ''
                                   ,p_attribute5       => '');
                              END IF;
                              px_tasks_out_tbl(i).return_status := FND_API.G_RET_STS_ERROR;
                              RAISE Invalid_Arg_Exc_WP;
                         END IF;

                         --ADUT. The task name cannot be null. For financial tasks this is
                         --checked in add_task_round_one API.
                         IF l_task_in_rec.task_name IS NULL
                         OR l_task_in_rec.task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                         THEN

                              IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                              THEN
                                 pa_interface_utils_pub.map_new_amg_msg
                                  ( p_old_message_code => 'PA_TASK_NAME_IS_NULL'
                                   ,p_msg_attribute    => 'CHANGE'
                                   ,p_resize_flag      => 'N'
                                   ,p_msg_context      => 'TASK'
                                   ,p_attribute1       => l_amg_segment1
                                   ,p_attribute2       => l_task_in_rec.pm_task_reference
                                   ,p_attribute3       => ''
                                   ,p_attribute4       => ''
                                   ,p_attribute5       => '');
                              END IF;

                              px_tasks_out_tbl(i).return_status := FND_API.G_RET_STS_ERROR;
                              RAISE Invalid_Arg_Exc_WP;
                         END IF;
                    END IF; -- IF p_structure_type = 'WORKPLAN' THEN

               -- for update case only security check is required.
               ELSE -- IF l_task_in_rec.pa_task_id IS NULL

                    IF l_update_task_security = 'N'
                    THEN
                         pa_interface_utils_pub.map_new_amg_msg(
                                p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
                                ,p_msg_attribute    => 'CHANGE'
                                ,p_resize_flag      => 'Y'
                                ,p_msg_context      => 'GENERAL'
                                ,p_attribute1       => ''
                                ,p_attribute2       => ''
                                ,p_attribute3       => ''
                                ,p_attribute4       => ''
                                ,p_attribute5       => '');
                         RAISE Invalid_Arg_Exc_WP;
                    END IF;

               END IF; -- IF l_task_in_rec.pa_task_id IS NULL

               IF l_debug_mode = 'Y' THEN
                    pa_debug.g_err_stage:= 'Done with the validations';
                    pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                               l_debug_level3);
               END IF;

               -- This block does following:
               -- 1. Populate l_cur_pa_tasks_rec which has task_number, long_task_name, description, parent_task_id
               --    carrying_out_organization_id, pm_task_reference, address_id, task_manager_person_id
               -- 2. l_parent_task_id
               -- 3. l_task_id -- the task that is being processed.
               -- l_proj_elem_rvn of record of pa_proj_elements to be updated
               -- before calling api PA_TASK_PUB1.update_task

               IF l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                  l_task_in_rec.pa_task_id IS NULL -- new tasks to be crated
               THEN

                    -- If the structure type is workplan we need to derive the values for certain fields. For financial
                    -- context they have already been done and is available in the database - So we'll just query it up.
                    IF p_structure_type = 'WORKPLAN' THEN

                         -- Derive the task number for the current task
                         IF l_task_in_rec.pa_task_number = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.pa_task_number IS NULL
                         THEN
                            l_cur_pa_tasks_rec.task_number := l_task_in_rec.pm_task_reference;
                        --                         ELSE  Bug 6193314  need to comment out
			     /* bug#5243018 : Reverting the fix in Bug 4120380
                            l_cur_pa_tasks_rec.task_number := '-'||l_task_in_rec.pa_task_number; -- Bug 4120380 aditi l_task_in_rec.pa_task_number; */
			      --  l_cur_pa_tasks_rec.task_number := l_task_in_rec.pa_task_number;  -- Bug 6193314  need to comment out
                /* any new task being created will also be prefixed with '-'. This is for the case below:
                 1.0
                   1.1
                             2.0    .
                 If we insert a new top task , specifying its task_number as 1.1, and update 1.1 to 2.0 and 2.0 to 3.0.*/
                         END IF;

                         -- Derive the parent task id
                         IF (l_task_in_rec.pa_parent_task_id IS NOT NULL
                             AND l_task_in_rec.pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                         THEN
                              l_cur_pa_tasks_rec.parent_task_id := l_task_in_rec.pa_parent_task_id;
                         ELSIF (l_task_in_rec.pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                AND l_task_in_rec.pm_parent_task_reference IS NOT NULL)
                         THEN
                              --convert pm_parent_task_reference to parent_task_id.
                              --All the parent tasks are created first then child tasks are created. See TRM for AMG load_task api.

                              -- 3721124 changed function call from  PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref
                              -- to PA_PROJECT_PVT.Convert_pm_taskref_to_id_all to retrieve task id for task reference
                              -- because PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref may return financial task id
                              -- in case of SHARED structure
                              -- new api call takes structure type as parameter, so it will return task id for the passed structure type only

                              -- PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref(
                              --       p_pm_parent_task_reference      =>  l_task_in_rec.pm_parent_task_reference
                              --      ,p_project_id                    =>  p_project_id
                              --      ,x_parent_task_id                =>  l_cur_pa_tasks_rec.parent_task_id
                              --      ,x_return_status                 =>  x_return_status
                              --    );

                                 PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                                          p_pa_project_id      => p_project_id
                                        , p_structure_type     => 'WORKPLAN'
                                     --   3721124 p_pa_task_id will be null in this context
                                     -- , p_pa_task_id         => l_cur_pa_tasks_rec.parent_task_id
                                        , p_pm_task_reference  => l_task_in_rec.pm_parent_task_reference
                                        , p_out_task_id        => l_cur_pa_tasks_rec.parent_task_id
                                        , p_return_status      => x_return_status );

                              px_tasks_out_tbl(i).return_status := x_return_status;
                              IF x_return_status <> FND_API.G_RET_STS_SUCCESS
                              THEN
                                   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                                   THEN
                                              pa_interface_utils_pub.map_new_amg_msg
                                              ( p_old_message_code => 'PA_PARENT_TASK_MISSING'
                                               ,p_msg_attribute    => 'CHANGE'
                                               ,p_resize_flag      => 'N'
                                               ,p_msg_context      => 'TASK'
                                               ,p_attribute1       => l_amg_segment1
                                               ,p_attribute2       => l_cur_pa_tasks_rec.task_number
                                               ,p_attribute3       => ''
                                               ,p_attribute4       => ''
                                               ,p_attribute5       => '');
                                   END IF;
                                   RAISE Invalid_Arg_Exc_WP;
                              END IF;
                         ELSE  -- no parent task information provided for the current task.
                               -- Current task is a top task. parent id is null.
                              l_cur_pa_tasks_rec.parent_task_id := null;
                         END IF;

                         -- Included the condition during UT to avoid precision errors.
                         IF l_task_in_rec.carrying_out_organization_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                              l_cur_pa_tasks_rec.carrying_out_organization_id     := NULL;
                         ELSE
                              l_cur_pa_tasks_rec.carrying_out_organization_id     := l_task_in_rec.carrying_out_organization_id;
                         END IF;

                         -- Included the condition during UT to avoid precision errors.
                         IF l_task_in_rec.address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                              l_cur_pa_tasks_rec.address_id                       := NULL;
                         ELSE
                              l_cur_pa_tasks_rec.address_id                       := l_task_in_rec.address_id;
                         END IF;
                         -- Included the condition during UT to avoid precision errors.
                         IF l_task_in_rec.task_manager_person_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                              l_cur_pa_tasks_rec.task_manager_person_id           := NULL;
                         ELSE
                              l_cur_pa_tasks_rec.task_manager_person_id           := l_task_in_rec.task_manager_person_id;
                         END IF;
                         l_task_id       := NULL;  -- null for workplan create task case.
                         l_cur_pa_tasks_rec.pm_task_reference                := l_task_in_rec.pm_task_reference;
               /*Commented for bug  2982057 l_cur_pa_tasks_rec.long_task_name                   := l_task_in_rec.long_task_name;*/
             /* Code addition for bug 2982057 starts */

            if l_task_in_rec.long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.long_task_name IS NULL then
                l_cur_pa_tasks_rec.long_task_name                   := l_task_in_rec.task_name;
             else
                            l_cur_pa_tasks_rec.long_task_name                   := l_task_in_rec.long_task_name;
             end if;

             /* Code addition for bug 2982057 ends */

                         l_cur_pa_tasks_rec.description                      := l_task_in_rec.task_description;

                    ELSE -- structure type is financial
                         IF l_debug_mode = 'Y' THEN
                              pa_debug.g_err_stage:= 'Task Id in out table: '||px_tasks_out_tbl(i).pa_task_id;
                              pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                                         l_debug_level3);
                         END IF;

                         l_task_id  := px_tasks_out_tbl(i).pa_task_id;
                         open cur_pa_tasks(p_project_id,l_task_id);
                         fetch cur_pa_tasks into l_cur_pa_tasks_rec;
                         close cur_pa_tasks;

                         IF l_debug_mode = 'Y' THEN
                              pa_debug.g_err_stage:= 'Task Id in local var '|| l_task_id;
                              pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                                         l_debug_level3);
                         END IF;
                          /** Code changes for bug 4120380. For new tasks similar case mentioned above for workplan.**/
			  /* bug#5243018 : Reverting the fix in Bug 4120380
            IF l_task_in_rec.pa_task_number IS NOT NULL AND
                            l_task_in_rec.pa_task_number <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                        THEN
                          l_cur_pa_tasks_rec.task_number := '-'||l_task_in_rec.pa_task_number;
             END IF; */
                      /**  Code end for bug 4120380 by aditi **/
                    END IF;

                    l_parent_task_id := l_cur_pa_tasks_rec.parent_task_id;

                    IF l_debug_mode = 'Y' THEN
                         pa_debug.g_err_stage:= 'Parent Task Id : '||l_parent_task_id;
                         pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                                    l_debug_level3);
                         pa_debug.g_err_stage:= 'Task Number : '||l_cur_pa_tasks_rec.task_number;
                         pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                                    l_debug_level3);
                    END IF;

                    l_WBS_changed_flag := 'Y';   --bug 3010538

               ELSE -- IF l_task_in_rec.pa_task_id IS NULL

                    -- If the structure type is workplan we need to derive the values for parent task id . For financial
                    -- context they have already been done and is available in the database - So we'll just query it up.
                    IF p_structure_type = 'WORKPLAN' THEN

                         -- Derive the parent task id
                         IF (l_task_in_rec.pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                              AND l_task_in_rec.pa_parent_task_id IS NOT NULL)
                          THEN
                              l_cur_pa_tasks_rec.parent_task_id := l_task_in_rec.pa_parent_task_id;

                         ELSIF (l_task_in_rec.pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                              AND l_task_in_rec.pm_parent_task_reference IS NOT NULL)
                          THEN
                              --convert pm_parent_task_reference to parent_task_id.
                              --All the parent tasks are created first then child tasks are created. See TRM for AMG load_task api.

                              -- 3721124 changed function call from  PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref
                              -- to PA_PROJECT_PVT.Convert_pm_taskref_to_id_all to retrieve task id for task reference
                              -- because PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref may return financial task id
                              -- in case of SHARED structure
                              -- new api call takes structure type as parameter, so it will return task id for the passed structure type only

                              --PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref(
                              --   p_pm_parent_task_reference      =>  l_task_in_rec.pm_parent_task_reference
                              --  ,p_project_id                    =>  p_project_id
                              --  ,x_parent_task_id                =>  l_cur_pa_tasks_rec.parent_task_id
                              --  ,x_return_status                 =>  x_return_status
                              --  );


                                PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                                      p_pa_project_id      => p_project_id
                                    , p_structure_type     => 'WORKPLAN'
                                 --   3721124 p_pa_task_id will be null in this context
                                 -- , p_pa_task_id         => l_cur_pa_tasks_rec.parent_task_id
                                    , p_pm_task_reference  => l_task_in_rec.pm_parent_task_reference
                                    , p_out_task_id        => l_cur_pa_tasks_rec.parent_task_id
                                    , p_return_status      => x_return_status );

                              px_tasks_out_tbl(i).return_status := x_return_status;
                              IF x_return_status <> FND_API.G_RET_STS_SUCCESS
                               THEN
                                   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                                    THEN
                                        pa_interface_utils_pub.map_new_amg_msg
                                             ( p_old_message_code => 'PA_PARENT_TASK_MISSING'
                                             ,p_msg_attribute    => 'CHANGE'
                                             ,p_resize_flag      => 'N'
                                             ,p_msg_context      => 'TASK'
                                             ,p_attribute1       => l_amg_segment1
                                             ,p_attribute2       => l_cur_pa_tasks_rec.task_number
                                             ,p_attribute3       => ''
                                             ,p_attribute4       => ''
                                             ,p_attribute5       => '');
                                   END IF;
                                   Raise Invalid_Arg_Exc_WP;
                              END IF;
                         ELSIF (l_task_in_rec.pm_parent_task_reference IS NULL)
                          THEN --Also the values in l_task_in_rec.parent_task_id is null or miss_num so move it as top task
                              l_cur_pa_tasks_rec.parent_task_id := null;

                         ELSE -- when l_task_in_rec.pm_parent_task_reference is miss_char
                              -- no parent task information provided for the current task.
                              -- get parent information from database
                              DECLARE

                                   l_task_ver_id_tmp             pa_proj_element_versions.element_version_id%TYPE;
                                   l_dummy_number                NUMBER;
                                   l_db_parent_task_ver_id_tmp   pa_proj_element_versions.element_version_id%TYPE;
                                   l_relationship_id_tmp         pa_object_relationships.object_relationship_id%TYPE;

                              BEGIN

                                   OPEN cur_pa_task_ver( l_structure_version_id, l_task_in_rec.pa_task_id );
                                   FETCH cur_pa_task_ver INTO l_task_ver_id_tmp, l_dummy_number;
                                   CLOSE cur_pa_task_ver;

                                   --Get the database parent task version id
                                   OPEN cur_parent_object_rel( l_task_ver_id_tmp );
                                   FETCH cur_parent_object_rel INTO l_db_parent_task_ver_id_tmp,l_relationship_id_tmp,l_dummy_number,
                                                                    l_dummy_number; -- Bug 3075609. Reflected the change in cursor.
                                   CLOSE cur_parent_object_rel;

                                   --Get the parent task id from parent task version id
                                   OPEN cur_elem_ver_to_task_id(l_db_parent_task_ver_id_tmp ) ;
                                   FETCH cur_elem_ver_to_task_id INTO l_cur_pa_tasks_rec.parent_task_id;
                                   CLOSE cur_elem_ver_to_task_id;
                              END;

                         END IF;
                         DECLARE
                              -- Bug 2982072. The following cursor is used to obtain the task name
                              -- and number for a given task element from the database. These will be used
                              -- if the user has not passed any value for these parameters.
                              CURSOR cur_proj_elem_info(c_task_id pa_proj_elements.proj_element_id%TYPE)
                              IS
                              SELECT  element_number, name
                              FROM    pa_proj_elements
                              WHERE   proj_element_id = c_task_id;

                              l_proj_elem_info    cur_proj_elem_info%ROWTYPE;
                         BEGIN
                              -- Bug 2982072. Open the cursor only if any of task number or name needs to
                              -- be fetched for the task.
                              IF (l_task_in_rec.pa_task_number is null OR
                                  l_task_in_rec.pa_task_number = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) OR
                                  (l_task_in_rec.long_task_name is null OR
                                  l_task_in_rec.long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                              THEN
                                   OPEN  cur_proj_elem_info(l_task_in_rec.pa_task_id);
                                   FETCH cur_proj_elem_info into l_proj_elem_info;
                                   CLOSE cur_proj_elem_info;

                              END IF;

                              -- Bug 2982072. If task number and task name are passed as null then
                              -- obtain the values from the database and use them in update_task api.
                              IF l_task_in_rec.pa_task_number is null OR
                                 l_task_in_rec.pa_task_number = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                              THEN
                                      -- l_task_in_rec.pa_task_number := SUBSTRB(l_proj_elem_info.element_number,1,25); -- Substrb added for Bug 5152448
 	                                    l_task_in_rec.pa_task_number := l_proj_elem_info.element_number; -- Substrb removed for Bug 6193314
                                 /** added for Bug 4120380 **/
			       /* bug#5243018 : Reverting the fix in Bug 4120380
                              ELSE
                    OPEN  cur_proj_elem_info(l_task_in_rec.pa_task_id);
                                FETCH cur_proj_elem_info into l_proj_elem_info;
                                CLOSE cur_proj_elem_info;
                 --dbms_output.put_line(('Value of l_proj_elem_info.element_number'||l_proj_elem_info.element_number);
				If l_task_in_rec.pa_task_number <> SUBSTRB(l_proj_elem_info.element_number,1,25) THEN -- Substrb added for Bug 5152448
                                    l_task_in_rec.pa_task_number := '-'||l_task_in_rec.pa_task_number;
                                End if; */
                /** end of changes for Bug 4120380  **/
                              END IF;

                              IF l_task_in_rec.long_task_name is null OR
                                 l_task_in_rec.long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                              THEN
                  /* Start of changes for bug 4503580 */
                                   -- l_task_in_rec.long_task_name := NVL(l_task_in_rec.task_name, l_proj_elem_info.name); --bug 3969651
                   IF l_task_in_rec.task_name is null OR
                                      l_task_in_rec.task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                   THEN
                                      l_task_in_rec.long_task_name := l_proj_elem_info.name;
                   ELSE
                      l_task_in_rec.long_task_name := l_task_in_rec.task_name;
                   END IF;
                  /* End of changes for bug 4503580 */
                            /* Redundant but added for clarity -Added the else condition for bug 2982057*/
                              ELSE
                                   l_task_in_rec.long_task_name := l_task_in_rec.long_task_name;
                              END IF;
                         END;

                    ELSE--financial
                         open cur_pa_tasks(p_project_id,l_task_in_rec.pa_task_id);
                         fetch cur_pa_tasks into l_cur_pa_tasks_rec;
                         close cur_pa_tasks;

                         -- Bug 2982072. If task number and task name are passed as null then
                         -- obtain the values from the database and use them in update_task api.
                         IF l_task_in_rec.pa_task_number is null OR
                            l_task_in_rec.pa_task_number = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                         THEN
                              l_task_in_rec.pa_task_number := l_cur_pa_tasks_rec.task_number;
                          /* Code added for bug 4120380 **/
			   /* bug#5243018 : Reverting the fix in Bug 4120380
                          ELSE
                          OPEN  cur_proj_elements_info(l_task_in_rec.pa_task_id);
                          FETCH cur_proj_elements_info into l_proj_elements_info;
                          CLOSE cur_proj_elements_info;
			  If l_task_in_rec.pa_task_number <> SUBSTRB(l_proj_elements_info.element_number,1,25) THEN -- Substrb added for Bug 5152448
                                l_task_in_rec.pa_task_number := '-'||l_task_in_rec.pa_task_number;
                          End if; */
            /* Code end for bug 4120380 **/
                         END IF;

                         IF l_task_in_rec.long_task_name is null OR
                            l_task_in_rec.long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                         THEN
                              l_task_in_rec.long_task_name := l_cur_pa_tasks_rec.long_task_name;
                        /* Redundant but added for clarity -Added the else condition for bug 2982057*/
                         ELSE
                  l_task_in_rec.long_task_name := l_task_in_rec.long_task_name;
                         END IF;

                    END IF;
                    l_parent_task_id := l_cur_pa_tasks_rec.parent_task_id;
                    l_task_id        := l_task_in_rec.pa_task_id;

		    l_Share_Code := PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(p_project_id);
		    IF ((l_Share_Code = 'SHARE_PARTIAL') and (l_parent_task_id is null OR
			      l_parent_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )) --bug#8647597
			THEN
				l_parent_task_id := l_task_in_rec.pa_parent_task_id;
		    END IF;

               END IF; -- before calling create or update TASK


               -- In the following block the create task or update_task APIs are called.
               -- After call to these APIs populate following
               -- px_tasks_out_tbl(i).pa_task_id
               -- px_tasks_out_tbl(i).pm_task_reference
               -- for workplan create task case l_task_id is output from create task API
               IF l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                  l_task_in_rec.pa_task_id IS NULL -- Create Task Context
                THEN
                    IF p_create_task_version_only = 'N' THEN

                          IF l_debug_mode = 'Y' THEN
                            pa_debug.g_err_stage := 'Calling API PA_TASK_PUB1.create_task';
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level3);
                          END IF;

                          PA_TASK_PUB1.create_task(
                               p_api_version           => p_api_version_number
                              ,p_commit                => p_commit
                              ,p_validate_only         => FND_API.G_FALSE
                              ,p_calling_module        => p_calling_module
                              ,p_debug_mode            => l_debug_mode
                              ,p_init_msg_list         => FND_API.G_FALSE
                              ,p_object_type           => 'PA_TASKS'
                              ,p_project_id            => p_project_id
                              ,p_structure_id          => l_structure_id
                             ,p_task_number           => l_task_in_rec.pa_task_number -- l_cur_pa_tasks_rec.task_number bug 6193314
                              ,p_task_name             => l_cur_pa_tasks_rec.long_task_name
                              ,p_task_description      => l_cur_pa_tasks_rec.description
                              ,p_location_id           => l_cur_pa_tasks_rec.address_id
                              ,p_task_manager_id       => l_cur_pa_tasks_rec.task_manager_person_id
                              ,p_carrying_out_org_id   => l_cur_pa_tasks_rec.carrying_out_organization_id
                              ,p_priority_code         => l_task_in_rec.priority_code
                              ,p_TYPE_ID               => l_task_in_rec.task_type
                              ,p_status_code           => l_task_in_rec.status_code
                              ,p_inc_proj_progress_flag=> l_task_in_rec.inc_proj_progress_flag
                              ,p_pm_product_code       => p_pm_product_code
                              ,p_pm_task_reference     => l_cur_pa_tasks_rec.pm_task_reference
                              ,p_closed_date           => l_task_in_rec.closed_date
                              ,p_link_task_flag        => l_task_in_rec.link_task_flag
                              ,P_UOM_CODE              => l_task_in_rec.wq_uom_code
                              ,p_work_item_code        => l_task_in_rec.wq_item_code
                              ,p_parent_structure_id   => l_structure_id
---- Begin Bug 3654243 ---------------------------------------------------------------------
                  ,p_Base_Perc_Comp_Deriv_Code => l_task_in_rec.base_percent_comp_deriv_code
---- End Bug 3654243 -----------------------------------------------------------------------
                              ,x_task_id               => l_task_id            -- *** OUT *** --
                              ,x_return_status         => x_return_status
                              ,x_msg_count             => x_msg_count
                              ,x_msg_data              => x_msg_data
                              );

                         -- Added for bug 3057575 :TO show task number while throwing err
                         l_err_task_number := l_cur_pa_tasks_rec.task_number;

                         px_tasks_out_tbl(i).return_status       := x_return_status;

                         IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                              IF l_debug_mode = 'Y' THEN
                                 pa_debug.g_err_stage := 'Error calling create task : ' || l_task_id ;
                                 pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                              END IF;
                              Raise Invalid_Arg_Exc_WP;
                         END IF;


                         IF l_debug_mode = 'Y' THEN
                            pa_debug.g_err_stage := 'task id : ' || l_task_id ;
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level3);
                         END IF;

                    END IF; -- p_create_task_version_only = 'N'

               ELSE
                    DECLARE
                         l_proj_elem_rvn NUMBER;
                    BEGIN

                         OPEN cur_rec_ver_num(l_task_in_rec.pa_task_id);
                         FETCH cur_rec_ver_num INTO l_proj_elem_rvn;
                         CLOSE cur_rec_ver_num;

			 --  Bug 6717386
			If l_struct_ver_id is null then
			   OPEN cur_struc_ver_wp(p_project_id,'WORKPLAN');
			   FETCH cur_struc_ver_wp INTO l_struct_ver_id;
			   CLOSE cur_struc_ver_wp;
			end if;

			if p_structure_version_id = l_struct_ver_id then
			   l_status_code := null;
			   else
			   l_status_code := l_task_in_rec.STATUS_CODE;
			end if;
			--  Bug 6717386

                         PA_TASK_PUB1.Update_Task(
                             p_calling_module            => 'AMG'
                             ,p_init_msg_list            => FND_API.G_FALSE
                             ,p_task_id                  => l_task_in_rec.pa_task_id
                             ,p_task_number              => l_task_in_rec.pa_task_number
                             ,p_task_name                => l_task_in_rec.long_task_name
                             ,p_task_description         => l_task_in_rec.task_description
                             ,p_task_manager_id          => l_task_in_rec.task_manager_person_id
                             ,p_carrying_out_org_id      => l_task_in_rec.carrying_out_organization_id
                             ,p_pm_product_code          => l_task_in_rec.PM_SOURCE_CODE
                             ,p_pm_task_reference        => l_task_in_rec.pm_task_reference
                             ,p_location_id              => l_task_in_rec.address_id
                             ,p_priority_code            => l_task_in_rec.PRIORITY_CODE
                             ,p_TYPE_ID                  => l_task_in_rec.TASK_TYPE
                             ,p_status_code              => l_status_code -- l_task_in_rec.STATUS_CODE bug 6717386
                             ,p_inc_proj_progress_flag   => l_task_in_rec.INC_PROJ_PROGRESS_FLAG
                             ,p_closed_date              => l_task_in_rec.CLOSED_DATE
                             ,p_record_version_number    => l_proj_elem_rvn
                             ,P_UOM_CODE                 => l_task_in_rec.WQ_UOM_CODE
                             ,p_work_item_code           => l_task_in_rec.WQ_ITEM_CODE
                             ----- begin Bug 3654243 --------------------------------------------
                         ,p_Base_Perc_Comp_Deriv_Code => l_task_in_rec.base_percent_comp_deriv_code
                         ,p_gen_etc_src_code          => l_task_in_rec.gen_etc_source_code
                              ----- end Bug 3654243 ----------------------------------------------
                             ,x_return_status            => x_return_status
                             ,x_msg_count                => x_msg_count
                             ,x_msg_data                 => x_msg_data
                 ,p_shared                   => l_shared       -- Added for Bug#3451073
                                );

                         -- Added for bug 3057575 :TO show task number while throwing err
             l_err_task_number := l_task_in_rec.pa_task_number;

                         px_tasks_out_tbl(i).return_status       := x_return_status;

                         IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                 PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                                      ,p_msg_name       => 'PA_PS_TASK_NOT_UPDATED'
                             /* ADDED PROJECT_ID AND TASK_ID TOKENS FOR BUG 4219451 */
                              ,p_token1         => 'PROJECT'
                              ,p_value1         =>  p_project_id
                                      ,p_token2          => 'TASK'
                                      ,p_value2          => l_task_in_rec.pa_task_id);
                                 IF l_debug_mode = 'Y'
                                 THEN
                                     pa_debug.g_err_stage := 'Error in task updation : ' || p_tasks_in_tbl(i).pa_task_id ;
                                     pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                                 END IF;
                                 Raise Invalid_Arg_Exc_WP;

                         END IF;

                    END;
                    --rtarway, added for BUG 4106154
                      IF ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
                           PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N' AND
                           PA_PROJECT_PUB.G_Published_version_exists = 'Y' AND
               --Added by rtarway for BUG 4321313
               PA_PROJ_ELEMENTS_UTILS.CHECK_IS_FINANCIAL_TASK(l_task_in_rec.pa_task_id)='Y'
               )
                      THEN
                      --Call Update_One_Task to update financial attributes
                                   PA_PROJECT_PVT.Update_One_Task
                                   (
                                        p_api_version_number            => p_api_version_number,
                                        p_commit                        => FND_API.G_FALSE,
                                        p_msg_count                     => x_msg_count,
                                        p_msg_data                      => x_msg_data,
                                        p_return_status                 => x_return_status,
                                        p_pm_product_code               => p_pm_product_code,
                                        p_pa_project_id                 => p_project_id,
                                        p_pa_task_id                    => l_task_in_rec.pa_task_id,
                                        p_pm_task_reference             => l_task_in_rec.pm_task_reference,
                                        p_task_number                   => l_task_in_rec.pa_task_number,
                                        p_task_name                     => l_task_in_rec.task_name,
                                        p_long_task_name                => l_task_in_rec.long_task_name,
                                        p_task_description              => l_task_in_rec.task_description,
                                        p_task_start_date               => l_task_in_rec.task_start_date,
                                        p_task_completion_date          => l_task_in_rec.task_completion_date,
                                        p_early_start_date              => l_task_in_rec.early_start_date,
                                        p_early_finish_date             => l_task_in_rec.early_finish_date,
                                        p_late_start_date               => l_task_in_rec.late_start_date,
                                        p_late_finish_date              => l_task_in_rec.late_finish_date,
                                        p_pm_parent_task_reference      => l_task_in_rec.pm_parent_task_reference,
                                        p_pa_parent_task_id             => l_task_in_rec.pa_parent_task_id,
                                        p_address_id                    => l_task_in_rec.address_id,
                                        p_carrying_out_organization_id  => l_task_in_rec.carrying_out_organization_id,
                                        p_service_type_code             => l_task_in_rec.service_type_code,
                                        p_task_manager_person_id        => l_task_in_rec.task_manager_person_id,
                                        p_billable_flag                 => l_task_in_rec.billable_flag,
                                        p_chargeable_flag               => l_task_in_rec.chargeable_flag,
                                        p_ready_to_bill_flag            => l_task_in_rec.ready_to_bill_flag,
                                        p_ready_to_distribute_flag      => l_task_in_rec.ready_to_distribute_flag,
                                        p_limit_to_txn_controls_flag    => l_task_in_rec.limit_to_txn_controls_flag,
                                        p_labor_bill_rate_org_id        => l_task_in_rec.labor_bill_rate_org_id,
                                        p_labor_std_bill_rate_schdl     => l_task_in_rec.labor_std_bill_rate_schdl,
                                        p_labor_schedule_fixed_date     => l_task_in_rec.labor_schedule_fixed_date,
                                        p_labor_schedule_discount       => l_task_in_rec.labor_schedule_discount,
                                        p_nl_bill_rate_org_id           => l_task_in_rec.non_labor_bill_rate_org_id,
                                        p_nl_std_bill_rate_schdl        => l_task_in_rec.non_labor_std_bill_rate_schdl,
                                        p_nl_schedule_fixed_date        => l_task_in_rec.non_labor_schedule_fixed_date,
                                        p_nl_schedule_discount          => l_task_in_rec.non_labor_schedule_discount,
                                        p_labor_cost_multiplier_name    => l_task_in_rec.labor_cost_multiplier_name,
                                        p_cost_ind_rate_sch_id          => l_task_in_rec.cost_ind_rate_sch_id,
                                        p_rev_ind_rate_sch_id           => l_task_in_rec.rev_ind_rate_sch_id,
                                        p_inv_ind_rate_sch_id           => l_task_in_rec.inv_ind_rate_sch_id,
                                        p_cost_ind_sch_fixed_date       => l_task_in_rec.cost_ind_sch_fixed_date,
                                        p_rev_ind_sch_fixed_date        => l_task_in_rec.rev_ind_sch_fixed_date,
                                        p_inv_ind_sch_fixed_date        => l_task_in_rec.inv_ind_sch_fixed_date,
                                        p_labor_sch_type                => l_task_in_rec.labor_sch_type,
                                        p_nl_sch_type                   => l_task_in_rec.non_labor_sch_type,
                                        p_allow_cross_charge_flag       => l_task_in_rec.allow_cross_charge_flag,
                                        p_project_rate_type             => l_task_in_rec.project_rate_type,
                                        p_project_rate_date             => l_task_in_rec.project_rate_date,
                                        p_cc_process_labor_flag         => l_task_in_rec.cc_process_labor_flag,
                                        p_labor_tp_schedule_id          => l_task_in_rec.labor_tp_schedule_id,
                                        p_labor_tp_fixed_date           => l_task_in_rec.labor_tp_fixed_date,
                                        p_cc_process_nl_flag            => l_task_in_rec.cc_process_nl_flag,
                                        p_nl_tp_schedule_id             => l_task_in_rec.nl_tp_schedule_id,
                                        p_nl_tp_fixed_date              => l_task_in_rec.nl_tp_fixed_date,
                                        p_receive_project_invoice_flag  => l_task_in_rec.receive_project_invoice_flag,
                                        p_work_type_id                  => l_task_in_rec.work_type_id,
                                        p_emp_bill_rate_schedule_id     => l_task_in_rec.emp_bill_rate_schedule_id,
                                        p_job_bill_rate_schedule_id     => l_task_in_rec.job_bill_rate_schedule_id,
                                        p_non_lab_std_bill_rt_sch_id    => l_task_in_rec.non_lab_std_bill_rt_sch_id,
                                        p_taskfunc_cost_rate_type       => l_task_in_rec.taskfunc_cost_rate_type,
                                        p_taskfunc_cost_rate_date       => l_task_in_rec.taskfunc_cost_rate_date,
                                        p_labor_disc_reason_code        => l_task_in_rec.labor_disc_reason_code,
                                        p_non_labor_disc_reason_code    => l_task_in_rec.non_labor_disc_reason_code,
                                        p_retirement_cost_flag          => l_task_in_rec.retirement_cost_flag,
                                        p_cint_eligible_flag            => l_task_in_rec.cint_eligible_flag,
                                        p_cint_stop_date                => l_task_in_rec.cint_stop_date,
                                        p_gen_etc_source_code          =>  l_task_in_rec.gen_etc_source_code,
                                        p_invoice_method                => l_task_in_rec.invoice_method,
                                        p_customer_id                   => l_task_in_rec.customer_id,
                                        p_out_pa_task_id                => l_fin_task_id,
                                        p_out_pm_task_reference         => l_fin_task_reference
                                   );
                                 px_tasks_out_tbl(i).return_status       := x_return_status;

                                 IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                      PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                                           ,p_msg_name       => 'PA_PS_TASK_NOT_UPDATED'
                               /* ADDED PROJECT_ID AND TASK_ID TOKENS FOR BUG 4219451 */
                               ,p_token1         => 'PROJECT'
                               ,p_value1         =>  p_project_id
                                           ,p_token2          => 'TASK'
                                           ,p_value2          => l_task_in_rec.pa_task_id);
                                      IF l_debug_mode = 'Y'
                                      THEN
                                          pa_debug.g_err_stage := 'Error in financial task updation : ' || p_tasks_in_tbl(i).pa_task_id ;
                                          pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                                      END IF;
                                      Raise Invalid_Arg_Exc_WP;

                                 END IF;

                      END IF;

                    --end add for BUG 4106154

               END IF; -- After  calling create or update TASK
               px_tasks_out_tbl(i).pa_task_id          := l_task_id;
               px_tasks_out_tbl(i).pm_task_reference   := l_task_in_rec.pm_task_reference;


               -- Updation of the task is done. Now start processing for updating the task version.
               -- Task version requires wbs_level, disp sequence, wbs number, flexfield related information etc to be populated.
               -- In the coming code we will populate these variables and will update/insert proj element versions.

               -- Start processing for display sequence, wbs level and wbs number.
               -- Following is the way tables store data
               -- 1. l_disp_seq -- the current index for which processing is going on.
               -- 2. l_display_sequence_tbl(l_task_id) -- display sequence indexed by task ids.
               -- 3. l_wbs_level_tbl(l_task_id)        -- wbs level indexed by task id.
               -- 4. l_top_task_count                  -- top tasks processed until current loop.
               -- 5. l_wbs_number_tbl(l_task_id)       -- wbs number indexed by task id.
               -- 6. l_weighting_percentage_tbl(l_task_id) -- weightage indexed by task id.
               -- 7. l_child_count_tbl(l_task_id)      -- child count indexed by task id.

               -- The wbs level is wbs level of parent + 1 for non top tasks else it is 1.
               -- The wbs number is top_task_cnt when top task else it is wbs_number || '.'
               -- || parent task child count + 1
               l_disp_seq := l_disp_seq + 1;
               l_display_sequence_tbl(l_task_id) := l_disp_seq;

           --Start for Changes for bug 3057575 : Checking whether correct structure has been passed OR NOT
           -- As the l_parent_task_id may get populated with l_structure_id for top tasks
           -- but as the below code  requires it be null
           IF l_parent_task_id = l_structure_id THEN
                  IF l_debug_mode = 'Y' THEN
                            pa_debug.g_err_stage := 'Parent task Id is upd with struc. id so shld be nulled out  : ' || p_tasks_in_tbl(i).pa_task_id ;
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                  END IF;
              l_parent_task_id := null;
           END IF;

           IF l_hierarchy_count = 1 THEN
                    IF l_debug_mode = 'Y' THEN
                            pa_debug.g_err_stage := 'l_hierarchy_count is 1  : ' || p_tasks_in_tbl(i).pa_task_id ;
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);

                            pa_debug.g_err_stage := 'l_parent_task_id is : ' || l_parent_task_id;
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);

                            IF  task_parent_id_tbl.EXISTS(l_hierarchy_count) THEN
                pa_debug.g_err_stage := 'The task in hierarchy is  : ' || task_parent_id_tbl(l_hierarchy_count);
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                END IF;

                    END IF;

                    IF l_parent_task_id IS NOT NULL AND task_parent_id_tbl.EXISTS(l_hierarchy_count) AND l_parent_task_id = task_parent_id_tbl(l_hierarchy_count) THEN
                 l_hierarchy_count := l_hierarchy_count +1;
                ELSE
                 IF l_parent_task_id IS NOT NULL THEN

                               PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                                    ,p_msg_name       => 'PA_TASK_NOT_IN_HIERARCHY_ORD'
                            ,p_token1         => 'TASK'
                            ,p_value1         => l_err_task_number);                               Raise Invalid_Arg_Exc_WP;
                               Raise Invalid_Arg_Exc_WP;
             END IF;
                    END IF;
               ELSE
               IF l_debug_mode = 'Y' THEN
                            pa_debug.g_err_stage := 'l_hierarchy_count is grater then  1  : ' || p_tasks_in_tbl(i).pa_task_id ;
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);


                            pa_debug.g_err_stage := 'l_parent_task_id is : ' || l_parent_task_id;
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);

                            IF  task_parent_id_tbl.EXISTS(l_hierarchy_count) THEN
                pa_debug.g_err_stage := 'The task in hierarchy is  : ' || task_parent_id_tbl(l_hierarchy_count);
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                END IF;

                   END IF;

               IF l_parent_task_id IS NULL THEN
               l_hierarchy_count := 1;
           ELSE
                l_temp_count := 0;
            l_temp_success := 'F';
            LOOP
                IF l_parent_task_id = task_parent_id_tbl(l_hierarchy_count) THEN
                    l_temp_success := 'T';
                    l_hierarchy_count := l_hierarchy_count +1;
                    ELSE
                        l_hierarchy_count := l_hierarchy_count - 1;
                END IF;
                EXIT WHEN l_temp_success = 'T' OR l_hierarchy_count = 0;

            END LOOP;
                        IF l_debug_mode = 'Y' THEN
                            pa_debug.g_err_stage := 'Value of l_hierarchy_count   : ' || l_hierarchy_count ;
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                        END IF;

            IF  l_temp_success = 'F' THEN
                               PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                                    ,p_msg_name       => 'PA_TASK_NOT_IN_HIERARCHY_ORD'
                            ,p_token1         => 'TASK'
                            ,p_value1         => l_err_task_number);
                               Raise Invalid_Arg_Exc_WP;


            END IF;

           END IF; -- End for l_parent_task_id IS NOT NULL

        END IF; --End for l_hierarchy_count = 1
                --End for Changes for bug 3057575 :


               IF l_parent_task_id is null THEN

            --Added for bug 3057575
                    task_parent_id_tbl(l_hierarchy_count) := l_task_id;

            l_wbs_level_tbl(l_task_id) := 1;
                    l_top_task_count := l_top_task_count + 1;
                    l_wbs_number_tbl(l_task_id) := l_top_task_count;
               ELSE -- current task is not a top task.

                --Added for bug 3057575
                    task_parent_id_tbl(l_hierarchy_count) := l_task_id;

            l_wbs_level_tbl(l_task_id) := l_wbs_level_tbl(l_parent_task_id) + 1;
                    l_child_count_tbl(l_parent_task_id) := l_child_count_tbl(l_parent_task_id) + 1;
                    l_wbs_number_tbl(l_task_id) := l_wbs_number_tbl(l_parent_task_id) || '.' || l_child_count_tbl(l_parent_task_id);
               END IF;

               --Set the number of children under the current task to 0.
               l_child_count_tbl(l_task_id) := 0;

               -- Bug 3075609. Modifying the task weightage processing logic. Currently the logic
               -- overwrites the weightages in the update project context and doesnot consider the
               -- progress enabled property of the task. Please refer to bug 3030664 for details
               -- about the issue and the fix.

/*             -- Included check for top task after UT.
               -- If this is the first top task set its weightage to 100 else 0.
               -- If current task is the only child under the parent set its weightage to 100 else 0.
               IF l_parent_task_id is null THEN
                    IF l_top_task_count = 1 THEN
                         l_weighting_percentage_tbl(l_task_id) := 100;
                    ELSE
                         l_weighting_percentage_tbl(l_task_id) := 0;
                    END IF;
               ELSE -- non top tasks.
                    IF l_child_count_tbl(l_parent_task_id) = 1 THEN
                         l_weighting_percentage_tbl(l_task_id) := 100;
                    ELSE
                         l_weighting_percentage_tbl(l_task_id) := 0;
                    END IF;
               END IF;
*/
               -- The following plsql block takes care of assigning task weightages to the tasks.
               DECLARE
                    -- This cursor identified the number of progressible tasks under a parent.
                    CURSOR get_child_count(c_parent_element_version_id NUMBER)
                    IS
                    SELECT count(rel.object_id_to1)
                    FROM PA_OBJECT_RELATIONSHIPS rel, pa_proj_element_versions pev, pa_proj_elements pe, pa_task_types tt
                    WHERE rel.object_id_from1 = c_parent_element_version_id
                    AND   rel.object_type_to = 'PA_TASKS'
                    AND   rel.relationship_type = 'S'
                    AND   rel.object_type_from IN ('PA_STRUCTURES', 'PA_TASKS')
                    AND   rel.object_id_to1 = pev.element_version_id
                    AND   pev.proj_element_id = pe.proj_element_id
                    AND   pe.type_id = tt.task_type_id
                    AND   tt.object_type    = 'PA_TASKS' /* bug 3279978 FP M Enhancement */
                    AND   tt.prog_entry_enable_flag = 'Y';

                    l_child_task_count  NUMBER;
                    l_parent_version_id pa_proj_element_versions.element_version_id%TYPE;
                    l_task_type_id      pa_task_types.task_type_id%TYPE;
               BEGIN
                    l_existing_task_set_max_wt := 'N';
                    IF l_maintain_weightages = 'N' THEN -- no need to maintain weightages.
                         l_weighting_percentage_tbl(l_task_id) := 0;
                    ELSE
                         IF l_parent_task_id is null THEN -- obtain the parent version id
                              l_parent_version_id           := l_structure_version_id;
                         ELSE
                              l_parent_version_id           := l_task_version_id_tbl(l_parent_task_id);
                         END IF;

                         IF l_child_indicator_tbl.exists(l_parent_version_id) THEN
                              IF l_child_indicator_tbl(l_parent_version_id) = 'Y' THEN
                                   l_weighting_percentage_tbl(l_task_id) := 0;
                              ELSE
                                   open cur_task_type_id(l_task_id);
                                   fetch cur_task_type_id into l_task_type_id;
                                   close cur_task_type_id;
                                   IF pa_task_type_utils.check_tk_type_progressable(l_task_type_id) = 'Y' THEN -- progressible task
                                        l_weighting_percentage_tbl(l_task_id) := 100;
                                        l_child_indicator_tbl(l_parent_version_id) := 'Y';
                                   ELSE -- non progressible task
                                        l_weighting_percentage_tbl(l_task_id) := 0;
                                   END IF;
                              END IF;

                         ELSE -- This is the first child of the parent.
                              -- If it is update context, check how many progress enabled tasks the parent has.
                              IF p_structure_version_id is not null THEN -- update context
                                   open get_child_count(l_parent_version_id);
                                   fetch get_child_count into l_child_task_count;
                                   close get_child_count;
                              END IF;

                              IF p_structure_version_id is not null and nvl(l_child_task_count,0) > 0 THEN -- progressible task exist
                                   l_child_indicator_tbl(l_parent_version_id) := 'Y';
                                   l_weighting_percentage_tbl(l_task_id) := 0;
                              ELSE
                                   open cur_task_type_id(l_task_id);
                                   fetch cur_task_type_id into l_task_type_id;
                                   close cur_task_type_id;
                                   IF pa_task_type_utils.check_tk_type_progressable(l_task_type_id) = 'Y' THEN -- progressible task
                                        l_weighting_percentage_tbl(l_task_id) := 100;
                                        l_child_indicator_tbl(l_parent_version_id) := 'Y';
                                        l_existing_task_set_max_wt := 'Y';
                                   ELSE -- non progressible task
                                        l_weighting_percentage_tbl(l_task_id) := 0;
                                        l_child_indicator_tbl(l_parent_version_id) := 'N';
                                   END IF;
                              END IF;
                         END IF;
                    END IF;
               EXCEPTION
                    WHEN OTHERS THEN
                         If get_child_count%ISOPEN THEN
                              Close get_child_count;
                         END IF;
                         IF l_debug_mode = 'Y' THEN
                              pa_debug.g_err_stage:= 'Error while calculating the task weightage. Task id : '||l_task_id;
                              pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level6);
                         END IF;
                         Raise;
               END;

              -- Populate following set of variables required to update element versions:
              -- attribute_category , attribute1 ...attribute10, in local variables
              -- l_task_version_id, l_proj_elem_ver_rowid, l_proj_elem_ver_rvn -- required only in update task.

               IF l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                  l_task_in_rec.pa_task_id IS NULL THEN -- Create Task Context
                 --Bug 6153503
                  IF l_task_in_rec.tasks_dff = 'N' THEN
                    -- Handle the dff attributes. Set the local variable to null if passed value is miss char.
                    -- These attributes would be used both while creating task version and the schedule version.
                    IF l_task_in_rec.attribute_category = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute_category := null;
                    ELSE
                       l_attribute_category := l_task_in_rec.attribute_category;
                    END IF;

                    IF l_task_in_rec.attribute1 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute1 := null;
                    ELSE
                       l_attribute1 := l_task_in_rec.attribute1;
                    END IF;

                    IF l_task_in_rec.attribute2 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute2 := null;
                    ELSE
                       l_attribute2 := l_task_in_rec.attribute2;
                    END IF;

                    IF l_task_in_rec.attribute3 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute3 := null;
                    ELSE
                       l_attribute3 := l_task_in_rec.attribute3;
                    END IF;

                    IF l_task_in_rec.attribute4 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute4 := null;
                    ELSE
                       l_attribute4 := l_task_in_rec.attribute4;
                    END IF;

                    IF l_task_in_rec.attribute5 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute5 := null;
                    ELSE
                       l_attribute5 := l_task_in_rec.attribute5;
                    END IF;

                    IF l_task_in_rec.attribute6 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute6 := null;
                    ELSE
                       l_attribute6 := l_task_in_rec.attribute6;
                    END IF;

                    IF l_task_in_rec.attribute7 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute7 := null;
                    ELSE
                       l_attribute7 := l_task_in_rec.attribute7;
                    END IF;

                    IF l_task_in_rec.attribute8 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute8 := null;
                    ELSE
                       l_attribute8 := l_task_in_rec.attribute8;
                    END IF;

                    IF l_task_in_rec.attribute9 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute9 := null;
                    ELSE
                       l_attribute9 := l_task_in_rec.attribute9;
                    END IF;

                    IF l_task_in_rec.attribute10 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute10 := null;
                    ELSE
                       l_attribute10 := l_task_in_rec.attribute10;
                    END IF;
                    --Bug 6153503
                    IF l_task_in_rec.attribute11 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute11 := null;
                    ELSE
                       l_attribute11 := l_task_in_rec.attribute11;
                    END IF;

                    IF l_task_in_rec.attribute12 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute12 := null;
                    ELSE
                       l_attribute12 := l_task_in_rec.attribute12;
                    END IF;

                    IF l_task_in_rec.attribute13 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute13 := null;
                    ELSE
                       l_attribute13 := l_task_in_rec.attribute13;
                    END IF;

                    IF l_task_in_rec.attribute14 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute14 := null;
                    ELSE
                       l_attribute14 := l_task_in_rec.attribute14;
                    END IF;

                    IF l_task_in_rec.attribute15 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                       l_attribute15 := null;
                    ELSE
                       l_attribute15 := l_task_in_rec.attribute15;
                    END IF;

                    pa_task_utils.validate_flex_fields(
                             p_desc_flex_name        => 'PA_PROJ_ELEM_VER_SCH_DESC_FLEX'
                            ,p_attribute_category    => l_attribute_category
                            ,p_attribute1            => l_attribute1
                            ,p_attribute2            => l_attribute2
                            ,p_attribute3            => l_attribute3
                            ,p_attribute4            => l_attribute4
                            ,p_attribute5            => l_attribute5
                            ,p_attribute6            => l_attribute6
                            ,p_attribute7            => l_attribute7
                            ,p_attribute8            => l_attribute8
                            ,p_attribute9            => l_attribute9
                            ,p_attribute10           => l_attribute10
                            ,p_attribute11           => l_attribute11
                            ,p_attribute12           => l_attribute12
                            ,p_attribute13           => l_attribute13
                            ,p_attribute14           => l_attribute14
                            ,p_attribute15           => l_attribute15
                            ,p_RETURN_msg            => l_return_msg
                            ,p_validate_status       => l_validate_status
                            );

                            IF l_validate_status = 'N'
                            THEN
                                 IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                                 THEN
                                      pa_interface_utils_pub.map_new_amg_msg
                                                ( p_old_message_code => 'PA_INVALID_FF_VALUES'
                                                ,p_msg_attribute    => 'CHANGE'
                                                ,p_resize_flag      => 'N'
                                                ,p_msg_context      => 'FLEX'
                                                ,p_attribute1       => l_return_msg
                                                ,p_attribute2       => ''
                                                ,p_attribute3       => ''
                                                ,p_attribute4       => ''
                                                ,p_attribute5       => '');
                                END IF;
                            RAISE FND_API.G_EXC_ERROR;
                          END IF;
                  END IF;
                  --Bug 6153503
               ELSE -- update task case
                    DECLARE
                         --Cursor to get the versioned information of the task
                         CURSOR cur_proj_element_version_info(c_structure_version_id pa_proj_element_versions.parent_structure_version_id%TYPE, c_task_id pa_tasks.task_id%TYPE )
                             IS
                             SELECT rowid,element_version_id,object_type, project_id, proj_element_id, record_version_number,
                                     display_sequence, wbs_number, wbs_level, parent_structure_version_id,
                                     attribute_category, attribute1, attribute2, attribute3, attribute4, attribute5,
                                     attribute6, attribute7, attribute8, attribute9, attribute10, attribute11, attribute12,
                                     attribute13, attribute14, attribute15, TASK_UNPUB_VER_STATUS_CODE
                             FROM pa_proj_element_versions
                             WHERE project_id = p_project_id
                             AND proj_element_id = c_task_id
                             AND parent_structure_version_id = c_structure_version_id
                             AND object_type = 'PA_TASKS';

                         l_cur_proj_elem_ver_info_rec cur_proj_element_version_info%ROWTYPE;

                    BEGIN

                         OPEN cur_proj_element_version_info( l_structure_version_id, l_task_id );
                         FETCH cur_proj_element_version_info INTO l_cur_proj_elem_ver_info_rec;
                         CLOSE cur_proj_element_version_info;
                         --Bug 6153503
                         l_task_version_id := l_cur_proj_elem_ver_info_rec.element_version_id;
                         OPEN cur_ver_sch_attr_rec(l_task_version_id);
                         FETCH cur_ver_sch_attr_rec INTO l_ver_sch_attr_rec;
                         CLOSE cur_ver_sch_attr_rec;

                         -- Handle the dff attributes. Set the local variable to null if passed value is miss char.
                         -- These attributes would be used both while creating task version and the schedule version.
                         --Bug 6153503 start
                         IF l_task_in_rec.attribute_category = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                            OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute_category := l_ver_sch_attr_rec.attribute_category;
                         ELSE
                            l_attribute_category := l_task_in_rec.attribute_category;
                         END IF;

                         IF l_task_in_rec.attribute1 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute1 := l_ver_sch_attr_rec.attribute1;
                         ELSE
                            l_attribute1 := l_task_in_rec.attribute1;
                         END IF;

                         IF l_task_in_rec.attribute2 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute2 := l_ver_sch_attr_rec.attribute2;
                         ELSE
                            l_attribute2 := l_task_in_rec.attribute2;
                         END IF;

                         IF l_task_in_rec.attribute3 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute3 := l_ver_sch_attr_rec.attribute3;
                         ELSE
                            l_attribute3 := l_task_in_rec.attribute3;
                         END IF;

                         IF l_task_in_rec.attribute4 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute4 := l_ver_sch_attr_rec.attribute4;
                         ELSE
                            l_attribute4 := l_task_in_rec.attribute4;
                         END IF;

                         IF l_task_in_rec.attribute5 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute5 := l_ver_sch_attr_rec.attribute5;
                         ELSE
                            l_attribute5 := l_task_in_rec.attribute5;
                         END IF;

                         IF l_task_in_rec.attribute6 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute6 := l_ver_sch_attr_rec.attribute6;
                         ELSE
                            l_attribute6 := l_task_in_rec.attribute6;
                         END IF;

                         IF l_task_in_rec.attribute7 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute7 := l_ver_sch_attr_rec.attribute7;
                         ELSE
                            l_attribute7 := l_task_in_rec.attribute7;
                         END IF;

                         IF l_task_in_rec.attribute8 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute8 := l_ver_sch_attr_rec.attribute8;
                         ELSE
                            l_attribute8 := l_task_in_rec.attribute8;
                         END IF;

                         IF l_task_in_rec.attribute9 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y'  THEN
                            l_attribute9 := l_ver_sch_attr_rec.attribute9;
                         ELSE
                            l_attribute9 := l_task_in_rec.attribute9;
                         END IF;

                         IF l_task_in_rec.attribute10 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute10 := l_ver_sch_attr_rec.attribute10;
                         ELSE
                            l_attribute10 := l_task_in_rec.attribute10;
                         END IF;

                         IF l_task_in_rec.attribute11 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute11 := l_ver_sch_attr_rec.attribute11;
                         ELSE
                            l_attribute11 := l_task_in_rec.attribute11;
                         END IF;

                         IF l_task_in_rec.attribute12 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute12 := l_ver_sch_attr_rec.attribute12;
                         ELSE
                            l_attribute12 := l_task_in_rec.attribute12;
                         END IF;

                         IF l_task_in_rec.attribute13 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute13 := l_ver_sch_attr_rec.attribute13;
                         ELSE
                            l_attribute13 := l_task_in_rec.attribute13;
                         END IF;

                         IF l_task_in_rec.attribute14 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute14 := l_ver_sch_attr_rec.attribute14;
                         ELSE
                            l_attribute14 := l_task_in_rec.attribute14;
                         END IF;

                         IF l_task_in_rec.attribute15 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_task_in_rec.tasks_dff = 'Y' THEN
                            l_attribute15 := l_ver_sch_attr_rec.attribute15;
                         ELSE
                            l_attribute15 := l_task_in_rec.attribute15;
                         END IF;

                          pa_task_utils.validate_flex_fields(
                             p_desc_flex_name        => 'PA_PROJ_ELEM_VER_SCH_DESC_FLEX'
                            ,p_attribute_category    => l_attribute_category
                            ,p_attribute1            => l_attribute1
                            ,p_attribute2            => l_attribute2
                            ,p_attribute3            => l_attribute3
                            ,p_attribute4            => l_attribute4
                            ,p_attribute5            => l_attribute5
                            ,p_attribute6            => l_attribute6
                            ,p_attribute7            => l_attribute7
                            ,p_attribute8            => l_attribute8
                            ,p_attribute9            => l_attribute9
                            ,p_attribute10           => l_attribute10
                            ,p_attribute11           => l_attribute11
                            ,p_attribute12           => l_attribute12
                            ,p_attribute13           => l_attribute13
                            ,p_attribute14           => l_attribute14
                            ,p_attribute15           => l_attribute15
                            ,p_RETURN_msg            => l_return_msg
                            ,p_validate_status       => l_validate_status
                            );

                            IF l_validate_status = 'N'
                            THEN
                                 IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                                 THEN
                                      pa_interface_utils_pub.map_new_amg_msg
                                                ( p_old_message_code => 'PA_INVALID_FF_VALUES'
                                                ,p_msg_attribute    => 'CHANGE'
                                                ,p_resize_flag      => 'N'
                                                ,p_msg_context      => 'FLEX'
                                                ,p_attribute1       => l_return_msg
                                                ,p_attribute2       => ''
                                                ,p_attribute3       => ''
                                                ,p_attribute4       => ''
                                                ,p_attribute5       => '');
                                END IF;
                            RAISE FND_API.G_EXC_ERROR;
                          END IF;
                            --Bug 6153503 end


                         l_task_unpub_ver_status_code := l_cur_proj_elem_ver_info_rec.TASK_UNPUB_VER_STATUS_CODE;

                         l_task_version_id := l_cur_proj_elem_ver_info_rec.element_version_id;
                         l_proj_elem_ver_rowid := l_cur_proj_elem_ver_info_rec.rowid;
                         l_proj_elem_ver_rvn   := l_cur_proj_elem_ver_info_rec.record_version_number;

                    END;
               END IF; -- before calling PA_PROJ_ELEMENT_VERSIONS_PKG  Insert_Row or Update_Row

               -- In the following block do following validations:
               -- for create task case check if its ok to create subtask under the parent task.
               -- for update task check if the task is being moved. If moved check if move task is ok.
               -- check if the task can be moved under the new parent.
               -- Also do the lifecycle validations for update case. OPEN ISSUE

               -- During these validations following variables are also populated which are used later on
               -- l_relationship_id, l_obj_rel_rvn;

               IF l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                  l_task_in_rec.pa_task_id IS NULL THEN -- create task
                    IF l_parent_task_id IS NOT NULL THEN
                         --Check if it is ok to create a subtask.
                         PA_PROJ_ELEMENTS_UTILS.Check_create_subtask_ok
                              (    p_parent_task_ver_id => l_task_version_id_tbl(l_parent_task_id)
                                  ,x_return_status      => l_return_status
                                  ,x_error_message_code => l_error_msg_code
                              );

                          IF (l_return_status <> 'Y') THEN  --Its required to check like this as the called API
                                                            --returns return status as Y / N.
                              IF l_debug_mode = 'Y' THEN
                                   pa_debug.g_err_stage:= 'Cannot create this task under its parent : '||l_task_id;
                                   pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                                              l_debug_level6);
                              END IF;

                              x_return_status := FND_API.G_RET_STS_ERROR;
                              px_tasks_out_tbl(i).return_status       := x_return_status;
                              PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                                   p_msg_name => l_error_msg_code);
                              Raise Invalid_Arg_Exc_WP;
                          END IF;
                    END IF; --l_parent_task_id IS NOT NULL

               ELSE
                    DECLARE
                         l_db_parent_task_version_id     pa_proj_element_versions.element_version_id%TYPE;
                         l_parent_task_version_id        pa_proj_element_versions.element_version_id%TYPE;

                         -- Bug 3075609. This will hold the weightage of the task version currently in database.
                         l_db_task_weightage             pa_object_relationships.weighting_percentage%TYPE;
                    BEGIN
                         IF (l_parent_task_id IS NOT null)
                         THEN
                              l_parent_task_version_id := l_task_version_id_tbl(l_parent_task_id);
                         ELSE -- top task hence populate structure_version_id as parent
                               l_parent_task_version_id := l_structure_version_id;
                         END IF;

                         --Get the present parent task version id from DB
                         OPEN cur_parent_object_rel(l_task_version_id );
                         FETCH cur_parent_object_rel INTO l_db_parent_task_version_id,l_relationship_id, l_obj_rel_rvn,l_db_task_weightage;
                         CLOSE cur_parent_object_rel;

                         -- Bug 3075609. For all the existing tasks, we will set the weightage from the database.
                         l_weighting_percentage_tbl(l_task_id) := l_db_task_weightage;

                         -- Siva : You can set the flag l_WBS_changed_flag to Y inside the following if
                         -- Condition. Call the set_update_wbs_flag after the task loop - otherwise for each
                         -- of the potential change the set_update_wbs_flag api will be called.(This will equal
                         -- the number of tasks in the create project context)
                         IF (l_parent_task_version_id <> l_db_parent_task_version_id)
                         THEN
                                --rtarway, for DHI ER, BUG 4413568
                IF ( PA_PROJECT_PUB.G_TASK_STR_UPDATE_MODE  = 'PA_UPD_TASK_ATTR' ) THEN  --bug 4534919
                    PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                                            p_msg_name => 'PA_WBS_CANT_CHANGE');
                                    RAISE Invalid_Arg_Exc_WP;
                END IF;
                -- Lifecycle Phase validation . Check if task has phase associated with it
                                IF (pa_proj_elements_utils.CHECK_ELEMENT_HAS_PHASE(l_task_in_rec.pa_task_id) = 'Y')
                                THEN
                                    PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                                            p_msg_name => 'PA_LC_NO_MOVE_PHASE_TASK');
                                    RAISE Invalid_Arg_Exc_WP;
                                END IF;

                                --check if ok to move this task
                                PA_PROJ_ELEMENTS_UTILS.check_move_task_ok(
                                         p_task_ver_id => l_task_version_id
                                         ,x_return_status => x_return_status
                                         ,x_error_message_code => x_msg_data
                                         );
                                IF (x_return_status <> 'Y') THEN
                                       PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                                            p_msg_name => x_msg_data);
                                       raise Invalid_Arg_Exc_WP;
                                END IF;

                                IF (l_parent_task_id IS NOT NULL) THEN
                                     PA_PROJ_ELEMENTS_UTILS.CHECK_CREATE_SUBTASK_OK(
                                          p_parent_task_ver_id => l_parent_task_version_id
                                          ,x_return_status      => x_return_status
                                          ,x_error_message_code => x_msg_data);
                                     IF (x_return_status <> 'Y') THEN
                                          PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                                       p_msg_name => x_msg_data);
                                          raise Invalid_Arg_Exc_WP;
                                     END IF;
                                 END IF;

                                 l_WBS_changed_flag := 'Y';  --bug 3010538

                                 -- Bug 3075609. This task is changing its parent. See if the other peer
                                 -- tasks need to be processed. The task that is changing its parent will be
                                 -- set a tw of 100 if this is the first task in the new branch or 0 otherwise.
                                 IF l_maintain_weightages = 'Y' THEN
                                      IF nvl(l_existing_task_set_max_wt,'N') = 'Y' THEN
                                        l_weighting_percentage_tbl(l_task_id) := 100;
                                      ELSE
                                        l_weighting_percentage_tbl(l_task_id) := 0;
                                      END IF;
                                      IF nvl(l_db_task_weightage,0) <> 0 and NOT l_affected_parents_tbl.exists(l_db_parent_task_version_id) THEN
                                        l_affected_parents_tbl(l_db_parent_task_version_id) := 'Y';
                                      END IF;
                                 END IF;
                         END IF;
                    END;
               END IF;

               -- call insert row or update row
               -- Set the following local variables after calling PA_PROJ_ELEMENT_VERSIONS_PKG.Insert_Row
               -- l_task_version_id_tbl(l_task_id)
               -- px_tasks_out_tbl(i).task_version_id

               IF l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                  l_task_in_rec.pa_task_id IS NULL -- Create Task Context
                THEN

                    -- Call the table handler to create a task version.
                    IF l_debug_mode = 'Y' THEN
                       pa_debug.g_err_stage := 'Calling API PA_PROJ_ELEMENT_VERSIONS_PKG.Insert_Row';
                       pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                    END IF;
                    --added for 4059962 by rtarway
                    --Derive financial task flag
                    l_Share_Code := PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(p_project_id);
                    IF l_shared = 'Y'
                    THEN
                        --If P_Structure_Type = 'WORKPLAN' Or l_Share_Code = 'SHARE_PARTIAL' then
                        If l_Share_Code = 'SHARE_PARTIAL' then --Modified IF condition for 4059962 reopen, rtarway
                           l_financial_task_flag  := 'N';
                        Else
                           l_financial_task_flag  := 'Y';
                        End If;
                    ELSE
                        If P_Structure_Type = 'WORKPLAN' THEN
                           l_financial_task_flag := 'N';
                        Else
                           l_financial_task_flag := 'Y';
                        End If;
                    End IF;
                    --end added for 4059962 by rtarway

/*
	   Bug Fix 5263429
           Unable to delete the task from MSP.
*/
           IF p_is_wp_separate_from_fn = 'N'
          THEN
              IF p_is_wp_versioning_enabled = 'Y'
              THEN
                   l_task_unpub_ver_status_code := 'WORKING';
              ELSE
                   l_task_unpub_ver_status_code := 'PUBLISHED';
              END IF;
          ELSE ---split
               IF p_structure_type = 'FINANCIAL'
               THEN
                   l_task_unpub_ver_status_code := 'PUBLISHED';
               ELSE --workplan only
                   IF p_is_wp_versioning_enabled = 'Y'
                   THEN
                       l_task_unpub_ver_status_code := 'WORKING';
                   ELSE
                       l_task_unpub_ver_status_code := 'PUBLISHED';
                   END IF;
               END IF;
          END IF;
/*
	End of Bug Fix 5263429
*/
                    PA_PROJ_ELEMENT_VERSIONS_PKG.Insert_Row
                         (
                           X_ROW_ID                     => l_proj_elem_ver_rowid
                          ,X_ELEMENT_VERSION_ID         => l_task_version_id
                          ,X_PROJ_ELEMENT_ID            => l_task_id
                          ,X_OBJECT_TYPE                => 'PA_TASKS'
                          ,X_PROJECT_ID                 => p_project_id
                          ,X_PARENT_STRUCTURE_VERSION_ID=> l_structure_version_id
                          ,X_DISPLAY_SEQUENCE           => l_display_sequence_tbl(l_task_id)
                          ,X_WBS_LEVEL                  => l_wbs_level_tbl(l_task_id)
                          ,X_WBS_NUMBER                 => l_wbs_number_tbl(l_task_id)
                          ,X_ATTRIBUTE_CATEGORY         => l_attribute_category
                          ,X_ATTRIBUTE1                 => l_attribute1
                          ,X_ATTRIBUTE2                 => l_attribute2
                          ,X_ATTRIBUTE3                 => l_attribute3
                          ,X_ATTRIBUTE4                 => l_attribute4
                          ,X_ATTRIBUTE5                 => l_attribute5
                          ,X_ATTRIBUTE6                 => l_attribute6
                          ,X_ATTRIBUTE7                 => l_attribute7
                          ,X_ATTRIBUTE8                 => l_attribute8
                          ,X_ATTRIBUTE9                 => l_attribute9
                          ,X_ATTRIBUTE10                => l_attribute10
                          ,X_ATTRIBUTE11                => null
                          ,X_ATTRIBUTE12                => null
                          ,X_ATTRIBUTE13                => null
                          ,X_ATTRIBUTE14                => null
                          ,X_ATTRIBUTE15                => null
                          ,X_TASK_UNPUB_VER_STATUS_CODE => l_task_unpub_ver_status_code
                          ,X_SOURCE_OBJECT_ID            => p_project_id
                          ,X_SOURCE_OBJECT_TYPE          => 'PA_PROJECTS'
                          --,P_Financial_Task_Flag         => PA_PROJ_ELEMENTS_UTILS.CHECK_IS_FINANCIAL_TASK(l_task_id)
                          --commented and added following for bug 4059962 reopen, rtarway
                          ,P_Financial_Task_Flag         => l_financial_task_flag
                         );

                    l_task_version_id_tbl(l_task_id) := l_task_version_id;
                    px_tasks_out_tbl(i).task_version_id     := l_task_version_id;

                    IF l_debug_mode = 'Y' THEN
                       pa_debug.g_err_stage := 'Task Version id : ' || l_task_version_id ;
                       pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level3);
                    END IF;

                    -- Required to inherit task type attributes only in the case of context create_task from update project
                    IF p_structure_version_id IS NOT NULL
                    THEN
                        IF p_create_task_version_only = 'N'
                        THEN
                            PA_TASK_PVT1.Inherit_task_type_attr(
                                p_task_id => l_task_id
                                ,p_task_version_id => l_task_version_id
                                ,x_return_status => x_return_status
                                ,x_msg_count => x_msg_count
                                ,x_msg_data => x_msg_data
                                );
                            IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                              raise Invalid_Arg_Exc_WP;
                            END IF;
                        END IF;--for p_create_task_version_only = 'N'
                    END IF;-- for p_structure_version_id IS NOT NULL

               ELSE -- in update task case
                    -- check for locking
                    BEGIN
                            SELECT 'x' INTO l_dummy_char
                            FROM PA_PROJ_ELEMENT_VERSIONS
                            WHERE element_version_id = l_task_version_id
                            AND record_version_number = l_proj_elem_ver_rvn
                            FOR UPDATE OF record_version_number NOWAIT;
                            EXCEPTION
                            WHEN TIMEOUT_ON_RESOURCE THEN
                                      PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                                         p_msg_name       => 'PA_XC_ROW_ALREADY_LOCKED');
                                      raise Invalid_Arg_Exc_WP;
                            WHEN NO_DATA_FOUND THEN
                                      PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                                         p_msg_name       => 'PA_XC_RECORD_CHANGED');
                                    raise Invalid_Arg_Exc_WP;
                            WHEN OTHERS THEN
                                      IF SQLCODE = -54 then
                                           PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                                            p_msg_name       => 'PA_XC_ROW_ALREADY_LOCKED');
                                           raise Invalid_Arg_Exc_WP;
                                      ELSE
                                           raise;
                                      END IF;
                    END;

                    -- Call the table handler to create a task version.
                    IF l_debug_mode = 'Y' THEN
                        pa_debug.g_err_stage := 'Calling API PA_PROJ_ELEMENT_VERSIONS_PKG.Update_Row';
                        pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                    END IF;

                    -- Bug 3075609. Since atleast one task is being updated, this structure version is an
                    -- existing one. Let us maintain a flag to track this so that if this flag is Y we will
                    -- not recalculate the task weightages if the basis is MANUAL.
                    l_new_structure_version  := 'N';

                    PA_PROJ_ELEMENT_VERSIONS_PKG.Update_Row(
                       X_ROW_ID                     => l_proj_elem_ver_rowid
                      ,X_ELEMENT_VERSION_ID         => l_task_version_id
                      ,X_PROJ_ELEMENT_ID            => l_task_id
                      ,X_OBJECT_TYPE                => 'PA_TASKS'
                      ,X_PROJECT_ID                 => p_project_id
                      ,X_PARENT_STRUCTURE_VERSION_ID=> l_structure_version_id
                      ,X_DISPLAY_SEQUENCE           => l_display_sequence_tbl(l_task_in_rec.pa_task_id)
                      ,X_WBS_LEVEL                  => l_wbs_level_tbl(l_task_in_rec.pa_task_id)
                      ,X_WBS_NUMBER                 => l_wbs_number_tbl(l_task_in_rec.pa_task_id)
                      ,X_ATTRIBUTE_CATEGORY         => l_attribute_category
                      ,X_ATTRIBUTE1                 => l_attribute1
                      ,X_ATTRIBUTE2                 => l_attribute2
                      ,X_ATTRIBUTE3                 => l_attribute3
                      ,X_ATTRIBUTE4                 => l_attribute4
                      ,X_ATTRIBUTE5                 => l_attribute5
                      ,X_ATTRIBUTE6                 => l_attribute6
                      ,X_ATTRIBUTE7                 => l_attribute7
                      ,X_ATTRIBUTE8                 => l_attribute8
                      ,X_ATTRIBUTE9                 => l_attribute9
                      ,X_ATTRIBUTE10                => l_attribute10
                      ,X_ATTRIBUTE11                => null
                      ,X_ATTRIBUTE12                => null
                      ,X_ATTRIBUTE13                => null
                      ,X_ATTRIBUTE14                => null
                      ,X_ATTRIBUTE15                => null
                      ,X_record_version_number      => l_proj_elem_ver_rvn
                      ,X_TASK_UNPUB_VER_STATUS_CODE => l_task_unpub_ver_status_code
                     );

                    l_task_version_id_tbl(l_task_id) := l_task_version_id;
                    px_tasks_out_tbl(i).task_version_id     := l_task_version_id;

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.g_err_stage := 'Task Version id : ' || l_task_version_id ;
                        pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level3);
                    END IF;

               END IF; /* After calling PA_PROJ_ELEMENT_VERSIONS_PKG  Insert_Row or Update_Row*/

               -- Added for bug 3057575
           -- Here we will poulate the task_ver_id_passed_tbl with all the task version Id processed while
           -- Updating a project .This is not done while creating a project as we
           -- Are adding task version Id in task_ver_id_passed_tbl to identify all the tasks
           -- which are not passed while updating a project.
               IF (p_structure_version_id IS NOT NULL) THEN
               task_ver_id_passed_tbl(l_task_version_id) := l_task_version_id;
           END IF;

               -- In following code we will be creating or updating the records in object relationship tables.

               DECLARE
                    l_structure_version_id_from     pa_proj_element_versions.element_version_id%TYPE;
                    l_task_version_id_from          pa_proj_element_versions.element_version_id%TYPE;
                    l_relationship_subtype          pa_object_relationships.relationship_subtype%TYPE;

               BEGIN

                    -- Set the following local variables before calling PA_RELATIONSHIP_PUB.Create_Relationship
                    -- l_structure_version_id_from
                    -- l_task_version_id_from
                    -- l_relationship_subtype
                    IF l_parent_task_id is null THEN -- task is a top task.
                         l_structure_version_id_from := l_structure_version_id;
                         l_task_version_id_from      := null;
                         l_relationship_subtype      := 'STRUCTURE_TO_TASK';
                    ELSE -- The task is not a top task
                         l_structure_version_id_from := null;
                         l_task_version_id_from      := l_task_version_id_tbl(l_parent_task_id);
                         l_relationship_subtype      := 'TASK_TO_TASK';
                    END IF;

                    IF l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                       l_task_in_rec.pa_task_id IS NULL -- Create Task Context
                     THEN
                         -- Set the following variables after calling PA_RELATIONSHIP_PUB.Create_Relationship
                         --px_tasks_out_tbl(i).return_status
                         IF l_debug_mode = 'Y' THEN
                            pa_debug.g_err_stage := 'Calling API create_relationship';
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                         END IF;

                         PA_RELATIONSHIP_PUB.Create_Relationship
                           (
                               p_api_version                       => p_api_version_number
                              ,p_init_msg_list                     => FND_API.G_FALSE
                              ,p_commit                            => p_commit
                              ,p_validate_only                     => FND_API.G_FALSE
                              ,p_calling_module                    => p_calling_module
                              ,p_debug_mode                        => l_debug_mode
                              ,p_project_id_from                   => p_project_id
                              ,p_structure_id_from                 => l_structure_id
                              ,p_structure_version_id_from         => l_structure_version_id_from
                              ,p_task_version_id_from              => l_task_version_id_from
                              ,p_project_id_to                     => p_project_id
                              ,p_structure_id_to                   => l_structure_id
                              ,p_task_version_id_to                => l_task_version_id
                              ,p_structure_type                    => null
                              ,p_initiating_element                => null
                              ,p_relationship_type                 => 'S'
                              ,p_relationship_subtype              => l_relationship_subtype
                              ,p_weighting_percentage              => l_weighting_percentage_tbl(l_task_id)
                              ,x_object_relationship_id            => l_relationship_id
                              ,x_return_status                     => x_return_status
                              ,x_msg_count                         => x_msg_count
                              ,x_msg_data                          => x_msg_data
                           );

                         px_tasks_out_tbl(i).return_status       := x_return_status;
                         IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                              IF l_debug_mode = 'Y' THEN
                                 pa_debug.g_err_stage := 'Error calling create relationship : ' || l_task_version_id ;
                                 pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                              END IF;
                              Raise Invalid_Arg_Exc_WP;
                         END IF;

                         IF l_debug_mode = 'Y' THEN
                            pa_debug.g_err_stage := 'Relationship id : ' || l_relationship_id ;
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level3);
                         END IF;

                    ELSE -- in update task case
                         -- Set the following variables after calling PA_RELATIONSHIP_PUB.Create_Relationship
                         -- px_tasks_out_tbl(i).return_status
             --rtarway, for DHI ER, BUG 4413568
                             /*
                IF ( PA_PROJECT_PUB.G_TASK_STR_UPDATE_MODE  = 'PA_UPD_TASK_ATTR' ) THEN   --bug 4534919
                    PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                                         p_msg_name => 'PA_WBS_CANT_CHANGE');
                                    RAISE Invalid_Arg_Exc_WP;
                END IF;
                              This code is not required here. */

                         PA_RELATIONSHIP_PVT.Update_Relationship
                                      (
                                       p_api_version                       => p_api_version_number
                                      ,p_init_msg_list                     => FND_API.G_FALSE
                                      ,p_commit                            => p_commit
                                      ,p_validate_only                     => FND_API.G_FALSE
                                      ,p_calling_module                    => p_calling_module
                                      ,p_debug_mode                        => l_debug_mode
                                      ,p_object_relationship_id            => l_relationship_id
                                      ,p_project_id_from                   => null
                                      ,p_structure_id_from                 => null
                                      ,p_structure_version_id_from         => l_structure_version_id_from
                                      ,p_task_version_id_from              => l_task_version_id_from
                                      ,p_project_id_to                     => null
                                      ,p_structure_id_to                   => null
                                      ,p_structure_version_id_to           => null
                                      ,p_task_version_id_to                => l_task_version_id
                                      ,p_relationship_type                 => 'S'
                                      ,p_relationship_subtype              => l_relationship_subtype
                                      ,p_weighting_percentage              => l_weighting_percentage_tbl(l_task_id)
                                      ,p_record_version_number             => l_obj_rel_rvn
                                      ,x_return_status                     => x_return_status
                                      ,x_msg_count                         => x_msg_count
                                      ,x_msg_data                          => x_msg_data
                                     );

                             px_tasks_out_tbl(i).return_status       := x_return_status;

                             IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                 IF l_debug_mode = 'Y' THEN
                                     pa_debug.g_err_stage := 'Error calling create relationship : ' || l_task_version_id ;
                                     pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                                 END IF;
                                 Raise Invalid_Arg_Exc_WP;
                             END IF;

                             IF l_debug_mode = 'Y' THEN
                                 pa_debug.g_err_stage := 'Relationship id : ' || l_relationship_id ;
                                 pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level3);
                             END IF;

                    END IF; -- After  calling PA_RELATIONSHIP_PUB  Create_Relationship or Update_Relationship

               END; -- create/update relationship record.


               -- Create or update a schedule version for the task version only if the workplan
               -- structure is involved.

               IF p_is_wp_separate_from_fn = 'N' OR
                  (p_is_wp_separate_from_fn = 'Y' and p_structure_type = 'WORKPLAN')
                THEN

                    -- Set the following local variables before calling Create_Schedule_Version or Update_Schedule_Version
                    -- scheduled_start_date,scheduled_finish_date ( only for create task case)
                    -- l_task_type_id
                    -- l_wq_planned_quantity
                    -- l_ver_sch_attr_rec (only for update task)

                    DECLARE
                         l_wq_planned_quantity           pa_proj_elem_ver_schedule.wq_planned_quantity%TYPE;
                         l_scheduled_start_date          pa_proj_elem_ver_schedule.scheduled_start_date%TYPE;
                         l_scheduled_finish_date         pa_proj_elem_ver_schedule.scheduled_finish_date%TYPE;
                         l_task_type_id                  pa_proj_elements.type_id%TYPE;
                    BEGIN

                         IF l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                            l_task_in_rec.pa_task_id IS NULL -- Create Task Context
                          THEN

                              -- If start date or end date is miss date, then set them to sysdate.
                              IF (l_task_in_rec.scheduled_start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE OR
                                  l_task_in_rec.scheduled_start_date is NULL ) --ADUT
                              THEN
                                l_scheduled_start_date := sysdate;
                              ELSE
                                l_scheduled_start_date := l_task_in_rec.scheduled_start_date;
                              END IF;

                              IF (l_task_in_rec.scheduled_finish_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE OR
                                  l_task_in_rec.scheduled_finish_date is NULL) --ADUT
                              THEN
                                l_scheduled_finish_date := sysdate;
                              ELSE
                                l_scheduled_finish_date := l_task_in_rec.scheduled_finish_date;
                              END IF;


                              -- If the task type for the current task is null, create_task api would have defaulted
                              -- it to the default task id. So get the default task type id if the passed in id is null.
                              IF l_task_in_rec.task_type = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM or
                                 l_task_in_rec.task_type is null
                              THEN
                                   l_task_type_id := l_default_task_type_id;
                              ELSE
                                   l_task_type_id := l_task_in_rec.task_type;
                              END IF;

                              -- Need to check if the project and the task type allows for planned work quantity. If not allowed then
                              -- set the value to null so that it can be passed on to create_schedule_version api.
                              IF ('N' = PA_TASK_TYPE_UTILS.check_tk_type_wq_enabled(l_task_type_id) OR
                                  'N' = PA_PROGRESS_UTILS.get_project_wq_flag(p_project_id))
                              THEN
                                  IF (l_task_in_rec.PLANNED_WORK_QUANTITY <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND
                                      l_task_in_rec.PLANNED_WORK_QUANTITY IS NOT NULL)
                                  THEN
                                      l_wq_planned_quantity := NULL;
                                  END IF;
                              ELSE
                                  --Added by rtarway, for 4029755
                                  IF (l_task_in_rec.PLANNED_WORK_QUANTITY <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND
                                      l_task_in_rec.PLANNED_WORK_QUANTITY IS NOT NULL)
                                  THEN
                                      l_wq_planned_quantity := l_task_in_rec.PLANNED_WORK_QUANTITY;
                                  ELSE
                                      l_wq_planned_quantity := NULL;
                                  END IF;
                                  --Added by rtarway, for 4029755

                              END IF;

                              --bug 3035902 maansari
                              IF pa_task_type_utils.check_tk_type_progressable(l_task_TYPE_ID) = 'Y'
                                 AND NVL( l_progressable_task, 'N' ) = 'N'
                              THEN
                                  l_progressable_task := 'Y';
                              END IF;
                              --end bug 3035902 maansari


                         ELSE /* in update task case */
                              --  Added for DFF attributes and to get pev_schedule_id and record version number

                              --Bug 6153503 Need to reopen again because changes to schedule version records by the
                              -- which is in between earlier open of the cursor and till this place.

                              OPEN cur_ver_sch_attr_rec(l_task_version_id);
                              FETCH cur_ver_sch_attr_rec INTO l_ver_sch_attr_rec;
                              CLOSE cur_ver_sch_attr_rec;

                              OPEN cur_task_type_id(l_task_in_rec.pa_task_id);
                              FETCH cur_task_type_id INTO l_task_type_id;
                              CLOSE cur_task_type_id;

                              IF ('N' = PA_TASK_TYPE_UTILS.check_tk_type_wq_enabled(l_task_type_id) OR
                                   'N' = PA_PROGRESS_UTILS.get_project_wq_flag(p_project_id)) THEN
                                            l_wq_planned_quantity := null;
                              ELSE
                                   IF (l_task_in_rec.PLANNED_WORK_QUANTITY = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                                       --Added by rtarway, for 4029755
                                       OR
                                       l_task_in_rec.PLANNED_WORK_QUANTITY IS NULL) THEN
                                         l_wq_planned_quantity := l_ver_sch_attr_rec.wq_planned_quantity;
                                   ELSE
                                         l_wq_planned_quantity := l_task_in_rec.PLANNED_WORK_QUANTITY;
                                   END IF;

                              END IF;

                              --bug 3035902 maansari
                              IF pa_task_type_utils.check_tk_type_progressable(l_task_TYPE_ID) = 'Y'
                                 AND NVL( l_progressable_task, 'N' ) = 'N'
                              THEN
                                  l_progressable_task := 'Y';
                              END IF;
                              --end bug 3035902 maansari


                         END IF; /* Before  calling PA_TASK_PUB1  Create_Schedule_Version or Update_Schedule_Version*/

                         -- set the following  after calling Create_Schedule_Version or Update_Schedule_Version
                         -- px_tasks_out_tbl(i).return_status

                         IF l_task_in_rec.pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                            l_task_in_rec.pa_task_id IS NULL -- Create Task Context
                          THEN
                              -- set the following  after calling api PA_TASK_PUB1.Create_Schedule_Version
                              -- px_tasks_out_tbl(i).return_status

                              -- Create a schedule version for the task version only if the workplan
                              -- structure is involved.

                              IF l_debug_mode = 'Y' THEN
                                 pa_debug.g_err_stage := 'Calling API create schedule version';
                                 pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                              END IF;

                              PA_TASK_PUB1.Create_Schedule_Version(
                                  p_element_version_id      => l_task_version_id
                                 ,p_init_msg_list               => FND_API.G_FALSE
                                 ,p_scheduled_start_date         => l_scheduled_start_date
                                 ,p_scheduled_end_date      => l_scheduled_finish_date
                                 ,p_calendar_id              => l_task_in_rec.calendar_id
                                 ,p_obligation_start_date       => l_task_in_rec.obligation_start_date
                                 ,p_obligation_end_date     => l_task_in_rec.obligation_finish_date
                                 ,p_actual_start_date       => l_task_in_rec.actual_start_date
                                 ,p_actual_finish_date      => l_task_in_rec.actual_finish_date
                                 ,p_estimate_start_date     => l_task_in_rec.estimated_start_date
                                 ,p_estimate_finish_date    => l_task_in_rec.estimated_finish_date
                                 ,p_duration                => l_task_in_rec.duration
                                 ,p_early_start_date        => l_task_in_rec.early_start_date
                                 ,p_early_end_date          => l_task_in_rec.early_finish_date
                                 ,p_late_start_date         => l_task_in_rec.late_start_date
                                 ,p_late_end_date           => l_task_in_rec.late_finish_date
                                 ,p_milestone_flag          => l_task_in_rec.milestone_flag
                                 ,p_critical_flag           => l_task_in_rec.critical_flag
                                 ,p_WQ_PLANNED_QUANTITY     => l_wq_planned_quantity
                                 ,p_PLANNED_EFFORT          => l_task_in_rec.planned_effort
                                 ,p_attribute_category      => l_attribute_category
                                 ,p_attribute1              => l_attribute1
                                 ,p_attribute2              => l_attribute2
                                 ,p_attribute3              => l_attribute3
                                 ,p_attribute4              => l_attribute4
                                 ,p_attribute5              => l_attribute5
                                 ,p_attribute6              => l_attribute6
                                 ,p_attribute7              => l_attribute7
                                 ,p_attribute8              => l_attribute8
                                 ,p_attribute9              => l_attribute9
                                 ,p_attribute10             => l_attribute10
                                 --Bug 6153503
                                 ,p_attribute11             => l_attribute11
                                 ,p_attribute12             => l_attribute12
                                 ,p_attribute13             => l_attribute13
                                 ,p_attribute14             => l_attribute14
                                 ,p_attribute15             => l_attribute15
                                 ,x_pev_schedule_id         => l_dummy_number
                                 ,x_return_status           => x_return_status
                                 ,x_msg_count               => x_msg_count
                                 ,x_msg_data                => x_msg_data
-- (Begin Venkat) new params for bug #3652460 ----------------------------------------------
                                 ,p_ext_act_duration    => l_task_in_rec.ext_act_duration
                                 ,p_ext_remain_duration => l_task_in_rec.ext_remain_duration
                                 ,p_ext_sch_duration    => l_task_in_rec.ext_sch_duration
-- (End Venkat) new params for bug #3652460 ------------------------------------------------
-- begin Bug 3654243 -----------------------------------------------------------------------
                ,p_def_sch_tool_tsk_type_code =>   l_task_in_rec.sch_tool_tsk_type_code
                ,p_constraint_type_code  =>        l_task_in_rec.constraint_type_code
                ,p_constraint_date =>              l_task_in_rec.constraint_date
                ,p_free_slack =>                   l_task_in_rec.free_slack
                ,p_total_slack =>                  l_task_in_rec.total_slack
                ,p_effort_driven_flag =>           l_task_in_rec.effort_driven_flag
                ,p_level_assignments_flag =>       l_task_in_rec.level_assignments_flag
-- end Bug 3654243 -------------------------------------------------------------------------
                              );

                              px_tasks_out_tbl(i).return_status       := x_return_status;
                              IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                   IF l_debug_mode = 'Y' THEN
                                      pa_debug.g_err_stage := 'Error calling create schedule version : ' || l_task_version_id ;
                                      pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                                   END IF;

                                   PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                                        ,p_msg_name       => 'PA_PS_NO_TASK_SCH_VER_CREATED');
                                   RAISE Invalid_Arg_Exc_WP;
                              END IF;

                              IF l_debug_mode = 'Y' THEN
                                 pa_debug.g_err_stage := 'Schedule Version id : ' || l_dummy_number ;
                                 pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level3);
                              END IF;
                              --rtarway, 4099429 begin
			      -- Bug 7109656
                               if (l_task_in_rec.planned_effort is not null and l_task_in_rec.planned_effort <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  and l_task_in_rec.planned_effort <> '0' ) THEN
                                  if (l_add_task_ver_ids.count = 1000) then
                                        IF l_add_task_ver_ids.exists(1) AND l_structure_version_id IS NOT NULL THEN
                                             BEGIN

                                                   pa_fp_planning_transaction_pub.add_planning_transactions(
                                                      p_context                      => 'WORKPLAN'
                                                     ,p_project_id                   => p_project_id
                                                     ,p_struct_elem_version_id       => l_structure_version_id
                                                     ,p_task_elem_version_id_tbl     => l_add_task_ver_ids
                                                     ,p_planned_people_effort_tbl    => l_add_planned_effort
                                                     ,p_start_date_tbl               => l_add_start_date
                                                     ,p_end_date_tbl                 => l_add_end_date
                                                     ,p_pm_product_code              => l_pm_product_code
                                                     ,x_return_status                => l_return_status
                                                     ,x_msg_count                    => l_msg_count
                                                     ,x_msg_data                     => l_msg_data
                                                    );

                                             EXCEPTION
                                                  WHEN OTHERS THEN
                                                  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJECT_PUB',
                                                                         p_procedure_name => 'PROCESS_TASK_STRUCTURE_BULK',
                                                                         p_error_text     => SUBSTRB('pa_fp_planning_transaction_pub.add_planning_transactions:'||SQLERRM,1,240));
                                                  raise  fnd_api.g_exc_error;
                                             END;

                                             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                                  x_msg_count := FND_MSG_PUB.count_msg;
                                                  raise fnd_api.g_exc_error;
                                             END IF;
                                       END IF; -- if l_add_task_ver_ids.exists(1) ends here
                                        l_add_task_ver_ids.delete;
                                        l_add_planned_effort.delete;
                                        l_add_start_date.delete;
                                        l_add_end_date.delete;
                                        l_pm_product_code.delete;
                                  end if;-- if (l_add_task_ver_ids.count = 1000)....ends here
                                   --rtarway,

                                    l_add_task_ver_ids.extend(1);
                                    l_add_planned_effort.extend(1);
                                    l_add_start_date.extend(1);
                                    l_add_end_date.extend(1);
                                    l_pm_product_code.extend(1);

                                    l_add_task_ver_ids(l_add_task_ver_ids.count):= px_tasks_out_tbl(i).task_version_id;
                                    l_add_planned_effort(l_add_planned_effort.count):= l_task_in_rec.planned_effort;
                                    l_add_start_date(l_add_start_date.count):= l_task_in_rec.scheduled_start_date;
                                    l_add_end_date(l_add_end_date.count):= l_task_in_rec.scheduled_finish_date;
                                    l_pm_product_code(l_pm_product_code.count) := p_pm_product_code;
                              end if;-- if l_task_in_rec.planned_effort is not null....ends here
                              --rtarway, 4099429 end


                         ELSE -- in update task case
                              -- set the following  after calling api PA_TASK_PUB1.Update_Schedule_Version
                              -- px_tasks_out_tbl(i).return_status


                              PA_TASK_PUB1.G_CALL_PJI_ROLLUP := 'N';  --bug 4145893 do not call PJI.plan_update api
                                                                     --if tasks are updated in bulk.
                                                                     --This should set for every single task.
                              PA_TASK_PUB1.Update_Schedule_Version(
                                         p_calling_module          => p_calling_module
                                        ,p_init_msg_list           => FND_API.G_FALSE
                                        ,p_pev_schedule_id         => l_ver_sch_attr_rec.pev_schedule_id
                                        ,p_calendar_id             => l_task_in_rec.calendar_id
                                        ,p_scheduled_start_date    => l_task_in_rec.scheduled_start_date
                                        ,p_scheduled_end_date      => l_task_in_rec.scheduled_finish_date
                                        ,p_obligation_start_date   => l_task_in_rec.obligation_start_date
                                        ,p_obligation_end_date     => l_task_in_rec.obligation_finish_date
                                        ,p_actual_start_date       => l_task_in_rec.actual_start_date
                                        ,p_actual_finish_date      => l_task_in_rec.actual_finish_date
                                        ,p_estimate_start_date     => l_task_in_rec.estimated_start_date
                                        ,p_estimate_finish_date    => l_task_in_rec.estimated_finish_date
                                        ,p_duration                => l_task_in_rec.duration
                                        ,p_early_start_date        => l_task_in_rec.early_start_date
                                        ,p_early_end_date          => l_task_in_rec.early_finish_date
                                        ,p_late_start_date         => l_task_in_rec.late_start_date
                                        ,p_late_end_date           => l_task_in_rec.late_finish_date
                                        ,p_milestone_flag          => l_task_in_rec.milestone_flag
                                        ,p_critical_flag           => l_task_in_rec.critical_flag
                                        ,p_WQ_PLANNED_QUANTITY     => l_wq_planned_quantity
                                        ,p_PLANNED_EFFORT          => l_task_in_rec.planned_effort
                                        ,p_record_version_number   => l_ver_sch_attr_rec.record_version_number
                                        --Bug 6153503
                                        ,p_attribute_category      => l_attribute_category
                                        ,p_attribute1              => l_attribute1
                                        ,p_attribute2              => l_attribute2
                                        ,p_attribute3              => l_attribute3
                                        ,p_attribute4              => l_attribute4
                                        ,p_attribute5              => l_attribute5
                                        ,p_attribute6              => l_attribute6
                                        ,p_attribute7              => l_attribute7
                                        ,p_attribute8              => l_attribute8
                                        ,p_attribute9              => l_attribute9
                                        ,p_attribute10             => l_attribute10
                                        ,p_attribute11             => l_attribute11
                                        ,p_attribute12             => l_attribute12
                                        ,p_attribute13             => l_attribute13
                                        ,p_attribute14             => l_attribute14
                                        ,p_attribute15             => l_attribute15
                                        ,x_return_status           => x_return_status
                                        ,x_msg_count               => x_msg_count
                                        ,x_msg_data                => x_msg_data
-- (Begin Venkat) new params for bug #3652460 ----------------------------------------------
                    ,p_ext_act_duration => l_task_in_rec.ext_act_duration
                    ,p_ext_remain_duration  => l_task_in_rec.ext_remain_duration
                    ,p_ext_sch_duration => l_task_in_rec.ext_sch_duration
-- (End Venkat) new params for bug #3652460 -------------------------------------------------

-- begin Bug 3654243 -----------------------------------------------------------------------
                    ,p_def_sch_tool_tsk_type_code =>   l_task_in_rec.sch_tool_tsk_type_code
                    ,p_constraint_type_code  =>        l_task_in_rec.constraint_type_code
                    ,p_constraint_date =>              l_task_in_rec.constraint_date
                    ,p_free_slack =>                   l_task_in_rec.free_slack
                    ,p_total_slack =>                  l_task_in_rec.total_slack
                    ,p_effort_driven_flag =>           l_task_in_rec.effort_driven_flag
                    ,p_level_assignments_flag =>       l_task_in_rec.level_assignments_flag
-- end Bug 3654243 -------------------------------------------------------------------------

                                        );

                              --bug 4149392
                              PA_TASK_PUB1.G_CALL_PJI_ROLLUP := NULL;
                              --end bug 4149392

                              px_tasks_out_tbl(i).return_status       := x_return_status;

                              IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                   IF l_debug_mode = 'Y' THEN
                                         pa_debug.g_err_stage := 'Error calling update schedule version : ' || l_task_version_id ;
                                         pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                                   END IF;

                                   PA_UTILS.ADD_MESSAGE( p_app_short_name    => 'PA'
                                                           ,p_msg_name       => 'PA_PS_TASK_NOT_UPDATED'
                               /* ADDED PROJECT_ID AND TASK_ID TOKENS FOR BUG 4219451 */
                               ,p_token1         => 'PROJECT'
                               ,p_value1         => p_project_id
                               ,p_token2         => 'TASK'
                               ,p_value2        => l_task_in_rec.pa_task_id
                               );
                                   RAISE Invalid_Arg_Exc_WP;
                              END IF;

                              IF l_debug_mode = 'Y' THEN
                                   pa_debug.g_err_stage := 'Schedule Version id : ' || l_ver_sch_attr_rec.pev_schedule_id ;
                                   pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level3);
                              END IF;

                        -- Start Addition 6458891
                        l_update_task_det_flag := 'Y';
                        If nvl(p_pm_product_code,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                           and nvl(p_pm_product_code,'X') = 'MSPROJECT'  then
                                l_prev_planned_effort := null;
                                l_prev_etc_effort     := null;
                                l_prev_percent_comp   := null;
                                l_update_task_det_flag:= 'N';

                                -- Bug 7158172
                                OPEN cur_prev_prog(p_project_id,l_task_id,l_task_version_id);
                                FETCH cur_prev_prog INTO l_prev_planned_effort, l_prev_etc_effort,l_prev_percent_comp;
                                CLOSE cur_prev_prog;

                                IF (NVL(l_task_in_rec.planned_effort, 0) <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND
                                    NVL(l_task_in_rec.planned_effort, 0) <> NVL(l_prev_planned_effort,0)) THEN
                                        l_update_task_det_flag := 'Y';
                                END IF;

                                IF (NVL(l_task_in_rec.etc_effort, 0) <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND
                                    NVL(l_task_in_rec.etc_effort, 0) <> NVL(l_prev_etc_effort,0)) THEN
                                        l_update_task_det_flag := 'Y';
                                END IF;

                                IF (NVL(l_task_in_rec.percent_complete, 0) <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND
                                    NVL(l_task_in_rec.percent_complete, 0) <> NVL(l_prev_percent_comp,0)) THEN
                                        l_update_task_det_flag := 'Y';
                                END IF;
                                -- Bug 7132911

                                /* Commented for bug 7132911
                                If (nvl(l_task_in_rec.planned_effort,0)<> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                                    or
                                    nvl(l_task_in_rec.etc_effort,0)<> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                                    or
                                    nvl(l_task_in_rec.percent_complete,0)<> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                                Then

                                        open cur_prev_prog(p_project_id,l_task_id,l_task_version_id);
                                        fetch cur_prev_prog into l_prev_planned_effort, l_prev_etc_effort,l_prev_percent_comp;
                                        close cur_prev_prog;
                                        If nvl(l_task_in_rec.planned_effort,0) <> nvl(l_prev_planned_effort,0)
                                                or
                                                nvl(l_task_in_rec.etc_effort,0)<> nvl(l_prev_etc_effort,0)
                                                or
                                                nvl(l_task_in_rec.percent_complete,0)<> nvl(l_prev_percent_comp,0)
                                                Then
                                                l_update_task_det_flag :='Y';
                                        end if;
                                end if;
                                */
                        end if;
                        --  End addition for bug 6458891

                              --Added by rtarway for BUG 39198900
                              IF p_calling_module <> 'FORMS' and l_update_task_det_flag = 'Y' THEN  /* Added flag check for Bug 6458891 */
                                       pa_task_pub1.update_task_det_sch_info(
                                        p_calling_module    =>      p_calling_module
                                       ,p_task_ver_id      =>  l_task_version_id
                                       ,p_project_id       =>  p_project_id
                                       ,p_planned_effort   =>      l_task_in_rec.planned_effort
                                       ,p_ETC_effort       =>  l_task_in_rec.etc_effort
                                       ,p_structure_version_id => l_structure_version_id
                                       ,p_percent_complete =>  l_task_in_rec.percent_complete
                                       ,x_return_status    =>  x_return_status
                                       ,x_msg_count        =>  x_msg_count
                                       ,x_msg_data     =>  x_msg_data
                                       );
                              END IF;
                              --End Added by rtarway for BUG 39198900

                         END IF; --end for p_tasks_in(i).pa_task_id is null
                    END;
               END IF; --END IF For IF p_is_wp_separate_from_fn = 'N' OR (p_is_wp_separate_from_fn = 'Y' and p_structure_type = 'WORKPLAN')

          END LOOP; -- loop through the input tasks table.
     END IF; -- nvl(p_tasks_in_tbl.last,0) > 0
-------------------------------------------------
/** Code change begin for Bug   4120380 **/
/** The code below will update the task_numbers of the tasks passed via update_project script
back to their original value viz. it'll crop the '-' added to aviod the constraint check in
PA_TASKS and PA_PROJ_ELEMENTS. **/
/* bug#5243018 : Reverting the fix in Bug 4120380
IF nvl(p_tasks_in_tbl.last,0) > 0 THEN --IF Added by rtarway for BUG 4336701
    FOR i in p_tasks_in_tbl.first..p_tasks_in_tbl.last LOOP
        UPDATE pa_proj_elements
        SET element_number = p_tasks_in_tbl(i).pa_task_number
        WHERE element_number = '-'||p_tasks_in_tbl(i).pa_task_number
        AND PROJECT_ID = p_project_id;
        UPDATE pa_tasks
        SET task_number = p_tasks_in_tbl(i).pa_task_number
        WHERE task_number = '-'||p_tasks_in_tbl(i).pa_task_number
        AND PROJECT_ID = p_project_id;
        --dbms_output.put_line(('value of recod updates in pa_proj_elements'||sql%rowcount);
    END LOOP;
END IF;
	 End Reverting bug#5243018*/
/* Code change end for Bug 4120380 **/
---------------------------------------------------
     --Start of Changes for bug 3057575
     -- Here we check that while updating a project any of the tasks are missed while passing to update_project
       IF nvl(task_ver_id_passed_tbl.last,0) > 0 THEN  -- Added for bug 3719758
        IF (p_structure_version_id IS NOT NULL) THEN
             OPEN cur_all_task_ver_id(l_structure_version_id);
         Loop
            FETCH cur_all_task_ver_id into row_task_ver_id;
            EXIT WHEN  cur_all_task_ver_id%NOTFOUND;
            IF  NOT(task_ver_id_passed_tbl.EXISTS(row_task_ver_id.element_version_id)) THEN

                               OPEN  cur_ver_id_to_task_num(row_task_ver_id.element_version_id);
                   FETCH cur_ver_id_to_task_num INTO l_err_task_number;
                   CLOSE cur_ver_id_to_task_num;

                               PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                                    ,p_msg_name       => 'PA_TASK_MISS_IN_HIERARCHY_ORD'
                            ,p_token1         => 'TASK'
                            ,p_value1         => l_err_task_number);

                                   RAISE Invalid_Arg_Exc_WP;
            End if;
         END LOOP;
         CLOSE cur_all_task_ver_id;
    END IF;
      End If;  -- Added for bug 3719758
     --End of Changes for bug 3057575

     -- Bug 3075609. For some of the tasks the peer task could have moved out of the branch. In this case
     -- we will set the first progress enabled task of the parent to 100 and the rest to 0. If any concerns
     -- are raised regarding this, we will modify the logic so as to recalculate the weightage of the tasks
     -- as per the requirements then.
     -- The following is not wrapped with the l_maintain_weightages flag as if the flag is 'N' the plsql table
     -- of records will be null and no processing will be done.
     DECLARE
          -- This cursor will get the relationship id and the progress enabled flag which will be used to
          -- reassign the task weightages for the affected peer tasks.
          CURSOR cur_get_child_info(c_parent_element_version_id NUMBER)
          IS
          SELECT rel.OBJECT_RELATIONSHIP_ID,tt.prog_entry_enable_flag
          FROM   PA_OBJECT_RELATIONSHIPS rel, pa_proj_element_versions pev, pa_proj_elements pe, pa_task_types tt
          WHERE  rel.object_id_from1 = c_parent_element_version_id
          AND    rel.object_type_to = 'PA_TASKS'
          AND    rel.relationship_type = 'S'
          AND    rel.object_type_from IN ('PA_STRUCTURES', 'PA_TASKS')
          AND    rel.object_id_to1 = pev.element_version_id
          AND    pev.proj_element_id = pe.proj_element_id
          AND    tt.object_type    = 'PA_TASKS' /* bug 3279978 FP M Enhancement */
          AND    pe.type_id = tt.task_type_id;

          TYPE obj_rel_id_tbl is table of pa_object_relationships.object_relationship_id%TYPE
               INDEX BY BINARY_INTEGER;

          l_parent_version_id           pa_proj_element_versions.element_version_id%TYPE;
          l_prog_entry_enable_flag_tbl  PA_PLSQL_DATATYPES.Char1TabTyp;
          l_obj_rel_id_tbl              obj_rel_id_tbl;
          l_plsql_max_array_size        CONSTANT NUMBER  := 200; -- limiting the max fetch size
          l_task_weightage_tbl          weighting_percentage_tbl;
          l_weightage_set_flag          VARCHAR2(1);
     BEGIN
          IF nvl(l_affected_parents_tbl.last,0) > 0 THEN -- only if tasks have moved do the processing
               FOR l_parent_version_id in l_affected_parents_tbl.first..l_affected_parents_tbl.last LOOP
                    l_weightage_set_flag := 'N';
                    OPEN cur_get_child_info(l_parent_version_id);
                    LOOP
                         FETCH  cur_get_child_info BULK COLLECT INTO
                                       l_obj_rel_id_tbl
                                      ,l_prog_entry_enable_flag_tbl
                         LIMIT  l_plsql_max_array_size;

                         IF l_debug_mode = 'Y' THEN
                              pa_debug.g_err_stage:= 'Fetched ' || cur_get_child_info%rowcount || ' records for processing';
                              pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
                         END IF;

                         IF nvl(l_obj_rel_id_tbl.last,0) > 0 THEN -- only if something is fetched do the processing
                              FOR i in l_obj_rel_id_tbl.first..l_obj_rel_id_tbl.last LOOP
                                   -- Set the weightage for the first progress enabled task to 100 and rest to 0.
                                   IF l_prog_entry_enable_flag_tbl(i) = 'Y' and l_weightage_set_flag = 'N' THEN
                                        l_task_weightage_tbl(i) := 100;
                                        l_weightage_set_flag := 'Y';
                                   ELSE
                                        l_task_weightage_tbl(i) := 0;
                                   END IF;
                              END LOOP;
                              -- update back the records.
                              FORALL i in l_obj_rel_id_tbl.first..l_obj_rel_id_tbl.last
                                   UPDATE pa_object_relationships
                                   set weighting_percentage = l_task_weightage_tbl(i)
                                   where object_relationship_id = l_obj_rel_id_tbl(i);
                         END IF;
                         EXIT WHEN nvl(l_obj_rel_id_tbl.last,0) < l_plsql_max_array_size;
                    END LOOP;
                    CLOSE cur_get_child_info;
               END LOOP;
          END IF;
     EXCEPTION
          WHEN OTHERS THEN
               IF cur_get_child_info%ISOPEN THEN
                    close cur_get_child_info;
               END IF;
               RAISE;
     END;

     -- Siva: Call the set_update_wbs_flag api here after the processing is completed for all the tasks.

               --bug 3010538
               IF l_WBS_changed_flag = 'Y'
               THEN

                   --3035902: process update flag changes
                   --Bug No 3450684 SMukka Commented if condition
                   --IF NOT ( p_structure_type = 'WORKPLAN' AND
                   --         p_is_wp_separate_from_fn = 'Y' AND
                   --         ( PA_PROGRESS_UTILS.GET_TASK_WEIGHTING_BASIS(p_project_id) = 'MANUAL' OR
                   --           NVL( l_progressable_task, 'N' ) = 'N' ))
                   --THEN
                         PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG
                       (
                          p_calling_context       => 'AMG'
                         ,p_project_id            => p_project_id
                         ,p_structure_version_id  => l_structure_version_id
                         ,p_update_wbs_flag       => 'Y'
                         ,x_return_status         => l_return_status
                         ,x_msg_count             => l_msg_count
                         ,x_msg_data              => l_msg_data);

                         if l_return_status <> FND_API.G_RET_STS_SUCCESS then
                            Raise Invalid_Arg_Exc_WP;
                         end if;
                   --END IF;

                   IF p_structure_type = 'FINANCIAL'
                   THEN
                       IF ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'N' OR
                            PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'Y' OR
                            ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
                              PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N' AND
                              PA_PROJECT_PUB.G_Published_version_exists = 'N' ) )
                       THEN
                            pa_fp_refresh_elements_pub.set_process_flag_proj(
                               p_project_id               => p_project_id
                              ,p_request_id               => null
                              ,p_process_code             => null
                              ,p_refresh_required_flag    => 'Y'
                              ,x_return_status            => l_return_status
                              ,x_msg_count                => l_msg_count
                              ,x_msg_data                 => l_msg_data );

                            if l_return_status <> FND_API.G_RET_STS_SUCCESS then
                               Raise Invalid_Arg_Exc_WP;
                            end if;
                       END IF;
                   END IF;
               END IF;
               --end bug 3010538

     -- Do task status rollup, date rollup and recalculation of task weightings
     -- if the workplan structure is involved.
     IF p_is_wp_separate_from_fn = 'N' OR
        (p_is_wp_separate_from_fn = 'Y' and p_structure_type = 'WORKPLAN')
     THEN
          -- Call task status rollup with element version id as null so that rollup
          -- happens for the entire version. Status rollup needs to be done only if
          -- versioning is not enabled.
          IF p_is_wp_versioning_enabled = 'N' THEN

               IF l_debug_mode = 'Y' THEN
                  pa_debug.g_err_stage := 'Calling API Task status rollup';
                  pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
               END IF;

               PA_STRUCT_TASK_ROLLUP_PUB.Task_Status_Rollup(
                      p_structure_version_id => l_structure_version_id
                     ,p_element_version_id   => null
                     ,x_return_status        => x_return_status
                     ,x_msg_count            => x_msg_count
                     ,x_msg_data             => x_msg_data
               );

               IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    IF l_debug_mode = 'Y' THEN
                       pa_debug.g_err_stage := 'Error in task status rollup : ' || l_structure_version_id ;
                       pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                    END IF;
                    Raise Invalid_Arg_Exc_WP;
               END IF;


          END IF; -- p_is_wp_versioning_enabled = 'N'



          -- Rollup dates.
          IF l_debug_mode = 'Y' THEN
             pa_debug.g_err_stage := 'Calling API rollup dates';
             pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
          END IF;
          --Bug3802469, rtarway, this should not be called if px_tasks_out_tbl is empty, this will be empty,
          --if no tasks are passed , this will be empty,
          IF ( px_tasks_out_tbl IS NOT NULL AND px_tasks_out_tbl.count > 0)
          THEN
               PA_PROJ_TASK_STRUC_PUB.rollup_dates(
                     p_tasks_in             => px_tasks_out_tbl
                    ,p_task_version_id      => null
                    ,p_project_id           => p_project_id
                    ,P_structure_version_id => null
                    ,x_msg_count            => x_msg_count
                    ,x_msg_data             => x_msg_data
                    ,x_return_status        => x_return_status
               );
               IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    IF l_debug_mode = 'Y' THEN
                       pa_debug.g_err_stage := 'Error in rollup dates : ' || l_structure_version_id ;
                       pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                    END IF;
                    Raise Invalid_Arg_Exc_WP;
               END IF;
          END IF;
          --Bug3802469, rtarway

           l_task_weight_basis_code := PA_PROGRESS_UTILS.GET_TASK_WEIGHTING_BASIS(p_project_id => p_project_id) ;

          -- Recalculate the task weightings.
          IF nvl(l_task_weight_basis_code,'-1') = 'MANUAL' AND
             (l_new_structure_version = 'Y' OR                   -- Bug 3075609. Recalculate the task weightings only if it is a
              nvl(p_create_task_versions_only,'N') = 'Y') THEN   -- new structure version. Otherwise donot.
               IF l_debug_mode = 'Y' THEN
                  pa_debug.g_err_stage := 'Calling API recalculate task weightings';
                  pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
               END IF;
               --Bug3802469, rtarway, this should not be called if px_tasks_out_tbl is empty, this will be empty,
               --if no tasks are passed , this will be empty,
               IF ( px_tasks_out_tbl IS NOT NULL AND px_tasks_out_tbl.count > 0)
               THEN
                    PA_PROJ_TASK_STRUC_PUB.recalc_task_weightings(
                          p_tasks_in             => px_tasks_out_tbl
                         ,p_task_version_id      => null
                         ,x_msg_count            => x_msg_count
                         ,x_msg_data             => x_msg_data
                         ,x_return_status        => x_return_status
                    );
                    IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                         IF l_debug_mode = 'Y' THEN
                            pa_debug.g_err_stage := 'Error in recalculate task weightings : ' || l_structure_version_id ;
                            pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                         END IF;
                         Raise Invalid_Arg_Exc_WP;
                    END IF;
               END IF;
               --Bug3802469, rtarway, IF(null != px_tasks_out_tbl...
          END IF ;

     END IF; -- p_is_wp_separate_from_fn = 'N' OR (p_is_wp_separate_from_fn = 'Y' and p_structure_type = 'WORKPLAN')

     -- PA L Changes 3010538

   IF  ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'N' ) OR
       ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
         PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'  AND
         PA_PROJECT_PUB.G_Published_version_exists = 'N')
   THEN

   -- Changed p_structure_version_id to l_structure_version_id Bug 3035902.
   l_update_wbs_flag := PA_PROJECT_STRUCTURE_UTILS.GET_UPDATE_WBS_FLAG(p_project_id => p_project_id
                                                                       ,p_structure_version_id => l_structure_version_id ) ;
   IF nvl(l_update_wbs_flag,'N') = 'Y' THEN
        IF p_process_mode = 'ONLINE' THEN

               IF l_debug_mode = 'Y' THEN
                  pa_debug.g_err_stage := 'Calling API PROCESS_WBS_UPDATES';
                  pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
               END IF;

             -- Changed p_structure_version_id to l_structure_version_id Bug 3035902.
             -- Instead of using local variables, used the out parameters for the standard parameters.

             PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES(p_calling_context      => 'ONLINE_UPDATE'
                                                       ,p_project_id           => p_project_id
                                                       ,p_structure_version_id => l_structure_version_id
                                                       ,x_return_status        => x_return_status
                                                       ,x_msg_count            => x_msg_count
                                                       ,x_msg_data             => x_msg_data ) ;

             -- Changed the way in which the error is handled.
             IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  IF l_debug_mode = 'Y' THEN
                     pa_debug.g_err_stage := 'Error in process_wbs_updates : ';
                     pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                  END IF;
                  Raise Invalid_Arg_Exc_WP;
             END IF;

        ELSIF p_process_mode = 'CONCURRENT' THEN

               IF l_debug_mode = 'Y' THEN
                  pa_debug.g_err_stage := 'Calling API PROCESS_WBS_UPDATES_CONC_WRP';
                  pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
               END IF;

             -- Changed p_structure_version_id to l_structure_version_id Bug 3035902.
             -- Instead of using local variables, used the out parameters for the standard parameters.
             PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_CONC_WRP(p_calling_context       => 'CONC_UPDATE'
                                                                 ,p_project_id            => p_project_id
                                                                 ,p_structure_version_id  => l_structure_version_id
                                                                 ,x_return_status         => x_return_status
                                                                 ,x_msg_count             => x_msg_count
                                                                 ,x_msg_data              => x_msg_data ) ;
             -- Changed the way in which the error is handled.
             IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  IF l_debug_mode = 'Y' THEN
                     pa_debug.g_err_stage := 'Error in process_wbs_updates_conc_wrp : ';
                     pa_debug.write(l_module_name,pa_debug.g_err_stage,l_debug_level4);
                  END IF;
                  Raise Invalid_Arg_Exc_WP;
             END IF;

        END IF ;
     END IF ;
   END IF ;

--Amit : Bug 3964548 Begin

     IF l_debug_mode = 'Y' THEN
        Pa_Debug.g_err_stage:= 'Calling FP add_planning Txn APIs';
        Pa_Debug.WRITE(G_PKG_NAME,Pa_Debug.g_err_stage,l_debug_level3);
        Pa_Debug.WRITE(G_PKG_NAME,'p_structure_type='||p_structure_type,l_debug_level3);
        Pa_Debug.WRITE(G_PKG_NAME,'p_is_wp_separate_from_fn='||p_is_wp_separate_from_fn,l_debug_level3);
        Pa_Debug.WRITE(G_PKG_NAME,'p_tasks_in_tbl.count='||p_tasks_in_tbl.count,l_debug_level3);
        Pa_Debug.WRITE(G_PKG_NAME,'p_structure_version_id='||p_structure_version_id,l_debug_level3);
        Pa_Debug.WRITE(G_PKG_NAME,'l_structure_version_id='||l_structure_version_id,l_debug_level3);
     END IF;

   IF ((p_structure_type = 'WORKPLAN' AND p_is_wp_separate_from_fn = 'Y') OR p_is_wp_separate_from_fn = 'N' ) THEN
    -- 4198962 Moved call of add_planning_transactions before population of l_del_task_ver_ids
    IF l_add_task_ver_ids.exists(1) AND l_structure_version_id IS NOT NULL THEN
        BEGIN
             pa_fp_planning_transaction_pub.add_planning_transactions(
                p_context                      => 'WORKPLAN'
               ,p_project_id                   => p_project_id
               ,p_struct_elem_version_id       => l_structure_version_id
               ,p_task_elem_version_id_tbl     => l_add_task_ver_ids
               ,p_planned_people_effort_tbl    => l_add_planned_effort
               ,p_start_date_tbl               => l_add_start_date
               ,p_end_date_tbl                 => l_add_end_date
               ,p_pm_product_code              => l_pm_product_code
               ,x_return_status                => l_return_status
               ,x_msg_count                    => l_msg_count
               ,x_msg_data                     => l_msg_data
              );
        EXCEPTION
            WHEN OTHERS THEN
            fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJECT_PUB',
                                      p_procedure_name => 'PROCESS_TASK_STRUCTURE_BULK',
                                      p_error_text     => SUBSTRB('pa_fp_planning_transaction_pub.add_planning_transactions:'||SQLERRM,1,240));
            raise  fnd_api.g_exc_error;
        END;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_msg_count := FND_MSG_PUB.count_msg;
            raise fnd_api.g_exc_error;
        END IF;
    END IF; -- l_add_task_ver_ids.exists(1) THEN

    IF nvl(p_tasks_in_tbl.LAST,0) > 0 THEN
        FOR l_i in p_tasks_in_tbl.first .. p_tasks_in_tbl.last LOOP
            --rtarway, 4099429, begin comment
               /*IF p_tasks_in_tbl(l_i).pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
               p_tasks_in_tbl(l_i).pa_task_id IS NULL -- Create Task Context
            THEN
                l_add_plan_task_id := null;
                IF p_structure_version_id is not null THEN -- Update Project Context
                    OPEN cur_wp_task_csr_duplicate(p_project_id,p_tasks_in_tbl(l_i).pm_task_reference);
                    FETCH cur_wp_task_csr_duplicate INTO l_add_plan_task_id;
                    CLOSE cur_wp_task_csr_duplicate;
                END IF;

                IF l_debug_mode = 'Y' THEN
                    Pa_Debug.WRITE(G_PKG_NAME,'Create Task Context',l_debug_level3);
                END IF;
                IF PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(px_tasks_out_tbl(l_i).task_version_id) = 'Y'
                AND pa_task_assignment_utils.check_asgmt_exists_in_task(px_tasks_out_tbl(l_i).task_version_id) = 'N'
                THEN
                    IF l_debug_mode = 'Y' THEN
                        Pa_Debug.WRITE(G_PKG_NAME,'Lowest Task With No Assignments',l_debug_level3);
                    END IF;

                    IF p_tasks_in_tbl(l_i).planned_effort IS NOT NULL AND p_tasks_in_tbl(l_i).planned_effort <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                       AND l_add_plan_task_id IS NULL
                    THEN
                        IF l_debug_mode = 'Y' THEN
                            Pa_Debug.WRITE(G_PKG_NAME,'Preparing Tables to call FP add_plan_txn',l_debug_level3);
                        END IF;

                        l_add_task_ver_ids.extend(1);
                        l_add_planned_effort.extend(1);
                        l_add_start_date.extend(1);
                        l_add_end_date.extend(1);
                        l_pm_product_code.extend(1);

                        l_add_task_ver_ids(l_add_task_ver_ids.count):= px_tasks_out_tbl(l_i).task_version_id;
                        l_add_planned_effort(l_add_planned_effort.count):= p_tasks_in_tbl(l_i).planned_effort;
                        l_add_start_date(l_add_start_date.count):= p_tasks_in_tbl(l_i).scheduled_start_date;
                        l_add_end_date(l_add_end_date.count):= p_tasks_in_tbl(l_i).scheduled_finish_date;
                        l_pm_product_code(l_pm_product_code.count) := p_pm_product_code;
                        IF l_debug_mode = 'Y' THEN
                            Pa_Debug.WRITE(G_PKG_NAME,'l_add_task_ver_ids='||l_add_task_ver_ids(l_add_task_ver_ids.count),l_debug_level3);
                            Pa_Debug.WRITE(G_PKG_NAME,'l_add_planned_effort='||l_add_planned_effort(l_add_planned_effort.count),l_debug_level3);
                            Pa_Debug.WRITE(G_PKG_NAME,'l_add_start_date='||l_add_start_date(l_add_start_date.count),l_debug_level3);
                            Pa_Debug.WRITE(G_PKG_NAME,'l_add_end_date='||l_add_end_date(l_add_end_date.count),l_debug_level3);
                            Pa_Debug.WRITE(G_PKG_NAME,'l_pm_product_code='||l_pm_product_code(l_pm_product_code.count),l_debug_level3);
                        END IF;
                    END IF;
                --As per discussion with Amit we will never enter this else part
                ELSE
                    IF l_debug_mode = 'Y' THEN
                        Pa_Debug.WRITE(G_PKG_NAME,'Preparing Tables to call FP delete_plan_txn',l_debug_level3);
                    END IF;
                    l_del_task_ver_ids.extend(1);
                    l_del_task_ver_ids(l_del_task_ver_ids.count):= px_tasks_out_tbl(l_i).task_version_id;
                END IF;
            ELSE -- Update Task Context
                IF l_debug_mode = 'Y' THEN
                    Pa_Debug.WRITE(G_PKG_NAME,'Update Task Context',l_debug_level3);
                END IF;

                -- Bug 4078307: Changes start
                -- In update task flow we should be deleting all task assignments for summary-level tasks
                IF PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(px_tasks_out_tbl(l_i).task_version_id) = 'N'
                AND pa_task_assignment_utils.check_asgmt_exists_in_task(px_tasks_out_tbl(l_i).task_version_id) = 'Y'
                THEN
                    IF l_debug_mode = 'Y' THEN
                        Pa_Debug.WRITE(G_PKG_NAME,'Preparing Tables to call FP delete_plan_txn for summary task in update flow',l_debug_level3);
                    END IF;

                    l_del_task_ver_ids.extend(1);
                    l_del_task_ver_ids(l_del_task_ver_ids.count):= px_tasks_out_tbl(l_i).task_version_id;
                END IF;


                IF PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(px_tasks_out_tbl(l_i).task_version_id) = 'Y'
                AND pa_task_assignment_utils.check_asgmt_exists_in_task(px_tasks_out_tbl(l_i).task_version_id) = 'N'
                THEN
                    -- We do not have to call update_planning_transaction here bcoz
                    -- update_schedule_version is already calling it.
                    null;
                ELSE
                    IF l_debug_mode = 'Y' THEN
                        Pa_Debug.WRITE(G_PKG_NAME,'Preparing Tables to call FP delete_plan_txn',l_debug_level3);
                    END IF;

                    l_del_task_ver_ids.extend(1);
                    l_del_task_ver_ids(l_del_task_ver_ids.count):= px_tasks_out_tbl(l_i).task_version_id;
                END IF;

                -- Bug 4078307: Changes End
            END IF;-- Create Task Context*/
               --rtarway, 4099429, end comment

	       -- Bug 7437034 (Initialize l_hidden_assgn to N for each iteration)
 	       l_hidden_assgn := 'N';

               --rtarway, 4099429, begin add
               --rtarway, 4132590, begin add
               OPEN  check_hidden_assgn_exists(px_tasks_out_tbl(l_i).task_version_id);
               FETCH check_hidden_assgn_exists into l_hidden_assgn;
               CLOSE check_hidden_assgn_exists;
               --rtarway, 4132590, end add

               IF (PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(px_tasks_out_tbl(l_i).task_version_id) = 'N'
                --AND pa_task_assignment_utils.check_asgmt_exists_in_task(px_tasks_out_tbl(l_i).task_version_id) = 'Y')
                    AND l_hidden_assgn = 'Y')--modified by rtarway for BUG 4132590
               THEN
                    IF l_debug_mode = 'Y' THEN
                        Pa_Debug.WRITE(G_PKG_NAME,'Preparing Tables to call FP delete_plan_txn for summary task in update flow',l_debug_level3);
                    END IF;

                    if (l_del_task_ver_ids.count = 1000) then
                              IF l_del_task_ver_ids.exists(1) THEN
                                   BEGIN
                                              pa_fp_planning_transaction_pub.delete_planning_transactions(
                                             p_context                       => 'WORKPLAN'
                                             ,p_task_or_res                  => 'TASKS'
                                             ,p_element_version_id_tbl       => l_del_task_ver_ids
                                             ,x_return_status                => l_return_status
                                             ,x_msg_count                    => l_msg_count
                                             ,x_msg_data                     => l_msg_data
                                        );
                                   EXCEPTION
                                        WHEN OTHERS THEN
                                        fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJECT_PUB',
                                                               p_procedure_name => 'PROCESS_TASK_STRUCTURE_BULK',
                                                               p_error_text     => SUBSTRB('pa_fp_planning_transaction_pub.delete_planning_transactions:'||SQLERRM,1,240));
                                        raise  fnd_api.g_exc_error;
                                   END;

                                   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                        x_msg_count := FND_MSG_PUB.count_msg;
                                        raise fnd_api.g_exc_error;
                                   END IF;
                              END IF; -- l_del_task_ver_ids.exists(1) THEN
                              l_del_task_ver_ids.delete;
                         end if;
                         l_del_task_ver_ids.extend(1);
                         l_del_task_ver_ids(l_del_task_ver_ids.count):= px_tasks_out_tbl(l_i).task_version_id;
                END IF;
               --rtarway, 4099429, end add
        END LOOP;
    END IF; -- nvl(p_tasks_in_tbl.LAST,0) > 0 THEN
    -- 4198962 Moved call of add_planning_transactions before population of l_del_task_ver_ids

    IF l_del_task_ver_ids.exists(1) THEN
        BEGIN
                    pa_fp_planning_transaction_pub.delete_planning_transactions(
                p_context                       => 'WORKPLAN'
                ,p_task_or_res                  => 'TASKS'
                ,p_element_version_id_tbl       => l_del_task_ver_ids
                ,x_return_status                => l_return_status
                ,x_msg_count                    => l_msg_count
                ,x_msg_data                     => l_msg_data
            );
        EXCEPTION
            WHEN OTHERS THEN
            fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJECT_PUB',
                                      p_procedure_name => 'PROCESS_TASK_STRUCTURE_BULK',
                                      p_error_text     => SUBSTRB('pa_fp_planning_transaction_pub.delete_planning_transactions:'||SQLERRM,1,240));
            raise  fnd_api.g_exc_error;
        END;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_msg_count := FND_MSG_PUB.count_msg;
            raise fnd_api.g_exc_error;
        END IF;
    END IF; -- l_del_task_ver_ids.exists(1) THEN
   END IF; --((p_structure_type = 'WORKPLAN' AND p_is_wp_separate_from_fn = 'Y') OR p_is_wp_separate_from_fn = 'N' )
--Amit : Bug 3964548 End



-- PA L Changes 3010538

--IF (p_structure_version_id IS NOT NULL) then /* create project case */
--
--/* Bug # 3420093 - Adding Progress Management modifications to create_project flow. */
----BUG 3835474 , rtarway, Added OR condition for shared structures
--    if (p_structure_type = 'WORKPLAN' OR p_is_wp_separate_from_fn = 'N' ) then
--
--            --Bug3802469, rtarway, This loop will not be successfull if p_tasks_in_tbl is empty.
--            --Check should be put before this loop to check if p_tasks_in_tbl is empty
--            if ( p_tasks_in_tbl IS NOT NULL AND p_tasks_in_tbl.count > 0)
--            then
--                 for l_i in p_tasks_in_tbl.first .. p_tasks_in_tbl.last
--                 loop
--                     if (PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(px_tasks_out_tbl(l_i).task_version_id) = 'Y') then
--                          l_add_task_ver_ids.extend(1);
--                          l_add_planned_effort.extend(1);
--                          l_add_start_date.extend(1);
--                          l_add_end_date.extend(1);
--
--                          l_add_task_ver_ids(l_add_task_ver_ids.count):= px_tasks_out_tbl(l_i).task_version_id;
--                          l_add_planned_effort(l_add_planned_effort.count):= p_tasks_in_tbl(l_i).planned_effort;
--                          l_add_start_date(l_add_start_date.count):= p_tasks_in_tbl(l_i).actual_start_date;
--                          l_add_end_date(l_add_end_date.count):= p_tasks_in_tbl(l_i).actual_finish_date;
--                   else
--                          l_del_task_ver_ids.extend(1);
--
--                          l_del_task_ver_ids(l_del_task_ver_ids.count):= px_tasks_out_tbl(l_i).task_version_id;
--                     end if;
--                 end loop;
--            end if;--Bug3802469, rtarway
--    end if;
--
--    -- Calling pa_task_pub1.call_add_planning_txns for lowest level tasks.
--
--
--    begin
--            --BUG 3802469, rtarway , if the tasks table is empty, l_add_task_ver_ids will not be populated.
--            --Check needed before calling call_add_planning_txns, to see if l_add_task_ver_ids is empty
--            if (  l_add_task_ver_ids IS NOT NULL AND l_add_task_ver_ids.count > 0)
--            then
--                 pa_task_pub1.call_add_planning_txns(
--                 p_tasks_ver_ids                  => l_add_task_ver_ids,
--                 p_planned_effort                 => l_add_planned_effort,
--                 p_project_id                     => p_project_id,
--                 p_structure_version_id           => l_structure_version_id,  --replace p_structure_version_id, bug 3838186
--                 p_start_date                     => l_add_start_date,
--                 p_end_date                       => l_add_end_date,
--                 p_pm_product_code                => p_pm_product_code,   --bug 3811243
--                 x_return_status                  => l_return_status,
--                 x_msg_count                      => l_msg_count,
--                 x_msg_data                       => l_msg_data
--                 );
--            else
--                null;--BUG 3802469, rtarway
--            end if;
--    exception
--            when others then
--                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'pa_project_pub',
--                                p_procedure_name => 'CREATE_PROJECT',
--                                        p_error_text     => substrb('PA_TASK_PUB1.CALL_ADD_PLANNING_TXNS:'||sqlerrm,1,240));
--            raise fnd_api.g_exc_error;
--        end;
--
--    -- Calling pa_fp_planning_transaction_pub.delete_planning_transactions for higher level tasks.
--
--       begin
--           --BUG 3802469, rtarway , if the tasks table is empty, l_del_task_ver_ids will not be populated.
--           --Check needed before calling delete_planning_transactions, to see if l_del_task_ver_ids is empty
--           if ( l_del_task_ver_ids IS NOT NULL AND l_del_task_ver_ids.count > 0)
--           then
--                pa_fp_planning_transaction_pub.delete_planning_transactions
--                (
--                 p_context                      => 'WORKPLAN'
--                ,p_task_or_res                  => 'TASKS'
--                ,p_element_version_id_tbl       => l_del_task_ver_ids
--                ,x_return_status                => l_return_status
--                ,x_msg_count                    => l_msg_count
--                ,x_msg_data                     => l_msg_data
--               );
--          else
--            null;
--          end if;
--       exception
--           when others then
--                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'pa_project_pub',
--                                        p_procedure_name => 'CREATE_PROJECT',
--                                        p_error_text     => SUBSTRB('PA_FP_PLANNING_TRANSACTION_PUB.DELETE_PLANNING_TRANSACTIONS:'||SQLERRM,1,240));
--           raise fnd_api.g_exc_error;
--       end;
--
--/* Bug # 3420093 - Adding Progress Management modifications to create_project flow. */
--
--else /* update project case */
--
--/* Bug # 3420093 - Adding Progress Management modifications to update_project flow. */
--BUG 3835474 , rtarway, Added OR condition for shared structures
--    if (p_structure_type = 'WORKPLAN' OR p_is_wp_separate_from_fn = 'N' ) then
--
--            --BUG3802469, rtarway, comment only, no code change
--            --if the str version being updated has no tasks, this loop will not run and l_add_task_ver_ids and
--            --l_del_task_ver_ids will not be populated. before passing these tables to add_planning_transaction
--            --or delete_planning_transaction, checks should be made
--            for l_task_cur_rec in l_task_cur(p_project_id)
--            loop
--                if (PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(l_task_cur_rec.element_version_id) = 'Y') then
--                l_add_task_ver_ids.extend(1);
--                l_add_planned_effort.extend(1);
--                l_add_start_date.extend(1);
--                l_add_end_date.extend(1);
--
--                l_add_task_ver_ids(l_add_task_ver_ids.count):= l_task_cur_rec.element_version_id;
--                l_add_planned_effort(l_add_planned_effort.count):= l_task_cur_rec.planned_effort;
--                                l_add_start_date(l_add_start_date.count):= l_task_cur_rec.actual_start_date;
--                                l_add_end_date(l_add_end_date.count):= l_task_cur_rec.actual_finish_date;
--            else
--                                l_del_task_ver_ids.extend(1);
--
--                                l_del_task_ver_ids(l_del_task_ver_ids.count):= l_task_cur_rec.element_version_id;
--            end if;
--        end loop;
--    end if;
--
--    -- Calling pa_task_pub1.call_add_planning_txns for lowest level tasks.
--
--    begin
--            --BUG3802469, rtarway, see comments above
--            if ( l_add_task_ver_ids IS NOT NULL and l_add_task_ver_ids.count > 0)
--            then
--                 pa_task_pub1.call_add_planning_txns(
--                 p_tasks_ver_ids                  => l_add_task_ver_ids,
--                 p_planned_effort                 => l_add_planned_effort,
--                 p_project_id                     => p_project_id,
--                 p_structure_version_id           => l_structure_version_id,  --replace p_structure_version_id, bug 3838186
--                 p_start_date                     => l_add_start_date,
--                 p_end_date                       => l_add_end_date,
--                 p_pm_product_code                => p_pm_product_code,   --bug 3811243
--                 x_return_status                  => l_return_status,
--                 x_msg_count                      => l_msg_count,
--                 x_msg_data                       => l_msg_data
--                 );
--            else
--               null;
--            end if;
--    exception
--            when others then
--                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'pa_project_pub',
--                                p_procedure_name => 'CREATE_PROJECT',
--                                        p_error_text     => substrb('PA_TASK_PUB1.CALL_ADD_PLANNING_TXNS:'||sqlerrm,1,240));
--            raise fnd_api.g_exc_error;
--        end;
--
--    -- Calling pa_fp_planning_transaction_pub.delete_planning_transactions for higher level tasks.
--
--       begin
--           --BUG3802469, rtarway, see comments above
--           if ( l_del_task_ver_ids IS NOT NULL and l_del_task_ver_ids.count > 0)
--           then
--                pa_fp_planning_transaction_pub.delete_planning_transactions
--                (
--                 p_context                      => 'WORKPLAN'
--                ,p_task_or_res                  => 'TASKS'
--                ,p_element_version_id_tbl       => l_del_task_ver_ids
--                ,x_return_status                => l_return_status
--                ,x_msg_count                    => l_msg_count
--                ,x_msg_data                     => l_msg_data
--               );
--          else
--               null;
--          end if;
--       exception
--           when others then
--                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'pa_project_pub',
--                                        p_procedure_name => 'CREATE_PROJECT',
--                                        p_error_text     => SUBSTRB('PA_FP_PLANNING_TRANSACTION_PUB.DELETE_PLANNING_TRANSACTIONS:'||SQLERRM,1,240));
--           raise fnd_api.g_exc_error;
--       end;

--/* Bug # 3420093 - Adding Progress Management modifications to update_project flow. */

--end if;

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Exiting PROCESS_TASK_STRUCTURE_BULK';
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                   l_debug_level2);
          pa_debug.reset_curr_function;

     END IF;

EXCEPTION

WHEN Invalid_Arg_Exc_WP THEN

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'In PA_FP_CONSTANTS_PKG.Invalid_Arg_Exc exception block';
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                                   l_debug_level4);
     END IF;

     x_return_status := FND_API.G_RET_STS_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

--     IF cur_auto_pub_flag%ISOPEN THEN
--          CLOSE cur_auto_pub_flag;
--     END IF;


     IF get_structure%ISOPEN THEN
          CLOSE get_structure;
     END IF;

     IF l_amg_project_csr%ISOPEN THEN
          CLOSE l_amg_project_csr;
     END IF;

     IF cur_pa_tasks%ISOPEN THEN
          CLOSE cur_pa_tasks;
     END IF;

     IF cur_template_flag%ISOPEN THEN
          CLOSE cur_template_flag;
     END IF;

     IF cur_rec_ver_num%ISOPEN THEN
          CLOSE cur_rec_ver_num;
     END IF;

     IF cur_pa_task_ver%ISOPEN THEN
          CLOSE cur_pa_task_ver;
     END IF;

     IF cur_parent_object_rel%ISOPEN THEN
          CLOSE cur_parent_object_rel;
     END IF;

     IF cur_ver_sch_attr_rec%ISOPEN THEN
          CLOSE cur_ver_sch_attr_rec;
     END IF;

     IF cur_task_type_id%ISOPEN THEN
          CLOSE cur_task_type_id;
     END IF;

     IF cur_elem_ver_to_task_id%ISOPEN THEN
          CLOSE cur_elem_ver_to_task_id;
     END IF;

     IF cur_all_task_ver_id%ISOPEN THEN
          CLOSE cur_all_task_ver_id;
     END IF;

     IF l_msg_count = 1 and x_msg_data IS NULL THEN
          PA_INTERFACE_UTILS_PUB.get_messages
              (p_encoded        => FND_API.G_TRUE
              ,p_msg_index      => 1
              ,p_msg_count      => l_msg_count
              ,p_msg_data       => l_msg_data
              ,p_data           => l_data
              ,p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
     END IF;

     IF p_commit = FND_API.G_TRUE THEN
          rollback to process_task_struc;
     END IF;

     RETURN;

WHEN others THEN

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

--     IF cur_auto_pub_flag%ISOPEN THEN
--          CLOSE cur_auto_pub_flag;
--     END IF;


     IF get_structure%ISOPEN THEN
          CLOSE get_structure;
     END IF;

     IF l_amg_project_csr%ISOPEN THEN
          CLOSE l_amg_project_csr;
     END IF;

     IF cur_pa_tasks%ISOPEN THEN
          CLOSE cur_pa_tasks;
     END IF;

     IF cur_template_flag%ISOPEN THEN
          CLOSE cur_template_flag;
     END IF;

     IF cur_rec_ver_num%ISOPEN THEN
          CLOSE cur_rec_ver_num;
     END IF;

     IF cur_pa_task_ver%ISOPEN THEN
          CLOSE cur_pa_task_ver;
     END IF;

     IF cur_parent_object_rel%ISOPEN THEN
          CLOSE cur_parent_object_rel;
     END IF;

     IF cur_ver_sch_attr_rec%ISOPEN THEN
          CLOSE cur_ver_sch_attr_rec;
     END IF;

     IF cur_task_type_id%ISOPEN THEN
          CLOSE cur_task_type_id;
     END IF;

     IF cur_elem_ver_to_task_id%ISOPEN THEN
          CLOSE cur_elem_ver_to_task_id;
     END IF;

     IF cur_all_task_ver_id%ISOPEN THEN
          CLOSE cur_all_task_ver_id;
     END IF;

     FND_MSG_PUB.add_exc_msg
          ( p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
           ,p_procedure_name  => 'PROCESS_TASK_STRUCTURE_BULK'
           ,p_error_text      => x_msg_data
          );

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          pa_debug.write(l_module_name,pa_debug.g_err_stage,
                              l_debug_level6);
           pa_debug.reset_curr_function;

     END IF;

     IF p_commit = FND_API.G_TRUE THEN
          rollback to process_task_struc;
     END IF;

--     rollback to process_task_struc;  Commented during UT.
     RAISE;
END PROCESS_TASK_STRUCTURE_BULK;


--Bug 2947492  ( delete )
PROCEDURE delete_fin_plan_from_task(
    p_task_id                                   NUMBER
   ,p_project_id                                NUMBER
   ,p_calling_module                            VARCHAR2  := 'FORMS'
   ,x_return_status                   OUT       NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
   ,x_msg_count                       OUT       NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_msg_data                        OUT       NOCOPY VARCHAR2) IS --File.Sql.39 bug 4440895


l_plannable_tasks_tbl        PA_FP_ELEMENTS_PUB.l_impacted_task_in_tbl_typ;
l_parent_task_id             NUMBER;
l_top_task_id                NUMBER;
l_return_status              VARCHAR2(1);
l_msg_data                   VARCHAR2(4000);
l_msg_count                  NUMBER;
l_msg_index_out              NUMBER;
l_data                       VARCHAR2(4000);
  API_ERROR            EXCEPTION;

CURSOR get_parent_task_id IS
    SELECT parent_task_id, top_task_id
      FROM pa_tasks
     WHERE project_id = p_project_id
       AND task_id = p_task_id;

BEGIN

     SAVEPOINT plan_tasks;

     OPEN get_parent_task_id;
     FETCH get_parent_task_id INTO l_parent_task_id,l_top_task_id;
     CLOSE get_parent_task_id;

     l_plannable_tasks_tbl(1).impacted_task_id   := p_task_id;
     l_plannable_tasks_tbl(1).action             := 'DELETE';
     l_plannable_tasks_tbl(1).old_parent_task_id := l_parent_task_id;
     l_plannable_tasks_tbl(1).top_task_id        := l_top_task_id;

   /*
     -- Commented out as no more using for doosan customer
     -- commented by skannoji
     -- commenting out as per mail from venkatesh dated 22 jan 04 -- maansari
     PA_FP_ELEMENTS_PUB.MAINTAIN_PLANNABLE_TASKS(
                    p_project_id         => p_project_id
                  , p_impacted_tasks_tbl => l_plannable_tasks_tbl
                  , x_return_status      => l_return_status
                  , x_msg_data           => l_msg_data
                  , x_msg_count          => l_msg_count
                );

       l_msg_count := FND_MSG_PUB.count_msg;
       if l_msg_count > 0 then
          x_msg_count := l_msg_count;
         if x_msg_count = 1 then
            pa_interface_utils_pub.get_messages
             (p_encoded        => FND_API.G_TRUE,
              p_msg_index      => 1,
              p_msg_count      => l_msg_count,
              p_msg_data       => l_msg_data,
              p_data           => l_data,
              p_msg_index_out  => l_msg_index_out);
            x_msg_data := l_data;
         end if;
         raise API_ERROR;
      end if;
      */

     x_return_status := FND_API.G_RET_STS_SUCCESS;
EXCEPTION
WHEN API_ERROR THEN
  x_return_status := FND_API.G_RET_STS_ERROR;
  rollback to plan_tasks;
WHEN OTHERS THEN
  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                          p_procedure_name => 'delete_fin_plan_from_task',
                          p_error_text     => SUBSTRB(SQLERRM,1,240));
  rollback to plan_tasks;
  raise;

END delete_fin_plan_from_task;
--End Bug 2947492

/*==================================================================
   This is the wrapper API that decides whether to invoke the concurrent
   process wrapper or the online process to process the WBS updates. If
   the profile is set to Online, the process is done online always.
   Otherwise when the profile is standard the processing is done online/
   concurrent based on the number of tasks in the structure version and
   the threshold profile.
   Bug 3010538 : New API for the Task Weighting Enhancement.
 ==================================================================*/

PROCEDURE PROCESS_WBS_UPDATES_WRP
   (  p_api_version_number    IN   NUMBER    := 1.0
     ,p_commit                IN   VARCHAR2  := FND_API.G_FALSE
     ,p_init_msg_list         IN   VARCHAR2  := FND_API.G_FALSE
     ,p_calling_context       IN   VARCHAR2  := 'UPDATE'
     ,p_project_id            IN   pa_projects_all.project_id%TYPE
     ,p_structure_version_id  IN   pa_proj_element_versions.element_version_id%TYPE
     ,p_pub_struc_ver_id      IN   NUMBER    := NULL
     ,p_pub_prog_flag         IN   VARCHAR2  := 'Y' --bug 4019845
     ,x_return_status         OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
     ,x_msg_count             OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
     ,x_msg_data              OUT  NOCOPY VARCHAR2) --File.Sql.39 bug 4440895
AS

-- Cursors used in this Procedure.

-- This cursor obtains the count of the task versions in the structure version.
CURSOR cur_task_count(c_project_id pa_projects_all.project_id%TYPE,
                      c_structure_version_id pa_proj_element_versions.element_version_id%TYPE)
IS
Select count(element_version_id)
From pa_proj_element_versions
Where project_id = c_project_id
And object_type = 'PA_TASKS'
And parent_structure_version_id = c_structure_version_id;

--Bug# 5973460
CURSOR c_get_process_code(c_structure_version_id NUMBER) IS
SELECT process_code
FROM pa_proj_elem_ver_structure
WHERE element_version_id = c_structure_version_id;
--Bug# 5973460

l_msg_count                     NUMBER := 0;
l_data                          VARCHAR2(2000);
l_msg_data                      VARCHAR2(2000);
l_msg_index_out                 NUMBER;
l_debug_mode                    VARCHAR2(1);

l_debug_level2                   CONSTANT NUMBER := 2;
l_debug_level3                   CONSTANT NUMBER := 3;
l_debug_level4                   CONSTANT NUMBER := 4;
l_debug_level5                   CONSTANT NUMBER := 5;

l_process_code  pa_proj_elem_ver_structure.process_code%TYPE; --Bug# 5973460

BEGIN

     --Bug# 5973460
     OPEN c_get_process_code(p_structure_version_id);
     FETCH c_get_process_code INTO l_process_code;
     CLOSE c_get_process_code;

     IF p_calling_context = 'UPDATE' AND l_process_code = 'PUE'
     THEN
        PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                             ,p_msg_name       => 'PA_PS_PUBLISH_ERROR');

         RAISE  Invalid_Arg_Exc_WP;
     END IF;
     --Bug# 5973460

     IF p_init_msg_list = FND_API.G_TRUE THEN
          FND_MSG_PUB.initialize;
     END IF;

     x_msg_count := 0;
     x_return_status := FND_API.G_RET_STS_SUCCESS;
     l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Entering PROCESS_WBS_UPDATES_WRP';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                   l_debug_level3);

          pa_debug.set_curr_function( p_function   => 'PROCESS_WBS_UPDATES_WRP',
                                      p_debug_mode => l_debug_mode );
     END IF;

     -- Check for business rules violations
     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Validating input parameters';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                     l_debug_level3);

          pa_debug.g_err_stage:= 'p_calling_context = '|| p_calling_context;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);

          pa_debug.g_err_stage:= 'p_project_id = '|| p_project_id;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);

          pa_debug.g_err_stage:= 'p_structure_version_id = '|| p_structure_version_id;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);

     END IF;

     -- Throw an error if any of the mandatory parameter is NULL.
     IF (p_project_id IS NULL) OR
        (p_structure_version_id IS NULL)
     THEN
          PA_UTILS.ADD_MESSAGE
                (p_app_short_name => 'PA',
                 p_msg_name       => 'PA_INV_PARAM_PASSED');
          RAISE Invalid_Arg_Exc_WP;
     END IF;

     DECLARE
          l_task_count        NUMBER;
          l_update_option     VARCHAR2(30);
          l_calling_context   VARCHAR2(30);
     BEGIN
          open cur_task_count(p_project_id,p_structure_version_id);
          fetch cur_task_count into l_task_count;
          close cur_task_count;
          l_update_option := pa_project_structure_utils.get_process_wbs_updates_option(p_task_count => l_task_count,
                                              p_project_id => p_project_id    ---bug 4370533
                                                  );

          IF p_calling_context = 'PUBLISH' THEN
            IF l_update_option = 'ONLINE' THEN
              l_calling_context := 'ONLINE_PUBLISH';
            ELSE
              l_calling_context := 'CONC_PUBLISH';
            END IF;
          ELSIF p_calling_context = 'UPDATE' THEN
            IF l_update_option = 'ONLINE' THEN
              l_calling_context := 'ONLINE_UPDATE';
            ELSE
              l_calling_context := 'CONC_UPDATE';
            END IF;
        -- 4392189 : Added code for APPLY_PROGRESS
        -- This is done so that in process_wbs_updates
        -- we can determine the online or deferred mode
          ELSIF p_calling_context = 'APPLY_PROGRESS' THEN
            IF l_update_option = 'ONLINE' THEN
              l_calling_context := 'ONLINE_APPLY_PROGRESS';
            ELSE
              l_calling_context := 'CONC_APPLY_PROGRESS';
            END IF;
          ELSIF p_calling_context = 'ASGMT_PLAN_CHANGE' THEN  ---bug 4492493
            l_calling_context := p_calling_context;
            l_update_option := 'CONCURRENT'; ---should always launch conc pgm
          ELSE
            l_calling_context := p_calling_context;
          END IF;

          -- TWUT
          IF l_debug_mode = 'Y' THEN
             pa_debug.g_err_stage := 'Update option is '||l_update_option;
             pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level4);
          END IF;

          IF l_update_option = 'ONLINE' THEN
               pa_proj_task_struc_pub.process_wbs_updates(
                     p_commit                => p_commit
                    ,p_project_id            => p_project_id
                    ,p_structure_version_id  => p_structure_version_id
                    ,p_pub_struc_ver_id      => p_pub_struc_ver_id
                    ,p_pub_prog_flag         => p_pub_prog_flag --bug 4019845
                    ,p_calling_context       => l_calling_context
                    ,x_return_status         => x_return_status
                    ,x_msg_count             => x_msg_count
                    ,x_msg_data              => x_msg_data
               );
               IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    IF l_debug_mode = 'Y' THEN
                       pa_debug.g_err_stage := 'Error calling online wbs update process ';
                       pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level4);
                    END IF;
                    Raise Invalid_Arg_Exc_WP;
               END IF;
          ELSIF l_update_option = 'CONCURRENT' THEN
               pa_proj_task_struc_pub.process_wbs_updates_conc_wrp(
                     p_commit                => p_commit
                    ,p_project_id            => p_project_id
                    ,p_structure_version_id  => p_structure_version_id
                    ,p_pub_struc_ver_id      => p_pub_struc_ver_id
                    ,p_pub_prog_flag         => p_pub_prog_flag --bug 4019845
                    ,p_calling_context       => l_calling_context
                    ,x_return_status         => x_return_status
                    ,x_msg_count             => x_msg_count
                    ,x_msg_data              => x_msg_data
               );
               IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    IF l_debug_mode = 'Y' THEN
                       pa_debug.g_err_stage := 'Error calling concurrent wbs update process ';
                       pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level4);
                    END IF;
                    Raise Invalid_Arg_Exc_WP;
               END IF;
          END IF;
     END;

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Exiting PROCESS_WBS_UPDATES_WRP';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                   l_debug_level3);
          pa_debug.reset_curr_function;
     END IF;
EXCEPTION

WHEN Invalid_Arg_Exc_WP THEN

     x_return_status := FND_API.G_RET_STS_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF cur_task_count%ISOPEN THEN
          CLOSE cur_task_count;
     END IF;

     IF l_msg_count = 1 and x_msg_data IS NULL THEN
          PA_INTERFACE_UTILS_PUB.get_messages
              (p_encoded        => FND_API.G_TRUE
              ,p_msg_index      => 1
              ,p_msg_count      => l_msg_count
              ,p_msg_data       => l_msg_data
              ,p_data           => l_data
              ,p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;
     IF l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
     END IF;

     RETURN;

WHEN others THEN

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     IF cur_task_count%ISOPEN THEN
          CLOSE cur_task_count;
     END IF;

     FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                    ,p_procedure_name  => 'PROCESS_WBS_UPDATES_WRP'
                    ,p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                              l_debug_level5);
          pa_debug.reset_curr_function;
     END IF;
     RAISE;
END PROCESS_WBS_UPDATES_WRP;

/*==================================================================
   This is a wrapper API that will launch the concurrent process that
   will in turn call the task weightage calculation and the plannable
   tasks APIs.
   Bug 3010538 : New API for the Task Weighting Enhancement.
 ==================================================================*/

PROCEDURE PROCESS_WBS_UPDATES_CONC_WRP
   (  p_api_version_number    IN   NUMBER    := 1.0
     ,p_commit                IN   VARCHAR2  := FND_API.G_FALSE
     ,p_init_msg_list         IN   VARCHAR2  := FND_API.G_FALSE
     ,p_calling_context       IN   VARCHAR2  := 'UPDATE'
     ,p_project_id            IN   pa_projects_all.project_id%TYPE
     ,p_structure_version_id  IN   pa_proj_element_versions.element_version_id%TYPE
     ,p_pub_struc_ver_id      IN   NUMBER    := NULL
     ,p_pub_prog_flag         IN   VARCHAR2  := 'Y' --bug 4019845
     ,x_return_status         OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
     ,x_msg_count             OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
     ,x_msg_data              OUT  NOCOPY VARCHAR2) --File.Sql.39 bug 4440895
AS

-- Cursors used.

-- This cursor is used to decide if the structure version corresponds to a particular
-- Structure type. Depending on this the plannable tasks api and the task weightage calculation
-- api will be called.
Cursor cur_structure_type(c_project_id pa_projects_all.project_id%TYPE,
                          c_structure_version_id pa_proj_element_versions.element_version_id%TYPE,
                          c_structure_type pa_structure_types.structure_type%TYPE)
IS
select 'Y'
from   pa_proj_element_versions ver,
       pa_proj_structure_types pst,
       pa_structure_types st
where  ver.element_version_id   = c_structure_version_id
and    ver.project_id           = c_project_id
and    pst.proj_element_id      = ver.proj_element_id
and    pst.structure_type_id    = st.structure_type_id
and    st.structure_type        = c_structure_type;

l_update_wbs_flag               pa_proj_elem_ver_structure.process_update_wbs_flag%TYPE;
l_request_id                    pa_proj_elem_ver_structure.conc_request_id%TYPE;
l_structure_type_flag           VARCHAR2(1);
--Bug 3053920.
l_task_weighting_basis          pa_proj_progress_attr.task_weight_basis_code%TYPE;

l_msg_count                     NUMBER := 0;
l_data                          VARCHAR2(2000);
l_msg_data                      VARCHAR2(2000);
l_msg_index_out                 NUMBER;
l_debug_mode                    VARCHAR2(1);

l_debug_level2                   CONSTANT NUMBER := 2;
l_debug_level3                   CONSTANT NUMBER := 3;
l_debug_level4                   CONSTANT NUMBER := 4;
l_debug_level5                   CONSTANT NUMBER := 5;

-- Begin fix for Bug # 4373055.

l_ret_status    VARCHAR2(1);
l_calling_context   VARCHAR2(30); -- Bug 4392189

-- End fix for Bug # 4373055.

-- Bug 4589289 : Begin
CURSOR c_get_process_code(c_structure_version_id NUMBER) IS
SELECT process_code
FROM pa_proj_elem_ver_structure
WHERE element_version_id = c_structure_version_id
and project_id = p_project_id -- Bug # 4868867.
;

l_process_code  pa_proj_elem_ver_structure.process_code%TYPE;
l_rerun_flag    VARCHAR2(1):=null;

-- Bug 4589289 : End

-- 4683461 For MOAC Changes

Cursor cur_proj_ou
IS
select org_id
from pa_projects_all
where project_id = p_project_id;

l_org_id NUMBER;

-- 4683461 Done

BEGIN
     IF p_init_msg_list = FND_API.G_TRUE THEN
          FND_MSG_PUB.initialize;
     END IF;

     x_msg_count := 0;
     x_return_status := FND_API.G_RET_STS_SUCCESS;
     l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Entering PROCESS_WBS_UPDATES_CONC_WRP';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                   l_debug_level3);

          pa_debug.set_curr_function( p_function   => 'PROCESS_WBS_UPDATES_CONC_WRP',
                                      p_debug_mode => l_debug_mode );
     END IF;

     -- Check for business rules violations
     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Validating input parameters';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                     l_debug_level3);

          pa_debug.g_err_stage:= 'p_calling_context = '|| p_calling_context;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);

          pa_debug.g_err_stage:= 'p_project_id = '|| p_project_id;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);

          pa_debug.g_err_stage:= 'p_structure_version_id = '|| p_structure_version_id;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);

     END IF;

     -- Throw an error if any of the mandatory parameter is NULL.
     IF (p_project_id IS NULL) OR
        (p_structure_version_id IS NULL)
     THEN
          PA_UTILS.ADD_MESSAGE
                (p_app_short_name => 'PA',
                 p_msg_name       => 'PA_INV_PARAM_PASSED');
          RAISE Invalid_Arg_Exc_WP;
     END IF;

--hsiu: bug 3035902
--commenting because financial planning has partial process and
--the update flag should not be check here.
/*
     l_update_wbs_flag := pa_project_structure_utils.GET_UPDATE_WBS_FLAG(p_project_id           => p_project_id,
                                                                         p_structure_version_id => p_structure_version_id);
     IF l_update_wbs_flag = 'N' THEN
          -- No further processing is required for this structure version. Return.
          -- TWUT.
          IF l_debug_mode = 'Y' THEN
               pa_debug.g_err_stage:= 'No updates required for this structure version.';
               pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
          END IF;
          RETURN;
     END IF;
*/

     -- Bug 3053920. We need not launch the conc process if split structure, structure type is workplan,
     -- basis code is MANUAL or flag is N.

     l_update_wbs_flag := pa_project_structure_utils.GET_UPDATE_WBS_FLAG(p_project_id           => p_project_id,
                                                                         p_structure_version_id => p_structure_version_id);
     l_task_weighting_basis := pa_progress_utils.get_task_weighting_basis(p_project_id => p_project_id);


     -- See if the structure version being processed is WORKPLAN.
     open cur_structure_type(p_project_id,p_structure_version_id,'WORKPLAN');
     fetch cur_structure_type into l_structure_type_flag;
     close cur_structure_type;
     -- 4392189 : Program Reporting Changes - Phase 2
     -- For Apply Progress we do not have to check wbs flag
     IF (p_calling_context not in ('CONC_APPLY_PROGRESS','ASGMT_PLAN_CHANGE') ---4627294
    AND

    -- Begin Bug # 4584710.
    /*
        PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( p_project_id ) = 'Y' AND
        nvl(l_structure_type_flag,'N') = 'Y' AND
        ( nvl(l_task_weighting_basis,'-99') = 'MANUAL'
    OR
    */
    -- End Bug # 4584710.
          nvl(l_update_wbs_flag,'N') = 'N')
     THEN
          IF l_debug_mode = 'Y' THEN
               -- pa_debug.g_err_stage:= 'split + workplan + MANUAL or flag = N. No further processing required';
           pa_debug.g_err_stage:= 'Flag = N. No further processing required';
               pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
          END IF;
          -- No further processing required. Donot launch the conc process.
          RETURN;
     END IF;

     l_structure_type_flag := NULL;

     -- Bug 4589289 : Begin
        OPEN c_get_process_code(p_structure_version_id);
        FETCH c_get_process_code INTO l_process_code;
        CLOSE c_get_process_code;

        IF l_process_code IN ('WUE','PUE','AUE') THEN
                l_rerun_flag := 'Y';
        END IF;
     -- Bug 4589289 : End

     -- 4683461 For MOAC Changes, retrieving operating unit and setting it before calling
     -- fnd_request.submit_request
     open cur_proj_ou;
     fetch cur_proj_ou into l_org_id;
     close cur_proj_ou;

     fnd_request.set_org_id(l_org_id);

     -- 4683461 end

     -- Submit the request.
     l_request_id := fnd_request.submit_request
     (
           application                =>   'PA',
           program                    =>   'PAWPUWBS',
           -- description                =>   'PRC: Process Work Breakdown Structure Updates', -- Fix for Bug # 4409337.
       description                =>   'PRC: Process Structure Updates', -- Fix for Bug # 4409337.
           start_time                 =>   NULL,
           sub_request                =>   false,
           argument1                  =>   p_calling_context,
           argument2                  =>   p_project_id,
           argument3                  =>   p_structure_version_id,
           argument4                  =>   p_pub_struc_ver_id,
           argument5                  =>   p_pub_prog_flag --bug 4019845
          ,argument6                  =>   l_rerun_flag --bug 4589289
     );

     -- TWUT
     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Request id is '||l_request_id;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
     END IF;

     -- Throw an error if the request could not be submitted.
     IF l_request_id = 0 THEN
          PA_UTILS.ADD_MESSAGE
                (p_app_short_name => 'PA',
                 p_msg_name       => 'PA_WP_TW_CONC_PGM_ERR');
          RAISE Invalid_Arg_Exc_WP;
     END IF;

     -- Begin fix for Bug # 4373055.

     /*

     -- Update the structure version record with the request id and the status code.
     update pa_proj_elem_ver_structure
     set process_code = 'WUP',
         conc_request_id = l_request_id
     where element_version_id = p_structure_version_id
     and project_id = p_project_id;

     */
     -- Bug 4392189 : Added l_calling_context
     IF  p_calling_context IN ('CONC_APPLY_PROGRESS', 'ONLINE_APPLY_PROGRESS') THEN
    l_calling_context := 'APPLY_PROGRESS';
     ELSE
    l_calling_context := p_calling_context;
     END IF;

     PA_PROJECT_STRUCTURE_UTILS.SET_PROCESS_CODE_IN_PROC(
     p_project_id              => p_project_id
     , p_structure_version_id  => p_structure_version_id
     , p_calling_context       => l_calling_context
     , p_conc_request_id       => l_request_id
     , x_return_status         => l_ret_status);


     if (p_calling_context = 'CONC_PUBLISH') then

        -- Mark the newly created published structure record also with the process code
        -- and request_id.

        PA_PROJECT_STRUCTURE_UTILS.SET_PROCESS_CODE_IN_PROC(
        p_project_id              => p_project_id
        , p_structure_version_id  => p_pub_struc_ver_id
        , p_calling_context       => l_calling_context
        , p_conc_request_id       => l_request_id
        , x_return_status         => l_ret_status);

     end if;

     --  End fix for Bug # 4373055.

     -- Call the financial planning API if the structure type is FINANCIAL.
     open cur_structure_type(p_project_id,p_structure_version_id,'FINANCIAL');
     fetch cur_structure_type into l_structure_type_flag;
     close cur_structure_type;

     IF nvl(l_structure_type_flag,'N') = 'Y' THEN

          -- TWUT
          IF l_debug_mode = 'Y' THEN
             pa_debug.g_err_stage := 'Calling the financial planning API after submitting the concurrent request';
             pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
          END IF;

          pa_fp_refresh_elements_pub.set_process_flag_proj(
                p_project_id             => p_project_id
               ,p_request_id             => l_request_id
               ,p_process_code           => 'WUP'
               ,p_refresh_required_flag  => 'Y'
               ,x_return_status          => x_return_status
               ,x_msg_count              => x_msg_count
               ,x_msg_data               => x_msg_data
          );
          IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               IF l_debug_mode = 'Y' THEN
                  pa_debug.g_err_stage := 'Error calling the financial planning API after submitting the concurrent request';
                  pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level4);
               END IF;
               Raise Invalid_Arg_Exc_WP;
          END IF;
     END IF;

     -- Commit in order to complete the request submission.
     commit;

     /* DO NOT ADD ANY CODE AFTER THIS COMMIT bug 3163280 */

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Exiting PROCESS_WBS_UPDATES_CONC_WRP';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                   l_debug_level3);
          pa_debug.reset_curr_function;
     END IF;
EXCEPTION

WHEN Invalid_Arg_Exc_WP THEN

     x_return_status := FND_API.G_RET_STS_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF l_msg_count = 1 and x_msg_data IS NULL THEN
          PA_INTERFACE_UTILS_PUB.get_messages
              (p_encoded        => FND_API.G_TRUE
              ,p_msg_index      => 1
              ,p_msg_count      => l_msg_count
              ,p_msg_data       => l_msg_data
              ,p_data           => l_data
              ,p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;
     IF l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
     END IF;

     RETURN;

WHEN others THEN

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                    ,p_procedure_name  => 'PROCESS_WBS_UPDATES_CONC_WRP'
                    ,p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                              l_debug_level5);
          pa_debug.reset_curr_function;
     END IF;
     RAISE;
END PROCESS_WBS_UPDATES_CONC_WRP;


/*==================================================================
   This is the procedure that will be registered as the concurrent
   program executable with FND.
   Bug 3010538 : New API for the Task Weighting Enhancement.
 ==================================================================*/

PROCEDURE PROCESS_WBS_UPDATES_CONC
   (  errbuf                  OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
     ,retcode                 OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
     ,p_calling_context       IN   VARCHAR2   := 'UPDATE'
     ,p_project_id            IN   pa_projects_all.project_id%TYPE
     ,p_structure_version_id  IN   pa_proj_element_versions.element_version_id%TYPE
     ,p_pub_struc_ver_id      IN   NUMBER    := NULL
     ,p_pub_prog_flag         IN   VARCHAR2  := 'Y' --bug 4019845
     ,p_rerun_flag            IN   VARCHAR2  := null --bug 4589289
   )
AS

l_request_id                    pa_proj_elem_ver_structure.conc_request_id%TYPE;

l_return_status                 VARCHAR2(1);
l_msg_count                     NUMBER := 0;
l_data                          VARCHAR2(2000);
l_msg_data                      VARCHAR2(2000);
l_msg_index_out                 NUMBER;
l_debug_mode                    VARCHAR2(1);

l_debug_level2                   CONSTANT NUMBER := 2;
l_debug_level3                   CONSTANT NUMBER := 3;
l_debug_level4                   CONSTANT NUMBER := 4;
l_debug_level5                   CONSTANT NUMBER := 5;

-- Begin fix for Bug # 4373055.

l_ret_status    VARCHAR2(1);
l_calling_context VARCHAR2(30);-- Bug 4392189

-- End fix for Bug # 4373055.

/* Bug 8347243 - Start */

l_record_version_number NUMBER;

cursor c2(c_project_id NUMBER, c_structure_version_id NUMBER) IS
  select record_version_number
  from pa_proj_elem_ver_structure
  where project_id = c_project_id
  and element_version_id = c_structure_version_id;

/* Bug 8347243 - End */

BEGIN

     savepoint process_wbs_updates_conc;

     l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');
     l_request_id  := FND_GLOBAL.CONC_REQUEST_ID;
     retcode       := '0';
     errbuf        := NULL;

     IF l_debug_mode = 'Y' THEN
          pa_debug.set_curr_function( p_function   => 'PROCESS_WBS_UPDATES_CONC',
                                      p_debug_mode => l_debug_mode );
          pa_debug.g_err_stage:= 'Entering PROCESS_WBS_UPDATES_CONC';
          pa_debug.log_message(p_message=>pa_debug.g_err_stage);
     END IF;

     -- Check for business rules violations
     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Validating input parameters';
          pa_debug.log_message(p_message=>pa_debug.g_err_stage);

          pa_debug.g_err_stage:= 'p_project_id = '|| p_project_id;
          pa_debug.log_message(p_message => pa_debug.g_err_stage);

          pa_debug.g_err_stage:= 'p_structure_version_id = '|| p_structure_version_id;
          pa_debug.log_message(p_message => pa_debug.g_err_stage);
     END IF;

     IF (p_project_id IS NULL) OR
        (p_structure_version_id IS NULL)
     THEN
          IF l_debug_mode = 'Y' THEN
               pa_debug.g_err_stage:= 'Some of the mandatory parameters to this API are NULL';
               pa_debug.log_message(p_message => pa_debug.g_err_stage);
          END IF;
          PA_UTILS.ADD_MESSAGE
                (p_app_short_name => 'PA',
                 p_msg_name       => 'PA_INV_PARAM_PASSED');
          RAISE Invalid_Arg_Exc_WP;
     END IF;

     pa_proj_task_struc_pub.process_wbs_updates(
           p_calling_context       => p_calling_context
          ,p_project_id            => p_project_id
          ,p_structure_version_id  => p_structure_version_id
          ,p_pub_struc_ver_id      => p_pub_struc_ver_id
          ,p_pub_prog_flag         => p_pub_prog_flag --bug 4019845
          ,p_rerun_flag            => p_rerun_flag -- bug 4589289
          ,x_return_status         => l_return_status
          ,x_msg_count             => l_msg_count
          ,x_msg_data              => l_msg_data
     );
     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          IF l_debug_mode = 'Y' THEN
             pa_debug.g_err_stage := 'Error calling process wbs updates API ';
             pa_debug.log_message(p_message => pa_debug.g_err_stage);
          END IF;
          Raise Invalid_Arg_Exc_WP;
     END IF;


     -- Update to success if the call was successful.
     -- It has been decided to update null as the process_code if the
     -- process has completed successfully.
     update pa_proj_elem_ver_structure
     set process_code = NULL,
         conc_request_id = l_request_id
     where element_version_id = p_structure_version_id
     and project_id = p_project_id;


     -- Begin fix for Bug # 4373055.

     if (p_calling_context = 'CONC_PUBLISH') then

        -- Mark the newly created published structure record also with the process code
        -- as null.

        update pa_proj_elem_ver_structure
        set process_code = NULL
        , conc_request_id = l_request_id
        where element_version_id = p_pub_struc_ver_id
        and project_id = p_project_id;

        -- Bug 8347243 - Start
        -- Workflow notification should happen here for CONCURRENT mode

        OPEN c2(p_project_id, p_pub_struc_ver_id);
        FETCH c2 into l_record_version_number;
        CLOSE c2;

        PA_PROJECT_STRUCTURE_PVT1.change_workplan_status
        (
          p_project_id              => p_project_id
         ,p_structure_version_id    => p_pub_struc_ver_id
         ,p_status_code             => 'STRUCTURE_PUBLISHED'
         ,p_record_version_number   => l_record_version_number
         ,x_return_status           => l_return_status
         ,x_msg_count               => l_msg_count
         ,x_msg_data                => l_msg_data
        );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          IF l_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'Error calling change workplan status ';
            pa_debug.log_message(p_message => pa_debug.g_err_stage);
          END IF;
          Raise Invalid_Arg_Exc_WP;
        END IF;


        PA_WORKPLAN_WORKFLOW.START_PROJECT_EXECUTION_WF
        (
          p_project_id    => p_project_id
         ,x_msg_count     => l_msg_count
         ,x_msg_data      => l_msg_data
         ,x_return_status => l_return_status
        ) ;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          IF l_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'Error starting project execution workflow';
            pa_debug.log_message(p_message => pa_debug.g_err_stage);
          END IF;
          Raise Invalid_Arg_Exc_WP;
        END IF;

        -- Bug 8347243 - End

     end if;

     --  End fix for Bug # 4373055.

     -- Commit so that the changes that have been done are commited.
     commit;

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Exiting PROCESS_WBS_UPDATES_CONC';
          pa_debug.log_message(p_message=>pa_debug.g_err_stage);

          pa_debug.reset_curr_function;
     END IF;
EXCEPTION

WHEN Invalid_Arg_Exc_WP THEN

     l_msg_count := FND_MSG_PUB.count_msg;
     retcode     := '2';

     IF l_msg_count >= 1 THEN
          PA_INTERFACE_UTILS_PUB.get_messages
              (p_encoded        => FND_API.G_FALSE -- Bug 4348814 : Made false from true FND_API.G_TRUE
              ,p_msg_index      => 1
              ,p_msg_count      => l_msg_count
              ,p_msg_data       => l_msg_data
              ,p_data           => l_data
              ,p_msg_index_out  => l_msg_index_out);
          errbuf := l_data;
     END IF;

     rollback to process_wbs_updates_conc;


     -- Begin fix for Bug # 4373055.

     /*

     update pa_proj_elem_ver_structure
     set process_code = 'WUE',
         conc_request_id = l_request_id
     where element_version_id = p_structure_version_id
     and project_id = p_project_id;

     commit;

     */
     -- Bug 4392189 : Added l_calling_context
     IF  p_calling_context IN ('CONC_APPLY_PROGRESS', 'ONLINE_APPLY_PROGRESS') THEN
    l_calling_context := 'APPLY_PROGRESS';
     ELSE
    l_calling_context := p_calling_context;
     END IF;

     PA_PROJECT_STRUCTURE_UTILS.SET_PROCESS_CODE_ERR(
     p_project_id              => p_project_id
     , p_structure_version_id  => p_structure_version_id
     , p_calling_context       => l_calling_context
     , p_conc_request_id       => l_request_id
     , x_return_status         => l_ret_status);

     if (p_calling_context = 'CONC_PUBLISH') then

        -- Mark the newly created published structure record also with the process code
        -- and request_id.

        PA_PROJECT_STRUCTURE_UTILS.SET_PROCESS_CODE_ERR(
        p_project_id              => p_project_id
        , p_structure_version_id  => p_pub_struc_ver_id
        , p_calling_context       => l_calling_context
        , p_conc_request_id       => l_request_id
        , x_return_status         => l_ret_status);

     end if;

     --  End fix for Bug # 4373055.

     -- Bug # 4655059.

     -- If the process that errored out is process_updates then set the process_update_wbs_flag to 'Y'.

     if (p_calling_context = 'CONC_UPDATE') then

	pa_proj_task_struc_pub.set_update_wbs_flag
	(p_project_id            => p_project_id
        ,p_structure_version_id  => p_structure_version_id
        ,p_update_wbs_flag       => 'Y'
        ,x_return_status         => l_return_status
        ,x_msg_count             => l_msg_count
        ,x_msg_data              => l_msg_data);

	if (l_return_status = FND_API.G_RET_STS_SUCCESS) then

		commit;

	end if;

     end if;

     -- Bug # 4655059.

     IF l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
     END IF;
     RETURN;

WHEN others THEN

     retcode         := '2';
     errbuf          := SQLERRM;

     FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                    ,p_procedure_name  => 'PROCESS_WBS_UPDATES_CONC'
                    ,p_error_text      => errbuf);

     rollback to process_wbs_updates_conc;

     -- Begin fix for Bug # 4373055.

     /*

     update pa_proj_elem_ver_structure
     set process_code = 'WUE',
         conc_request_id = l_request_id
     where element_version_id = p_structure_version_id
     and project_id = p_project_id;

     commit;

     */

     -- Bug 4392189 : Added l_calling_context
     IF  p_calling_context IN ('CONC_APPLY_PROGRESS', 'ONLINE_APPLY_PROGRESS') THEN
    l_calling_context := 'APPLY_PROGRESS';
     ELSE
    l_calling_context := p_calling_context;
     END IF;

     PA_PROJECT_STRUCTURE_UTILS.SET_PROCESS_CODE_ERR(
     p_project_id              => p_project_id
     , p_structure_version_id  => p_structure_version_id
     , p_calling_context       => l_calling_context
     , p_conc_request_id       => l_request_id
     , x_return_status         => l_ret_status);

     if (p_calling_context = 'CONC_PUBLISH') then

        -- Mark the newly created published structure record also with the process code
        -- and request_id.

        PA_PROJECT_STRUCTURE_UTILS.SET_PROCESS_CODE_ERR(
        p_project_id              => p_project_id
        , p_structure_version_id  => p_pub_struc_ver_id
        , p_calling_context       => l_calling_context
        , p_conc_request_id       => l_request_id
        , x_return_status         => l_ret_status);

     end if;

     --  End fix for Bug # 4373055.

     -- Bug # 4655059.

     -- If the process that errored out is process_updates then set the process_update_wbs_flag to 'Y'.

     if (p_calling_context = 'CONC_UPDATE') then

        pa_proj_task_struc_pub.set_update_wbs_flag
        (p_project_id            => p_project_id
        ,p_structure_version_id  => p_structure_version_id
        ,p_update_wbs_flag       => 'Y'
        ,x_return_status         => l_return_status
        ,x_msg_count             => l_msg_count
        ,x_msg_data              => l_msg_data);

        if (l_return_status = FND_API.G_RET_STS_SUCCESS) then

                commit;

        end if;

     end if;

     -- Bug # 4655059.

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Unexpected Error'||errbuf;
          pa_debug.log_message(pa_debug.g_err_stage);
          pa_debug.reset_curr_function;
     END IF;
     -- Bug 4360407 : We should no do RAISE, otherweise concurrent process will not error out
     --RAISE;
     RETURN;
END PROCESS_WBS_UPDATES_CONC;

/*==================================================================
 This API takes care of calling the plannable tasks api and the task
 weightage api depending on the context. For a financial only structure
 version, only the plannable tasks api is called and for a workplan only
 structure version only the task weighting api is called. This api will
 be called from the concurrent executable and can be called from the other
 places where online processing is expected.
 Bug 3010538 : New API for the Task Weighting Enhancement.
 ==================================================================*/

PROCEDURE PROCESS_WBS_UPDATES
   (  p_api_version_number    IN   NUMBER    := 1.0
     ,p_commit                IN   VARCHAR2  := FND_API.G_FALSE
     ,p_init_msg_list         IN   VARCHAR2  := FND_API.G_FALSE
     ,p_calling_context       IN   VARCHAR2  := 'UPDATE'
     ,p_project_id            IN   pa_projects_all.project_id%TYPE
     ,p_structure_version_id  IN   pa_proj_element_versions.element_version_id%TYPE
     ,p_pub_struc_ver_id      IN   NUMBER    := NULL
     ,p_pub_prog_flag         IN   VARCHAR2  := 'Y' --bug 4019845
     ,p_rerun_flag            IN   VARCHAR2  := null --bug 4589289
     ,x_return_status         OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
     ,x_msg_count             OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
     ,x_msg_data              OUT  NOCOPY VARCHAR2) --File.Sql.39 bug 4440895
AS

-- Cursors Required.

-- This cursor is used to decide if the structure version corresponds to a particular
-- Structure type. Depending on this the plannable tasks api and the task weightage calculation
-- api will be called.
CURSOR cur_structure_type(c_project_id pa_projects_all.project_id%TYPE,
                          c_structure_version_id pa_proj_element_versions.element_version_id%TYPE,
                          c_structure_type pa_structure_types.structure_type%TYPE)
IS
SELECT 'Y'
FROM   pa_proj_element_versions ver,
       pa_proj_structure_types pst,
       pa_structure_types st
WHERE  ver.element_version_id   = c_structure_version_id
AND    ver.project_id           = c_project_id
AND    pst.proj_element_id      = ver.proj_element_id
AND    pst.structure_type_id    = st.structure_type_id
AND    st.structure_type        = c_structure_type;

l_update_wbs_flag               pa_proj_elem_ver_structure.process_update_wbs_flag%TYPE;
l_structure_type_flag           VARCHAR2(1);
l_request_id                    pa_proj_elem_ver_structure.conc_request_id%TYPE;

l_msg_count                     NUMBER := 0;
l_data                          VARCHAR2(2000);
l_msg_data                      VARCHAR2(2000);
l_msg_index_out                 NUMBER;
l_debug_mode            VARCHAR2(1);

l_debug_level2                  CONSTANT NUMBER := 2;
l_debug_level3                  CONSTANT NUMBER := 3;
l_debug_level4                  CONSTANT NUMBER := 4;
l_debug_level5                  CONSTANT NUMBER := 5;

l_publish_flag                  VARCHAR2(1);
l_online_flag                   VARCHAR2(1);
l_pub_ver_id                    NUMBER;
l_prev_ver_id                   NUMBER;
l_proc_code                     VARCHAR2(30);
l_msg_code                      VARCHAR2(30);

--bug 3762882
CURSOR get_prev_published_ver(c_struc_ver_id NUMBER) IS
select a.element_version_id
from pa_proj_elem_ver_structure a,
     pa_proj_element_versions b
WHERE a.project_id = p_project_id
AND a.proj_element_id = b.proj_element_id
AND b.element_version_id = c_struc_ver_id
AND a.LATEST_EFF_PUBLISHED_FLAG <> 'Y'
AND a.STATUS_CODE = 'STRUCTURE_PUBLISHED'
ORDER BY published_date desc;
--end bug 3762882

--bug 4019845
  CURSOR get_scheduled_dates(c_project_id NUMBER, c_structure_version_id NUMBER)
  IS
  SELECT scheduled_start_date, scheduled_finish_date
  FROM pa_proj_elem_ver_schedule
  WHERE project_id = c_project_id
  AND   element_version_id = c_structure_version_id;

  CURSOR get_proj_rec_ver_number(c_project_id NUMBER)
  IS
  SELECT record_version_number
  FROM pa_projects_all
  WHERE project_id = c_project_id;

  CURSOR get_struc_id(c_project_id NUMBER, c_struc_ver_id NUMBER) IS
  select pevs.proj_element_id
  from pa_proj_elem_ver_structure pevs
  where pevs.element_version_id = c_struc_ver_id
  and pevs.project_id = c_project_id;

 --bug 4472071
   -- bug 6414995 : Cursor query changed by adding join with pa_fin_plan_types_b
  CURSOR cur_chk_pji_failed
  IS
    SELECT 'Y'
         FROM pji_pjp_wbs_header h,
          pa_fin_plan_types_b fin
    WHERE h.wbs_version_id= p_pub_struc_ver_id
    AND   fin.use_for_workplan_flag='Y'
    AND   h.plan_type_id=fin.fin_plan_type_id;
    /*
    SELECT 'Y'

     FROM pji_pjp_wbs_header
    WHERE wbs_version_id= p_pub_struc_ver_id;
    */

  l_dummy_pji_char    VARCHAR2(1);
 --bug 4472071


  l_project_id          NUMBER := p_project_id;
  l_responsibility_id       NUMBER := FND_GLOBAL.resp_id;
  l_resp_appl_id		NUMBER := FND_GLOBAL.resp_appl_id; -- 5233777
  l_financial_type      VARCHAR2(1);
  l_workplan_type       VARCHAR2(1);
  l_scheduled_start_date    DATE;
  l_scheduled_finish_date   DATE;
  l_proj_record_ver_number  NUMBER;
  l_proj_start_date     DATE;
  l_proj_completion_date    DATE;
  l_proj_element_id     NUMBER; --structure id
  l_as_of_date          DATE;
  l_task_weight_basis_code  pa_proj_progress_attr.task_weight_basis_code%TYPE;
  l_share_flag          VARCHAR2(1)  := 'N';
  l_copy_actuals_flag       VARCHAR2(1)  := 'Y';
  l_upd_new_elem_ver_id_flag    VARCHAR2(1) := 'Y'; --rtarway, 3951024
  l_i_msg_count         NUMBER := 0;
  l_i_msg_data          PA_VC_1000_2000:= PA_VC_1000_2000(1);
  l_i_return_status     VARCHAR2(1);
  l_user_id         NUMBER := FND_GLOBAL.USER_ID;-- rtarway, 4030358, changed from login id to user_id
--end bug 4019845
  l_out_online_flag     VARCHAR2(1);

  l_plan_version_id             NUMBER;    --bug 4587145
  l_pub_wp_ok                   VARCHAR2(1) := 'N'; --bug 5029112

BEGIN
    IF p_commit = FND_API.G_TRUE THEN
        savepoint process_wbs_updates;
    END IF;

    IF p_init_msg_list = FND_API.G_TRUE THEN
        FND_MSG_PUB.initialize;
    END IF;

    x_msg_count := 0;
    x_return_status := FND_API.G_RET_STS_SUCCESS;
    l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(G_PKG_NAME, 'Entering PROCESS_WBS_UPDATES', 3);
        pa_debug.set_curr_function( p_function   => 'PROCESS_WBS_UPDATES', p_debug_mode => l_debug_mode );
    END IF;

    -- Check for business rules violations
    IF l_debug_mode = 'Y' THEN
        pa_debug.write(G_PKG_NAME, 'Validating input parameters', 3);
        pa_debug.write(G_PKG_NAME, 'p_calling_context = '|| p_calling_context, 3);
        pa_debug.write(G_PKG_NAME, 'p_project_id = '|| p_project_id, 3);
        pa_debug.write(G_PKG_NAME, 'p_structure_version_id = '|| p_structure_version_id, 3);
        pa_debug.write(G_PKG_NAME, 'p_pub_struc_ver_id = '|| p_pub_struc_ver_id, 3);
        pa_debug.write(G_PKG_NAME, 'p_pub_prog_flag = '|| p_pub_prog_flag, 3);
    END IF;

    -- Throw an error if any of the mandatory parameter is NULL.
    IF (p_project_id IS NULL) OR (p_structure_version_id IS NULL) THEN
        PA_UTILS.ADD_MESSAGE
            (p_app_short_name => 'PA',
            p_msg_name       => 'PA_INV_PARAM_PASSED');
        RAISE Invalid_Arg_Exc_WP;
    END IF;

    l_update_wbs_flag := pa_project_structure_utils.GET_UPDATE_WBS_FLAG(p_project_id => p_project_id,
                                                                         p_structure_version_id => p_structure_version_id);

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(G_PKG_NAME, 'l_update_wbs_flag = '|| l_update_wbs_flag, 3);
    END IF;

--bug 4409337  moved from below to make use of some of these variables for bugfix.
    l_workplan_type := PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(p_structure_version_id, 'WORKPLAN');
    l_financial_type := PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(p_structure_version_id, 'FINANCIAL');
    l_share_flag       := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(l_project_id);


        IF l_debug_mode = 'Y' THEN
                pa_debug.write(G_PKG_NAME, 'l_workplan_type = '|| l_workplan_type, 3);
                pa_debug.write(G_PKG_NAME, 'l_financial_type = '|| l_financial_type, 3);
                pa_debug.write(G_PKG_NAME, 'l_share_flag = '|| l_share_flag, 3);
        END IF;
--bug 4409337

        IF (p_calling_context = 'ASGMT_PLAN_CHANGE') THEN  ---bug 4492493
             --- find the as_of_date for which to rollup and
             --- rollup method
             l_task_weight_basis_code := pa_progress_utils.get_task_weighting_basis(p_project_id => p_project_id);
             begin
                select max(as_of_date)
                into l_as_of_date
                from pa_progress_rollup ppr
                where ppr.project_id = p_project_id
                and ppr.structure_version_id is null
                and ppr.structure_type = 'WORKPLAN'
                and ppr.current_flag <> 'W'
                ;
             exception when others then
                return;
             end;

             IF l_debug_mode = 'Y' THEN
                pa_debug.write(G_PKG_NAME, 'Calling populate_pji_tab_for_plan' , 3);
             END IF;

             pa_progress_pub.populate_pji_tab_for_plan(
                          p_init_msg_list        => FND_API.G_FALSE
                         ,p_commit               => FND_API.G_FALSE
                         ,p_project_id           => p_Project_ID
                         ,p_structure_version_id => p_structure_version_id
                         ,p_baselined_str_ver_id => p_structure_version_id
                         ,p_structure_type       => 'WORKPLAN'
                         ,p_program_rollup_flag  => 'Y' -- 4392189
                         ,p_calling_context      => 'SUMMARIZE' -- 4392189
                         ,x_return_status        => x_return_status
                         ,x_msg_count            => x_msg_count
                         ,x_msg_data             => x_msg_data);
             IF l_debug_mode = 'Y' THEN
                pa_debug.write(G_PKG_NAME, 'After populate_pji_tab_for_plan  x_return_status='|| x_return_status, 3);
             END IF;

             IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                 raise Invalid_Arg_Exc_WP;
             END IF;
             IF l_debug_mode = 'Y' THEN
                 pa_debug.write(G_PKG_NAME, 'Calling ROLLUP_PROGRESS_PVT', 3);
             END IF;

             PA_PROGRESS_PVT.ROLLUP_PROGRESS_PVT(
                      p_init_msg_list             => FND_API.G_FALSE
                     ,p_commit                    => FND_API.G_FALSE
                     ,p_project_id                => p_Project_ID
                     ,p_structure_version_id      => p_structure_version_id
                     ,p_as_of_date                => l_as_of_date
                     ,p_wp_rollup_method          => l_task_weight_basis_code
                     ,p_rollup_entire_wbs         => 'Y'
                     ,p_working_wp_prog_flag      => 'N'
                     ,x_return_status             => x_return_status
                     ,x_msg_count                 => x_msg_count
                     ,x_msg_data                  => x_msg_data);

             IF l_debug_mode = 'Y' THEN
                 pa_debug.write(G_PKG_NAME, 'After ROLLUP_PROGRESS_PVT  x_return_status='|| x_return_status, 3);
             END IF;

             IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                 raise Invalid_Arg_Exc_WP;
             END IF;
             IF l_debug_mode = 'Y' THEN
                 pa_debug.write(G_PKG_NAME, 'Calling PROGRAM_ROLLUP_PVT', 3);
             END IF;

             PA_PROGRESS_PVT.PROGRAM_ROLLUP_PVT(
                        p_init_msg_list        => FND_API.G_FALSE
                       ,p_commit               => FND_API.G_FALSE
                       ,p_validate_only        => FND_API.G_FALSE
                       ,p_calling_module       => p_calling_context
                       ,p_project_id           => p_Project_ID
                       ,p_as_of_date           => l_as_of_date
                       ,p_structure_type       => 'WORKPLAN'
                       ,p_structure_ver_id     => p_structure_version_id
                       ,x_return_status        => x_return_status
                       ,x_msg_count            => x_msg_count
                       ,x_msg_data             => x_msg_data);

             IF l_debug_mode = 'Y' THEN
                pa_debug.write(G_PKG_NAME, 'After PROGRAM_ROLLUP_PVT  x_return_status='|| x_return_status, 3);
             END IF;

             IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                   raise Invalid_Arg_Exc_WP;
             END IF; --- bug 4492493

    -- Begin code to fix Bug # 4262985.
    -- Bug 4392189 : Added call of WBS_MAINT in APPLY_PROGRESS Context
    ELSIF (p_calling_context = 'ONLINE_APPLY_PROGRESS' OR p_calling_context = 'CONC_APPLY_PROGRESS') THEN
        IF p_calling_context = 'ONLINE_APPLY_PROGRESS' THEN
            l_online_flag := 'Y';
        ELSE
            l_online_flag := 'N';
        END IF;

        IF l_update_wbs_flag = 'Y' THEN
            IF l_debug_mode = 'Y' THEN
                pa_debug.write(G_PKG_NAME, 'Calling PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT with l_online_flag='||l_online_flag, 3);
            END IF;

            BEGIN
              -- l_online_flag = 'Y', then it is online
              -- 'N' , concurrent
              -- Even if it is Y, then wbs_maint defers it for Financial and version disabled case

                PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT(
                    p_new_struct_ver_id => p_structure_version_id
                   ,p_old_struct_ver_id => p_structure_version_id
                   ,p_project_id => p_project_id
                   ,p_online_flag => l_online_flag
                   ,p_calling_context => 'APPLY_PROGRESS'
                   ,p_rerun_flag => p_rerun_flag --bug 4589289
                   ,x_request_id => l_request_id
                   ,x_processing_code => l_proc_code
                   ,x_msg_code => l_msg_Code
                   ,x_return_status => x_return_status
                   ,x_online_flag => l_out_online_flag
                  );
                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After Call PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT with x_return_status='||x_return_status||' l_out_online_flag='||l_out_online_flag, 3);
                END IF;
            EXCEPTION
                WHEN OTHERS THEN
                    fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                           p_procedure_name => 'PROCESS_WBS_UDPATES',
                           p_error_text => SUBSTRB('Call of PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT Failed in Apply Progress Mode: SQLERRM='||SQLERRM,1,240));
                RAISE Invalid_Arg_Exc_WP;
            END;

                IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                raise Invalid_Arg_Exc_WP;
            END IF;
        END IF; -- l_update_wbs_flag = 'Y'


        IF NVL(l_update_wbs_flag,'N') = 'N' OR NVL(l_out_online_flag, 'Y') <> 'N' THEN
            IF l_debug_mode = 'Y' THEN
                pa_debug.write(G_PKG_NAME, 'Calling PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', 3);
            END IF;

            PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV
            (p_project_id                  =>      p_project_id
            ,p_working_str_version_id      =>      p_structure_version_id
            ,x_return_status               =>          x_return_status
            ,x_msg_count                   =>          x_msg_count
            ,x_msg_data                    =>          x_msg_data);

            IF l_debug_mode = 'Y' THEN
                pa_debug.write(G_PKG_NAME, 'After Call  PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV x_return_status='||x_return_status, 3);
            END IF;

        END IF;

            IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            raise Invalid_Arg_Exc_WP;
        END IF;

    ELSE -- IF (p_calling_context = 'ONLINE_APPLY_PROGRESS' OR p_calling_context = 'CONC_APPLY_PROGRESS') THEN

        -- End code to fix Bug # 4262985.


        --hsiu: bug 3035902
        --commented condition because there can be partial process
        --on financial planning API. Condition is added after processing
        --financial planning tasks.
        /*
        IF l_update_wbs_flag = 'N' THEN
            -- No further processing is required for this structure version. Return.
            -- TWUT.
            IF l_debug_mode = 'Y' THEN
                pa_debug.g_err_stage:= 'No updates required for this structure version.';
                pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
            END IF;
            RETURN;
        END IF;
        */

        -- Get the request id. If the request id returned is -1 then set it to null.
        l_request_id := FND_GLOBAL.CONC_REQUEST_ID;
        IF l_request_id = -1 THEN
            l_request_id := NULL;
        END IF;

        -- Check if the structure version to be processed corresponds to the FINANCIAL structure.
        -- If yes, do the processing required for the financial version.
        OPEN cur_structure_type(p_project_id, p_structure_version_id,'FINANCIAL');
        FETCH cur_structure_type INTO l_structure_type_flag;
        CLOSE cur_structure_type;

        -- TWUT.
        IF l_debug_mode = 'Y' THEN
            pa_debug.write(G_PKG_NAME, 'Financial structure type flag '||l_structure_type_flag, 3);
        END IF;

        /*
        IF nvl(l_structure_type_flag,'N') = 'Y' THEN
            x_return_status := FND_API.G_RET_STS_SUCCESS;
            -- Call the financial planning API.
            pa_fp_refresh_elements_pub.refresh_planning_elements(
                p_project_id        => p_project_id
                ,p_request_id        => l_request_id
                ,x_return_status     => x_return_status
                ,x_msg_count         => x_msg_count
                ,x_msg_data          => x_msg_data
                );
            IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                IF l_debug_mode = 'Y' THEN
                    pa_debug.g_err_stage := 'Error calling the financial planning API';
                    pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level4);
                END IF;
                Raise Invalid_Arg_Exc_WP;
            END IF;
        END IF;
        */

                -- Begin fix for Bug # 4409337.

                if nvl(l_structure_type_flag,'N') = 'Y'
                   AND p_calling_context IN (  'ONLINE_UPDATE', 'CONC_UPDATE' )   --bug 4472071
                   AND ( l_share_flag = 'N' OR l_workplan_type = 'N' ) --call WBS maint only if the project is either split financial or financial only.
                then

                        x_return_status := FND_API.G_RET_STS_SUCCESS;

                        -- Call the PJI API.

                                PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT(
                                    p_new_struct_ver_id => p_structure_version_id
                                   ,p_old_struct_ver_id => p_structure_version_id
                                   ,p_project_id => p_project_id
                                   ,p_online_flag => l_online_flag
                                   ,p_calling_context => p_calling_context
                                   ,p_rerun_flag => p_rerun_flag --bug 4589289
                                   ,x_request_id => l_request_id
                                   ,x_processing_code => l_proc_code
                                   ,x_msg_code => l_msg_Code
                                   ,x_return_status => x_return_status
                                   ,x_online_flag => l_out_online_flag
                                  );

                        if x_return_status <> FND_API.G_RET_STS_SUCCESS then

                                if l_debug_mode = 'Y' then

                                        pa_debug.g_err_stage := 'Error calling the financial planning API';
                                        pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level4);

                                end if;

                                Raise Invalid_Arg_Exc_WP;
                        end if;

                end if;

                -- End fix for Bug # 4409337.

        --hsiu: bug 3035902
        --Adding condition because there can be partial process
        --on financial planning API and we should not check the flag
        --for financial planning.
        --hsiu: commented for PJI integration
        /*
        IF l_update_wbs_flag = 'N' THEN
            -- No further processing is required for this structure version. Return.
            -- TWUT.
            IF l_debug_mode = 'Y' THEN
                pa_debug.g_err_stage:= 'No updates required for this structure version.';
                pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
            END IF;
            RETURN;
        END IF;
        */
        --end bug 3035902 changes

        -- Re initilaize the local as it is again used for a cursor fetch.
        -- TWUT
        l_structure_type_flag := NULL;

        -- Check if the sructure version to be processed corresponds to the WORKPLAN structure.
        -- If yes, do the processing required for the workplan version.
        OPEN cur_structure_type(p_project_id, p_structure_version_id, 'WORKPLAN');
        FETCH cur_structure_type INTO l_structure_type_flag;
        CLOSE cur_structure_type;

        -- TWUT.
        IF l_debug_mode = 'Y' THEN
            pa_debug.g_err_stage:= 'Workplan structure type flag '||l_structure_type_flag;
            pa_debug.write(G_PKG_NAME, 'Workplan structure type flag '||l_structure_type_flag, 3);
        END IF;

        IF p_calling_context <> 'COPY_PROJECT' THEN --bug 3035902 maansari
            --PJI changes
            --bug
            IF p_calling_context = 'ONLINE_PUBLISH' THEN
                --bug 3762882
                OPEN get_prev_published_ver(p_pub_struc_ver_id);
                FETCH get_prev_published_ver INTO l_prev_ver_id;
                CLOSE get_prev_published_ver;

                --bug 4019845
                --set current published as working for edit

                UPDATE pa_proj_elem_ver_structure
                SET status_code = 'STRUCTURE_WORKING',
                LOCKED_BY_PERSON_ID = (select locked_by_person_id
                         from pa_proj_elem_ver_structure
                         where project_id = l_project_id
                         and element_version_id = p_structure_version_id),
                LOCK_STATUS_CODE = 'LOCKED'
                WHERE project_id = l_project_id
                AND element_version_id = p_pub_struc_ver_id;

                --end bug 4019845
                --end bug 3762882
                l_pub_ver_id := p_pub_struc_ver_id;
                l_online_flag := 'Y';
                l_publish_flag := 'Y';
            ELSIF p_calling_context = 'ONLINE_UPDATE' THEN
                --bug 3574457: changed to p_structure_version_id
                l_pub_ver_id := p_structure_version_id;
                l_online_flag := 'Y';
                l_publish_flag := 'N';
                ELSIF p_calling_context = 'CONC_PUBLISH' THEN
                --bug 3574457: changed to p_pub_struc_ver_id
                --bug 3762882

                OPEN get_prev_published_ver(p_pub_struc_ver_id);
                FETCH get_prev_published_ver INTO l_prev_ver_id;
                CLOSE get_prev_published_ver;

                --bug 4019845
                --set current published as working for edit

                UPDATE pa_proj_elem_ver_structure
                SET status_code = 'STRUCTURE_WORKING',
                LOCKED_BY_PERSON_ID = (select locked_by_person_id
                         from pa_proj_elem_ver_structure
                         where project_id = l_project_id
                         and element_version_id = p_structure_version_id),
                LOCK_STATUS_CODE = 'LOCKED'
                WHERE project_id = l_project_id
                AND element_version_id = p_pub_struc_ver_id;

                --end bug 4019845
                --end bug 3762882

                l_pub_ver_id := p_pub_struc_ver_id;
                l_online_flag := 'N';
                l_publish_flag := 'Y';
            ELSIF p_calling_context = 'CONC_UPDATE' THEN
                l_pub_ver_id := p_structure_version_id;
                l_online_flag := 'N';
                l_publish_flag := 'N';
            END IF;

            -- Bug 3762882 : This code should be commented as FP is also
            -- pushing actuals for resource assignments so we should not push it for tasks here.
            -- BEGIN Bug 4284444 : Commented

            PA_TASK_PUB1.G_CALL_PJI_ROLLUP := 'N';  --4149392 fixed during fixing 4186512

            --bug 4019845
            IF (l_publish_flag = 'Y') THEN
                --*******************************************
                --Process WBS in PUBLISH mode
                --*******************************************

                         -- bug 5118313 Before proceding further with publishing, first correct the WBS on the working version.
                         --For performance improvements, PJI copies the WBS from working version to the publish version and hence a call to plan update will correct the data on working version before it gets copied to the published version.

                                --bug 4587145  Call plan update one more time for working version in the publish mode.
                                --This call is required in the publish if a workplan is published without running process WBS update after making some
                                --wbs changes like indent/outdent/copy/move.
                                BEGIN

                                        BEGIN

                                            IF l_debug_mode = 'Y' THEN
                                                pa_debug.write(G_PKG_NAME, 'Calling Pa_Fp_wp_gen_amt_utils.get_wp_version_id in PUBLISH mode for workign version', 3);
                                            END IF;

                                            l_plan_version_id := Pa_Fp_wp_gen_amt_utils.get_wp_version_id(
                                                          p_project_id        => l_project_id,
                                                          p_plan_type_id      => -1,
                                                          p_proj_str_ver_id   => p_structure_version_id) ;

                                            IF l_debug_mode = 'Y' THEN
                                                pa_debug.write(G_PKG_NAME, 'l_plan_version_id in UPDATE mode for working version='||l_plan_version_id, 3);
                                            END IF;

                                        EXCEPTION
                                        WHEN OTHERS THEN
                                                fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                                                p_procedure_name => 'PROCESS_WBS_UPDATES',
                                                p_error_text => SUBSTRB('Call of  Pa_Fp_wp_gen_amt_utils.get_wp_version_id is failed for PUBLISH Mode for working '||
                                                      'verison: SQLERRM='||SQLERRM,1,120));
                                                RAISE Invalid_Arg_Exc_WP;

                                        END;
                                        --end bug 4587145

                                        IF l_debug_mode = 'Y' THEN
                                                pa_debug.write(G_PKG_NAME, 'Calling PLAN_UPDATE in PUBLISH mode for working version', 3);
                                        END IF;
                                        PA_TASK_PUB1.G_CALL_PJI_ROLLUP := null;  --set the flag so that PJI rolls up data on the working version.

                                        PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE (x_msg_code => l_msg_code,
                                                           p_plan_version_id     => l_plan_version_id,  --bug 4587145
                                                           x_return_status => x_return_status);

                                        IF l_debug_mode = 'Y' THEN
                                                pa_debug.write(G_PKG_NAME,'After PLAN_UPDATE in PUBLISH mode for working verison x_return_status='||
                                                       x_return_status,l_debug_level3);
                                        END IF;
                                        PA_TASK_PUB1.G_CALL_PJI_ROLLUP := 'N'; --Set the flag back to 'N' to bypass any PJI rollup api call untill explicit plan_update gets called.
                                EXCEPTION
                                        WHEN OTHERS THEN
                                                fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                                                 p_procedure_name => 'PROCESS_WBS_UPDATES',
                                                 p_error_text => SUBSTRB('Call of PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE failed in PUBLISH mode for'||
                                                                 ' working verison:SQLERRM='||SQLERRM,1,120));
                                                RAISE Invalid_Arg_Exc_WP;
                                END;

                                IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                        Raise Invalid_Arg_Exc_WP;
                                END IF;

                                --end bug 4587145
                                --end bug 5118313


                          --bug 4472071  check if PJI summarization failed when WBS_MAIN is called. This means that the following
                          --api need not run again.
                           OPEN cur_chk_pji_failed;
                           FETCH cur_chk_pji_failed INTO l_dummy_pji_char;
                           IF cur_chk_pji_failed%NOTFOUND
                           THEN
                           --bug 4472071
                --all code from publishing (before calling process_wbs_updates)

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'Calling PA_Relationship_Pvt.Copy_Intra_Dependency', 3);
                END IF;

                PA_Relationship_Pvt.Copy_Intra_Dependency (
                    P_Source_Ver_Tbl  => NULL,
                    P_Destin_Ver_Tbl  => NULL,
                    P_source_struc_ver_id => p_structure_version_id,
                    p_dest_struc_ver_id => l_pub_ver_id,
                    X_Return_Status   => X_Return_Status,
                    X_Msg_Count       => X_Msg_Count,
                    X_Msg_Data        => X_Msg_Data
                    );

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After Copy_Intra_Dependency X_Return_Status='||X_Return_Status, 3);
                END IF;

                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    RAISE Invalid_Arg_Exc_WP;
                END IF;

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'Calling Publish_Inter_Proj_Dep', 3);
                END IF;

                PA_RELATIONSHIP_PVT.Publish_Inter_Proj_Dep (  -- This API needs to be called
                    p_publishing_struc_ver_id => p_structure_version_id,
                    p_previous_pub_struc_ver_id => l_prev_ver_id,
                    p_published_struc_ver_id => l_pub_ver_id,
                    X_Return_Status      => X_Return_Status,
                    X_Msg_Count          => X_Msg_Count,
                    X_Msg_Data           => X_Msg_Data
                    );

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After Publish_Inter_Proj_Dep X_Return_Status='||X_Return_Status, 3);
                END IF;

                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    RAISE Invalid_Arg_Exc_WP;
                END IF;

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'Calling Copy_OG_Lnk_For_Subproj_Ass', 3);
                END IF;


                PA_RELATIONSHIP_PVT.Copy_OG_Lnk_For_Subproj_Ass(
                    p_src_str_version_id      =>  p_structure_version_id,
                    p_dest_str_version_id     =>  l_pub_ver_id,  -- Destination Str version id can be of published str also
                    x_return_status           =>  X_Return_Status,
                    x_msg_count               =>  X_Msg_Count,
                    x_msg_data                =>  X_Msg_Data
                    );


                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After Copy_OG_Lnk_For_Subproj_Ass X_Return_Status='||X_Return_Status, 3);
                END IF;

                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    RAISE Invalid_Arg_Exc_WP;
                END IF;


                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'Calling Move_CI_Lnk_For_subproj_step1', 3);
                END IF;

                PA_RELATIONSHIP_PVT.Move_CI_Lnk_For_subproj_step1(
                    p_src_str_version_id      =>  p_structure_version_id,
                    p_pub_str_version_id      =>  l_pub_ver_id,
                    p_last_pub_str_version_id =>  l_prev_ver_id,
                    x_return_status           =>  x_return_status,
                    x_msg_count               =>  x_msg_count,
                    x_msg_data                =>  x_msg_data);

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After Move_CI_Lnk_For_subproj_step1 X_Return_Status='||X_Return_Status, 3);
                END IF;

                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    RAISE Invalid_Arg_Exc_WP;
                END IF;

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'Calling copy_mapping', 3);
                END IF;


                PA_PROJ_STRUC_MAPPING_PUB.copy_mapping(
                    p_context             => 'PUBLISH_VERSION'
                    ,p_src_project_id      => l_project_id
                    ,p_dest_project_id     => l_project_id
                    ,p_src_str_version_id  => p_structure_version_id
                    ,p_dest_str_version_id => l_pub_ver_id
                    ,x_return_status       => x_return_status
                    ,x_msg_count           => x_msg_count
                    ,x_msg_data            => x_msg_data
                    );

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After copy_mapping X_Return_Status='||X_Return_Status, 3);
                END IF;

                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    RAISE Invalid_Arg_Exc_WP;
                END IF;

                DECLARE
                    src_versions_tab   SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
                    dest_versions_tab  SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
                    prev_pub_tab       SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type(); --bug 3847386
                BEGIN
                    src_versions_tab.extend(1);
                    dest_versions_tab.extend(1);
                    src_versions_tab(1)  := p_structure_version_id;
                    dest_versions_tab(1) :=  l_pub_ver_id;
                    prev_pub_tab.extend(1);   --bug 3847386
                    prev_pub_tab(1) := l_prev_ver_id;   --bug 3847386
                    -- Copies budget versions, resource assignments and budget lines as required
                    -- for the workplan version.
                    --Smukka Bug No. 3474141 Date 03/01/2004
                    --moved PA_FP_COPY_FROM_PKG.copy_wp_budget_versions into plsql block
                    BEGIN

                        IF l_debug_mode = 'Y' THEN
                            pa_debug.write(G_PKG_NAME, 'Calling copy_wp_budget_versions', 3);
                        END IF;

			PA_TASK_ASSIGNMENT_UTILS.g_process_flow := 'PUBLISH'; -- 4646016

                        PA_FP_COPY_FROM_PKG.copy_wp_budget_versions(
                            p_source_project_id            => l_project_id
                            ,p_target_project_id            => l_project_id
                            ,p_src_sv_ids_tbl               => src_Versions_Tab
                            ,p_target_sv_ids_tbl            => dest_Versions_Tab
                            ,p_copy_act_from_str_ids_tbl    => prev_pub_tab --bug 3847386
                                                        --,p_publish_mode                 => 'Y'          --bug 4543744
                                                        ,p_copy_mode                    => 'V'     --bug  5118313
                            ,x_return_status                => x_return_status
                            ,x_msg_count                    => x_msg_count
                            ,x_Msg_data                     => x_msg_data
                            );

			PA_TASK_ASSIGNMENT_UTILS.g_process_flow := null; -- 4646016

                        IF l_debug_mode = 'Y' THEN
                            pa_debug.write(G_PKG_NAME, 'After copy_wp_budget_versions X_Return_Status='||X_Return_Status, 3);
                        END IF;

                    EXCEPTION
                        WHEN OTHERS THEN
			    PA_TASK_ASSIGNMENT_UTILS.g_process_flow := null; -- 4646016
                            fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                            p_procedure_name => 'PROCESS_WBS_UDPATES',
                            p_error_text => SUBSTRB('Call of PA_FP_COPY_FROM_PKG.copy_wp_budget_versions failed: SQLERRM='||SQLERRM,1,240));
                            RAISE Invalid_Arg_Exc_WP;
                    END;

                    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                        RAISE Invalid_Arg_Exc_WP;
                    END IF;
                END;

                                --moved these calls in the beginning.
                --l_workplan_type := PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(p_structure_version_id, 'WORKPLAN');
                --l_financial_type := PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(p_structure_version_id, 'FINANCIAL');

                IF (l_financial_type = 'Y') THEN

                    SELECT start_date, completion_date
                    INTO l_proj_start_date, l_proj_completion_date
                    FROM pa_projects_all
                    WHERE project_id = l_project_id;

                    --Call sync-up API

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME,'Calling import_task', 3);
                    END IF;

                    PA_XC_PROJECT_PUB.import_task(
                        p_project_id               => l_project_id
                        ,p_task_reference            => NULL
                        ,p_task_name                 => NULL
                        ,p_task_start_date           => NULL
                        ,p_task_end_date             => NULL
                        ,p_parent_task_reference     => NULL
                        ,p_task_number               => NULL
                        ,p_wbs_level                 => NULL
                        ,p_milestone                 => NULL
                        ,p_duration                  => NULL
                        ,p_duration_unit             => NULL
                        ,p_early_start_date          => NULL
                        ,p_early_finish_date         => NULL
                        ,p_late_start_date           => NULL
                        ,p_late_finish_date          => NULL
                        ,p_display_seq               => NULL
                        ,p_login_user_name           => NULL
                        ,p_critical_path             => NULL
                        ,p_sub_project_id            => NULL
                        ,p_attribute7                => NULL
                        ,p_attribute8                => NULL
                        ,p_attribute9                => NULL
                        ,p_attribute10               => NULL
                        ,p_progress_report           => NULL
                        ,p_progress_status           => NULL
                        ,p_progress_comments         => NULL
                        ,p_progress_asof_date        => NULL
                        ,p_predecessors              => NULL
                        ,p_structure_version_id      => l_pub_ver_id
                        ,p_calling_mode              => 'PUBLISH' );

                    IF l_debug_mode = 'Y' THEN
                                    pa_debug.g_err_stage:= 'After import_task  FND_MSG_PUB.count_msg='|| FND_MSG_PUB.count_msg;
                                    pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
                            END IF;
                            -- Fix for Bug # 4513291. Added below Exception handling
                            x_msg_count := FND_MSG_PUB.count_msg;
                            IF x_msg_count > 0 THEN
                                    raise Invalid_Arg_Exc_WP;
                            END IF;


                            IF l_debug_mode = 'Y' THEN
                                    pa_debug.g_err_stage:= 'Calling import_project ';
                                    pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
                            END IF;

                    l_i_msg_count := 0;
                            l_i_return_status := 'S'; -- Fix for Bug # 4513291.
                    PA_XC_PROJECT_PUB.import_project(
                        p_user_id            => l_user_id
                        ,p_commit                    => 'N'
                        ,p_project_id                => l_project_id
                        ,p_project_mpx_start_date    => fnd_date.date_to_canonical(l_proj_start_date)
                        ,p_project_mpx_end_date      => fnd_date.date_to_canonical(l_proj_completion_date)
                        ,p_task_mgr_override         => NULL
                        ,p_task_pgs_override         => NULL
                        ,p_process_id                => NULL
                        ,p_language                  => NULL
                        ,p_delimiter                 => NULL
                        ,p_responsibility_id         => l_responsibility_id
                        ,p_structure_id              => NULL
                        ,p_structure_version_id      => l_pub_ver_id
                        ,p_calling_mode              => 'PUBLISH'
			,p_resp_appl_id              => l_resp_appl_id -- 5233777
			,p_debug_mode                => l_debug_mode -- Fix for Bug # 4513291.
                        ,x_msg_count                 => l_i_msg_count
                        ,x_msg_data                  => l_i_msg_data
                        ,x_return_status             => l_i_return_status);

                            IF l_debug_mode = 'Y' THEN
                                    pa_debug.g_err_stage:= 'After import_project  FND_MSG_PUB.count_msg='|| FND_MSG_PUB.count_msg;
                                    pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
                                    pa_debug.write(G_PKG_NAME,'l_i_return_status='||l_i_return_status,l_debug_level3);
                                                        -- Fix for Bug # 4513291.
                                    pa_debug.write(G_PKG_NAME,'l_i_msg_count='||l_i_msg_count,l_debug_level3);
                                                        -- Fix for Bug # 4513291.
                                END IF;

                    l_msg_count := FND_MSG_PUB.count_msg;
                            --IF l_msg_count > 0 THEN -- Fix for Bug # 4513291.
                            IF l_msg_count > 0 OR l_i_return_status <> 'S' OR l_i_msg_count > 0 THEN  -- Fix for Bug # 4513291.
                                    x_msg_count := l_msg_count;
                                    raise Invalid_Arg_Exc_WP;
                            END IF;
                END IF; --if financial type = Y

                         --bug 4472071
                              END IF;
                              CLOSE cur_chk_pji_failed;
                         --bug 4472071


                --moved this code here from above for bugfix 4296915. This is required in order to pick the
                --published str version in tasks_rollup api after its status is set to published..
                --bug 4287813  --move the code in  PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup for
                                --bug 4541039

                                --this rollup call is require to rollup from a published structure of sub-project to this project
                                --if the link is created but process updates is not run.
                                --The global variable g_apply_progress_flag is used to by pass the check in
                                --pa_task_assingment_utils.check_edit_task_ok api for any process is running. The api
                                --pa_task_assignment_utils_adjust_assgnmt_dates is failing for the working verison bcoz there is
                                --a process(PUB) currently in process and therefore edit_task_ok api will return 'N' to
                                --adjust_asgnmt api.

                                PA_TASK_ASSIGNMENT_UTILS.g_apply_progress_flag := 'Y'; --although th
                                --IF PA_PROJECT_STRUCTURE_UTILS.Check_Subproject_Exists(l_project_id,p_structure_version_id, 'WORKPLAN') = 'Y' THEN
                                IF PA_RELATIONSHIP_UTILS.Check_link_exists( p_project_id => p_project_id
                                                      ,p_link_type => 'WORKPLAN' ) = 'Y'
                                THEN

                                    --call the dates rollup API for the structure version
                                    IF l_debug_mode  = 'Y' THEN
                                         pa_debug.write(G_PKG_NAME, 'Before calling PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup for entire grid in PUBLISH mode', 3);
                                     END IF;

                                     PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup(
                                                p_project_id           => p_project_id,
                                                p_published_str_ver_id  => l_pub_ver_id,
                                                x_return_status => x_return_status,
                                                x_msg_count => x_msg_count,
                                                x_msg_data => x_msg_data);

                                     IF l_debug_mode  = 'Y' THEN
                                        pa_debug.write(G_PKG_NAME, 'After calling PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup for entire grid in PUBLISH mode x_return_status='||x_return_status, 3);
                                     END IF;

                                     IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                                        RAISE Invalid_Arg_Exc_WP;
                                     END IF;
                                END IF;

        	-- bug 8971181 : Moved this code to below the call for schedule dates rollup, as stamping of PUBLISHED version hinders the validation checks for task assignments if attached
	        --bug 4555289 moved here to avoid multiple working versions.
	        --if there was a failure in PJI then the following code pieces were not
	        --getting executed hence there were multiple working verisons.
	        --set published version back to published status
                UPDATE pa_proj_elem_ver_structure
                SET status_code = 'STRUCTURE_PUBLISHED',
                LOCKED_BY_PERSON_ID = NULL,
                LOCK_STATUS_CODE = 'UNLOCKED'
                WHERE project_id = l_project_id
                AND element_version_id = l_pub_ver_id;

                                --rollup to the parent project from the current published structure version.
                                /*IF PA_RELATIONSHIP_UTILS.Check_parent_project_exists(
                                                       p_project_id           => p_project_id
                                                      ,p_structure_ver_id => l_pub_ver_id
                                                      ,p_link_type            => 'WORKPLAN' ) = 'Y'
                                IF PA_PROJECT_STRUCTURE_UTILS.Check_Subproject_Exists(l_project_id,l_pub_ver_id, 'WORKPLAN') = 'Y'
                                THEN
                                    IF l_debug_mode  = 'Y' THEN
                                         pa_debug.write(G_PKG_NAME, 'Before calling PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup for published structure verison in PUBLISH mode', 3);
                                     END IF;

                     PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup(
                                                p_project_id           => p_project_id,
                        p_structure_version_id => l_pub_ver_id,
                        x_return_status => x_return_status,
                        x_msg_count => x_msg_count,
                        x_msg_data => x_msg_data);

                     IF l_debug_mode  = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After calling PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup for published structure version in PUBLISH mode x_return_status='||x_return_status, 3);
                     END IF;

                     IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    RAISE Invalid_Arg_Exc_WP;
                     END IF;

                                END IF;
                                       */
                                PA_TASK_ASSIGNMENT_UTILS.g_apply_progress_flag := 'N';
                --end bug 4287813
                                --end bug 4541039

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'Calling Task_Stat_Pushdown_Rollup', 3);
                END IF;

                --push down and rollup
                PA_STRUCT_TASK_ROLLUP_PUB.Task_Stat_Pushdown_Rollup(
                    p_structure_version_id => l_pub_ver_id
                    ,x_return_status => x_return_status
                    ,x_msg_count => x_msg_count
                    ,x_msg_data => x_msg_data
                    );

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After Task_Stat_Pushdown_Rollup  x_return_status='|| x_return_status, 3);
                END IF;

                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    RAISE Invalid_Arg_Exc_WP;
                END IF;
      --End bug 4555289

                --moved here before calling summarization API for program reporting changes.
                -- This was previously called just before COPY_PROGRESS_ACT_ETC api
                --bug 3762882

                BEGIN -- Bug 4284444
                    --new published version and prev published version
                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling WBS_MAINT in PUBLISH mode', 3);
                    END IF;

                    PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT(
                        p_new_struct_ver_id => l_pub_ver_id
                        ,p_old_struct_ver_id    => l_prev_ver_id
                        ,p_project_id       => p_project_id
                        ,p_publish_flag     => 'Y'
                        ,p_online_flag      => l_online_flag
                        ,p_calling_context  => p_calling_context -- 4392189
                        ,p_rerun_flag => p_rerun_flag --bug 4589289
                        ,x_request_id       => l_request_id
                        ,x_processing_code  => l_proc_code
                        ,x_msg_code     => l_msg_Code
                        ,x_return_status    => x_return_status
                        ,x_online_flag      => l_out_online_flag -- 4392189
                        );
                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After WBS_MAINT in PUBLISH mode  x_return_status='|| x_return_status, 3);
                    END IF;

                EXCEPTION
                    WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                            p_procedure_name => 'PROCESS_WBS_UPDATES',
                            p_error_text => SUBSTRB('Call of PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT Failed for Publish Mode: SQLERRM='||SQLERRM,1,240));
                        RAISE Invalid_Arg_Exc_WP;
                END;
                --endbug 3762882

                IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    Raise Invalid_Arg_Exc_WP;
                END IF;

                -- Added this for FP_M changes -- Bhumesh

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'Calling Pull_Summarized_Actuals', 3);
                END IF;

                PA_PROGRESS_PUB.Pull_Summarized_Actuals (
                    P_Project_ID       =>  l_Project_ID
                    ,p_Calling_Mode     =>  'PUBLISH'
                    ,x_return_status    =>  x_return_status
                    ,x_msg_count        =>  x_msg_count
                    ,x_msg_data         =>  x_msg_data
                    );

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After Pull_Summarized_Actuals  x_return_status='|| x_return_status, 3);
                END IF;

                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    RAISE Invalid_Arg_Exc_WP;
                END IF;

                --bug 4232150 Moved from above to be called after summarization.
                -- Dates changes

                IF (l_workplan_type = 'Y') THEN
                    OPEN get_scheduled_dates(l_project_id, l_pub_ver_id);
                    FETCH get_scheduled_dates INTO l_scheduled_start_date, l_scheduled_finish_date;
                    CLOSE get_scheduled_dates;

                    OPEN get_proj_rec_ver_number(l_project_id);
                    FETCH get_proj_rec_ver_number INTO l_proj_record_ver_number;
                    CLOSE get_proj_rec_ver_number;

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling UPDATE_PROJECT_DATES', 3);
                    END IF;

                    PA_PROJECT_DATES_PUB.UPDATE_PROJECT_DATES (
                        p_validate_only          => FND_API.G_FALSE
                        ,p_project_id             => l_project_id
                        ,p_date_type              => 'SCHEDULED'
                        ,p_start_date             => l_scheduled_start_date
                        ,p_finish_date            => l_scheduled_finish_date
                        ,p_record_version_number  => l_proj_record_ver_number
                        ,x_return_status          => x_return_status
                        ,x_msg_count              => l_msg_count
                        ,x_msg_data               => l_msg_data );

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After UPDATE_PROJECT_DATES  x_return_status='|| x_return_status, 3);
                    END IF;

                    --Check if there is any error.
                    l_msg_count := FND_MSG_PUB.count_msg;
                    IF l_msg_count > 0 THEN
                        x_msg_count := l_msg_count;
                        IF x_msg_count = 1 THEN
                            x_msg_data := l_msg_data;
                        END IF;
                        RAISE Invalid_Arg_Exc_WP;
                    END IF;
                END IF; --workplan = Y

                -- project dates changes
                -- copy dates to transaction dates if 1, share structure
                IF ((l_workplan_type = 'Y') AND (l_financial_type = 'Y')) THEN
                    --select workplan attr
                    OPEN get_struc_id(l_project_id, l_pub_ver_id);
                    FETCH get_struc_id INTO l_proj_element_id;
                    CLOSE get_struc_id;

                    IF (PA_WORKPLAN_ATTR_UTILS.CHECK_AUTO_DATE_SYNC_ENABLED(l_proj_element_id) = 'Y') THEN
                        --Copy to transaction date
                        IF l_debug_mode = 'Y' THEN
                            pa_debug.write(G_PKG_NAME, 'Calling COPY_PROJECT_DATES', 3);
                        END IF;
                        PA_PROJECT_DATES_PUB.COPY_PROJECT_DATES(
                          p_project_id => l_project_id,
                          x_return_status => x_return_status,
                          x_msg_count => l_msg_count,
                          x_msg_data => l_msg_data
                        );

                        IF l_debug_mode = 'Y' THEN
                            pa_debug.write(G_PKG_NAME, 'After COPY_PROJECT_DATES  x_return_status='|| x_return_status, 3);
                        END IF;

                        IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                            raise Invalid_Arg_Exc_WP;
                        END IF;

                    END IF;
                END IF; -- ((l_workplan_type = 'Y') AND (l_financial_type = 'Y')) THEN

                -- 5029112 (4925192)
                l_pub_wp_ok := pa_progress_utils.check_wwp_prog_publishing_ok(l_project_id,p_structure_version_id);
                --bug 4232150

                IF p_pub_prog_flag = 'Y' THEN

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling Publish_Progress', 3);
                    END IF;

                    PA_PROGRESS_PUB.Publish_Progress(
                    p_project_id               => l_Project_ID
                    ,p_working_str_ver_id       => p_structure_version_id -- Bug 4190086
                    ,p_pub_structure_version_id => l_pub_ver_id  -- Bug 3839288
                    ,x_upd_new_elem_ver_id_flag => l_upd_new_elem_ver_id_flag -- added by rtarway for BUG 3951024
                    ,x_as_of_date               => l_as_of_date -- Bug 3839288
                    ,x_task_weight_basis_code   => l_task_weight_basis_code -- Bug 3839288
                    ,x_return_status            => x_return_status
                    ,x_msg_count                => x_msg_count
                    ,x_msg_data                 => x_msg_data
                    );

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After Publish_Progress  x_return_status='|| x_return_status, 3);
                    END IF;

                    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                        raise Invalid_Arg_Exc_WP;
                    END IF;
                END IF; -- p_pub_prog_flag = 'Y' THEN

                --bug 4019845
                                --moved this call in the beginning
                --l_share_flag       := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(l_project_id);
                --The follwoing api is called to push progress data to PJI for the new
                --structure version.

                --bug 3822112
                IF l_share_flag = 'Y' THEN
                    l_copy_actuals_flag := 'N';
                END IF;

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'Calling COPY_PROGRESS_ACT_ETC', 3);
                END IF;

                PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC(
                p_project_id               => l_Project_ID
                ,p_src_str_ver_id           => p_structure_version_id
                ,p_dst_str_ver_id           => l_pub_ver_id
                ,p_pub_wp_with_prog_flag    => p_pub_prog_flag
                ,p_calling_context          => 'PUBLISH'
                ,p_copy_actuals_flag        => l_copy_actuals_flag    --bug 3822112
                ,p_last_pub_str_version_id  => l_prev_ver_id -- Modified rakragha 28-JUL-2004
                ,x_return_status            => x_return_status
                ,x_msg_count                => x_msg_count
                ,x_msg_data                 => x_msg_data
                );

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After COPY_PROGRESS_ACT_ETC  x_return_status='|| x_return_status, 3);
                END IF;

                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    raise Invalid_Arg_Exc_WP;
                END IF;

                --bug 4149392

                PA_TASK_PUB1.G_CALL_PJI_ROLLUP := NULL;
                BEGIN

                                        --bug 4587145
                                        BEGIN

                                            IF l_debug_mode = 'Y' THEN
                                                pa_debug.write(G_PKG_NAME, 'Calling Pa_Fp_wp_gen_amt_utils.get_wp_version_id in PUBLISH mode', 3);
                                            END IF;

                                            l_plan_version_id := Pa_Fp_wp_gen_amt_utils.get_wp_version_id(
                              p_project_id        => l_project_id,
                              p_plan_type_id      => -1,
                              p_proj_str_ver_id   => l_pub_ver_id) ;

                                            IF l_debug_mode = 'Y' THEN
                                                pa_debug.write(G_PKG_NAME, 'l_plan_version_id in PUBLISH mode='||l_plan_version_id, 3);
                                            END IF;

                                        EXCEPTION
                                        WHEN OTHERS THEN
                                                fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                                                p_procedure_name => 'PROCESS_WBS_UPDATES',
                                                p_error_text => SUBSTRB('Call of  Pa_Fp_wp_gen_amt_utils.get_wp_version_id is failed for Publish Mode: SQLERRM='||SQLERRM,1,120));
                                                RAISE Invalid_Arg_Exc_WP;

                                        END;
                                        --end bug 4587145

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling PLAN_UPDATE in PUBLISH mode', 3);
                    END IF;

                    PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE (x_msg_code => l_msg_code,
                                                  p_plan_version_id     => l_plan_version_id,  --bug 4587145
                                                  x_return_status => x_return_status);

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After PLAN_UPDATE in PUBLISH mode  x_return_status='|| x_return_status, 3);
                    END IF;

                EXCEPTION
                    WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                        p_procedure_name => 'PROCESS_WBS_UPDATES',
                        p_error_text => SUBSTRB('Call of PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE is failed for Publish Mode: SQLERRM='||SQLERRM,1,120));
                        RAISE Invalid_Arg_Exc_WP;
                END;
                -- Bug 4284444

                IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    Raise Invalid_Arg_Exc_WP;
                END IF;

                --end bug 4149392


                IF p_pub_prog_flag = 'Y' AND l_as_of_date IS NOT NULL THEN

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling populate_pji_tab_for_plan' , 3);
                    END IF;

                    pa_progress_pub.populate_pji_tab_for_plan(
                        p_init_msg_list     => FND_API.G_FALSE
                        ,p_commit       => FND_API.G_FALSE
                        ,p_project_id       => l_Project_ID
                        ,p_structure_version_id => l_pub_ver_id
                        ,p_baselined_str_ver_id => PA_PROJECT_STRUCTURE_UTILS.Get_Baseline_Struct_Ver(l_Project_ID)
                        ,p_structure_type       => 'WORKPLAN'
                        ,p_program_rollup_flag  => 'Y' -- 4392189
                        ,p_calling_context  => 'SUMMARIZE' -- 4392189
                        ,p_as_of_date       => l_as_of_date -- 4392189
                        ,x_return_status        => x_return_status
                        ,x_msg_count            => x_msg_count
                        ,x_msg_data             => x_msg_data);

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After populate_pji_tab_for_plan  x_return_status='|| x_return_status, 3);
                    END IF;

                    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                        raise Invalid_Arg_Exc_WP;
                    END IF;

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling ROLLUP_PROGRESS_PVT', 3);
                    END IF;

                    PA_PROGRESS_PVT.ROLLUP_PROGRESS_PVT(
                        p_init_msg_list             => FND_API.G_FALSE
                        ,p_commit                    => FND_API.G_FALSE
                        ,p_project_id                => l_Project_ID
                        ,p_structure_version_id      => l_pub_ver_id
                        ,p_as_of_date                => l_as_of_date
                        ,p_wp_rollup_method          => l_task_weight_basis_code
                        ,p_rollup_entire_wbs         => 'Y'
                        ,p_working_wp_prog_flag      => 'N'
                        ,p_upd_new_elem_ver_id_flag  => l_upd_new_elem_ver_id_flag --rtarway, 3951024
                        ,x_return_status             => x_return_status
                        ,x_msg_count                 => x_msg_count
                        ,x_msg_data                  => x_msg_data);

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After ROLLUP_PROGRESS_PVT  x_return_status='|| x_return_status, 3);
                    END IF;

                    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                        raise Invalid_Arg_Exc_WP;
                    END IF;
                    -- 4575855 : Do not call PROGRAM_ROLLUP_PVT
                    -- instead we are calling now ROLLUP_PROG_FROM_SUBPROJS
                    /*
                    -- 4392189 : Added PROGRAM_ROLLUP_PVT call

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling PROGRAM_ROLLUP_PVT', 3);
                    END IF;

                    PA_PROGRESS_PVT.PROGRAM_ROLLUP_PVT(
                        p_init_msg_list         => FND_API.G_FALSE
                        ,p_commit               => FND_API.G_FALSE
                        ,p_validate_only        => FND_API.G_FALSE
                        ,p_project_id           => l_Project_ID
                        ,p_as_of_date           => l_as_of_date
                        ,p_structure_type       => 'WORKPLAN'
                        ,p_structure_ver_id     => l_pub_ver_id
                        ,x_return_status        => x_return_status
                        ,x_msg_count            => x_msg_count
                        ,x_msg_data             => x_msg_data);

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After PROGRAM_ROLLUP_PVT  x_return_status='|| x_return_status, 3);
                    END IF;

                    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                        raise Invalid_Arg_Exc_WP;
                    END IF;
                    */
                END IF; -- p_pub_prog_flag = 'Y' AND l_as_of_date IS NOT NULL THEN

                IF p_pub_prog_flag = 'Y' THEN
                    -- 4575855 : Added call of ROLLUP_PROG_FROM_SUBPROJS
                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling ROLLUP_PROG_FROM_SUBPROJS', 3);
                    END IF;

                    PA_PROGRESS_PVT.ROLLUP_PROG_FROM_SUBPROJS(
                        p_init_msg_list         => FND_API.G_FALSE
                        ,p_commit               => FND_API.G_FALSE
                        ,p_validate_only        => FND_API.G_FALSE
                        ,p_project_id           => l_Project_ID
                        ,p_structure_version_id => l_pub_ver_id
                        ,x_return_status        => x_return_status
                        ,x_msg_count            => x_msg_count
                        ,x_msg_data             => x_msg_data);

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After ROLLUP_PROG_FROM_SUBPROJS  x_return_status='|| x_return_status, 3);
                    END IF;

                    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                        raise Invalid_Arg_Exc_WP;
                    END IF;

                    --bug 3851528
                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling clear_prog_outdated_flag', 3);
                    END IF;

                    PA_PROGRESS_UTILS.clear_prog_outdated_flag(
                        p_project_id                => l_Project_ID
                        ,p_structure_version_id      => l_pub_ver_id
                        ,p_object_id                 => null
                        ,p_object_type               => null
                        ,x_return_status             => x_return_status
                        ,x_msg_count                 => x_msg_count
                        ,x_msg_data                  => x_msg_data);

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After clear_prog_outdated_flag  x_return_status='|| x_return_status, 3);
                    END IF;

                    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                                raise Invalid_Arg_Exc_WP;
                    END IF;
                END IF; -- p_pub_prog_flag = 'Y' THEN
                --end bug 4019845, publishing changes

                -- 5029112 (4925192)
                 if l_pub_wp_ok = 'Y' then
                    UPDATE pa_proj_elem_ver_structure
                       set date_prog_applied_on_wver = sysdate
                     WHERE project_id = l_project_id
                       AND element_version_id = p_structure_version_id;
                 end if;

                                /* The following call is not required as the mechanics of program data rollup is changed.
                                   Earlier, there was a pull method to rollup the data from sub-project to parent project and this was
                                   the reason we had this api call to mark all the immediate parents to dirty so that when user goes to
                                   parent project, he wil the message to run process wbs in order to see correct program rollup.
                                   But now publishing of a sub-project will push the data to all its parent. This change in pull to
                                   push mechanics does not require the following api call. Hence commenitng out.
                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'Calling UPDATE_PARENT_WBS_FLAG_DIRTY', 3);
                END IF;

                PA_RELATIONSHIP_PVT.UPDATE_PARENT_WBS_FLAG_DIRTY(
                    p_project_id                => l_Project_ID
                    ,p_structure_version_id      => l_pub_ver_id
                    ,x_return_status             => x_return_status
                    ,x_msg_count                 => x_msg_count
                    ,x_msg_data                  => x_msg_data);

                IF l_debug_mode = 'Y' THEN
                    pa_debug.write(G_PKG_NAME, 'After UPDATE_PARENT_WBS_FLAG_DIRTY  x_return_status='|| x_return_status, 3);
                END IF;

                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                    raise Invalid_Arg_Exc_WP;
                END IF;
                                */

                                --bug 4479392
                                -- Mark the structure version as no pending wbs updates.
                                IF l_debug_mode = 'Y' THEN
                                        pa_debug.write(G_PKG_NAME, 'Before calling pa_proj_task_struc_pub.set_update_wbs_flag for published version', 3);
                                END IF;

                                pa_proj_task_struc_pub.set_update_wbs_flag(
                                    p_project_id            => p_project_id
                                   ,p_structure_version_id  => l_pub_ver_id
                                   ,p_update_wbs_flag       => 'N'
                                   ,x_return_status         => x_return_status
                                   ,x_msg_count             => x_msg_count
                                   ,x_msg_data              => x_msg_data
                                   );

                                IF l_debug_mode = 'Y' THEN
                                        pa_debug.write(G_PKG_NAME, 'After pa_proj_task_struc_pub.set_update_wbs_flag for published version  x_return_status='|| x_return_status, 3);
                                END IF;

                                IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                                        raise Invalid_Arg_Exc_WP;
                                END IF;
                                --bug 4479392


            ELSIF l_publish_flag = 'N' THEN
                --*******************************************
                --Process WBS in UPDATE MODE
                --*******************************************

                --bug 4186512
                --set the PJI global flag to NULL before calling pji wbsmant for
                --indent/outdent/copy/move
                PA_TASK_PUB1.G_CALL_PJI_ROLLUP := null;

                BEGIN -- Bug 4284444
                    --both working version
                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling WBS_MAINT in UPDATE mode', 3);
                    END IF;

                    PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT(
                    p_new_struct_ver_id => p_structure_version_id
                    ,p_old_struct_ver_id => p_structure_version_id
                    ,p_project_id => p_project_id
                    ,p_online_flag => l_online_flag
                    ,p_calling_context => p_calling_context -- 4392189
                    ,p_rerun_flag => p_rerun_flag --bug 4589289
                    ,x_request_id => l_request_id
                    ,x_processing_code => l_proc_code
                    ,x_msg_code => l_msg_Code
                    ,x_return_status => x_return_status
                    ,x_online_flag => l_out_online_flag -- 4392189
                    );

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After WBS_MAINT in UPDATE mode  x_return_status='|| x_return_status, 3);
                    END IF;

                EXCEPTION
                    WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                            p_procedure_name => 'PROCESS_WBS_UPDATES',
                            p_error_text     => SUBSTRB('Call of PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT Failed in Update Mode: SQLERRM='||SQLERRM,1,240));
                            RAISE Invalid_Arg_Exc_WP;
                END;

                IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    Raise Invalid_Arg_Exc_WP;
                END IF;

                --copy task bug 4186512
                --Since PJI wbs maint does not pick the extr lines, need to call plan_update for copy task. Move may also require this call. So calling it regardless of any WBS change except publishing.

                BEGIN

                                        --bug 4587145
                                        BEGIN

                                            IF l_debug_mode = 'Y' THEN
                                                pa_debug.write(G_PKG_NAME, 'Calling Pa_Fp_wp_gen_amt_utils.get_wp_version_id in UPDATE mode', 3);
                                            END IF;

                                            l_plan_version_id := Pa_Fp_wp_gen_amt_utils.get_wp_version_id(
                                                          p_project_id        => p_project_id,
                                                          p_plan_type_id      => -1,
                                                          p_proj_str_ver_id   => p_structure_version_id) ;

                                            IF l_debug_mode = 'Y' THEN
                                                pa_debug.write(G_PKG_NAME, 'l_plan_version_id in UPDATE mode='||l_plan_version_id, 3);
                                            END IF;

                                        EXCEPTION
                                        WHEN OTHERS THEN
                                                fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                                                p_procedure_name => 'PROCESS_WBS_UPDATES',
                                                p_error_text => SUBSTRB('Call of  Pa_Fp_wp_gen_amt_utils.get_wp_version_id is failed for UPDATE Mode: SQLERRM='||SQLERRM,1,120));
                                                RAISE Invalid_Arg_Exc_WP;

                                        END;
                                        --end bug 4587145

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling PLAN_UPDATE in UPDATE mode', 3);
                    END IF;

                    PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE (x_msg_code => l_msg_code,
                                                           p_plan_version_id     => l_plan_version_id,  --bug 4587145
                               x_return_status => x_return_status);

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME,'After PLAN_UPDATE in UPDATE mode  x_return_status='|| x_return_status,l_debug_level3);
                    END IF;
                EXCEPTION
                    WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                         p_procedure_name => 'PROCESS_WBS_UPDATES',
                         p_error_text => SUBSTRB('Call of PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE failed in Update mode:SQLERRM='||SQLERRM,1,120));
                        RAISE Invalid_Arg_Exc_WP;
                END;

                --end copy task bug 4186512

                -- Bug 4284444
                IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    Raise Invalid_Arg_Exc_WP;
                END IF;

                -- Bug 4284444 : Commented the below code
                --  EXCEPTION
                --    WHEN OTHERS THEN
                --       fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                --                               p_procedure_name => 'PROCESS_WBS_UPDATES',
                --                               p_error_text     => SUBSTRB('PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT:'||SQLERRM,1,240));
                --    RAISE Invalid_Arg_Exc_WP;
                --  END;

                IF nvl(l_structure_type_flag,'N') = 'Y' THEN

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling PROCESS_TASK_WEIGHTAGE', 3);
                    END IF;

                    pa_proj_task_struc_pub.PROCESS_TASK_WEIGHTAGE(
                        p_project_id            => p_project_id
                        --               ,p_structure_version_id  => p_structure_version_id
                        --Modified for BUG 4127178
                        ,p_structure_version_id  => l_pub_ver_id
                        ,x_return_status         => x_return_status
                        ,x_msg_count             => x_msg_count
                        ,x_msg_data              => x_msg_data
                        );

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After PROCESS_TASK_WEIGHTAGE  x_return_status='|| x_return_status, 3);
                    END IF;

                    IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        Raise Invalid_Arg_Exc_WP;
                    END IF;
                END IF;
                --bug 3035902 maansari

                --call progress rollup api if calling context is not copy project.
                -- Bug 3764224 : Moved populate_pji_tab_for_plan in RE_ROLLUP_PROGRESS
                -- Bug 3693757 : 13-Jul-04 PJI tmp1 table shd be populated so that rollup API can access actuals values in RE_ROLLUP_PROGRESS
                /*      BEGIN
                        pa_progress_pub.populate_pji_tab_for_plan(
                        p_init_msg_list         => FND_API.G_FALSE,
                        p_project_id            => p_project_id,
                        p_structure_version_id  => p_structure_version_id,
            --                        p_baselined_str_ver_id  => l_baselined_str_ver_id,
                        p_structure_type        => 'WORKPLAN',
                        x_return_status         => x_return_status,
                        x_msg_count             => x_msg_count,
                        x_msg_data              => x_msg_data
                        );

                        IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                            Raise Invalid_Arg_Exc_WP;
                        END IF;
                    EXCEPTION
                        WHEN OTHERS THEN
                            fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                                 p_procedure_name => 'PROCESS_WBS_UPDATES',
                                 p_error_text     => SUBSTRB('PA_PROGRESS_PUB.populate_pji_tab_for_plan:'||SQLERRM,1,240));
                            RAISE FND_API.G_EXC_ERROR;
                    END;
                */

                IF nvl(l_structure_type_flag,'N') = 'Y'  THEN   --fpm progress management changes

                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'Calling RE_ROLLUP_PROGRESS', 3);
                    END IF;

                    PA_PROGRESS_PUB.RE_ROLLUP_PROGRESS(
                        p_project_id            => p_project_id
                        ,p_structure_version_id  => p_structure_version_id
                        ,x_return_status         => x_return_status
                        ,x_msg_count             => x_msg_count
                        ,x_msg_data              => x_msg_data
                        );
                    IF l_debug_mode = 'Y' THEN
                        pa_debug.write(G_PKG_NAME, 'After RE_ROLLUP_PROGRESS  x_return_status='|| x_return_status, 3);
                    END IF;

                    -- Bug 4575855 : Added call of ROLLUP_PROG_FROM_SUBPROJS
                    IF PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(p_project_id) = 'N' THEN
                        IF l_debug_mode = 'Y' THEN
                            pa_debug.write(G_PKG_NAME, 'Calling ROLLUP_PROG_FROM_SUBPROJS', 3);
                        END IF;

                        PA_PROGRESS_PVT.ROLLUP_PROG_FROM_SUBPROJS(
                            p_init_msg_list         => FND_API.G_FALSE
                            ,p_commit               => FND_API.G_FALSE
                            ,p_validate_only        => FND_API.G_FALSE
                            ,p_project_id           => p_project_id
                            ,p_structure_version_id => l_pub_ver_id
                            ,x_return_status        => x_return_status
                            ,x_msg_count            => x_msg_count
                            ,x_msg_data             => x_msg_data);

                        IF l_debug_mode = 'Y' THEN
                            pa_debug.write(G_PKG_NAME, 'After ROLLUP_PROG_FROM_SUBPROJS  x_return_status='|| x_return_status, 3);
                        END IF;

                        IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                            raise Invalid_Arg_Exc_WP;
                        END IF;
                    END IF;

                END IF;

                IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    Raise Invalid_Arg_Exc_WP;
                END IF;

                                --bug 4541039
                                IF PA_RELATIONSHIP_UTILS.Check_link_exists( p_project_id => p_project_id
                                                      ,p_link_type => 'WORKPLAN' ) = 'Y'
                                THEN
                                    IF l_debug_mode  = 'Y' THEN
                                         pa_debug.write(G_PKG_NAME, 'Before calling PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup for entire grid in UPDATE mode', 3);
                                     END IF;

                                     PA_TASK_ASSIGNMENT_UTILS.g_apply_progress_flag := 'Y'; --although th
                                     PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup(
                                                p_project_id           => p_project_id,
                                                x_return_status => x_return_status,
                                                x_msg_count => x_msg_count,
                                                x_msg_data => x_msg_data);

                                     IF l_debug_mode  = 'Y' THEN
                                        pa_debug.write(G_PKG_NAME, 'After calling PA_STRUCT_TASK_ROLLUP_PUB.Program_Schedule_dates_rollup for entire grid in UPDATE mode x_return_status='||x_return_status, 3);
                                     END IF;

                                     IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
                                        RAISE Invalid_Arg_Exc_WP;
                                     END IF;
                                END IF;
                                --end bug 4541039

            END IF; --publish_flag
        ELSIF p_calling_context = 'COPY_PROJECT' THEN
            DECLARE
                CURSOR cur_all_str_ver
                IS
                  SELECT ppevs2.element_version_id
                FROM pa_proj_element_versions ppevs1, pa_proj_element_versions ppevs2
                   WHERE ppevs1.proj_element_id = ppevs2.proj_element_id
                 AND ppevs1.project_id = p_project_id
                 AND ppevs2.project_id = p_project_id
                 AND ppevs1.element_version_id = p_structure_version_id
                 AND ppevs1.object_type = 'PA_STRUCTURES'
                 AND ppevs2.object_type = 'PA_STRUCTURES'
                 ;
            BEGIN
                FOR cur_all_str_ver_rec IN cur_all_str_ver LOOP
                    IF  cur_all_str_ver_rec.element_version_id IS NOT NULL THEN
                        -- Check if the sructure version to be processed corresponds to the WORKPLAN structure.
                        -- If yes, do the processing required for the workplan version.
                        OPEN cur_structure_type(p_project_id, cur_all_str_ver_rec.element_version_id, 'WORKPLAN');
                        fetch cur_structure_type INTO l_structure_type_flag;
                        CLOSE cur_structure_type;

                        IF nvl(l_structure_type_flag,'N') = 'Y' THEN
                            IF l_debug_mode = 'Y' THEN
                                pa_debug.write(G_PKG_NAME, 'Calling PROCESS_TASK_WEIGHTAGE in Copy Project Mode', 3);
                            END IF;

                            pa_proj_task_struc_pub.PROCESS_TASK_WEIGHTAGE(
                                p_project_id            => p_project_id
                                ,p_structure_version_id  => p_structure_version_id
                                ,x_return_status         => x_return_status
                                ,x_msg_count             => x_msg_count
                                ,x_msg_data              => x_msg_data
                                );

                            IF l_debug_mode = 'Y' THEN
                                pa_debug.write(G_PKG_NAME, 'After PROCESS_TASK_WEIGHTAGE in Copy Project Mode  x_return_status='|| x_return_status, 3);
                            END IF;

                            IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                Raise Invalid_Arg_Exc_WP;
                            END IF;
                        END IF;
                    END IF;
                END LOOP;

                -- Begin Bug # 4611373.
                --set the PJI global flag to NULL before calling pji wbsmant for
                --indent/outdent/copy/move
                 PA_TASK_PUB1.G_CALL_PJI_ROLLUP := null;

                 BEGIN
                 --both working version
                    IF l_debug_mode = 'Y' THEN
                            pa_debug.write(G_PKG_NAME, 'Calling WBS_MAINT in UPDATE mode', 3);
                        END IF;

                        PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT(
                        p_new_struct_ver_id => p_structure_version_id
                        ,p_old_struct_ver_id => p_structure_version_id
                        ,p_project_id => p_project_id
                        ,p_online_flag => l_online_flag
                        ,p_calling_context => p_calling_context -- 4392189
                        ,p_rerun_flag => p_rerun_flag --bug 4589289
                        ,x_request_id => l_request_id
                        ,x_processing_code => l_proc_code
                        ,x_msg_code => l_msg_Code
                        ,x_return_status => x_return_status
                        ,x_online_flag => l_out_online_flag -- 4392189
                        );

                        IF l_debug_mode = 'Y' THEN
                            pa_debug.write(G_PKG_NAME, 'After WBS_MAINT in UPDATE mode  x_return_status='
                                                            || x_return_status, 3);
                        END IF;

                EXCEPTION
                        WHEN OTHERS THEN
                            fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                                                    p_procedure_name => 'PROCESS_WBS_UPDATES',
                                                        p_error_text     => SUBSTRB('Call of PJI_FM_XBS_ACCUM_MAINT.WBS_MAINT
                                                                                     Failed in Update Mode: SQLERRM='||SQLERRM,1,240));
                                                        RAISE Invalid_Arg_Exc_WP;
                END;

                IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    Raise Invalid_Arg_Exc_WP;
                END IF;
                -- End Bug # 4611373.

            END;
        END IF;  --end bug 3035902 maansari
    END IF; -- (if p_calling_mode = 'APPLY_PROGRESS') then -- Fix for Bug # 4262985.

    -- Mark the structure version as no pending wbs updates.
    pa_proj_task_struc_pub.set_update_wbs_flag(
           p_project_id            => p_project_id
          ,p_structure_version_id  => p_structure_version_id
          ,p_update_wbs_flag       => 'N'
          ,x_return_status         => x_return_status
          ,x_msg_count             => x_msg_count
          ,x_msg_data              => x_msg_data
          );

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(G_PKG_NAME, 'After set_update_wbs_flag x_return_status='|| x_return_status, 3);
    END IF;

    IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        Raise Invalid_Arg_Exc_WP;
    END IF;

    IF p_commit = FND_API.G_TRUE THEN
        commit;
    END IF;

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(G_PKG_NAME, 'Exiting PROCESS_WBS_UPDATES', l_debug_level3);
        pa_debug.reset_curr_function;
    END IF;
EXCEPTION

WHEN Invalid_Arg_Exc_WP THEN

     x_return_status := FND_API.G_RET_STS_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF cur_structure_type%ISOPEN THEN
          CLOSE cur_structure_type;
     END IF;

     IF l_msg_count = 1 and x_msg_data IS NULL THEN
          PA_INTERFACE_UTILS_PUB.get_messages
              (p_encoded        => FND_API.G_TRUE
              ,p_msg_index      => 1
              ,p_msg_count      => l_msg_count
              ,p_msg_data       => l_msg_data
              ,p_data           => l_data
              ,p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;
     IF l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
     END IF;

     IF p_commit = FND_API.G_TRUE THEN
          rollback to process_wbs_updates;
     END IF;

     RETURN;

WHEN others THEN

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     IF cur_structure_type%ISOPEN THEN
          CLOSE cur_structure_type;
     END IF;

     FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                    ,p_procedure_name  => 'PROCESS_WBS_UPDATES'
                    ,p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                              l_debug_level5);
          pa_debug.reset_curr_function;
     END IF;

     IF p_commit = FND_API.G_TRUE THEN
          rollback to process_wbs_updates;
     END IF;

     RAISE;
END PROCESS_WBS_UPDATES;

/*==================================================================
   This API calculates the Task Weightages based on the Task Progress
   Weighting Basis of  the project. This API will be called only when
   the Weighting Basis is either Duration or Effort. The basic strategy
   used in the API is to query up all the tasks of a structure version
   and identify the summed duration of all the tasks parents by doing
   minimal PLSQL processing. Once the summed duration of the parent is
   identified, the weighting percentage of the task can be easily
   identified.
   Bug 3010538 : New API for the Task Weighting Enhancement.
 ==================================================================*/

PROCEDURE PROCESS_TASK_WEIGHTAGE
   (  p_api_version_number    IN   NUMBER
     ,p_commit                IN   VARCHAR2
     ,p_init_msg_list         IN   VARCHAR2
     ,p_calling_context       IN   VARCHAR2
     ,p_project_id            IN   pa_projects_all.project_id%TYPE
     ,p_structure_version_id  IN   pa_proj_element_versions.element_version_id%TYPE
     ,x_return_status         OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
     ,x_msg_count             OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
     ,x_msg_data              OUT  NOCOPY VARCHAR2) --File.Sql.39 bug 4440895
AS

-- Type declarations local to this Procedure.

-- This record contains the summary information of the child tasks for a parent task.
TYPE CHILD_INFO_REC IS RECORD
(
      summed_effort           pa_proj_elem_ver_schedule.planned_effort%TYPE
     ,summed_duration         pa_proj_elem_ver_schedule.duration%TYPE
     ,child_count             Number
     ,cum_alloted_weightage   pa_object_relationships.weighting_percentage%TYPE
     ,processed_child_count   Number
-- Following added for bug 3053472
     ,loop_count              Number
     ,residual_task_count     Number
     ,adj_direction           Number -- This will be +1 / -1
);

TYPE CHILD_INFO_TBL IS TABLE OF CHILD_INFO_REC
     INDEX BY BINARY_INTEGER;

TYPE prog_enable_flag_tbl IS TABLE OF pa_task_types.prog_entry_enable_flag%TYPE
     INDEX BY BINARY_INTEGER;

TYPE object_rel_id_tbl  IS TABLE OF pa_object_relationships.object_relationship_id%TYPE
     INDEX BY BINARY_INTEGER;

TYPE parent_task_ver_id_tbl IS TABLE OF pa_object_relationships.object_id_from1%TYPE --pa_proj_element_versions.element_version_id%TYPE  3746912
     INDEX BY BINARY_INTEGER;

TYPE duration_tbl IS TABLE OF pa_proj_elem_ver_schedule.duration%TYPE
     INDEX BY BINARY_INTEGER;

TYPE effort_tbl IS TABLE OF pji_xbs_plans_v.labor_effort%TYPE --pa_proj_elem_ver_schedule.planned_effort%TYPE  3746912
     INDEX BY BINARY_INTEGER;

TYPE task_weightage_tbl IS TABLE OF pa_object_relationships.weighting_percentage%TYPE
     INDEX BY BINARY_INTEGER;
-- End of Type Declarations.


-- Cursor Declarations.
-- This cursor fetches the duration, effort, relationship id between the task and its parent
-- and progress entry enable flag for the task type associated with the task version. This
-- info is necessary for calculating the task weightage of the tasks.
CURSOR cur_task_info(c_project_id pa_projects_all.project_id%TYPE,
                     c_structure_version_id pa_proj_element_versions.element_version_id%TYPE
                     ,c_plan_version_id NUMBER   --bug 4726889
                      )
IS
Select rel.object_relationship_id,
       rel.object_id_from1,
--       NVL(pfxat.labor_hours,0) + NVL(pfxat.equipment_hours,0),
       NVL(pxpv.labor_effort,0) + NVL(pxpv.equipment_effort,0),
       sch.duration,
       ptt.prog_entry_enable_flag
 from  pa_proj_element_versions  ver,
       pa_object_relationships   rel,
       pa_proj_elem_ver_schedule sch,
       pa_proj_elements          ele,
       pa_task_types             ptt,
       pji_xbs_plans_v           pxpv
--       pji_fm_xbs_accum_tmp1     pfxat
where  ver.project_id                  = c_project_id
  and  ver.parent_structure_version_id = c_structure_version_id
  and  ver.object_type                 = 'PA_TASKS'
  and  ver.element_version_id          = rel.object_id_to1
  and  rel.relationship_type           = 'S'
  and  rel.relationship_subtype        in ( 'STRUCTURE_TO_TASK','TASK_TO_TASK')
  and  sch.element_version_id          = ver.element_version_id
  and  sch.project_id                  = c_project_id
  and  ele.proj_element_id             = ver.proj_element_id
  and  ptt.object_type                 = 'PA_TASKS'              /* bug 3279978 FP M Enhancement */
  and  ele.type_id                     = ptt.task_type_id
  and  pxpv.project_id              (+)= ver.project_id
  and  pxpv.structure_version_id    (+)= ver.parent_structure_version_id
  and  pxpv.proj_element_id         (+)= ver.proj_element_id
  and  pxpv.plan_version_id         (+)= c_plan_version_id     --bug 4726889
--  and  pfxat.project_id             (+)= ver.project_id
--  and  pfxat.project_element_id     (+)= ver.proj_element_id
--  and  pfxat.struct_version_id      (+)= ver.parent_structure_version_id
--  and  pfxat.calendar_type          (+)= 'A'
;

-- TWUT
-- This cursor is when fetched will lock all the task versions of the structure version.
CURSOR cur_task_ver_lock(c_project_id pa_projects_all.project_id%TYPE,
                         c_structure_version_id pa_proj_element_versions.element_version_id%TYPE)
IS
select 'X'
from   pa_proj_element_versions  ver,
       pa_proj_elements          ele,
       pa_task_types             ptt
where  ver.project_id                        = c_project_id
  and  ver.parent_structure_version_id       = c_structure_version_id
  and  ver.object_type                       = 'PA_TASKS'
  and  ele.proj_element_id                   = ver.proj_element_id
  and  ele.type_id                           = ptt.task_type_id
  and ptt.object_type                        = 'PA_TASKS'           /* bug 3279978 FP M Enhancement */
  and  nvl(ptt.prog_entry_enable_flag,'N')   = 'Y'
for update of ver.record_version_number NOWAIT;
-- End of Cursor Declarations.

-- Procedure level local variables declaration

l_child_info_tbl         child_info_tbl;
l_object_rel_id_tbl      object_rel_id_tbl;
l_parent_task_ver_id_tbl parent_task_ver_id_tbl;
l_duration_tbl           duration_tbl;
l_effort_tbl             effort_tbl;

l_task_weighting_basis   pa_proj_progress_attr.task_weight_basis_code%TYPE;

L_BASIS_MANUAL           CONSTANT pa_proj_progress_attr.task_weight_basis_code%TYPE := 'MANUAL';
L_BASIS_EFFORT           CONSTANT pa_proj_progress_attr.task_weight_basis_code%TYPE := 'EFFORT';
L_BASIS_DURATION         CONSTANT pa_proj_progress_attr.task_weight_basis_code%TYPE := 'DURATION';

-- End Procedure level local variables declaration

-- Standard local variable declaration.
l_msg_count                     NUMBER := 0;
l_data                          VARCHAR2(2000);
l_msg_data                      VARCHAR2(2000);
l_msg_index_out                 NUMBER;
l_debug_mode                    VARCHAR2(1);

l_debug_level2                   CONSTANT NUMBER := 2;
l_debug_level3                   CONSTANT NUMBER := 3;
l_debug_level4                   CONSTANT NUMBER := 4;
l_debug_level5                   CONSTANT NUMBER := 5;

l_plan_version_id                NUMBER;   --bug 4726889

BEGIN
     IF p_commit = FND_API.G_TRUE THEN
          savepoint process_task_weightage;
     END IF;

     IF p_init_msg_list = FND_API.G_TRUE THEN
          FND_MSG_PUB.initialize;
     END IF;

     x_msg_count := 0;
     x_return_status := FND_API.G_RET_STS_SUCCESS;
     l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Entering PROCESS_TASK_WEIGHTAGE';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                   l_debug_level3);

          pa_debug.set_curr_function( p_function   => 'PROCESS_TASK_WEIGHTAGE',
                                      p_debug_mode => l_debug_mode );
     END IF;

     -- Check for business rules violations
     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Validating input parameters';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                     l_debug_level3);
          pa_debug.g_err_stage:= 'Input Parameter Values';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                     l_debug_level3);
          pa_debug.g_err_stage:= 'Project Id : ' || p_project_id;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                     l_debug_level3);
          pa_debug.g_err_stage:= 'Structure Version Id : ' || p_structure_version_id;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                     l_debug_level3);
          pa_debug.g_err_stage:= 'p_calling_context : ' || p_calling_context;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                     l_debug_level3);
     END IF;

     IF (p_project_id IS NULL) OR
        (p_structure_version_id IS NULL)
     THEN
          PA_UTILS.ADD_MESSAGE
                (p_app_short_name => 'PA',
                  p_msg_name      => 'PA_INV_PARAM_PASSED');
          RAISE Invalid_Arg_Exc_WP;
     END IF;

     -- Delete the data in plsql tables.
     l_child_info_tbl.delete;
     l_object_rel_id_tbl.delete;
     l_duration_tbl.delete;
     l_effort_tbl.delete;
     l_parent_task_ver_id_tbl.delete;


     -- Obtain the task weighting basis and do nothing if the basis is MANUAL and throw error if it is NULL.
     -- This is a redundant check incorporated just to ensure no processing is done in case the api
     -- is wrongly called.
     l_task_weighting_basis := pa_progress_utils.get_task_weighting_basis(p_project_id => p_project_id);

     IF l_task_weighting_basis is NULL THEN
          IF l_debug_mode = 'Y' THEN
               pa_debug.g_err_stage:= 'PROCESS_TASK_WEIGHTAGE API has been called when task weighting basis is NULL';
               pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
          END IF;
          RAISE Invalid_Arg_Exc_WP;
     END IF;

     IF l_task_weighting_basis = L_BASIS_MANUAL THEN
          IF l_debug_mode = 'Y' THEN
               pa_debug.g_err_stage:= 'PROCESS_TASK_WEIGHTAGE API has been called when task weighting basis is MANUAL';
               pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                        l_debug_level3);
               pa_debug.reset_curr_function;
          END IF;
          RETURN;
     END IF;

     -- Lock the structure version record in pa_proj_element_versions table.
     -- NEED TO REVISIT THIS LOGIC.
     -- TWUT. Previously had a select to lock - but it lead to exact fetch
     -- returned more than one row exception. Changed to cursor.
     DECLARE
          l_dummy   VARCHAR2(1);
     BEGIN
          open cur_task_ver_lock(p_project_id,p_structure_version_id);
          fetch cur_task_ver_lock into l_dummy;
          close cur_task_ver_lock;
     EXCEPTION
          WHEN OTHERS THEN
               IF SQLCODE = -54 THEN
               -- If the record have already been locked, then the sql code would be -54.
                   PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                        p_msg_name       => 'PA_XC_ROW_ALREADY_LOCKED');
                   RAISE Invalid_Arg_Exc_WP;
               ELSE
                  raise;
               END IF;
     END;

    --bug 4726889 performance fix to provide plan version id in the cursor cur_task_info
     BEGIN
         IF l_debug_mode = 'Y' THEN
            pa_debug.write(G_PKG_NAME, 'Calling Pa_Fp_wp_gen_amt_utils.get_wp_version_id', 3);
         END IF;
         l_plan_version_id := Pa_Fp_wp_gen_amt_utils.get_wp_version_id(
                          p_project_id        => p_project_id,
                          p_plan_type_id      => -1,
                          p_proj_str_ver_id   => p_structure_version_id) ;

         IF l_debug_mode = 'Y' THEN
            pa_debug.write(G_PKG_NAME, 'l_plan_version_id='||l_plan_version_id, 3);
         END IF;

      EXCEPTION
      WHEN OTHERS THEN
                fnd_msg_pub.add_exc_msg(p_pkg_name => 'PA_PROJ_TASK_STRUC_PUB',
                   p_procedure_name => 'PROCESS_TASK_WEIGHTAGE',
                   p_error_text => SUBSTRB('Call of  Pa_Fp_wp_gen_amt_utils.get_wp_version_id is failed='||SQLERRM,1,120));
                 RAISE Invalid_Arg_Exc_WP;

       END;
     --bug 4726889

     -- The first part of this procedure reads the task version records of the structure version
     -- in batches and calculates the summed duration or the summed effort of all the parent tasks.
     -- These will be used in the second part of the api to calculate the weightage of the individual
     -- tasks.
     DECLARE
          l_object_rel_id_fetch_tbl      object_rel_id_tbl;
          l_parent_task_ver_id_fetch_tbl parent_task_ver_id_tbl;
          l_duration_fetch_tbl           duration_tbl;
          l_effort_fetch_tbl             effort_tbl;
          l_prog_enable_flag_fetch_tbl   prog_enable_flag_tbl;

          l_plsql_max_array_size         CONSTANT NUMBER  := 200; -- limiting the max fetch size
          l_task_count                   NUMBER := 0;
          l_parent_id                    pa_proj_element_versions.element_version_id%TYPE;
     BEGIN
          OPEN cur_task_info(p_project_id,p_structure_version_id
                            ,l_plan_version_id); --4726889
          LOOP
               FETCH  cur_task_info BULK COLLECT INTO
                             l_object_rel_id_fetch_tbl
                            ,l_parent_task_ver_id_fetch_tbl
                            ,l_effort_fetch_tbl
                            ,l_duration_fetch_tbl
                            ,l_prog_enable_flag_fetch_tbl
               LIMIT  l_plsql_max_array_size;

               IF l_debug_mode = 'Y' THEN
                    pa_debug.g_err_stage:= 'Fetched ' || cur_task_info%rowcount || ' records for processing';
                    pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
               END IF;

               IF nvl(l_object_rel_id_fetch_tbl.last,0) > 0 THEN -- only if something is fetched do the processing
                    FOR i in l_object_rel_id_fetch_tbl.first..l_object_rel_id_fetch_tbl.last LOOP
                         -- Check if progress is enabled for the current task. Do the processing only
                         -- if progress is enabled. If not just skip the task.

                         IF nvl(l_prog_enable_flag_fetch_tbl(i),'N') = 'Y' THEN
                              l_task_count := l_task_count + 1;
                              l_parent_id  := l_parent_task_ver_id_fetch_tbl(i);

                              -- Copy the value in the fetch table to the complimentary table.
                              l_object_rel_id_tbl(l_task_count)      := l_object_rel_id_fetch_tbl(i);
                              l_parent_task_ver_id_tbl(l_task_count) := l_parent_task_ver_id_fetch_tbl(i);

                              -- Set to null the parent task ver record if it doesnot exist.
                              IF NOT l_child_info_tbl.exists(l_parent_id) THEN
                                   l_child_info_tbl(l_parent_id) := NULL;
                              END IF;

                              -- Calculate the summed duration and effort for the parent.
                              IF l_task_weighting_basis = L_BASIS_DURATION THEN
                                   l_child_info_tbl(l_parent_id).summed_duration :=
                                        nvl(l_child_info_tbl(l_parent_id).summed_duration,0) + nvl(l_duration_fetch_tbl(i),0);

                                   l_duration_tbl(l_task_count) := nvl(l_duration_fetch_tbl(i),0);
                              ELSIF l_task_weighting_basis = L_BASIS_EFFORT THEN
                                   l_child_info_tbl(l_parent_id).summed_effort :=
                                        nvl(l_child_info_tbl(l_parent_id).summed_effort,0) + nvl(l_effort_fetch_tbl(i),0);

                                   l_effort_tbl(l_task_count) := nvl(l_effort_fetch_tbl(i),0);
                              END IF;
                              -- Increment the child count for the parent.
                              l_child_info_tbl(l_parent_id).child_count :=
                                                  nvl(l_child_info_tbl(l_parent_id).child_count,0)+1;
                         END IF;

                    END LOOP;
               END IF;

               EXIT WHEN nvl(l_object_rel_id_fetch_tbl.last,0) < l_plsql_max_array_size;
          END LOOP;
          CLOSE cur_task_info;
          IF l_debug_mode = 'Y' THEN
               pa_debug.g_err_stage:= 'Done with Part 1 of the Procedure';
               pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
          END IF;
     END;

     -- We have the required info to calculate the task weightages in PLSQL tables.
     -- Use them and calculate the weightage for each of the task.
     DECLARE
          l_task_weightage_tbl     task_weightage_tbl;

          l_parent_id              pa_proj_element_versions.element_version_id%TYPE;
          l_task_weightage         pa_object_relationships.weighting_percentage%TYPE;

          --Bug 3053472 - remaining weightage is no more required.
          --l_remaining_weightage    pa_object_relationships.weighting_percentage%TYPE;

          l_residual_weightage     pa_object_relationships.weighting_percentage%TYPE;
     BEGIN
          IF nvl(l_object_rel_id_tbl.last,0) > 0 THEN
               FOR i in l_object_rel_id_tbl.first..l_object_rel_id_tbl.last LOOP
                    l_parent_id := l_parent_task_ver_id_tbl(i);

                    /* Bug 3053472. Count only the tasks that have non zero task weightage.
                    l_child_info_tbl(l_parent_id).processed_child_count :=
                              nvl(l_child_info_tbl(l_parent_id).processed_child_count,0) + 1;
                    remaining weightage is not required any more.
                    l_remaining_weightage := 100 - nvl(l_child_info_tbl(l_parent_id).cum_alloted_weightage,0);
                    */
                    -- If the basis is duration, obtain the task weightage as ratio of the duration of the task
                    -- and the summed duration of the parent.
                    IF l_task_weighting_basis = L_BASIS_DURATION THEN

                         IF l_duration_tbl(i) = 0 AND l_child_info_tbl(l_parent_id).summed_duration = 0 THEN
                              l_task_weightage := 1 / l_child_info_tbl(l_parent_id).child_count * 100;
                         ELSE
                              l_task_weightage := l_duration_tbl(i) / l_child_info_tbl(l_parent_id).summed_duration * 100;
                         END IF;

                    -- If the basis is effort, obtain the task weightage as ratio of the effort of the task
                    -- and the summed effort of the parent.
                    -- The case where the effort of the task is 0 is taken care by setting the weightage to 0
                    -- if the summed effort is not 0 and calculated as mentioned initially if the summed effort
                    -- is 0.
                    ELSIF l_task_weighting_basis = L_BASIS_EFFORT THEN

                         IF l_effort_tbl(i) = 0 AND l_child_info_tbl(l_parent_id).summed_effort = 0 THEN
                              l_task_weightage := 1 / l_child_info_tbl(l_parent_id).child_count * 100;
                         ELSE
                              l_task_weightage := l_effort_tbl(i) / l_child_info_tbl(l_parent_id).summed_effort * 100;
                         END IF;

                    END IF;
                    /* Bug 3053472. Donot take care of the rounding in this pass.
                    -- Take care of the rounding issue.
                    IF abs(l_task_weightage - l_remaining_weightage) <= 0.05 THEN
                         l_task_weightage := l_remaining_weightage;
                    END IF;
                    */
                    -- Bug 3053472. Increment the task count only if the task weightage of the task <> 0.
                    IF l_task_weightage > 0 THEN
                         l_child_info_tbl(l_parent_id).processed_child_count :=
                                   nvl(l_child_info_tbl(l_parent_id).processed_child_count,0) + 1;
                    END IF;

                    l_child_info_tbl(l_parent_id).cum_alloted_weightage := nvl(l_child_info_tbl(l_parent_id).cum_alloted_weightage,0)
                                                                                     + l_task_weightage;
                    l_task_weightage_tbl(i) := l_task_weightage;
               END LOOP;

               -- Bug 3053472. Loop over the plsql table once more to process the residual task weightage of
               -- the tasks. The logic used is to distribute the residual task weightage to as many tasks as
               -- possible so that the task weightage is uniform. The updates in the bug gives more details
               -- on the logic.
               FOR i in l_object_rel_id_tbl.first..l_object_rel_id_tbl.last LOOP
                    l_parent_id := l_parent_task_ver_id_tbl(i);

                    IF l_child_info_tbl(l_parent_id).loop_count is NULL THEN
                    -- This means that this is the first task that is being processed for this parent.
                    -- So calculate how much is the residual weightage.
                         l_residual_weightage := ( 100 - l_child_info_tbl(l_parent_id).cum_alloted_weightage ) * 100;
                         l_child_info_tbl(l_parent_id).loop_count :=
                              floor(abs(l_residual_weightage) / l_child_info_tbl(l_parent_id).processed_child_count);
                         l_child_info_tbl(l_parent_id).residual_task_count :=
                              mod(abs(l_residual_weightage) , l_child_info_tbl(l_parent_id).processed_child_count);

                         -- The adj_direction is set to -1 if the task weigtage has to be adjusted by reducing some amount
                         -- from the tasks. otherwise the adj_direction is 1.
                         IF l_residual_weightage < 0 THEN
                              l_child_info_tbl(l_parent_id).adj_direction := -1;
                         ELSE
                              l_child_info_tbl(l_parent_id).adj_direction :=  1;
                         END IF;
                    END IF;

                    IF l_task_weightage_tbl(i) > 0 THEN
                         IF l_child_info_tbl(l_parent_id).residual_task_count > 0 THEN
                              l_task_weightage_tbl(i) := l_task_weightage_tbl(i) +
                                   (l_child_info_tbl(l_parent_id).loop_count + 1) * 0.01 * l_child_info_tbl(l_parent_id).adj_direction;

                              l_child_info_tbl(l_parent_id).residual_task_count :=
                                   l_child_info_tbl(l_parent_id).residual_task_count - 1;
                         ELSE
                              l_task_weightage_tbl(i) := l_task_weightage_tbl(i) +
                                   l_child_info_tbl(l_parent_id).loop_count * 0.01 * l_child_info_tbl(l_parent_id).adj_direction;
                         END IF;
                    END IF;
               END LOOP;

               -- Do a bulk update into pa_object_relationships table as the weightage has
               -- been calculated for all the tasks.
               FORALL i in l_object_rel_id_tbl.first..l_object_rel_id_tbl.last
                    UPDATE pa_object_relationships
                    SET    weighting_percentage   = l_task_weightage_tbl(i)
                    WHERE  object_relationship_id = l_object_rel_id_tbl(i);
               IF l_debug_mode = 'Y' THEN
                    pa_debug.g_err_stage:= 'Updated ' || sql%rowcount || ' Records in PA_OBJECT_RELATIONSHIPS';
                    pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
               END IF;
          END IF;
     END;

     IF p_commit = FND_API.G_TRUE THEN
          commit;
     END IF;

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Exiting PROCESS_TASK_WEIGHTAGE';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                   l_debug_level3);
          pa_debug.reset_curr_function;
     END IF;
EXCEPTION

WHEN Invalid_Arg_Exc_WP THEN

     x_return_status := FND_API.G_RET_STS_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF cur_task_info%ISOPEN THEN
          CLOSE cur_task_info;
     END IF;

     IF l_msg_count = 1 and x_msg_data IS NULL THEN
          PA_INTERFACE_UTILS_PUB.get_messages
              (p_encoded        => FND_API.G_TRUE
              ,p_msg_index      => 1
              ,p_msg_count      => l_msg_count
              ,p_msg_data       => l_msg_data
              ,p_data           => l_data
              ,p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;
     IF l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
     END IF;

     IF p_commit = FND_API.G_TRUE THEN
          rollback to process_task_weightage;
     END IF;

     RETURN;

WHEN others THEN

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     IF cur_task_info%ISOPEN THEN
          CLOSE cur_task_info;
     END IF;

     FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                    ,p_procedure_name  => 'PROCESS_TASK_WEIGHTAGE'
                    ,p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                              l_debug_level5);
          pa_debug.reset_curr_function;
     END IF;

     IF p_commit = FND_API.G_TRUE THEN
          rollback to process_task_weightage;
     END IF;

     RAISE;
END PROCESS_TASK_WEIGHTAGE;

/*==================================================================
   This API will be called to set the update_required_flag to Y or N.
   The default value of the flag is Y. The passed in flag value is
   used to update the structure version record in elem_ver_structure
   table.
   Bug 3010538 : New API for the Task Weighting Enhancement.
 ==================================================================*/

PROCEDURE SET_UPDATE_WBS_FLAG
   (  p_api_version_number    IN   NUMBER
     ,p_commit                IN   VARCHAR2
     ,p_init_msg_list         IN   VARCHAR2
     ,p_calling_context       IN   VARCHAR2
     ,p_project_id            IN   pa_projects_all.project_id%TYPE
     ,p_structure_version_id  IN   pa_proj_element_versions.element_version_id%TYPE
     ,p_update_wbs_flag       IN   pa_proj_elem_ver_structure.process_update_wbs_flag%TYPE
     ,x_return_status         OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
     ,x_msg_count             OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
     ,x_msg_data              OUT  NOCOPY VARCHAR2) --File.Sql.39 bug 4440895
AS

l_msg_count                     NUMBER := 0;
l_data                          VARCHAR2(2000);
l_msg_data                      VARCHAR2(2000);
l_msg_index_out                 NUMBER;
l_debug_mode                    VARCHAR2(1);

l_debug_level2                   CONSTANT NUMBER := 2;
l_debug_level3                   CONSTANT NUMBER := 3;
l_debug_level4                   CONSTANT NUMBER := 4;
l_debug_level5                   CONSTANT NUMBER := 5;

BEGIN

     IF p_commit = FND_API.G_TRUE THEN
          savepoint set_update_wbs_flag;
     END IF;

     IF p_init_msg_list = FND_API.G_TRUE THEN
          FND_MSG_PUB.initialize;
     END IF;

     x_msg_count := 0;
     x_return_status := FND_API.G_RET_STS_SUCCESS;
     l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Entering SET_UPDATE_WBS_FLAG';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                   l_debug_level3);

          pa_debug.set_curr_function( p_function   => 'SET_UPDATE_WBS_FLAG',
                                      p_debug_mode => l_debug_mode );
     END IF;

     -- Check for business rules violations
     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Validating input parameters';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);

          pa_debug.g_err_stage:= 'p_project_id = '|| p_project_id;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);

          pa_debug.g_err_stage:= 'p_structure_version_id = '|| p_structure_version_id;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);

          pa_debug.g_err_stage:= 'p_update_wbs_flag = '|| p_update_wbs_flag;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,l_debug_level3);
     END IF;

     IF (p_project_id IS NULL) OR
        (p_structure_version_id IS NULL) OR
        (p_update_wbs_flag not in ('Y','N'))
     THEN
          PA_UTILS.ADD_MESSAGE
                (p_app_short_name => 'PA',
                 p_msg_name       => 'PA_INV_PARAM_PASSED');
          RAISE Invalid_Arg_Exc_WP;
     END IF;

    Update pa_proj_elem_ver_structure
    Set    process_update_wbs_flag = p_update_wbs_flag
    Where  project_id              = p_project_id
    And    element_version_id      = p_structure_version_id;

     IF p_commit = FND_API.G_TRUE THEN
          commit;
     END IF;

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Exiting SET_UPDATE_WBS_FLAG';
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                                   l_debug_level3);
          pa_debug.reset_curr_function;
     END IF;
EXCEPTION

WHEN Invalid_Arg_Exc_WP THEN

     x_return_status := FND_API.G_RET_STS_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF l_msg_count = 1 and x_msg_data IS NULL THEN
          PA_INTERFACE_UTILS_PUB.get_messages
              (p_encoded        => FND_API.G_TRUE
              ,p_msg_index      => 1
              ,p_msg_count      => l_msg_count
              ,p_msg_data       => l_msg_data
              ,p_data           => l_data
              ,p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;
     IF l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
     END IF;

     IF p_commit = FND_API.G_TRUE THEN
          rollback to set_update_wbs_flag;
     END IF;

     RETURN;

WHEN others THEN

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                    ,p_procedure_name  => 'SET_UPDATE_WBS_FLAG'
                    ,p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,
                              l_debug_level5);
          pa_debug.reset_curr_function;
     END IF;

     IF p_commit = FND_API.G_TRUE THEN
          rollback to set_update_wbs_flag;
     END IF;

     RAISE;
END SET_UPDATE_WBS_FLAG;

-- This API is a wrapper API called for FORMS which in turn
-- calls PROCESS_WBS_UPDATES_WRP, as from FORM the remote
-- package level constants FND_API.G_TRUE , FND_API.G_FLASE
-- can not be reffered .

PROCEDURE PROCESS_WBS_UPDATES_WRP_FORM
   (  p_project_id            IN   pa_projects_all.project_id%TYPE
     ,p_structure_version_id  IN   pa_proj_element_versions.element_version_id%TYPE
     ,p_pub_struc_ver_id      IN   NUMBER    := NULL
     ,x_return_status         OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
     ,x_msg_count             OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
     ,x_msg_data              OUT  NOCOPY VARCHAR2) --File.Sql.39 bug 4440895
AS

l_msg_count                     NUMBER := 0;
l_data                          VARCHAR2(2000);
l_msg_data                      VARCHAR2(2000);
l_msg_index_out                 NUMBER;
l_debug_mode                    VARCHAR2(1);

BEGIN

-- Not doing the validation of input parameter
-- as it is done in the the called API.

PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP
       (  p_commit                => FND_API.G_TRUE
         ,p_calling_context       => 'UPDATE'
         ,p_project_id            => p_project_id
         ,p_structure_version_id  => p_structure_version_id
         ,x_return_status         => x_return_status
         ,x_msg_count             => x_msg_count
         ,x_msg_data              => x_msg_data) ;

     IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          IF l_debug_mode = 'Y' THEN
             pa_debug.g_err_stage := 'Error calling concurrent wbs update process ';
             pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,4);
          END IF;
          Raise Invalid_Arg_Exc_WP;
     END IF;

EXCEPTION
WHEN Invalid_Arg_Exc_WP THEN

     x_return_status := FND_API.G_RET_STS_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;
     IF l_msg_count = 1 and x_msg_data IS NULL THEN
          PA_INTERFACE_UTILS_PUB.get_messages
              (p_encoded        => FND_API.G_TRUE
              ,p_msg_index      => 1
              ,p_msg_count      => l_msg_count
              ,p_msg_data       => l_msg_data
              ,p_data           => l_data
              ,p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;
     IF l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
     END IF;
     RETURN;
WHEN others THEN

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                    ,p_procedure_name  => 'PROCESS_WBS_UPDATES_WRP'
                    ,p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
     END IF;
     RAISE;
END PROCESS_WBS_UPDATES_WRP_FORM ;

  --bug 3035902 maansari
PROCEDURE call_process_WBS_updates(
        p_dest_project_id       IN   NUMBER
       ,x_return_status         OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
       ,x_msg_count             OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
       ,x_msg_data              OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ) AS

       CURSOR cur_strs_n_types
       IS
         SELECT ppe.proj_element_id, ppst.structure_type_id
           FROM pa_proj_elements ppe, pa_proj_structure_types ppst, pa_structure_types pst
          WHERE ppe.project_id = p_dest_project_id
            AND ppe.object_type = 'PA_STRUCTURES'
            AND ppe.proj_element_id = ppst.proj_element_id
            and ppst.structure_type_id = pst.structure_type_id
            and pst.structure_type in ('WORKPLAN','FINANCIAL')
          ;

       CURSOR cur_str_vers( c_structure_id NUMBER )
       IS
         SELECT ppevs.element_version_id
           FROM pa_proj_element_versions ppevs
          WHERE ppevs.project_id = p_dest_project_id
            AND ppevs.object_type = 'PA_STRUCTURES'
            AND ppevs.proj_element_id = c_structure_id
          ;

       l_fn_str_id          NUMBER;
       l_wp_str_id          NUMBER;
       l_fn_str_ver_id      NUMBER;
       l_wp_str_ver_id      NUMBER;
       l_task_weight_basis  PA_PROJ_PROGRESS_ATTR.task_weight_basis_code%TYPE;
       l_shared             VARCHAR2(1);

       l_msg_count                     NUMBER := 0;
       l_data                          VARCHAR2(2000);
       l_msg_data                      VARCHAR2(2000);
       l_msg_index_out                 NUMBER;
       l_debug_mode                    VARCHAR2(1);
   BEGIN

          x_msg_count := 0;
          x_return_status := FND_API.G_RET_STS_SUCCESS;
          l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');
          l_shared := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(p_dest_project_id);

       /* The following is the simple solution for this.
          Update the Process_WBS_flag only for WORKPLAN enabled structures
          if task weighting basis is DURATION.
          Call the concurrent wrapper for all structure versions */
       l_task_weight_basis := PA_PROGRESS_UTILS.GET_TASK_WEIGHTING_BASIS( p_dest_project_id );
--       IF NVL( l_task_weight_basis, 'X' ) in( 'DURATION', 'EFFORT') --3127640
--      THEN
           FOR cur_strs_n_types_rec in cur_strs_n_types LOOP
              IF cur_strs_n_types_rec.structure_type_id = 1  --'WORKPLAN' structure
              THEN
                  l_wp_str_id  := cur_strs_n_types_rec.proj_element_id;
                  IF NVL( l_task_weight_basis, 'X' ) = 'DURATION'   --bug 3127640
                  THEN
                     --no need to update the flag in case of EFFORT or Manual bcoz
                       --the onlyu thing affected from quick entry is DURATRION thru dates..

                     UPDATE pa_proj_elem_ver_structure
                        SET PROCESS_UPDATE_WBS_FLAG = 'Y'
                      WHERE proj_element_id = cur_strs_n_types_rec.proj_element_id
                        AND project_id = p_dest_project_id
                        AND PROCESS_UPDATE_WBS_FLAG = 'N'
                       ;
                  END IF;
              ELSE
                  l_fn_str_id := cur_strs_n_types_rec.proj_element_id;
              END IF;
           END LOOP;
--       END IF;

       IF l_shared = 'Y'
--AND NVL( l_task_weight_basis, 'X' ) in( 'DURATION', 'EFFORT')  --bug 3127640
       THEN
           OPEN cur_str_vers( l_wp_str_id );
           FETCH cur_str_vers INTO l_wp_str_ver_id;
           CLOSE cur_str_vers;

           PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP
                (
              p_calling_context       => 'COPY_PROJECT'
             ,p_project_id            => p_dest_project_id
             ,p_structure_version_id  => l_wp_str_ver_id
             ,x_return_status         => x_return_status
             ,x_msg_count             => x_msg_count
             ,x_msg_data              => x_msg_data);

           IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              IF l_debug_mode = 'Y' THEN
                 pa_debug.g_err_stage := 'Error calling concurrent wbs update process ';
                 pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,4);
              END IF;
              Raise Invalid_Arg_Exc_WP;
           END IF;

       ELSIF l_shared = 'N'
--AND NVL( l_task_weight_basis, 'X' ) in( 'DURATION', 'EFFORT')   --Split then call the api twice.  --bug3127640  added 'EFFORT' in the IF clause.
       THEN
/*
           OPEN cur_str_vers( l_wp_str_id );
           FETCH cur_str_vers INTO l_wp_str_ver_id;
           CLOSE cur_str_vers;
*/
           --If there are more than one working versions
           FOR cur_str_vers_rec in cur_str_vers( l_wp_str_id ) LOOP

           PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP
                (
              p_calling_context       => 'COPY_PROJECT'
             ,p_project_id            => p_dest_project_id
             ,p_structure_version_id  => cur_str_vers_rec.element_version_id
             ,x_return_status         => x_return_status
             ,x_msg_count             => x_msg_count
             ,x_msg_data              => x_msg_data);

           IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              IF l_debug_mode = 'Y' THEN
                 pa_debug.g_err_stage := 'Error calling concurrent wbs update process ';
                 pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,4);
              END IF;
              Raise Invalid_Arg_Exc_WP;
           END IF;

           END LOOP;


           OPEN cur_str_vers( l_fn_str_id );
           FETCH cur_str_vers INTO l_fn_str_ver_id;
           --hsiu: 3305199 for bug with wp only project
           IF cur_str_vers%NOTFOUND THEN
             l_fn_str_ver_id := -1;
           END IF;
           CLOSE cur_str_vers;

           --hsiu: 3305199 for bug with wp only project
           IF l_fn_str_ver_id <> -1 THEN
             PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP
                (
              p_calling_context       => 'COPY_PROJECT'
             ,p_project_id            => p_dest_project_id
             ,p_structure_version_id  => l_fn_str_ver_id
             ,x_return_status         => x_return_status
             ,x_msg_count             => x_msg_count
             ,x_msg_data              => x_msg_data);

             IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               IF l_debug_mode = 'Y' THEN
                 pa_debug.g_err_stage := 'Error calling update WBS WRP ';
                 pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,4);
               END IF;
               Raise Invalid_Arg_Exc_WP;
             END IF;
           END IF; --hsiu: 3305199 for bug with wp only project

       END IF;
EXCEPTION
WHEN Invalid_Arg_Exc_WP THEN

     x_return_status := FND_API.G_RET_STS_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;
     IF l_msg_count = 1 and x_msg_data IS NULL THEN
          PA_INTERFACE_UTILS_PUB.get_messages
              (p_encoded        => FND_API.G_TRUE
              ,p_msg_index      => 1
              ,p_msg_count      => l_msg_count
              ,p_msg_data       => l_msg_data
              ,p_data           => l_data
              ,p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;
     IF l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
     END IF;
     RETURN;
WHEN others THEN

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SQLERRM;

     FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name        => 'PA_PROJ_TASK_STRUC_PUB'
                    ,p_procedure_name  => 'CALL_PROCESS_WBS_UPDATES'
                    ,p_error_text      => x_msg_data);

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:= 'Unexpected Error'||x_msg_data;
          pa_debug.write(G_PKG_NAME,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
     END IF;
     RAISE;
END call_process_WBS_updates;
--End 3035902 maansari

--hsiu: bug 3254091
PROCEDURE Update_Current_Phase
( p_api_version_number         IN     NUMBER      := 1.0
 ,p_commit                     IN     VARCHAR2    := FND_API.G_FALSE
 ,p_init_msg_list              IN     VARCHAR2    := FND_API.G_FALSE
 ,p_validate_only              IN     VARCHAR2    := FND_API.G_TRUE
 ,p_validation_level           IN     VARCHAR2    := 100
 ,p_debug_mode                 IN     VARCHAR2    := 'N'
 ,p_max_msg_count              IN     NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_user_id                    IN     NUMBER      := FND_GLOBAL.USER_ID
 ,p_project_id                 IN     NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_name               IN     VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_current_lifecycle_phase_id IN     NUMBER      := FND_API.G_MISS_NUM
 ,p_current_lifecycle_phase    IN     VARCHAR2    := FND_API.G_MISS_CHAR
 ,x_return_status              OUT    NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                  OUT    NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                   OUT    NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS
  CURSOR cur_get_wp_attr(c_project_id NUMBER)
      IS
    select ppwa.proj_element_id,
           ppwa.wp_approval_reqd_flag,
           ppwa.wp_auto_publish_flag,
           ppwa.wp_default_display_lvl,
           ppwa.wp_enable_version_flag,
           ppwa.auto_pub_upon_creation_flag,
           ppwa.auto_sync_txn_date_flag,
           ppwa.wp_approver_source_id,
           ppwa.wp_approver_source_type,
           ppwa.record_version_number,
           ppwa.txn_date_sync_buf_days,
           ppwa.lifecycle_version_id,
           -- gboomina Bug 8586393 - start
           ppwa.use_task_schedule_flag
           -- gboomina Bug 8586393 - end
      from pa_proj_workplan_attr ppwa,
           pa_proj_elements ppe,
           pa_proj_structure_types ppst
     where ppwa.project_id = c_project_id
       and ppwa.project_id = ppe.project_id
       and ppwa.proj_element_id = ppe.proj_element_id
       and ppe.proj_element_id = ppst.proj_element_id
       and ppst.structure_type_id = 1;

  l_proj_element_id           NUMBER;
  l_project_id                NUMBER;
  l_wp_approval_reqd_fg       VARCHAR2(1);
  l_wp_auto_publish_fg        VARCHAR2(1);
  l_wp_default_display_lvl    NUMBER;
  l_wp_enable_version_fg      VARCHAR2(1);
  l_auto_pub_upon_creation_fg VARCHAR2(1);
  l_auto_sync_txn_date_fg     VARCHAR2(1);
  l_wp_approver_source_id     NUMBER;
  l_wp_approver_source_type   NUMBER;
  l_record_version_number     NUMBER;
  l_txn_date_sync_buf_days    NUMBER;
  l_life_cycle_version_id     NUMBER;
  l_current_phase_version_id  NUMBER;
  -- gboomina Bug 8586393 - start
  l_use_task_schedule_flag    VARCHAR2(1);
  -- gboomina Bug 8586393 - end
  API_ERROR                   EXCEPTION;

  l_return_status             VARCHAR2(1);
  l_msg_count                 NUMBER;
  l_msg_data                  VARCHAR2(250);
  l_error_msg_code            VARCHAR2(250);
  l_data                      VARCHAR2(250);
  l_msg_index_out             NUMBER;

BEGIN
  --Clear Error Messages.
  IF p_init_msg_list = FND_API.G_TRUE THEN
          FND_MSG_PUB.initialize;
  END IF;

  --set savepoint
  IF p_commit = FND_API.G_TRUE THEN
    SAVEPOINT update_current_phase;
  END IF;

  x_msg_count := 0;
  x_return_status := FND_API.G_RET_STS_SUCCESS;

  --Project name to id Conversion
  IF ((p_project_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND (p_project_name IS NOT NULL)) OR
     ((p_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) AND (p_project_id IS NOT NULL)) THEN
    PA_PROJ_ELEMENTS_UTILS.Project_Name_Or_Id(
            p_project_name   => p_project_name,
            p_project_id     => p_project_id,
            x_project_id     => l_project_id,
            x_return_status  => l_return_status,
            x_error_msg_code => l_error_msg_code);
    IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
      PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                           p_msg_name => l_error_msg_code);
      RAISE API_ERROR;
    END IF;
  END IF;

  --get existing row (need to get life cycle id);
  OPEN cur_get_wp_attr(l_project_id);
  FETCH cur_get_wp_attr INTO l_proj_element_id,
                             l_wp_approval_reqd_fg,
                             l_wp_auto_publish_fg,
                             l_wp_default_display_lvl,
                             l_wp_enable_version_fg,
                             l_auto_pub_upon_creation_fg,
                             l_auto_sync_txn_date_fg,
                             l_wp_approver_source_id,
                             l_wp_approver_source_type,
                             l_record_version_number,
                             l_txn_date_sync_buf_days,
                             l_life_cycle_version_id,
                             -- gboomina Bug 8586393 - start
                             l_use_task_schedule_flag;
                             -- gboomina Bug 8586393 - end
  CLOSE cur_get_wp_attr;

  --Current Phase name to id conversion
  IF ((p_current_lifecycle_phase_id <> FND_API.G_MISS_NUM) AND (p_current_lifecycle_phase_id is not NULL)) OR
     ((p_current_lifecycle_phase <> FND_API.G_MISS_CHAR) AND (p_current_lifecycle_phase is not NULL)) then
    PA_WORKPLAN_ATTR_UTILS.CHECK_LIFECYCLE_PHASE_NAME_ID
      ( p_lifecycle_id              => l_life_cycle_version_id
       ,p_current_lifecycle_phase_id        => p_current_lifecycle_phase_id
       ,p_current_lifecycle_phase           => p_current_lifecycle_phase
       ,p_check_id_flag                 => 'Y'
       ,x_current_lifecycle_phase_id        => l_current_phase_version_id
       ,x_return_status                 => l_return_status
       ,x_error_msg_code                => l_error_msg_code);

    IF l_return_status <> FND_API.G_RET_STS_SUCCESS then
      PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA', p_msg_name => l_error_msg_code);
      RAISE API_ERROR;
    END IF;
  END IF;


  --check security if user id is not -1
  IF (p_user_id <> -1) THEN
    IF 'F' = PA_SECURITY_PVT.check_user_privilege(
               'PA_PAXPREPR_OPT_WORKPLAN_STR',
               'PA_PROJECTS',
               l_project_id
             ) THEN
      PA_UTILS.ADD_MESSAGE
               (p_app_short_name => 'PA',
                p_msg_name       => 'PA_FUNCTION_SECURITY_ENFORCED');
      RAISE API_ERROR;
    END IF;
  END IF;


  --Call existing update API
  PA_WORKPLAN_ATTR_PVT.UPDATE_PROJ_WORKPLAN_ATTRS(
    p_commit => p_commit
   ,p_validate_only => p_validate_only
   ,p_validation_level => 50
   ,p_debug_mode => p_debug_mode
   ,p_max_msg_count => p_max_msg_count
   ,p_project_id => l_project_id
   ,p_proj_element_id => l_proj_element_id
   ,p_approval_reqd_flag => l_wp_approval_reqd_fg
   ,p_auto_publish_flag => l_wp_auto_publish_fg
   ,p_approver_source_id => l_wp_approver_source_id
   ,p_approver_source_type => l_wp_approver_source_type
   ,p_default_display_lvl => l_wp_default_display_lvl
   ,p_enable_wp_version_flag => l_wp_enable_version_fg
   ,p_auto_pub_upon_creation_flag => l_auto_pub_upon_creation_fg
   ,p_auto_sync_txn_date_flag => l_auto_sync_txn_date_fg
   ,p_txn_date_sync_buf_days => l_txn_date_sync_buf_days
   ,p_lifecycle_version_id => l_life_cycle_version_id
   ,p_current_phase_version_id => l_current_phase_version_id
   ,p_record_version_number => l_record_version_number
   -- gboomina Bug 8586393 - start
   ,p_use_task_schedule_flag  => l_use_task_schedule_flag
   -- gboomina Bug 8586393 - end
   ,x_return_status => l_return_status
   ,x_msg_count => l_msg_count
   ,x_msg_data => l_msg_data
  );

  if l_return_status <> FND_API.G_RET_STS_SUCCESS then
    x_msg_count := FND_MSG_PUB.count_msg;
    if x_msg_count = 1 then
      pa_interface_utils_pub.get_messages
         (p_encoded        => FND_API.G_TRUE,
          p_msg_index      => 1,
          p_msg_count      => l_msg_count,
          p_msg_data       => l_msg_data,
          p_data           => l_data,
          p_msg_index_out  => l_msg_index_out);
      x_msg_data := l_data;
    end if;
    raise API_ERROR;
  END IF;

  x_return_status := FND_API.G_RET_STS_SUCCESS;

  if p_commit = FND_API.G_TRUE then
     commit work;
  end if;

EXCEPTION
  WHEN API_ERROR THEN
    x_return_status := FND_API.G_RET_STS_ERROR;
    IF p_commit = FND_API.G_TRUE THEN
      rollback to update_current_phase;
    END IF;
  WHEN OTHERS THEN
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
    fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                            p_procedure_name => 'update_current_phase',
                            p_error_text     => SUBSTRB(SQLERRM,1,240));
    IF p_commit = FND_API.G_TRUE THEN
      rollback to update_current_phase;
    END IF;
    raise;
END Update_Current_Phase;
--end bug 3254091

  -- This API is created for FP_M changes. Refer to tracking bug 3305199
  -- This API imports the data from a string into the system
  -- Each string will contain the elements Source Ref, Sub Type and Lag Days
  Procedure Parse_Predecessor_Import (
    P_String          IN      VARCHAR2,
    P_Delimeter       IN      VARCHAR2 DEFAULT ',',
        P_Task_Version_Id IN      NUMBER,            --SMUKKA Added this parameter
    X_Return_Status   OUT     NOCOPY VARCHAR2, --File.Sql.39 bug 4440895
    X_Msg_Count       OUT     NOCOPY NUMBER, --File.Sql.39 bug 4440895
    X_Msg_Data        OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
  )
  IS
    l_Strings_Tab           PA_PLSQL_DATATYPES.Char240TabTyp;
    l_begin         NUMBER;
    l_End           NUMBER;
    l_Col1          NUMBER;
    l_Col2          VARCHAR2(10);
    l_Col3          VARCHAR2(10);
    l_String_Length     NUMBER;
    l_temp_char         VARCHAR2(1);

l_Type_Position NUMBER;
l_Type_Count    NUMBER;

l_Sign_Position NUMBER;
l_Sign_Count    NUMBER;

--bug 3613766
  cursor get_pred_id(c_pred_ref_id VARCHAR2) IS
  select ppev1.project_id, ppev1.element_version_id
    from pa_proj_elements ppe,
         pa_proj_element_versions ppev1,
         pa_proj_element_versions ppev2
   where ppev2.element_version_id = P_Task_Version_Id
     and ppev2.parent_structure_version_id = ppev1.parent_structure_version_id
     and ppev1.proj_element_id = ppe.proj_element_id
     and ppe.pm_source_reference = c_pred_ref_id;
  l_pred_project_id   NUMBER;
  l_pred_elem_ver_id  NUMBER;
  l_lag_val           NUMBER;
  l_type_val          VARCHAR2(2);
--end bug 3613766

  l_Delimeter         VARCHAR2(10);
  BEGIN

    IF (P_Delimeter = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
      l_Delimeter := ',';
    ELSE
      l_Delimeter := p_Delimeter;
    END IF;

    -- Build the PL/SQL Table with all the required strings
    l_begin := 1;
    For i IN 1..200000  -- Romove this range. Used only for testing
    Loop
      Select Instr(P_String, l_Delimeter, 1, i) Into l_End from dual;
      Select substr(P_String, l_begin, Decode(l_End, 0, 1000, l_End-l_begin))
      Into   l_Strings_Tab(i) From Dual;
      l_begin := l_end + 1;
      EXIT When nvl(l_End,0) = 0;
    End Loop;

   For Rec IN l_Strings_Tab.FIRST..l_Strings_Tab.LAST
   Loop
     -- Dbms_Output.Put_Line('Input String : -'|| l_Strings_Tab(Rec)||'-');

     If l_Strings_Tab(Rec) IS NOT NULL then
        l_String_Length := length(l_Strings_Tab(Rec));
     Else
    -- Dbms_Output.Put_Line('Error: Input string is null');
    RETURN;
     End If;

/*Added re-initialization of these 3 local variables for bug 8431166*/
    l_Col1 := 0;
    l_Col2 := NULL ;
    -- l_Col3 := NULL ; // This has already been done by bug 7243124
/*re-initialization ends for bug 8431166*/

     l_Sign_Count    := 0;
     l_Type_Count    := 0;
     l_Type_Position := 0;
     l_Sign_Position := 0;
     l_Col3 := NULL ; /*Added as part of fwd port bug 7243124*/

     FOR char_position in 1..l_String_Length
     Loop
       l_temp_char := substr(l_Strings_Tab(Rec), char_position, 1);
       -- Dbms_Output.Put_Line('Char : '|| l_temp_char );

       If ascii(l_temp_char) NOT BETWEEN 48 AND 57 then  -- is not number character
      -- Validating the dependency code number
      If char_position = 1 then
         -- Dbms_Output.Put_Line('Error: First char is not number');
         RETURN;
      End If;
      If l_temp_char NOT IN ('F', 'S', '+', '-' ) then
       --Dbms_Output.Put_Line('Error: Invalid char found in the string');
         RETURN;
      End If;

      -- Validating sign character
      If l_temp_char IN ('+', '-') then
         l_Sign_Count    := l_Sign_Count + 1;
         l_Sign_Position := char_position;
         If l_Sign_Count > 1 then
         -- Dbms_Output.Put_Line('Error: More than one signs are found');
           RETURN;
         Else
           If l_Type_Count < 1 then
             --Dbms_Output.Put_Line('Error: Type code is missing');
             RETURN;
           End If;
         End If;
      End If;

      -- Validating type code character
      If l_temp_char IN ('F', 'S') then
         If l_Type_Position > 0 and l_Type_Position+1 <> char_position Then
            -- Dbms_Output.Put_Line('Error: Type code is invalid - 2');
            RETURN;
         End If;
         l_Type_Count := l_Type_Count + 1; l_Type_Position := char_position;
         If l_Type_Count > 2 then
           -- Dbms_Output.Put_Line('Error: Type code is invalid - 3');
           RETURN;
         End If;
      End If;

       End If;
     End Loop;
     -- End of processing single string

     Select To_Number(SubStr(l_Strings_Tab(Rec), 1, Decode(l_Type_Position, 0, 100, l_Type_Position-2 )))
     Into   l_Col1 From Dual;

     If l_Type_Position <> 0 then
    If l_Type_Count <> 2 then
       -- Dbms_Output.Put_Line('Error: Type code is invalid - 4');
       RETURN;
    End If;
    l_Col2 := SubStr(l_Strings_Tab(Rec), l_Type_Position-1, 2);
     End If;

     If l_Sign_Position <> 0 then
    l_Col3 := SubStr(l_Strings_Tab(Rec),l_Sign_Position);
     End If;

-- Dbms_Output.Put_Line('Output Columns : '|| l_Col1||' - '||l_Col2||' - '||l_Col3);
     OPEN get_pred_id(l_col1);
     FETCH get_pred_id INTO l_pred_project_id, l_pred_elem_ver_id;
     IF get_pred_id%FOUND THEN

       IF (l_Col2 IS NULL) THEN
         l_type_val := 'FS';
       ELSE
         l_type_val := l_Col2;
       END IF;

       IF (l_Col3 IS NULL) THEN
         l_lag_val := 0;
       ELSE
         l_lag_val := l_Col3;
       END IF;

       pa_relationship_pvt.create_dependency(
        p_calling_module => 'AMG'
       ,p_src_proj_id => l_pred_project_id
       ,p_src_task_ver_id => P_Task_Version_Id
       ,p_dest_proj_id => l_pred_project_id
       ,p_dest_task_ver_id => l_pred_elem_ver_id
       ,p_type     => l_type_val
       ,p_lag_days => l_lag_val
       ,p_comments => NULL
       ,x_return_status => x_return_status
       ,x_msg_count => x_msg_count
       ,x_msg_data => x_msg_data);
     END IF;
     CLOSE get_pred_id;

     IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
       return;
     END IF;

   End Loop;

  END Parse_Predecessor_Import;

  -- This API is created for FP_M changes. Refer to tracking bug 3305199
  -- This API exports the data from a system into an out parameter string
  -- Each string will contain the elements Source Ref, Sub Type and Lag Days
  Function Parse_Predecessor_Export (
    P_Element_Version_ID      IN      NUMBER,
    P_Delimeter               IN      VARCHAR2 DEFAULT ','
  ) RETURN VARCHAR2
  IS
    l_String VARCHAR2(4000);
  Begin
      l_String := '';
      For i IN ( Select PPE.PM_Source_Reference SourceRef,
                POR.Relationship_Subtype SubType,
                decode(sign(NVL(POR.Lag_Day,0)),
               '0', '', '-1', '', '+') || decode(POR.Lag_Day,0, NULL, POR.Lag_day)/* bug#8583608(10*8*60)*/ LagDays   --bug 4348156
            From PA_Proj_Elements         PPE,
                 PA_Proj_Element_Versions PEV,
                 PA_Object_Relationships  POR,
                     PA_PROJ_ELEMENT_VERSIONS PEV2
            Where PPE.project_id            = PEV.project_id
            and PPE.proj_element_id     = PEV.proj_element_id
            and PEV.element_version_id  = POR.object_id_to1
                and PEV2.ELEMENT_VERSION_ID     = POR.object_id_from1
                and PEV2.ELEMENT_VERSION_ID     = P_ELEMENT_VERSION_ID
            and POR.Relationship_Type   = 'D'
            and POR.Object_ID_From2     = POR.Object_ID_To2 )
      Loop
    l_String := l_String||i.SourceRef||i.SubType||i.LagDays||P_Delimeter;
      End Loop;
      Return substr(l_String,1,length(l_string)-1);
      Exception When Others Then NULL;
  End Parse_Predecessor_Export;

Function Parse_Predecessor_Export2 (
    P_Element_Version_ID      IN      NUMBER,
    P_Delimeter               IN      VARCHAR2 DEFAULT ','
  ) RETURN VARCHAR2
  IS
    l_String VARCHAR2(4000);
  Begin
      l_String := '';
      For i IN ( Select PPE.proj_element_id ProjElemId,
                   POR.Relationship_Subtype SubType,
                   decode(sign(NVL(POR.Lag_Day,0)),
                   '0', '', '-1', '', '+') || decode(POR.Lag_Day,0, NULL, POR.Lag_day)/* bug#8583608 (10*8*60)*/ LagDays  --bug 4348156
            From PA_Proj_Elements         PPE,
                 PA_Proj_Element_Versions PEV,
                 PA_Object_Relationships  POR,
                 PA_PROJ_ELEMENT_VERSIONS PEV2
            Where PPE.project_id             = PEV.project_id
            and PPE.proj_element_id        = PEV.proj_element_id
            and PEV.element_version_id     = POR.object_id_to1
            and PEV2.ELEMENT_VERSION_ID     = POR.object_id_from1
            and PEV2.ELEMENT_VERSION_ID     = P_ELEMENT_VERSION_ID
            and POR.Relationship_Type      = 'D'
            and POR.Object_ID_From2     = POR.Object_ID_To2 )
      Loop
    l_String := l_String||i.ProjElemId||i.SubType||i.LagDays||P_Delimeter;
      End Loop;
      Return substr(l_String, 1, length(l_string)-1);
      Exception When Others Then NULL;
  End Parse_Predecessor_Export2;
--Added by rtarway for FP.M Development
Function GET_SHARE_TYPE (
    P_Project_ID      IN      NUMBER
  ) RETURN VARCHAR2
  IS
    Cursor get_proj_share_type
    IS
     SELECT proj.structure_sharing_code FROM pa_projects_all proj where proj.project_id = P_Project_ID;

    l_share_code VARCHAR2(250);

  Begin
      l_share_code := '';

      OPEN get_proj_share_type;
      FETCH get_proj_share_type into l_share_code;
      CLOSE get_proj_share_type;

      Return l_share_code;
      Exception When Others Then NULL;
  End GET_SHARE_TYPE;
--Added by rtarway for FP.M Development

  procedure delete_intra_dependency (p_element_version_id IN  NUMBER,
                                                     p_commit             IN  VARCHAR2 := FND_API.G_FALSE,
                                                     p_debug_mode         IN  VARCHAR2 := 'N',
                                                     x_return_status      OUT NOCOPY VARCHAR2) --File.Sql.39 bug 4440895
  IS
    l_object_type   VARCHAR2(80);
    API_ERROR       EXCEPTION;
  BEGIN
    IF (p_debug_mode = 'Y') THEN
      pa_debug.init_err_stack('PA_PROJ_TASK_STRUC_PUB.DELETE_INTRA_DEPENDENCY');
      pa_debug.debug('PA_PROJ_TASK_STRUC_PUB.DELETE_INTRA_DEPENDENCY Begin');
    END IF;
--
    IF (p_commit = FND_API.G_TRUE) THEN
      savepoint delete_intra_dependency;
    END IF;
    BEGIN
        SELECT object_type
          INTO l_object_type
          FROM pa_proj_element_versions
         WHERE ELEMENT_VERSION_ID = p_element_version_id;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
             fnd_message.set_name('PA','PA_RECORD_NOT_FOUND');
             x_return_status := FND_API.G_RET_STS_ERROR;
        WHEN OTHERS THEN
             x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
             raise;
    END;
    IF l_object_type='PA_TASKS' THEN
       BEGIN
           DELETE FROM pa_object_relationships por1
            WHERE por1.object_relationship_id IN
                  (SELECT por.object_relationship_id
                     FROM pa_object_relationships por
                    WHERE por.relationship_type = 'D'
                      AND por.object_id_from1 = p_element_version_id
                      AND por.object_id_from2 = por.object_id_to2
                      AND por.object_type_from = 'PA_TASKS'
                      AND por.object_type_to = 'PA_TASKS');
           IF SQL%NOTFOUND THEN
              fnd_message.set_name('PA','PA_RECORD_NOT_FOUND');
              x_return_status := FND_API.G_RET_STS_ERROR;
           END IF;
       EXCEPTION
           WHEN OTHERS THEN
                x_return_status := FND_API.G_RET_STS_ERROR;
                raise;
       END;
    ELSIF l_object_type='PA_STRUCTURES' THEN
       BEGIN
           DELETE FROM pa_object_relationships por1
            WHERE por1.object_relationship_id IN
                  (SELECT por.object_relationship_id
                     FROM pa_proj_element_versions ppev,
                          pa_object_relationships por
                    WHERE relationship_type ='D'
                      AND ppev.parent_structure_version_id = p_element_version_id
                      AND ppev.object_type = 'PA_TASKS'
                      AND por.object_id_from2 = por.object_id_to2
                      AND por.object_type_from = 'PA_TASKS'
                      AND por.object_type_to = 'PA_TASKS'
                      AND por.object_id_from1 = ppev.ELEMENT_VERSION_ID);
           IF SQL%NOTFOUND THEN
              fnd_message.set_name('PA','PA_RECORD_NOT_FOUND');
              x_return_status := FND_API.G_RET_STS_ERROR;
           END IF;
       EXCEPTION
           WHEN OTHERS THEN
                x_return_status := FND_API.G_RET_STS_ERROR;
                raise;
       END;
    END IF;
--
    x_return_status := FND_API.G_RET_STS_SUCCESS;
--
    IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
    END IF;
--
    IF (p_debug_mode = 'Y') THEN
       pa_debug.debug('PA_PROJ_TASK_STRUC_PUB.DELETE_INTRA_DEPENDENCY END');
    END IF;
  EXCEPTION
    WHEN API_ERROR THEN
        x_return_status := FND_API.G_RET_STS_ERROR;
        rollback to delete_intra_dependency;
    WHEN OTHERS THEN
        IF (p_commit = FND_API.G_TRUE) THEN
        ROLLBACK TO delete_intra_dependency;
    END IF;
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
    FND_MSG_PUB.add_exc_msg(
        p_pkg_name       => 'PA_PROJ_TASK_STRUC_PUB',
                p_procedure_name => 'delete_intra_dependency',
                p_error_text     => SUBSTRB(SQLERRM,1,240));
        ROLLBACK TO delete_intra_dependency;
    RAISE;
  END delete_intra_dependency;

END PA_PROJ_TASK_STRUC_PUB;


/
