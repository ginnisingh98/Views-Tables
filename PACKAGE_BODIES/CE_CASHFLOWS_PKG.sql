--------------------------------------------------------
--  DDL for Package Body CE_CASHFLOWS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."CE_CASHFLOWS_PKG" as
/* $Header: cebtcthb.pls 120.0 2005/07/26 08:44:47 jikumar noship $ */



FUNCTION body_revision RETURN VARCHAR2 IS
 BEGIN

    RETURN '$Revision: 120.0 $';

 END body_revision;

FUNCTION spec_revision RETURN VARCHAR2 IS
 BEGIN

    RETURN G_spec_revision;

 END spec_revision;

PROCEDURE INSERT_ROW (
			X_ROWID 						IN OUT NOCOPY VARCHAR2,
			X_CASHFLOW_ID					IN OUT NOCOPY NUMBER,
			X_CASHFLOW_LEDGER_ID 			NUMBER,
			X_CASHFLOW_LEGAL_ENTITY_ID		NUMBER,
			X_CASHFLOW_BANK_ACCOUNT_ID		NUMBER,
			X_CASHFLOW_DIRECTION			VARCHAR2,
			X_CASHFLOW_CURRENCY_CODE		VARCHAR2,
			X_CASHFLOW_DATE					DATE,
			X_CASHFLOW_AMOUNT				NUMBER,
			X_BASE_AMOUNT					NUMBER,
			X_DESCRIPTION					VARCHAR2,
			X_CASHFLOW_EXCHANGE_RATE		NUMBER,
			X_CASHFLOW_EXCHANGE_DATE		DATE,
			X_CASHFLOW_EXCHANGE_RATE_TYPE	VARCHAR2,
			X_TRXN_REFERENCE_NUMBER			NUMBER,
			X_BANK_TRXN_NUMBER				VARCHAR2,
			X_SOURCE_TRXN_TYPE				VARCHAR2,
			X_SOURCE_TRXN_SUBTYPE_CODE_ID	VARCHAR2,
			X_STATEMENT_LINE_ID				NUMBER,
			X_ACTUAL_VALUE_DATE				DATE,
			X_COUNTERPARTY_PARTY_ID			NUMBER,
			X_COUNTERPARTY_BANK_ACCOUNT_ID	NUMBER,
			X_OFFSET_CCID					NUMBER,
			X_CASHFLOW_STATUS_CODE			VARCHAR2,
			X_CLEARED_DATE					DATE,
			X_CLEARED_AMOUNT				NUMBER,
			X_CLEARED_EXCHANGE_RATE			NUMBER,
			X_CLEARED_EXCHANGE_DATE			DATE,
			X_CLEARED_EXCHANGE_RATE_TYPE	VARCHAR2,
			X_CLEARING_CHARGES_AMOUNT		NUMBER,
			X_CLEARING_ERROR_AMOUNT			NUMBER,
			X_CLEARED_BY_FLAG				VARCHAR2,
			X_REFERENCE_TEXT				VARCHAR2,
			X_BANK_ACCOUNT_TEXT				VARCHAR2,
			X_CUSTOMER_TEXT					VARCHAR2,
			X_CREATED_BY					NUMBER,
			X_CREATION_DATE					DATE,
			X_LAST_UPDATED_BY				NUMBER,
			X_LAST_UPDATE_DATE				DATE,
			X_LAST_UPDATE_LOGIN				NUMBER
			 ) IS

	CURSOR C IS SELECT CE_CASHFLOWS_S.NEXTVAL FROM DUAL;

	CURSOR C1 IS SELECT ROWID FROM CE_CASHFLOWS
	    		WHERE CASHFLOW_ID = X_CASHFLOW_ID;
  BEGIN
	IF ( X_CASHFLOW_ID ) IS NULL THEN
		OPEN C;
		FETCH C INTO X_CASHFLOW_ID;
		CLOSE C;
	END IF;
	INSERT INTO CE_CASHFLOWS (
			CASHFLOW_ID,
			CASHFLOW_LEDGER_ID,
			CASHFLOW_LEGAL_ENTITY_ID,
			CASHFLOW_BANK_ACCOUNT_ID,
			CASHFLOW_DIRECTION,
			CASHFLOW_CURRENCY_CODE,
			CASHFLOW_DATE,
			CASHFLOW_AMOUNT,
			BASE_AMOUNT,
			DESCRIPTION,
			CASHFLOW_EXCHANGE_RATE,
			CASHFLOW_EXCHANGE_DATE,
			CASHFLOW_EXCHANGE_RATE_TYPE,
			TRXN_REFERENCE_NUMBER,
			BANK_TRXN_NUMBER,
			SOURCE_TRXN_TYPE,
			SOURCE_TRXN_SUBTYPE_CODE_ID,
			STATEMENT_LINE_ID,
			ACTUAL_VALUE_DATE,
			COUNTERPARTY_PARTY_ID,
			COUNTERPARTY_BANK_ACCOUNT_ID,
			OFFSET_CCID,
			CASHFLOW_STATUS_CODE,
			CLEARED_DATE,
			CLEARED_AMOUNT,
			CLEARED_EXCHANGE_RATE,
			CLEARED_EXCHANGE_DATE,
			CLEARED_EXCHANGE_RATE_TYPE,
			CLEARING_CHARGES_AMOUNT,
			CLEARING_ERROR_AMOUNT,
			CLEARED_BY_FLAG,
			REFERENCE_TEXT,
			BANK_ACCOUNT_TEXT,
			CUSTOMER_TEXT,
			CREATED_BY,
			CREATION_DATE,
			LAST_UPDATED_BY,
			LAST_UPDATE_DATE,
			LAST_UPDATE_LOGIN,
			OBJECT_VERSION_NUMBER
		) VALUES
		(
			X_CASHFLOW_ID,
			X_CASHFLOW_LEDGER_ID,
			X_CASHFLOW_LEGAL_ENTITY_ID,
			X_CASHFLOW_BANK_ACCOUNT_ID,
			X_CASHFLOW_DIRECTION,
			X_CASHFLOW_CURRENCY_CODE,
			X_CASHFLOW_DATE,
			X_CASHFLOW_AMOUNT,
			X_BASE_AMOUNT,
			X_DESCRIPTION,
			X_CASHFLOW_EXCHANGE_RATE,
			X_CASHFLOW_EXCHANGE_DATE,
			X_CASHFLOW_EXCHANGE_RATE_TYPE,
			X_TRXN_REFERENCE_NUMBER,
			X_BANK_TRXN_NUMBER,
			X_SOURCE_TRXN_TYPE,
			X_SOURCE_TRXN_SUBTYPE_CODE_ID,
			X_STATEMENT_LINE_ID,
			X_ACTUAL_VALUE_DATE,
			X_COUNTERPARTY_PARTY_ID,
			X_COUNTERPARTY_BANK_ACCOUNT_ID,
			X_OFFSET_CCID,
			X_CASHFLOW_STATUS_CODE,
			X_CLEARED_DATE,
			X_CLEARED_AMOUNT,
			X_CLEARED_EXCHANGE_RATE,
			X_CLEARED_EXCHANGE_DATE,
			X_CLEARED_EXCHANGE_RATE_TYPE,
			X_CLEARING_CHARGES_AMOUNT,
			X_CLEARING_ERROR_AMOUNT,
			X_CLEARED_BY_FLAG,
			X_REFERENCE_TEXT,
			X_BANK_ACCOUNT_TEXT,
			X_CUSTOMER_TEXT,
			X_CREATED_BY,
			X_CREATION_DATE,
			X_LAST_UPDATED_BY,
			X_LAST_UPDATE_DATE,
			X_LAST_UPDATE_LOGIN,
			'1' );

	OPEN C1;
	FETCH C1 INTO X_rowid;
	IF (C1%NOTFOUND) THEN
		CLOSE C1;
      		Raise NO_DATA_FOUND;
    	END IF;
    	CLOSE C1;

  END INSERT_ROW;


PROCEDURE UPDATE_ROW (
			X_ROWID							VARCHAR2,
			X_CASHFLOW_ID					NUMBER,
			X_CASHFLOW_LEDGER_ID			NUMBER,
			X_CASHFLOW_LEGAL_ENTITY_ID		NUMBER,
			X_CASHFLOW_BANK_ACCOUNT_ID		NUMBER,
			X_CASHFLOW_DIRECTION			VARCHAR2,
			X_CASHFLOW_CURRENCY_CODE		VARCHAR2,
			X_CASHFLOW_DATE					DATE,
			X_CASHFLOW_AMOUNT				NUMBER,
			X_BASE_AMOUNT					NUMBER,
			X_DESCRIPTION					VARCHAR2,
			X_CASHFLOW_EXCHANGE_RATE		NUMBER,
			X_CASHFLOW_EXCHANGE_DATE		DATE,
			X_CASHFLOW_EXCHANGE_RATE_TYPE	VARCHAR2,
			X_TRXN_REFERENCE_NUMBER			NUMBER,
			X_BANK_TRXN_NUMBER				NUMBER,
			X_SOURCE_TRXN_TYPE				VARCHAR2,
			X_SOURCE_TRXN_SUBTYPE_CODE_ID	VARCHAR2,
			X_STATEMENT_LINE_ID				NUMBER,
			X_ACTUAL_VALUE_DATE				DATE,
			X_COUNTERPARTY_PARTY_ID			NUMBER,
			X_COUNTERPARTY_BANK_ACCOUNT_ID	NUMBER,
			X_OFFSET_CCID					NUMBER,
			X_CASHFLOW_STATUS_CODE			VARCHAR2,
			X_CLEARED_DATE					DATE,
			X_CLEARED_AMOUNT				NUMBER,
			X_CLEARED_EXCHANGE_RATE			NUMBER,
			X_CLEARED_EXCHANGE_DATE			DATE,
			X_CLEARED_EXCHANGE_RATE_TYPE	VARCHAR2,
			X_CLEARING_CHARGES_AMOUNT		NUMBER,
			X_CLEARING_ERROR_AMOUNT			NUMBER,
			X_CLEARED_BY_FLAG				VARCHAR2,
			X_REFERENCE_TEXT				VARCHAR2,
			X_BANK_ACCOUNT_TEXT				VARCHAR2,
			X_CUSTOMER_TEXT					VARCHAR2,
			X_LAST_UPDATED_BY				NUMBER,
			X_LAST_UPDATE_DATE				DATE,
			X_LAST_UPDATE_LOGIN				NUMBER,
			X_OBJECT_VERSION_NUMBER			NUMBER  ) IS
  BEGIN
	UPDATE CE_CASHFLOWS
	SET
			CASHFLOW_ID 					=  	X_CASHFLOW_ID,
			CASHFLOW_LEDGER_ID 				= 	X_CASHFLOW_LEDGER_ID,
			CASHFLOW_LEGAL_ENTITY_ID		= 	X_CASHFLOW_LEGAL_ENTITY_ID,
			CASHFLOW_BANK_ACCOUNT_ID		= 	X_CASHFLOW_BANK_ACCOUNT_ID,
			CASHFLOW_DIRECTION  			= 	X_CASHFLOW_DIRECTION,
			CASHFLOW_CURRENCY_CODE  		= 	X_CASHFLOW_CURRENCY_CODE,
			CASHFLOW_DATE  					= 	X_CASHFLOW_DATE,
			CASHFLOW_AMOUNT  				=	X_CASHFLOW_AMOUNT,
			BASE_AMOUNT						=	X_BASE_AMOUNT,
			DESCRIPTION  					= 	X_DESCRIPTION,
			CASHFLOW_EXCHANGE_RATE  		= 	X_CASHFLOW_EXCHANGE_RATE,
			CASHFLOW_EXCHANGE_DATE  		= 	X_CASHFLOW_EXCHANGE_DATE,
			CASHFLOW_EXCHANGE_RATE_TYPE  	= 	X_CASHFLOW_EXCHANGE_RATE_TYPE,
			TRXN_REFERENCE_NUMBER 			= 	X_TRXN_REFERENCE_NUMBER,
			BANK_TRXN_NUMBER 				= 	X_BANK_TRXN_NUMBER,
			SOURCE_TRXN_TYPE 				= 	X_SOURCE_TRXN_TYPE,
			SOURCE_TRXN_SUBTYPE_CODE_ID  	= 	X_SOURCE_TRXN_SUBTYPE_CODE_ID,
			STATEMENT_LINE_ID  				= 	X_STATEMENT_LINE_ID,
			ACTUAL_VALUE_DATE  				= 	X_ACTUAL_VALUE_DATE,
			COUNTERPARTY_PARTY_ID  			= 	X_COUNTERPARTY_PARTY_ID,
			COUNTERPARTY_BANK_ACCOUNT_ID  	=	X_COUNTERPARTY_BANK_ACCOUNT_ID,
			OFFSET_CCID 					= 	X_OFFSET_CCID,
			CASHFLOW_STATUS_CODE  			= 	X_CASHFLOW_STATUS_CODE,
			CLEARED_DATE  					= 	X_CLEARED_DATE,
			CLEARED_AMOUNT  				= 	X_CLEARED_AMOUNT,
			CLEARED_EXCHANGE_RATE  			= 	X_CLEARED_EXCHANGE_RATE,
			CLEARED_EXCHANGE_DATE  			= 	X_CLEARED_EXCHANGE_DATE,
			CLEARED_EXCHANGE_RATE_TYPE  	= 	X_CLEARED_EXCHANGE_RATE_TYPE,
			CLEARING_CHARGES_AMOUNT 		= 	X_CLEARING_CHARGES_AMOUNT,
			CLEARING_ERROR_AMOUNT  			= 	X_CLEARING_ERROR_AMOUNT,
			CLEARED_BY_FLAG  				= 	X_CLEARED_BY_FLAG,
			REFERENCE_TEXT					=	X_REFERENCE_TEXT,
			BANK_ACCOUNT_TEXT				=	X_BANK_ACCOUNT_TEXT,
			CUSTOMER_TEXT					=	X_CUSTOMER_TEXT,
			LAST_UPDATED_BY  				= 	X_LAST_UPDATED_BY,
			LAST_UPDATE_DATE  				= 	X_LAST_UPDATE_DATE,
			LAST_UPDATE_LOGIN  				= 	LAST_UPDATE_LOGIN,
			OBJECT_VERSION_NUMBER  			= 	OBJECT_VERSION_NUMBER + 1
	WHERE
		OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER AND
		ROWID = X_ROWID;

	IF (SQL%NOTFOUND) THEN
			Raise NO_DATA_FOUND;
	END IF;

  END UPDATE_ROW;


PROCEDURE Delete_Row( X_Row_id VARCHAR2 ) IS
  BEGIN

    DELETE FROM CE_CASHFLOWS
    WHERE rowid = X_Row_Id;

    IF (SQL%NOTFOUND) THEN
      Raise NO_DATA_FOUND;
    END IF;

  END Delete_Row;


END CE_CASHFLOWS_PKG;

/
