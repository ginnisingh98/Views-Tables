--------------------------------------------------------
--  DDL for Package Body WIP_WIPDJRTG_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."WIP_WIPDJRTG_XMLP_PKG" AS
/* $Header: WIPDJRTGB.pls 120.1 2008/01/31 12:22:14 npannamp noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  APF BOOLEAN;
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    APF := afterpform;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    DECLARE
      P_ORG_ID_CHAR VARCHAR2(100) := (P_ORGANIZATION_ID);
    BEGIN
      FND_PROFILE.PUT('MFG_ORGANIZATION_ID'
                     ,P_ORG_ID_CHAR);
      /*SRW.USER_EXIT('FND PUTPROFILE NAME="' || 'MFG_ORGANIZATION_ID' || '" FIELD="' || P_ORG_ID_CHAR || '"')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(020
                   ,'Failed in before report trigger, setting org profile ')*/NULL;
        RAISE;
    END;
    RETURN (TRUE);
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION NAME_RANGE RETURN CHARACTER IS
    NAME_RANGE VARCHAR2(240);
  BEGIN
    IF (P_WIP_ENTITY_NAME1 IS NOT NULL) THEN
      IF (P_WIP_ENTITY_NAME2 IS NOT NULL) THEN
        IF (P_WIP_ENTITY_NAME1 = P_WIP_ENTITY_NAME2) THEN
          NAME_RANGE := 'AND E.WIP_ENTITY_NAME = ''' || P_WIP_ENTITY_NAME1 || '''';
        ELSE
          NAME_RANGE := 'AND E.WIP_ENTITY_NAME BETWEEN ''' || P_WIP_ENTITY_NAME1 || '''
                                              AND ''' || P_WIP_ENTITY_NAME2 || '''';
        END IF;
      ELSE
        NAME_RANGE := 'AND E.WIP_ENTITY_NAME >= ''' || P_WIP_ENTITY_NAME1 || '''';
      END IF;
    ELSE
      IF (P_WIP_ENTITY_NAME2 IS NOT NULL) THEN
        NAME_RANGE := 'AND E.WIP_ENTITY_NAME <= ''' || P_WIP_ENTITY_NAME2 || '''';
      ELSE
        NAME_RANGE := ' ';
      END IF;
    END IF;
    RETURN (NAME_RANGE);
  END NAME_RANGE;

  FUNCTION DATE_RANGE RETURN CHARACTER IS
    DATE_RANGE VARCHAR2(150);
  BEGIN
    IF (P_SCHEDULED_START_DATE1 IS NOT NULL) THEN
      IF (P_SCHEDULED_START_DATE2 IS NOT NULL) THEN
        IF (P_SCHEDULED_START_DATE1 = P_SCHEDULED_START_DATE2) THEN
          DATE_RANGE := ' AND TRUNC(D.SCHEDULED_START_DATE) = TO_DATE(''' || TO_CHAR(P_SCHEDULED_START_DATE1
                               ,'YYYYMMDD') || ''',''YYYYMMDD'')';
        ELSE
          DATE_RANGE := ' AND TRUNC(D.SCHEDULED_START_DATE) BETWEEN TO_DATE(''' || TO_CHAR(P_SCHEDULED_START_DATE1
                               ,'YYYYMMDD') || ''',''YYYYMMDD'') AND TO_DATE(''' || TO_CHAR(P_SCHEDULED_START_DATE2
                               ,'YYYYMMDD') || ''',''YYYYMMDD'')';
        END IF;
      ELSE
        DATE_RANGE := ' AND TRUNC(D.SCHEDULED_START_DATE) >= TO_DATE(''' || TO_CHAR(P_SCHEDULED_START_DATE1
                             ,'YYYYMMDD') || ''',''YYYYMMDD'')';
      END IF;
    ELSE
      IF (P_SCHEDULED_START_DATE2 IS NOT NULL) THEN
        DATE_RANGE := ' AND TRUNC(D.SCHEDULED_START_DATE) <= TO_DATE(''' || TO_CHAR(P_SCHEDULED_START_DATE2
                             ,'YYYYMMDD') || ''',''YYYYMMDD'')';
      ELSE
        DATE_RANGE := ' ';
      END IF;
    END IF;
    RETURN (DATE_RANGE);
  END DATE_RANGE;

  FUNCTION NAME_OR_DATE RETURN CHARACTER IS
    NAME_OR_DATE CHARACTER(50);
  BEGIN
    IF ((P_WIP_ENTITY_NAME1 IS NOT NULL) OR (P_WIP_ENTITY_NAME2 IS NOT NULL)) THEN
      NAME_OR_DATE := 'E.WIP_ENTITY_NAME, D.SCHEDULED_START_DATE,';
    ELSE
      IF ((P_SCHEDULED_START_DATE1 IS NOT NULL) OR (P_SCHEDULED_START_DATE2 IS NOT NULL)) THEN
        NAME_OR_DATE := 'D.SCHEDULED_START_DATE, E.WIP_ENTITY_NAME,';
      ELSE
        NAME_OR_DATE := 'E.WIP_ENTITY_NAME, D.SCHEDULED_START_DATE';
      END IF;
    END IF;
    RETURN (NAME_OR_DATE);
  END NAME_OR_DATE;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    IF P_SCHEDULE_GROUP_FROM IS NOT NULL OR P_SCHEDULE_GROUP_TO IS NOT NULL THEN
      P_SG_OUTER := ' ';
    END IF;
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION C_LIMITER RETURN VARCHAR2 IS
    C_OUT VARCHAR2(200);
  BEGIN
    IF P_SCHEDULE_GROUP_FROM IS NOT NULL THEN
      IF P_SCHEDULE_GROUP_TO IS NOT NULL THEN
        C_OUT := ' AND SG.SCHEDULE_GROUP_NAME BETWEEN ''' || P_SCHEDULE_GROUP_FROM || ''' AND ''' || P_SCHEDULE_GROUP_TO || '''';
      ELSE
        C_OUT := ' AND SG.SCHEDULE_GROUP_NAME >= ''' || P_SCHEDULE_GROUP_FROM || '''';
      END IF;
    ELSE
      IF P_SCHEDULE_GROUP_TO IS NOT NULL THEN
        C_OUT := ' AND SG.SCHEDULE_GROUP_NAME <= ''' || P_SCHEDULE_GROUP_TO || '''';
      ELSE
        C_OUT := ' ';
      END IF;
    END IF;
    RETURN (C_OUT);
  END C_LIMITER;

  FUNCTION C_ORDER_BYFORMULA RETURN VARCHAR2 IS
  BEGIN
    IF P_SORT_BY = 14 THEN
      RETURN ('SG.SCHEDULE_GROUP_NAME, D.BUILD_SEQUENCE');
    ELSE
      RETURN ('E.WIP_ENTITY_NAME');
    END IF;
    RETURN NULL;
  END C_ORDER_BYFORMULA;

END WIP_WIPDJRTG_XMLP_PKG;


/
