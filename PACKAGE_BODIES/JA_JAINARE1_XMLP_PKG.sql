--------------------------------------------------------
--  DDL for Package Body JA_JAINARE1_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JA_JAINARE1_XMLP_PKG" AS
/* $Header: JAINARE1B.pls 120.1 2007/12/25 16:12:44 dwkrishn noship $ */
  FUNCTION CF_CITYFORMULA RETURN CHAR IS
    CURSOR C_CITY(P_LOCATION_ID IN NUMBER) IS
      SELECT
        TOWN_OR_CITY
      FROM
        HR_LOCATIONS
      WHERE LOCATION_ID = P_LOCATION_ID;
    CURSOR C_LOCATION(P_ORGANIZATION_ID IN NUMBER) IS
      SELECT
        LOCATION_ID
      FROM
        HR_ORGANIZATION_UNITS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    CURSOR C_ORGANIZATION(P_ORGANIZATION_ID IN NUMBER) IS
      SELECT
        LEGAL_ENTITY
      FROM
        ORG_ORGANIZATION_DEFINITIONS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    V_ORGANIZATION_ID ORG_ORGANIZATION_DEFINITIONS.LEGAL_ENTITY%TYPE;
    V_LOCATION_ID HR_ORGANIZATION_UNITS.LOCATION_ID%TYPE;
    V_CITY HR_LOCATIONS.TOWN_OR_CITY%TYPE;
  BEGIN
    OPEN C_ORGANIZATION(P_ORGANIZATION_ID);
    FETCH C_ORGANIZATION
     INTO V_ORGANIZATION_ID;
    CLOSE C_ORGANIZATION;
    OPEN C_LOCATION(V_ORGANIZATION_ID);
    FETCH C_LOCATION
     INTO V_LOCATION_ID;
    CLOSE C_LOCATION;
    OPEN C_CITY(V_LOCATION_ID);
    FETCH C_CITY
     INTO V_CITY;
    CLOSE C_CITY;
    RETURN V_CITY;
  END CF_CITYFORMULA;

  FUNCTION CF_LEGAL_ENTITYFORMULA RETURN CHAR IS
    CURSOR C_LEGAL_ENTITY_NAME(P_LEGAL_ENTITY_ID IN NUMBER) IS
      SELECT
        NAME
      FROM
        HR_ORGANIZATION_UNITS
      WHERE ORGANIZATION_ID = P_LEGAL_ENTITY_ID;
    CURSOR C_LEGAL_ENTITY_ID(P_ORGANIZATION_ID IN NUMBER) IS
      SELECT
        LEGAL_ENTITY
      FROM
        ORG_ORGANIZATION_DEFINITIONS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    V_NAME ORG_ORGANIZATION_DEFINITIONS.ORGANIZATION_NAME%TYPE;
    V_LEGAL_ENTITY_ID ORG_ORGANIZATION_DEFINITIONS.LEGAL_ENTITY%TYPE;
  BEGIN
    OPEN C_LEGAL_ENTITY_ID(P_ORGANIZATION_ID);
    FETCH C_LEGAL_ENTITY_ID
     INTO V_LEGAL_ENTITY_ID;
    CLOSE C_LEGAL_ENTITY_ID;
    OPEN C_LEGAL_ENTITY_NAME(V_LEGAL_ENTITY_ID);
    FETCH C_LEGAL_ENTITY_NAME
     INTO V_NAME;
    CLOSE C_LEGAL_ENTITY_NAME;
    RETURN V_NAME;
  END CF_LEGAL_ENTITYFORMULA;

  FUNCTION CF_DESTINATION_COUNTRYFORMULA(SHIP_TO_SITE_USE_ID IN NUMBER) RETURN CHAR IS
    CURSOR C_ADDRESS(P_SITE_USE_ID IN NUMBER) IS
      SELECT
        CUST_ACCT_SITE_ID ADDRESS_ID
      FROM
        HZ_CUST_SITE_USES_ALL
      WHERE SITE_USE_ID = P_SITE_USE_ID;
    CURSOR C_COUNTRY(P_ADDRESS_ID IN NUMBER) IS
      SELECT
        HZL.COUNTRY COUNTRY
      FROM
        HZ_LOCATIONS HZL,
        HZ_PARTY_SITES HZPS,
        HZ_CUST_ACCT_SITES_ALL HZCAS
      WHERE HZL.LOCATION_ID = HZPS.LOCATION_ID
        AND HZPS.PARTY_SITE_ID = HZCAS.PARTY_SITE_ID
        AND HZCAS.CUST_ACCT_SITE_ID = P_ADDRESS_ID;
    V_ADDRESS_ID HZ_CUST_ACCT_SITES_ALL.CUST_ACCT_SITE_ID%TYPE;
    V_COUNTRY HZ_LOCATIONS.COUNTRY%TYPE;
  BEGIN
    OPEN C_ADDRESS(SHIP_TO_SITE_USE_ID);
    FETCH C_ADDRESS
     INTO V_ADDRESS_ID;
    CLOSE C_ADDRESS;
    OPEN C_COUNTRY(V_ADDRESS_ID);
    FETCH C_COUNTRY
     INTO V_COUNTRY;
    CLOSE C_COUNTRY;
    RETURN V_COUNTRY;
  END CF_DESTINATION_COUNTRYFORMULA;

  FUNCTION CP_NULLFORMULA RETURN CHAR IS
  BEGIN
    RETURN NULL;
  END CP_NULLFORMULA;

  FUNCTION CF_QTY_OF_GOODSFORMULA(QUANTITY IN NUMBER
                                 ,REQUESTED_QUANTITY_UOM IN VARCHAR2) RETURN CHAR IS
  BEGIN
    RETURN NVL(QUANTITY
              ,'') || ' ' || NVL(REQUESTED_QUANTITY_UOM
              ,'');
  END CF_QTY_OF_GOODSFORMULA;

  FUNCTION CF_TAX_RATEFORMULA(DELIVERY_ID IN NUMBER
                             ,INVENTORY_ITEM_ID IN NUMBER) RETURN NUMBER IS
    CURSOR C_EXCISE_RATE(P_DELIVERY_ID IN NUMBER,P_INVENTORY_ITEM_ID IN NUMBER) IS
      SELECT
        JISPTL.TAX_RATE
      FROM
        JAI_CMN_TAXES_ALL JTC,
        JAI_OM_WSH_LINE_TAXES JISPTL
      WHERE JISPTL.DELIVERY_DETAIL_ID in (
        SELECT
          DELIVERY_DETAIL_ID
        FROM
          JAI_OM_WSH_LINES_ALL
        WHERE DELIVERY_ID = P_DELIVERY_ID
          AND INVENTORY_ITEM_ID = P_INVENTORY_ITEM_ID )
        AND JTC.TAX_ID = JISPTL.TAX_ID
        AND JTC.TAX_TYPE like '%Excise%';
    V_RATE NUMBER;
  BEGIN
    OPEN C_EXCISE_RATE(DELIVERY_ID,INVENTORY_ITEM_ID);
    FETCH C_EXCISE_RATE
     INTO V_RATE;
    CLOSE C_EXCISE_RATE;
    RETURN V_RATE;
  END CF_TAX_RATEFORMULA;

  FUNCTION CF_VALUEFORMULA(DELIVERY_ID IN NUMBER
                          ,ORDER_HEADER_ID IN NUMBER
                          ,ORDER_LINE_ID IN NUMBER
                          ,QUANTITY IN NUMBER
                          ,CF_SET_OF_BOOKS_ID IN NUMBER
                          ,CF_FUN_CURR IN VARCHAR2) RETURN CHAR IS
    CURSOR C_DELIVERY_DATE(P_DELIVERY_ID IN NUMBER) IS
      SELECT
        CONFIRM_DATE
      FROM
        WSH_NEW_DELIVERIES
      WHERE DELIVERY_ID = P_DELIVERY_ID;
    CURSOR C_CONVERSION(P_HEADER_ID IN NUMBER) IS
      SELECT
        CONVERSION_TYPE_CODE,
        CONVERSION_RATE,
        TRANSACTIONAL_CURR_CODE
      FROM
        OE_ORDER_HEADERS_ALL
      WHERE HEADER_ID = P_HEADER_ID;
    CURSOR C_ORDER_LINE_SELLING_PRICE(P_LINE_ID IN NUMBER,P_HEADER_ID IN NUMBER) IS
      SELECT
        UNIT_SELLING_PRICE
      FROM
        OE_ORDER_LINES_ALL
      WHERE LINE_ID = P_LINE_ID
        AND HEADER_ID = P_HEADER_ID;
    V_CONFIRM_DATE DATE;
    V_CONVERSION_TYPE OE_ORDER_HEADERS_ALL.CONVERSION_TYPE_CODE%TYPE;
    V_TRANS_CURR OE_ORDER_HEADERS_ALL.TRANSACTIONAL_CURR_CODE%TYPE;
    V_CONVERSION C_CONVERSION%ROWTYPE;
    V_CONVERSION_RATE NUMBER;
    V_SELLING_PRICE NUMBER;
    V_SELLING_VALUE NUMBER(20,3);
    V_STRING VARCHAR2(100) := '';
    V_TOTAL_LENGTH NUMBER := 11;
    V_FIELD_LENGTH NUMBER := 11;
  BEGIN
    OPEN C_DELIVERY_DATE(DELIVERY_ID);
    FETCH C_DELIVERY_DATE
     INTO V_CONFIRM_DATE;
    CLOSE C_DELIVERY_DATE;
    OPEN C_CONVERSION(ORDER_HEADER_ID);
    FETCH C_CONVERSION
     INTO V_CONVERSION;
    CLOSE C_CONVERSION;
    OPEN C_ORDER_LINE_SELLING_PRICE(ORDER_LINE_ID,ORDER_HEADER_ID);
    FETCH C_ORDER_LINE_SELLING_PRICE
     INTO V_SELLING_PRICE;
    CLOSE C_ORDER_LINE_SELLING_PRICE;
    V_SELLING_VALUE := V_SELLING_PRICE * QUANTITY;
    IF V_CONVERSION.TRANSACTIONAL_CURR_CODE IS NOT NULL THEN
      V_CONVERSION_RATE := JAI_CMN_UTILS_PKG.CURRENCY_CONVERSION(CF_SET_OF_BOOKS_ID
                                                                ,V_CONVERSION.TRANSACTIONAL_CURR_CODE
                                                                ,V_CONFIRM_DATE
                                                                ,V_CONVERSION.CONVERSION_TYPE_CODE
                                                                ,V_CONVERSION.CONVERSION_RATE);
      IF V_SELLING_VALUE IS NULL THEN
        V_STRING := V_CONVERSION.TRANSACTIONAL_CURR_CODE || ' ';
      ELSE
        V_STRING := NVL(V_CONVERSION.TRANSACTIONAL_CURR_CODE
                       ,'') || ' ' || ROUND(V_SELLING_VALUE
                         ,2);
      END IF;
      V_STRING := V_STRING || ' ';
      V_STRING := V_STRING || '@' || NVL(CF_FUN_CURR
                     ,'') || ' ' || ROUND(NVL(V_CONVERSION_RATE
                           ,1)
                       ,2);
      V_STRING := V_STRING || ' ';
    END IF;
    V_STRING := V_STRING || NVL(CF_FUN_CURR
                   ,'') || ' ' || ROUND(NVL(V_SELLING_VALUE
                         ,0) * NVL(V_CONVERSION_RATE
                         ,1)
                     ,2);
    RETURN V_STRING;
  END CF_VALUEFORMULA;

  FUNCTION CF_SET_OF_BOOKS_IDFORMULA RETURN NUMBER IS
    CURSOR C_SET_OF_BOOKS(P_OPERATING_UNIT_ID IN NUMBER) IS
      SELECT
        SET_OF_BOOKS_ID
      FROM
        ORG_ORGANIZATION_DEFINITIONS
      WHERE ORGANIZATION_ID = P_OPERATING_UNIT_ID;
    V_SOB NUMBER;
  BEGIN
    OPEN C_SET_OF_BOOKS(P_ORGANIZATION_ID);
    FETCH C_SET_OF_BOOKS
     INTO V_SOB;
    CLOSE C_SET_OF_BOOKS;
    RETURN V_SOB;
  END CF_SET_OF_BOOKS_IDFORMULA;

  FUNCTION CF_FUN_CURRFORMULA(CF_SET_OF_BOOKS_ID IN NUMBER) RETURN CHAR IS
    CURSOR C_FUN_CURR(P_SOB IN NUMBER) IS
      SELECT
        CURRENCY_CODE
      FROM
        GL_SETS_OF_BOOKS
      WHERE SET_OF_BOOKS_ID = P_SOB;
    V_CURR VARCHAR2(4);
  BEGIN
    OPEN C_FUN_CURR(CF_SET_OF_BOOKS_ID);
    FETCH C_FUN_CURR
     INTO V_CURR;
    CLOSE C_FUN_CURR;
    RETURN V_CURR;
  END CF_FUN_CURRFORMULA;

  FUNCTION CF_PACKINGFORMULA RETURN CHAR IS
  BEGIN
    RETURN 'As Per Packing List';
  END CF_PACKINGFORMULA;

  FUNCTION CF_FUNC_TAX_AMOUNTFORMULA(DELIVERY_ID IN NUMBER
                                    ,INVENTORY_ITEM_ID IN NUMBER) RETURN NUMBER IS
    CURSOR C_EXCISE_AMOUNT(P_DELIVERY_ID IN NUMBER,P_INVENTORY_ITEM_ID IN NUMBER) IS
      SELECT
        SUM(DECODE(UPPER(TAX_TYPE)
                  ,'EXCISE'
                  ,JISPTL.FUNC_TAX_AMOUNT
                  ,'OTHER EXCISE'
                  ,JISPTL.FUNC_TAX_AMOUNT
                  ,'ADDL. EXCISE'
                  ,JISPTL.FUNC_TAX_AMOUNT
                  ,0)) EXCISE,
        SUM(DECODE(UPPER(TAX_TYPE)
                  ,'EXCISE_EDUCATION_CESS'
                  ,JISPTL.FUNC_TAX_AMOUNT
                  ,0)) EXCISE_CESS,
        SUM(DECODE(UPPER(TAX_TYPE)
                  ,'EXCISE_SH_EDU_CESS'
                  ,JISPTL.FUNC_TAX_AMOUNT
                  ,0)) EXCISE_SH_CESS
      FROM
        JAI_CMN_TAXES_ALL JTC,
        JAI_OM_WSH_LINE_TAXES JISPTL
      WHERE JISPTL.DELIVERY_DETAIL_ID in (
        SELECT
          DELIVERY_DETAIL_ID
        FROM
          JAI_OM_WSH_LINES_ALL
        WHERE DELIVERY_ID = P_DELIVERY_ID
          AND INVENTORY_ITEM_ID = P_INVENTORY_ITEM_ID )
        AND JTC.TAX_ID = JISPTL.TAX_ID
        AND JTC.TAX_TYPE like '%Excise%';
    V_FUNC_TAX_AMOUNT NUMBER;
    V_EXCISE_AMOUNT NUMBER;
    V_EXCISE_CESS_AMOUNT NUMBER;
    V_EXCISE_SH_CESS_AMOUNT NUMBER;
  BEGIN
    OPEN C_EXCISE_AMOUNT(DELIVERY_ID,INVENTORY_ITEM_ID);
    FETCH C_EXCISE_AMOUNT
     INTO V_EXCISE_AMOUNT,V_EXCISE_CESS_AMOUNT,V_EXCISE_SH_CESS_AMOUNT;
    CLOSE C_EXCISE_AMOUNT;
    CP_EXCISE_CESS_AMOUNT := NVL(V_EXCISE_CESS_AMOUNT
                                ,0);
    CP_EXCISE_SH_CESS_AMOUNT := NVL(V_EXCISE_SH_CESS_AMOUNT
                                   ,0);
    RETURN NVL(V_EXCISE_AMOUNT
              ,0);
  END CF_FUNC_TAX_AMOUNTFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR C_ENABLE_TRACE(CP_APP_SHORT_NAME IN FND_APPLICATION.APPLICATION_SHORT_NAME%TYPE,CP_CON_PROGRAM_NAME IN FND_CONCURRENT_PROGRAMS.CONCURRENT_PROGRAM_NAME%TYPE) IS
      SELECT
        NVL(ENABLE_TRACE
           ,'N'),
        A.CONCURRENT_PROGRAM_ID
      FROM
        FND_CONCURRENT_PROGRAMS A,
        FND_APPLICATION B
      WHERE B.APPLICATION_SHORT_NAME = CP_APP_SHORT_NAME
        AND B.APPLICATION_ID = A.APPLICATION_ID
        AND A.CONCURRENT_PROGRAM_NAME = CP_CON_PROGRAM_NAME;
    CURSOR GET_AUDSID IS
      SELECT
        A.SID,
        A.SERIAL#,
        B.SPID
      FROM
        V$SESSION A,
        V$PROCESS B
      WHERE AUDSID = USERENV('SESSIONID')
        AND A.PADDR = B.ADDR;
    CURSOR CUR_GET_DBNAME IS
      SELECT
        NAME
      FROM
        V$DATABASE;
    V_ENABLE_TRACE FND_CONCURRENT_PROGRAMS.ENABLE_TRACE%TYPE;
    AUDSID NUMBER := USERENV('SESSIONID');
    SID NUMBER;
    SERIAL NUMBER;
    SPID VARCHAR2(9);
    NAME1 VARCHAR2(25);
    LN_PROGRAM_ID FND_CONCURRENT_PROGRAMS.CONCURRENT_PROGRAM_ID%TYPE;
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.MESSAGE(1275
               ,'Report Version is 120.4 Last modified date is 14/04/2007')*/NULL;
    OPEN C_ENABLE_TRACE('AR','JA_JAINARE1_XMLP_PKG');
    FETCH C_ENABLE_TRACE
     INTO V_ENABLE_TRACE,LN_PROGRAM_ID;
    CLOSE C_ENABLE_TRACE;
    IF V_ENABLE_TRACE = 'Y' THEN
      OPEN GET_AUDSID;
      FETCH GET_AUDSID
       INTO SID,SERIAL,SPID;
      CLOSE GET_AUDSID;
      OPEN CUR_GET_DBNAME;
      FETCH CUR_GET_DBNAME
       INTO NAME1;
      CLOSE CUR_GET_DBNAME;
      /*SRW.MESSAGE(1275
                 ,'TraceFile Name = ' || LOWER(NAME1) || '_ora_' || SPID || '.trc')*/NULL;
      EXECUTE IMMEDIATE
        'ALTER SESSION SET EVENTS ''10046 trace name context forever, level 4''';
    END IF;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_BALANCESFORMULA(ORDER_HEADER_ID IN NUMBER
                             ,REGISTER_ID IN NUMBER
                             ,ORDER_LINE_ID IN NUMBER
                             ,CUSTOMER_TRX_ID IN NUMBER
                             ,DELIVERY_ID IN NUMBER
                             ,TRX_NUMBER IN VARCHAR2) RETURN NUMBER IS
    CURSOR C_GET_BALANCES(CP_TRANSACTION_NAME IN JAI_OM_OE_BOND_TRXS.TRANSACTION_NAME%TYPE) IS
      SELECT
        ( NVL(TRANSACTION_AMOUNT
           ,0) + NVL(EDU_CESS_AMOUNT
           ,0) + NVL(RG23D_REGISTER_BALANCE
           ,0) + NVL(SH_CESS_AMOUNT
           ,0) ) DEBIT,
        REGISTER_BALANCE CLOSING_BAL,
        ( NVL(TRANSACTION_AMOUNT
           ,0) + NVL(EDU_CESS_AMOUNT
           ,0) + NVL(RG23D_REGISTER_BALANCE
           ,0) + NVL(REGISTER_BALANCE
           ,0) + NVL(SH_CESS_AMOUNT
           ,0) ) OPENING_BAL
      FROM
        JAI_OM_OE_BOND_TRXS
      WHERE TRANSACTION_NAME = CP_TRANSACTION_NAME
        AND ORDER_HEADER_ID = CF_BALANCESFORMULA.ORDER_HEADER_ID
        AND ORDER_FLAG = 'Y'
        AND TRANSACTION_ID = (
        SELECT
          MAX(TRANSACTION_ID)
        FROM
          JAI_OM_OE_BOND_TRXS
        WHERE TRANSACTION_NAME = CP_TRANSACTION_NAME
          AND ORDER_HEADER_ID = CF_BALANCESFORMULA.ORDER_HEADER_ID
          AND ORDER_FLAG = 'Y' );
  BEGIN
    /*SRW.MESSAGE(1275
               ,' ')*/NULL;
    /*SRW.MESSAGE(1275
               ,'### Invoice ###')*/NULL;
    /*SRW.MESSAGE(1275
               ,'1. Register_id        :' || REGISTER_ID)*/NULL;
    /*SRW.MESSAGE(1275
               ,'2. Order_header_id    :' || ORDER_HEADER_ID)*/NULL;
    /*SRW.MESSAGE(1275
               ,'3. Order_line_id      :' || ORDER_LINE_ID)*/NULL;
    /*SRW.MESSAGE(1275
               ,'4. Customer_Trx_id    :' || CUSTOMER_TRX_ID)*/NULL;
    /*SRW.MESSAGE(1275
               ,'6. delivery_id        :' || DELIVERY_ID)*/NULL;
    /*SRW.MESSAGE(1275
               ,'7. trx_number         :' || TRX_NUMBER)*/NULL;
    OPEN C_GET_BALANCES('BOND SALES');
    FETCH C_GET_BALANCES
     INTO CP_DEBIT_AMOUNT,CP_CLOSING_BAL,CP_OPENING_BAL;
    IF C_GET_BALANCES%FOUND THEN
      /*SRW.MESSAGE(1275
                 ,' ## Cursor fetched the record ##')*/NULL;
    END IF;
    CLOSE C_GET_BALANCES;
    /*SRW.MESSAGE(1275
               ,'8. Opening Balance    :' || CP_OPENING_BAL)*/NULL;
    /*SRW.MESSAGE(1275
               ,'9. Debit              :' || CP_DEBIT_AMOUNT)*/NULL;
    /*SRW.MESSAGE(1275
               ,'10.Closing Balance    :' || CP_CLOSING_BAL)*/NULL;
    RETURN NULL;
  END CF_BALANCESFORMULA;

  FUNCTION CP_CLOSING_BAL_P RETURN NUMBER IS
  BEGIN
    RETURN CP_CLOSING_BAL;
  END CP_CLOSING_BAL_P;

  FUNCTION CP_DEBIT_AMOUNT_P RETURN NUMBER IS
  BEGIN
    RETURN CP_DEBIT_AMOUNT;
  END CP_DEBIT_AMOUNT_P;

  FUNCTION CP_OPENING_BAL_P RETURN NUMBER IS
  BEGIN
    RETURN CP_OPENING_BAL;
  END CP_OPENING_BAL_P;

  FUNCTION CP_NULL_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_NULL;
  END CP_NULL_P;

  FUNCTION CP_EXCISE_CESS_AMOUNT_P RETURN NUMBER IS
  BEGIN
    RETURN CP_EXCISE_CESS_AMOUNT;
  END CP_EXCISE_CESS_AMOUNT_P;

  FUNCTION CP_EXCISE_SH_CESS_AMOUNT_P RETURN NUMBER IS
  BEGIN
    RETURN CP_EXCISE_SH_CESS_AMOUNT;
  END CP_EXCISE_SH_CESS_AMOUNT_P;

END JA_JAINARE1_XMLP_PKG;




/
