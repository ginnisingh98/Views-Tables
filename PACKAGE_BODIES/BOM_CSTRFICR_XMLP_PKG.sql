--------------------------------------------------------
--  DDL for Package Body BOM_CSTRFICR_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."BOM_CSTRFICR_XMLP_PKG" AS
/* $Header: CSTRFICRB.pls 120.0 2007/12/24 09:59:05 dwkrishn noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    cursor c1 is
    SELECT fifst.id_flex_num
    FROM fnd_id_flex_structures fifst
    WHERE fifst.application_id = 401
    AND fifst.id_flex_code = 'MSTK'
    AND fifst.enabled_flag = 'Y'
    AND fifst.freeze_flex_definition_flag = 'Y'
    ORDER BY fifst.id_flex_num;

  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    UNIQUE_ID1 := UNIQUE_ID;

    open c1;
    fetch c1 into pid_flex_num;
    close c1;

    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.MESSAGE('100'
               ,TO_CHAR(SYSDATE
                      ,'"Before report trigger started   at "Dy Mon DD HH:MI:SS YYYY'))*/NULL;
    IF P_VIEW_COST <> 1 THEN
      FND_MESSAGE.SET_NAME('null'
                          ,'null');
      /*SRW.USER_EXIT('FND MESSAGE_DISPLAY')*/NULL;
      /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END IF;
    IF P_FROM_ITEM IS NULL AND P_TO_ITEM IS NULL THEN
      P_WHERE_ITEM := '1 = 1';
    ELSE
      NULL;
    END IF;
    IF P_FROM_CAT IS NULL AND P_TO_CAT IS NULL THEN
      P_WHERE_CAT := '1 = 1';
    ELSE
      NULL;
    END IF;
    DECLARE
      L_REPORT_NAME VARCHAR2(50);
      L_QRY_COLUMN1 VARCHAR2(50);
      L_QRY_COLUMN2 VARCHAR2(50);
      L_COLUMN1_HEADING VARCHAR2(50);
      L_COLUMN2_HEADING VARCHAR2(50);
      L_FLEX_COLUMN1_HEADING VARCHAR2(50);
    BEGIN
      SELECT
        REPORT_TITLE,
        COLUMN1,
        COLUMN2,
        COLUMN1_HEADING,
        COLUMN2_HEADING
      INTO L_REPORT_NAME,L_QRY_COLUMN1,L_QRY_COLUMN2,L_COLUMN1_HEADING,L_COLUMN2_HEADING
      FROM
        CST_REPORT_TYPES
      WHERE UNIQUE_ID = UNIQUE_ID1;
      REPORT_NAME := L_REPORT_NAME;
      QRY_COLUMN1 := L_QRY_COLUMN1;
      QRY_COLUMN2 := L_QRY_COLUMN2;
      QRY_COLUMN1_HEADING := L_COLUMN1_HEADING;
      QRY_COLUMN2_HEADING := L_COLUMN2_HEADING;
      IF QRY_COLUMN1 IS NULL THEN
        IF UNIQUE_ID1 = 5 THEN
          QRY_COLUMN1 := 'CA_' || FLEX_COLUMN1;
        ELSIF UNIQUE_ID1 = 11 THEN
          QRY_COLUMN1 := 'BR_' || FLEX_COLUMN1;
        END IF;
        SELECT
          END_USER_COLUMN_NAME
        INTO L_FLEX_COLUMN1_HEADING
        FROM
          FND_DESCR_FLEX_COLUMN_USAGES FLX,
          CST_REPORT_TYPES CRT
        WHERE APPLICATION_ID = FLEXFIELD_APPLICATION_ID
          AND FLX.DESCRIPTIVE_FLEXFIELD_NAME = CRT.DESCRIPTIVE_FLEXFIELD_NAME
          AND UNIQUE_ID = UNIQUE_ID1
          AND ENABLED_FLAG = 'Y'
          AND APPLICATION_COLUMN_NAME = FLEX_COLUMN1;
        QRY_COLUMN1_HEADING := L_FLEX_COLUMN1_HEADING;
      END IF;
      IF QRY_COLUMN2 IS NULL THEN
        QRY_COLUMN2 := ''' ''';
      END IF;
    END;
    /*SRW.MESSAGE('100'
               ,TO_CHAR(SYSDATE
                      ,'"Before report trigger completed at "Dy MON DD HH:MI:SS YYYY'))*/NULL;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION DISP_CURRENCYFORMULA(CURR_CODE_SAVED IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    RETURN (REPORT_NAME || '(' || CURR_CODE_SAVED || ')');
  END DISP_CURRENCYFORMULA;

  FUNCTION ORDER_FUNC(C_FLEXPAD_ITEM IN VARCHAR2
                     ,C_FLEXPAD_CAT IN VARCHAR2) RETURN CHARACTER IS
    TEMP VARCHAR2(2000);
  BEGIN
    /*SRW.REFERENCE(C_FLEXPAD_ITEM)*/NULL;
    /*SRW.REFERENCE(C_FLEXPAD_CAT)*/NULL;
    IF REPORT_SORT_OPT = 1 THEN
      TEMP := C_FLEXPAD_ITEM || C_FLEXPAD_CAT;
    ELSE
      TEMP := C_FLEXPAD_CAT || C_FLEXPAD_ITEM;
    END IF;
    RETURN (TEMP);
  END ORDER_FUNC;

  FUNCTION C_FLEXPAD_ITEMFORMULA(C_FLEXFIELD_ITEM IN VARCHAR2
                                ,C_FLEXPAD_ITEM IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(C_FLEXFIELD_ITEM)*/NULL;
    RETURN (C_FLEXPAD_ITEM);
  END C_FLEXPAD_ITEMFORMULA;

  FUNCTION C_FLEXPAD_CATFORMULA(C_FLEXFIELD_CAT IN VARCHAR2
                               ,C_FLEXPAD_CAT IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(C_FLEXFIELD_CAT)*/NULL;
    RETURN (C_FLEXPAD_CAT);
  END C_FLEXPAD_CATFORMULA;

END BOM_CSTRFICR_XMLP_PKG;


/
