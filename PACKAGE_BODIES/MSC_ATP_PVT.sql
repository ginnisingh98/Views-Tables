--------------------------------------------------------
--  DDL for Package Body MSC_ATP_PVT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."MSC_ATP_PVT" AS
/* $Header: MSCGATPB.pls 120.39.12010000.11 2010/01/12 11:07:00 sbnaik ship $  */
G_PKG_NAME 		CONSTANT VARCHAR2(30) := 'MSC_ATP_PVT';

-- ship_rec_cal
G_CALENDAR_CONSTRAINT   VARCHAR2(1) := 'N';

 -- dsting 9/6/02
 -- internal to this package for allowing call_schedule_remote
 -- to pass the profile option MSC_ALLOCATED_ATP_WORKFLOW to Call_Schedule
 -- without changing Call_Schedule's spec
 G_ATP_WORKFLOW                VARCHAR2(1);

--  Supplier Capacity and Lead Time (SCLT) changes
--  Global internal to this package to allow ATP_Check to pass
--  the variable to ATP_Check in a recursive call for BUY items.
g_sup_cap_cum_date             DATE;

NO_MAKE_BUY_CHILDREN 	CONSTANT NUMBER := 1;
MAKE_BUY_CHILDREN 	CONSTANT NUMBER := 2;

-- This is the main procedure called for Scheduling
-- Change name to Schedule

PG_DEBUG varchar2(1) := NVL(FND_PROFILE.value('MSC_ATP_DEBUG'), 'N');

-- dsting
-- For multilevel models, the override flag for the input record is reset to null
-- after the first level.
G_LINE_OVERRIDE_FLAG varchar2(1);

-- dsting new shipping logic
-- the latest acceptable date for the set is an
--   arrival date if p_atp_table.requested_ship_date(1) is null
--   ship date otherwise
-- this is regardless of whether this is a ship set or arrival set
--
-- the LAD for a particular line is an
--   arrival date if l_atp_table.requested_ship_date(i) is null
--   ship_date otherwise
-- this is regardless of whether the set's LAD is an arrival or ship_date
--
-- the group_date for the set is an
--   arrival_date if l_arrival_count > 1
--   ship_date otherwise
--

-- For summary enhancement
G_TIME_PHASED_SET               VARCHAR2(1);

G_OFF_INSTANCE_ID       MRP_ATP_PUB.number_arr := MRP_ATP_PUB.number_arr(); --Bug 3629191
G_OFF_DEM_TRANS_ID      MRP_ATP_PUB.number_arr := MRP_ATP_PUB.number_arr(); --Bug 3629191
G_OFF_PLAN_ID           MRP_ATP_PUB.number_arr := MRP_ATP_PUB.number_arr(); --Bug 3629191

Procedure Schedule (p_atp_table     IN    MRP_ATP_PUB.ATP_Rec_Typ,
               p_instance_id        IN    NUMBER,
               p_assign_set_id      IN    NUMBER,
               p_refresh_number     IN    NUMBER,
               x_atp_table          OUT   NoCopy MRP_ATP_PUB.ATP_Rec_Typ,
               x_return_status      OUT   NoCopy VARCHAR2,
               x_msg_data           OUT   NoCopy VARCHAR2,
               x_msg_count          OUT   NoCopy NUMBER,
               x_atp_supply_demand  OUT   NOCOPY MRP_ATP_PUB.ATP_Supply_Demand_Typ,
               x_atp_period         OUT   NOCOPY MRP_ATP_PUB.ATP_Period_Typ,
               x_atp_details        OUT   NOCOPY MRP_ATP_PUB.ATP_Details_Typ
) IS

i                       PLS_INTEGER := 1;
j			PLS_INTEGER := 1;
k			PLS_INTEGER := 1;
m			PLS_INTEGER := 1;
l_sched_flag		PLS_INTEGER := 1;
l_search		PLS_INTEGER := 1;
l_temp                  NUMBER;
l_plan_id               NUMBER;
l_temp_plan_id          NUMBER; -- this is for ship set items
--Bug 1661545, array to store old plan id for undoing unscheduling in case of failure.
l_old_plan_id           MRP_ATP_PUB.number_arr := MRP_ATP_PUB.number_arr(); -- this is for ship set items
l_process_item_id	NUMBER;
l_process_org_id	NUMBER;
l_ship_count            NUMBER;
l_arrival_count         NUMBER;
l_level			PLS_INTEGER := 0;
l_scenario_id		PLS_INTEGER := 1;
l_group_date		DATE ;
l_schedule_flag		NUMBER;
l_requested_item_id	NUMBER;
l_total_qty             NUMBER;
l_return_status		VARCHAR2(10);
l_done_scenario2        VARCHAR2(1);
l_quantity_uom		VARCHAR2(3);
l_quantity_ordered	NUMBER;
l_overall_status	PLS_INTEGER;
l_ship_set_status       PLS_INTEGER;
l_arrival_set_status    PLS_INTEGER;
l_process_arrival_set   VARCHAR2(30) := '@@@';
l_sources               MRP_ATP_PVT.Atp_Source_Typ;
l_atp_rec		MRP_ATP_PVT.AtpRec;
l_future_atp_rec	MRP_ATP_PVT.AtpRec;
l_atp_table             MRP_ATP_PUB.ATP_Rec_Typ;
l_atp_period            MRP_ATP_PUB.ATP_Period_Typ;
l_atp_supply_demand     MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_future_atp_period            MRP_ATP_PUB.ATP_Period_Typ;
l_future_atp_supply_demand     MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_atp_details           MRP_ATP_PUB.ATP_Details_Typ;
l_temp_atp_table             MRP_ATP_PUB.ATP_Rec_Typ;
l_temp_atp_period            MRP_ATP_PUB.ATP_Period_Typ;
l_temp_atp_supply_demand     MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_temp_atp_details           MRP_ATP_PUB.ATP_Details_Typ;
l_temp_arr_atp_table             MRP_ATP_PUB.ATP_Rec_Typ;
l_temp_arr_atp_period            MRP_ATP_PUB.ATP_Period_Typ;
l_temp_arr_atp_supply_demand     MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_temp_arr_atp_details           MRP_ATP_PUB.ATP_Details_Typ;
l_curr_atp_period            MRP_ATP_PUB.ATP_Period_Typ;
l_curr_atp_supply_demand     MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_complete_scatp	VARCHAR2(1) := 'N';
l_multi_scenario	NUMBER;
l_null_atp_period            MRP_ATP_PUB.ATP_Period_Typ;
l_null_atp_supply_demand     MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_null_atp_details           MRP_ATP_PUB.ATP_Details_Typ;
l_set_element_success  PLS_INTEGER;
l_oe_demand_flag          VARCHAR2(1) := 'N';
my_sqlcode		NUMBER;
temp			NUMBER;
l_stmt                  PLS_INTEGER;
l_assign_set_id		NUMBER;
l_temp_assign_set_id         NUMBER;
l_conversion_rate       NUMBER;
l_atp_flag                      VARCHAR2(1);
l_atp_comp_flag                 VARCHAR2(1);
l_so_tbl_status         PLS_INTEGER;
l_arr_no_date           VARCHAR2(1) := 'Y';
l_default_atp_rule_id           NUMBER;
l_calendar_code                 VARCHAR2(14);
l_calendar_exception_set_id     NUMBER;
l_default_demand_class          VARCHAR2(34);
l_sd_qty                        NUMBER;
l_inv_item_id 			NUMBER;
--l_ship_date                     DATE; -- ship_rec_cal changes
l_fst_src_pegging_ids	        MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();
l_date_higher_src		varchar2(1) := 'Y';
l_peg_count			NUMBER;
l_dblink                        VARCHAR2(128);
l_sys_next_date                 DATE;
l_sys_next_omc_date             DATE;   -- Bug 3371817
l_request_org_id                number;
l_sourcing_org_id               number;
l_count 			number;
l_line_id_count                 NUMBER;  -- keeps track of line identifiers.
l_demand_pegging_id 		number;
L_DEMAND_CLASS_FLAG             number;

-- 1873918: PDS-ODS fix
l_inv_ctp                       number;
l_allocated_atp                 varchar2(1);
l_allocation_method             number;
l_summary_flag                  number;
-- Bug 2085071: Assignment Set
lv_assign_set_id                NUMBER;
--2152184
l_pf_item_id			MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();
--l_old_org_id                    MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();

---subst
l_item_substitute_rec           MSC_ATP_SUBST.Item_Info_Rec_Typ;
l_null_item_sub_rec             MSC_ATP_SUBST.Item_Info_Rec_Typ;
l_item_attribute_rec            MSC_ATP_PVT.item_attribute_rec;
l_pre_pro_lt                    number;
l_post_pro_lt                   number;
l_fixed_lt                      number;
l_variable_lt                   number;
L_INVENTORY_ITEM_ID             number;
L_ITEM_NAME                     varchar2(250);
l_create_supply_on_orig_item    number;
l_substitution_type             number;
L_DELIVERY_LEAD_TIME            number;
L_REQUESTED_SHIP_DATE           date;
L_FROM_LOCATION_ID              number;
L_SHIP_METHOD                   varchar2(50);
l_demand_ids                    MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();
l_old_pf_item_id                number;
l_inv_item_ids                  MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();

l_org_code                      VARCHAR2(7);
l_counter                       NUMBER;  -- defined for Bug 2368426

-- Error handling insert
l_tmp_pegging_id                NUMBER;
/* Modularize Item and Org Info */
-- Local item record already provided
l_org_attribute_rec             MSC_ATP_PVT.org_attribute_rec;
-- Used for bug 2392456
l_plan_info_rec                 MSC_ATP_PVT.plan_info_rec;
l_bkwd_pass_atf_date_qty         NUMBER; --bug3397904

--bug 2384224
l_del_demand_ids             MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();
l_del_inv_item_ids           MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();
l_del_plan_ids               MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();
l_del_identifiers            MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();
l_del_demand_source_type     MRP_ATP_PUB.number_arr:=MRP_ATP_PUB.number_arr();--cmro
l_delete_demand_flag         PLS_INTEGER;

--diag_atp
l_pegging_ids           MRP_ATP_PUB.number_arr := MRP_ATP_PUB.number_arr();
l_highest_rev		NUMBER;

-- ATP Override rajjain begin
l_latest_acceptable_date	DATE;
l_override_flag			VARCHAR2(1) := 'N';
-- ATP Override rajjain end

l_null_item_info_rec          item_attribute_rec;
l_item_info_rec               item_attribute_rec;
l_null_org_info_rec           org_attribute_rec;
l_null_plan_info_rec          plan_info_rec;

-- rajjain 01/30/2003 Bug 2777661
l_sd_date                     DATE;

-- dsting setproc
l_line_status                 NUMBER;
l_set_status                  NUMBER;

-- bug 2795053-reopen (ssurendr)
l_dmd_satisfied_date          DATE;

-- 2902265
l_req_atp_date                  mrp_atp_pub.date_arr := mrp_atp_pub.date_arr();
l_req_date_qty                  mrp_atp_pub.number_arr := mrp_atp_pub.number_arr();
l_demand_class_atp_flag         mrp_atp_pub.number_arr := mrp_atp_pub.number_arr();

--s_cto_rearch
l_item_sourcing_info_rec       MSC_ATP_CTO.item_sourcing_info_rec;

l_null_item_sourcing_info_rec  MSC_ATP_CTO.item_sourcing_info_rec;
l_plan_found_for_match         number;
--e_cto_rearch

-- time_phased_atp
l_pf_atp                VARCHAR2(1) := 'N';
l_time_phased_atp       VARCHAR2(1) := 'N';
l_atf_date              DATE;
l_time_phased_set       VARCHAR2(1) := 'N';
l_atf_dates             MRP_ATP_PUB.date_arr := MRP_ATP_PUB.date_arr();
l_match_item_family_id  NUMBER;

-- For summary enhancement
l_copy_demand_ids               mrp_atp_pub.number_arr := mrp_atp_pub.number_arr();
l_del_copy_demand_ids           mrp_atp_pub.number_arr := mrp_atp_pub.number_arr();
l_del_copy_demand_plan_ids      mrp_atp_pub.number_arr := mrp_atp_pub.number_arr();


-- CTO ODR and Simplified Pegging
l_atp_peg_items                   MRP_ATP_PUB.Number_Arr ;
l_atp_peg_demands                 MRP_ATP_PUB.Number_Arr ;
l_atp_peg_supplies                MRP_ATP_PUB.Number_Arr ;
l_atp_peg_res_reqs                MRP_ATP_PUB.Number_Arr ;
l_demand_instance_id              MRP_ATP_PUB.Number_Arr ; --Bug 3629191
l_supply_instance_id              MRP_ATP_PUB.Number_Arr ; --Bug 3629191
l_res_instance_id                 MRP_ATP_PUB.Number_Arr ; --Bug 3629191
l_del_atp_peg_items               MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr();
l_del_atp_peg_demands             MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr();
l_del_atp_peg_supplies            MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr();
l_del_atp_peg_res_reqs            MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr();
l_atp_peg_demands_plan_ids        MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr(); --Bug 3629191
l_atp_peg_supplies_plan_ids       MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr(); --Bug 3629191
l_atp_peg_res_reqs_plan_ids       MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr(); --Bug 3629191
l_off_demand_instance_id          MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr(); --Bug 3629191
l_off_supply_instance_id          MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr(); --Bug 3629191
l_off_res_instance_id             MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr(); --Bug 3629191
-- END CTO ODR and Simplified Pegging
--plan by request date enhancment
l_original_req_arrival_date    DATE;
l_req_arr_date                 mrp_atp_pub.date_arr := mrp_atp_pub.date_arr();
-- ship_rec_cal changes
l_shipping_cal_code		VARCHAR2(14);
l_receiving_cal_code		VARCHAR2(14);
l_manufacturing_cal_code	VARCHAR2(14);
l_intransit_cal_code		VARCHAR2(14);
l_new_ship_date                 DATE;
l_new_dock_date                 DATE;
l_group_arrival_date            DATE;
l_order_date_type               NUMBER;
l_ship_arrival_date_rec 	MSC_ATP_PVT.ship_arrival_date_rec_typ;
l_encoded_text                  varchar2(4000);
l_msg_app                       varchar2(50);
l_msg_name                      varchar2(30);
l_error_code                    INTEGER;

-- Bug 3226083
l_atp_insert_rec                MRP_ATP_PVT.AtpRec;
l_mem_dest_id                   NUMBER;
l_pf_dest_id                    NUMBER;

l_sysdate_orc                   DATE; --bug3439591
l_trunc_sysdate                 DATE := TRUNC(sysdate); --bug3439591

--bug 3751114
l_peg_record_type               NUMBER := 3;
l_constraint_path_flag          NUMBER := 1;
l_delete_atp_rec                MSC_ATP_PVT.DELETE_ATP_REC; --3720018

--2814895
l_partner_type                  NUMBER := 2;

l_sysdate_orc_new               DATE; --bug4291375
l_past_due_ship_date            NUMBER; --bug4291375
L_MOVE_PAST_DUE_TO_SYSDATE 			varchar2(1);  -- Bug 5584634/5618929

--optional_fw start
l_last_date                     DATE;         --Used in binary search algo
l_first_date                    DATE;         --Used in binary search algo
l_low_seqnum                    NUMBER;       --Used in binary search algo
l_high_seqnum                   NUMBER;       --Used in binary search algo
l_middle_seqnum                 NUMBER;       --Used in binary search algo
l_last_search                   NUMBER;       --Used in binary search algo
l_last_successful_date          DATE;         --Used in binary search algo
l_atp_rule_name                 VARCHAR2(80); --Used for infinite time fence date procedure

l_request_date_qty              NUMBER;       --User Entered Values
l_quan_ordered                  NUMBER;       --User Entered Values
l_number_of_iterations	        NUMBER;       --Used in binary search algo
l_second_good_run               NUMBER;       --Used in binary search algo
l_loop_count			NUMBER;       --Used in binary search algo
l_g_inv_ctp                     NUMBER;       --Used in binary search algo
l_last_success_atp_rec          MRP_ATP_PVT.AtpRec;

--Pegging ids used for deletion and hide/un-hide.
l_atp_peg_id                    NUMBER;
l_ctp_parent_peg_id             MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr();
l_steal_atp_peg_id              MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr();
l_forward_atp                   VARCHAR2(1); --5221865
--optional_fw end
BEGIN

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('**********IN Schedule Procedure************');
    END IF;
    --initialize ATP_SET_FLAG TO NO --4460369
    MSC_ATP_PVT.G_ATP_ITEM_PRESENT_IN_SET := 'N';
    -- initialize API return status to success
    x_return_status := FND_API.G_RET_STS_SUCCESS;

    MSC_ATP_PVT.G_RES_CONSUME := NVL(FND_PROFILE.value('MSC_ATP_RES_CONSUME'), 'Y');
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: ' || 'G_RES_CONSUME = '||MSC_ATP_PVT.G_RES_CONSUME);
    END IF;

    MSC_ATP_PVT.G_PARTNER_ID := NULL;
    MSC_ATP_PVT.G_PARTNER_SITE_ID := NULL;

    MSC_ATP_PVT.G_INSTANCE_ID := p_instance_id;

    IF MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT <> 0 THEN
        MSC_ATP_PVT.G_PEGGING_FOR_SET.DELETE;
        MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.DELETE;
        MSC_ATP_PVT.G_REQ_ATP_DATE.DELETE;
        MSC_ATP_PVT.G_REQ_DATE_QTY.DELETE;
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Do I come here 15');
         END IF;

    END IF;

    -- 2902265
    IF l_fst_src_pegging_ids.COUNT <> 0 THEN
        l_fst_src_pegging_ids.delete;
        l_DEMAND_CLASS_ATP_FLAG.DELETE;
        l_REQ_ATP_DATE.DELETE;
        l_REQ_DATE_QTY.DELETE;
        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Do I come here 15.0');
        END IF;
    END IF;

    --- BUG: 1777496
    --- WE dont want to do Allocated ATP in case of ODS
    --- Allocattion flag is set to 'NO' if it is ODS
    IF  MSC_ATP_PVT.G_INV_CTP = 5 THEN
	MSC_ATP_PVT.G_ALLOCATED_ATP := 'N';
	MSC_ATP_PVT.G_ORIG_ALLOC_ATP := 'N'; --4925767
    END IF;
    -- we either have a line here or a set (arrival set or ship set)
    -- this l_ship_count store the # of line for the ship set.

    -- if l_ship_count > 1 : ship set exists
    -- if l_arrival_count > 1: arrival set exists

    l_stmt := 10;

    -- default the plan_id to -1 and adjust it later.

    l_plan_id := -1;

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: ' || 'count :='|| p_atp_table.attribute_02.count);
    END IF;
    ---diag_atp: Enable diagnostic ATP only if calling module tells us to do so and for ATP inquiry only
    ---Also Diag ATP is supported for PDS.
    IF ((p_atp_table.Action(1) = ATPQUERY) AND (NVL(p_atp_table.attribute_02(1), 2) = 1)
                                           AND (MSC_ATP_PVT.G_INV_CTP = 4)) THEN

       MSC_ATP_PVT.G_DIAGNOSTIC_ATP := 1;

    ELSE

       MSC_ATP_PVT.G_DIAGNOSTIC_ATP := 2;

    END IF;
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: ' || 'G_DIAGNOSTIC_ATP := ' || MSC_ATP_PVT.G_DIAGNOSTIC_ATP);
    END IF;

    /************ Bug 2085071 Assignment set changes ************/
    IF NVL(p_atp_table.Calling_Module(1), -1) = 724 THEN
          IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Schedule: ' || '724');
          END IF;
          lv_assign_set_id := p_assign_set_id;     -- Use new local variable
    ELSE
      -- convert the assignment set id from mrp to msc
      IF PG_DEBUG in ('Y', 'C') THEN
         msc_sch_wb.atp_debug('Schedule: ' || ' not 724');
      END IF;

      -- Need to conver assignment set only if it is NOT NULL. If NULL, do nothing.
      IF p_assign_set_id IS NOT NULL THEN

         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: p_atp_table.calling_module: ' || p_atp_table.calling_module(1));
            msc_sch_wb.atp_debug('Schedule: p_atp_table.action: ' || p_atp_table.action(1));
         END IF;

         --4567833 , in case of ATP inquiry from source with Org_id as NULL,
         -- ATP UI is passing assignment set id of destination so no need to convert it.
         IF (p_atp_table.calling_module(1) is NULL AND p_atp_table.action(1) = 100) THEN

            lv_assign_set_id :=  p_assign_set_id;

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'source side ATP inquiry with Org_id as NULL');
            END IF;

         ELSE   --4567833 end
            begin
              select assignment_set_id
              into   lv_assign_set_id                  -- Use new local variable
              from   msc_assignment_sets
              where  sr_instance_id = p_instance_id
              and    sr_assignment_set_id = p_assign_set_id;

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'source side ATP inquiry with Org_id as not NULL');
            END IF;

            exception
               when no_data_found then
             -- Bug 1763731, need not do this check for the time being
        /*
             x_atp_table := p_atp_table;
             x_atp_table.error_code(1) := NO_ASSIGNMENT_SET;
             RAISE FND_API.G_EXC_ERROR ;
        */
               lv_assign_set_id := NULL;             -- Use new local variable
            end;

         END IF;

      ELSE  --IF p_assign_set_id IS NOT NULL THEN
        -- savirine added the following code so that ATP uses
        -- "MSC: ATP Assignment Set" value when the
        -- "MRP: ATP Assignment Set" value is NULL for
        -- the ATP Requests originating from the Source ERP Instance.
	-- This is done to support region level sourcing as
        -- only assignment set on APS can be used.

        -- lv_assign_set_id := NULL;              -- User new local variable
        lv_assign_set_id := FND_PROFILE.value('MSC_ATP_ASSIGN_SET');
      END IF;

      IF PG_DEBUG in ('Y', 'C') THEN
         msc_sch_wb.atp_debug('Schedule: ' || 'after converting the assign set id');
      END IF;
    END IF;
    l_assign_set_id  := lv_assign_set_id; -- Set the original local variable
    /************ Bug 2085071 Assignment set changes ************/

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
       msc_sch_wb.atp_debug('Schedule: ' || 'l_plan_id = '||l_plan_id);
       msc_sch_wb.atp_debug('Schedule: ' || 'l_assign_set_id = '||l_assign_set_id);
    END IF;

    IF p_atp_table.Ship_Set_Name(1) IS NOT NULL THEN
      l_ship_count := p_atp_table.Action.COUNT;
      l_arrival_count := 1;
    ELSE
      l_ship_count := 1;
      l_arrival_count := p_atp_table.Action.COUNT;
    END IF;

    -- since we may have a set of output (record of tables) for one single
    -- line for complete scatp, we won't work on x_atp_table directly.
    -- instead, we use l_atp_table to store this information and added this
    -- to x_atp_table later

    /* Modularize Item and Org Info */
    -- Initialize global variables.
    G_ORG_INFO_REC        :=      l_org_attribute_rec;
    G_ITEM_INFO_REC       :=      l_item_attribute_rec;
    /* Modularize Item and Org Info */

    l_stmt := 20;
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);

       -- make sure we get the right record of tables
       i := p_atp_table.Action.FIRST;
       WHILE i IS NOT NULL LOOP
          msc_sch_wb.atp_debug('Schedule: ' || 'Inventory_Item_Id:' || to_char(p_atp_table.Inventory_Item_Id(i))
	  || 'Source_Organization_Id:' || to_char(p_atp_table.Source_Organization_Id(i))
          || 'Quantity_Ordered:' || to_char(p_atp_table.Quantity_Ordered(i))
          || ' old_source organzation id : ' || p_atp_table.old_Source_Organization_Id(i));
          i := p_atp_table.Action.NEXT(i);
       END LOOP;
    END IF;

    -- if the action is demandmodify, make sure we delete the original
    -- demand information before we redemand.
    -- so we won't double count the demand
    -- we won't do any validation here due to ato impacts.

    l_stmt := 30;
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
       msc_sch_wb.atp_debug('Schedule: ' || 'G_SUMMARY_FLAG := ' || MSC_ATP_PVT.G_SUMMARY_FLAG);
       msc_sch_wb.atp_debug('Schedule: ' || 'G_DATABASE_LINK := ' || MSC_ATP_PVT.G_DATABASE_LINK);
       msc_sch_wb.atp_debug('Schedule: ' || 'G_ALLOCATED_ATP := ' || MSC_ATP_PVT.G_ALLOCATED_ATP);
       msc_sch_wb.atp_debug('Schedule: ' || 'G_HP_DEMAND_BUCKETING_PREF := ' ||
                                                        MSC_ATP_PVT.G_HP_DEMAND_BUCKETING_PREF);
    END IF;
    IF ((MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y') AND (MSC_ATP_PVT.G_DATABASE_LINK IS NULL) AND
                                             (MSC_ATP_PVT.G_ALLOCATED_ATP = 'N')) THEN
        --IF coming from planning server then we want to disable Summary mode for
        -- instance which is distributed. If it is non distributed then G_DATABASE_LINK will
        -- be null at this point as it is populated in CALL_SCHEDULE_REMOTE
       --Bug3765793 adding trim functions to remove spaces from db_link
       SELECT ltrim(rtrim(M2A_DBLINK)), summary_flag
       INTO   MSC_ATP_PVT.G_DATABASE_LINK, l_summary_flag
       FROM   msc_apps_instances
       WHERE  instance_id = p_instance_id;

       ---bug 2301524:
       --- 2301524: Summary mode is not supported for backlog workbench.
       IF PG_DEBUG in ('Y', 'C') THEN
          msc_sch_wb.atp_debug('Schedule: ' || 'calling_module := ' ||  p_atp_table.calling_module(1));
          msc_sch_wb.atp_debug('Schedule: ' || ' l_summary_flag := ' || l_summary_flag);
          msc_sch_wb.atp_debug('Schedule: ' || ' G_DATABASE_LINK := ' || NVL(MSC_ATP_PVT.G_DATABASE_LINK,'NULL'));
       END IF;

       -- After summary enhancement summary ATP is supported for BWB as well - except for ODS case
       IF NVL(p_atp_table.calling_module(1), -99) = -1 AND NVL(l_summary_flag, -1) <> 200 AND MSC_ATP_PVT.G_INV_CTP = 5 THEN
             --- if backlog workbench is used then set the summary falg to 200
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'Site is using backlog workbench, update tables and turnoff summary for ODS case');
             END IF;

             update  msc_apps_instances
             set     summary_flag = 200;

             MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';
       ELSIF NVL(l_summary_flag, -1) = 200 AND MSC_ATP_PVT.G_INV_CTP = 5 THEN
             --site is using backlog workbench, turn off the summary flag - only for ODS case - summary enhancement
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'Site is using backlog workbench, turnoff summary');
             END IF;
             MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';
       END IF;

    END IF;

    ----  After summary enhancement summary will be supported for distributed cases as well - except for ODS case
    IF MSC_ATP_PVT.G_DATABASE_LINK IS NOT NULL AND MSC_ATP_PVT.G_INV_CTP = 5 THEN
         MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Distributed scenario + ODS, turning summary flag off');
         END IF;
    END IF;
    -- specify l_atp_table here so that for undemand we have a
    -- place to store the error code.
    -- this will be reset when we actually go into atp/demand

    l_atp_table := p_atp_table;

    /* bug3940999 Code moved to call_schedule_remote.
    -- Code added for bug 2368426 to match source destination INV_CTP start

    IF MSC_ATP_PVT.G_INV_CTP_SOURCE <> -1 THEN

      IF MSC_ATP_PVT.G_INV_CTP_SOURCE <> MSC_ATP_PVT.G_INV_CTP THEN

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'Source INV_CTP ' || MSC_ATP_PVT.G_INV_CTP_SOURCE);
           msc_sch_wb.atp_debug('Schedule: ' || 'Destination INV_CTP ' || MSC_ATP_PVT.G_INV_CTP);
           msc_sch_wb.atp_debug('Schedule: ' || 'Source INV_CTP not in sync with destination ');
        END IF;
        -- apply the error code in l_atp_table

        FOR l_counter IN 1..l_atp_table.error_code.COUNT LOOP
          IF l_counter=1 THEN
            l_atp_table.error_code(l_counter) := MSC_ATP_PVT.INV_CTP_NOT_IN_SYNC;
          ELSE
            l_atp_table.error_code(l_counter) := MSC_ATP_PVT.GROUPEL_ERROR;
          END IF;
        END LOOP;
        RAISE NO_DATA_FOUND;

      ELSE
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'Source INV_CTP is in sync with destination ');
        END IF;
      END IF;

    END IF;

    -- Code added for bug 2368426 to match source destination INV_CTP ends
    */


    ---subst demand
    --- after substitution we might have multiple demands for same order line.
    --- Therefore we remember the demand id and inv id for the demand that we are manupulating
    l_demand_ids.Extend(p_atp_table.action.count);
    l_inv_item_ids.extend(p_atp_table.action.count);
     l_req_arr_date.extend(p_atp_table.action.count);--for plan by request date
    -- bug 2152184
    IF MSC_ATP_PVT.G_INV_CTP = 4 THEN
       -- we store the pf id and old org id. l_pf_item_id will contain either PF item id if we are doing
       --- product family for the item or the inventory_item_id itself for regular item
       ---we store these ids because of change in PF atp approach to do PF ATP on PF item level
       -- Under new approach, for PF ATP, demand is stored on PF item level instead on member item level
       -- Therefore to delete the demand, we need to find out the plan for PF

       --l_old_org_id.extend(p_atp_table.action.count);
       l_pf_item_id.extend(p_atp_table.action.count);

       For m in 1..p_atp_table.action.count LOOP
           IF  p_atp_table.ato_model_line_id(m) IS NOT NULL THEN
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: p_atp_table.Identifier(m)' ||
	                                       p_atp_table.Identifier(m));
                  msc_sch_wb.atp_debug('Schedule: ' ||
	                          'p_atp_table.Config_item_line_id(m)' ||
	                           p_atp_table.Config_item_line_id(m));
               END IF;
           END IF;
           IF  p_atp_table.old_source_organization_id(m) IS NOT NULL THEN
              l_pf_item_id(m) :=  MSC_ATP_PF.Get_PF_Atp_Item_Id(p_instance_id,
                                                          l_plan_id,
                                                           p_atp_table.inventory_item_id(m),
                                                           p_atp_table.old_source_organization_id(m));
              --l_old_org_id(m) := l_atp_table.old_source_organization_id(m);
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: ' || 'Inventory item_id := ' || l_atp_table.inventory_item_id(m));
                 msc_sch_wb.atp_debug('Schedule: ' || 'PF item id := ' || l_pf_item_id(m));
              END IF;
           END IF;
       END LOOP;
    END IF;

    -- remove data from table if records are already exists
    -- ngoel 6/14, this is removed as OM shall be calling with
    -- action as schedule while it needs to call as re-schedule.

    IF (p_atp_table.Action(1) = DEMANDMODIFY OR
        p_atp_table.Action(1) = DEMANDADD OR
        p_atp_table.Action(1) = DMDRSVADD) THEN --3720018

        --3720018, the code to call delete row is moved to call_delete_row.
        -- Call_delete_row will take care of calling delete_row for the line/set.
        -- The input to this procedure is p_atp_table.
        -- l_delete_atp_rec will contain array to be used to call undo_delete_row.
        -- l_delete_atp_rec also contains offset records.
        MSC_ATP_DB_UTILS.call_delete_row (
                         p_instance_id,
                         p_atp_table,
                         p_refresh_number,
                         l_delete_atp_rec,
                         l_return_status);

        IF PG_DEBUG in ('Y', 'C') THEN --3720018
            msc_sch_wb.atp_debug('Schedule: l_return_status: ' || l_return_status);
        END IF;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Schedule: ' || 'Error in Call_delete_row');
                        END IF;
                        x_return_status := FND_API.G_RET_STS_ERROR;
                        RAISE FND_API.G_EXC_ERROR;
        END IF;

       IF (l_delete_atp_rec.error_code(1) = MSC_ATP_PVT.TRY_ATP_LATER) OR
          (l_delete_atp_rec.error_code(1) = MSC_ATP_PVT.SUMM_CONC_PROG_RUNNING) THEN
           l_atp_table.error_code(1) := l_delete_atp_rec.error_code(1);
           RAISE NO_DATA_FOUND;
       END IF;
    END IF;
    IF PG_DEBUG in ('Y', 'C') THEN --3720018
       msc_sch_wb.atp_debug('Schedule:l_delete_atp_rec.off_demand_instance_id.count ' || l_delete_atp_rec.off_demand_instance_id.count);
       msc_sch_wb.atp_debug('Schedule:l_delete_atp_rec.off_supply_instance_id.count ' || l_delete_atp_rec.off_supply_instance_id.count);
       msc_sch_wb.atp_debug('Schedule:l_delete_atp_rec.off_res_instance_id.count ' || l_delete_atp_rec.off_res_instance_id.count);
       msc_sch_wb.atp_debug('Schedule: ' || 'l_old_plan_id.count = '||l_old_plan_id.count);
    END IF;

    --3720018, error_code, attribute_07(plan_name) and old_plan_id are populated back to local variables.
    l_atp_table.error_code   :=   l_delete_atp_rec.error_code;  --3720018
    l_atp_table.attribute_07 :=   l_delete_atp_rec.attribute_07; --3720018
    l_old_plan_id := l_delete_atp_rec.old_plan_id; --3720018


    l_stmt := 40;
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
    END IF;

    -- bug 1382994: if action is demand, quantity should not be 0.
    -- otherwise we also treat it as undemand.

    IF (((p_atp_table.Action(1) = ATPQUERY) or
        (p_atp_table.Action(1) = DEMANDADD or
          p_atp_table.Action(1) = DEMANDMODIFY)) AND
           p_atp_table.Quantity_Ordered(1) <> 0) THEN -- 3720018, changed so that (p_atp_table.Quantity_Ordered(1) <> 0)
                                                      -- condition is imposed always


        l_sched_flag := BACKWARD_SCHEDULING;

   --     SAVEPOINT start_atp;

        -- get the profile option value
        -- this profile option will determine what to deal with the output
        -- will explain later.

        l_stmt := 50;
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
        END IF;

        -- cchen: disable complete scatp for now
        -- l_complete_scatp := NVL(FND_PROFILE.value('MRP_COMPLETE_SCATP'), 'N');
        -- l_complete_scatp := 'Y';
        -- msc_sch_wb.atp_debug('l_complete_scatp = '||l_complete_scatp);

        -- we may need to loop through every supply source until we succeed
        -- if action is atp, depending on profile option mrp_complete_scatp
        -- we do things differently:
        -- Action: ATP, mrp_complete_scatp = 'Y'
        --   return the info in the preferred warehouse. if we cannot
        --   satisfy the request from the preferred warehouse,  give information
        --   from every warehouse and don't consider lastest_acceptable_date
        -- (Action: ATP, mrp_complete_scatp = 'N') or
        -- (Action : DemandADD/Demandmodify) :
        --   return just one warehouse which satisfies the request,  or
        --   if no warehouse satisfies the request, return preferred warehouse.

        -- k is the index of arrival set.  if no arrival set, it will always be 1.

        k := 1;

        l_stmt := 60;
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
        END IF;

        IF ((p_atp_table.action(k) <> ATPQUERY) OR
             (p_atp_table.action(k) = ATPQUERY AND l_complete_scatp = 'N')) THEN
            -- case 2
            l_multi_scenario := 0;
        ELSE
            -- case 1
            l_multi_scenario := 1;
        END IF;

        -- loop through the items in the arrival set.
        l_stmt := 70;
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
        END IF;


        -- 1873918: PDS-ODS fix
        -- introduce 2 variables to hold the global variable value.
        -- we need to know the original values and then reset it each time.

        l_inv_ctp := MSC_ATP_PVT.G_INV_CTP;
        l_allocated_atp := MSC_ATP_PVT.G_ALLOCATED_ATP;
        l_allocation_method := NVL(MSC_ATP_PVT.G_ALLOCATION_METHOD, 2);
        --5221865 If ODS ATP then set initial value as No else read whatever is set.
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: G_INV_CTP = '||G_INV_CTP);
           msc_sch_wb.atp_debug('Schedule: G_FORWARD_ATP = '||G_FORWARD_ATP);
        END IF;
        IF MSC_ATP_PVT.G_INV_CTP = 4 THEN
           l_forward_atp := MSC_ATP_PVT.G_FORWARD_ATP;
        ELSE
           l_forward_atp := 'N';
        END IF;

        --  savirine, Sep 05, 2001:  call get_regions to get regions info which will be used for ATP request.

msc_sch_wb.atp_debug('p_atp_table.delivery_lead_time: ' || p_atp_table.delivery_lead_time(1));

        IF (p_atp_table.Source_Organization_id(1) IS NULL or p_atp_table.ship_method(1) IS NULL or
           p_atp_table.delivery_lead_time(1) IS NULL) and (p_atp_table.Calling_Module(1) = 724)
	   and (NVL(p_atp_table.Customer_Site_Id(1), -1) <> NVL(G_SR_PARTNER_SITE_ID, -1)) THEN

           MSC_SATP_FUNC.Get_Regions (
                               p_customer_site_id       => p_atp_table.Customer_Site_Id(1),
                               p_calling_module         => p_atp_table.Calling_Module(1),
                                -- i.e. Source (ERP) or Destination (724)
                               p_instance_id            => p_instance_id,
                               p_session_id             => MSC_ATP_PVT.G_SESSION_ID,
                               p_dblink                 => NULL,
                               x_return_status          => l_return_status );

           -- ngoel 9/27/2001 : Assigned values to G_SR_PARTNER_SITE_ID GLOBAL Variable
           -- bug 2108880. Move the line outside of IF stmt
           --G_SR_PARTNER_SITE_ID := p_atp_table.customer_site_id(1);

        END IF;
        G_SR_PARTNER_SITE_ID := p_atp_table.customer_site_id(1);
        --2814895, Global varaibles created for atp_sources called from atp_check
        G_SR_PARTY_SITE_ID := p_atp_table.party_site_id(1);
        G_SR_CUSTOMER_COUNTRY := p_atp_table.customer_country(1);

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'Get_Regions, return status : ' || l_return_status);
        END IF;

        IF l_return_status = FND_API.G_RET_STS_ERROR THEN
           -- something wrong so we want to rollback;
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'expected error in Call to Get_Regions');
           END IF;
        ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR then
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'something wrong in Call to Get_Regions');
           END IF;
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR ;
        END IF;

        -- dsting setproc
        MSC_ATP_PROC.Initialize_Set_Processing(p_atp_table);
        l_set_status := null;

        WHILE (k IS NOT NULL) LOOP

         -- for bug 1259416: we need to reset the plan_id and assign set
         -- default the plan_id to -1 and adjust it later.

         -- 1873918: PDS-ODS fix
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Resetting G_INV_CTP and G_ALLOCATED_ATP' );
         END IF;
         MSC_ATP_PVT.G_INV_CTP := l_inv_ctp;
         -- ATP4drp re-set using original profile value.
         MSC_ATP_PVT.G_ALLOCATED_ATP := MSC_ATP_PVT.G_ORIG_ALLOC_ATP;
         -- End ATP4drp
         MSC_ATP_PVT.G_ALLOCATION_METHOD := l_allocation_method;
         --5221865 Set original value for each line
         MSC_ATP_PVT.G_FORWARD_ATP := l_forward_atp;
         l_plan_id := -1;
         IF NVL(p_atp_table.Calling_Module(1), -1) = 724 THEN
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || '724');
           END IF;
           l_assign_set_id := p_assign_set_id;
         ELSE
           -- convert the assignment set id from mrp to msc
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || ' not 724');
           END IF;
           /************ Bug 2085071 Assignment set changes ************/
           /* Remove duplicate query
           //begin
           //  select assignment_set_id
           //  into   l_assign_set_id
           //  from   msc_assignment_sets
           //  where  sr_instance_id = p_instance_id
           //  and    sr_assignment_set_id = p_assign_set_id;

           //exception
           //  when no_data_found then
           //   l_assign_set_id := NULL;
           //end;
           */
           l_assign_set_id := lv_assign_set_id; -- Use new variable instead
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'l_assign_set_id = '||l_assign_set_id);
           END IF;
           /************ Bug 2085071 Assignment set changes ************/
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'after converting the assign set id');
           END IF;

         END IF;

         -- for each item in an arrival set, reset the variables
         l_overall_status := -1;
         l_requested_item_id := p_atp_table.Inventory_Item_Id(k);
         l_process_org_id := p_atp_table.Source_Organization_Id(k);
         l_request_org_id := p_atp_table.organization_id(k);

         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'requesting org id := ' || l_request_org_id);
         END IF;
         -- for bug 1052654
         -- l_atp_table := p_atp_table;

         -- 2902129 move here
         -- l_atp_table will be the processing record of tables that
         -- contains the requests and output.
         -- For an arrival set, l_atp_table only contains info for the
         -- process item so the length of each table in l_atp_table should
         -- be one.
         -- For an ship set, l_atp_table contains info for all items in
         -- that ship set, so the length of each table will be the same as the
         -- length from the table in p_atp_table.
         -- Note, since currently this request is either for a line (which
         -- we kind of treat it as a ship set with one item only), an
         -- arrival set, or a ship set but not a combination of arrival
         -- set and ship set.

         IF l_arrival_count > 1 THEN
             l_stmt := 150;
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
             END IF;

             -- arrival set exists
             l_atp_table := x_atp_table;  -- this is to null out l_atp_table;
             -- get the info for this process item and put into l_atp_table
             MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table, k,
                                  l_atp_table, l_return_status );
         ELSE
             l_stmt := 160;
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
             END IF;

             l_atp_table := p_atp_table;

         END IF;

         --IF MSC_ATP_PVT.G_INV_CTP = 5 THEN
         -- Bug 4091487 Checking so_tbl_status in PDS ATP also.
           -- if this is ods atp, we need to make sure planning is not doing
           -- the complete refresh . populate error code if we are in the
           -- the complete refresh.

           SELECT so_tbl_status,
                  NVL(summary_flag, 1),
                  apps_ver
           INTO   l_so_tbl_status,
                  l_summary_flag,
                  MSC_ATP_PVT.G_APPS_VER          -- 2300767
           FROM   msc_apps_instances
           WHERE  instance_id = p_instance_id;

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'l_so_tbl_status = '||l_so_tbl_status);
              msc_sch_wb.atp_debug('Schedule: ' || 'l_summary_flag = ' || l_summary_flag);
              msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_APPS_VER = ' || MSC_ATP_PVT.G_APPS_VER);
           END IF;  -- 2300767


           IF NVL(l_so_tbl_status, 1) = 2 THEN
             -- not available for atp
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'ATP not available');
             END IF;

             l_atp_table.error_code(1) := TRY_ATP_LATER;
             RAISE NO_DATA_FOUND;

             ELSIF l_summary_flag = 1 THEN
                ---- summary table is not ready. Switch to detail tables
		IF PG_DEBUG in ('Y', 'C') THEN
		   msc_sch_wb.atp_debug('Schedule: ' || ' summary table is not ready. Switch to detail tables');
		END IF;
                MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';

             ELSIF l_summary_flag = 2 THEN

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'Summary Concurrent program is running');
                END IF;
                l_atp_table.error_code(1) := SUMM_CONC_PROG_RUNNING;
                RAISE NO_DATA_FOUND;
             END IF;

         --END IF;

         -- get the atp source information :
         -- if specified, use it. otherwise, get it from sourcing rules

         l_stmt := 80;
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
         END IF;


         IF p_atp_table.Source_Organization_Id(k) is null  THEN
            -- get the source org or vendor site

            l_stmt := 90;

/*
            IF (MSC_ATP_PVT.G_ASSIGN_SET_ID IS NULL) THEN
                FND_MESSAGE.set_name('MRP','MRP_NO_ATP_ASSIGN_SET');
                --  need to add error message
                l_atp_table.Error_Code(k) := ATP_NO_ASSIGN_SET;
                RAISE NO_DATA_FOUND;
            END IF;
*/
            -- if this is actually an ship set, then get the common
            -- warehouses for the whole ship set instead of this item.

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
               msc_sch_wb.atp_debug('Schedule: ' || 'Before Atp_Sources');
            END IF;

            l_item_sourcing_info_rec.sr_inventory_item_id := l_atp_table.inventory_item_id;
            l_item_sourcing_info_rec.line_id := l_atp_table.identifier;
            l_item_sourcing_info_rec.ato_line_id := l_atp_table.ato_model_line_id;
            l_item_sourcing_info_rec.match_item_id := l_atp_table.match_item_id;

            --2814895
            IF (p_atp_table.customer_site_id(k) is not NULL ) THEN
               l_partner_type := 2;
            ELSIF ( p_atp_table.party_site_id(k) is not NULL) THEN
               l_partner_type := 4;
            ELSIF (p_atp_table.customer_country(k) is not NULL) THEN
               l_partner_type := 5;
            END IF;

            IF l_ship_count > 1 THEN

              l_stmt := 100;
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
              END IF;


              MSC_ATP_PROC.Atp_Sources(p_instance_id,
                                    l_plan_id,
                                    l_requested_item_id,
                                    p_atp_table.Organization_Id(k),
                                    p_atp_table.Customer_Id(k),
                                    p_atp_table.Customer_Site_Id(k),
                                    l_assign_set_id,
                                    --s_cto_rearch
                                    l_item_sourcing_info_rec,
				    --p_atp_table.inventory_item_id,
                                    MSC_ATP_PVT.G_SESSION_ID,
                                    l_sources,
                                    l_return_status,
                                    l_partner_type, --2814895
                                    p_atp_table.party_site_id(k), --2814895
                                    p_atp_table.identifier(k));  --2814895
            ELSE

              l_stmt := 110;
    	      IF PG_DEBUG in ('Y', 'C') THEN
    	         msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
    	      END IF;

              MSC_ATP_PROC.Atp_Sources(p_instance_id,
                                    l_plan_id,
                                    l_requested_item_id,
                                    p_atp_table.Organization_Id(k),
                                    p_atp_table.Customer_Id(k),
                                    p_atp_table.Customer_Site_Id(k),
                                    l_assign_set_id,
                                    --s_cto_rearch
                                    l_item_sourcing_info_rec,
                                    --MRP_ATP_PUB.number_arr(NULL),
                                    MSC_ATP_PVT.G_SESSION_ID,
                                    l_sources,
                                    l_return_status,
                                    l_partner_type, --2814895
                                    p_atp_table.party_site_id(k), --2814895
                                    p_atp_table.identifier(k));  --2814895
            END IF;

            l_stmt := 120;
    	    IF PG_DEBUG in ('Y', 'C') THEN
    	       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
               msc_sch_wb.atp_debug('Schedule: ' || 'After Atp_Sources');
               msc_sch_wb.atp_debug('Schedule: ' || 'l_sources.source_type.count = '||
               to_char(l_sources.source_type.count));
            END IF;

            -- check the return status
            IF l_return_status <> FND_API.G_RET_STS_SUCCESS OR
                l_sources.source_type.count = 0  THEN

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'atp source fails');
                END IF;
                x_return_status := FND_API.G_RET_STS_ERROR;

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_table.Customer_Id.COUNT :='||l_atp_table.Customer_Id.COUNT);
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_table.Error_Code.COUNT :='||l_atp_table.Error_Code.COUNT);
                END IF;
                --4091487 In case no records in msc_item_id_lid
                --raise seperate error item not collected in case item not found in

                IF l_return_status = MSC_ATP_PVT.G_ITEM_ID_NULL THEN
                   l_atp_table.error_code(k) := TRY_ATP_LATER;
                ELSIF MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID IS NOT NULL or l_return_status = MSC_ATP_PVT.G_ITEM_NOT_COLL THEN
                     FOR l_count in 1..l_atp_table.error_code.count LOOP
                          IF l_atp_table.inventory_item_id(l_count) = MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID THEN
                              l_atp_table.error_code(l_count) := ATP_ITEM_NOT_COLLECTED;
                          END IF;
                     END LOOP;
                     --- set the variable back to null
                     MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID := null;
                ELSE

                     l_atp_table.Error_Code(k):= ATP_NO_SOURCES;
                END IF;
                RAISE NO_DATA_FOUND;
            END IF;

         ELSE
            -- we know the org. just assign it to l_sources.
            -- assume it is a transfer as well

            l_stmt := 130;
    	    IF PG_DEBUG in ('Y', 'C') THEN
    	       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
               msc_sch_wb.atp_debug('G_MODEL_IS_PRESENT_IN_SET := ' || MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET);
    	    END IF;

            --s_cto_rearch
            IF NVL(MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET, 2) = 1 THEN

               MSC_ATP_CTO.Extend_Sources_Rec(l_sources);

               --L_atp_table contains either then whole ship set or
               --it contains a particular line for arrival set with index K.

               l_sources.organization_id(1) := l_process_org_id;
               l_sources.instance_id(1) := p_instance_id;

               --load data in temp table if line > 1
               IF l_atp_table.inventory_item_id.count > 1 THEN
                  DELETE MSC_SHIP_SET_TEMP;
                  FORALL l_count in 1..p_atp_table.inventory_item_id.count
                           INSERT INTO MSC_SHIP_SET_TEMP(inventory_item_id,
                                                         line_id)
                                                         VALUES
                                                         (p_atp_table.inventory_item_id(l_count),
                                                          p_atp_table.identifier(l_count));
                  IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Rows inserted in MSC_SHIP_SET_TEMP := ' || SQL%ROWCOUNT);
                  END IF;
               END IF;



               MSC_ATP_CTO.Validate_CTO_Sources(l_sources,
                                                l_atp_table.identifier,
                                                p_instance_id,
                                                MSC_ATP_PVT.G_SESSION_ID,
                                                l_return_status);

               IF l_return_status = MSC_ATP_PVT.CTO_OSS_ERROR THEN
                   --warehouse entered is not a valid warehouse for one of the models
                   l_atp_table.Error_Code(k):= MSC_ATP_PVT.INVALID_OSS_WAREHOUSE;
                   RAISE NO_DATA_FOUND;
               END IF;

            ELSE
               l_sources.Organization_Id:= MRP_ATP_PUB.number_arr(l_process_org_id);
               l_sources.Rank := MRP_ATP_PUB.number_arr(1);
               l_sources.Source_Type := MRP_ATP_PUB.number_arr(1);
               l_sources.Supplier_Id := MRP_ATP_PUB.number_arr(-1);
               l_sources.Supplier_Site_Id := MRP_ATP_PUB.number_arr(-1);
               l_sources.Preferred := MRP_ATP_PUB.number_arr(1);
            END IF;
            --e_cto_rearch
         END IF;

         l_stmt := 140;
    	 IF PG_DEBUG in ('Y', 'C') THEN
    	    msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
    	 END IF;

         -- go over each sources: j is the index for sources (warehouses)
         j := 1;

         /* 2902129 problem occurs if error is raised before we get here
          * so moved this chunk up before exception can be raised
         IF l_arrival_count > 1 THEN
             l_stmt := 150;
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
             END IF;

             -- arrival set exists
             l_atp_table := x_atp_table;  -- this is to null out l_atp_table;
             -- get the info for this process item and put into l_atp_table
             MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table, k,
                                  l_atp_table, l_return_status );
         ELSE
             l_stmt := 160;
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
             END IF;

             l_atp_table := p_atp_table;

         END IF;
         */

         l_stmt := 170;
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: Stmt = ' ||l_stmt || ' : '||j || 'status : '|| l_overall_status);
         END IF;

         -- 2902265 do sane var initialization
         l_date_higher_src := 'N';
         l_arr_no_date := 'Y';

         WHILE (j IS NOT NULL) AND (l_overall_status <> ALLSUCCESS)  LOOP

          -- j is the index for sources
          ---- bug 1819638:  Get the next work day for sysdate
          IF (l_sources.Organization_Id(j) = -1) or (l_sources.Organization_Id(j) IS NULL) THEN
                 l_sourcing_org_id := l_request_org_id;
          ELSE
                 l_sourcing_org_id := l_sources.Organization_Id(j);
          END IF;
          --4386906
           l_ship_method := p_atp_table.ship_method(k);
           l_delivery_lead_time := p_atp_table.delivery_lead_time(k);
          --4386906
          IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Schedule: ' || 'l_sourcing_org_id :=' || l_sourcing_org_id);
             msc_sch_wb.atp_debug('Schedule: ' || 'p_instance_id := ' || p_instance_id);
             msc_sch_wb.atp_debug('Schedule: ' || 'l_ship_method := ' || l_ship_method); --4386906
             msc_sch_wb.atp_debug('Schedule: ' || 'l_delivery_lead_tim := ' || l_delivery_lead_time); --4386906
          END IF;

	  /* ship_rec_cal
	  -- ngoel 9/25/2001, wrapped since this function raises an exception which needs to be handled.
	  BEGIN
              l_sys_next_date := MSC_CALENDAR.NEXT_WORK_DAY(l_sourcing_org_id,
                                                        p_instance_id,
                                                        1,
                                                        sysdate);
	  EXCEPTION
	      WHEN others THEN
		   null;
	  END;

          IF l_sys_next_date IS NULL THEN
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'Sysdate not found in Calendar');
               END IF;
               l_atp_table.error_code(1) := NO_MATCHING_CAL_DATE;
               RAISE NO_DATA_FOUND;
          END IF;

          l_stmt := 180;
          IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Schedule: ' || 'l_sys_next_date = ' || l_sys_next_date);
             msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
          END IF;*/

          -- initialize the group date in case it is a ship set
          -- Bug 2259824
	  l_group_date := TRUNC(sysdate);--4460369 + MSC_ATP_PVT.G_END_OF_DAY;
	  IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Schedule: 2259824 l_group_date = '||
		to_char(l_group_date, 'DD-MON-YYYY HH24:MI:SS'));
          END IF;

          -- initialize the # of element success in a set.
          -- we will use this to decide if the whole set is successful or not.
          l_set_element_success := 0;

          -- dsting setproc
          -- 2902129
--          if l_ship_count > 1 then
             MSC_ATP_PROC.Initialize_Set_Processing(l_atp_table);
             l_set_status := null;
--          end if;

          -- i is the index for the record of tables in l_atp_table
          i := 1;
          WHILE (i IS NOT NULL)  LOOP

            l_stmt := 190;

            -- time_phased_atp - Reset variables
            l_time_phased_atp := 'N';
            l_pf_atp := 'N';
            l_atf_date := NULL;
            l_past_due_ship_date := 2; --bug4291375 resetting variable to no past due date
             --4386906
            l_atp_table.ship_method(i):=l_ship_method ;
            l_atp_table.delivery_lead_time(i) :=l_delivery_lead_time;
            --4386906
            -- 1873918: PDS-ODS fix
            IF PG_DEBUG in ('Y', 'C') THEN
    	       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
               msc_sch_wb.atp_debug('Schedule: ' || 'Resetting G_INV_CTP and G_ALLOCATED_ATP' );
               msc_sch_wb.atp_debug('Schedule: Reinitialize global org/item/plan recs');
            END IF;
            MSC_ATP_PVT.G_INV_CTP := l_inv_ctp;
            -- ATP4drp re-set using original profile value
            MSC_ATP_PVT.G_ALLOCATED_ATP := MSC_ATP_PVT.G_ORIG_ALLOC_ATP;
            -- End ATP4drp
            MSC_ATP_PVT.G_ALLOCATION_METHOD := l_allocation_method;
            --5221865 Set original value for each line
            MSC_ATP_PVT.G_FORWARD_ATP := l_forward_atp;
	    -- 2741997
	    MSC_ATP_PVT.G_PLAN_INFO_REC := l_null_plan_info_rec;
	    MSC_ATP_PVT.G_ITEM_INFO_REC := l_null_item_info_rec;
	    MSC_ATP_PVT.G_ORG_INFO_REC :=  l_null_org_info_rec;

            --diag_atp: Reset the allocation rule name varibale as it may get reset.
            MSC_ATP_PVT.G_ALLOCATION_RULE_NAME := null;
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'G_INV_CTP '||G_INV_CTP|| ' G_ALLOCATED_ATP '||G_ALLOCATED_ATP);
            END IF;

            -- ship_rec_cal
            -- MSC_ATP_PVT.G_CALENDAR_CONSTRAINT := 'N';
            -- Bug3593394 - No need to reset it here. If contraint is not there then this will be explicitly set to 'N'

            -- assign l_process_item_id.
            -- this is for product family atp.  when we do
            -- product family atp, make sure l_process_item_id is
            -- the product_family_item_id, and l_requested_item_id
            -- is the product fmily member.

            -- 1072816
            -- default the plan_id to -1 and adjust it later.
            -- since we know the org already, we don't need
            -- to default the assignment set

            l_plan_id := -1;
            --bug 2301524
            -- After summary enhancement Summary will be disabled only for ODS case
            IF  (
                    (
                        MSC_ATP_PVT.G_DATABASE_LINK IS NOT NULL -- (Distributed case or BWB)
                        OR l_summary_flag = 200                 -- and ODS
                        OR p_atp_table.calling_module(1) = -1
                    )
                    AND MSC_ATP_PVT.G_INV_CTP = 5
                )
                OR
                (
                    MSC_ATP_PVT.G_INV_CTP = 4                   -- PDS and
                    AND MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'       -- user defined allocated ATP
                    AND MSC_ATP_PVT.G_ALLOCATION_METHOD <> 1
                ) THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'Distributed environment+BWB+ODS or rule-based-allocated-ATP+PDS, ' ||
                                         'always do ATP against details table');
                    msc_sch_wb.atp_debug('Schedule: ' || 'G_DATABASE_LINK := ' || MSC_ATP_PVT.G_DATABASE_LINK);
                    msc_sch_wb.atp_debug('Schedule: ' || 'G_ALLOCATED_ATP := ' || MSC_ATP_PVT.G_ALLOCATED_ATP);
                    msc_sch_wb.atp_debug('Schedule: ' || 'G_ALLOCATION_METHOD := ' || MSC_ATP_PVT.G_ALLOCATION_METHOD);
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_summary_flag := ' || l_summary_flag);
                END IF;
                MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';
            ELSIF MSC_ATP_PVT.G_INV_CTP = 4 THEN
               --- we re-read this summary profile option because it might get changed with plan
               MSC_ATP_PVT.G_SUMMARY_FLAG := NVL(FND_PROFILE.VALUE('MSC_ENABLE_ATP_SUMMARY'), 'N');
            END IF;
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_SUMMARY_FLAG := ' || MSC_ATP_PVT.G_SUMMARY_FLAG);
            END IF;

            MSC_ATP_PVT.G_ORDER_LINE_ID := l_atp_table.Identifier(i);
            MSC_ATP_PVT.G_ASSEMBLY_LINE_ID := l_atp_table.Identifier(i);
            MSC_ATP_PVT.G_COMP_LINE_ID := l_atp_table.Identifier(i);
            MSC_ATP_PVT.G_DEMAND_PEGGING_ID := null;
            MSC_ATP_PVT.G_FIND_FUTURE_DATE := 'N';

            -- krajan : 2408902 - populate global variable (for use with CTO items)
            MSC_ATP_PVT.G_ATP_DEMAND_CLASS := l_atp_table.Demand_class(i);
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'Setting global Demand_Class variable to : '|| MSC_ATP_PVT.G_ATP_DEMAND_CLASS );
            END IF;

	    -- 9/24/2001, ngoel added to identify if current line is a MATO line, initializing here.
            MSC_ATP_PVT.G_CTO_LINE := 'N';

            l_stmt := 180;

            --6014992
            l_requested_item_id :=  nvl(l_atp_table.request_item_id(i), l_atp_table.inventory_item_id(i));
            -- l_process_org_id := l_atp_table.Source_Organization_Id(i);
            l_process_org_id := l_sources.Organization_Id(j);

            -- here we first to see if the item in ods is atpable or not.
            -- if not atpable, don't bother to look for plan_id

            -- set the variable to null before calling get_atp_flag
            MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID := null;

            /* Modularize Item and Org Info */
            -- Get item information into the local variable
            -- and assign it to the global.
            --s_cto_rearch
            l_item_attribute_rec.parent_pegging_id := null;
            l_item_attribute_rec.parent_bom_item_type := 4;
            l_item_attribute_rec.parent_comp_flag := null;
            l_item_attribute_rec.parent_repl_ord_flag := 'N';
            --e_cto_rearch
            MSC_ATP_PROC.get_item_attributes(p_instance_id,
                                         l_plan_id,
                                         l_requested_item_id,
                                         l_process_org_id,
                                         l_item_attribute_rec);
            G_ITEM_INFO_REC := l_item_attribute_rec;
            l_atp_flag  := G_ITEM_INFO_REC.atp_flag;
            l_atp_comp_flag := G_ITEM_INFO_REC.atp_comp_flag;
            /* Modularize Item and Org Info */
            /*l_atp_flag := MSC_ATP_FUNC.get_atp_flag(p_instance_id,
                                       l_plan_id,
                                       l_requested_item_id,
                                       l_process_org_id);
             Modularize Item and Org Info */

            -- Bug 1878093, if item not collected, but was ATPable on the source. If YES,
            -- raise error as in PDS plan won't be available and ATP can't be done in ODS as well.

			-- Need to check for atp_components_flag as well and fail if either of them were not 'N' on source.

            IF MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID IS NOT NULL  AND
               (NVL(l_atp_table.attribute_06(i), 'N') <> 'N' OR NVL(l_atp_table.atp_components_flag(i), 'N') <> 'N') THEN

               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'Item not found : ' || MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID);
               END IF;

               FOR l_count in 1..l_atp_table.error_code.count LOOP
                   IF l_atp_table.inventory_item_id(l_count) = MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID THEN
                      l_atp_table.error_code(l_count) := ATP_ITEM_NOT_COLLECTED;
                   END IF;
               END LOOP;

               -- set variable as null and raise exception, dont proceed for item/ ship set.
               MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID := null;

               RAISE NO_DATA_FOUND;

            END IF;

            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'ship_method: ' || l_atp_table.ship_method(i));
            END IF;
            -- dsting dlt
            IF nvl(l_atp_table.delivery_lead_time(i), -1) = -1 THEN
                -- Bug 3449812 - Base DLT on internal_org_id if available
                -- Bug 3515520, don't use org in case customer/site is populated.
                -- IF l_atp_table.internal_org_id(i) IS NOT NULL THEN

                IF (l_atp_table.internal_org_id(i) IS NOT NULL) OR
                   (l_atp_table.organization_id(i) IS NOT NULL AND l_atp_table.customer_id(i) is NULL AND
                    l_atp_table.customer_site_id(1) IS NULL AND
                    l_atp_table.party_site_id(1) IS NULL AND --2814895
                    l_atp_table.customer_country(1) IS NULL) THEN  --2814895
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'Inside Org code');
                    END IF;
                    MSC_ATP_PROC.get_delivery_lead_time(
                                l_sourcing_org_id,
                                NULL,		-- from location id
                                p_instance_id,
                                -- l_atp_table.internal_org_id(i), -- Bug 3515520
                                NVL(l_atp_table.internal_org_id(i), l_atp_table.organization_id(i)), -- Bug 3515520
                                NULL,           -- to location id
                                p_instance_id,
                                NULL, -- customer id
                                NULL, -- customer site id
                                NULL, -- supplier id
                                NULL, -- supplier site id
                                MSC_ATP_PVT.G_SESSION_ID, -- ???
                                NULL, -- partner site id
                                l_atp_table.ship_method(i),
                                l_atp_table.delivery_lead_time(i),
                                NULL,
                                NULL,
                                NULL
                                );

                ELSIF (l_atp_table.customer_site_id(1) IS NOT NULL) THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'Inside customer_site_id code');
                END IF;
                    MSC_ATP_PROC.get_delivery_lead_time(
                                l_sourcing_org_id,
                                NULL,		-- from location id
                                p_instance_id,
                                --l_atp_table.organization_id(i), -- Bug 3515520
                                NULL,           -- Bug 3515520
                                NULL,           -- to location id
                                p_instance_id,
                                l_atp_table.customer_id(i),
                                l_atp_table.customer_site_id(1),
                                NULL,
                                NULL,
                                MSC_ATP_PVT.G_SESSION_ID, -- ???
                                l_atp_table.customer_site_id(i),
                                l_atp_table.ship_method(i),
                                l_atp_table.delivery_lead_time(i),
                                NULL,
                                NULL,
                                NULL
                                );

                ELSIF ( l_atp_table.party_site_id(1) IS NOT NULL ) THEN --2814895
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'Inside party_site_id code');
                END IF;
                    MSC_ATP_PROC.get_delivery_lead_time(
                                l_sourcing_org_id,
                                NULL,		-- from location id
                                p_instance_id,
                                --l_atp_table.organization_id(i), -- Bug 3515520
                                NULL,           -- Bug 3515520
                                NULL, --l_atp_table.location_id(1), --NULL, --2814895, to location id
                                p_instance_id,
                                NULL, --l_atp_table.customer_id(i), 2814895
                                NULL, --l_atp_table.customer_site_id(1), 2814895
                                NULL,
                                NULL,
                                MSC_ATP_PVT.G_SESSION_ID, -- ???
                                NULL, --l_atp_table.customer_site_id(i),
                                l_atp_table.ship_method(i),
                                l_atp_table.delivery_lead_time(i),
                                4, --2814895, partner_type for party_site_id
                                l_atp_table.party_site_id(1), --2814895
                                NULL
                                );

                ELSIF ( l_atp_table.customer_country(1) IS NOT NULL) THEN  --2814895
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'Inside address parameter code');
                END IF;
                    MSC_ATP_PROC.get_delivery_lead_time(
                                l_sourcing_org_id,
                                NULL,		-- from location id
                                p_instance_id,
                                --l_atp_table.organization_id(i), -- Bug 3515520
                                NULL,           -- Bug 3515520
                                NULL,           -- to location id
                                p_instance_id,
                                NULL, --l_atp_table.customer_id(i), 2814895
                                NULL, --l_atp_table.customer_site_id(1), 2814895
                                NULL,
                                NULL,
                                MSC_ATP_PVT.G_SESSION_ID, -- ???
                                NULL, --l_atp_table.customer_site_id(i), 2814895
                                l_atp_table.ship_method(i),
                                l_atp_table.delivery_lead_time(i),
                                5, --2814895 , partner_type for address parameters
                                NULL, --2814895
                                l_atp_table.identifier(i));  --2814895
                END IF;
            END IF;

            l_atp_table.delivery_lead_time(i) := CEIL(l_atp_table.delivery_lead_time(i));
            l_delivery_lead_time := l_atp_table.delivery_lead_time(i);
            l_ship_method := l_atp_table.ship_method(i);

            -- moved this here for ship_rec_cal
            IF l_atp_table.customer_id(i) IS NOT NULL THEN
                -- bug3593394 - Run this SQL only if customer has changed.
                IF (i=1) OR (l_atp_table.customer_id(i) <> NVL(l_atp_table.customer_id(i-1),-1)) THEN
                    BEGIN
                        SELECT TP_ID
                        INTO   MSC_ATP_PVT.G_PARTNER_ID
                        FROM   msc_tp_id_lid tp
                        WHERE  tp.SR_TP_ID = l_atp_table.customer_id(i)
                        AND    tp.SR_INSTANCE_ID = p_instance_id
                        AND    tp.PARTNER_TYPE = 2;
                    EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            MSC_ATP_PVT.G_PARTNER_ID := NULL;
                    END ;
                END IF;
            ELSE
                -- bug3593394 - reset to NULL
                MSC_ATP_PVT.G_PARTNER_ID := NULL;
            END IF;

            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'G_PARTNER_ID = '||MSC_ATP_PVT.G_PARTNER_ID);
            END IF;

            IF l_atp_table.customer_site_id(i) IS NOT NULL THEN
                -- bug3593394 - Run this SQL only if customer site has changed.
                IF (i=1) OR (l_atp_table.customer_site_id(i) <> NVL(l_atp_table.customer_site_id(i-1),-1)) THEN
                    BEGIN
                        SELECT TP_SITE_ID
                        INTO   MSC_ATP_PVT.G_PARTNER_SITE_ID
                        FROM   msc_tp_site_id_lid tpsite
                        WHERE  tpsite.SR_TP_SITE_ID = l_atp_table.customer_site_id(i)
                        AND    tpsite.SR_INSTANCE_ID =  p_instance_id
                        AND    tpsite.PARTNER_TYPE = 2;
                    EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            MSC_ATP_PVT.G_PARTNER_SITE_ID := NULL;
                    END ;
                END IF;
            ELSE
                -- bug3593394 - reset to NULL
                MSC_ATP_PVT.G_PARTNER_SITE_ID := NULL;
            END IF;

            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'G_PARTNER_SITE_ID = '||MSC_ATP_PVT.G_PARTNER_SITE_ID);
            END IF;

            -- ship_rec_cal changes begin
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('**************** Calendar Codes ******************************');
               msc_sch_wb.atp_debug('*  ___________________Input_____________________');
               msc_sch_wb.atp_debug('*  ');
               msc_sch_wb.atp_debug('*  Source Cust ID          : '|| l_atp_table.customer_id(i) );
               msc_sch_wb.atp_debug('*  Partner ID              : '|| MSC_ATP_PVT.G_PARTNER_ID );
               msc_sch_wb.atp_debug('*  Partner Site ID         : '|| MSC_ATP_PVT.G_PARTNER_SITE_ID );
               msc_sch_wb.atp_debug('*  Ship Method             : '|| l_atp_table.ship_method(i) );
               msc_sch_wb.atp_debug('*  Org ID                  : '|| l_atp_table.organization_id(i) );
               msc_sch_wb.atp_debug('*  Internal Org ID         : '|| l_atp_table.internal_org_id(i) );
               msc_sch_wb.atp_debug('*  Source Org ID           : '|| l_sourcing_org_id );
            END IF;
            -- Bug 3449812 - get receiving cal from ISO's destination org if available
            -- Bug 3515520, don't use org in case customer/site is populated.
            -- IF NVL(l_atp_table.internal_org_id(i), l_atp_table.organization_id(i))  IS NOT NULL THEN

            -- Bug 3647208 -- Move the check to individual "IF"s
            -- IF MSC_ATP_PVT.G_USE_SHIP_REC_CAL='Y' THEN

            IF (l_atp_table.internal_org_id(i) IS NOT NULL) OR
                (l_atp_table.organization_id(i) IS NOT NULL AND l_atp_table.customer_id(i) is NULL AND
                MSC_ATP_PVT.G_PARTNER_SITE_ID IS NULL) THEN
                -- Bug3593394 - Call this proc only if parameters have changed
                IF (i=1) OR (l_atp_table.internal_org_id(i)<>l_atp_table.internal_org_id(i-1))
                    OR (l_atp_table.organization_id(i)<>l_atp_table.organization_id(i-1))
                    OR (l_atp_table.ship_method(i)<>l_atp_table.ship_method(i-1)) THEN

                    l_receiving_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                     p_instance_id,
                                                     null,
                                                     null,
                                                     null,
                                                     null,
                                                     null,
                                                     NVL(l_atp_table.internal_org_id(i), l_atp_table.organization_id(i)),
                                                     l_atp_table.ship_method(i),
                                                     MSC_CALENDAR.ORC);
                ELSE
                    l_receiving_cal_code := l_atp_table.receiving_cal_code(i-1);
                    IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: ' || 'Calendar parameters have not changed for ORC');
                    END IF;
                END IF;
            ELSIF l_atp_table.customer_id(i) IS NOT NULL AND MSC_ATP_PVT.G_USE_SHIP_REC_CAL='Y' THEN
                -- Bug 3647208 - Call CRC only if using ship/rec cal
                -- receiving party is customer
                -- Bug3593394 - Call this proc only if parameters have changed
                IF (i=1) OR (NVL(l_atp_table.customer_id(i),-1)<>NVL(l_atp_table.customer_id(i-1),-1))
                    OR (NVL(l_atp_table.customer_site_id(i),-1)<>NVL(l_atp_table.customer_site_id(i-1),-1))
                    OR (l_atp_table.ship_method(i)<>l_atp_table.ship_method(i-1)) THEN

                    l_receiving_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                     p_instance_id,
                                                     null,
                                                     null,
                                                     MSC_ATP_PVT.G_PARTNER_ID,
                                                     MSC_ATP_PVT.G_PARTNER_SITE_ID,
                                                     2,
                                                     null,
                                                     l_atp_table.ship_method(i),
                                                     MSC_CALENDAR.CRC);
                ELSE
                    l_receiving_cal_code := l_atp_table.receiving_cal_code(i-1);
                    IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: ' || 'Calendar parameters have not changed for CRC');
                    END IF;
                END IF;
            ELSE
                -- Neither org nor customer provided
                l_receiving_cal_code := MSC_CALENDAR.FOC;
            END IF;

            IF MSC_ATP_PVT.G_USE_SHIP_REC_CAL='Y' THEN
                -- Bug 3647208 -- Move the check to individual "IF"s
                IF (i=1) OR (l_atp_table.ship_method(i)<>l_atp_table.ship_method(i-1)) THEN
                    -- Bug3593394 - Call this proc only if parameters have changed
                    l_intransit_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                             p_instance_id,
                                             null,
                                             null,
                                             null,
                                             null,
                                             4,
                                             null,
                                             l_atp_table.ship_method(i),
                                             MSC_CALENDAR.VIC);
                ELSE
                    l_intransit_cal_code := l_atp_table.intransit_cal_code(i-1);
                    IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: ' || 'Calendar parameters have not changed for VIC');
                    END IF;
                END IF;
            ELSE
                l_intransit_cal_code := MSC_CALENDAR.FOC;
            END IF;


            -- Bug 3647208 -- Moved OSC and VIC to different IF blocks
            IF (i=1) OR (l_atp_table.ship_method(i)<>l_atp_table.ship_method(i-1)) THEN
                -- Bug3593394 - Call this proc only for the first line in the ship set unless ship method has changed
                --              No check on source org as "i" will be greater than one only for ship set.
                l_shipping_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                             p_instance_id,
                                             null,
                                             null,
                                             null,
                                             null,
                                             null,
                                             l_sourcing_org_id,
                                             l_atp_table.ship_method(i),
                                             MSC_CALENDAR.OSC);
            ELSE
                l_shipping_cal_code := l_atp_table.shipping_cal_code(i-1);
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'Calendar parameters have not changed for OSC');
                END IF;
            END IF;


            IF (i=1) THEN
                -- Bug3593394 - Call this proc only for the first line in the ship set.
                --              "i" will be greater than one only for ship set.
                -- ATP4drp Call to obtain get_org_defaults.
                /*
                l_manufacturing_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                             p_instance_id,
                                             null,
                                             null,
                                             null,
                                             null,
                                             null,
                                             l_sourcing_org_id,
                                             null,
                                             MSC_CALENDAR.OMC);
               */
               -- Bug 2783787 fix involving  removing the call to obtain org defaults
               -- restored here
               MSC_ATP_PROC.get_global_org_info(p_instance_id,
                                                l_process_org_id);
               l_manufacturing_cal_code := MSC_ATP_PVT.G_ORG_INFO_REC.cal_code;
               -- End ATP4drp
            ELSE
                l_manufacturing_cal_code := l_atp_table.manufacturing_cal_code(i-1);
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'Calendar parameters have not changed for OMC');
                END IF;
            END IF;

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('  ');
               msc_sch_wb.atp_debug('*  ___________________Output____________________');
               msc_sch_wb.atp_debug('*  ');
               msc_sch_wb.atp_debug('*  Receiving calendar code         : ' || l_receiving_cal_code);
               msc_sch_wb.atp_debug('*  Intransit calendar code         : ' || l_intransit_cal_code);
               msc_sch_wb.atp_debug('*  Shipping calendar code          : ' || l_shipping_cal_code);
               msc_sch_wb.atp_debug('*  Manufacturing calendar code     : ' || l_manufacturing_cal_code);
               msc_sch_wb.atp_debug('**************************************************************');
            END IF;

            -- Add the calendar codes to l_atp_table
            l_atp_table.receiving_cal_code(i) := l_receiving_cal_code;
            l_atp_table.intransit_cal_code(i) := l_intransit_cal_code;
            l_atp_table.shipping_cal_code(i) := l_shipping_cal_code;
            l_atp_table.manufacturing_cal_code(i) := l_manufacturing_cal_code;

	    /* Moved l_sys_next_date calculation code here */
	    BEGIN
                -- Bug 3371817 - sys_next_date should be as per OSC
                --               maintaining l_sys_next_omc_date for PTF assignment.
                -- Bug3593394 - Call this proc only if calendar has changed
                IF (i=1) OR (l_shipping_cal_code<>l_atp_table.shipping_cal_code(i-1)) THEN
                    l_sys_next_date := MSC_CALENDAR.NEXT_WORK_DAY(
                                                        l_shipping_cal_code,
                                                        p_instance_id,
                                                        l_trunc_sysdate);
                END IF;

                IF l_manufacturing_cal_code=l_shipping_cal_code THEN
                    l_sys_next_omc_date := l_sys_next_date;
                ELSIF (i=1) OR (l_manufacturing_cal_code<>l_atp_table.manufacturing_cal_code(i-1)) THEN
                    -- Bug3593394 - Call this proc only if calendar has changed
                    l_sys_next_omc_date := MSC_CALENDAR.NEXT_WORK_DAY(
                                                        l_manufacturing_cal_code,
                                                        p_instance_id,
                                                        l_trunc_sysdate);
	        END IF;

	        --bug3439591
	        -- Bug3593394 - Call this proc only if calendar has changed
	        IF l_receiving_cal_code=l_shipping_cal_code THEN
	            l_sysdate_orc := l_sys_next_date;
	        ELSIF l_receiving_cal_code=l_manufacturing_cal_code THEN
	            l_sysdate_orc := l_sys_next_omc_date;
	        ELSIF (i=1) OR (l_receiving_cal_code<>l_atp_table.receiving_cal_code(i-1)) THEN
	            l_sysdate_orc := MSC_CALENDAR.NEXT_WORK_DAY(
                                                        l_receiving_cal_code,
                                                        p_instance_id,
                                                        l_trunc_sysdate);
                END IF;
	    EXCEPTION
                WHEN others THEN
                   null;
	    END;

            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'l_sys_next_date = ' || l_sys_next_date);
                msc_sch_wb.atp_debug('Schedule: ' || 'l_sysdate_orc = ' || l_sysdate_orc); --bug3439591
                msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
            END IF;

            IF l_sys_next_date IS NULL THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'Sysdate not found in Calendar');
                END IF;
                l_atp_table.error_code(1) := NO_MATCHING_CAL_DATE;
                RAISE NO_DATA_FOUND;
            END IF;
	    -- ship_rec_cal changes end

            --- 2178544: We assign it to null so that this parameter set for last item is not used for current item.
            -- Bug 3512996 - For top level G_PTF_DATE should be as per OSC
            -- MSC_ATP_PVT.G_PTF_DATE := l_sys_next_omc_date;
            MSC_ATP_PVT.G_PTF_DATE := l_sys_next_date;

            --- bug 2152184: Moved this call here so that PF item could be determined based on ODS data
            IF (MSC_ATP_PVT.G_INV_CTP = 5) OR
                 (MSC_ATP_PVT.G_INV_CTP = 4 AND
                     NVL(l_atp_table.old_source_organization_id(i), -1) <> l_process_org_id ) THEN
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'Either old source ors is null or is not same as l_process_org_id');
                     msc_sch_wb.atp_debug('Schedule: ' || 'Old org :=' || l_atp_table.old_source_organization_id(i));
                  END IF;
                  --- we get PF item id only if its a case of new schedulling
                  -- if its a reschedulling then we mayalready have got the id just for deleting
                  ---the previous order. For reschedulling we handel it in the elase part
                  l_process_item_id := MSC_ATP_PF.Get_PF_Atp_Item_Id(p_instance_id,
                                                                       l_plan_id,
                                                                       l_requested_item_id,
                                                                       l_process_org_id);
            ELSE
                IF l_arrival_count > 1 THEN
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: ' || 'Arrival Set');
                        msc_sch_wb.atp_debug('Schedule: ' || 'l_pf_item_id(k) := ' || l_pf_item_id(k));
                     END IF;
                     l_process_item_id := l_pf_item_id(k);
                ELSE
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: ' || 'Ship Set');
                        msc_sch_wb.atp_debug('Schedule: ' || 'l_pf_item_id(i) := ' || l_pf_item_id(i));
                     END IF;
                     l_process_item_id := l_pf_item_id(i);
                END IF;
            END IF;
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'l_process_item_id := ' || l_process_item_id);
            END IF;

            IF (l_process_item_id <> l_requested_item_id) and (l_atp_flag = 'N') then
                  --For Product family based ATP we will flag an error if request comes for a
                  -- member item which has ATP flag = 'N'. For other members we will continue as usual
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'Member item is not atpable');
                  END IF;
                  x_return_status := FND_API.G_RET_STS_ERROR;
                  l_atp_table.Error_Code(i):= PF_MEMBER_ITEM_NOT_ATPABLE;
                  RAISE NO_DATA_FOUND;
            END IF;
            -- since we know the org now, we can get the plan_id if it is PDS

            IF MSC_ATP_PVT.G_INV_CTP = 4 THEN
              /* Modularize Item and Org Info */
              -- Information already obtained
              /*l_atp_comp_flag := MSC_ATP_FUNC.get_atp_comp_flag(p_instance_id,
                                        l_plan_id,
                                        l_requested_item_id,
                                        l_process_org_id);
               Modularize Item and Org Info */


              IF l_atp_flag <> 'N' OR l_atp_comp_flag <> 'N' THEN
                /*
		MSC_ATP_PROC.Get_Plan_Info(p_instance_id,
                            --2152184
                            l_process_item_id,
                            --l_requested_item_id,
   			    l_process_org_id,
                            l_atp_table.demand_class(i),
                            l_plan_id,
                            l_assign_set_id);

		-- code changes for bug 2392456 starts
                 MSC_ATP_PROC.Get_Plan_Info(p_instance_id,
                            --2152184
                            l_process_item_id,
                            --l_requested_item_id,
                            l_process_org_id,
                            l_atp_table.demand_class(i),
                            l_plan_info_rec);
                */
                --s_cto_reach
                l_plan_found_for_match := 2;
                IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: matc_id.count := ' || l_atp_table.match_item_id.count);
                     msc_sch_wb.atp_debug('Schedule: bom_item_type count := ' || l_atp_table.bom_item_type.count);
                     msc_sch_wb.atp_debug('match item is := ' || l_atp_table.match_item_id(i));
                END IF;
                IF l_atp_table.match_item_id(i) is not null and l_atp_table.bom_item_type(i) = 1 THEN

                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Match Found, find plan for  matched item');
                   END IF;

                   /* time_phased_atp changes begin*/
                   l_match_item_family_id := MSC_ATP_PF.Get_PF_Atp_Item_Id(
                                                  p_instance_id,
                                                  l_plan_id,
                                                  l_atp_table.match_item_id(i),
                                                  l_process_org_id
                                             );

                   /* Call new procedure Get_PF_Plan_Info*/
                   MSC_ATP_PF.Get_PF_Plan_Info(
                               p_instance_id,
                               l_atp_table.match_item_id(i),
                               l_match_item_family_id,
                               l_process_org_id,
                               l_atp_table.demand_class(i),
                               l_atf_date,
                               l_atp_table.error_code(i),
                               l_return_status,
                               NULL --bug3510475
                   );

                   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Schedule: ' || 'ATP Downtime during Re-schedule');
                        END IF;
                        x_return_status := FND_API.G_RET_STS_ERROR;
                        RAISE FND_API.G_EXC_ERROR;
                   END IF;

                   IF l_atf_date is not null THEN
                       l_time_phased_atp := 'Y';
                   ELSIF l_match_item_family_id <> l_atp_table.match_item_id(i) THEN
                       l_pf_atp := 'Y';
                   END IF;
                   /* time_phased_atp changes end*/

                   -- ATP4drp changes begin
                   -- No changes here since DRP plan should not support ATO.
                   -- ATP4drp changes end

                   IF  MSC_ATP_PVT.G_PLAN_INFO_REC.plan_id is not null and
                           NVL(MSC_ATP_PVT.G_PLAN_INFO_REC.plan_id, -1) <> -1 then
                        IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('plan found for  matched item');
                        END IF;
                        l_plan_found_for_match := 1;
                        l_atp_table.base_model_id(i) := l_process_item_id;
                        l_process_item_id := l_match_item_family_id;

                        --bug 4604500: pass correct request item it when match is found.
                        l_requested_item_id := l_atp_table.match_item_id(i);

                        --get item attributes of the matched item
                        MSC_ATP_PROC.get_item_attributes(p_instance_id,
                                         --3917625: Read attributes from correct plan
                                         --l_plan_id,
                                         MSC_ATP_PVT.G_PLAN_INFO_REC.plan_id,
                                         l_atp_table.match_item_id(i),
                                         l_process_org_id,
                                         l_item_attribute_rec);

                         l_atp_table.matched_item_name(i) := l_item_attribute_rec.item_name;

                         l_atp_table.matched_item_name(i) := l_item_attribute_rec.item_name;

                   ELSE
                        IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('plan  not found for  matched item');
                        END IF;
                        l_plan_found_for_match := 2;
                        l_atp_table.match_item_id(i) := null;

                        -- we got plan for match. All fields in G_ITEM_INFO_REC were populated
                        --as a results plan was not getting read.
                        MSC_ATP_PVT.G_ITEM_INFO_REC.sr_inv_item_id := null;
                   END IF;
                END IF;

                IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: l_plan_found_for_match := ' || l_plan_found_for_match);
                END IF;
                IF l_plan_found_for_match = 2 THEN
                   /* time_phased_atp changes begin
                      Call new procedure Get_PF_Plan_Info*/
                   MSC_ATP_PF.Get_PF_Plan_Info(
                               p_instance_id,
                               l_requested_item_id,
                               l_process_item_id,
                               l_process_org_id,
                               l_atp_table.demand_class(i),
                               l_atf_date,
                               l_atp_table.error_code(i),
                               l_return_status,
                               NULL --bug3510475
                   );

                   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Schedule: ' || 'ATP Downtime during Re-schedule');
                        END IF;
                        x_return_status := FND_API.G_RET_STS_ERROR;
                        RAISE FND_API.G_EXC_ERROR;
                   END IF;

                   -- ATP4drp changes begin
                   IF NVL(MSC_ATP_PVT.G_PLAN_INFO_REC.plan_type, 1) = 5 THEN
                      -- time_phased_atp - Reset variables
                      l_process_item_id := l_requested_item_id;
                      MSC_ATP_PVT.G_ITEM_INFO_REC.product_family_id := MSC_ATP_PVT.G_ITEM_INFO_REC.dest_inv_item_id;
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('----- ATP4drp Specific Debug Messages -----');
                         msc_sch_wb.atp_debug('Schedule: ' || 'PF and Allocated ATP not applicable for DRP plans');
                         msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_ALLOCATED_ATP ' || MSC_ATP_PVT.G_ALLOCATED_ATP);
                         msc_sch_wb.atp_debug('Schedule: ' || 'l_requested_item_id ' || l_requested_item_id);
                         msc_sch_wb.atp_debug('Schedule: ' || 'l_process_item_id ' || l_process_item_id);
                         msc_sch_wb.atp_debug('----- ATP4drp Specific Debug Messages -----');
                      END IF;
                   ELSE
                      IF l_atf_date is not null THEN
                          l_time_phased_atp := 'Y';
                      ELSIF l_process_item_id <> l_requested_item_id THEN
                          l_pf_atp := 'Y';
                      END IF;

                   END IF;
                   -- ATP4drp changes end
                   /* time_phased_atp changes end*/

                END IF;

                l_plan_info_rec := MSC_ATP_PVT.G_PLAN_INFO_REC;
                -- End New procedure for obtaining plan data : Supplier Capacity Lead Time proj.
                l_plan_id       := l_plan_info_rec.plan_id;
                /* time_phased_atp Add plan_id to l_atp_table so that it can later be used
                   this way we save call to get_global_plan_info*/
                l_atp_table.plan_id(i) := l_plan_info_rec.plan_id;
                l_assign_set_id := l_plan_info_rec.assignment_set_id;
                IF l_atp_table.attribute_07.Exists(i) THEN
                        l_atp_table.attribute_07(i) := l_plan_info_rec.plan_name;
                END IF;
                --diag_atp
                l_atp_rec.plan_name := l_plan_info_rec.plan_name;
                -- code changes for bug 2392456 ends

                -- 1873918: PDS-ODS fix
                -- PDS-ODS fix
                IF l_plan_id is NULL THEN
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'no plan available');
                  END IF;
                  x_return_status := FND_API.G_RET_STS_ERROR;
                  --bug 2854351: Raise plan down time error
                  --l_atp_table.Error_Code(i):= PLAN_NOT_FOUND;
                  l_atp_table.Error_Code(i):= MSC_ATP_PVT.PLAN_DOWN_TIME;
                  RAISE NO_DATA_FOUND;
                ELSIF l_plan_id = -100 THEN
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'Summary Concurrent program is running');
                  END IF;
                  x_return_status := FND_API.G_RET_STS_ERROR;
                  l_atp_table.Error_Code(i):= SUMM_CONC_PROG_RUNNING;
                  RAISE NO_DATA_FOUND;
                ELSIF l_plan_id = -200 THEN
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'Post Plan Alloc progranm has not been run');
                  END IF;
                  x_return_status := FND_API.G_RET_STS_ERROR;
                  l_atp_table.Error_Code(i):= RUN_POST_PLAN_ALLOC;
                  RAISE NO_DATA_FOUND;

                -- 24x7 ATP
                ELSIF l_plan_id = -300 THEN
                  if PG_DEBUG in ('Y','C') THEN
                      msc_sch_wb.atp_debug ('Schedule: ' || 'ATP Downtime . 24x7 ATP');
                  END IF;
                  x_return_status := FND_API.G_RET_STS_ERROR;
                  --- bug 2854351: Show planned down time error
                  --l_atp_table.Error_Code(i) := TRY_ATP_LATER;
                  l_atp_table.Error_Code(i) := PLAN_DOWN_TIME;
                  RAISE NO_DATA_FOUND;

                ELSIF l_plan_id = -1 THEN
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'no plan available, switch to ods');
                  END IF;

                  l_atp_table.Error_Code(i):= PDS_TO_ODS_SWITCH;
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_table.Error_Code(i)='||l_atp_table.Error_Code(i));
                  END IF;
                  MSC_ATP_PVT.G_INV_CTP := 5;
                  MSC_ATP_PVT.G_ALLOCATED_ATP := 'N';
                  MSC_ATP_PVT.G_ALLOCATION_METHOD := 2;
                  --5221865 In cases of PDS ODS Swith we turn iterative scheduling off
                  MSC_ATP_PVT.G_FORWARD_ATP := 'N';

                  /* Switching to ODS, Set the Global comp flag to NO */
                  --s_cto_rearch
                  IF G_ITEM_INFO_REC.bom_item_type in (1, 4) and G_ITEM_INFO_REC.replenish_to_ord_flag = 'Y' THEN
                      --ATO Model or item need be exploded to do ATP on model level
                      IF G_ITEM_INFO_REC.atp_comp_flag = 'C' THEN

                         G_ITEM_INFO_REC.atp_comp_flag := 'Y';

                      ELSIF G_ITEM_INFO_REC.atp_comp_flag = 'R' THEN

                          G_ITEM_INFO_REC.atp_comp_flag := 'N';

                      END IF;

                  ELSE
                      G_ITEM_INFO_REC.atp_comp_flag := 'N';
                  END IF;
                  --e_cto_rearch

                  l_atp_comp_flag := G_ITEM_INFO_REC.atp_comp_flag;
                  --Moved below bug 4091487
                  /*
                  SELECT so_tbl_status,
                         NVL(summary_flag, 1)
                  INTO   l_so_tbl_status,
                         l_summary_flag
                  FROM   msc_apps_instances
                  WHERE  instance_id = p_instance_id;

                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_so_tbl_status = '||l_so_tbl_status);
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_summary_flag = '||l_summary_flag);
                  END IF;

                  -- Doing PDS-ODS switch. Summary will be diabled in all cases because ODS summary
                  -- will commit even PDS data from previous lines
                  msc_sch_wb.atp_debug('Schedule: ' || 'Summary will be disabled');
                  MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';

                  IF NVL(l_so_tbl_status, 1) = 2 THEN
                    -- not available for atp
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'ods not available');
                    END IF;

                    l_atp_table.error_code(1) := TRY_ATP_LATER;
                    RAISE NO_DATA_FOUND;

                  END IF;
                  */
                END IF; -- END IF l_plan_id is NULL
              --ELSE
              --- if ATP and ATPComp falg is no then we dont want to do summary approach
              --  MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';
                -- Bug 4091487 Checking so_tbl_status in PDS ATP also.
                SELECT so_tbl_status,
                         NVL(summary_flag, 1)
                INTO   l_so_tbl_status,
                         l_summary_flag
                FROM   msc_apps_instances
                WHERE  instance_id = p_instance_id;

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_so_tbl_status = '||l_so_tbl_status);
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_summary_flag = '||l_summary_flag);
                END IF;

                IF NVL(l_so_tbl_status, 1) = 2 THEN
                    -- not available for atp
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'ATP not available');
                    END IF;

                    l_atp_table.error_code(1) := TRY_ATP_LATER;
                    RAISE NO_DATA_FOUND;
                END IF;
                -- Summary will be diabled in all cases because ODS summary
                -- will commit even PDS data from previous lines
                IF l_plan_id = -1 THEN

                   MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';

                   IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'Summary will be disabled');
                   END IF;

                END IF;
               END IF;

            END IF;
            --- bug 2152184: Retrival of PF item needs to be done on ODS data. Moved the call before plan is retrieved
            /*l_process_item_id := MSC_ATP_PF.Get_PF_Atp_Item_Id(p_instance_id,
                                                    l_plan_id,
                                                    l_requested_item_id,
                                                    l_process_org_id); */

            l_stmt := 200;
    	    IF PG_DEBUG in ('Y', 'C') THEN
    	       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
    	    END IF;

            -- reinitialize some elements in l_atp_rec
            l_atp_rec.error_code := ALLSUCCESS;
            l_atp_rec.ship_date := NULL;
            l_atp_rec.available_quantity := NULL;
            l_atp_rec.requested_date_quantity := NULL;
            -- 2382963 : krajan for vivek
            l_atp_rec.arrival_date := NULL;

            -- cchen: 1238941
            l_atp_rec.combined_requested_date_qty := NULL;

            -- need to do uom quantity conversion

            MSC_ATP_PROC.inv_primary_uom_conversion(p_instance_id,
                                       l_sources.Organization_Id(j),
                                       l_process_item_id,
                                       l_atp_table.Quantity_UOM(i),
                                       l_quantity_uom,
                                       l_conversion_rate);

            l_quantity_ordered := l_atp_table.Quantity_Ordered(i)* l_conversion_rate;
            l_quantity_ordered := ROUND( l_quantity_ordered, 6); --4562646
            l_atp_rec.instance_id := p_instance_id;
            l_atp_rec.demand_source_line := l_atp_table.Identifier(i);
            l_atp_rec.identifier := l_atp_table.Identifier(i);
            l_atp_rec.demand_source_header_id:=l_atp_table.Demand_Source_Header_Id(i);
	    l_atp_rec.demand_source_delivery:=l_atp_table.Demand_Source_Delivery(i);
	    l_atp_rec.demand_source_type:=l_atp_table.Demand_Source_type(i);--cmro
            l_atp_rec.inventory_item_id := l_process_item_id;
            l_atp_rec.request_item_id := l_requested_item_id;
            l_atp_rec.organization_id := l_sources.Organization_Id(j);
            l_atp_rec.supplier_id := l_sources.Supplier_Id(j);
            l_atp_rec.supplier_site_id := l_sources.Supplier_Site_Id(j);
            l_atp_rec.quantity_ordered := l_quantity_ordered;
            l_atp_rec.quantity_uom := l_quantity_uom;
            l_atp_rec.requested_ship_date := l_atp_table.Requested_Ship_Date(i);
            l_atp_rec.requested_arrival_date := l_atp_table.Requested_Arrival_Date(i);
            l_atp_rec.latest_acceptable_date := l_atp_table.Latest_Acceptable_Date(i);
	    -- dsting 2741997
            l_atp_rec.delivery_lead_time := l_atp_table.Delivery_Lead_Time(i);
            l_atp_rec.freight_carrier := l_atp_table.Freight_Carrier(i);
            l_atp_rec.ship_method := l_atp_table.Ship_Method(i);

            -- time_phased_atp
            l_atp_rec.atf_date := l_atf_date;

            -- ship_rec_cal
            l_atp_rec.shipping_cal_code       := l_atp_table.shipping_cal_code(i);
            l_atp_rec.receiving_cal_code      := l_atp_table.receiving_cal_code(i);
            l_atp_rec.intransit_cal_code      := l_atp_table.intransit_cal_code(i);
            l_atp_rec.manufacturing_cal_code  := l_atp_table.manufacturing_cal_code(i);

            -- Bug 3226083
            l_mem_dest_id := MSC_ATP_PVT.G_ITEM_INFO_REC.dest_inv_item_id;
            l_pf_dest_id := MSC_ATP_PVT.G_ITEM_INFO_REC.product_family_id;

            l_g_inv_ctp               := MSC_ATP_PVT.G_INV_CTP; --9239406 if switch has happened then this points to correct value.
            --optional_fw start New loop added to get the date on which qty is found.
            --for second line in set we need to reset these

            G_FW_CTP_PEGGING_ID.DELETE;
            G_FW_STEAL_PEGGING_ID.DELETE;
            l_ctp_parent_peg_id.DELETE;
            l_steal_atp_peg_id.DELETE;

            G_OPTIONAL_FW             := NULL;
            G_REQUESTED_SHIP_DATE     := l_atp_rec.requested_ship_date;
            l_quan_ordered            := l_atp_rec.quantity_ordered;
            l_request_date_qty        := 0;
            G_FW_PEGGING_ID           := NULL;
            G_ATP_COMP_FLAG           := 'Y';
            l_last_date               := NULL;
            l_first_date              := NULL;
            l_low_seqnum              := NULL;
            l_high_seqnum             := NULL;
            l_middle_seqnum           := NULL;
            l_last_search             := NULL;
            l_last_successful_date    := NULL;
            l_atp_peg_id              := NULL;
            l_loop_count              := 1;
            l_last_success_atp_rec    := NULL;
            l_second_good_run         := NULL;
            l_g_inv_ctp               := MSC_ATP_PVT.G_INV_CTP; --5158454 if switch has happened then this points to correct value.
            G_DEMAND_ID               := NULL; --5158454
            G_NUMBER_OF_ITERATIONS    := NULL;         --5211558 holds the numbet of iterations binary search will take
            G_LOOP_COUNT              := l_loop_count; --5211558 holds the present count of loop iteration

            LOOP
              EXIT WHEN l_low_seqnum > l_high_seqnum; --both are null for first time.
              IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || '___OPTIONAL FW PASS Binary Search Start____');
                msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_OPTIONAL_FW: '         || MSC_ATP_PVT.G_OPTIONAL_FW);
                msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.quantity_ordered: '        || l_atp_rec.quantity_ordered);
                msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.requested_date_quantity: ' || l_atp_rec.requested_date_quantity);
                msc_sch_wb.atp_debug('Schedule: ' || 'l_loop_count start : '               || l_loop_count);
              END IF;
              --5211558 initialized global variable to use inside ATP_Check
              IF l_time_phased_atp = 'Y' AND G_FORWARD_ATP = 'Y' THEN
                 G_LOOP_COUNT := l_loop_count;
                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'G_LOOP_COUNT start : '               || G_LOOP_COUNT);
                 END IF;
              END IF;
             --If more iteration are needed then go inside this if condition.
             --First time we will not go inside as loop count will be 1.
             --Only second time we come here as after that G_OPTIONAL_FW is set to not null value.
             IF (MSC_ATP_PVT.G_OPTIONAL_FW is null)  AND l_loop_count = 2
                       AND (Nvl(l_atp_rec.requested_date_quantity,0) < l_atp_rec.quantity_ordered)
             THEN
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.quantity_ordered: ' || l_atp_rec.quantity_ordered);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.requested_date_quantity: ' || l_atp_rec.requested_date_quantity);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.combined_requested_date_qty: ' || l_atp_rec.combined_requested_date_qty);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_request_date_qty: ' || l_request_date_qty);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.requested_ship_date: ' || l_atp_rec.requested_ship_date);
               END IF;

               MSC_ATP_PVT.G_OPTIONAL_FW := 1;

               l_atp_rec.quantity_ordered := l_atp_rec.quantity_ordered -
                       GREATEST(NVL(l_atp_rec.combined_requested_date_qty,
                                    l_atp_rec.requested_date_quantity), 0);

               l_request_date_qty :=   GREATEST(NVL(l_atp_rec.combined_requested_date_qty,
                                    l_atp_rec.requested_date_quantity), 0);

               l_atp_rec.requested_ship_date := MSC_CALENDAR.DATE_OFFSET (
                                                l_atp_rec.shipping_cal_code,
                                                l_atp_rec.instance_id,
                                                l_atp_rec.requested_ship_date,
                                                1, 1);

               l_atp_rec.ship_date := NULL;
               l_atp_rec.available_quantity := NULL;
               l_atp_rec.used_available_quantity := NULL;
               l_atp_rec.requested_date_quantity := NULL;
               l_atp_rec.combined_requested_date_qty := NULL;
               l_atp_rec.atf_date_quantity := NULL;

               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_OPTIONAL_FW: ' || MSC_ATP_PVT.G_OPTIONAL_FW);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.quantity_ordered: ' || l_atp_rec.quantity_ordered);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.requested_ship_date: ' || l_atp_rec.requested_ship_date);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_request_date_qty: ' || l_request_date_qty);
               END IF;
               --for OPTIONAL FW PASS cases initialize it to ITF
               MSC_ATP_PROC.get_infinite_time_fence_date(l_atp_rec.instance_id,
                                              l_atp_rec.request_item_id,
                                              l_atp_rec.organization_id,
                                              l_plan_id,
                                              l_last_date,
                                              l_atp_rule_name);

               --Make sure that it is valid working day
               l_first_date := MSC_CALENDAR.PREV_WORK_DAY(
						l_atp_rec.shipping_cal_code,
						l_atp_rec.instance_id,
						l_atp_rec.requested_ship_date);

	       --ITF date is a valid working day per mfg cal.
	       --Make sure that it is valid working day as per shipping also.
               l_last_date := MSC_CALENDAR.NEXT_WORK_DAY(
						l_atp_rec.shipping_cal_code,
						l_atp_rec.instance_id,
						l_last_date);
              IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'l_first_date: ' || l_first_date);
               msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_OPTIONAL_FW: ' || MSC_ATP_PVT.G_OPTIONAL_FW);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_low_seqnum: ' || l_low_seqnum);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_high_seqnum: ' || l_high_seqnum);
              END IF;
            END IF;

            --For each iteration these should be set to original values
            MSC_ATP_PVT.G_PTF_DATE                := l_sys_next_date;
            l_atp_rec.ship_date                   := NULL;
            l_atp_rec.available_quantity          := NULL;
            l_atp_rec.parent_so_quantity          := l_quan_ordered;
            l_atp_rec.used_available_quantity     := NULL;
            l_atp_rec.requested_date_quantity     := NULL;
            l_atp_rec.combined_requested_date_qty := NULL;
            l_atp_rec.atf_date_quantity           := NULL;
            G_FW_CTP_PEGGING_ID.DELETE; --as this has to point to the top level for each iteration
            G_FW_STEAL_PEGGING_ID.DELETE;
            G_ITEM_INFO_REC                       := l_item_attribute_rec; --for each loop this should point to main item and
                                                                             --not substitutes.
            --Get the seq_num for both dates depending upon the shipping cal code.
            IF (MSC_ATP_PVT.G_OPTIONAL_FW is not null) AND (nvl(l_last_search,0) <> 1) THEN
                l_low_seqnum    := msc_atp_pvt.get_seq_num(l_first_date,
                                                           l_atp_rec.shipping_cal_code,
                                                           l_atp_rec.instance_id
                                                           );
               IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: ' || 'l_low_seqnum: ' || l_low_seqnum);
               END IF;
                l_high_seqnum   := msc_atp_pvt.get_seq_num(l_last_date,
                                                           l_atp_rec.shipping_cal_code,
                                                           l_atp_rec.instance_id
                                                           );
               IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: ' || 'l_high_seqnum: ' || l_high_seqnum);
               END IF;

                l_middle_seqnum := floor((l_low_seqnum + l_high_seqnum)/2);

               IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: ' || 'l_middle_seqnum: ' || l_middle_seqnum);
               END IF;

                l_atp_rec.requested_ship_date := msc_atp_pvt.get_date_from_seqnum(
                                                           l_middle_seqnum,
                                                           l_atp_rec.shipping_cal_code,
                                                           l_atp_rec.instance_id
                                                           );
               IF l_loop_count = 2 THEN
                 l_number_of_iterations := floor(LOG(2,((l_high_seqnum-l_low_seqnum) + 1))) + 1;

                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_number_of_iterations: ' || l_number_of_iterations);
                 END IF;
                 --5211558 Store the number of iterations to know which is the last pass
                 IF l_time_phased_atp = 'Y' AND G_FORWARD_ATP = 'Y' THEN
                    G_NUMBER_OF_ITERATIONS := l_number_of_iterations;

                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'G_NUMBER_OF_ITERATIONS: ' || G_NUMBER_OF_ITERATIONS);
                    END IF;
                 END IF;
               END IF;

               IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.requested_ship_date: ' || l_atp_rec.requested_ship_date);
               END IF;
              END IF;
            --optional_fw end
            /* ship_rec_cal changes begin
               If ship date is provided validate it on OSC
               If arrival date is provided validate it on ORC, offset using VIC, validate it on OSC*/
            IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || '___________________Start Offset___________________');
                  msc_sch_wb.atp_debug('Schedule: ' || 'Req Ship Date: ' || l_atp_rec.requested_ship_date);
                  msc_sch_wb.atp_debug('Schedule: ' || 'Req Arrival Date: ' || l_atp_rec.requested_arrival_date);
                  msc_sch_wb.atp_debug('Schedule:  ');
            END IF;
            -- Bug3593394 - Recalculate date only if parameters have changed
            IF (i=1)
                OR (MSC_ATP_PVT.G_OPTIONAL_FW is null)
                --optional_fw first time when second line comes do again as
                --l_requested_ship_date will be pointing to last iteration of 1st line.
                OR (l_atp_rec.receiving_cal_code        <> l_atp_table.receiving_cal_code(i-1))
                OR (l_atp_rec.intransit_cal_code        <> l_atp_table.intransit_cal_code(i-1))
                OR (nvl(l_atp_rec.delivery_lead_time,0) <> nvl(l_atp_table.delivery_lead_time(i-1),0))
                OR (l_atp_rec.shipping_cal_code         <> l_atp_table.shipping_cal_code(i-1))
                OR (
                      (
                         (l_atp_rec.requested_arrival_date IS NULL)
                         OR (l_atp_table.Requested_Arrival_Date(i-1) IS NULL)
                         OR (l_atp_rec.requested_arrival_date    <> l_atp_table.Requested_Arrival_Date(i-1))
                      )
                      AND
                      (
                         (l_atp_rec.requested_ship_date IS NULL)
                         OR (l_atp_table.requested_ship_date(i-1) IS NULL)
                         OR (l_atp_rec.requested_ship_date       <> l_atp_table.requested_ship_date(i-1))
                      )
                   ) THEN

                IF (l_atp_rec.requested_arrival_date IS NOT NULL) THEN
		    l_requested_ship_date := MSC_CALENDAR.PREV_WORK_DAY(
						l_atp_rec.receiving_cal_code,
						l_atp_rec.instance_id,
						l_atp_rec.requested_arrival_date);

                    IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('Schedule: ' || 'Date after validating on ORC/CRC: ' || l_requested_ship_date);
                    END IF;

		    IF trunc(l_requested_ship_date) <> trunc(l_atp_rec.requested_arrival_date) THEN
		        G_CALENDAR_CONSTRAINT := 'Y';
		    ELSE
		        G_CALENDAR_CONSTRAINT := 'N'; -- bug3593394 - reset the global variable
		    END IF;
		    l_requested_ship_date := MSC_CALENDAR.DATE_OFFSET(
		                                l_atp_rec.intransit_cal_code,
		                                l_atp_rec.instance_id,
		                                l_requested_ship_date,
		                                -1 * nvl(l_atp_rec.delivery_lead_time, 0),
		                                -1);

                    IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('Schedule: ' || 'Date after subtracting intransit LT using VIC: ' || l_requested_ship_date);
                    END IF;

		    l_requested_ship_date := MSC_CALENDAR.PREV_WORK_DAY(
						l_atp_rec.shipping_cal_code,
						l_atp_rec.instance_id,
						l_requested_ship_date);

                ELSE
		    l_requested_ship_date := MSC_CALENDAR.PREV_WORK_DAY(
						l_atp_rec.shipping_cal_code,
						l_atp_rec.instance_id,
						l_atp_rec.requested_ship_date);
		    IF trunc(l_requested_ship_date) <> trunc(l_atp_rec.requested_ship_date) THEN
		        G_CALENDAR_CONSTRAINT := 'Y';
		    ELSE
		        G_CALENDAR_CONSTRAINT := 'N'; -- bug3593394 - reset the global variable
		    END IF;
                END IF;

                IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'Date after validating on OSC: ' || l_requested_ship_date);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_requested_ship_date: ' || l_requested_ship_date);
                  msc_sch_wb.atp_debug('Schedule: ' || 'G_CALENDAR_CONSTRAINT: ' || G_CALENDAR_CONSTRAINT);
                  msc_sch_wb.atp_debug('Schedule: ' || '___________________End Offset___________________');
                END IF;

                IF l_requested_ship_date is NULL THEN
                  l_atp_table.error_code(i) := MSC_ATP_PVT.ATP_INVALID_DATE;
                  RAISE FND_API.G_EXC_ERROR;
                END IF;

                --bug 3322846: Move past due ship date to the first working day after sysdate
                --L_MOVE_PAST_DUE_TO_SYSDATE := NVL(FND_PROFILE.value('MSC_MOVE_PAST_DUE_TO_SYSDATE'), 'Y'); -- Bug 5584634/5618929
                L_MOVE_PAST_DUE_TO_SYSDATE := MSC_ATP_PVT.G_MOV_PAST_DUE_SYSDATE_PROF;--6316476
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'MOVE_PAST_DUE_TO_SYS_DATE :'|| L_MOVE_PAST_DUE_TO_SYSDATE);
                END IF;
                if L_MOVE_PAST_DUE_TO_SYSDATE = 'Y' THEN  -- Bug 5584634/5618929
                IF l_requested_ship_date < l_sys_next_date THEN

                    IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: ' || 'Request date is less than sysdate');
                    END IF;
                    l_requested_ship_date := MSC_CALENDAR.NEXT_WORK_DAY(
                                                l_atp_rec.shipping_cal_code,
                                                l_atp_rec.instance_id,
                                                l_sys_next_date);

                    l_past_due_ship_date := 1; --bug4291375 setting for past due ship date
                    IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: ' || 'New l_requested_ship_date := ' || l_requested_ship_date);
                    END IF;
                END IF;
                END IF; -- Bug 5584634/5618929

                IF l_requested_ship_date is NULL THEN
                    l_atp_table.error_code(i) := MSC_ATP_PVT.ATP_INVALID_DATE;
                    RAISE FND_API.G_EXC_ERROR;
                END IF;

            ELSE -- Bug3593394
                IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'Ship date parameters have not changed.');
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_requested_ship_date: ' || l_requested_ship_date);
                  msc_sch_wb.atp_debug('Schedule: ' || 'G_CALENDAR_CONSTRAINT: ' || G_CALENDAR_CONSTRAINT);
                  msc_sch_wb.atp_debug('Schedule: ' || '___________________End Offset___________________');
                END IF;
            END IF; -- Bug3593394

            l_atp_rec.requested_ship_date := l_requested_ship_date;
            l_atp_rec.requested_arrival_date := null;

            --optional_fw this will  have the original date after calendar validation.
            IF MSC_ATP_PVT.G_OPTIONAL_FW is null THEN
	       G_REQUESTED_SHIP_DATE     := l_requested_ship_date;
            END IF;


            /* ship_rec_cal changes end */

            -- aatp: in case we are doing allocated atp and demand class
            -- is not specified.

            -- 2783787 (ssurendr) Null demand class in request should be considered as "Others"
            /*
            IF (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND
                            (l_atp_table.Demand_Class(i) IS NULL) THEN
              MSC_ATP_PROC.get_global_org_info(l_atp_rec.instance_id,
                                                l_atp_rec.organization_id);
              l_default_atp_rule_id := G_ORG_INFO_REC.default_atp_rule_id;
              l_calendar_code := G_ORG_INFO_REC.cal_code;
              l_calendar_exception_set_id := G_ORG_INFO_REC.cal_exception_set_id;
              l_default_demand_class := G_ORG_INFO_REC.default_demand_class;
              l_org_code := G_ORG_INFO_REC.org_code;

              l_atp_table.Demand_Class(i) := l_default_demand_class;
            END IF;
            */

            -- hierarchy changes
            -- due to arrival set issue, the dummy demand class will
            -- be done in atp_check

            l_atp_rec.demand_class := l_atp_table.Demand_Class(i);

            -- rajjain 02/11/2003 Bug 2788144
            --IF (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND (MSC_ATP_PVT.G_HIERARCHY_PROFILE = 2) THEN

            -- rajjain 02/11/2003 Bug 2788144
            --END IF;
	    -- ATP Override rajjain begin
	    IF l_atp_table.Action(i) = ATPQUERY THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'Override Flag: '||l_atp_rec.override_flag);
                END IF;

		l_atp_rec.override_flag := 'N';

                IF PG_DEBUG in ('Y', 'C') THEN
		   msc_sch_wb.atp_debug('Schedule: ' || 'ATPQUERY - Setting the Override Flag to : '||l_atp_rec.override_flag);
                END IF;
	    ELSE
                l_atp_rec.override_flag := l_atp_table.Override_Flag(i);

	    END IF;
	    -- ATP Override rajjain end

            l_atp_rec.action := l_atp_table.Action(i);
            l_atp_rec.insert_flag := l_atp_table.Insert_Flag(i);

            -- for bug 1105741.  l_atp_rec.to_organization_id should be populated .
            l_atp_rec.to_organization_id := l_atp_table.Organization_Id(i);
            l_atp_rec.to_instance_id := p_instance_id;
	    l_atp_rec.customer_id := l_atp_table.customer_id(i);
            l_atp_rec.refresh_number := p_refresh_number;
            l_atp_rec.atp_lead_time := l_atp_table.Atp_Lead_Time(i);
            l_atp_rec.Order_Number := l_atp_table.Order_Number(i);
            l_atp_rec.component_identifier := MSC_ATP_PVT.G_COMP_LINE_ID;

            ---This will be populated in case of reschedulling.
            --- This will be demand id for the old demand
            --bug 2384224: since we are always going to add demand, we dont need to remember old demand id
            --l_atp_rec.old_demand_id        := l_demand_ids(i);

	    -- for multi_level/ multi_org cto support
            l_atp_rec.calling_module := l_atp_table.calling_module(i);
            l_stmt := 210;
    	    IF PG_DEBUG in ('Y', 'C') THEN
    	       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
	       msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.Inventory_Item_Id:' || to_char(l_atp_rec.Inventory_Item_Id)
		||' l_atp_rec.request_item_id:' || to_char(l_atp_rec.request_item_id)
		||' l_atp_rec.organization_id:' || to_char(l_atp_rec.organization_id) );
	    END IF;

            -- get the search method:  this should come from
            -- a profile option (1 for depth and 2 for breadth).
            -- but for now, let's assume it is a depth search.
            -- the following logic is for depth first!!!!

            l_search := DEPTH ;

            -- since this is the top item, this is the first level
            -- make the first level to be 0
            l_level := 0;

            -- for a single line or ship set, the scenario id is the
            -- the order of sources

            l_scenario_id := j;

            -- CTO_PF_PRJ_2 changes for CTO PF Cross Project Impacts
            -- Set the default to No PF ATP Items being processed.
            MSC_ATP_PVT.G_CTO_PF_ATP := 'N';
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'Before ATP_Check for this l_atp_rec ');
               msc_sch_wb.atp_debug('Schedule: Init G_CTO_PF_ATP to ' ||
                                                       MSC_ATP_PVT.G_CTO_PF_ATP);
            END IF;
            -- End CTO_PF_PRJ_2 changes for CTO PF Cross Project Impacts

            --- subst

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'G_PLAN_SUBST_FLAG := ' || MSC_ATP_PVT.G_PLAN_SUBST_FLAG);
            END IF;

            IF MSC_ATP_PVT.G_INV_CTP = 4 AND
               NVL(MSC_ATP_PVT.G_PLAN_SUBST_FLAG, 2) = 1 THEN
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'count := ' || l_item_substitute_rec.inventory_item_id.count);
                  msc_sch_wb.atp_debug('Schedule: ' || 'G_CREATE_SUPPLY_FLAG := ' || MSC_ATP_SUBST.G_CREATE_SUPPLY_FLAG);
                  msc_sch_wb.atp_debug('Schedule: ' || 'get item attributes for the top item');
               END IF;

               -- check if one and only one of the requested_ship_date and
               -- requested_arrival_date is provided
               IF ((l_atp_rec.requested_ship_date IS NULL) and
               (l_atp_rec.requested_arrival_date IS NULL)) THEN

                   l_atp_rec.error_code := MSC_ATP_PVT.NOREQ_DATE;
                   -- krajan : 2437459
                   l_atp_table.error_code(i) := MSC_ATP_PVT.NOREQ_DATE;

                   RAISE FND_API.G_EXC_ERROR;

               ELSIF ((l_atp_rec.requested_ship_date IS NOT NULL) and
                    (l_atp_rec.requested_arrival_date IS NOT NULL)) THEN

                    l_atp_rec.error_code := MSC_ATP_PVT.ATP_MULTI_REQ_DATES;
                    -- krajan : 2437459
                    l_atp_table.error_code(i) := MSC_ATP_PVT.ATP_MULTI_REQ_DATES;

                    RAISE FND_API.G_EXC_ERROR;
               END IF;
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'get item attributes for the top item');
               END IF;

               -- old dlt code

               -- 1143475:
               -- IF atp lead time > 0 then we must do the offset no matter that item
               -- is atpable or not.  Otherwise, only if that item is atpable
               -- item we need to do the offset.  The reason of doing this is to avoid
               -- database hit.

               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'Point 3');
               END IF;

               l_atp_rec.delivery_lead_time := l_delivery_lead_time;
               l_atp_rec.ship_method := l_ship_method;
               l_atp_rec.requested_ship_date := l_requested_ship_date;
               l_atp_rec.requested_arrival_date := null;
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'ship_method = '||l_ship_method ||' lead time = '||l_delivery_lead_time);
               END IF;

               -----------
               /* Modularize Item and Org Info */
               -- Information already obtained.
               /*MSC_ATP_PROC.get_global_item_info( p_instance_id,
                                                 -1,
                                                l_atp_rec.inventory_item_id,
                                                l_atp_rec.organization_id );
               */
               -- Changed assignments
               l_atp_flag := G_ITEM_INFO_REC.atp_flag;
               l_atp_comp_flag := G_ITEM_INFO_REC.atp_comp_flag;
               l_pre_pro_lt := G_ITEM_INFO_REC.pre_pro_lt;
               l_fixed_lt := G_ITEM_INFO_REC.fixed_lt;
               l_variable_lt := G_ITEM_INFO_REC.variable_lt;
               l_post_pro_lt := G_ITEM_INFO_REC.post_pro_lt;
               l_inventory_item_id := G_ITEM_INFO_REC.dest_inv_item_id;
               l_item_name := G_ITEM_INFO_REC.item_name;
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || ' Create supply flag :=' ||
                                      G_ITEM_INFO_REC.create_supply_flag);
               END IF;
               /* Modularize Item and Org Info */

               l_substitution_type := l_atp_table.substitution_typ_code(i);
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_flag := ' || l_atp_flag);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_comp_flag := ' || l_atp_comp_flag);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_pre_pro_lt := ' || l_pre_pro_lt);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_fixed_lt := ' || l_fixed_lt);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_inventory_item_id := ' || l_inventory_item_id);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_item_name :=' || l_item_name);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_substitution_type := ' || l_substitution_type);
               END IF;
               ---bug 2341073 : null out the l_item_substitute_rec else values for last item might get used again
               l_item_substitute_rec := l_null_item_sub_rec;

               /*
               time_phased_atp
               In non-time-phased PF Atp cases there won't be any end item substitution
               so no need to call Get_Item_Substitutes but we want to do breadth first search*/
               IF l_pf_atp <> 'Y' THEN
                       MSC_ATP_SUBST.Get_Item_Substitutes(l_inventory_item_id,
                                                        l_item_substitute_rec,
                                                        p_instance_id,
                                                        l_plan_id,
                                                        l_atp_rec.customer_id,
                                                        l_atp_table.customer_site_id(i),
                                                        l_requested_ship_date,
                                                        l_atp_rec.organization_id);
               END IF;

               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || ' subst count := ' || l_item_substitute_rec.inventory_item_id.count);
               END IF;

               IF l_item_substitute_rec.inventory_item_id.count > 0 AND
                                               (NVL(l_substitution_type, 4) = 4 OR
                                                      l_atp_rec.override_flag = 'Y'
 					        ---diag_atp
                           			OR MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1) THEN
                  --- if item has substitutes but we dont want to do any substitution then
                  --- we will do breadth first search. But we dont want to use any substitutes.
                  --- Therefore we remove all the substitutes from the table
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'Substitution defined but not doing substitution');
                  END IF;
                  MSC_ATP_PVT.G_SUBSTITUTION_FLAG := 'Y';
                  l_highest_rev := l_item_substitute_rec.highest_revision_item_id(1);
                  l_item_substitute_rec := l_null_item_sub_rec;

               ELSIF  NVL(l_substitution_type, 4) = 4 or
                     (l_item_substitute_rec.inventory_item_id.count = 0) THEN
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Schedule: ' || 'Substitute not defined');
                   END IF;
                  MSC_ATP_PVT.G_SUBSTITUTION_FLAG := 'N';
               ELSE
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'Substitution defined and doing substitution');
                  END IF;
                  MSC_ATP_PVT.G_SUBSTITUTION_FLAG := 'Y';
               END IF;

               IF MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y' THEN

                  IF MSC_ATP_SUBST.G_CREATE_SUPPLY_FLAG = 702
                           AND l_item_substitute_rec.inventory_item_id.count = 0 THEN
                      l_create_supply_on_orig_item := 1;
                  ELSE
                      -- Modular re-use of info.
                      l_create_supply_on_orig_item := G_ITEM_INFO_REC.create_supply_flag;
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || ' Re-use Create supply flag :=' ||
                                      G_ITEM_INFO_REC.create_supply_flag);
                      END IF;
                      -- Modular re-use of info.

                  END IF;


                  --- now add the original item
                  l_count := l_item_substitute_rec.inventory_item_id.count;
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_count := ' || l_count);
                  END IF;
                  MSC_ATP_SUBST.Extend_Item_Info_Rec_Typ(l_item_substitute_rec, l_return_status);
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'After extending Item info');
                  END IF;
                  l_count := l_item_substitute_rec.inventory_item_id.count;
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_count := ' || l_count);
                  END IF;
                 l_item_substitute_rec.inventory_item_id(l_count) := l_inventory_item_id;
                 --l_item_substitute_rec.sr_inventory_item_id(l_count) := l_atp_rec.inventory_item_id;
                 --l_requested_item_id has member_item_id.l_atp_rec.inventory_item_id has family id.
                 l_item_substitute_rec.sr_inventory_item_id(l_count) := l_requested_item_id; --bug3467631

                 -- time_phased_atp
                 IF l_time_phased_atp = 'Y' or l_pf_atp = 'Y' THEN
                     l_item_substitute_rec.Family_sr_id(l_count) := l_process_item_id;
                     l_item_substitute_rec.Family_dest_id(l_count) := MSC_ATP_PVT.G_ITEM_INFO_REC.product_family_id;
                     l_item_substitute_rec.Family_item_name(l_count) := MSC_ATP_FUNC.Get_Inv_Item_Name(
                                                                                p_instance_id,
                                                                                l_process_item_id,
                                                                                l_atp_rec.organization_id
                                                                        );
                     l_item_substitute_rec.atf_date(l_count) := l_atf_date;
                 ELSE
                     --bug3709707 passing correct item id
                     --l_item_substitute_rec.Family_sr_id(l_count) := l_inventory_item_id;
                     l_item_substitute_rec.Family_sr_id(l_count) := l_requested_item_id;
                     l_item_substitute_rec.Family_dest_id(l_count) := MSC_ATP_PVT.G_ITEM_INFO_REC.dest_inv_item_id;
                     l_item_substitute_rec.Family_item_name(l_count) := l_item_name;
                     l_item_substitute_rec.atf_date(l_count) := null;
                 END IF;

                 l_item_substitute_rec.plan_id(l_count) := l_plan_id;
                 --l_item_substitute_rec.assign_set_id.extend(l_count);
                 l_item_substitute_rec.assign_set_id(l_count) := l_assign_set_id;
                 l_item_substitute_rec.item_name(l_count) := l_item_name;
                 l_item_substitute_rec.atp_comp_flag(l_count) := l_atp_comp_flag;
                 l_item_substitute_rec.atp_flag(l_count) := l_atp_flag;
                 l_item_substitute_rec.post_pro_lt(l_count) := l_post_pro_lt;
                 l_item_substitute_rec.create_supply_flag(l_count) := l_create_supply_on_orig_item;
                 l_item_substitute_rec.highest_revision_item_id(l_count) := l_highest_rev;

                 -- dsting additional attributes for diagnostic atp
                 /* time_phased_atp
                 Substitution window should not be more than aggregate time fence days*/
                 IF (l_pf_atp = 'Y' OR l_time_phased_atp = 'Y') THEN
                  l_item_substitute_rec.substitution_window(l_count) := LEAST(MSC_ATP_PVT.G_ITEM_INFO_REC.substitution_window,
                                                                                nvl(MSC_ATP_PF.Get_Atf_Days(
                                                                                        p_instance_id,
                                                                                        l_inventory_item_id,
                                                                                        l_atp_rec.organization_id
                                                                                    ),
                                                                                 0)
                                                                              );
                 ELSE
                  l_item_substitute_rec.substitution_window(l_count) := MSC_ATP_PVT.G_ITEM_INFO_REC.substitution_window;
                 END IF;

                 l_item_substitute_rec.unit_weight(l_count) := MSC_ATP_PVT.G_ITEM_INFO_REC.unit_weight;
                 l_item_substitute_rec.weight_uom(l_count) := MSC_ATP_PVT.G_ITEM_INFO_REC.weight_uom;
                 l_item_substitute_rec.unit_volume(l_count) := MSC_ATP_PVT.G_ITEM_INFO_REC.unit_volume;
                 l_item_substitute_rec.volume_uom(l_count) := MSC_ATP_PVT.G_ITEM_INFO_REC.volume_uom;
                 l_item_substitute_rec.rounding_control_type(l_count) := MSC_ATP_PVT.G_ITEM_INFO_REC.rounding_control_type;
                 l_item_substitute_rec.plan_name(l_count) := l_atp_rec.plan_name;
                 l_item_substitute_rec.pre_pro_lt(l_count) := l_pre_pro_lt;
                 l_item_substitute_rec.fixed_lt(l_count) := l_fixed_lt;
                 l_item_substitute_rec.variable_lt(l_count) := l_variable_lt;


                 --l_item_substitute_rec.requested_ship_date(l_count) := l_requested_ship_date;
                 FOR i in  1..l_item_substitute_rec.inventory_item_id.count LOOP
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'Item ' || i || '  :=  ' || l_item_substitute_rec.inventory_item_id(i));
                    END IF;
                 END LOOP;


                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_item_count := ' || l_item_substitute_rec.inventory_item_id.count);
                 END IF;
               END IF;

            ELSE

               MSC_ATP_PVT.G_SUBSTITUTION_FLAG := 'N';

            END IF;
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'G_SUBSTITUTION_FLAG := ' || MSC_ATP_PVT.G_SUBSTITUTION_FLAG);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_plan_id := ' || l_plan_id);
               msc_sch_wb.atp_debug('Schedule: ' || 'G_INV_CTP := ' || MSC_ATP_PVT.G_INV_CTP);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_g_inv_ctp := ' || l_g_inv_ctp); --5158454
            END IF;

            IF MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y' AND MSC_ATP_PVT.G_INV_CTP = 4 THEN

               l_atp_rec.substitution_type := l_atp_table.substitution_typ_code(i);
               l_atp_rec.req_item_detail_flag := l_atp_table.req_item_detail_flag(i);

               --bug 4568088: pass original request date
               l_atp_rec.original_request_date := l_atp_table.original_request_date(i); --plan by request date

               MSC_ATP_SUBST.ATP_Check_SUBST(l_atp_rec,
                         l_item_substitute_rec,
                         l_requested_ship_date,
                         l_plan_id,
                         l_level,
                         l_scenario_id,
                         l_search,
                         p_refresh_number,
                         null, -- previous_pegging_id
                         l_assign_set_id,
                         l_atp_period,
                         l_atp_supply_demand,
                         l_return_status);
               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Schedule: ' || 'atp check fails');
                   END IF;
                   x_return_status := FND_API.G_RET_STS_ERROR;
		   --2741997
                   l_atp_table.Error_Code(i):= l_atp_rec.Error_Code;
                   RAISE NO_DATA_FOUND;
               END IF;

               --bug3467631 start
               --Setting the l_bkwd_pass_atf_date_qty which is to be used in move_pf_bucketed_demands
               --for new time phase atp logic.This qty has backward pass request date atp+ctp qantity.
               l_atp_rec.requested_date_quantity := GREATEST(NVL(l_atp_rec.requested_date_quantity, 0), 0);

               IF l_atp_rec.requested_ship_date <= l_atf_date THEN
                l_bkwd_pass_atf_date_qty :=l_atp_rec.requested_date_quantity;
               ELSE
                l_bkwd_pass_atf_date_qty := l_atp_rec.atf_date_quantity;
               END IF;

               IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_atf_date = '||l_atf_date);
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.atf_date_quantity = '||l_atp_rec.atf_date_quantity);
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.used_available_quantity = '||l_atp_rec.used_available_quantity);
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_bkwd_pass_atf_date_qty = '||l_bkwd_pass_atf_date_qty);
               END IF;
               --bug3467631 end

               ---- add this item to MSC_ATP_PVT.G_PEGGING_FOR_SET as this is used to remove the demands if needed
               MSC_ATP_PVT.G_PEGGING_FOR_SET.extend;
               MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.extend;
               MSC_ATP_PVT.G_PEGGING_FOR_SET(MSC_ATP_PVT.G_PEGGING_FOR_SET.count) := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
               MSC_ATP_PVT.G_REQ_ATP_DATE.extend;
               MSC_ATP_PVT.G_REQ_DATE_QTY.extend;

               ---bug 2361283: For determining the date on which we want to see the substitution we offset the
               --- lead time from requested_ship_date and save it in l_atp_rec.requested_ship_date itself
               --- As a result we are loosing time component. So we restore the date back.
               IF l_atp_table.requested_ship_date(i) is not null THEN
                    l_atp_rec.requested_ship_date := l_atp_table.requested_ship_date(i);
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'Orig Date := ' || to_char(l_atp_table.requested_ship_date(i), 'mm-dd-yy hh:mm:ss'));
                       msc_sch_wb.atp_debug('Schedule: ' || 'Reset the ship date bug 2361283');
                       msc_sch_wb.atp_debug('Schedule: ' || 'Orig Date := ' || to_char(l_atp_rec.requested_ship_date, 'mm-dd-yy hh:mm:ss'));
                    END IF;
               END IF;

                 -- Commented for bug 2748730. G_END_OF_DAY not required here.
		 /*
		 -- for bug 2259824, add end of day to ship date
		IF l_atp_rec.ship_date IS NOT NULL THEN
		  l_atp_rec.ship_date := TRUNC(l_atp_rec.ship_date) + MSC_ATP_PVT.G_END_OF_DAY ;
		  IF PG_DEBUG in ('Y', 'C') THEN
             		msc_sch_wb.atp_debug('Schedule: 2259824 l_atp_rec.ship_date = '||
                		to_char(l_atp_rec.ship_date, 'DD-MON-YYYY HH24:MI:SS'));
          	  END IF;
		END IF;
		*/

            ELSE
               -- dsting 2465370
		G_LINE_OVERRIDE_FLAG := l_atp_rec.override_flag;
               --s_cto_rearch
               l_atp_rec.Top_Model_line_id := l_atp_table.Top_Model_line_id(i);
               l_atp_rec.ATO_Parent_Model_Line_Id := l_atp_table.ATO_Parent_Model_Line_Id(i);
               l_atp_rec.ATO_Model_Line_Id := l_atp_table.ATO_Model_Line_Id(i);
               l_atp_rec.Parent_line_id := l_atp_table.Parent_line_id(i);
               l_atp_rec.wip_supply_type := l_atp_table.wip_supply_type(i);
               l_atp_rec.parent_atp_flag := null;
               l_atp_rec.parent_atp_comp_flag := null;
               l_atp_rec.parent_repl_order_flag := null;
               l_atp_rec.parent_bom_item_type := null;
               l_atp_rec.bom_item_type := G_ITEM_INFO_REC.bom_item_type;
               l_atp_rec.rep_ord_flag  := G_ITEM_INFO_REC.replenish_to_ord_flag;
               l_atp_rec.mand_comp_flag := 2;
               --5168353 When profile is yes then we have already set this to correct value
               --        and the value in l_atp_rec is not correct.
               IF G_FORWARD_ATP = 'N' THEN
               l_atp_rec.parent_so_quantity := l_atp_rec.quantity_ordered;
               END IF;
               l_atp_rec.original_request_date := l_atp_table.original_request_date(i); --plan by request date
               l_atp_rec.ship_set_name 	  :=l_atp_table.ship_set_name(i);               --plan by request date
               l_atp_rec.arrival_set_name :=l_atp_table.arrival_set_name(i);            --plan by request date
               l_atp_rec.override_flag	  :=l_atp_table.override_flag(i);               --plan by request date


               IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Call ATP_Check');
               END IF;
               --e_cto_rearch
               MSC_ATP_PVT.ATP_Check(l_atp_rec,
                         l_plan_id,
                         l_level,
                         l_scenario_id,
                         l_search,
                         p_refresh_number,
                         null, -- previous_pegging_id
                         l_assign_set_id,
                         l_atp_period,
                         l_atp_supply_demand,
                         l_return_status);

               IF l_return_status = MSC_ATP_PVT.CTO_OSS_ERROR THEN
                   l_atp_table.Error_Code(i):= MSC_ATP_PVT.OSS_SOURCING_ERROR;

               ELSIF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Schedule: ' || 'atp check fails');
                   END IF;
                   x_return_status := FND_API.G_RET_STS_ERROR;
		   --2741997
--                   l_atp_table.Error_Code(k):= l_atp_rec.Error_Code;
                   l_atp_table.Error_Code(i):= l_atp_rec.Error_Code;
                   RAISE NO_DATA_FOUND;
               END IF;

               IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.atf_date_quantity = '||l_atp_rec.atf_date_quantity);
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.used_available_quantity = '||l_atp_rec.used_available_quantity);
               END IF;
               -- No NVL is needed on atf_date_quantity bug3555084
               --l_atp_rec.atf_date_quantity := GREATEST(NVL(l_atp_rec.atf_date_quantity, 0), 0);
               --bug3397904 start
               --optional_fw this should be executed only in b/w pass. check this one!!
               IF MSC_ATP_PVT.G_OPTIONAL_FW is null then
                IF l_atp_rec.requested_ship_date <= l_atf_date THEN
                 l_bkwd_pass_atf_date_qty := GREATEST(NVL(l_atp_rec.combined_requested_date_qty,
                                          l_atp_rec.requested_date_quantity), 0);
                ELSE
                 l_bkwd_pass_atf_date_qty := NVL(l_atp_rec.atf_date_quantity,0);
                END IF;
               END IF;
               --bug3397904 end
                -- Commented for bug 2748730. G_END_OF_DAY not required here.
		/*
		-- for bug 2259824, add end of day to ship date
		IF l_atp_rec.ship_date IS NOT NULL THEN
		  l_atp_rec.ship_date := TRUNC(l_atp_rec.ship_date) + MSC_ATP_PVT.G_END_OF_DAY ;
		  IF PG_DEBUG in ('Y', 'C') THEN
             		msc_sch_wb.atp_debug('Schedule: 2259824 l_atp_rec.ship_date = '||
                		to_char(l_atp_rec.ship_date, 'DD-MON-YYYY HH24:MI:SS'));
          	  END IF;
		END IF;
	       */
	       --diag_atp
	       --optional_fw we never want to do this f/w pass if G_FORWARD_ATP is Yes
               IF MSC_ATP_PVT.G_FIND_FUTURE_DATE = 'Y'
                       AND MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 2 AND G_FORWARD_ATP = 'N' THEN

                 l_future_atp_rec := l_atp_rec;

                 l_future_atp_rec.error_code := ALLSUCCESS;
                 l_future_atp_rec.ship_date := NULL;
                 l_future_atp_rec.available_quantity := NULL;
                 l_future_atp_rec.requested_date_quantity := NULL;
                 -- cchen :1238941
                 l_future_atp_rec.combined_requested_date_qty := NULL;
                 l_future_atp_rec.quantity_uom := l_atp_rec.quantity_uom;

                 -- added greatest to ensure we won't set the quantity_ordered
                 -- wrong when requested_date_quantity is less than 0

                 -- cchen:1238941
	         -- l_future_atp_rec.quantity_ordered := l_atp_rec.quantity_ordered-
                 --    GREATEST(l_atp_rec.requested_date_quantity, 0);


                 l_future_atp_rec.quantity_ordered := l_atp_rec.quantity_ordered -
                       GREATEST(NVL(l_atp_rec.combined_requested_date_qty,
                                    l_atp_rec.requested_date_quantity), 0);
                 l_future_atp_rec.atf_date_quantity := NULL;

                 -- The date might have been set by a lower level component. we reset it again
                 -- Bug 3512996 - For top level G_PTF_DATE should be as per OSC
                 -- MSC_ATP_PVT.G_PTF_DATE := l_sys_next_omc_date;
                 MSC_ATP_PVT.G_PTF_DATE := l_sys_next_date;

                 --9239406
                 IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'l_g_inv_ctp = '||l_g_inv_ctp );
	         END IF;
                 IF (l_g_inv_ctp = 5) then -- -- If it is set to one, PDS-ODS switch has happened, otherwise no.

                     MSC_ATP_PVT.G_INV_CTP := 5;
                     MSC_ATP_PVT.G_ALLOCATED_ATP := 'N';
                     MSC_ATP_PVT.G_ALLOCATION_METHOD := 2;
                     --MSC_ATP_PVT.G_FORWARD_ATP := 'N';

                     IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'Reset the profiles in case of PSD-ODS switch' );
	             END IF;

                 END IF;

                 IF PG_DEBUG in ('Y', 'C') THEN
                 	msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_INV_CTP ='||MSC_ATP_PVT.G_INV_CTP );
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_future_atp_rec.quantity_ordered ='||l_future_atp_rec.quantity_ordered );
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.requested_date_quantity ='||l_atp_rec.requested_date_quantity);
	            msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.combined_requested_date_qty ='||l_atp_rec.combined_requested_date_qty);
	         END IF;

                 MSC_ATP_PVT.ATP_Check(l_future_atp_rec,
                         l_plan_id,
                         l_level,
                         l_scenario_id,
                         2,
                         p_refresh_number,
                         null, -- previous_pegging_id
                         l_assign_set_id,
                         l_future_atp_period,
                         l_future_atp_supply_demand,
                         l_return_status);

                 IF l_return_status = MSC_ATP_PVT.CTO_OSS_ERROR THEN
                   l_atp_table.Error_Code(i):= MSC_ATP_PVT.OSS_SOURCING_ERROR;
                -- dsting 2764213
                ELSIF l_return_status in (
                     MSC_ATP_PVT.G_ATO_SRC_MISMATCH,
                     MSC_ATP_PVT.G_ATO_UNCOLL_ITEM,
                     MSC_ATP_PVT.G_NO_PLAN_FOUND)
                THEN
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Schedule: ' || 'atp check fails in future case');
                   END IF;
		   --2741997
                   x_return_status := FND_API.G_RET_STS_ERROR;
                   l_atp_rec.error_code := l_future_atp_rec.Error_code;
                   l_atp_table.Error_Code(i):= l_atp_rec.Error_Code;
                   RAISE NO_DATA_FOUND;
                 END IF;

		-- Commented for bug 2748730. G_END_OF_DAY not required here.
                 /*
		 -- for bug 2259824, add end of day to ship date
		l_atp_rec.ship_date := TRUNC(l_future_atp_rec.ship_date) + MSC_ATP_PVT.G_END_OF_DAY ;

		IF PG_DEBUG in ('Y', 'C') THEN
             		msc_sch_wb.atp_debug('Schedule: 2259824 l_atp_rec.ship_date = '||
                		to_char(l_atp_rec.ship_date, 'DD-MON-YYYY HH24:MI:SS'));
          	END IF;
		*/

                 l_atp_rec.ship_date := l_future_atp_rec.ship_date;
		 -- make sure we won't ouput any available_quantity which is
                 -- greater than the infinite number

                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_future_atp_rec.available_quantity = '||
			   to_char(nvl(l_future_atp_rec.available_quantity, -99)));
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_future_atp_rec.used_available_quantity = '||
			   l_future_atp_rec.used_available_quantity); --bug3409973
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.combined_requested_date_qty = '||
			   to_char(nvl(l_atp_rec.combined_requested_date_qty, -99)));
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.requested_date_quantity = '||
			   to_char(nvl(l_atp_rec.requested_date_quantity, -99)));
                    msc_sch_wb.atp_debug('Schedule: ' || 'atf_date_quantity before adding qty from future = '||l_atp_rec.atf_date_quantity);
                    msc_sch_wb.atp_debug('Schedule: ' || 'l_future_atp_rec.atf_date_quantity = '||l_future_atp_rec.atf_date_quantity);
                 END IF;

                 IF (l_future_atp_rec.atf_date_quantity is null) and (l_future_atp_rec.ship_date <= l_atf_date) THEN
                    l_future_atp_rec.atf_date_quantity := l_future_atp_rec.quantity_ordered;
                 END IF;

                 /* Bug 3265577*/
                 IF l_atp_rec.requested_ship_date > l_atf_date THEN
                         l_atp_rec.atf_date_quantity :=
                                 GREATEST(NVL(l_atp_rec.atf_date_quantity, 0), 0) +
                                 GREATEST(NVL(l_future_atp_rec.atf_date_quantity, 0), 0);
                 ELSE
                         l_atp_rec.atf_date_quantity :=
                                 GREATEST(NVL(l_atp_rec.requested_date_quantity, 0), 0) +
                                 GREATEST(NVL(l_future_atp_rec.atf_date_quantity, 0), 0);
                 END IF;

                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'atf_date_quantity after adding qty from future = '||l_atp_rec.atf_date_quantity);
                 END IF;

                 -- cchen 1238941
                 -- 1411818 : add greatest
                 l_atp_rec.available_quantity := LEAST(
                         GREATEST(l_future_atp_rec.available_quantity, 0) +
                         GREATEST(NVL(l_atp_rec.combined_requested_date_qty,
                             l_atp_rec.requested_date_quantity), 0),
                         INFINITE_NUMBER);

                 l_atp_rec.used_available_quantity:= LEAST(
                         GREATEST(l_future_atp_rec.used_available_quantity, 0) +
                         GREATEST(NVL(l_atp_rec.combined_requested_date_qty,
                             l_atp_rec.requested_date_quantity), 0),
                         INFINITE_NUMBER); --bug3409973
                 -- for aatp
                 -- 1411818: add greatest
                 l_atp_rec.requested_date_quantity :=
                         GREATEST(l_atp_rec.requested_date_quantity, 0) +
                         GREATEST(l_future_atp_rec.combined_requested_date_qty, 0);

                 -- 1524689
                 -- IF requested_date_quantity is greater than order quantity
                 -- due to stealing or we happen to find enough when we
                 -- do the forward case, then we should set the error code
                 -- to success.

                 IF l_atp_rec.requested_date_quantity >=
                    l_atp_rec.quantity_ordered  THEN
                   l_atp_rec.error_code := ALLSUCCESS;
                 END IF;

                 /* Bug 4211058 */
                 IF l_atp_rec.ship_date = l_atp_rec.requested_ship_date then
                    l_atp_rec.requested_date_quantity :=
                         l_atp_rec.available_quantity;
                 END IF;

                 MSC_ATP_PROC.Details_Output(l_future_atp_period,
                                l_future_atp_supply_demand,
                                l_atp_period,
                                l_atp_supply_demand,
                                l_return_status);
               ELSE
                 -- for aatp
                 l_atp_rec.requested_date_quantity :=
                    l_atp_rec.combined_requested_date_qty;
               END IF;
            END IF; -- IF MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y' AND MSC_ATP_PVT.G_INV_CTP = 4
            --optional_fw start
             IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: ' || '___OPTIONAL FW PASS Binary Search End ____');
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: l_last_search: ' || l_last_search);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: l_low_seqnum: ' || l_low_seqnum);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: l_high_seqnum: ' || l_high_seqnum);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: l_middle_seqnum: ' || l_middle_seqnum);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: l_atp_rec.requested_ship_date: ' || l_atp_rec.requested_ship_date);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: l_atp_rec.requested_date_quantity: ' || l_atp_rec.requested_date_quantity);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: l_atp_rec.quantity_ordered: ' || l_atp_rec.quantity_ordered);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: MSC_ATP_PVT.G_ATP_COMP_FLAG: ' || MSC_ATP_PVT.G_ATP_COMP_FLAG);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: MSC_ATP_PVT.G_FORWARD_ATP: ' || MSC_ATP_PVT.G_FORWARD_ATP);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: MSC_ATP_PVT.G_SUBSTITUTION_FLAG: ' || MSC_ATP_PVT.G_SUBSTITUTION_FLAG);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: MSC_ATP_PVT.G_DIAGNOSTIC_ATP: ' || MSC_ATP_PVT.G_DIAGNOSTIC_ATP);
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: MSC_ATP_PVT.G_INV_CTP := ' || MSC_ATP_PVT.G_INV_CTP); --5158454
                 msc_sch_wb.atp_debug('Schedule: ' || 'End: l_g_inv_ctp := ' || l_g_inv_ctp); --5158454
             END IF;
             IF MSC_ATP_PVT.G_OPTIONAL_FW is null  THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'Inside IF condition of binary search loop');
                END IF;
                --If I have got the quantity then I don't need to go for more passes
                IF ( (l_atp_rec.quantity_ordered <= l_atp_rec.requested_date_quantity)
                     OR (MSC_ATP_PVT.G_ATP_COMP_FLAG = 'N')
                    )AND MSC_ATP_PVT.G_FORWARD_ATP = 'Y'
                 THEN --for first iteration this will be one

                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'Exiting the loop from G_FORWARD_ATP is yes ');
                  END IF;
                  EXIT;
                ELSIF MSC_ATP_PVT.G_FORWARD_ATP = 'N' OR MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y'
                                                      OR MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1
                                                      OR MSC_ATP_PVT.G_INV_CTP = 5
                                                      OR l_g_inv_ctp = 5  --5158454 incases where PDS-ODS switch happens the G_INV_CTP is set to 5 but
                                                                          --inside the loop when if profile value is again accessed then it is
                                                                          --reset to 4 again.
                 THEN
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'Exiting the loop from G_FORWARD_ATP is no ');
                  END IF;
                  EXIT;
                END IF;
             ELSIF l_atp_rec.requested_date_quantity >=
                    l_atp_rec.quantity_ordered  THEN

               IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'Inside successful elsif condition of binary search loop');
               END IF;
               --o-- Delete the old hidden data i.e s/d/r for previous successful run.
               --o-- Hide the new successful data i.e s/d/r for this successful run.

               ---- (For performace) First successful case we need not to delete it
               IF l_second_good_run = 1 then

                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'Inside deleting the old successful records');
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_peg_id : ' || l_atp_peg_id);
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_steal_atp_peg_id.count :' || l_steal_atp_peg_id.count);
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_ctp_parent_peg_id.count :' || l_ctp_parent_peg_id.count);
                  END IF;

                  MSC_ATP_DB_UTILS.Delete_Pegging(l_atp_peg_id);

                  IF l_ctp_parent_peg_id.count > 0 then
                     --Remove pegging and s/d  inventory item id is negative.
                     MSC_ATP_DB_UTILS.Delete_SD_Rec(l_ctp_parent_peg_id,l_return_status);
                     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Schedule: ' || 'Error occured in procedure Delete_SD_Rec');
                        END IF;
                     END IF;
                  END IF;

                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_INV_CTP '       || MSC_ATP_PVT.G_INV_CTP);
                     msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_ALLOCATED_ATP ' || MSC_ATP_PVT.G_ALLOCATED_ATP);
                  END IF;

                  IF l_steal_atp_peg_id.count > 0 and MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' then
                     --Remove stealing records/pegging
                     MSC_ATP_DB_UTILS.Delete_SD_Rec(l_steal_atp_peg_id,l_return_status);
                     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('Schedule: ' || 'Error occured in procedure Delete_SD_Rec');
                        END IF;
                     END IF;
                  END IF;

               END IF;

               l_atp_peg_id           := G_FW_PEGGING_ID;       --Make a copy of old successful ids for next deletion
               l_ctp_parent_peg_id    := G_FW_CTP_PEGGING_ID;   --Make a copy of old successful ids for next deletion
               l_steal_atp_peg_id     := G_FW_STEAL_PEGGING_ID; --Make a copy of old successful ids for next deletion
               l_second_good_run      := 1;                     --Set only after one successful run.
               l_last_success_atp_rec := l_atp_rec;             --for restoring dates as no extra pass is done
               l_high_seqnum          := l_middle_seqnum - 1;

               IF l_high_seqnum >= l_low_seqnum THEN
                 IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_PEGGING_ID ' || G_FW_PEGGING_ID);
                   msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_STEAL_PEGGING_ID.COUNT ' || G_FW_STEAL_PEGGING_ID.COUNT);
                   msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_CTP_PEGGING_ID.COUNT ' || G_FW_CTP_PEGGING_ID.COUNT);
                   msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_INV_CTP '       || MSC_ATP_PVT.G_INV_CTP);
                   msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_ALLOCATED_ATP ' || MSC_ATP_PVT.G_ALLOCATED_ATP);
                 END IF;

                 IF G_FW_STEAL_PEGGING_ID.COUNT > 0 and MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' THEN

                    --Hide the forward stealing records with -1*inventory_item_id
                    FOR i in 1..MSC_ATP_PVT.G_FW_STEAL_PEGGING_ID.COUNT LOOP
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'i := ' || i);
                         msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_STEAL_PEGGING_ID ' || G_FW_STEAL_PEGGING_ID(i));
                      END IF;
                      IF G_FW_STEAL_PEGGING_ID(i) is not null THEN
                        MSC_ATP_DB_UTILS.Hide_SD_Rec(G_FW_STEAL_PEGGING_ID(i),l_return_status);
                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('Schedule: ' || 'Error occured in procedure Hide_SD_Rec');
                           END IF;
                        END IF;
                      END IF;
                    END LOOP;
                 END IF;

                 FOR i in 1..MSC_ATP_PVT.G_FW_CTP_PEGGING_ID.COUNT LOOP
                   IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'i := ' || i);
                       msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_CTP_PEGGING_ID ' || G_FW_CTP_PEGGING_ID(i));
                   END IF;
                   IF G_FW_CTP_PEGGING_ID(i) is not null THEN
                    --Hide the CTP records with -1*inventory_item_id
                    MSC_ATP_DB_UTILS.Hide_SD_Rec(G_FW_CTP_PEGGING_ID(i),l_return_status);
                    IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                       IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('Schedule: ' || 'Error occured in procedure Hide_SD_Rec');
                       END IF;
                    END IF;
                   END IF;
                 END LOOP;
               END IF; --end of IF l_high_seqnum >= l_low_seqnum THEN

               l_last_date     := msc_atp_pvt.get_date_from_seqnum(
                                                           l_high_seqnum,
                                                           l_atp_rec.shipping_cal_code,
                                                           l_atp_rec.instance_id
                                                                  );

               l_last_successful_date := l_atp_rec.requested_ship_date;

               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_high_seqnum: ' || l_high_seqnum);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_last_successful_date: ' || l_last_successful_date);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_last_date: ' || l_last_date);
               END IF;

               IF (l_low_seqnum = l_high_seqnum) AND (l_last_successful_date = l_last_date) THEN
                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'Inside first l_low_seqnum = l_high_seqnum of binary search loop');
                 END IF;
                 l_last_search := 1;
                 l_atp_rec.requested_ship_date := l_last_successful_date;
               END IF;

             ELSIF l_atp_rec.requested_date_quantity <
                    l_atp_rec.quantity_ordered  THEN

               IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'Inside unsuccessful elsif  condition of binary search loop');
                   msc_sch_wb.atp_debug('Schedule: ' || 'Before call to Remove_Invalid_SD_Rec');
                   msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_PEGGING_ID ' || G_FW_PEGGING_ID);
               END IF;

               MSC_ATP_DB_UTILS.Delete_Pegging(G_FW_PEGGING_ID);

               IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_STEAL_PEGGING_ID.COUNT ' || G_FW_STEAL_PEGGING_ID.COUNT);
                 msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_CTP_PEGGING_ID.COUNT ' || G_FW_CTP_PEGGING_ID.COUNT);
                 msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_INV_CTP '       || MSC_ATP_PVT.G_INV_CTP);
                 msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_ALLOCATED_ATP ' || MSC_ATP_PVT.G_ALLOCATED_ATP);
               END IF;

               IF G_FW_STEAL_PEGGING_ID.COUNT > 0 AND MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' THEN
                  FOR i in 1..MSC_ATP_PVT.G_FW_STEAL_PEGGING_ID.COUNT LOOP
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Schedule: ' || 'i := ' || i);
                      msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_STEAL_PEGGING_ID ' || G_FW_STEAL_PEGGING_ID(i));
                   END IF;
                   IF G_FW_STEAL_PEGGING_ID(i) is not null THEN
                      MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
                            G_FW_STEAL_PEGGING_ID(i),
                            null,
                            l_plan_id,
                            MSC_ATP_PVT.UNDO,
                            0,
                            l_return_status);
                    END IF;
                  END LOOP;
               END IF;

               FOR i in 1..MSC_ATP_PVT.G_FW_CTP_PEGGING_ID.COUNT LOOP
                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'i := ' || i);
                    msc_sch_wb.atp_debug('Schedule: ' || 'G_FW_CTP_PEGGING_ID ' || G_FW_CTP_PEGGING_ID(i));
                 END IF;

                 IF G_FW_CTP_PEGGING_ID(i) is not null THEN
                   MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
                                               G_FW_CTP_PEGGING_ID(i),
                                               null,
                                               l_plan_id,
                                               MSC_ATP_PVT.UNDO,
                                               0,
                                               l_return_status);
                 END IF;
               END LOOP;
               IF l_low_seqnum = l_high_seqnum THEN
                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: ' || 'Inside second l_low_seqnum = l_high_seqnum condition of binary search loop');
                 END IF;
                 l_last_search := 1;
                 l_atp_rec.requested_ship_date := l_last_successful_date;
               ELSE

                 l_low_seqnum    := l_middle_seqnum + 1;
                 l_first_date    :=
                       msc_atp_pvt.get_date_from_seqnum(l_low_seqnum,
                                                       l_atp_rec.shipping_cal_code,
                                                       l_atp_rec.instance_id
                                                       );
               END IF;
             END IF;
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'l_low_seqnum: ' || l_low_seqnum);
                msc_sch_wb.atp_debug('Schedule: ' || 'l_high_seqnum: ' || l_high_seqnum);
                msc_sch_wb.atp_debug('Schedule: ' || 'l_middle_seqnum: ' || l_middle_seqnum);
                msc_sch_wb.atp_debug('Schedule: ' || 'l_last_successful_date: ' || l_last_successful_date);
                msc_sch_wb.atp_debug('Schedule: ' || 'l_last_date: ' || l_last_date);
                msc_sch_wb.atp_debug('Schedule: ' || 'G_LOOP_COUNT end: ' || G_LOOP_COUNT); --5211558
                msc_sch_wb.atp_debug('Schedule: ' || 'l_loop_count end: ' || l_loop_count);
                msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_ATP_COMP_FLAG: ' || MSC_ATP_PVT.G_ATP_COMP_FLAG);
             END IF;
             l_loop_count := l_loop_count + 1;
             --If this is the last search then we need to exit the loop and restore the s/d records and dates
             IF l_last_search = 1 THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_peg_id : ' || l_atp_peg_id);
                 msc_sch_wb.atp_debug('Schedule: ' || 'l_ctp_parent_peg_id.count : ' || l_ctp_parent_peg_id.count);
                END IF;

                IF l_ctp_parent_peg_id.count > 0 then
                   --Restore the details from pegging, org is negative
                   MSC_ATP_DB_UTILS.Restore_SD_Rec(l_ctp_parent_peg_id,l_return_status);
                   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'Error occured in procedure Restore_SD_Rec');
                      END IF;
                   END IF;
                END IF;

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_steal_atp_peg_id.count :' || l_steal_atp_peg_id.count);
                   msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_ALLOCATED_ATP :' || MSC_ATP_PVT.G_ALLOCATED_ATP);
                   msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_INV_CTP :' || MSC_ATP_PVT.G_INV_CTP);
                END IF;

                IF l_steal_atp_peg_id.count > 0 AND MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' THEN
                   MSC_ATP_DB_UTILS.Restore_SD_Rec(l_steal_atp_peg_id,l_return_status);
                   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'Error occured in procedure Restore_SD_Rec');
                      END IF;
                   END IF;
                END IF;

                --Restore atp_rec also from the last value.
                l_atp_rec := l_last_success_atp_rec;

                EXIT; --exit the loop
             END IF;
            END LOOP;
            --After the loop completes we need to reset these to correct values
            --only needed in f/w pass as in b/w pass all will be set correctly.
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: Resetting after loop of optional_fw');
               msc_sch_wb.atp_debug('Schedule: ' || 'l_quan_ordered: ' || l_quan_ordered);
               msc_sch_wb.atp_debug('Schedule: ' || 'G_REQUESTED_SHIP_DATE: ' || G_REQUESTED_SHIP_DATE);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_request_date_qty: ' || l_request_date_qty);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.available_quantity: ' || l_atp_rec.available_quantity);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.combined_requested_date_qty: ' || l_atp_rec.combined_requested_date_qty);
            END IF;
            IF MSC_ATP_PVT.G_OPTIONAL_FW is not null then
               l_atp_rec.quantity_ordered            := l_quan_ordered;
               l_atp_rec.requested_ship_date         := G_REQUESTED_SHIP_DATE;
               l_atp_rec.requested_date_quantity     := l_request_date_qty;
               l_atp_rec.parent_so_quantity          := l_quan_ordered;
               l_atp_rec.available_quantity          := LEAST(INFINITE_NUMBER,(l_atp_rec.available_quantity +
                                                           l_request_date_qty));
               l_atp_rec.combined_requested_date_qty := LEAST(INFINITE_NUMBER,l_request_date_qty);
            END IF;
            --optional_fw end the loop for dates

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'After ATP_Check for this l_atp_rec ');
            END IF;
            -- check the return status
            IF l_return_status = MSC_ATP_PVT.CTO_OSS_ERROR THEN
                   l_atp_table.Error_Code(i):= MSC_ATP_PVT.OSS_SOURCING_ERROR;
            ELSIF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                RAISE FND_API.G_EXC_ERROR;
            END IF;

            --bug 3328421: For past dues sales orders we start ATP check from first working
            -- day after sysdate as per shipping calender. Therefore, days late for request date type = ship
            -- should be calculated from this date as well.
            -- For req date type = arrival: Days late should be calculated from first work day after sysdate
            --- as per receiving party's receiving calendas. Since UI doesn't know this date we populate this date

            IF l_atp_table.requested_ship_date(i) is not null then
                l_atp_table.first_valid_ship_arrival_date(i) := l_sys_next_date;

            ELSE
                --arrival
                l_atp_table.first_valid_ship_arrival_date(i) := l_sysdate_orc;
            END IF;

            l_stmt := 220;
    	    IF PG_DEBUG in ('Y', 'C') THEN
    	       msc_sch_wb.atp_debug('Schedule: Stmt = '||l_stmt);
    	    END IF;


            -- now we get the results back and we need to analyze them
            -- here is the logic:
            -- if l_multi_scenario = 1
            --      < case 1 >
            --      if error_code = ALLSUCCESS and it is a preferred WH
            --         this is the answer we want, exit the loop
            --      else
            --         add the results to temp table or arr table
            --      end if
            -- else
            --      < case 2 >
            --      if error_code = ALLSUCESS or
            --      inside the latest acceptable range
            --          this is the answer we want, exit the loop
            --      else if we do have ship_date and temp table is empty
            --          add the results to temp table
            --      end if
            -- end

            -- ATP Override -- Agilent changes Begin

            -- bug 2795053-reopen (ssurendr)
            --s_cto_rearch: do not honor atp lead time
            l_dmd_satisfied_date := l_atp_rec.ship_date;
            /*
               l_dmd_satisfied_date := MSC_CALENDAR.DATE_OFFSET(
                                                   l_atp_rec.organization_id,
                                                   p_instance_id,
                                                   1,
                                                   l_atp_rec.ship_date,
                                                   -NVL(l_atp_rec.atp_lead_time, 0));
            */
            --e_cto_rearch
            IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'l_dmd_satisfied_date: ' || l_dmd_satisfied_date);
            END IF;

            IF ( (NVL(l_atp_rec.Override_Flag, 'N') = 'Y')
               AND l_atp_rec.Action <> ATPQUERY ) THEN

               /* ship_rec_cal changes begin */
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || '_______________Override Scenario_______________ ');
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_table.requested_ship_date(i): ' || l_atp_table.requested_ship_date(i));
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_table.requested_arrival_date(i): ' || l_atp_table.requested_arrival_date(i));
               END IF;
               IF (l_atp_table.requested_ship_date(i) IS NOT NULL) THEN
                  l_atp_rec.ship_date := l_atp_table.requested_ship_date(i);

                  -- Bug 3520301 - dont consider first calendar in override cases
                  l_atp_rec.arrival_date := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
        					l_atp_rec.ship_date, MSC_CALENDAR.FOC, 1,
        					l_atp_rec.intransit_cal_code, nvl(l_atp_rec.delivery_lead_time, 0), 1,
        					l_atp_rec.receiving_cal_code, 1, p_instance_id);
               ELSE
                  l_atp_rec.arrival_date := l_atp_table.requested_arrival_date(i);

                  l_atp_rec.ship_date := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
						-- Bug 3520301 - dont consider first calendar in override cases
						-- l_atp_table.requested_arrival_date(i), l_atp_rec.receiving_cal_code, -1,
						l_atp_table.requested_arrival_date(i), MSC_CALENDAR.FOC, -1,
						l_atp_rec.intransit_cal_code, -1 * nvl(l_atp_rec.delivery_lead_time, 0), -1,
						l_atp_rec.shipping_cal_code, -1, p_instance_id);
               END IF;
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.ship_date: ' || l_atp_rec.ship_date);
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.arrival_date: ' || l_atp_rec.arrival_date);
               END IF;

            /* If ship date returned is greater than requested ship date move it to OSC */
            ELSIF trunc(l_atp_rec.ship_date) > trunc(l_atp_rec.requested_ship_date) THEN
               l_atp_rec.ship_date := MSC_CALENDAR.NEXT_WORK_DAY(
                                                l_atp_rec.shipping_cal_code,
                                                p_instance_id,
                                                l_atp_rec.ship_date);
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'ship_date > req_ship_date');
                  msc_sch_wb.atp_debug('Schedule: ' || '_______________After validating ship date on OSC_______________ ');
                  msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.ship_date: ' || l_atp_rec.ship_date);
               END IF;
            END IF;
            /* ship_rec_cal changes end */

            l_stmt := 230;
            --- Bug 1621816 Calculate arrival date and take date offset into account
            IF (l_atp_rec.ship_date IS NOT NULL)  AND (l_atp_rec.arrival_date IS NULL) THEN

                /* ship_rec_cal changes begin */
                l_atp_rec.arrival_date := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
        					l_atp_rec.ship_date, l_atp_rec.shipping_cal_code, 1,
        					l_atp_rec.intransit_cal_code, nvl(l_atp_rec.delivery_lead_time, 0), 1,
        					l_atp_rec.receiving_cal_code, 1, p_instance_id) ;
                                          --4460369+ MSC_ATP_PVT.G_END_OF_DAY;
                /* ship_rec_cal changes end */

                IF l_atp_rec.requested_arrival_date is not null THEN
                   l_atp_rec.arrival_date := TRUNC(GREATEST(l_atp_rec.requested_arrival_date,
                                               l_atp_rec.arrival_date));--4460369 + MSC_ATP_PVT.G_END_OF_DAY;
                END IF;

                IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: l_atp_rec.arrival_date = '||
                                to_char(l_atp_rec.arrival_date, 'DD-MON-YYYY HH24:MI:SS'));
                END IF;

            END IF;
            /*plan by request date changes begin */
            IF l_atp_rec.requested_arrival_date IS NULL THEN
	        -- date type is ship
	    	l_original_req_arrival_date     := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
                                                        NVL(l_atp_rec.original_request_date,l_atp_rec.requested_ship_date),
                                                        l_atp_rec.shipping_cal_code, 1,
                                                        l_atp_rec.intransit_cal_code, nvl(l_atp_rec.delivery_lead_time, 0), 1,
                                                        l_atp_rec.receiving_cal_code, 1, p_instance_id) ;
                                                        --4460369 + MSC_ATP_PVT.G_END_OF_DAY;
            ELSE
	    	-- date type is arrival
	    	l_original_req_arrival_date     := NVL(l_atp_rec.original_request_date,l_atp_rec.requested_arrival_date);
            END IF;
            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: request arrival date = '||
                        to_char(l_atp_rec.requested_arrival_date, 'DD-MON-YYYY HH24:MI:SS'));
            END IF;
            l_req_arr_date(i) := l_original_req_arrival_date;
            /*plan by request date changes end */
            -- populate the output info l_atp_table
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'Before Assigning the values to l_atp_table');
               msc_sch_wb.atp_debug('Schedule: ' || 'i = '||to_char(i));
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.error_code='||l_atp_rec.error_code);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.org_id='|| l_atp_rec.Organization_Id);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.Ship_Method='|| l_atp_rec.Ship_Method);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.Delivery_Lead_Time='|| l_atp_rec.Delivery_Lead_Time);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.Ship_Date='||l_atp_rec.Ship_Date);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.Available_Quantity='||
                                  l_atp_rec.Available_Quantity);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.Requested_Date_Quantity='||
                                  l_atp_rec.Requested_Date_Quantity);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.error_code='||l_atp_rec.error_code);
               --bug3709707 added debug messages
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.request_item_name='||l_atp_rec.request_item_name);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.inventory_item_name='||l_atp_rec.inventory_item_name);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.original_item_name='||l_atp_rec.original_item_name);
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_table.Inventory_item_id(i)='||l_atp_table.Inventory_item_id(i));
               msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_rec.atf_date='||l_atp_rec.atf_date);
            END IF;
            --- subst
            IF MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y' THEN

               IF l_atp_rec.inventory_item_id <> l_atp_table.Inventory_item_id(i) THEN
                  --- substitution has occured. Load subst_flag for substitution workflow
                  l_atp_table.subst_flag(i) := 1;
               END IF;

               IF l_atp_rec.atf_date is not null THEN --bug3467631
                 l_atp_table.Inventory_Item_Name(i) := l_atp_rec.request_item_name;
                 --bug3709707
                 l_atp_table.Inventory_item_id(i) := l_atp_rec.request_item_id;
               ELSE
                 l_atp_table.Inventory_Item_Name(i) := l_atp_rec.inventory_item_name;
                 --bug3709707
                 l_atp_table.Inventory_item_id(i) := l_atp_rec.inventory_item_id;
               END IF;

               IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_table.Inventory_Item_Name(i) '||l_atp_table.Inventory_Item_Name(i));
               END IF;
               --bug3709707 used original item id and name
               --l_atp_table.Inventory_item_id(i) := l_atp_rec.inventory_item_id;
               --l_atp_table.request_item_id(i) := l_atp_rec.request_item_id;
               --l_atp_table.request_item_name(i) := l_atp_rec.request_item_name;
               l_atp_table.request_item_id(i) := l_atp_rec.original_item_id;
               l_atp_table.request_item_name(i) := l_atp_rec.original_item_name;

               IF l_atp_table.req_item_detail_flag(i) = 1 THEN
                  l_atp_table.req_item_req_date_qty(i) := l_atp_rec.req_item_req_date_qty;

		  -- Bug 2259824
		  l_atp_table.req_item_available_date(i) := TRUNC(l_atp_rec.req_item_available_date) ;
									--4460369+ MSC_ATP_PVT.G_END_OF_DAY;
                  IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: 2259824 l_atp_table.req_item_available_date(i) = '||
                                to_char(l_atp_table.req_item_available_date(i), 'DD-MON-YYYY HH24:MI:SS'));
                  END IF;

		  l_atp_table.req_item_available_date_qty(i) := l_atp_rec.req_item_available_date_qty;
		  --bug3709707 commenting as assigned above
		  --l_atp_table.request_item_name(i) := l_atp_rec.request_item_name;
                  --l_atp_table.inventory_item_name(i) := l_atp_rec.inventory_item_name;

               END IF;
            ELSE

               -- 1219371
             /* Modularize Item and Org Info */
             IF (G_ITEM_INFO_REC.instance_id = p_instance_id) AND
                (G_ITEM_INFO_REC.organization_id = l_atp_rec.organization_id) AND
                (G_ITEM_INFO_REC.sr_inv_item_id = l_atp_table.inventory_item_id(i))
             THEN
                -- If item has not changed then re-use
                l_atp_table.Inventory_Item_Name(i) := NVL(G_ITEM_INFO_REC.item_name,
                                                l_atp_table.Inventory_Item_Name(i)) ;
             ELSE
                -- If item has changed then make the call.
               l_atp_table.Inventory_Item_Name(i) := NVL(
                                 MSC_ATP_FUNC.get_inv_item_name(p_instance_id,
                                                   --- bug 2152184
                                                   l_atp_table.inventory_item_id(i),
                                                   --l_requested_item_id, -- 1197692
                                                   l_atp_rec.organization_id),
                                 l_atp_table.Inventory_Item_Name(i)) ;
             END IF;
             /* Modularize Item and Org Info */
		   IF PG_DEBUG in ('Y', 'C') THEN
		      msc_sch_wb.atp_debug ('Schedule: ' || 'after item name');
		   END IF;
            END IF; --- IF MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y'
            l_atp_table.Source_Organization_Id(i):=
                                l_atp_rec.organization_id;
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug ('Schedule: ' || 'after source org id ');
            END IF;

            -- since we do a uom conversion, so we need to repopulate
            -- the primary uom and primary uom quantity back

            l_atp_table.Quantity_UOM(i) := l_atp_rec.quantity_uom;
            l_atp_table.Quantity_Ordered(i) := l_atp_rec.quantity_ordered;

            /* Modularize Item and Org Info */
            MSC_ATP_PROC.get_global_org_info (p_instance_id,
                                              l_atp_rec.organization_id);
            l_atp_table.Source_Organization_Code(i) := G_ORG_INFO_REC.org_code;
            /*l_atp_table.Source_Organization_Code(i):=
                                MSC_ATP_FUNC.get_org_code(p_instance_id, l_atp_rec.organization_id);
             Modularize Item and Org Info */
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug ('Schedule: ' || 'after code');
            END IF;

            l_atp_table.Ship_Method(i) := l_atp_rec.ship_method;
            l_atp_table.Delivery_Lead_Time(i) := l_atp_rec.delivery_lead_time;
            -- Bug 2748730. Return the end of day as the timestamp for outgoing dates.
	    -- For ship date and arrival date, this is the right place to move the date
	    -- to the end of day.
	    l_atp_table.Ship_Date(i) := l_atp_rec.ship_date;--4460369 + MSC_ATP_PVT.G_END_OF_DAY;
	    l_atp_table.arrival_date(i) := l_atp_rec.arrival_date;--4460369 + MSC_ATP_PVT.G_END_OF_DAY;

	    l_atp_table.Available_Quantity(i):= l_atp_rec.available_quantity;
            l_atp_table.Requested_Date_Quantity(i) := l_atp_rec.requested_date_quantity;

            l_atp_table.Scenario_Id(i) := j;
            l_atp_table.End_Pegging_Id(i) := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;

            -- time_phased_atp
            l_atp_table.atf_date(i) := l_atp_rec.atf_date;
            l_atp_table.atp_flag(i) := l_atp_flag; --4460369
            l_atp_table.atp_components_flag(i) := l_atp_comp_flag; --4460369

            -- we may adjust the error code later based on latest accep date

            -- 1873918: PDS-ODS fix
            IF (l_atp_table.Error_Code(i) <> PDS_TO_ODS_SWITCH) OR
               (l_atp_rec.error_code <> ALLSUCCESS) THEN
              l_atp_table.Error_Code(i) := l_atp_rec.error_code;
            END IF;

            l_stmt := 240;

            /* ship_rec_cal commented the code as l_ship_date is not used
            -- bug 1609918 To retain the req_date if ship_date is less than
	    -- req date so that time could be retained

            l_ship_date := NVL(l_atp_rec.requested_ship_date,
                               l_atp_rec.requested_arrival_date - nvl(l_atp_rec.delivery_lead_time,0));

            -- bug 1929645.  In case we have the following case,
            -- today D0, requested_ship_date D10 5pm is a non-working day
            -- and l_atp_rec.ship_date is D9 (previous working day) 0:00.
            -- we want to return ship date as D9 0:00 instead of D10 5pm.*/

-- old bad code was here
            IF l_multi_scenario = 0 THEN
                -- case 2
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'In case 2: l_multi_scenario = 0 ');
                END IF;
                -- since case 2 is what oe wants, we can always set this
                -- flag to 'Y'
                l_atp_table.OE_Flag(i) := 'Y';

                l_stmt := 250;

                -- 1497368
                IF l_ship_count > 1 THEN
                  -- ship set exists

                  IF i = 1 THEN
                  -- this is the begin of a set, we need to clean the
                  -- temp tables for details before we add data into them
                      l_curr_atp_period := l_null_atp_period;
                      l_curr_atp_supply_demand := l_null_atp_supply_demand;
                  END IF;

                  MSC_ATP_PROC.Details_Output(l_atp_period,
                                 l_atp_supply_demand,
                                 l_curr_atp_period,
                                 l_curr_atp_supply_demand,
                                 l_return_status);

                END IF;
                ---diag_atp
                ---In diagnostic ATP we continue as if we are able to meet the demand on request date
                IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'Reset The error code for diag ATP mode');
                    END IF;
                    l_atp_rec.error_code := ALLSUCCESS;
                    --here we mark the constraint path for UI so that they can show the constraiend nodes
                    ---bug 27744106: Improve the query for performance
                    /*-- performance dsting merged queries, added distinct
                    update mrp_atp_details_temp
                    set    constrained_path = 1
                    where  record_type = 3
                    and    session_id = MSC_ATP_PVT.G_SESSION_ID
                    and    pegging_id in
                    (select distinct madt.pegging_id
                     from   mrp_atp_details_temp  madt
                     where  record_type = 3
                     and    session_id = MSC_ATP_PVT.G_SESSION_ID
                     start with madt.pegging_id in (
                        select pegging_id
                        from mrp_atp_details_temp madt1
                        where session_id = MSC_ATP_PVT.G_SESSION_ID
                        and   record_type = 3
                        and   end_pegging_id = MSC_ATP_PVT.G_DEMAND_PEGGING_ID
                        and   constraint_type is not null)
                     connect by madt.pegging_id = PRIOR parent_pegging_id);
                     */
                     --3751114: replace hardcoded values with local varibales
                    --- so that they do not show up as literals
                    UPDATE mrp_atp_details_temp
                    set    constrained_path = l_constraint_path_flag
                    where  record_type = l_peg_record_type
                    and    session_id = MSC_ATP_PVT.G_SESSION_ID
                    and    pegging_id in
                       (select pegging_id
                        from   mrp_atp_details_temp
                        where  record_type = l_peg_record_type
                        and    session_id = MSC_ATP_PVT.G_SESSION_ID
                        start with session_id = MSC_ATP_PVT.G_SESSION_ID
                        and   record_type = l_peg_record_type
                        and   end_pegging_id = MSC_ATP_PVT.G_DEMAND_PEGGING_ID
                        and   constraint_type is not null
                        connect by pegging_id = PRIOR parent_pegging_id
                                and record_type = l_peg_record_type
                                and  session_id = MSC_ATP_PVT.G_SESSION_ID);


                END IF;

                ---bug 1819638: Compare ship_date with greatest of lat_acceptable_date and l_sys_next_date
		IF PG_DEBUG in ('Y', 'C') THEN
		   msc_sch_wb.atp_debug('Schedule: ' || 'stmt16 - Before IF l_atp_rec.error_code = ALLSUCCESS: ' ||l_latest_acceptable_date);
                   msc_sch_wb.atp_debug('Schedule: ' || 'stmt16 - error_code: ' ||l_atp_rec.error_code);
                   msc_sch_wb.atp_debug('Schedule: ' || 'stmt16 - l_latest_acceptable_date:  ' ||l_latest_acceptable_date);
                   msc_sch_wb.atp_debug('Schedule: ' || 'stmt16 - l_atp_rec.override_flag: ' || l_atp_rec.override_flag);
                   msc_sch_wb.atp_debug('Schedule: ' || 'stmt16 - l_atp_rec.action: ' || l_atp_rec.action);
                END IF;

                -- dsting setproc
                l_atp_table.instance_id(i) := p_instance_id;
                IF NVL(l_atp_table.override_flag(i), 'N') = 'Y' THEN

                   /* ship_rec_cal do we need this???
                   l_atp_table.ship_date(i) := TRUNC(l_atp_table.requested_ship_date(i)) + MSC_ATP_PVT.G_END_OF_DAY;

                   IF l_atp_table.ship_date(i) IS NULL THEN
                      l_atp_table.ship_date(i) := TRUNC(MSC_CALENDAR.prev_work_day(
                                                l_atp_table.source_organization_id(i),
                                                p_instance_id,
                                                MSC_CALENDAR.TYPE_DAILY_BUCKET,
                                                l_atp_table.requested_arrival_date(i)
                                                - nvl(l_atp_table.delivery_lead_time(i), 0)
                                            )) + MSC_ATP_PVT.G_END_OF_DAY;
                   END IF;

                   l_atp_table.arrival_date(i) := TRUNC(l_atp_table.requested_arrival_date(i))
                                                + MSC_ATP_PVT.G_END_OF_DAY;
                   IF l_atp_table.arrival_date(i) IS NULL THEN
                      -- dsting 2815549
                      IF l_atp_table.customer_id(i) is null and l_atp_table.organization_id(i) is not null THEN
                         l_atp_table.arrival_date(i) := TRUNC(MSC_CALENDAR.next_work_day(
                                                   l_atp_table.organization_id(i),
                                                   p_instance_id,
                                                   MSC_CALENDAR.TYPE_DAILY_BUCKET,
                                                   l_atp_table.requested_ship_date(i)
                                                   + nvl(l_atp_table.delivery_lead_time(i), 0)
                                               )) + MSC_ATP_PVT.G_END_OF_DAY;
                      ELSE
                         l_atp_table.arrival_date(i) := TRUNC(l_atp_table.requested_ship_date(i)
                            + nvl(l_atp_table.delivery_lead_time(i), 0)) + MSC_ATP_PVT.G_END_OF_DAY;
                      END IF;
                   END IF;*/

                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('override ship_date: ' || l_atp_table.ship_date(i));
                      msc_sch_wb.atp_debug('override arrival_date: ' || l_atp_table.arrival_date(i));
                   END IF;
                ELSE
                   -- xxx dsting hack to make sure things don't ship before sysdate
                   -- for an overridden ship set with req_arrival_date
                   /* ship_rec_cal
                   l_atp_table.earliest_acceptable_date(i) := l_sys_next_date;*/
                   l_atp_table.earliest_acceptable_date(i) := MSC_CALENDAR.NEXT_WORK_DAY(
                                                                        l_shipping_cal_code,
                                                                        p_instance_id,
                                                                        sysdate);
                END IF; -- override

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ship_date: ' || l_atp_table.ship_date(i));
                   msc_sch_wb.atp_debug('arrival_date: ' || l_atp_table.arrival_date(i));
                END IF;
                --bug3439591 start
                --L_MOVE_PAST_DUE_TO_SYSDATE := NVL(FND_PROFILE.value('MSC_MOVE_PAST_DUE_TO_SYSDATE'), 'Y'); -- Bug 5584634/5618929
                L_MOVE_PAST_DUE_TO_SYSDATE := MSC_ATP_PVT.G_MOV_PAST_DUE_SYSDATE_PROF;--6316476
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'MOVE_PAST_DUE_TO_SYS_DATE :'|| L_MOVE_PAST_DUE_TO_SYSDATE);
                END IF;
                if L_MOVE_PAST_DUE_TO_SYSDATE = 'Y' THEN  -- Bug 5584634/5618929
                IF   l_atp_table.requested_ship_date(i) IS NOT NULL THEN
                     l_atp_table.latest_acceptable_date(i) := GREATEST(NVL(l_atp_table.latest_acceptable_date(i),
                                                                l_atp_table.requested_ship_date(i)),l_atp_table.requested_ship_date(i),
                                                                l_sys_next_date);
                ELSE
                   IF l_past_due_ship_date = 2 THEN
                     l_atp_table.latest_acceptable_date(i) := GREATEST(NVL(l_atp_table.latest_acceptable_date(i),
                                                                l_atp_table.requested_arrival_date(i)),l_atp_table.requested_arrival_date(i),
                                                                l_sysdate_orc);
                   ELSE --bug4291375 If requested ship date is past due date then LAD needs to be offseted by the lead time.
                     -- Calculate date after offset lead time
                     l_sysdate_orc_new := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
                                                l_trunc_sysdate, l_atp_rec.shipping_cal_code, 1,
                                                l_atp_rec.intransit_cal_code, nvl(l_atp_rec.delivery_lead_time, 0), 1,
                                                l_atp_rec.receiving_cal_code, 1, p_instance_id);
                     -- Calculate LAD after lead time taken in consideration
                     l_atp_table.latest_acceptable_date(i) := GREATEST(NVL(l_atp_table.latest_acceptable_date(i),
                                                                l_atp_table.requested_arrival_date(i)),l_atp_table.requested_arrival_date(i),
                                                                l_sysdate_orc_new);
                   END IF;
                END IF;

                -- bug 8996352
                ElSE
                    IF   l_atp_table.requested_ship_date(i) IS NOT NULL THEN
                         l_atp_table.latest_acceptable_date(i) := GREATEST(NVL(l_atp_table.latest_acceptable_date(i),
                                                                l_atp_table.requested_ship_date(i)),l_atp_table.requested_ship_date(i));
                    ELSE
                         l_atp_table.latest_acceptable_date(i) := GREATEST(NVL(l_atp_table.latest_acceptable_date(i),
                                                                l_atp_table.requested_arrival_date(i)),l_atp_table.requested_arrival_date(i));
                    END IF;
								END IF;

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('LAD: ' || l_atp_table.latest_acceptable_date(i));
                   msc_sch_wb.atp_debug('l_sysdate_orc: ' || l_sysdate_orc);
                   msc_sch_wb.atp_debug('l_sysdate_osc: ' || l_sys_next_date);
                   msc_sch_wb.atp_debug('l_sysdate_orc_new: ' || l_sysdate_orc_new); --bug4291375
                   msc_sch_wb.atp_debug('l_past_due_ship_date : ' || l_past_due_ship_date); --bug4291375
                   msc_sch_wb.atp_debug('requested_arrival_date: ' || l_atp_table.requested_arrival_date(i));
                   msc_sch_wb.atp_debug('requested_ship_date: ' || l_atp_table.requested_ship_date(i));
                END IF;
                --bug3439591 end
                -- dsting setproc
                MSC_ATP_PROC.Process_Set_Line(l_atp_table, i, l_line_status);
                Process_Time_Stamp_Errors(l_atp_table,i);
                msc_sch_wb.atp_debug('ship_date:(After) ' ||  to_char(l_atp_table.ship_date(i), 'DD-MON-YYYY HH24:MI:SS'));
                msc_sch_wb.atp_debug('Arrival_date:(After) ' ||  to_char(l_atp_table.arrival_date(i), 'DD-MON-YYYY HH24:MI:SS'));
                IF l_ship_count = 1 and l_arrival_count = 1 THEN
                   l_set_status := l_line_status;
                END iF;
                -- 2902129
                IF l_arrival_count > 1 THEN
                   l_overall_status := l_line_status;
                END IF;
                IF l_line_status = ALLSUCCESS THEN
                  l_stmt := 260;
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'inside the range in case 2');
                  END IF;

                  -- we are inside the latest acceptable range
                  -- remember, l_atp_rec.error_code = ALLSUCCESS means
                  -- we can satisfy the request on the request date.

                  -- if it is just an inquiry, we need to rollback

                  -- 2266808: krajan : 04/16

                  --IF (l_atp_rec.Action = ATPQUERY) THEN
                    -- 1225631: we only undo when
                    -- 1: the ship set is done (ship set exists) or
                    -- 2: the arrival set is done (arrival set exists) or
                    -- 3: the single line is done (no set exists)

                  IF (l_atp_rec.Action = ATPQUERY) and
                      (
                      -- 2902265 handle arrival set later
                      --(l_arrival_count > 1 AND k = l_arrival_count) OR
                      (l_ship_count > 1 AND i = l_ship_count) OR
                      (l_ship_count = 1 AND l_arrival_count = 1)) THEN

                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'bug 1225631');
                    END IF;
                     --3720018 , Global array MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC is used to append records
                     -- in case of ATP Inquiry. This global array will be used to call remove_invalid_sd_rec
                     -- From request level (Call_schedule)
                    IF MSC_ATP_PVT.G_PEGGING_FOR_SET IS NOT NULL and MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT > 0 THEN
                       l_count := MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST.count;
                       MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST.extend(MSC_ATP_PVT.G_PEGGING_FOR_SET.count);
                       MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PLAN_ID_REQUEST.extend(MSC_ATP_PVT.G_PEGGING_FOR_SET.count);
                       MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_DC_ATP_FLAG_REQUEST.extend(MSC_ATP_PVT.G_PEGGING_FOR_SET.count);
                       FOR m in 1..MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT LOOP
                          IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('Schedule: ' || MSC_ATP_PVT.G_PEGGING_FOR_SET(m));
                          END IF;
                          MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST(l_count + m) := MSC_ATP_PVT.G_PEGGING_FOR_SET(m);
                          MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PLAN_ID_REQUEST(l_count + m) := l_plan_id;
                          MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_DC_ATP_FLAG_REQUEST(l_count + m) := MSC_ATP_PVT.G_PEGGING_FOR_SET(m);
                       END LOOP;
                    END IF;

                    /* --3720018, donot call remove_invalid_sd_rec here
                     FOR i in 1..MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT LOOP
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'in the loop');
                      END IF;
                      MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
  			MSC_ATP_PVT.G_PEGGING_FOR_SET(i)  ,
                        p_instance_id,
                        l_plan_id,
                        UNDO,
                        MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),
  			l_return_status);

                    END LOOP; */ --3720018

                  ELSE
                -- 2266808: krajan : 04/16

                    IF l_atp_rec.error_code = ATP_REQ_DATE_FAIL THEN
                      l_sd_qty := l_atp_rec.quantity_ordered;
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'i := ' || i);
                         msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_REQ_DATE_QTY(i) := ' || MSC_ATP_PVT.G_REQ_DATE_QTY(i));
                         msc_sch_wb.atp_debug('Schedule: ' || 'MSC_ATP_PVT.G_REQ_ATP_DATE(i) := ' || MSC_ATP_PVT.G_REQ_ATP_DATE(i));
                      END IF;
                      -- rajjain begin 01/30/2003 Bug 2777661
                      -- bug 2795053-reopen (ssurendr): Do date offset for override case as well
                      -- IF NVL(l_atp_rec.override_flag, 'N') = 'Y' THEN
                      --    l_sd_date := l_atp_rec.ship_date;
                      -- ELSE
                      l_sd_date := l_atp_rec.ship_date;
                      /* s_cto_rearch: do not honor atp lead time
                         l_sd_date := MSC_CALENDAR.DATE_OFFSET(
                                                   l_atp_rec.organization_id,
                                                   p_instance_id,
                                                   1,
                                                   l_atp_rec.ship_date,
                                                   -NVL(l_atp_rec.atp_lead_time, 0));
                      e_cto_rearch*/

                      /* ship_rec_cal Determine order date type*/
                      IF l_atp_table.requested_arrival_date(i) is not null THEN
                            l_order_date_type := 2;
                      ELSE
                            l_order_date_type := 1;
                      END IF;

	              IF PG_DEBUG in ('Y', 'C') THEN
	                   msc_sch_wb.atp_debug('Schedule: ' || 'l_order_date_type : ' || l_order_date_type);
	              END IF;

                      --Bug 3226083
                      l_atp_insert_rec := l_atp_rec;
                      l_atp_insert_rec.inventory_item_id := l_pf_dest_id;
                      l_atp_insert_rec.request_item_id := l_mem_dest_id;
                      l_atp_insert_rec.origination_type := 30;

                      MSC_ATP_DB_UTILS.Update_SD_Date(l_atp_rec.demand_source_line ,
                             p_instance_id,
                             l_sd_date,
                             l_plan_id,
                             l_sd_qty,
                             MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),
                             MSC_ATP_PVT.G_REQ_ATP_DATE(i),
                             MSC_ATP_PVT.G_REQ_DATE_QTY(i), -- Bug 1501787
                             l_dmd_satisfied_date, -- bug 2795053-reopen (ssurendr)
                             l_atp_rec.used_available_quantity,  -- For time_phased_atp bug3409973
                             l_atp_rec.atf_date,            -- For time_phased_atp
                             l_atp_rec.atf_date_quantity,   -- For time_phased_atp
			     l_atp_rec.arrival_date,            -- For ship_rec_cal
                             l_order_date_type,                 -- For ship_rec_cal
                             l_atp_rec.latest_acceptable_date,  -- For ship_rec_cal
                             l_atp_rec.ship_set_name,           -- For Plan by Request Date
                             l_atp_rec.arrival_set_name,        -- For Plan by Request Date
                             l_atp_rec.override_flag,           -- For Plan by Request Date
                             l_original_req_arrival_date,       -- For Plan by Request Date
                             l_bkwd_pass_atf_date_qty,            -- For time_phased_atp bug3397904
                             l_atp_insert_rec                  -- For bug 3226083
                             );

                    END IF;
                  END IF;
                  l_stmt := 270;

                  -- 1873918: PDS-ODS fix

                  IF ((l_atp_table.Action(i) = ATPQUERY) AND
                     ((l_atp_table.Error_Code(i) = ATP_NOT_APPL) OR
                     (l_atp_table.Error_Code(i) = PDS_TO_ODS_SWITCH))) THEN
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'l_atp_table.Error_Code(i)='||l_atp_table.Error_Code(i));
                    END IF;
                  ELSE
                    l_atp_table.Error_Code(i) := ALLSUCCESS;
                  END IF;

                  l_stmt := 280;

                  -- since we are successful,increase l_set_element_success by 1

                  l_set_element_success := l_set_element_success + 1;

                  -- need to do something for the set if we are done
                  -- with this set
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_ship_count := ' ||l_ship_count);
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_stmt := ' || l_stmt);
                     msc_sch_wb.atp_debug('Schedule: ' || 'stmt - l_set_element_success := ' || l_set_element_success);
                  END IF;
                  IF (i = l_ship_count) AND (l_ship_count > 1 ) THEN

                      l_stmt := 290;
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'l_stmt:= ' || l_stmt);
                      END IF;

                      -- this is a set, make sure this set is successful

                      -- dsting setproc
                      MSC_ATP_PROC.Process_Set_Dates_Errors(l_atp_table, 'D', l_set_status);
                      -- 2902265
                      l_overall_status := l_set_status;
                      l_group_date := l_atp_table.group_ship_date(1);
                      IF l_set_status = ALLSUCCESS THEN
--                      IF l_set_element_success  = l_atp_table.Action.COUNT AND

                        l_stmt := 300;

			IF PG_DEBUG in ('Y', 'C') THEN
			   msc_sch_wb.atp_debug('Schedule: ' || 'stmt17');
                        END IF;

                        MSC_ATP_PROC.Update_Set_SD_Dates(l_atp_table,l_req_arr_date);
                      END IF;
                      l_stmt := 320;
                  END IF;

                  /* ship_rec_cal changes begin
                     flush sch arrival date, lat acceptable date, order date type in pds for single line */
                  IF (i = 1) AND (l_ship_count = 1 ) THEN
                        l_ship_arrival_date_rec.scheduled_arrival_date := l_atp_table.arrival_date(1);
                        l_ship_arrival_date_rec.latest_acceptable_date := l_atp_table.latest_acceptable_date(1);
                        l_ship_arrival_date_rec.arrival_set_name       := l_atp_table.arrival_set_name(1);
                        l_ship_arrival_date_rec.ship_set_name          := l_atp_table.ship_set_name(1);
                        l_ship_arrival_date_rec.atp_override_flag      := l_atp_table.override_flag(1);
                        l_ship_arrival_date_rec.request_arrival_date   := l_original_req_arrival_date;
                        l_ship_arrival_date_rec.instance_id := p_instance_id;
                        l_ship_arrival_date_rec.plan_id := l_plan_id;

                        /* Read demand_id from madt*/
                        BEGIN
                            SELECT identifier3
                            INTO   l_ship_arrival_date_rec.demand_id
                            FROM   mrp_atp_details_temp
                            WHERE  pegging_id = MSC_ATP_PVT.G_DEMAND_PEGGING_ID
                            AND    session_id = MSC_ATP_PVT.G_SESSION_ID
                            AND    record_type = 3;
                        EXCEPTION
                            WHEN OTHERS THEN
                                l_ship_arrival_date_rec.demand_id := null;
                        END;
                        IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('Schedule: ' || 'l_ship_arrival_date_rec.demand_id = ' || l_ship_arrival_date_rec.demand_id);
                        END IF;

                        /* Determine order date type*/
                        IF l_atp_table.requested_arrival_date(i) is not null THEN
                            l_ship_arrival_date_rec.order_date_type := 2;
                        ELSE
                            l_ship_arrival_date_rec.order_date_type := 1;
                        END IF;
                        IF l_ship_arrival_date_rec.demand_id is not null THEN
	                        IF (G_INV_CTP = 4)THEN
	                        	MSC_ATP_DB_UTILS.Flush_Data_In_Pds(l_ship_arrival_date_rec, l_return_status);
	                        	IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
	                        		IF PG_DEBUG in ('Y', 'C') THEN
	                                        msc_sch_wb.atp_debug('Schedule: ' || 'Error in call to Flush_Data_In_Pds procedure ');
	                        		END IF;
	                        	END IF;
	                        ELSE
	                        	MSC_ATP_DB_UTILS.Flush_Data_In_Ods(l_ship_arrival_date_rec, l_return_status);
	                        	IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
	                        		IF PG_DEBUG in ('Y', 'C') THEN
	                                        msc_sch_wb.atp_debug('Schedule: ' || 'Error in call to Flush_Data_In_Ods procedure ');
	                        		END IF;
	                        	END IF;
	                        END IF;
                        END IF;

                       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('Schedule: ' || 'Error in call to Flush_Data_In_Pds procedure ');
                                END IF;
                                RAISE FND_API.G_EXC_ERROR;
                        END IF;
                  END IF;
                  /* ship_rec_cal changes end */

                  l_stmt := 330;
                  -- dsting setproc
                  IF i = l_atp_table.action.count AND l_set_status = MSC_ATP_PVT.ALLSUCCESS THEN
--                  IF l_set_element_success  = l_atp_table.Action.COUNT THEN
                     l_overall_status := ALLSUCCESS ;
                  END IF;

                  l_stmt := 360;
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_stmt := ' || l_stmt);
                  END IF;

                  -- Added by NGOEL for BUG 1533251, in case ship_date is <= requested_date
                  -- and G_FIND_FUTURE = Y, copy available quantity into request_date quantity.
                  -- This will take care of the situation in case we were able to find some
                  -- additional quantity in forward case but still meet the request date.

                  IF (((l_atp_rec.error_code = ATP_REQ_DATE_FAIL) AND
                     (l_atp_rec.requested_ship_date IS NOT NULL) AND
                     (l_atp_rec.ship_date <= l_atp_rec.requested_ship_date))
                    OR
                     ((l_atp_rec.error_code = ATP_REQ_DATE_FAIL) AND
                     (l_atp_rec.requested_arrival_date IS NOT NULL) AND
                     (l_atp_rec.ship_date+NVL(l_atp_rec.delivery_lead_time,0)
                        <= l_atp_rec.requested_arrival_date))) THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug ('Schedule: ' || 'Bug 1533251');
                           msc_sch_wb.atp_debug ('Schedule: ' || 'l_atp_rec.requested_date_quantity : '||
                                l_atp_rec.requested_date_quantity);
                           msc_sch_wb.atp_debug ('Schedule: ' || 'l_atp_rec.combined_requested_date_qty : '||
                                l_atp_rec.combined_requested_date_qty);
                           msc_sch_wb.atp_debug ('Schedule: ' || 'l_atp_rec.available_quantity : '||
                                l_atp_rec.available_quantity);
                        END IF;

			l_atp_rec.requested_date_quantity := l_atp_rec.available_quantity;
                  END IF;
                  -- End of New Code

                  --diag_atp
                  IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'Reset The error code for diag ATP mode 2');
                    END IF;
                    l_atp_table.Error_Code(i) := MSC_ATP_PVT.DIAGNOSTIC_ATP_ENABLED;
                  END IF;
		ELSE --- bug 1104565

		  -- The request_date fails
		  IF PG_DEBUG in ('Y', 'C') THEN
		     msc_sch_wb.atp_debug('Schedule: ' || 'Date requirements fail vivek');
		  END IF;
                  -- Bug 2266808 : krajan
                  -- dsting setproc
	          IF l_ship_count > 1 AND i = l_ship_count THEN
                     MSC_ATP_PROC.Process_Set_Dates_Errors(l_atp_table, 'D', l_set_status);
                     l_group_date := l_atp_table.group_ship_date(1);
                  END IF;

	          --IF i <> l_ship_count OR (l_atp_table.Action(i) = ATPQUERY AND l_ship_count =1)
	          --OR i = l_ship_count THEN --3720018 (removed the IF condition, needto be executed always)
                     ---- this part will be executed for ship set only
                     ---- this part will be executed for ship set only
	             ---- the ship set is not complete as yet
                     ----- we update the S/D date and quantity
                     -- 1225631
                     -- in order to keep the demand picture correctly between
                     -- the items inside a ship/arrival set,
                     -- we need to move the demand date for this set item
                     -- to the ship date

                     -- 1580127
		     IF (l_atp_rec.error_code = ATP_REQ_DATE_FAIL) THEN

	                IF PG_DEBUG in ('Y', 'C') THEN
	                   msc_sch_wb.atp_debug('Schedule: ' || 'Inside ATP_REQ_DATE_FAIL, i : ' || i);
	                   msc_sch_wb.atp_debug('Schedule: ' || 'quantity_ordered : ' || l_atp_rec.quantity_ordered);
	                   msc_sch_wb.atp_debug('Schedule: ' || 'combined qty : ' || l_atp_rec.combined_requested_date_qty);
	                   msc_sch_wb.atp_debug('Schedule: ' || 'order line : ' || l_atp_rec.demand_source_line);
	                END IF;

                        l_sd_qty := l_atp_rec.quantity_ordered;
	                IF PG_DEBUG in ('Y', 'C') THEN
	                   msc_sch_wb.atp_debug('Schedule: ' || 'quantity : ' || l_sd_qty);
	                END IF;

			/* ship_rec_cal Determine order date type*/
                        IF l_atp_table.requested_arrival_date(i) is not null THEN
                             l_order_date_type := 2;
                        ELSE
                            l_order_date_type := 1;
                        END IF;
	                IF PG_DEBUG in ('Y', 'C') THEN
	                   msc_sch_wb.atp_debug('Schedule: ' || 'l_order_date_type : ' || l_order_date_type);
	                END IF;

                        --Bug 3226083
                        l_atp_insert_rec := l_atp_rec;
                        l_atp_insert_rec.inventory_item_id := l_pf_dest_id;
                        l_atp_insert_rec.request_item_id := l_mem_dest_id;
                        l_atp_insert_rec.origination_type := 30;

                        MSC_ATP_DB_UTILS.Update_SD_Date(l_atp_rec.demand_source_line ,
                             p_instance_id,
                             l_atp_rec.ship_date,
                             --s_cto_rearch do not honor atp_lead time
                             /*
                             MSC_CALENDAR.DATE_OFFSET(
                             l_atp_rec.organization_id,
                             p_instance_id,
                             1,
                             l_atp_rec.ship_date,
                             -NVL(l_atp_rec.atp_lead_time, 0)),
                             */
                             l_plan_id,
                             l_sd_qty,
                              MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),
                              MSC_ATP_PVT.G_REQ_ATP_DATE(i),
                              MSC_ATP_PVT.G_REQ_DATE_QTY(i), -- Bug 1501787
                              l_dmd_satisfied_date, -- bug 2795053-reopen (ssurendr)
                              l_atp_rec.used_available_quantity,  -- For time_phased_atp bug3409973
                              l_atp_rec.atf_date,            -- For time_phased_atp
                              l_atp_rec.atf_date_quantity, -- For time_phased_atp
                              l_atp_rec.arrival_date,            -- For ship_rec_cal
                              l_order_date_type,                 -- For ship_rec_cal
                              l_atp_rec.latest_acceptable_date,
                              l_atp_rec.ship_set_name,
                              l_atp_rec.arrival_set_name,
                              l_atp_rec.override_flag,
                              l_original_req_arrival_date,
                              l_bkwd_pass_atf_date_qty,             -- For time_phased_atp bug3397904
                              l_atp_insert_rec                   -- For bug 3226083
                              );  -- For ship_rec_cal
	             END IF;
		  --END IF; ---if i = l_ship_count
                   --- Bug 1104565
                  --IF j = l_sources.source_type.count THEN
                     --- ADD the pegging id for the best source
                  --   FOR l_peg_count in 1..l_atp_table.ship_date.count LOOP
                  --      l_atp_table.end_pegging_id(l_peg_count) := l_fst_src_pegging_ids(l_peg_count);
                  --   END LOOP;
                  --END IF;

--		  IF (l_atp_rec.error_code = ATP_REQ_DATE_FAIL) THEN
		  IF (l_atp_table.error_code(i) = ATP_REQ_DATE_FAIL) THEN
		     IF PG_DEBUG in ('Y', 'C') THEN
		        msc_sch_wb.atp_debug('Schedule: ' || 'in case 2, not in acceptable range');
		     END IF;
                     l_atp_table.Error_Code(i) := ATP_ACCEPT_FAIL;

                  END IF;
	        END IF; --- IF l_atp_rec.error_code = "ALLSUCCESS"

                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('arrival cntr k: ' || k);
                        msc_sch_wb.atp_debug('fst src peg count: ' || l_fst_src_pegging_ids.count);
                        msc_sch_wb.atp_debug('i: ' || i);
                        msc_sch_wb.atp_debug('p cnt: ' ||MSC_ATP_PVT.G_pegging_for_set.count);
                        msc_sch_wb.atp_debug('f cnt: ' ||MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.count);
                        msc_sch_wb.atp_debug('d cnt: ' ||MSC_ATP_PVT.G_REQ_ATP_DATE.count);
                        msc_sch_wb.atp_debug('q cnt: ' ||MSC_ATP_PVT.G_REQ_DATE_QTY.count);
                        msc_sch_wb.atp_debug('l_date_higher_src: ' || l_date_higher_src);
                        msc_sch_wb.atp_debug('l_overall_status: ' || l_overall_status);
                     END IF;

                     IF i = l_ship_count THEN

                        IF j=1 or
                           l_overall_status = ALLSUCCESS or
                           (l_date_higher_src = 'N' and l_overall_status
                            in (ATP_REQ_DATE_FAIL, ATP_ACCEPT_FAIL, GROUPEL_ERROR))
                        THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('used src for fst_src_peg');
                           END IF;

                           IF j > 1 THEN
                              FOR l_peg_count in k..l_fst_src_pegging_ids.count loop
                                 MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
                                                l_fst_src_pegging_ids(l_peg_count),
                                                null,
                                                l_plan_id,
                                                UNDO,
                                                l_DEMAND_CLASS_ATP_FLAG(l_peg_count),
                                                l_return_status);
                              END LOOP;

                              l_fst_src_pegging_ids.trim(l_fst_src_pegging_ids.count - k + 1);
                              l_req_atp_date.trim(l_fst_src_pegging_ids.count - k + 1);
                              l_req_date_qty.trim(l_fst_src_pegging_ids.count - k + 1);
                              l_demand_class_atp_flag.trim(l_fst_src_pegging_ids.count - k + 1);
                           END IF;

                           msc_sch_wb.atp_debug('adding to fst_src_peg p');
                           MSC_ATP_PROC.number_arr_cat(l_fst_src_pegging_ids, MSC_ATP_PVT.G_PEGGING_FOR_SET);
                           msc_sch_wb.atp_debug('adding to fst_src_peg d');
                           MSC_ATP_PROC.date_arr_cat(l_req_atp_date, MSC_ATP_PVT.G_REQ_ATP_DATE);
                           msc_sch_wb.atp_debug('adding to fst_src_peg q');
                           MSC_ATP_PROC.number_arr_cat(l_req_date_qty, MSC_ATP_PVT.G_REQ_DATE_QTY);
                           msc_sch_wb.atp_debug('adding to fst_src_peg f');
                           MSC_ATP_PROC.number_arr_cat(l_demand_class_atp_flag, MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG);

                           IF l_overall_status in (MSC_ATP_PVT.ALLSUCCESS,
                                                   MSC_ATP_PVT.ATP_REQ_DATE_FAIL,
                                                   MSC_ATP_PVT.GROUPEL_ERROR,
                                                   MSC_ATP_PVT.ATP_ACCEPT_FAIL)
                           THEN
                              l_date_higher_src := 'Y';
                              msc_sch_wb.atp_debug('have date. l_date_higher_src: ' || l_date_higher_src);
                           END IF;
                           -- cleanup only if not arrival set
                           --3720018 , Global array MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC is used to append records
                           -- in case of ATP Inquiry. This global array will be used to call remove_invalid_sd_rec
                           -- From request level (Call_schedule)
                           IF l_set_status <> ALLSUCCESS and l_arrival_count = 1 THEN
                              IF (l_atp_rec.Action = ATPQUERY AND l_ship_count =1) THEN
                                 IF MSC_ATP_PVT.G_PEGGING_FOR_SET IS NOT NULL and MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT > 0 THEN
                                    l_count := MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST.count;
                                    MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST.extend(MSC_ATP_PVT.G_PEGGING_FOR_SET.count);
                                    MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PLAN_ID_REQUEST.extend(MSC_ATP_PVT.G_PEGGING_FOR_SET.count);
                                    MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_DC_ATP_FLAG_REQUEST.extend(MSC_ATP_PVT.G_PEGGING_FOR_SET.count);
                                    FOR m in 1..MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT LOOP
                                       MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST(l_count + m) := MSC_ATP_PVT.G_PEGGING_FOR_SET(m);
                                       MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PLAN_ID_REQUEST(l_count + m) := l_plan_id;
                                       MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_DC_ATP_FLAG_REQUEST(l_count + m) := MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(m);
                                    END LOOP;
                                 END IF;
                              ELSE  --3720018
                                MSC_ATP_PROC.cleanup_set(p_instance_id,
                                                       l_plan_id,
                                                       MSC_ATP_PVT.G_PEGGING_FOR_SET,
                                                       MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG);
                              END IF; --3720018
                           END IF; --3720018
                        ELSE
                           -- not using these in fst src peg, so always clean up
                           MSC_ATP_PROC.cleanup_set(p_instance_id,
                                                    l_plan_id,
                                                    MSC_ATP_PVT.G_PEGGING_FOR_SET,
                                                    MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG);
                        END IF;

                        MSC_ATP_PVT.G_PEGGING_FOR_SET.DELETE;
                        MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.DELETE;
                        MSC_ATP_PVT.G_REQ_ATP_DATE.DELETE;
                        MSC_ATP_PVT.G_REQ_DATE_QTY.DELETE;

                        IF j =  l_sources.source_type.count THEN
                          IF PG_DEBUG in ('Y', 'C') THEN
                             msc_sch_wb.atp_debug('Schedule: ' || 'l_fst_src_pegging_ids.count'|| l_fst_src_pegging_ids.count);
                          END IF;

                           -- dsting 2741997
                          IF l_ship_count > 1 THEN
                             FOR l_peg_count in 1..l_atp_table.ship_date.count LOOP
                                l_atp_table.end_pegging_id(l_peg_count) := l_fst_src_pegging_ids(l_peg_count);

                             END LOOP;
                          ELSE
                                l_atp_table.end_pegging_id(1) := l_fst_src_pegging_ids(l_fst_src_pegging_ids.count);
                          END IF;
                        END IF;
                     END IF;
--                END IF; -- 2902265 set <> success thing

                -- bug 2266808 code changes end
            ELSE
                -- dsting case 1 => multi_scenario = 1.
                -- multi_scenario is always 0 since complete_scatp is disabled
                -- case 1
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'In case 1');
                END IF;
                IF ((l_atp_rec.error_code = ALLSUCCESS) AND
                    (l_sources.Preferred(j) = 1))
                  OR (l_atp_rec.error_code = ATP_NOT_APPL) THEN

                  IF (l_atp_rec.Action = ATPQUERY) THEN
                    -- 1225631: we only undo when
                    -- 1: the ship set is done (ship set exists) or
                    -- 2: the arrival set is done (arrival set exists) or
                    -- 3: the single line is done (no set exists)
                   IF (l_arrival_count > 1 AND k = l_arrival_count) OR
                      (l_ship_count > 1 AND i = l_ship_count) OR
                      (l_ship_count = 1 AND l_arrival_count = 1) THEN
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'bug 1225631');
                      END IF;

--                      ROLLBACK to SAVEPOINT start_atp;
                      FOR i in 1..MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT LOOP
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Schedule: ' || 'in the loop');
                        END IF;
                        MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
                          MSC_ATP_PVT.G_PEGGING_FOR_SET(i)  ,
                          p_instance_id,
                          l_plan_id,
                          UNDO,
                          MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),
                          l_return_status);

                      END LOOP;

                      MSC_ATP_PVT.G_PEGGING_FOR_SET.DELETE;
                      MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.DELETE;
                      MSC_ATP_PVT.G_REQ_ATP_DATE.DELETE;
                      MSC_ATP_PVT.G_REQ_DATE_QTY.DELETE;
                       IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('Schedule: ' || 'Do I come here 7');
                       END IF;

                   END IF;
                  END IF;

                  -- since we are successful,increase l_set_element_success by 1

                  l_set_element_success := l_set_element_success + 1;

                  IF (i = l_ship_count) AND (l_ship_count > 1 ) THEN
                      -- this is a set, make sure this set is successful
                        -- dsting setproc
--                      IF l_set_element_success  = l_atp_table.Action.COUNT THEN
                        IF l_set_status = MSC_ATP_PVT.ALLSUCCESS THEN
                        FOR m in 1.. l_ship_count LOOP
                          l_atp_table.Group_Ship_Date(m):= l_group_date;

                          IF (l_atp_table.Action(m)<> ATPQUERY) THEN

                            IF MSC_ATP_PVT.G_INV_CTP = 4 THEN
                                /* time_phased_atp use plan_id populated in l_atp_table.plan_id
                                -- New procedure for obtaining plan data : Supplier Capacity Lead Time proj.
                                -- (SCLT)
                                MSC_ATP_PROC.get_global_plan_info(p_instance_id,
                                            l_atp_table.inventory_item_id(m),
                                            l_atp_table.organization_id(m),
                                            l_atp_table.demand_class(m));

                                l_plan_info_rec := MSC_ATP_PVT.G_PLAN_INFO_REC;
                                -- End New procedure for obtaining plan data : Supplier Capacity Lead Time proj.

                                l_temp_plan_id          := l_plan_info_rec.plan_id;
                                l_temp_assign_set_id    := l_plan_info_rec.assignment_set_id;
                                IF l_atp_table.attribute_07.Exists(m) THEN
                                  l_atp_table.attribute_07(m) := l_plan_info_rec.plan_name;
                                END IF;
                                -- changes for bug 2392456 ends*/
                                l_temp_plan_id := l_atp_table.plan_id(i);

                            ELSE
                                l_temp_plan_id := l_plan_id;
                            END IF;

                            -- ship_rec_cal
                            IF l_atp_table.requested_arrival_date(i) is not null THEN
                                l_order_date_type := 2;
                            ELSE
                                l_order_date_type := 1;
                            END IF;

                            MSC_ATP_DB_UTILS.Update_SD_Date(p_atp_table.Identifier(m),
                             p_instance_id, l_group_date, l_temp_plan_id,null,
                               MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),
                               MSC_ATP_PVT.G_REQ_ATP_DATE(i),
                               MSC_ATP_PVT.G_REQ_DATE_QTY(i), -- Bug 1501787
                               l_group_date, -- bug 2795053-reopen (ssurendr)
                               null,                    -- For time_phased_atp
                               l_atp_table.atf_date(m), -- For time_phased_atp
                               null,                    -- For time_phased_atp
                               l_group_arrival_date,                    -- For ship_rec_cal
                               l_order_date_type,                       -- For ship_rec_cal
                               l_atp_table.latest_acceptable_date(m),   -- For ship_rec_cal
                               l_atp_table.ship_set_name(m),		--Plan by request date
                               l_atp_table.arrival_set_name(m),		--Plan by request date
                               l_atp_table.override_flag(m),		--Plan by request date
			       l_original_req_arrival_date,     	--Plan by request date
			       null                             --l_bkwd_pass_atf_date_qty bug3397904
                               );
                              END IF;
	                 END LOOP;

                      ELSE

                        -- this set is not successful
                        FOR m in 1.. l_ship_count LOOP
                          l_atp_table.Group_Ship_Date(m):= l_group_date;
                          IF (l_atp_table.Error_Code(m)= ALLSUCCESS) THEN
                            l_atp_table.Error_Code(m) := GROUPEL_ERROR;
                          END IF;

                        END LOOP;

                        -- 1072816  need to do something to undo

                        FOR i in 1..MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT LOOP
                          IF PG_DEBUG in ('Y', 'C') THEN
                             msc_sch_wb.atp_debug('Schedule: ' || 'in the loop');
                          END IF;
                          MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
                            MSC_ATP_PVT.G_PEGGING_FOR_SET(i)  ,
                            p_instance_id,
                            l_plan_id,
                            UNDO,
                            MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),
                            l_return_status);

                        END LOOP;

                        MSC_ATP_PVT.G_PEGGING_FOR_SET.DELETE;
                        MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.DELETE;
		        MSC_ATP_PVT.G_REQ_ATP_DATE.DELETE;
                        MSC_ATP_PVT.G_REQ_DATE_QTY.DELETE;
                         IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('Schedule: ' || 'Do I come here 8');
                         END IF;

                      END IF;
                  END IF;

                  IF i = l_ship_count THEN
                    l_temp_atp_table := l_atp_table;
                  END IF;

                  MSC_ATP_PROC.Details_Output(l_atp_period,
                                 l_atp_supply_demand,
                                 l_temp_atp_period,
                                 l_temp_atp_supply_demand,
                                 l_return_status);

                  -- now exit the loop since we are successful
--                  IF l_set_element_success  = l_atp_table.Action.COUNT THEN
                  IF l_set_status = MSC_ATP_PVT.ALLSUCCESS THEN
                     l_overall_status := ALLSUCCESS ;
                  END IF;


                ELSE
                  -- here we want the the info from ALL warehouses, so
                  -- we cannot just copy the records of table over,
                  -- we need to append to the temp.

--                  ROLLBACK to SAVEPOINT start_atp;

                  -- 1225631
                  IF ((l_ship_count = 1 AND l_arrival_count = 1) OR
                     (l_arrival_count > 1 AND k = l_arrival_count) OR
                     (l_ship_count > 1 AND i = l_ship_count) ) THEN

                    FOR i in 1..MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT LOOP
                      MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
                          MSC_ATP_PVT.G_PEGGING_FOR_SET(i)  ,
                          p_instance_id,
                          l_plan_id,
                          UNDO,
                          MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),
                          l_return_status);

                    END LOOP;

                    MSC_ATP_PVT.G_PEGGING_FOR_SET.DELETE;
                    MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.DELETE;
                    MSC_ATP_PVT.G_REQ_ATP_DATE.DELETE;
                    MSC_ATP_PVT.G_REQ_DATE_QTY.DELETE;
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: ' || 'Do I come here 9');
                     END IF;
                  END IF;

                  IF (i = l_ship_count) AND (l_ship_count > 1 ) THEN
                    -- this set is not successful
                    FOR m in 1.. l_ship_count LOOP
                      l_atp_table.Group_Ship_Date(m):= l_group_date;
                      IF (l_atp_table.Error_Code(m)= ALLSUCCESS) THEN
                        l_atp_table.Error_Code(m) := GROUPEL_ERROR;
                      END IF;
                    END LOOP;

                    -- 1072816  need to do something to undo

                    FOR i in 1..MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT LOOP
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'in the loop');
                      END IF;
                      MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
                        MSC_ATP_PVT.G_PEGGING_FOR_SET(i)  ,
                        p_instance_id,
                        l_plan_id,
                        UNDO,
                        MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),
                        l_return_status);

                    END LOOP;

                    MSC_ATP_PVT.G_PEGGING_FOR_SET.DELETE;
                    MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.DELETE;
		    MSC_ATP_PVT.G_REQ_ATP_DATE.DELETE;
                    MSC_ATP_PVT.G_REQ_DATE_QTY.DELETE;
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Schedule: ' || 'Do I come here 10');
                     END IF;

                  END IF;

                  IF i = l_ship_count THEN

                    MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_table,
                                          l_temp_atp_table,
                                          l_return_status );

                  END IF;

                  MSC_ATP_PROC.Details_Output(l_atp_period,
                                 l_atp_supply_demand,
                                 l_temp_atp_period,
                                 l_temp_atp_supply_demand,
                                 l_return_status);

                END IF;

            END IF; -- end if l_multi_scenario = 0

            -- 1497368: now work on the output record of tables.
            -- do this only if this is the end of the set or line

            IF i = l_ship_count THEN
               IF l_overall_status = ALLSUCCESS THEN

                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'l_overall_status = ALLSUCCESS');
                  END IF;

                  l_temp_atp_table := l_atp_table;

                  IF l_ship_count > 1 THEN
                    -- ship set case
                    -- the curr one is sucessful
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'l_ship_count > 1');
                    END IF;

                    l_temp_atp_period := l_curr_atp_period;
                    l_temp_atp_supply_demand := l_curr_atp_supply_demand;
                  ELSE
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'in the ELSE of (l_ship_count > 1)');
                    END IF;

                    -- single line (do not need to consider  arrival set here)
                    l_temp_atp_period := l_atp_period;
                    l_temp_atp_supply_demand := l_atp_supply_demand;

                  END IF;

               ELSE
                  -- we fails
                  -- we need to know if we got a date or not, and we need to know
                  -- if l_temp_atp_table is empty or not

                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: ' || 'in the ELSE of l_overall_status = ALLSUCCESS');
                  END IF;

                  IF l_ship_count > 1 THEN

                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'l_ship_count > 1');
                    END IF;

                    -- this is a set
                    IF (l_group_date IS NOT NULL) AND
                        (l_arr_no_date = 'Y') THEN

                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'in the l_group_date is not null and l_arr_no_date = Y');
                      END IF;
                      l_temp_atp_table := l_atp_table;
                      l_temp_atp_period := l_curr_atp_period;
                      l_temp_atp_supply_demand := l_curr_atp_supply_demand;
                      l_arr_no_date := 'N';
                    ELSIF j = 1 THEN -- this is the first warehouse
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'in the ELSIF j = 1 of (l_group_date is not null and l_arr_no_date = Y)');
                      END IF;
                      l_temp_atp_table := l_atp_table;
                      l_temp_atp_period := l_curr_atp_period;
                      l_temp_atp_supply_demand := l_curr_atp_supply_demand;
                      l_arr_no_date := 'Y';
                    END IF;

                  ELSE

                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Schedule: ' || 'in the ELSE of (l_ship_count > 1)');
                    END IF;

                    -- this is a line
                    IF (l_atp_rec.ship_date IS NOT NULL) AND
                        (l_arr_no_date = 'Y') THEN
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'in the l_atp_rec.ship_date is not null and l_arr_no_date = Y');
                      END IF;
                      l_temp_atp_table := l_atp_table;
                      l_temp_atp_period := l_atp_period;
                      l_temp_atp_supply_demand := l_atp_supply_demand;
                      l_arr_no_date := 'N';
                    ELSIF j = 1 THEN -- this is the first warehouse
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Schedule: ' || 'in the ELSIF j = 1 of (l_group_date is not null and l_arr_no_date = Y)');
                      END IF;
                      l_temp_atp_table := l_atp_table;
                      l_temp_atp_period := l_atp_period;
                      l_temp_atp_supply_demand := l_atp_supply_demand;
                      l_arr_no_date := 'Y';
                    END IF;
                  END IF; -- l_ship_count > 1
               END IF; -- IF l_overall_status = ALLSUCCESS THEN
            END IF;-- i = l_ship_count
            -- reinitialize record of tables
            l_atp_supply_demand := l_null_atp_supply_demand ;
            l_atp_period := l_null_atp_period;
            l_atp_details := l_null_atp_details ;

            /* time_phased_atp
               set l_time_phased_set to Y if it has already not been set*/
            IF l_time_phased_set <> 'Y' and l_time_phased_atp = 'Y' THEN
                l_time_phased_set := 'Y';
            END IF;

            /* time_phased_atp
               set G_TIME_PHASED_SET to Y if it has already not been set*/
            IF G_TIME_PHASED_SET <> 'Y' and l_time_phased_atp = 'Y' THEN
                G_TIME_PHASED_SET := 'Y';
            END IF;

            -- if ship set exists, we need to loop through the set
            IF l_ship_count > 1 THEN
              i := l_atp_table.Action.NEXT(i);
            ELSE
              i := NULL;
            END IF;

          -- BEGIN Bug 2400781
          -- Re-assign the global variables
          MSC_ATP_PVT.G_INV_CTP := l_inv_ctp;
          -- ATP4drp re-set using original profile value
          MSC_ATP_PVT.G_ALLOCATED_ATP := MSC_ATP_PVT.G_ORIG_ALLOC_ATP;
          -- End ATP4drp
          MSC_ATP_PVT.G_ALLOCATION_METHOD := l_allocation_method;
          --5221865 in the end of i loop we should re-set by original value.
          MSC_ATP_PVT.G_FORWARD_ATP := l_forward_atp;
          IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Schedule: ' || 'Reset Destination INV_CTP '
                                   || MSC_ATP_PVT.G_INV_CTP);
             --5221865
             msc_sch_wb.atp_debug('Schedule: ' || 'Reset Destination G_FORWARD_ATP '
                                   || MSC_ATP_PVT.G_FORWARD_ATP);
          END IF;
          -- The local variables were assigned at the beginning of the Loop
          -- Values should be reset after every ship-set row.
          -- END Bug 2400781

          END LOOP; -- end of i loop for ship set

          -- reinitialize record of tables
          l_atp_supply_demand := l_null_atp_supply_demand ;
          l_atp_period := l_null_atp_period;
          l_atp_details := l_null_atp_details ;
          l_set_element_success := 0;

          l_curr_atp_supply_demand := l_null_atp_supply_demand ;
          l_curr_atp_period := l_null_atp_period;

          j := l_sources.source_type.NEXT(j);

         END LOOP;  -- end of j loop for warehouse
         --- Bug 1104565
         --IF j = l_sources.source_type.count THEN
         --   --- ADD the pegging id for the best source
         --   FOR l_peg_count in 1..l_atp_table.ship_date.count LOOP
         --     l_atp_table.end_pegging_id(l_peg_count) := l_fst_src_pegging_ids(1);
         --   END LOOP;
         --END IF;

         IF (l_temp_atp_table.Action.COUNT > 0) THEN

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'I am here!!!');
           END IF;
           -- we need to assign oe_flag for oe to indicate which
           -- scenario they should show to users if we return multiple
           -- scenarios.  Now we need to pick one which is inside the
           -- latest acceptable range


           IF l_multi_scenario = 1 THEN

            l_oe_demand_flag := 'N';

             FOR m in 1..l_sources.source_type.COUNT LOOP

               IF l_oe_demand_flag = 'N' THEN -- if we haven't find the scenario
                 l_temp := 0;

                 FOR j in ((m-1)*l_ship_count+1)..(m*l_ship_count) LOOP
                   IF(((l_temp_atp_table.requested_ship_date(j) IS NOT NULL) AND
                       (l_temp_atp_table.ship_date(j)
                      <= NVL(l_temp_atp_table.latest_acceptable_date(j),
                             l_temp_atp_table.requested_ship_date(j))))
                      OR
                    ((l_temp_atp_table.requested_arrival_date(j)IS NOT NULL) AND
                      (l_temp_atp_table.ship_date(j)+
                      NVL(l_temp_atp_table.delivery_lead_time(j), 0)
                      <= NVL(l_temp_atp_table.latest_acceptable_date(j),
                             l_temp_atp_table.requested_arrival_date(j))))) THEN


                    -- inside the acceptable range
                       l_temp := l_temp +1;
                   ELSE
                       -- not in the range, then we can exit the j loop since
                       -- this i th scenario won't be the right one.
                       -- however, if we only have one source here, then
                       -- even if it is not in the range, we should return
                       -- this to OE.
                       IF l_sources.source_type.COUNT = 1 THEN
                          l_temp :=  l_temp +1;
                       ELSE
                          EXIT;
                       END IF;
                   END IF;
                 END LOOP;  -- end of j loop

                 IF l_temp = l_ship_count THEN  -- l_ship_count = 1 for a line
                 -- we find the right scenario (m) for oe
                   l_oe_demand_flag := 'Y';
                   FOR j in ((m-1)*l_ship_count+1)..(m*l_ship_count) LOOP
                     l_temp_atp_table.OE_Flag(j) := 'Y';
                   END LOOP;
                   EXIT;
                 END IF;
               END IF; -- end if of l_oe_demand_flag
             END LOOP; -- m loop;
           END IF; -- end of l_multi_scenario = 1

           IF l_arrival_count > 1 THEN

             -- if this is an arrival set, since we need to organize the
             -- scenario before we actually store the info into x table,
             -- let's store the info in temp arr table.
             MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_temp_atp_table,
                            l_temp_arr_atp_table,
                            x_return_status );

             MSC_ATP_PROC.Details_Output(l_temp_atp_period,
                     l_temp_atp_supply_demand,
                     l_temp_arr_atp_period,
                     l_temp_arr_atp_supply_demand,
                     x_return_status);
           ELSE
             MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_temp_atp_table,
                            x_atp_table,
                            x_return_status );

             MSC_ATP_PROC.Details_Output(l_temp_atp_period,
                     l_temp_atp_supply_demand,
                     x_atp_period,
                     x_atp_supply_demand,
                     x_return_status);
           END IF;
         END IF;

	 IF PG_DEBUG in ('Y', 'C') THEN
	    msc_sch_wb.atp_debug('Schedule: ' || 'before k := p_atp_table.Arrival_Set_Name.NEXT(i)');
	    msc_sch_wb.atp_debug ('Schedule: ' || 'k :='||to_char(k));
	    msc_sch_wb.atp_debug ('Schedule: ' || 'i :='||to_char(i));
	 END IF;

         IF l_arrival_count > 1 THEN
           k := p_atp_table.Arrival_Set_Name.NEXT(k);
         ELSE
           k := null;
         END IF;

	 IF PG_DEBUG in ('Y', 'C') THEN
	    msc_sch_wb.atp_debug('Schedule: ' || 'after k := p_atp_table.Arrival_Set_Name.NEXT(i)');
	    msc_sch_wb.atp_debug ('Schedule: ' || 'k :='||to_char(k));
	    msc_sch_wb.atp_debug ('Schedule: ' || 'i :='||to_char(i));
	 END IF;

         l_temp_atp_supply_demand := l_null_atp_supply_demand;
         l_temp_atp_period := l_null_atp_period;
         l_temp_atp_details := l_null_atp_details;
         l_temp_atp_table := x_atp_table;
        END LOOP;  -- end of k loop for arrival set

    -- Mark moving ELSE and END IF towards the end of the Schedule Procedure. MARK
    /*
    ELSE

      -- for oe bug fix :  no record for undemand

      MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_table, x_atp_table, x_return_status );

    END IF; -- end if action = ATPQUERY or DEMANDADD or DEMANDMODIFY
    */


      -- now we organize the scenarios for arrival set if arrival set exists.
      -- we will only have 2 scenarios.
      -- 1.  what OE wants.  one warehouse for each item in the arrival set.
      --     consider latest_acceptable_dates
      -- 2.  what MRP wants. may display multiple warehouses for a line
      --     in the arrival set as long as we can satisfy (or close) to the
      --     request.
      -- AND we need to work on group date.

      -- xxxx to be consistent with ship sets...
      IF l_arrival_count > 1 and p_atp_table.quantity_ordered(1) <> 0 THEN
        -- Bug 2259824
	l_group_date := TRUNC(sysdate);--4460369 + MSC_ATP_PVT.G_END_OF_DAY;
        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: 2259824 l_group_date = '||
                 to_char(l_group_date, 'DD-MON-YYYY HH24:MI:SS'));
        END IF;

	IF l_multi_scenario = 1 THEN

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'print data from l_temp_arr_atp_table');
           i := l_temp_arr_atp_table.Action.FIRST;
           WHILE i IS NOT NULL LOOP
	      msc_sch_wb.atp_debug('Schedule: ' || 'l_temp_arr_atp_table.Inventory_Item_Id( ' ||
		   to_char(i) || '):'|| to_char(l_temp_arr_atp_table.Inventory_Item_Id(i)) );
	      msc_sch_wb.atp_debug('Schedule: ' || 'l_temp_arr_atp_table.Source_Organization_Id:' ||
		   to_char(l_temp_arr_atp_table.Source_Organization_Id(i)) );
	      msc_sch_wb.atp_debug('Schedule: ' || 'l_temp_arr_atp_table.Quantity_Ordered:' ||
		   to_char(l_temp_arr_atp_table.Quantity_Ordered(i)) );
	      msc_sch_wb.atp_debug('Schedule: ' || 'l_temp_arr_atp_table.OE_FLAG:' ||
		   l_temp_arr_atp_table.OE_FLAG(i) );
	      i := l_temp_arr_atp_table.Action.NEXT(i);
           END LOOP;
	END IF;

           -- work on the first scenario
           FOR i in 1..l_temp_arr_atp_table.Action.COUNT LOOP
             IF l_temp_arr_atp_table.OE_Flag(i) = 'Y' THEN
               -- For bug 2748730. Move the group date to end of day
	       -- This ensures that group dates are also moved to the end of day
	       l_group_date := greatest(l_group_date,
                               l_temp_arr_atp_table.Ship_Date(i)+
                             NVL(l_temp_arr_atp_table.delivery_lead_time(i),0));
			     --4460369+ MSC_ATP_PVT.G_END_OF_DAY;

               MSC_SATP_FUNC.Assign_Atp_Input_Rec(l_temp_arr_atp_table,
                                    i,
                                    x_atp_table,
                                    l_return_status);

               MSC_ATP_PROC.Get_SD_Period_Rec(l_temp_arr_atp_period,
                                 l_temp_arr_atp_supply_demand,
                                 l_temp_arr_atp_table.Identifier(i),
                                 l_temp_arr_atp_table.Scenario_Id(i),
                                 1,
                                 x_atp_period,
                                 x_atp_supply_demand,
                                 l_return_status);
             END IF;
           END LOOP;

           -- first scenario: populate group date
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'working on group date');
           END IF;
           FOR i in 1..x_atp_table.Action.COUNT LOOP
             x_atp_table.Scenario_Id(i) := 1;
           END LOOP;

           j := x_atp_table.Action.COUNT;
           -- we need to remember this COUNT so that j + 1 is the beginning
           -- of scenario 2.

           -- work on the second scenario

           i:=1;
           FOR k in 1..p_atp_table.Action.COUNT LOOP
             l_total_qty := 0.0;
             l_done_scenario2 := 'N';

             WHILE i IS NOT NULL LOOP
               IF (l_temp_arr_atp_table.Identifier(i)=p_atp_table.Identifier(k))
                   AND (l_temp_arr_atp_table.inventory_item_id(i) =
                        p_atp_table.inventory_item_id(k) ) THEN

                 IF l_done_scenario2 = 'N' THEN

                   -- we only care the warehouse that provides positive
                   -- requested_date_quantity

                     l_total_qty:=l_total_qty +greatest(0,
                               l_temp_arr_atp_table.Requested_Date_Quantity(i));
                     MSC_SATP_FUNC.Assign_Atp_Input_Rec(l_temp_arr_atp_table,
                                        i,
                                        x_atp_table,
                                        l_return_status );

                     MSC_ATP_PROC.Get_SD_Period_Rec(l_temp_arr_atp_period,
                                 l_temp_arr_atp_supply_demand,
                                 l_temp_arr_atp_table.Identifier(i),
                                 l_temp_arr_atp_table.Scenario_Id(i),
                                 2,
                                 x_atp_period,
                                 x_atp_supply_demand,
                                 l_return_status);

                     IF l_total_qty>=l_temp_arr_atp_table.Quantity_Ordered(i) THEN
                       l_done_scenario2 := 'Y';
                     END IF;
                 END IF;
                 i := l_temp_arr_atp_table.Action.NEXT(i);

               ELSE
                 -- for this line we are done, we need to move to next line
                 -- (in k loop)
                 EXIT;
               END IF;
             END LOOP;  -- end of i loop
             IF l_done_scenario2 = 'Y' THEN
               -- for this line we can satisfy on the request date
	       -- For bug 2748730. Move the group date to end of day even if line is overridden
	       -- This ensures that group dates are also moved to the end of day
               l_group_date := TRUNC(Greatest(l_group_date,
                                   p_atp_table.Requested_Arrival_Date(k)));--4460369 + MSC_ATP_PVT.G_END_OF_DAY;
             ELSE
               l_group_date := NULL;
             END IF;
           END LOOP;  -- end of k loop

           -- second scenario: populate group date

           FOR i in j+1..x_atp_table.Action.COUNT LOOP
             x_atp_table.Group_Arrival_Date(i) := l_group_date;
             x_atp_table.OE_Flag(i) := 'N';
             x_atp_table.Scenario_Id(i) := 2;
           END LOOP;

        ELSE
           -- multi_scenario = 0
           -- this is the OE case
           -- get the group date.
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'in arrival set, oe case');
           END IF;

           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_temp_arr_atp_table,
                            x_atp_table,
                            x_return_status );

           MSC_ATP_PROC.Details_Output(l_temp_arr_atp_period,
                     l_temp_arr_atp_supply_demand,
                     x_atp_period,
                     x_atp_supply_demand,
                     x_return_status);

           /* 2896854
           FOR i in 1..x_atp_table.Action.COUNT LOOP
               -- For bug 2748730. Move the group date to end of day even if line is overridden
	       -- This ensures that group dates are also moved to the end of day
	       l_group_date := TRUNC(greatest(l_group_date,
                               l_temp_arr_atp_table.Ship_Date(i)+
                             NVL(l_temp_arr_atp_table.delivery_lead_time(i),0)))
			     + MSC_ATP_PVT.G_END_OF_DAY;
           END LOOP;
           */


           -- 1072816  need to do something to undo

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'l_group_date ='||
			to_char(l_group_date, 'DD-MON-YYYY HH24:MI:SS'));
              msc_sch_wb.atp_debug('Schedule: ' || 'p_atp_table.Requested_Arrival_Date(1) = '||
			to_char(p_atp_table.Requested_Arrival_Date(1), 'DD-MON-YYYY HH24:MI:SS'));
           END IF;
           -- dsting setproc

           -- 2902129 delay set processing til here for arrival set
           MSC_ATP_PROC.Initialize_Set_Processing(x_atp_table);
           for k in 1..x_atp_table.action.count() loop
               MSC_ATP_PROC.Process_Set_Line(x_atp_table, k, l_line_status);
           end loop;

           MSC_ATP_PROC.Process_Set_Dates_Errors(x_atp_table, 'D', l_set_status);
           l_group_date := x_atp_table.group_arrival_date(1);

--           IF l_set_status <> ALLSUCCESS THEN
           IF l_set_status <> ALLSUCCESS OR x_atp_table.action(1) = ATPQUERY
           THEN
             -- arrival set fails/ we need to remove demands
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'before removing the data for arrival set');
             END IF;

             -- 2902265
             MSC_ATP_PROC.cleanup_set(p_instance_id,
                                      l_plan_id,
                                      l_fst_src_pegging_ids,
                                      l_demand_class_atp_flag);
/*
             FOR i in 1..MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT LOOP
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'in the loop');
               END IF;
               MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
                 MSC_ATP_PVT.G_PEGGING_FOR_SET(i)  ,
                 p_instance_id,
                 l_plan_id,
                 UNDO,
                 MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),
                 l_return_status);
             END LOOP;
*/
             MSC_ATP_PVT.G_PEGGING_FOR_SET.DELETE;
             MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.DELETE;
             MSC_ATP_PVT.G_REQ_ATP_DATE.DELETE;
             MSC_ATP_PVT.G_REQ_DATE_QTY.DELETE;
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: ' || 'Do I come here 12');
              END IF;
           ELSE
             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('arrival set succeeded');
             END IF;
             -- dsting setproc

             -- 2902265
             MSC_ATP_PVT.G_PEGGING_FOR_SET := l_fst_src_pegging_ids;
             MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG := l_demand_class_atp_flag;
             MSC_ATP_PVT.G_REQ_ATP_DATE := l_req_atp_DATE;
             MSC_ATP_PVT.G_REQ_DATE_QTY := l_req_date_qty;

             MSC_ATP_PROC.Update_Set_SD_Dates(x_atp_table,l_req_arr_date); --Plan by request date
           END IF;

           FOR i in 1..x_atp_table.Action.COUNT LOOP
             x_atp_table.Scenario_Id(i) := 1;
           END LOOP;

           FOR i in 1..x_atp_period.Level.COUNT LOOP
             x_atp_period.Scenario_Id(i) := 1;
           END LOOP;

           FOR i in 1..x_atp_supply_demand.Level.COUNT LOOP
             x_atp_supply_demand.Scenario_Id(i) := 1;
           END LOOP;

           FOR i in 1..x_atp_details.Level.COUNT LOOP
             x_atp_details.Scenario_Id(i) := 1;
           END LOOP;

        END IF;
      END IF;

      -- Bug 1661545, if scheduling was unsuccessful, make sure that old demand record is
      -- preserved back, as it was updated to 0 in the begining in case of reschedule.

      ---bug 2384224
      IF PG_DEBUG in ('Y', 'C') THEN
        msc_sch_wb.atp_debug('Schedule: Debug l_inv_ctp ' || l_inv_ctp);
        msc_sch_wb.atp_debug('Schedule: Debug G_INV_CTP ' || MSC_ATP_PVT.G_INV_CTP);
        msc_sch_wb.atp_debug('Schedule: Debug x_atp_table.Action(1)' || x_atp_table.Action(1));
      END IF;
      IF /*(l_inv_ctp = 4) AND */ (x_atp_table.Action(1) = DEMANDMODIFY OR --3720018, commented for support of rescheduling in ODS
          x_atp_table.Action(1) = DEMANDADD OR
          x_atp_table.Action(1) = DMDRSVADD) THEN

        /*-- Loop thru the whole set to check if any of the records had failed Scheduling
        -- Update demands to reset the quantity and date in such cases
        -- Not needed if error_code is ALLSUCCESS or ATP_NOT_APPL.
        l_delete_demand_flag := 0;
        FOR m in 1..x_atp_table.Action.COUNT LOOP
            IF (NVL(x_atp_table.error_code(m), -1) NOT IN (0, 61)) THEN
                l_delete_demand_flag := 1;
                EXIT;
            END IF;
        END LOOP; */

        IF NVL(x_atp_table.error_code(1), -1) not in (0, 61) THEN --3720018
            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'before resetting the demands when scheduling failed');
                msc_sch_wb.atp_debug('Schedule: ' || 'rajjain - Single call to Undo_Delete_Row');
            END IF;

            -- rajjain single call to Undo_Delete_Row procedure --3720018
            MSC_ATP_DB_UTILS.Undo_Delete_Row(l_delete_atp_rec.del_identifiers,
                    l_delete_atp_rec.del_plan_ids,
                    p_instance_id,
                    --subst
                    l_delete_atp_rec.del_demand_ids,
                    l_delete_atp_rec.del_inv_item_ids,
                    l_delete_atp_rec.del_copy_demand_ids,        -- For summary enhancement
                    l_delete_atp_rec.del_copy_demand_plan_ids,   -- For summary enhancement
                    l_time_phased_set,            -- For time_phased_atp
                    -- CTO ODR and Simplified Pegging
                    l_delete_atp_rec.del_atp_peg_items,
                    l_delete_atp_rec.del_atp_peg_demands ,
                    l_delete_atp_rec.del_atp_peg_supplies,
                    l_delete_atp_rec.del_atp_peg_res_reqs,
                    l_delete_atp_rec.del_demand_source_type, --cmro
                    -- End CTO ODR and Simplified Pegging
                    l_delete_atp_rec.atp_peg_demands_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.atp_peg_supplies_plan_ids, --Bug 3629191
                    l_delete_atp_rec.atp_peg_res_reqs_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.del_ods_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_demand_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_dem_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_atp_refresh_no, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_atp_refresh_no --3720018, added for support of rescheduling in ODS
                    );

            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'after resetting the demands when scheduling failed');
            END IF;

        ELSE    -- For summary enhancement

           --3720018 ,changes to refer all the records from l_delete_atp_rec

           -- Append copy SO ids for summary enhancement --3720018
           IF l_delete_atp_rec.del_copy_demand_ids IS NOT NULL and l_delete_atp_rec.del_copy_demand_ids.COUNT > 0 THEN
               l_count := MSC_ATP_PVT.G_COPY_DEMAND_ID.count;
               MSC_ATP_PVT.G_COPY_DEMAND_ID.extend(l_delete_atp_rec.del_copy_demand_ids.count);
               MSC_ATP_PVT.G_COPY_DEMAND_PLAN_ID.extend(l_delete_atp_rec.del_copy_demand_ids.count);
               FOR i in 1..l_delete_atp_rec.del_copy_demand_ids.count LOOP
                   MSC_ATP_PVT.G_COPY_DEMAND_ID(l_count + i) := l_delete_atp_rec.del_copy_demand_ids(i);
                   MSC_ATP_PVT.G_COPY_DEMAND_PLAN_ID(l_count + i) := l_delete_atp_rec.del_copy_demand_plan_ids(m);
               END LOOP;
           END IF;

           --Changes for Bug 3629191 : Population of Offset data in Global Records.

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
           END IF;

           IF l_delete_atp_rec.del_demand_ids IS NOT NULL and l_delete_atp_rec.del_demand_ids.COUNT > 0 THEN
              l_count := MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count;
              MSC_ATP_PVT.G_OFF_INSTANCE_ID.extend(l_delete_atp_rec.del_demand_ids.count);
              MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.EXTEND(l_delete_atp_rec.del_demand_ids.count);
              MSC_ATP_PVT.G_OFF_PLAN_ID.EXTEND(l_delete_atp_rec.del_demand_ids.count);
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: l_delete_atp_rec.del_demand_ids ' || l_delete_atp_rec.del_demand_ids.count);
              END IF;
              FOR i in 1..l_delete_atp_rec.del_demand_ids.count LOOP
                  MSC_ATP_PVT.G_OFF_INSTANCE_ID(l_count + i)  := p_instance_id;
                  MSC_ATP_PVT.G_OFF_DEM_TRANS_ID(l_count + i) := l_delete_atp_rec.del_demand_ids(i);
                  MSC_ATP_PVT.G_OFF_PLAN_ID(l_count + i)      := l_delete_atp_rec.del_plan_ids(i);
              END LOOP;
           END IF;

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
           END IF;

           IF l_delete_atp_rec.del_atp_peg_demands IS NOT NULL and l_delete_atp_rec.del_atp_peg_demands.COUNT > 0 THEN
              l_count := MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count;
              MSC_ATP_PVT.G_OFF_INSTANCE_ID.extend(l_delete_atp_rec.del_atp_peg_demands.count);
              MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.EXTEND(l_delete_atp_rec.del_atp_peg_demands.count);
              MSC_ATP_PVT.G_OFF_PLAN_ID.EXTEND(l_delete_atp_rec.del_atp_peg_demands.count);
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: l_delete_atp_rec.del_atp_peg_demands.count ' || l_delete_atp_rec.del_atp_peg_demands.count);
              END IF;
              FOR i in 1..l_delete_atp_rec.del_atp_peg_demands.count LOOP
                  MSC_ATP_PVT.G_OFF_INSTANCE_ID(l_count + i)  := l_delete_atp_rec.off_demand_instance_id(i);
                  MSC_ATP_PVT.G_OFF_DEM_TRANS_ID(l_count + i) := l_delete_atp_rec.del_atp_peg_demands(i);
                  MSC_ATP_PVT.G_OFF_PLAN_ID(l_count + i)      := l_delete_atp_rec.atp_peg_demands_plan_ids(i);
              END LOOP;
           END IF;

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
           END IF;

           IF l_delete_atp_rec.del_atp_peg_supplies IS NOT NULL and l_delete_atp_rec.del_atp_peg_supplies.COUNT > 0 THEN
              l_count := MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count;
              MSC_ATP_PVT.G_OFF_INSTANCE_ID.extend(l_delete_atp_rec.del_atp_peg_supplies.count);
              MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.EXTEND(l_delete_atp_rec.del_atp_peg_supplies.count);
              MSC_ATP_PVT.G_OFF_PLAN_ID.EXTEND(l_delete_atp_rec.del_atp_peg_supplies.count);
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: l_delete_atp_rec.del_atp_peg_supplies.count ' || l_delete_atp_rec.del_atp_peg_supplies.count );
              END IF;
              FOR i in 1..l_delete_atp_rec.del_atp_peg_supplies.count LOOP
                  MSC_ATP_PVT.G_OFF_INSTANCE_ID(l_count + i)  := l_delete_atp_rec.off_supply_instance_id(i);
                  MSC_ATP_PVT.G_OFF_DEM_TRANS_ID(l_count + i) := l_delete_atp_rec.del_atp_peg_supplies(i);
                  MSC_ATP_PVT.G_OFF_PLAN_ID(l_count + i)      := l_delete_atp_rec.atp_peg_supplies_plan_ids(i);
              END LOOP;
           END IF;

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
           END IF;

           IF l_delete_atp_rec.del_atp_peg_res_reqs IS NOT NULL and l_delete_atp_rec.del_atp_peg_res_reqs.COUNT > 0 THEN
              l_count := MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count;
              MSC_ATP_PVT.G_OFF_INSTANCE_ID.extend(l_delete_atp_rec.del_atp_peg_res_reqs.count);
              MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.EXTEND(l_delete_atp_rec.del_atp_peg_res_reqs.count);
              MSC_ATP_PVT.G_OFF_PLAN_ID.EXTEND(l_delete_atp_rec.del_atp_peg_res_reqs.count);
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Schedule: l_delete_atp_rec.del_atp_peg_res_reqs.count  ' || l_delete_atp_rec.del_atp_peg_res_reqs.count );
              END IF;
              FOR i in 1..l_delete_atp_rec.del_atp_peg_res_reqs.count LOOP
                  MSC_ATP_PVT.G_OFF_INSTANCE_ID(l_count + i)  := l_delete_atp_rec.off_res_instance_id(i);
                  MSC_ATP_PVT.G_OFF_DEM_TRANS_ID(l_count + i) := l_delete_atp_rec.del_atp_peg_res_reqs(i);
                  MSC_ATP_PVT.G_OFF_PLAN_ID(l_count + i)      := l_delete_atp_rec.atp_peg_res_reqs_plan_ids(i);
              END LOOP;
           END IF;
           --3720018

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
           END IF;

           --Changes for Bug 3629191: Population of Offset data in Global record ends.

           -- CTO ODR and Simplified Pegging
           IF MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET = 1 THEN

           -- ATP request successfull, create atp pegging
            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Schedule: ' || 'Model present in Set Creating ATP Pegging');
            END IF;

             FOR i in 1..x_atp_table.inventory_item_id.COUNT LOOP
               IF ((x_atp_table.ATO_Model_Line_Id(i) IS NOT NULL) AND
                   (x_atp_table.identifier(i) = NVL(x_atp_table.ATO_Model_Line_Id(i), 0)) AND

                   -- Bug 3334643 Create Pegging only if the Model  configuration
                   -- item ATP request goes against a plan.
                   (x_atp_table.plan_id(i) > 0) AND
                   -- Bug 3343757 Create ATP Simplified pegging only if
                   -- plan_id > 0 and pegging has been generated.
                   (x_atp_table.End_Pegging_Id(i) IS NOT NULL) ) THEN

                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Schedule: Before Call to Create_Atp_Pegging ');
                    msc_sch_wb.atp_debug('Schedule: Plan_id : '|| x_atp_table.plan_id(i) );
                    msc_sch_wb.atp_debug('Schedule: Pegging_id : '|| x_atp_table.End_Pegging_id(i));
                    msc_sch_wb.atp_debug('Schedule: Match Item : '|| x_atp_table.match_item_id(i));
                    msc_sch_wb.atp_debug('Schedule: Item Id : '|| x_atp_table.Inventory_Item_Id(i));
                    msc_sch_wb.atp_debug('Schedule: Req Item : '|| x_atp_table.request_item_id(i));
                 END IF;

                    MSC_ATP_PEG.Create_Atp_Pegging (
                          x_atp_table.End_Pegging_Id(i),
                          p_instance_id,
                          l_old_plan_id(i),
                          x_atp_table.ATO_Model_Line_Id(i),
                          x_atp_table.Config_item_line_id(i),
                          x_atp_table.demand_source_type(i),--cmro
                          l_return_status
                          );
               ELSE
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Schedule: No Call to Create_Atp_Pegging ');
                      msc_sch_wb.atp_debug('Schedule: Plan_id : '|| x_atp_table.plan_id(i) );
                   END IF;

                 -- End Bug 3334643

               END IF;

             END LOOP;

           END IF; -- MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET = 1
           -- End CTO ODR and Simplified Pegging

        END IF;
        --e_cto_rearch
      END IF;     -- Bug 1661545

      /*-- we now insert new picture for each session. Hence we do not need to update old picture
      IF l_inv_ctp = 4 and MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET =1
                       AND NVL(MSC_ATP_PVT.G_SYNC_ATP_CHECK, 'N') = 'N' THEN
         IF  (x_atp_table.action(1) = ATPQUERY or
             ((x_atp_table.Action(1) = DEMANDMODIFY OR
             x_atp_table.Action(1) = DEMANDADD OR
             x_atp_table.Action(1) = DMDRSVADD)
             AND NVL(x_atp_table.error_code(1), -1) not in (0, 61))) THEN

             --failure case
             MSC_ATP_CTO.Maintain_OS_Sourcing(p_instance_id,
                                               x_atp_table,
                                               MSC_ATP_CTO.FAIL);
         ELSE
              --scheduling and success
              MSC_ATP_CTO.Maintain_OS_Sourcing(p_instance_id,
                                                x_atp_table,
                                                MSC_ATP_CTO.Success);
         END IF;

      END IF;
      */

    -- Mark moved ELSE and END IF to here from the previous MARK point.
    ELSE

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: Unscheduling...');
    END IF;

    --Changes for Bug 3629191 : Population of Offset data in Global Records.

    --3720018, arrays to be refered from l_delete_atp_rec.

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
    END IF;

    IF l_delete_atp_rec.del_demand_ids IS NOT NULL and l_delete_atp_rec.del_demand_ids.COUNT > 0 THEN
       l_count := MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count;
       MSC_ATP_PVT.G_OFF_INSTANCE_ID.extend(l_delete_atp_rec.del_demand_ids.count);
       MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.EXTEND(l_delete_atp_rec.del_demand_ids.count);
       MSC_ATP_PVT.G_OFF_PLAN_ID.EXTEND(l_delete_atp_rec.del_demand_ids.count);
       IF PG_DEBUG in ('Y', 'C') THEN
          msc_sch_wb.atp_debug('Schedule: l_delete_atp_rec.del_demand_ids ' || l_delete_atp_rec.del_demand_ids.count);
       END IF;
       FOR i in 1..l_delete_atp_rec.del_demand_ids.count LOOP
           MSC_ATP_PVT.G_OFF_INSTANCE_ID(l_count + i)  := p_instance_id;
           MSC_ATP_PVT.G_OFF_DEM_TRANS_ID(l_count + i) := l_delete_atp_rec.del_demand_ids(i);
           MSC_ATP_PVT.G_OFF_PLAN_ID(l_count + i)      := l_delete_atp_rec.del_plan_ids(i);
       END LOOP;
    END IF;


    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
    END IF;

    IF l_delete_atp_rec.del_atp_peg_demands IS NOT NULL and l_delete_atp_rec.del_atp_peg_demands.COUNT > 0 THEN
       l_count := MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count;
       MSC_ATP_PVT.G_OFF_INSTANCE_ID.extend(l_delete_atp_rec.del_atp_peg_demands.count);
       MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.EXTEND(l_delete_atp_rec.del_atp_peg_demands.count);
       MSC_ATP_PVT.G_OFF_PLAN_ID.EXTEND(l_delete_atp_rec.del_atp_peg_demands.count);
       IF PG_DEBUG in ('Y', 'C') THEN
          msc_sch_wb.atp_debug('Schedule: l_delete_atp_rec.del_atp_peg_demands.count ' || l_delete_atp_rec.del_atp_peg_demands.count);
       END IF;
       FOR i in 1..l_delete_atp_rec.del_atp_peg_demands.count LOOP
           MSC_ATP_PVT.G_OFF_INSTANCE_ID(l_count + i)  := l_delete_atp_rec.off_demand_instance_id(i);
           MSC_ATP_PVT.G_OFF_DEM_TRANS_ID(l_count + i) := l_delete_atp_rec.del_atp_peg_demands(i);
           MSC_ATP_PVT.G_OFF_PLAN_ID(l_count + i)      := l_delete_atp_rec.atp_peg_demands_plan_ids(i);
       END LOOP;
     END IF;


     IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
     END IF;

     IF l_delete_atp_rec.del_atp_peg_supplies IS NOT NULL and l_delete_atp_rec.del_atp_peg_supplies.COUNT > 0 THEN
        l_count := MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count;
        MSC_ATP_PVT.G_OFF_INSTANCE_ID.extend(l_delete_atp_rec.del_atp_peg_supplies.count);
        MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.EXTEND(l_delete_atp_rec.del_atp_peg_supplies.count);
        MSC_ATP_PVT.G_OFF_PLAN_ID.EXTEND(l_delete_atp_rec.del_atp_peg_supplies.count);
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: l_delete_atp_rec.del_atp_peg_supplies.count ' || l_delete_atp_rec.del_atp_peg_supplies.count );
        END IF;
        FOR i in 1..l_delete_atp_rec.del_atp_peg_supplies.count LOOP
             MSC_ATP_PVT.G_OFF_INSTANCE_ID(l_count + i)  := l_delete_atp_rec.off_supply_instance_id(i);
             MSC_ATP_PVT.G_OFF_DEM_TRANS_ID(l_count + i) := l_delete_atp_rec.del_atp_peg_supplies(i);
             MSC_ATP_PVT.G_OFF_PLAN_ID(l_count + i)      := l_delete_atp_rec.atp_peg_supplies_plan_ids(i);
        END LOOP;
     END IF;


     IF PG_DEBUG in ('Y', 'C') THEN
        msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
     END IF;

     IF l_delete_atp_rec.del_atp_peg_res_reqs IS NOT NULL and l_delete_atp_rec.del_atp_peg_res_reqs.COUNT > 0 THEN
        l_count := MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count;
        MSC_ATP_PVT.G_OFF_INSTANCE_ID.extend(l_delete_atp_rec.del_atp_peg_res_reqs.count);
        MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.EXTEND(l_delete_atp_rec.del_atp_peg_res_reqs.count);
        MSC_ATP_PVT.G_OFF_PLAN_ID.EXTEND(l_delete_atp_rec.del_atp_peg_res_reqs.count);
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: l_delete_atp_rec.del_atp_peg_res_reqs.count  ' || l_delete_atp_rec.del_atp_peg_res_reqs.count );
        END IF;
        FOR i in 1..l_delete_atp_rec.del_atp_peg_res_reqs.count LOOP
            MSC_ATP_PVT.G_OFF_INSTANCE_ID(l_count + i)  := l_delete_atp_rec.off_res_instance_id(i);
            MSC_ATP_PVT.G_OFF_DEM_TRANS_ID(l_count + i) := l_delete_atp_rec.del_atp_peg_res_reqs(i);
            MSC_ATP_PVT.G_OFF_PLAN_ID(l_count + i)      := l_delete_atp_rec.atp_peg_res_reqs_plan_ids(i);
        END LOOP;
      END IF;
      IF PG_DEBUG in ('Y', 'C') THEN
         msc_sch_wb.atp_debug('Schedule: G_OFF_DEM_TRANS_ID.count ' || MSC_ATP_PVT.G_OFF_DEM_TRANS_ID.count );
      END IF;
      --3720018

      --Changes for Bug 3629191: Population of Offset data in Global record ends.

      -- for oe bug fix :  no record for undemand

      MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_table, x_atp_table, x_return_status );
      -- CTO ODR and Simplified Pegging
      -- Dealing with the Unschedule process
      IF (x_atp_table.Action(1) = DEMANDMODIFY OR
          x_atp_table.Action(1) = DEMANDADD OR
          x_atp_table.Action(1) = DMDRSVADD) THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: Model in set : ' ||
                                     MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET);
        END IF;

           IF MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET = 1 THEN
             -- Dealing with Unschedule ATP Process.
             -- So Just Delete the old data.
             FOR i in 1..x_atp_table.inventory_item_id.COUNT LOOP
               IF (x_atp_table.ATO_Model_Line_Id(i) IS NOT NULL AND
                   (x_atp_table.identifier(i) = NVL(x_atp_table.ATO_Model_Line_Id(i), 0))) THEN


                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('End Pegging Id Pegging Identifier : ' ||
                                                      x_atp_table.End_Pegging_Id(i));
                     msc_sch_wb.atp_debug('Instance Id p_instance_id : ' || p_instance_id);
                     msc_sch_wb.atp_debug('Model Line Id Model_order_line_id : ' ||
                                                         x_atp_table.ATO_Model_Line_Id(i));
                     msc_sch_wb.atp_debug('Config. Line Id Config_order_line_id : ' ||
                                                       x_atp_table.Config_item_line_id(i));
                     msc_sch_wb.atp_debug('Old Plan Id : ' || l_old_plan_id(i));
                  END IF;

                  DELETE from msc_atp_pegging
                  WHERE  plan_id = l_old_plan_id(i)
                  AND    sales_order_line_id in (
                              NVL( x_atp_table.Config_item_line_id(i), -1),
                               x_atp_table.ATO_Model_Line_Id(i) );

                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Schedule: Number of rows deleted '||
                               ' from Atp Pegging ' || SQL%ROWCOUNT);
                  END IF;
               END IF;
             END LOOP;
           END IF;

      END IF;
      -- End CTO ODR and Simplified Pegging

    END IF; -- end if action = ATPQUERY or DEMANDADD or DEMANDMODIFY
    -- commit;
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('**********End Schedule Procedure************');
    END IF;

EXCEPTION

    WHEN NO_DATA_FOUND THEN
        x_return_status := FND_API.G_RET_STS_ERROR;

        -- Resetting global variables for additional issue encountered while bug 3295831
        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Resetting G_INV_CTP and G_ALLOCATED_ATP' );
        END IF;
        MSC_ATP_PVT.G_INV_CTP := NVL(l_inv_ctp, MSC_ATP_PVT.G_INV_CTP);
        -- ATP4drp re-set using original profile value
        --MSC_ATP_PVT.G_ALLOCATED_ATP := NVL(l_allocated_atp, MSC_ATP_PVT.G_ALLOCATED_ATP);
        MSC_ATP_PVT.G_ALLOCATED_ATP := MSC_ATP_PVT.G_ORIG_ALLOC_ATP;
        -- End ATP4drp
        MSC_ATP_PVT.G_ALLOCATION_METHOD := NVL(l_allocation_method, MSC_ATP_PVT.G_ALLOCATION_METHOD);
        --5221865
        MSC_ATP_PVT.G_FORWARD_ATP := NVL(l_forward_atp,MSC_ATP_PVT.G_FORWARD_ATP);

        -- Modified by NGOEL 12/13/00, replaced x_return_status with l_return_status
        -- Earlier error status was getting overwritten with the error status of the proc.

        -- 2625800: krajan
        ---agilent arrival set bug
        IF l_arrival_count > 1 THEN
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug ('Schedule: ' || 'Inside arrival set error processing');
           END IF;
           --for arrivalset l_atp_table contains only the record that we are processing
           --- so we need to make sure that we add all the records in arrival set to x_atp_tbale
           ---first we add the record we have processed so far
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_temp_arr_atp_table, x_atp_table, l_return_status);
           ---now we add the current reocrd
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_table, x_atp_table, l_return_status);
           --now we assign rest of the record.
           l_count := l_temp_arr_atp_table.inventory_item_id.count + 2;
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'l_count := ' || l_count);
           END IF;
           FOR i in l_count..p_atp_table.inventory_item_id.count LOOP
              MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table, i, x_atp_table, l_return_status);
           END LOOP;
        ELSE
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_table, x_atp_table, l_return_status );
        END IF;

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: NO_DATA_FOUND: Stmt = '||l_stmt);
        END IF;
        -- 1072816  need to do something to undo

        FOR i in 1..MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT LOOP
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Schedule: ' || 'in the loop, i:='||i);
            END IF;
            MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(MSC_ATP_PVT.G_PEGGING_FOR_SET(i), p_instance_id,
              l_plan_id, UNDO, MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG(i),l_return_status);
        END LOOP;

        -- 2902265
        MSC_ATP_PROC.cleanup_set(p_instance_id,
                                 l_plan_id,
                                 l_fst_src_pegging_ids,
                                 l_demand_class_atp_flag);

        MSC_ATP_PVT.G_PEGGING_FOR_SET.DELETE;
        MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.DELETE;
        MSC_ATP_PVT.G_REQ_ATP_DATE.DELETE;
        MSC_ATP_PVT.G_REQ_DATE_QTY.DELETE;
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Do I come here 13');
           msc_sch_wb.atp_debug('Schedule: ' || 'after the fix to remove the data');
        END IF;

    -- Bug 1661545, if scheduling was unsuccessful, make sure that old demand record is
    -- preserved back, as it was updated to 0 in the begining in case of reschedule.

    IF /*(MSC_ATP_PVT.G_INV_CTP = 4) AND */ (x_atp_table.Action(1) = DEMANDMODIFY OR --3720018, commented for support of rescheduling in ODS
        x_atp_table.Action(1) = DEMANDADD OR
        x_atp_table.Action(1) = DMDRSVADD) THEN

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'check if need to reset demands when scheduling failed');
        END IF;

        -- Loop thru the whole set to check if any of the records had failed Scheduling
        -- Update demands to reset the quantity and date in such cases
        -- Not needed if error_code is ALLSUCCESS or ATP_NOT_APPL.

        --bug 2384224: un delete only those demands which are deleted
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'before resetting the demands when scheduling failed');
      	   msc_sch_wb.atp_debug('Schedule: ' || 'rajjain - Single call to Undo_Delete_Row');
        END IF;

        -- rajjain single call to Undo_Delete_Row procedure
        --3720018,changes to refer all the records from l_delete_atp_rec
        MSC_ATP_DB_UTILS.Undo_Delete_Row(l_delete_atp_rec.del_identifiers,
            l_delete_atp_rec.del_plan_ids,
            p_instance_id,
            --subst
            l_delete_atp_rec.del_demand_ids,
            l_delete_atp_rec.del_inv_item_ids,
            l_delete_atp_rec.del_copy_demand_ids,        -- For summary enhancement
            l_delete_atp_rec.del_copy_demand_plan_ids,   -- For summary enhancement
            l_time_phased_set,            -- For time_phased_atp
            -- CTO ODR and Simplified Pegging
            l_delete_atp_rec.del_atp_peg_items,
            l_delete_atp_rec.del_atp_peg_demands ,
            l_delete_atp_rec.del_atp_peg_supplies,
            l_delete_atp_rec.del_atp_peg_res_reqs,
            l_delete_atp_rec.del_demand_source_type, --cmro
            -- End CTO ODR and Simplified Pegging
            l_delete_atp_rec.atp_peg_demands_plan_ids,  --Bug 3629191
            l_delete_atp_rec.atp_peg_supplies_plan_ids, --Bug 3629191
            l_delete_atp_rec.atp_peg_res_reqs_plan_ids,  --Bug 3629191
            l_delete_atp_rec.del_ods_demand_ids, --3720018, added for support of rescheduling in ODS
            l_delete_atp_rec.del_ods_inv_item_ids, --3720018, added for support of rescheduling in ODS
            l_delete_atp_rec.del_ods_demand_src_type, --3720018, added for support of rescheduling in ODS
            l_delete_atp_rec.del_ods_cto_demand_ids, --3720018, added for support of rescheduling in ODS
            l_delete_atp_rec.del_ods_cto_inv_item_ids, --3720018, added for support of rescheduling in ODS
            l_delete_atp_rec.del_ods_cto_dem_src_type, --3720018, added for support of rescheduling in ODS
            l_delete_atp_rec.del_ods_atp_refresh_no, --3720018, added for support of rescheduling in ODS
            l_delete_atp_rec.del_ods_cto_atp_refresh_no --3720018, added for support of rescheduling in ODS
            );

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'after resetting the demands when scheduling failed');
        END IF;

        /* --s_cto_rearch
        IF MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET =1 and NVL(MSC_ATP_PVT.G_SYNC_ATP_CHECK, 'N') = 'N' THEN
              MSC_ATP_CTO.Maintain_OS_Sourcing(p_instance_id,
                                               x_atp_table,
                                               MSC_ATP_CTO.FAIL);
        END IF;
        --e_cto_rearch
        */

    END IF;     -- Bug 1661545


    WHEN FND_API.G_EXC_ERROR THEN
        x_return_status := FND_API.G_RET_STS_ERROR;

        -- Resetting global variables for additional issue encountered while bug 3295831
        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Resetting G_INV_CTP and G_ALLOCATED_ATP' );
        END IF;
        MSC_ATP_PVT.G_INV_CTP := NVL(l_inv_ctp, MSC_ATP_PVT.G_INV_CTP);
        -- ATP4drp re-set using original profile value
        --MSC_ATP_PVT.G_ALLOCATED_ATP := NVL(l_allocated_atp, MSC_ATP_PVT.G_ALLOCATED_ATP);
        MSC_ATP_PVT.G_ALLOCATED_ATP := MSC_ATP_PVT.G_ORIG_ALLOC_ATP;
        -- End ATP4drp
        MSC_ATP_PVT.G_ALLOCATION_METHOD := NVL(l_allocation_method, MSC_ATP_PVT.G_ALLOCATION_METHOD);
        --5221865
        MSC_ATP_PVT.G_FORWARD_ATP := NVL(l_forward_atp,MSC_ATP_PVT.G_FORWARD_ATP);

        -- 2625800: krajan
        ---agilent arrival set bug
        IF l_arrival_count > 1 THEN
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug ('Schedule: ' || 'Inside arrival set error processing');
           END IF;
           --for arrivalset l_atp_table contains only the record that we are processing
           --- so we need to make sure that we add all the records in arrival set to x_atp_tbale
           ---first we add the record we have processed so far
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_temp_arr_atp_table, x_atp_table, l_return_status);
           ---now we add the current reocrd
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_table, x_atp_table, l_return_status);
           --now we assign rest of the record.
           l_count := l_temp_arr_atp_table.inventory_item_id.count + 2;
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'l_count := ' || l_count);
           END IF;
           FOR i in l_count..p_atp_table.inventory_item_id.count LOOP
              MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table, i, x_atp_table, l_return_status);
           END LOOP;
        END IF;

        -- Error Handling Changes
        IF (x_atp_table.Inventory_item_id.COUNT = 0) THEN
                IF (l_atp_table.Inventory_item_id.COUNT = 0) THEN
                        x_atp_table := p_atp_table;
                ELSE
                        x_atp_table := l_atp_table;
                END IF;
        END IF;
        FOR i IN 1..x_atp_table.Action.COUNT LOOP
                --IF x_atp_table.error_code(i) IS NULL OR
                 --  x_atp_table.error_code(i) in (0,61,150) THEN
                  --      x_atp_table.Error_Code(i) := GROUPEL_ERROR;
                --END IF;
                -- Remove invalid SD recs.
                BEGIN
                        SELECT pegging_id INTO l_tmp_pegging_id FROM mrp_atp_details_temp
                                WHERE session_id = MSC_ATP_PVT.G_SESSION_ID
                                AND order_line_id = x_atp_table.identifier(i)
                                AND parent_pegging_id is NULL
                                 AND record_type in (3,4);
                EXCEPTION
                        WHEN others then
                                l_tmp_pegging_id := -1; --Setting to error
                END;
                IF (NVL(l_tmp_pegging_id,-1) <> -1) THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Schedule: ' || 'Now deleting- calling remove invalid SD REC');
                        END IF;
                        MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(l_tmp_pegging_id, null,
                                l_plan_id, UNDO, 1,l_return_status);
                END IF;

        END LOOP;
        IF FND_MSG_PUB.Check_Msg_Level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
                FND_MSG_PUB.Add_Exc_Msg(G_PKG_NAME , 'Schedule');
        END IF;
        -- Error Handling Changes End.

-- INSERT HERE
        -- Error Handling changes - handling for rescheduling case
        IF /*(MSC_ATP_PVT.G_INV_CTP = 4) AND */ (x_atp_table.Action(1) = DEMANDMODIFY OR --3720018, commented for support of rescheduling in ODS
                x_atp_table.Action(1) = DEMANDADD OR
                x_atp_table.Action(1) = DMDRSVADD) THEN

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'check if need to reset demands when scheduling failed');
                END IF;

                -- Loop thru the whole set to check if any of the records had failed Scheduling
                -- Update demands to reset the quantity and date in such cases
                -- Not needed if error_code is ALLSUCCESS or ATP_NOT_APPL.

                --bug 2384224: un delete only those demands which are deleted
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'before resetting the demands when scheduling failed');
                   msc_sch_wb.atp_debug('Schedule: ' || 'single call to Undo_Delete_Row');
               END IF;
               -- rajjain single call to Undo_Delete_Row procedure
               --3720018,changes to refer all the records from l_delete_atp_rec
               MSC_ATP_DB_UTILS.Undo_Delete_Row(l_delete_atp_rec.del_identifiers,
                    l_delete_atp_rec.del_plan_ids,
                    p_instance_id,
                    --subst
                    l_delete_atp_rec.del_demand_ids,
                    l_delete_atp_rec.del_inv_item_ids,
                    l_delete_atp_rec.del_copy_demand_ids,        -- For summary enhancement
                    l_delete_atp_rec.del_copy_demand_plan_ids,   -- For summary enhancement
                    l_time_phased_set,            -- For time_phased_atp
                    -- CTO ODR and Simplified Pegging
                    l_delete_atp_rec.del_atp_peg_items,
                    l_delete_atp_rec.del_atp_peg_demands ,
                    l_delete_atp_rec.del_atp_peg_supplies,
                    l_delete_atp_rec.del_atp_peg_res_reqs,
                    l_delete_atp_rec.del_demand_source_type, --cmro
                    -- End CTO ODR and Simplified Pegging
                    l_delete_atp_rec.atp_peg_demands_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.atp_peg_supplies_plan_ids, --Bug 3629191
                    l_delete_atp_rec.atp_peg_res_reqs_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.del_ods_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_demand_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_dem_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_atp_refresh_no, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_atp_refresh_no --3720018, added for support of rescheduling in ODS
                    );

               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'after resetting the demands when scheduling failed');
               END IF;

               /* --s_cto_rearch
               IF MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET =1 and NVL(MSC_ATP_PVT.G_SYNC_ATP_CHECK, 'N') = 'N' THEN
                     MSC_ATP_CTO.Maintain_OS_Sourcing(p_instance_id,
                                                      x_atp_table,
                                                      MSC_ATP_CTO.FAIL);
               END IF;
               --e_cto_rearch
               */

        END IF;

    -- Error Handling Changes
    -- New Exception Block
    -- Error Handling Insert krajan
    WHEN MSC_ATP_PUB.ATP_INVALID_OBJECTS_FOUND THEN

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'error := ' || sqlerrm);
           msc_sch_wb.atp_debug('Schedule: Invalid Object Found. In it');
        END IF;
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- Resetting global variables for additional issue encountered while bug 3295831
        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Resetting G_INV_CTP and G_ALLOCATED_ATP' );
        END IF;
        MSC_ATP_PVT.G_INV_CTP := NVL(l_inv_ctp, MSC_ATP_PVT.G_INV_CTP);
        -- ATP4drp re-set using original profile value
        --MSC_ATP_PVT.G_ALLOCATED_ATP := NVL(l_allocated_atp, MSC_ATP_PVT.G_ALLOCATED_ATP);
        MSC_ATP_PVT.G_ALLOCATED_ATP := MSC_ATP_PVT.G_ORIG_ALLOC_ATP;
        -- End ATP4drp
        MSC_ATP_PVT.G_ALLOCATION_METHOD := NVL(l_allocation_method, MSC_ATP_PVT.G_ALLOCATION_METHOD);
        --5221865
        MSC_ATP_PVT.G_FORWARD_ATP := NVL(l_forward_atp,MSC_ATP_PVT.G_FORWARD_ATP);

        -- 2625800: krajan
        ---agilent arrival set bug
        IF l_arrival_count > 1 THEN
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug ('Schedule: ' || 'Inside arrival set error processing');
           END IF;
           --for arrivalset l_atp_table contains only the record that we are processing
           --- so we need to make sure that we add all the records in arrival set to x_atp_tbale
           ---first we add the record we have processed so far
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_temp_arr_atp_table, x_atp_table, l_return_status);
           ---now we add the current reocrd
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_table, x_atp_table, l_return_status);
           --now we assign rest of the record.
           l_count := l_temp_arr_atp_table.inventory_item_id.count + 2;
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'l_count := ' || l_count);
           END IF;
           FOR i in l_count..p_atp_table.inventory_item_id.count LOOP
              MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table, i, x_atp_table, l_return_status);
           END LOOP;
        END IF;

        IF (x_atp_table.Inventory_item_id.COUNT = 0) THEN
                IF (l_atp_table.Inventory_item_id.COUNT = 0) THEN
                        x_atp_table := p_atp_table;
                ELSE
                        x_atp_table := l_atp_table;
                END IF;
        END IF;
        FOR i IN 1..x_atp_table.Action.COUNT LOOP
                IF ((NVL(x_atp_table.Error_code(i),-1)) in (-1,0,61,150)) THEN
                        x_atp_table.Error_Code(i) := ATP_INVALID_OBJECTS; -- NO OBJECTS FOUND
                END IF;
                 BEGIN
                        SELECT pegging_id INTO l_tmp_pegging_id FROM mrp_atp_details_temp
                                WHERE session_id = MSC_ATP_PVT.G_SESSION_ID
                                AND order_line_id = x_atp_table.identifier(i)
                                AND parent_pegging_id is NULL
                                 AND record_type in (3,4);
                EXCEPTION
                        WHEN others then
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('Schedule: ' || 'Select EXCEPTION KR :invalid obj');
                                   msc_sch_wb.atp_debug('Schedule: ' || 'error := ' || sqlerrm);
                                END IF;
                                l_tmp_pegging_id := -1; --Setting to error
                END;
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_tmp_pegging_id is ' || l_tmp_pegging_id);
                END IF;
                IF (NVL(l_tmp_pegging_id, -1) <> -1) THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Schedule: ' || 'Now deleting- calling remove invalid SD REC');
                        END IF;
                        MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(l_tmp_pegging_id, null,
                                l_plan_id, UNDO, 1,l_return_status);
                END IF;
        END LOOP;

        IF FND_MSG_PUB.Check_Msg_Level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
            FND_MSG_PUB.Add_Exc_Msg(G_PKG_NAME , 'Schedule');
        END IF;

        -- Error Handling changes - handling for rescheduling case
        IF /*(MSC_ATP_PVT.G_INV_CTP = 4) AND */ (x_atp_table.Action(1) = DEMANDMODIFY OR --3720018, commented for support of rescheduling in ODS
                x_atp_table.Action(1) = DEMANDADD OR
                x_atp_table.Action(1) = DMDRSVADD) THEN

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'check if need to reset demands when scheduling failed');
                END IF;

                -- Loop thru the whole set to check if any of the records had failed Scheduling
                -- Update demands to reset the quantity and date in such cases
                -- Not needed if error_code is ALLSUCCESS or ATP_NOT_APPL.

                --bug 2384224: un delete only those demands which are deleted
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'before resetting the demands when scheduling failed');
               	   msc_sch_wb.atp_debug('Schedule: ' || 'rajjain - Single call to Undo_Delete_Row');
                END IF;
                -- rajjain single call to Undo_Delete_Row procedure
                --3720018,changes to refer all the records from l_delete_atp_rec
                MSC_ATP_DB_UTILS.Undo_Delete_Row(l_delete_atp_rec.del_identifiers,
                    l_delete_atp_rec.del_plan_ids,
                    p_instance_id,
                    --subst
                    l_delete_atp_rec.del_demand_ids,
                    l_delete_atp_rec.del_inv_item_ids,
                    l_delete_atp_rec.del_copy_demand_ids,        -- For summary enhancement
                    l_delete_atp_rec.del_copy_demand_plan_ids,   -- For summary enhancement
                    l_time_phased_set,            -- For time_phased_atp
                    -- CTO ODR and Simplified Pegging
                    l_delete_atp_rec.del_atp_peg_items,
                    l_delete_atp_rec.del_atp_peg_demands ,
                    l_delete_atp_rec.del_atp_peg_supplies,
                    l_delete_atp_rec.del_atp_peg_res_reqs,
                    l_delete_atp_rec.del_demand_source_type, --cmro
                    -- End CTO ODR and Simplified Pegging
                    l_delete_atp_rec.atp_peg_demands_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.atp_peg_supplies_plan_ids, --Bug 3629191
                    l_delete_atp_rec.atp_peg_res_reqs_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.del_ods_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_demand_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_dem_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_atp_refresh_no, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_atp_refresh_no --3720018, added for support of rescheduling in ODS
                    );

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'after resetting the demands when scheduling failed');
                END IF;

                /*--s_cto_rearch
                IF MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET =1 and NVL(MSC_ATP_PVT.G_SYNC_ATP_CHECK, 'N') = 'N' THEN
                      MSC_ATP_CTO.Maintain_OS_Sourcing(p_instance_id,
                                                       x_atp_table,
                                                       MSC_ATP_CTO.FAIL);
                END IF;
                --e_cto_rearch
                */
        END IF;
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: Invalid object encountered in schedule');
        END IF;

    -- Added to handle calendar exceptions : ship_rec_cal
    WHEN NO_MATCHING_DATE_IN_CAL THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'error := ' || sqlerrm);
           msc_sch_wb.atp_debug('Schedule: ' || 'NO_MATCHING_DATE_IN_CAL');
        END IF;
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- Resetting global variables for additional issue encountered while bug 3295831
        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Resetting G_INV_CTP and G_ALLOCATED_ATP' );
        END IF;
        MSC_ATP_PVT.G_INV_CTP := NVL(l_inv_ctp, MSC_ATP_PVT.G_INV_CTP);
        -- ATP4drp re-set using original profile value
        --MSC_ATP_PVT.G_ALLOCATED_ATP := NVL(l_allocated_atp, MSC_ATP_PVT.G_ALLOCATED_ATP);
        MSC_ATP_PVT.G_ALLOCATED_ATP := MSC_ATP_PVT.G_ORIG_ALLOC_ATP;
        -- End ATP4drp
        MSC_ATP_PVT.G_ALLOCATION_METHOD := NVL(l_allocation_method, MSC_ATP_PVT.G_ALLOCATION_METHOD);
        --5221865
        MSC_ATP_PVT.G_FORWARD_ATP := NVL(l_forward_atp,MSC_ATP_PVT.G_FORWARD_ATP);

        IF FND_MSG_PUB.Check_Msg_Level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
            FND_MSG_PUB.Add_Exc_Msg(G_PKG_NAME , 'Schedule');
        END IF;

        -- 2625800: krajan
        ---agilent arrival set bug
        IF l_arrival_count > 1 THEN
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug ('Schedule: ' || 'Inside arrival set error processing');
           END IF;
           --for arrivalset l_atp_table contains only the record that we are processing
           --- so we need to make sure that we add all the records in arrival set to x_atp_tbale
           ---first we add the record we have processed so far
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_temp_arr_atp_table, x_atp_table, l_return_status);
           ---now we add the current reocrd
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_table, x_atp_table, l_return_status);
           --now we assign rest of the record.
           l_count := l_temp_arr_atp_table.inventory_item_id.count + 2;
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'l_count := ' || l_count);
           END IF;
           FOR i in l_count..p_atp_table.inventory_item_id.count LOOP
              MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table, i, x_atp_table, l_return_status);
           END LOOP;
        END IF;

        -- Error Handling krajan
        IF (x_atp_table.Inventory_item_id.COUNT = 0) THEN
                IF (l_atp_table.Inventory_item_id.COUNT = 0) THEN
                        x_atp_table := p_atp_table;
                ELSE
                        x_atp_table := l_atp_table;
                END IF;
        END IF;
        FOR i IN 1..x_atp_table.Action.COUNT LOOP
                IF x_atp_table.error_code(i) IS NULL OR
                   x_atp_table.error_code(i) in (0,61,150) THEN
                        x_atp_table.Error_Code(i) := NO_MATCHING_CAL_DATE;
                END IF;
                BEGIN
                        SELECT pegging_id INTO l_tmp_pegging_id FROM mrp_atp_details_temp
                                WHERE session_id = MSC_ATP_PVT.G_SESSION_ID
                                AND order_line_id = x_atp_table.identifier(i)
                                AND parent_pegging_id is NULL
                                 AND record_type in (3,4);
                EXCEPTION
                        WHEN others then
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('Schedule: ' || 'NO_MATCHING_DATE_IN_CAL');
                                   msc_sch_wb.atp_debug('Schedule: ' || 'error := ' || sqlerrm);
                                END IF;
                                l_tmp_pegging_id := -1; --Setting to error
                END;
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_tmp_pegging_id is ' || l_tmp_pegging_id);
                END IF;
                IF (NVL(l_tmp_pegging_id,-1) <> -1) THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Schedule: ' || 'Now deleting- calling remove invalid SD REC');
                        END IF;
                        MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(l_tmp_pegging_id, null,
                                l_plan_id, UNDO, 1,l_return_status);
                END IF;
        END LOOP;
        IF FND_MSG_PUB.Check_Msg_Level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
                FND_MSG_PUB.Add_Exc_Msg(G_PKG_NAME , 'Schedule');
        END IF;
        -- Error Handling Changes End.
        IF /*(MSC_ATP_PVT.G_INV_CTP = 4) AND */ (x_atp_table.Action(1) = DEMANDMODIFY OR  --3720018, commented for support of rescheduling in ODS
                x_atp_table.Action(1) = DEMANDADD OR
                x_atp_table.Action(1) = DMDRSVADD) THEN

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'check if need to reset demands when scheduling failed');
                END IF;

                -- Loop thru the whole set to check if any of the records had failed Scheduling
                -- Update demands to reset the quantity and date in such cases
                -- Not needed if error_code is ALLSUCCESS or ATP_NOT_APPL.

               --bug 2384224: un delete only those demands which are deleted
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'before resetting the demands when scheduling failed');
                  msc_sch_wb.atp_debug('Schedule: ' || 'rajjain - Single call to Undo_Delete_Row');
               END IF;
               -- rajjain single call to Undo_Delete_Row procedure
               --3720018,changes to refer all the records from l_delete_atp_rec
               MSC_ATP_DB_UTILS.Undo_Delete_Row(l_delete_atp_rec.del_identifiers,
                    l_delete_atp_rec.del_plan_ids,
                    p_instance_id,
                    --subst
                    l_delete_atp_rec.del_demand_ids,
                    l_delete_atp_rec.del_inv_item_ids,
                    l_delete_atp_rec.del_copy_demand_ids,        -- For summary enhancement
                    l_delete_atp_rec.del_copy_demand_plan_ids,   -- For summary enhancement
                    l_time_phased_set,            -- For time_phased_atp
                    -- CTO ODR and Simplified Pegging
                    l_delete_atp_rec.del_atp_peg_items,
                    l_delete_atp_rec.del_atp_peg_demands ,
                    l_delete_atp_rec.del_atp_peg_supplies,
                    l_delete_atp_rec.del_atp_peg_res_reqs,
                    l_delete_atp_rec.del_demand_source_type, --cmro
                    -- End CTO ODR and Simplified Pegging
                    l_delete_atp_rec.atp_peg_demands_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.atp_peg_supplies_plan_ids, --Bug 3629191
                    l_delete_atp_rec.atp_peg_res_reqs_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.del_ods_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_demand_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_dem_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_atp_refresh_no, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_atp_refresh_no --3720018, added for support of rescheduling in ODS
                    );

               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'after resetting the demands when scheduling failed');
               END IF;

               /* --s_cto_rearch
               IF MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET =1 and NVL(MSC_ATP_PVT.G_SYNC_ATP_CHECK, 'N') = 'N' THEN
                     MSC_ATP_CTO.Maintain_OS_Sourcing(p_instance_id,
                                                      x_atp_table,
                                                      MSC_ATP_CTO.FAIL);
               END IF;
               --e_cto_rearch
               */

        END IF;

    WHEN OTHERS THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Schedule: ' || 'error := ' || sqlerrm);
        END IF;
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- Resetting global variables for additional issue encountered while bug 3295831
        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Schedule: ' || 'Resetting G_INV_CTP and G_ALLOCATED_ATP' );
        END IF;
        MSC_ATP_PVT.G_INV_CTP := NVL(l_inv_ctp, MSC_ATP_PVT.G_INV_CTP);
        -- ATP4drp re-set using original profile value
        --MSC_ATP_PVT.G_ALLOCATED_ATP := NVL(l_allocated_atp, MSC_ATP_PVT.G_ALLOCATED_ATP);
        MSC_ATP_PVT.G_ALLOCATED_ATP := MSC_ATP_PVT.G_ORIG_ALLOC_ATP;
        -- End ATP4drp
        MSC_ATP_PVT.G_ALLOCATION_METHOD := NVL(l_allocation_method, MSC_ATP_PVT.G_ALLOCATION_METHOD);
        --5221865
        MSC_ATP_PVT.G_FORWARD_ATP := NVL(l_forward_atp,MSC_ATP_PVT.G_FORWARD_ATP);

        /* Check if this is actually coming from a calendar routine*/
        l_encoded_text := fnd_message.GET_ENCODED;
        IF l_encoded_text IS NULL THEN
                l_msg_app := NULL;
                l_msg_name := NULL;
        ELSE
                fnd_message.parse_encoded(l_encoded_text, l_msg_app, l_msg_name);
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_msg_name := ' || l_msg_name);
                END IF;
        END IF;
        IF l_msg_app='MRP' AND l_msg_name='GEN-DATE OUT OF BOUNDS' THEN
                l_error_code := NO_MATCHING_CAL_DATE;
           IF PG_DEBUG in ('Y', 'C') THEN --bug3583705
                   msc_sch_wb.atp_debug('Schedule: ' || 'NO_MATCHING_CAL_DATE ' );
           END IF;
        ELSE
                l_error_code := ATP_PROCESSING_ERROR;
           IF PG_DEBUG in ('Y', 'C') THEN --bug3583705
                   msc_sch_wb.atp_debug('Schedule: ' || 'ATP_PROCESSING_ERROR ' );
           END IF;
        END IF;

        IF FND_MSG_PUB.Check_Msg_Level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
            FND_MSG_PUB.Add_Exc_Msg(G_PKG_NAME , 'Schedule');
        END IF;

        -- 2625800: krajan
        ---agilent arrival set bug
        IF l_arrival_count > 1 THEN
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug ('Schedule: ' || 'Inside arrival set error processing');
           END IF;
           --for arrivalset l_atp_table contains only the record that we are processing
           --- so we need to make sure that we add all the records in arrival set to x_atp_tbale
           ---first we add the record we have processed so far
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_temp_arr_atp_table, x_atp_table, l_return_status);
           ---now we add the current reocrd
           MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_table, x_atp_table, l_return_status);
           --now we assign rest of the record.
           l_count := l_temp_arr_atp_table.inventory_item_id.count + 2;
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Schedule: ' || 'l_count := ' || l_count);
           END IF;
           FOR i in l_count..p_atp_table.inventory_item_id.count LOOP
              MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table, i, x_atp_table, l_return_status);
           END LOOP;
        END IF;

        -- Error Handling krajan
        IF (x_atp_table.Inventory_item_id.COUNT = 0) THEN
                IF (l_atp_table.Inventory_item_id.COUNT = 0) THEN
                        x_atp_table := p_atp_table;
                ELSE
                        x_atp_table := l_atp_table;
                END IF;
        END IF;

        FOR i IN 1..x_atp_table.Action.COUNT LOOP
                IF x_atp_table.error_code(i) IS NULL OR
                   x_atp_table.error_code(i) in (0,61,150) THEN
                        x_atp_table.Error_Code(i) := l_error_code;
                END IF;
                BEGIN
                        SELECT pegging_id INTO l_tmp_pegging_id FROM mrp_atp_details_temp
                                WHERE session_id = MSC_ATP_PVT.G_SESSION_ID
                                AND order_line_id = x_atp_table.identifier(i)
                                AND parent_pegging_id is NULL
                                 AND record_type in (3,4);
                EXCEPTION
                        WHEN others then
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('Schedule: ' || 'Select EXCEPTION KR: others ');
                                   msc_sch_wb.atp_debug('Schedule: ' || 'error := ' || sqlerrm);
                                END IF;
                                l_tmp_pegging_id := -1; --Setting to error
                END;
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'l_tmp_pegging_id is ' || l_tmp_pegging_id);
                END IF;
                IF (NVL(l_tmp_pegging_id,-1) <> -1) THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Schedule: ' || 'Now deleting- calling remove invalid SD REC');
                        END IF;
                        MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(l_tmp_pegging_id, null,
                                l_plan_id, UNDO, 1,l_return_status);
                END IF;
        END LOOP;
        IF FND_MSG_PUB.Check_Msg_Level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
                FND_MSG_PUB.Add_Exc_Msg(G_PKG_NAME , 'Schedule');
        END IF;
        -- Error Handling Changes End.
        IF /*(MSC_ATP_PVT.G_INV_CTP = 4) AND */ (x_atp_table.Action(1) = DEMANDMODIFY OR --3720018, commented for support of rescheduling in ODS
                x_atp_table.Action(1) = DEMANDADD OR
                x_atp_table.Action(1) = DMDRSVADD) THEN

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Schedule: ' || 'check if need to reset demands when scheduling failed');
                END IF;

                -- Loop thru the whole set to check if any of the records had failed Scheduling
                -- Update demands to reset the quantity and date in such cases
                -- Not needed if error_code is ALLSUCCESS or ATP_NOT_APPL.

               --bug 2384224: un delete only those demands which are deleted
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'before resetting the demands when scheduling failed');
                  msc_sch_wb.atp_debug('Schedule: ' || 'rajjain - Single call to Undo_Delete_Row');
               END IF;
               -- rajjain single call to Undo_Delete_Row procedure
               --3720018,changes to refer all the records from l_delete_atp_rec
               MSC_ATP_DB_UTILS.Undo_Delete_Row(l_delete_atp_rec.del_identifiers,
                    l_delete_atp_rec.del_plan_ids,
                    p_instance_id,
                    --subst
                    l_delete_atp_rec.del_demand_ids,
                    l_delete_atp_rec.del_inv_item_ids,
                    l_delete_atp_rec.del_copy_demand_ids,        -- For summary enhancement
                    l_delete_atp_rec.del_copy_demand_plan_ids,   -- For summary enhancement
                    l_time_phased_set,            -- For time_phased_atp
                    -- CTO ODR and Simplified Pegging
                    l_delete_atp_rec.del_atp_peg_items,
                    l_delete_atp_rec.del_atp_peg_demands ,
                    l_delete_atp_rec.del_atp_peg_supplies,
                    l_delete_atp_rec.del_atp_peg_res_reqs,
                    l_delete_atp_rec.del_demand_source_type, --cmro
                    -- End CTO ODR and Simplified Pegging
                    l_delete_atp_rec.atp_peg_demands_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.atp_peg_supplies_plan_ids, --Bug 3629191
                    l_delete_atp_rec.atp_peg_res_reqs_plan_ids,  --Bug 3629191
                    l_delete_atp_rec.del_ods_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_demand_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_demand_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_inv_item_ids, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_dem_src_type, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_atp_refresh_no, --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_atp_refresh_no --3720018, added for support of rescheduling in ODS
                    );

               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Schedule: ' || 'after resetting the demands when scheduling failed');
               END IF;

               /* --s_cto_rearch
               IF MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET =1 and NVL(MSC_ATP_PVT.G_SYNC_ATP_CHECK, 'N') = 'N' THEN
                     MSC_ATP_CTO.Maintain_OS_Sourcing(p_instance_id,
                                                      x_atp_table,
                                                      MSC_ATP_CTO.FAIL);
               END IF;
               --e_cto_rearch
               */

        END IF;

        -- Commented on 9/13/2001 by ngoel as this was causing subscript beyond count
	-- since exception wasn't trapped until Call_ATP_No_Commit.
--        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
END Schedule;


PROCEDURE ATP_Check (p_atp_record     		IN OUT  NoCopy MRP_ATP_PVT.AtpRec,
                     p_plan_id             	IN   NUMBER,
                     p_level               	IN   NUMBER,
                     p_scenario_id         	IN   NUMBER,
                     p_search              	IN   NUMBER,
                     p_refresh_number      	IN   NUMBER,
                     p_parent_pegging_id   	IN   NUMBER,
                     p_assign_set_id       	IN   NUMBER,
                     x_atp_period          	OUT NOCOPY MRP_ATP_PUB.ATP_Period_Typ,
                     x_atp_supply_demand   	OUT NOCOPY MRP_ATP_PUB.ATP_Supply_Demand_Typ,
                     x_return_status       	OUT  NoCopy VARCHAR2,
                     p_pre_processing_lead_time   IN NUMBER :=0
)
IS

l_delivery_lead_time 		NUMBER;
l_atp_flag 			VARCHAR2(1);
l_atp_comp_flag			VARCHAR2(1);
l_return_status 		VARCHAR2(10);
l_requested_date_quantity	NUMBER;
l_requested_quantity		NUMBER; -- 2621270
l_sub_requested_date_quantity   NUMBER := 0.0;
l_stealing_requested_date_qty   NUMBER := 0.0;
l_stealing_qty                  NUMBER := 0.0;
l_from_location_id		NUMBER;
l_requested_ship_date		DATE;
--Added by avjain for atp impact due to Plan by request date
l_original_req_ship_date	DATE;   -- when item was requested to be shipped
l_ship_method			VARCHAR2(30);
l_to_location_id		NUMBER;
l_atp_date_this_level		DATE;
l_atp_date_quantity_this_level	NUMBER;
l_sources			MRP_ATP_PVT.Atp_Source_Typ;
i                               PLS_INTEGER;
j				PLS_INTEGER;
l_atp_rec			MRP_ATP_PVT.AtpRec;
l_net_demand			NUMBER := 0; --5478124
l_sched_status			BOOLEAN;
l_atp_insert_rec		MRP_ATP_PVT.AtpRec;
l_atp_period                    MRP_ATP_PUB.ATP_Period_Typ;
l_atp_period_first              MRP_ATP_PUB.ATP_Period_Typ;
l_atp_supply_demand             MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_res_atp_period                MRP_ATP_PUB.ATP_Period_Typ;
l_res_atp_supply_demand         MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_comp_atp_period               MRP_ATP_PUB.ATP_Period_Typ;
l_comp_atp_supply_demand        MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_tb_atp_period                 MRP_ATP_PUB.ATP_Period_Typ;
l_tb_atp_supply_demand          MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_future_atp_period             MRP_ATP_PUB.ATP_Period_Typ;
l_future_atp_supply_demand      MRP_ATP_PUB.ATP_Supply_Demand_Typ;

l_inv_item_id                   NUMBER;

temp				NUMBER;
g_atp_record                    MRP_ATP_PVT.AtpRec;
l_pegging_rec			mrp_atp_details_temp%ROWTYPE;
l_pegging_id                    NUMBER;
l_parent_pegging_id             NUMBER;
l_atp_pegging_id                NUMBER;
l_future_pegging_id             NUMBER;
l_demand_id                     NUMBER;
l_quantity_ordered		NUMBER;
l_quantity_uom			VARCHAR2(3);
l_transaction_id                NUMBER;
l_avail_assembly_qty		NUMBER;
l_comp_atp_date			DATE;
l_res_atp_date			DATE;
l_conversion_rate               NUMBER;
l_sysdate                       DATE;
l_ship_date                     DATE;
l_plan_id                       NUMBER;
l_assign_set_id                 NUMBER;
l_peg_qty                       NUMBER;
l_inv_item_name                 VARCHAR2(250); --bug 2246200
l_org_code                      VARCHAR2(7);
l_supplier_name                 VARCHAR2(80);
l_supplier_site_name            VARCHAR2(80);
l_temp_date                     DATE;   -- Bug 1449555
l_cto_bom                       NUMBER := 0;

l_coproducts_flag 		VARCHAR2(1) := 'Y'; -- default to Yes
l_make_buy_cd			NUMBER;
l_processing_lead_time 		NUMBER;
l_pre_processing_date		DATE;
l_mso_lead_time_factor		NUMBER;
l_demand_class_flag             NUMBER :=0;
l_inventory_item_id             number;
l_coprod_pegging_id             NUMBER;
temp_sd_qty 			NUMBER;
l_summary_flag			VARCHAR2(1);
l_old_summary_flag              VARCHAR2(1);
l_new_summary_flag              VARCHAR2(1);
l_site_id			NUMBER;
l_request_item_id               NUMBER;
l_pre_pro_lt                    NUMBER;
l_fixed_lt			NUMBER;
l_variable_lt			NUMBER;
l_ptf_flag			NUMBER;
l_ptf_date                      DATE;
l_net_processing_lt             NUMBER;
l_process_lt                    NUMBER;
l_order_date                    DATE;
l_start_date                    DATE;
l_post_pro_lt                   NUMBER;
l_dock_date			DATE;
l_atp_request_date              DATE;
l_atp_ship_date                 DATE;
l_parent_ptf_date               DATE;
l_ptf_date_for_child            DATE;   -- Bug 3782472
l_req_date_qty                  NUMBER;
l_item_attribute_rec            MSC_ATP_PVT.item_attribute_rec;   -- Obsoleted
l_substitution_window           NUMBER;
l_atp_pegging_tab		MRP_ATP_PUB.Number_Arr := MRP_ATP_PUB.Number_Arr();
-- Only specific to this procedure
PF_ITEM_INFO_REC                 MSC_ATP_PVT.item_attribute_rec; -- Only for PF info
C_ITEM_INFO_REC                  MSC_ATP_PVT.item_attribute_rec;  -- Copy of the global.
-- Added for bug 2392456
l_plan_info_rec                 MSC_ATP_PVT.plan_info_rec;

--diag_atp
L_CONSTRAINT_FLAG               NUMBER;
L_PTF_DUE_DATE                  DATE;
L_LT_DUE_DATE                   DATE;
L_RES_AVAIL_QTY                 NUMBER;
L_SUPPLIER_START_DATE           DATE;
L_ROUNDING_CONTROL_FLAG         number;
L_UNIT_WEIGHT                   number;
L_WEIGHT_UOM                    varchar2(3);
L_UNIT_VOLUME                   number;
L_VOLUME_UOM                    varchar2(3);
L_DEST_INV_ITEM_ID              number;
L_GET_MAT_IN_REC                MSC_ATP_REQ.get_mat_in_rec;
l_get_mat_out_rec               MSC_ATP_REQ.get_mat_out_rec;
l_allocation_rule_name          varchar2(30);

l_update_PO_mode		NUMBER := MSC_ATP_PVT.UNDO;
l_atp_quantity_this_level_fwd	NUMBER;
l_last_good_pegging_id		NUMBER;
l_have_make_buy_parent		NUMBER := G_HAVE_MAKE_BUY_PARENT;
l_subst_existing_PO_qty		NUMBER;

--- Enhance CTO Phase 1 Req #17
-- New variable to deal with forward stealing for CTO components.
l_parent_peg_forward            NUMBER := 0;
-- End Enhance CTO Phase 1 Req #17

-- for nocopy changes
l_res_demand			NUMBER;
--  Supplier Capacity and Lead Time (SCLT) changes
l_sup_cap_cum_start            NUMBER;

-- dsting 2764213
l_planned_sources             NUMBER := 0;

--2798667
--this variable contains the ship date of the item from the org
-- For ATO components, this variable contains availability date in org + atp lead time
-- for other itmes, this variable contains the availabilty date.
l_atp_lt_offset_ship_date                date;

-- rajjain 02/19/2003 Bug 2788302 Begin
l_process_seq_id                NUMBER;
l_src_org_id                    NUMBER;
-- rajjain 02/19/2003 Bug 2788302 End

-- dsting 2754446
l_PO_qty			NUMBER;
l_prim_uom_avail_qty            NUMBER;
l_prim_uom_req_date_qty         NUMBER;

-- 2897278
l_avail_PO_qty                  number;

--(ssurendr) Bug 2865389 OPM fix.
l_opm_start_date                DATE;
l_routing_seq_id                NUMBER;
l_bill_seq_id                   NUMBER;

--4570421
l_op_seq_id                     NUMBER;

--s_cto_rearch
l_item_sourcing_info_rec       MSC_ATP_CTO.Item_Sourcing_Info_Rec;
l_null_item_sourcing_info_rec       MSC_ATP_CTO.Item_Sourcing_Info_Rec;
l_get_comp_info_rec            MSC_ATP_REQ.get_comp_info_rec;
--l_get_sup_info_rec             MSC_ATP_PVT.Supplier_Info_rec;
l_item_info_rec                MSC_ATP_PVT.item_attribute_rec;
l_atp_rule_name                varchar2(80);
l_enforce_model_lt             VARCHAR2(1);

-- time_phased_atp
l_family_item_id                NUMBER;
l_pf_atp                        VARCHAR2(1) := 'N';
l_time_phased_atp               VARCHAR2(1) := 'N';
l_mem_stealing_qty              NUMBER;
l_pf_stealing_qty               NUMBER;
l_sub_qty_before_atf            NUMBER;
l_sub_qty_after_atf             NUMBER;
l_bucketed_demands_rec          MSC_ATP_PF.Bucketed_Demands_Rec;
l_mat_atp_info_rec              MSC_ATP_REQ.Atp_Info_Rec;
l_atf_date_qty                  NUMBER;
l_item_to_use                   NUMBER;
l_used_available_quantity       NUMBER; --bug3409973
l_used_available_quantity_fwd   NUMBER; --bug3409973

l_ato_date                      date;
l_check_model_capacity          NUMBER := 2;
l_sr_inv_item_id                NUMBER;

l_bkwd_pass_atf_date_qty         NUMBER; --bug3397904

-- variables added for ship_rec_cal
l_sup_atp_info_rec              MSC_ATP_REQ.Atp_Info_Rec;
l_sysdate_seq_num	        NUMBER;
l_sup_cap_type		        NUMBER;
l_intransit_lt                  NUMBER;
l_planned_order_date            DATE;
l_new_dock_date                 DATE;
l_new_ship_date                 DATE;
l_sugg_start_date               DATE;   -- Bug 3241766
l_encoded_text                  varchar2(4000);
l_msg_app                       varchar2(50);
l_msg_name                      varchar2(30);

/* Enforce Pur LT */
l_trunc_sysdate                 DATE := TRUNC(sysdate);
l_trunc_started                 NUMBER := 2;
-- l_supplier_request_date         DATE; -- Bug 3828494 (done with 3828469): Not required anymore
l_sys_next_date                 DATE; --bug3821358

--Bug 3821358
l_store_dock_date               DATE;
l_store_ship_date               DATE;
l_store_start_date              DATE;
l_store_order_date              DATE;
l_store_due_date                DATE;
l_store_g_ptf_date              DATE;

-- Bug 3525582 - PTF constraint should be added only if plan is PTF enabled
l_ptf_enabled                   NUMBER;

--2814895
l_partner_type    NUMBER := 2;
l_party_site_id   NUMBER := NULL;
l_order_line_id   NUMBER := NULL;
l_location_id     NUMBER := NULL;

-- ATP4drp Declare a variable for creating Planned Arrival.
l_supply_rec                    MSC_ATP_DB_UTILS.supply_rec_typ;
-- End ATP4drp

--bug 4394904
l_infinite_time_fence          DATE;
l_substitutes_rec  MSC_ATP_REQ.get_subs_out_rec;-- 4902658/5216528
l_temp_net_demand  NUMBER; --4902658 temporary variable to get qty during ctp 5216528
l_atp_ctp_qty NUMBER; --4902658 contains atp + ctp qty 5216528
l_tmp_parent_pegging_id NUMBER; --5216528
l_net_demand_qty NUMBER;	--5598066

BEGIN
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('**********Begin ATP_Check Procedure************');
    END IF;

    -- initialize API return status to success
    x_return_status := FND_API.G_RET_STS_SUCCESS;

    -- initialize the error_code to ALLSUCCESS
    p_atp_record.error_code := ALLSUCCESS;
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('in atp_check');
        END IF;

    -- print the record
IF PG_DEBUG in ('Y', 'C') THEN
   msc_sch_wb.atp_debug('ATP_Check: ' || '********** INPUT DATA: p_atp_record **********');
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Inventory_Item_Id:' || to_char(p_atp_record.Inventory_Item_Id) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'request_item_id:' || to_char(p_atp_record.request_item_id) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'organization_id:' || to_char(p_atp_record.organization_id) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Quantity_Ordered:' || to_char(p_atp_record.Quantity_Ordered) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Quantity_UOM:' || p_atp_record.Quantity_UOM );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Requested_Ship_Date:' || to_char(p_atp_record.Requested_Ship_Date) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Requested_Arrival_Date:' || to_char(p_atp_record.Requested_Arrival_Date) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Latest_Acceptable_Date:' || to_char(p_atp_record.Latest_Acceptable_Date) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Delivery_Lead_Time:' || to_char(p_atp_record.Delivery_Lead_Time) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Freight_Carrier:' || p_atp_record.Freight_Carrier );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Ship_Method:' || p_atp_record.Ship_Method );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Demand_Class:' || p_atp_record.Demand_Class );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Override_Flag:' || p_atp_record.Override_Flag );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Action:' || to_char(p_atp_record.Action) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Ship_Date:' || to_char(p_atp_record.Ship_Date) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Available_Quantity:' || to_char(p_atp_record.Available_Quantity) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Used_available_Quantity:' || to_char(p_atp_record.used_available_quantity) ); --bug3409973
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Requested_Date_Quantity:' || to_char(p_atp_record.Requested_Date_Quantity) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'supplier_id:' || to_char(p_atp_record.supplier_id) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'supplier_site_id:' || to_char(p_atp_record.supplier_site_id) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Insert_Flag:' || to_char(p_atp_record.Insert_Flag) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Error_Code:' || to_char(p_atp_record.Error_Code) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Order_Number:' || to_char(p_atp_record.Order_Number) );
   msc_sch_wb.atp_debug('ATP_Check: ' || 'MSC_ATP_PVT.G_SUMMARY_FLAG := ' || MSC_ATP_PVT.G_SUMMARY_FLAG);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'original_item_flag := ' || p_atp_record.original_item_flag);
   -- 2462661 : krajan
   msc_sch_wb.atp_debug('ATP_Check: ' || 'SRC_ATP_FLAG := ' || p_atp_record.src_atp_flag);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Line Id := ' ||  p_atp_record.demand_source_line);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Top_Model_line_id := ' || p_atp_record.Top_Model_line_id);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'ATO_Parent_Model_Line_Id := ' || p_atp_record.ATO_Parent_Model_Line_Id);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'ATO_Model_Line_Id := ' || p_atp_record.ATO_Model_Line_Id);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'Parent_line_id := ' || p_atp_record.Parent_line_id);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'wip_supply_type := ' || p_atp_record.wip_supply_type);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'parent_atp_flag := ' || p_atp_record.parent_atp_flag);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'parent_atp_comp_flag := ' || p_atp_record.parent_atp_comp_flag);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'parent_repl_order_flag := ' || p_atp_record.parent_repl_order_flag);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'parent_bom_item_type := ' || p_atp_record.parent_bom_item_type);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'mand_comp_flag := ' || p_atp_record.mand_comp_flag);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'parent_so_quantity := ' || p_atp_record.parent_so_quantity);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'base_model_id := ' || p_atp_record.base_model_id);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'rep_ord_flag := ' || p_atp_record.rep_ord_flag);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'bom_item_type := '|| p_atp_record.bom_item_type);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'parent item id := ' || p_atp_record.parent_item_id);
   -- ship_rec_cal
   msc_sch_wb.atp_debug('ATP_Check: ' || 'receiving_cal_code := ' || p_atp_record.receiving_cal_code);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'intransit_cal_code := ' || p_atp_record.intransit_cal_code);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'shipping_cal_code := ' || p_atp_record.shipping_cal_code);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'manufacturing_cal_code := ' || p_atp_record.manufacturing_cal_code);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'demand_source_type := ' || p_atp_record.demand_source_type);--cmro
   msc_sch_wb.atp_debug('ATP_Check: ' || 'MSC_ATP_PVT.G_PTF_DATE := ' || MSC_ATP_PVT.G_PTF_DATE);
   msc_sch_wb.atp_debug('ATP_Check: ' || 'bill_seq_id := ' || p_atp_record.bill_seq_id); --4741012
   msc_sch_wb.atp_debug('ATP_Check: ' || 'after printing the values');
END IF;

    -- dsting
    p_atp_record.children_type := NO_MAKE_BUY_CHILDREN;

    -- check if one and only one of the requested_ship_date and
    -- requested_arrival_date is provided

    IF ((p_atp_record.requested_ship_date IS NULL) and
        (p_atp_record.requested_arrival_date IS NULL)) THEN

        p_atp_record.error_code := NOREQ_DATE;
        RAISE FND_API.G_EXC_ERROR;

    ELSIF ((p_atp_record.requested_ship_date IS NOT NULL) and
        (p_atp_record.requested_arrival_date IS NOT NULL)) THEN

        p_atp_record.error_code := ATP_MULTI_REQ_DATES;
        RAISE FND_API.G_EXC_ERROR;
    END IF;
    --bug3821358
    l_sys_next_date := MSC_CALENDAR.NEXT_WORK_DAY(p_atp_record.manufacturing_cal_code, -- use OMC
                                                  p_atp_record.instance_id,
                                                  l_trunc_sysdate);
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('ATP_Check: Sys Next Date is: ' || l_sys_next_date);
    END IF;
    /* To support new logic for dependent demands allocation in time phased PF rule based AATP scenarios
       Reset global variable*/
    MSC_ATP_PVT.G_TIME_PHASED_PF_ENABLED := 'N';

    IF (NVL(p_atp_record.supplier_id, -1) = -1) THEN
        -- doing atp check in an inventory org

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'do atp check at an inventory org');
        END IF;

        -- krajan : 2462661 : post fix
        -- set the global variable to null
        MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID := null;

        /* time_phased_atp changes begin
           In PDS Case, find if this is time phased atp scenario*/
        l_request_item_id       := nvl(p_atp_record.request_item_id, p_atp_record.inventory_item_id); --do I really need this??
        l_family_item_id        := p_atp_record.inventory_item_id;

        IF (G_INV_CTP = 4) and (l_request_item_id <> l_family_item_id) THEN

            IF p_atp_record.atf_date is not null THEN
                l_time_phased_atp := 'Y';
                l_pf_atp := 'N';

                /* To support new logic for dependent demands allocation in time phased PF rule based AATP scenarios
                   Set global variable too. This is used in Get_Item_Demand_Alloc_Percent function*/
                MSC_ATP_PVT.G_TIME_PHASED_PF_ENABLED := 'Y';

                -- CTO_PF_PRJ changes for CTO PF Cross Project Impacts
                -- If dealing with Time Phased ATP Item set the global for CTO_PF
                MSC_ATP_PVT.G_CTO_PF_ATP := 'Y';

                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || '*** Perform Time Phased ATP for this item *** ');
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'ATF Date := ' || p_atp_record.atf_date);
                    msc_sch_wb.atp_debug('ATP_Check: Re-set G_CTO_PF_ATP to ' ||
                                                       MSC_ATP_PVT.G_CTO_PF_ATP);
                END IF;
                -- CTO_PF_PRJ changes for CTO PF Cross Project Impacts
            ELSE
                l_pf_atp := 'Y';
                l_time_phased_atp := 'N';
                l_request_item_id := p_atp_record.inventory_item_id;

                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || '*** Perform Product Family(non-time phased) ATP for this item *** ');
                END IF;
            END IF;
        END IF;

        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('ATP_Check: ' || 'G_TIME_PHASED_PF_ENABLED := ' || MSC_ATP_PVT.G_TIME_PHASED_PF_ENABLED);
        END IF;

        /* Now we store member item's info in G_ITEM_INFO_REC (C_ITEM_INFO_REC)
           PF_ITEM_INFO_REC is used to store family item's info*/
        --s_cto_rearch
        l_item_info_rec.parent_repl_ord_flag := p_atp_record.parent_repl_order_flag;
        l_item_info_rec.parent_bom_item_type := p_atp_record.parent_bom_item_type;
        l_item_info_rec.parent_atp_flag := p_atp_record.parent_atp_flag;
        l_item_info_rec.parent_comp_flag := p_atp_record.parent_atp_comp_flag;
        l_item_info_rec.parent_pegging_id := p_parent_pegging_id;
        l_item_info_rec.parent_item_id :=  p_atp_record.parent_item_id;
        IF NVL(p_atp_record.parent_item_id, -1) = p_atp_record.inventory_item_id THEN
            -- if we are rechecking model as atp flag = 'Y' then
            -- we should recheck model's attribute so that model flags are set correctly.
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('This models atp flag = Y. We are coming here for second time');
            END IF;
            MSC_ATP_PVT.G_ITEM_INFO_REC.organization_id := null;
        END IF;
        --e_cto_rearch
        MSC_ATP_PROC.get_global_item_info(p_atp_record.instance_id,
                                            --3917625: read item attributes from planned data
                                            -- -1,
                                            p_plan_id,
                                            l_request_item_id,
                                            p_atp_record.organization_id,
                                            l_item_info_rec );
        /* Make a copy */
        C_ITEM_INFO_REC := G_ITEM_INFO_REC;

        /* Now get family item's info*/
        IF (l_family_item_id = G_ITEM_INFO_REC.sr_inv_item_id) THEN
           PF_ITEM_INFO_REC := G_ITEM_INFO_REC;
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('ATP_Check: ' || 'Local Rec Inst. '||PF_ITEM_INFO_REC.instance_id);
           END IF;
        ELSE
           --s_cto_rearch
            PF_ITEM_INFO_REC.parent_pegging_id := p_parent_pegging_id;
            PF_ITEM_INFO_REC.parent_bom_item_type := p_atp_record.parent_bom_item_type;
            PF_ITEM_INFO_REC.parent_atp_flag := p_atp_record.parent_atp_flag;
            PF_ITEM_INFO_REC.parent_comp_flag := p_atp_record.parent_atp_comp_flag;
            PF_ITEM_INFO_REC.parent_repl_ord_flag := p_atp_record.parent_repl_order_flag;
            --e_cto_rearch
           MSC_ATP_PROC.get_item_attributes(p_atp_record.instance_id,
                                         --3917625: Read item attribute from plani data
                                         -- -1,
                                         p_plan_id,
                                         l_family_item_id,
                                         p_atp_record.organization_id,
                                         PF_ITEM_INFO_REC);

        END IF;
        /* time_phased_atp changes end */

        --subst
        IF MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y' and NVL(p_atp_record.original_item_flag, 2) = 1 and
           MSC_ATP_SUBST.G_REQ_ITEM_SR_INV_ID <> p_atp_record.inventory_item_id THEN
           -- if it a subst item then we consider subst window
            l_substitution_window := C_ITEM_INFO_REC.substitution_window;
        ELSE
            -- If it is an original item or a bom item then we do not consider window
            l_substitution_window := 0;
        END IF;
        l_atp_flag := C_ITEM_INFO_REC.atp_flag;
        l_atp_comp_flag := C_ITEM_INFO_REC.atp_comp_flag;
        l_pre_pro_lt := C_ITEM_INFO_REC.pre_pro_lt;
        l_fixed_lt := C_ITEM_INFO_REC.fixed_lt;
        l_variable_lt := C_ITEM_INFO_REC.variable_lt;
        l_post_pro_lt := C_ITEM_INFO_REC.post_pro_lt;
	l_process_lt  := C_ITEM_INFO_REC.processing_lt;  -- 5438149
        --diag_atp
        l_rounding_control_flag := C_ITEM_INFO_REC.rounding_control_type;
        l_unit_weight := C_ITEM_INFO_REC.unit_weight;
        l_weight_uom := C_ITEM_INFO_REC.weight_uom;
        l_unit_volume := C_ITEM_INFO_REC.unit_volume;
        l_volume_uom := C_ITEM_INFO_REC.volume_uom;
        l_dest_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;

        /* Modularize Item and Org Info */

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'ATP flag is '||l_atp_flag);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'ATP components flag is ' ||l_atp_comp_flag);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_pre_pro_lt := ' || l_pre_pro_lt);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_fixed_lt := ' || l_fixed_lt);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_variable_lt := ' || l_variable_lt);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_post_pro_lt := ' || l_post_pro_lt);
	   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_process_lt := ' || l_process_lt);  -- 5438149
        END IF;

        -- 2462661 : krajan
        -- Check to see if the item is uncollected.
        -- If we get here, then it means that the item is not ATPABle.
        -- If we defer, then error out
        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug ('Checking for uncollected item ' );
        end if;
        if (MSC_ATP_PVT.G_SR_INVENTORY_ITEM_ID is not NULL) AND
            (NVL(p_atp_record.src_atp_flag,'N') <> 'N') then
            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('ATP_Check: ' || 'Item Not Collected as flags differ');
            END IF;
            p_atp_record.error_code := ATP_ITEM_NOT_COLLECTED;

            RAISE MSC_ATP_PVT.G_EXC_UNCOLLECTED_ITEM;
        end if;
              -- end changes for 2462661
        /************ Bug 1510853 ATP Rule Check ************/
        -- Initialize the rule flag
        G_ATP_RULE_FLAG := 'Y';
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'C_ITEM_INFO_REC atp_rule_id := '
                             || NVL(C_ITEM_INFO_REC.atp_rule_id, 0));
        END IF;
        IF ((G_INV_CTP = 5) AND (C_ITEM_INFO_REC.atp_rule_id IS NULL)) THEN
           G_ATP_RULE_FLAG := 'N';   -- Rule not found at item level.
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('ATP_Check: ' || ' NO ATP RULE FOR ITEM ');
           END IF;
        END IF;
        /************ Bug 1510853 ATP Rule Check ************/


        l_delivery_lead_time := p_atp_record.delivery_lead_time;
        l_ship_method := p_atp_record.ship_method;

        -- get the default delivery_lead_time if it is not specified.
        -- dsting dlt
        IF (NVL(p_atp_record.delivery_lead_time, -1) = -1 ) THEN

                msc_sch_wb.atp_debug('delivery lead time is not specified');

                -- if we can not get the lead time from sourcing,
                -- we need to find the default between locations.

		-- Set l_site_id to null in case destination is an org to avoid getting lead time/ ship method
		-- based on region of customer site.

	        --2814895, populating variables for the call to atp_sources

	        IF  MSC_ATP_PVT.G_SR_PARTNER_SITE_ID IS NOT NULL THEN
	           l_partner_type := 2;
	           l_party_site_id := NULL;
	           l_order_line_id := NULL;
		   l_site_id := MSC_ATP_PVT.G_SR_PARTNER_SITE_ID;
		   l_location_id := p_atp_record.to_location_id;
	        ELSIF MSC_ATP_PVT.G_SR_PARTY_SITE_ID IS NOT NULL THEN
	           l_site_id := NULL;
	           l_partner_type := 4;
	           l_party_site_id := MSC_ATP_PVT.G_SR_PARTY_SITE_ID;
	           l_order_line_id := NULL;
	           l_location_id := NULL; --MSC_ATP_PVT.G_SR_LOCATION_ID;
	        ELSIF MSC_ATP_PVT.G_SR_CUSTOMER_COUNTRY IS NOT NULL THEN
	           l_partner_type := 5;
	           l_party_site_id := NULL;
	           l_order_line_id := p_atp_record.identifier;
		   l_site_id := NULL;
		   l_location_id := NULL;
		ELSIF p_atp_record.to_organization_id IS NOT NULL THEN
		   l_site_id := NULL;
		   l_partner_type := NULL;
	           l_party_site_id := NULL;
	           l_order_line_id := NULL;
	           l_location_id := p_atp_record.to_location_id;
	        ELSE
	          IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('ATP_Check: Nothing passed');
                   END IF;
                END IF;

-- cchen : changes for ship method

		MSC_ATP_PROC.get_delivery_lead_time(p_atp_record.organization_id,
						NULL,	-- from location id
						p_atp_record.instance_id,
						p_atp_record.to_organization_id,
						l_location_id, --p_atp_record.to_location_id, --2814895
						p_atp_record.to_instance_id,
						NULL,	-- customer_id
						NULL,	-- customer_site_id
						NULL,	-- supplier_id
						NULL,	-- supplier_site_id
						MSC_ATP_PVT.G_SESSION_ID,
						l_site_id,
						l_ship_method,
						l_delivery_lead_time,
						l_partner_type, --2814895
						l_party_site_id, --2814895
						l_order_line_id); --2814895
		-- dsting replaced old dlt code

        END IF;

        -- dsting dlt Round delivery lead time up
        l_delivery_lead_time := CEIL(l_delivery_lead_time);
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('rounded l_delivery_lead_time: ' || l_delivery_lead_time);
        END IF;

        -- BUG 1621816- We offset the delivery lead time instead of
        -- reducing it. To off set we use calender code of the target_org

        IF (p_atp_record.requested_arrival_date IS NOT NULL) THEN
            -- we need to calculate the requested_ship_date
            -- requested_ship_date = requested_arrival_date - delivery_lead_time

            -- ship_rec_cal do we come here??
            l_requested_ship_date := MSC_CALENDAR.prev_work_day(
                                        p_atp_record.organization_id,
                                        p_atp_record.instance_id,
                                        MSC_CALENDAR.TYPE_DAILY_BUCKET,
                                        p_atp_record.requested_arrival_date
                                        - l_delivery_lead_time);

/* dlt
           IF (p_atp_record.customer_id IS NOT NULL) THEN
                ---Inquiry from a customer site
                l_requested_ship_date := p_atp_record.requested_arrival_date -
                                     l_delivery_lead_time ;
           ELSE
                 --- Org
                l_requested_ship_date := MSC_CALENDAR.DATE_OFFSET
                                        (p_atp_record.to_organization_id,
                                         p_atp_record.to_instance_id,
                                         1,
                                         p_atp_record.requested_arrival_date,
                                         -NVL(l_delivery_lead_time, 0));
           END IF;
*/
        ELSE
            l_requested_ship_date := p_atp_record.requested_ship_date;
        END IF;
        /*
            Added by avjain to capture original request date to insert in msc-demands
            original_request_date corresponds to request date for 24*7 ATP which gives
            the request date
            */
        l_original_req_ship_date := nvl(p_atp_record.original_request_date,l_requested_ship_date);
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_original_req_ship_date: '||l_original_req_ship_date);
        END IF;

        l_summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;
        --- postprocess summary
        --- The following array stores 1 if we are doing Demand Class ATP for item-org
        --- We are doing this way because if we need to reomve or update the demand then
        --- we know that we need to do demand class based  update or removal of the demand in
        ---- case of ODS
        IF ((p_search = 1) and (p_parent_pegging_id is null)) THEN
           IF (MSC_ATP_PVT.G_INV_CTP = 5) AND (MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y') THEN
              --- THIS IS OSD case, backward case, and top demand
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'Find out ATP_DEMAND_class flag for that item ');
              END IF;

              BEGIN
                 SELECT NVL(r.demand_class_atp_flag, 0)
                 INTO   l_demand_class_flag
                 FROM   msc_system_items I,
                        msc_trading_partners P,
                        msc_atp_rules  R
                 WHERE  I.sr_instance_id = p_atp_record.instance_id
                 AND    I.organization_id = p_atp_record.organization_id
                 AND    I.sr_inventory_item_id = p_atp_record.inventory_item_id
                 AND    I.plan_id = -1
                 AND    I.organization_id = P.sr_tp_id
                 AND    P.sr_instance_id = I.sr_instance_id
                 AND    P.partner_type = 3 --- organization
                 AND    I.sr_instance_id = R.sr_instance_id
                 AND    R.rule_id = NVL(I.atp_rule_id, P.default_atp_rule_id);

                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'atp_demand_class_flag  : = ' || l_demand_class_flag);
                 END IF;
              EXCEPTION
                 WHEN OTHERS THEN
                       l_demand_class_flag := 0;
              END;

           ELSE
              ---pds cae
              l_demand_class_flag := 0;
           END IF;
           --- now extend the array which holds the demand_class atp_flag and add l_demand_class_flag to it
           MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.EXTEND;
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('ATP_Check: ' || ' MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.count := ' || MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.count);
           END IF;
            MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG( MSC_ATP_PVT.G_DEMAND_CLASS_ATP_FLAG.count) := l_demand_class_flag;
        END IF;

        -- 1143475:
        -- IF atp lead time > 0 then we must do the offset no matter that item
        -- is atpable or not.  Otherwise, only if that item is atpable
        -- item we need to do the offset.  The reason of doing this is to avoid
        -- database hit.

        -- Bugs 2020607, 2104018, 2031894, 1869748
        -- Shift dates to work days irrespective of atp_flag.

/*        If  (NVL(p_atp_record.atp_lead_time, 0) >0)  OR
          (l_atp_flag <> 'N') OR (l_atp_comp_flag <> 'N') THEN  */

        /* ship_rec_cal changes begin
        -- translate the l_requested_ship_date to a workday.
        l_requested_ship_date := MSC_ATP_FUNC.prev_work_day(p_atp_record.organization_id,
                                            p_atp_record.instance_id,
                                            l_requested_ship_date);

        -- bug 1192311
        IF l_requested_ship_date is NULL THEN
          p_atp_record.error_code := ATP_INVALID_DATE;
          RAISE FND_API.G_EXC_ERROR;
        END IF;*/

        -- since we may have atp lead time specified for the item,
        -- we need to offset x working days from the the ship date.

        /* S_CTO_REACH : do not honor atp lead time

        l_requested_ship_date := MSC_CALENDAR.DATE_OFFSET
                                  (p_atp_record.organization_id,
                                   p_atp_record.instance_id,
                                   1,
                                   l_requested_ship_date,
                                   -NVL(p_atp_record.atp_lead_time, 0));
        */

        -- Bugs 2020607, 2104018, 2031894, 1869748
        -- Find the next working date for sysdate
        -- and comment out the call related to bug 1124538.

        BEGIN  -- Bug2031894. Handle Exception here.
          l_sysdate := NVL(MSC_CALENDAR.next_work_day(
                                        p_atp_record.shipping_cal_code,
                                        p_atp_record.instance_id,
                                        sysdate), sysdate);
        EXCEPTION
          WHEN OTHERS THEN
                NULL;
        END;

/*        -- for bug 1124538 : find the prev working date of sysdate
        l_sysdate := NVL(MSC_ATP_FUNC.prev_work_day(p_atp_record.organization_id,
                                            p_atp_record.instance_id,
                                            sysdate), sysdate);   */

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_sysdate ='||l_sysdate);
        END IF;
        --END IF;    Comment out atp_flag block
        -- Bugs 2020607, 2104018, 2031894, 1869748

        p_atp_record.delivery_lead_time := l_delivery_lead_time;
        p_atp_record.ship_method := l_ship_method;

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'ship_method = '||l_ship_method ||' lead time = '||l_delivery_lead_time);
            msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date :=' || l_requested_ship_date);
         END IF;

        IF (l_atp_flag = 'N') and (l_atp_comp_flag = 'N') THEN
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_flag and l_atp_comp_flag are both N');
            END IF;
            p_atp_record.error_code := ATP_NOT_APPL;

	    -- Bug 1916086, modified Schedule procedure to extend G_PEGGING_FOR_SET in case of
	    -- top-level Non-ATPable items as well. This was needed so that l_atp_table and
	    -- l_fst_src_pegging_ids would have same number of records.

            IF p_parent_pegging_id is null THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'p_parent_pegging_id is null');
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PEGGING_FOR_SET.COUNT = ' ||MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT);
                END IF;

                MSC_ATP_PVT.G_PEGGING_FOR_SET.Extend;
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PEGGING_FOR_SET.COUNT = ' ||MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'setting null pegging id for Non-ATPable items');
                END IF;

                MSC_ATP_PVT.G_PEGGING_FOR_SET(MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT) := null;

                MSC_ATP_PVT.G_REQ_ATP_DATE.EXTEND;
                MSC_ATP_PVT.G_REQ_DATE_QTY.EXTEND;

                MSC_ATP_PVT.G_REQ_ATP_DATE(MSC_ATP_PVT.G_REQ_ATP_DATE.count) := l_requested_ship_date;
                MSC_ATP_PVT.G_REQ_DATE_QTY(MSC_ATP_PVT.G_REQ_DATE_QTY.count) := p_atp_record.quantity_ordered;

            END IF;

            -- Bugs 2020607, 2104018, 2031894, 1869748
            -- Redo changes made for Bug 1124538
            -- This is a desired functionality

            -- bug 1143475
            -- no matter it is past due or not, we always satisfy users
            -- on the date they want. that is, we should not offset the date
            -- users request unless atp lead time is specified and not equal 0

            -- for bug 1124538 : if request date is less than sysdate,
            -- than the requested_date_quantity should be 0 and ship_date
            -- will be sysdate

            -- Bug 2625791, 2623816: If it is a transfer case then We should take
            -- into consideration PTF date passed to us from the top organization.
            -- We should satisfy the damand as per the PTF date from the top org.
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('ATP_Check: ' || 'MSC_ATP_PVT.G_PTF_DATE := ' || MSC_ATP_PVT.G_PTF_DATE);
            END IF;

            --s_cto_rearch: bug 3169831 : Honor lead time only when profile option is turned on
            l_enforce_model_lt := NVL(FND_PROFILE.VALUE('MSC_ENFORCE_MODEL_LT'), 'Y');

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('l_enforce_model_lt := ' || l_enforce_model_lt);
            END IF;

            IF MSC_ATP_PVT.G_INV_CTP = 5 and C_ITEM_INFO_REC.bom_item_type = 1
                                         and C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y'
                                         and l_enforce_model_lt = ' Y' THEN

               -- in ODS ATP we want to honor lead times for ATO models
               l_mso_lead_time_factor := MSC_ATP_PVT.G_MSO_LEAD_TIME_FACTOR;
               l_net_processing_lt := (l_fixed_lt + l_variable_lt * p_atp_record.quantity_ordered)*
                                                                         (1 + l_mso_lead_time_factor);
               l_ato_date := MSC_CALENDAR.DATE_OFFSET
                                  (p_atp_record.organization_id,
                                   p_atp_record.instance_id,
                                   1,
                                   l_sysdate,
                                   l_net_processing_lt);
            ELSE
              l_ato_date := l_sysdate;
            END IF;
            --5160663, commenting out.
            /*
            IF l_requested_ship_date < GREATEST(l_sysdate,l_ato_date)  THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date < l_sysdate');
                END IF;
                p_atp_record.requested_date_quantity := 0.0;
                p_atp_record.ship_date := GREATEST(l_sysdate, MSC_ATP_PVT.G_PTF_DATE, l_ato_date);
            ELSE
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date >= l_sysdate');
                END IF;
                p_atp_record.requested_date_quantity :=
                        p_atp_record.quantity_ordered;
                p_atp_record.ship_date :=  GREATEST(l_requested_ship_date, MSC_ATP_PVT.G_PTF_DATE);
            END IF;
            */

            -- Bugs 2020607, 2104018, 2031894, 1869748
            -- Redo changes made for Bug 1124538
            -- This is a desired functionality
            -- Comments are uncommented out END.

            p_atp_record.requested_date_quantity :=
                        p_atp_record.quantity_ordered;

            -- cchen 1238941
            p_atp_record.combined_requested_date_qty :=
                p_atp_record.quantity_ordered;

            -- cchen 1276131 make sure we offset if atp_lead time exists
            --p_atp_record.ship_date := l_requested_ship_date;
            p_atp_record.ship_date := GREATEST(l_requested_ship_date, MSC_ATP_PVT.G_PTF_DATE); --5160663
            /* s_cto_arch: do not honor atp lead time
            IF NVL(p_atp_record.atp_lead_time, 0) > 0 THEN
              p_atp_record.ship_date := MSC_CALENDAR.DATE_OFFSET
                                 (p_atp_record.organization_id,
                                  p_atp_record.instance_id,
                                  1,
                                  l_requested_ship_date,
                                  p_atp_record.atp_lead_time);
            --  Bug2302403
            --ELSE
            --  p_atp_record.ship_date := l_requested_ship_date;
            END IF;
            */

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.ship_date:='||
                                  p_atp_record.ship_date );
               msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.requested_date_quantity:='||
                                  p_atp_record.requested_date_quantity);
            END IF;
            p_atp_record.available_quantity :=  p_atp_record.quantity_ordered;

            -- In case the call is for multi-level/ multi-org CTO with a
            -- reduced ship set, we need to generate the pegging tree
            -- even if the item is non-ATPable. - ngoel 10/18/00

            -- Check if Records exist in MSC_BOM_TEMP table in case of PDS. If yes,
            -- create pegging record. Since for models and option classes, atp_comp_flag
	    -- shall always be yes in case of CTO, this situation may only occur at
	    -- components level.

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.Calling_Module : '||p_atp_record.Calling_Module);
            END IF;

              --s_cto_rearch
            /* bug 3564511: We do not need to add demand and pegging for non-atpable items
               because we now use data stored in msc_cto_bom to retrieve bom for 24x7 processing.
               Removed code for adding demands and pegging

            */

        ELSIF (NVL(p_atp_record.override_flag, 'N') = 'Y') AND (G_INV_CTP = 5)
             --bug 3742009: For ATO models/items, do the regular processing as their bom
             --- need to be exploded and demands need to be placed on the bom components
             AND NOT( C_ITEM_INFO_REC.bom_item_type in (1,4) and  C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y') THEN
            -- ATP Override -- Agilent changes -- ODS ATP

            --- bug 2249118
            -- Bug 1916086, modified Schedule procedure to extend G_PEGGING_FOR_SET in case of
            -- top-level Non-ATPable items as well. This was needed so that l_atp_table and
            -- l_fst_src_pegging_ids would have same number of records.

            IF p_parent_pegging_id is null THEN

                MSC_ATP_PVT.G_PEGGING_FOR_SET.Extend;
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'p_parent_pegging_id is null');
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PEGGING_FOR_SET.COUNT = ' ||MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PEGGING_FOR_SET.COUNT = ' ||MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'setting null pegging id for Non-ATPable items');
                END IF;

                MSC_ATP_PVT.G_PEGGING_FOR_SET(MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT) := null;

                MSC_ATP_PVT.G_REQ_ATP_DATE.EXTEND;
                MSC_ATP_PVT.G_REQ_DATE_QTY.EXTEND;

                MSC_ATP_PVT.G_REQ_ATP_DATE(MSC_ATP_PVT.G_REQ_ATP_DATE.count) := l_requested_ship_date;
                MSC_ATP_PVT.G_REQ_DATE_QTY(MSC_ATP_PVT.G_REQ_DATE_QTY.count) := p_atp_record.quantity_ordered;

            END IF;

            -- cchen 1276131 make sure we offset if atp_lead time exists
            /* s_cto_rearch: do not honor atp lead time
            IF NVL(p_atp_record.atp_lead_time, 0) > 0 THEN
              p_atp_record.ship_date := MSC_CALENDAR.DATE_OFFSET
                                 (p_atp_record.organization_id,
                                  p_atp_record.instance_id,
                                  1,
                                  -- Bug 2625791, 2623816
                                  GREATEST(l_requested_ship_date, MSC_ATP_PVT.G_PTF_DATE),
                                  p_atp_record.atp_lead_time);
            ELSE
              p_atp_record.ship_date := l_requested_ship_date;
            END IF;
            */
             p_atp_record.ship_date := l_requested_ship_date;

            p_atp_record.error_code := ALLSUCCESS;

            -- prepare the insert record
            -- no matter it is a demand or not, we need to insert this
            -- record into database since it is a recursive procedure
            -- and we will rollback in ATP procedure if it is not a
            -- demand.

            l_atp_insert_rec.instance_id := p_atp_record.instance_id;
            /* Modularize Item and Org Info */
            -- Re_use Information.
            -- time_phased_atp - Now C_ITEM_INFO_REC stores member item info in ODS case
            l_atp_insert_rec.inventory_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
            -- No need to call function below.
            /*l_atp_insert_rec.inventory_item_id := MSC_ATP_FUNC.get_inv_item_id
                                                (p_atp_record.instance_id,
                                                --- 2152184
                                                l_request_item_id,
                                                --p_atp_record.request_item_id,
                                                null,
                                                p_atp_record.organization_id);
             Modularize Item and Org Info */
            l_atp_insert_rec.organization_id := p_atp_record.organization_id;
            l_atp_insert_rec.identifier := p_atp_record.identifier;
            l_atp_insert_rec.demand_source_type:=nvl(p_atp_record.demand_source_type, 2);
            l_atp_insert_rec.demand_source_header_id :=
                            nvl(p_atp_record.demand_source_header_id, -1);
            l_atp_insert_rec.demand_source_line := p_atp_record.demand_source_line;
            l_atp_insert_rec.demand_source_delivery :=
                            p_atp_record.demand_source_delivery;
            l_atp_insert_rec.quantity_ordered :=
                             p_atp_record.quantity_ordered;
            l_atp_insert_rec.requested_ship_date := l_requested_ship_date;
            l_atp_insert_rec.demand_class := p_atp_record.demand_class;
            l_atp_insert_rec.refresh_number := p_refresh_number; -- summary enhancement p_atp_record.refresh_number;

	    -- Modified by ngoel on 1/12/2001 for origination_type = 30
            --l_atp_insert_rec.origination_type := 6;
            l_atp_insert_rec.origination_type := 30;

            l_atp_insert_rec.order_number := p_atp_record.order_number;
            -- added by avjain for plan by request date
            l_atp_insert_rec.ship_set_name := p_atp_record.ship_set_name;
            l_atp_insert_rec.arrival_set_name := p_atp_record.arrival_set_name;
            l_atp_insert_rec.original_request_ship_date :=l_original_req_ship_date;
            IF p_search = 1 and p_parent_pegging_id is null THEN
               --- we need to pass old demand id so that we can update that demand
               --- this will happen in case of reschedulling
               l_atp_insert_rec.old_demand_id := p_atp_record.old_demand_id;
            ELSE
               l_atp_insert_rec.old_demand_id := null;
            END IF;

            l_atp_insert_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
            l_atp_insert_rec.delivery_lead_time := l_delivery_lead_time;

            MSC_ATP_DB_UTILS.Add_Mat_Demand(l_atp_insert_rec,
                           p_plan_id,
                           l_demand_class_flag,
                           l_demand_id);
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('ATP_Check: ' || 'after calling Add_Mat_Demand, l_demand_id ='||
                           l_demand_id);
            END IF;


--        END IF;

        ELSIF l_atp_flag in ('Y', 'C', 'N') THEN
            -- ATP Override -- Agilent changes -- PDS ATP
            -- Allow Override for PDS also
            --(NVL(p_atp_record.override_flag, 'N') <> 'Y')) THEN

            -- get the following information
            -- requested_date_quantity
            -- atp_date_this_level
            -- atp_date_quantity_this_level

          -- hierarchy changes due to arrival set

          IF (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') THEN
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('ATP_Check: ' || 'customer class or demand class : same calls');
               END IF;

              /* Modularize Item and Org Info */
              -- Re-Use info instead of making unnecessary call.
              l_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
              /*l_inv_item_id := MSC_ATP_FUNC.get_inv_item_id(
                                          p_atp_record.instance_id,
                                          p_atp_record.inventory_item_id,
                                          null,
                                          p_atp_record.organization_id);
               Modularize Item and Org Info */

              /* New allocation logic for time_phased_atp changes begin */
              IF l_time_phased_atp = 'Y' THEN
                      MSC_ATP_PF.Set_Alloc_Rule_Variables(
                          l_inv_item_id,
                          PF_ITEM_INFO_REC.dest_inv_item_id,
                          p_atp_record.organization_id,
                          p_atp_record.instance_id,
                          p_atp_record.demand_class,
                          p_atp_record.atf_date,
                          l_return_status
                      );
                      IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured in procedure Set_Alloc_Rule_Variables');
                           END IF;
                           RAISE FND_API.G_EXC_ERROR;
                      END IF;

                      IF l_requested_ship_date <= p_atp_record.atf_date THEN
                          IF MSC_ATP_PVT.G_MEM_RULE_WITHIN_ATF = 'Y' THEN
                              l_item_to_use := l_inv_item_id;
                          ELSE
                              l_item_to_use := PF_ITEM_INFO_REC.dest_inv_item_id;
                          END IF;
                      ELSE
                          IF MSC_ATP_PVT.G_PF_RULE_OUTSIDE_ATF = 'Y' THEN
                              l_item_to_use := PF_ITEM_INFO_REC.dest_inv_item_id;
                          ELSE
                              l_item_to_use := l_inv_item_id;
                          END IF;
                      END IF;
              ELSE
                      l_item_to_use := l_inv_item_id;
              END IF;
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date = '||l_requested_ship_date);
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'Item to be used = '||l_item_to_use);
              END IF;
              /* New allocation logic for time_phased_atp changes end */

              p_atp_record.demand_class :=

                  MSC_AATP_FUNC.Get_Hierarchy_Demand_Class(MSC_ATP_PVT.G_PARTNER_ID,
                           MSC_ATP_PVT.G_PARTNER_SITE_ID,
                           l_item_to_use, -- For new allocation logic for time_phased_atp
                           p_atp_record.organization_id,
                           p_atp_record.instance_id,
                           l_requested_ship_date,
                           NULL, -- level_id
                           p_atp_record.Demand_Class);
                  --diag_atp
                  l_allocation_rule_name := MSC_ATP_PVT.G_ALLOCATION_RULE_NAME;
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'after getting the dummy demand class');
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.demand_class = '||p_atp_record.demand_class);
              END IF;

          END IF;
          ---subst
          IF MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y' and
             ((p_search = BACKWARD_SCHEDULING AND NVL(p_atp_record.original_item_flag, 2) = 1) OR
               (p_search = FORWARD_SCHEDULING AND p_atp_record.top_tier_org_flag = 1)) THEN
              --- in case of product substitution
              ---1) Backward case- we do not want to look for top item's availability as it is already been
              --- taken care of during breadth level item availability search in Check_atp-subst
              ---2) Forward: we do not want to look for item's availability in top org
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'Original item, substitution');
              END IF;
              IF l_atp_comp_flag = 'N' THEN
                 --- if ATP components flag is "N' and if it top level item then
                 --- we cant make anything. Therefore, we set the l_re_date_qty to be zero
                 l_requested_date_quantity := 0;
                 l_net_demand := 0;
              ELSE
                 l_net_demand := p_atp_record.quantity_ordered;
                 IF p_search = BACKWARD_SCHEDULING and NVL(p_atp_record.top_tier_org_flag, 2) = 2 THEN
                     -- we add demand for only second tier org. Demand for first tier org has
                     --- already been created while looking for substitute availability
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Backward sch and not a top org, add demand');
                     END IF;
                     l_atp_insert_rec.instance_id := p_atp_record.instance_id;
                     /* Modularize Item and Org Info */
                     -- time_phased_atp changes begin
                     l_atp_insert_rec.inventory_item_id := PF_ITEM_INFO_REC.dest_inv_item_id;
                     l_atp_insert_rec.request_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
                     l_atp_insert_rec.atf_date := p_atp_record.atf_date;
                     l_atp_insert_rec.atf_date_quantity := 0; -- check this??
                     l_atp_insert_rec.requested_date_quantity := l_requested_date_quantity;
                     -- time_phased_atp changes end

                     l_atp_insert_rec.organization_id := p_atp_record.organization_id;
                     l_atp_insert_rec.identifier := p_atp_record.identifier;
                     l_atp_insert_rec.demand_source_type:=nvl(p_atp_record.demand_source_type, 2);
                     l_atp_insert_rec.demand_source_header_id :=
                                     nvl(p_atp_record.demand_source_header_id, -1);
                     l_atp_insert_rec.demand_source_delivery :=
                                     p_atp_record.demand_source_delivery;

                     l_atp_insert_rec.quantity_ordered :=  p_atp_record.quantity_ordered;

                     l_atp_insert_rec.requested_ship_date := l_requested_ship_date;
                     l_atp_insert_rec.demand_class := p_atp_record.demand_class;
                     l_atp_insert_rec.refresh_number := p_refresh_number; -- summary enhancement p_atp_record.refresh_number;
                     l_atp_insert_rec.order_number := p_atp_record.order_number;


                     -- ATP4drp If we are dealing with a component
                     -- then set the origination type to Constrained Kit Demand
                     -- for DRP plans.
                     IF (NVL(p_atp_record.parent_item_id, p_atp_record.inventory_item_id) <> p_atp_record.inventory_item_id AND
                         NVL(MSC_ATP_PVT.G_PLAN_INFO_REC.plan_type,1) = 5) THEN
                         l_atp_insert_rec.origination_type := 47;
                         IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('----- ATP4drp Specific Debug Messages -----');
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'DRP origination_type ='|| l_atp_insert_rec.origination_type);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'DRP parent_item_id ='|| p_atp_record.parent_item_id);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'DRP child_item_id ='|| p_atp_record.inventory_item_id);
                           msc_sch_wb.atp_debug('----- ATP4drp Specific Debug Messages -----');
                         END IF;
                     ELSE
                         l_atp_insert_rec.origination_type := 1;
                     END IF;
                     -- End ATP4drp
                     -- for performance reason, we call these function here and
                     -- then populate the pegging tree with the values

                     /* Modularize Item and Org Info */
                     -- Re-Use info instead of making unnecessary call.
                     l_inv_item_name := C_ITEM_INFO_REC.item_name;
                     MSC_ATP_PROC.get_global_org_info (p_atp_record.instance_id,
                                                    p_atp_record.organization_id);
                     l_org_code := G_ORG_INFO_REC.org_code;

                     l_atp_insert_rec.old_demand_id := null;


                     --s_cto_rearch
                     l_atp_insert_rec.Top_Model_line_id := p_atp_record.Top_Model_line_id;
                     l_atp_insert_rec.ATO_Parent_Model_Line_Id := p_atp_record.ATO_Parent_Model_Line_Id;
                     l_atp_insert_rec.Parent_line_id := p_atp_record.Parent_line_id;
                     l_atp_insert_rec.ATO_Model_Line_Id := p_atp_record.ATO_Model_Line_Id;
                     l_atp_insert_rec.wip_supply_type := p_atp_record.wip_supply_type;
                     l_atp_insert_rec.mand_comp_flag := p_atp_record.mand_comp_flag;
                     l_atp_insert_rec.wip_supply_type := p_atp_record.mand_comp_flag;
                     --e_cto_rearch
                     --plan by request date enhancement
                     l_atp_insert_rec.ship_set_name := p_atp_record.ship_set_name;
                     l_atp_insert_rec.arrival_set_name := p_atp_record.arrival_set_name;
                     l_atp_insert_rec.original_request_ship_date :=l_original_req_ship_date;

                     -- ship_rec_cal
                     IF p_search = 1 and p_parent_pegging_id is null THEN
                         IF  p_atp_record.ship_method <> '@@@' THEN
                            l_atp_insert_rec.ship_method := p_atp_record.ship_method;
                         ELSE
                            l_atp_insert_rec.ship_method := null;
                         END IF;
                     END IF;
                     l_atp_insert_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
                     l_atp_insert_rec.delivery_lead_time := l_delivery_lead_time;

                     MSC_ATP_DB_UTILS.Add_Mat_Demand(l_atp_insert_rec,
                                   p_plan_id,
                                   l_demand_class_flag,
                                   l_demand_id);

                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('ATP_Check: ' || 'after calling Add_Mat_Demand, l_demand_id ='||
                                l_demand_id);
                     END IF;

                     -- populate insert rec to pegging tree for this demand
                     --bug 2422847: add demand pegging

                     l_pegging_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
                     l_pegging_rec.order_line_id:= MSC_ATP_PVT.G_ORDER_LINE_ID;
                     l_pegging_rec.parent_pegging_id:= p_parent_pegging_id;
                     l_pegging_rec.atp_level:= p_level;
                     l_pegging_rec.organization_id:= p_atp_record.organization_id;
                     l_pegging_rec.organization_code := l_org_code;
                     l_pegging_rec.identifier1:= p_atp_record.instance_id;
                     l_pegging_rec.identifier2 := p_plan_id;
                     l_pegging_rec.identifier3 := l_demand_id;

                     -- time_phased_atp changes begin
                     IF l_pf_atp = 'Y' THEN
                         l_pegging_rec.inventory_item_id:= p_atp_record.inventory_item_id;
                         l_pegging_rec.inventory_item_name := PF_ITEM_INFO_REC.item_name;
                     ELSE
                         l_pegging_rec.inventory_item_id:= p_atp_record.request_item_id;
                         l_pegging_rec.inventory_item_name := C_ITEM_INFO_REC.item_name;
                     END IF;
                     l_pegging_rec.aggregate_time_fence_date := p_atp_record.atf_date;
                     -- time_phased_atp changes end

                     l_pegging_rec.resource_id := NULL;
                     l_pegging_rec.resource_code := NULL;
                     l_pegging_rec.department_id := NULL;
                     l_pegging_rec.department_code := NULL;
                     l_pegging_rec.supplier_id := NULL;
                     l_pegging_rec.supplier_name := NULL;
                     l_pegging_rec.supplier_site_id := NULL;
                     l_pegging_rec.supplier_site_name := NULL;
                     l_pegging_rec.scenario_id:= p_scenario_id;
                     l_pegging_rec.supply_demand_source_type:= 6;
                     l_pegging_rec.supply_demand_quantity:=
                         p_atp_record.quantity_ordered ;
                      l_pegging_rec.supply_demand_type:= 1;
                       -- Bug 2625791, 2623816: consider PTF date passed from the top org.
                      l_pegging_rec.supply_demand_date:= GREATEST(l_requested_ship_date, MSC_ATP_PVT.G_PTF_DATE);


		     -- dsting ATO 2465370
		     --	 IF NVL(p_atp_record.override_flag, 'N') = 'Y'
		     IF NVL(G_LINE_OVERRIDE_FLAG, 'N') = 'Y'
			AND p_parent_pegging_id is null
		     THEN
                        l_pegging_rec.required_date:= l_requested_ship_date;
                        --bug 3328421: Actual Supply demand date
                        l_pegging_rec.actual_supply_demand_date := l_requested_ship_date;
		     ELSE
                        -- Bug 2748730. No need to move date to the end of as we will be doing that
		        -- inside the procedure Add_Pegging
                        -- l_pegging_rec.required_date:= TRUNC(
				-- GREATEST(l_requested_ship_date, MSC_ATP_PVT.G_PTF_DATE)) + MSC_ATP_PVT.G_END_OF_DAY;
                        --bug 3328421: required date always conatin the original req date
			l_pegging_rec.required_date:= l_requested_ship_date;
                        l_pegging_rec.actual_supply_demand_date :=
				GREATEST(l_requested_ship_date, MSC_ATP_PVT.G_PTF_DATE);
		     END IF;

                      -- for demo:1153192
                      l_pegging_rec.constraint_flag := 'N';
	              l_pegging_rec.component_identifier :=
                                 NVL(p_atp_record.component_identifier, MSC_ATP_PVT.G_COMP_LINE_ID);

                      l_pegging_rec.summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;
                      --- bug 2152184: For PF based ATP inventory_item_id field contains id for PF item
                      --- cto looks at pegging tree to place their demands. Since CTO expects to find
                      --  id for the requested item, we add the following column. CTO will now read from this column
                      l_pegging_rec.request_item_id := p_atp_record.request_item_id;

                      --s_cto_rearch
                      l_pegging_rec.dest_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
                      l_pegging_rec.base_model_id := p_atp_record.base_model_id;
                      --e_cto_rearch
                      l_pegging_rec.demand_class :=  p_atp_record.demand_class;
                      --4570421
                      l_pegging_rec.scaling_type                      := p_atp_record.scaling_type;
                      l_pegging_rec.scale_multiple                    := p_atp_record.scale_multiple;
                      l_pegging_rec.scale_rounding_variance           := p_atp_record.scale_rounding_variance;
                      l_pegging_rec.rounding_direction                := p_atp_record.rounding_direction;
                      l_pegging_rec.component_yield_factor            := p_atp_record.component_yield_factor; --4570421
                      l_pegging_rec.usage                             := p_atp_record.usage_qty; --4775920
                      l_pegging_rec.organization_type                 := p_atp_record.organization_type; --4775920

                      MSC_ATP_DB_UTILS.Add_Pegging(l_pegging_rec, l_pegging_id);

                 END IF;
              END IF;
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_net_demand := ' || l_net_demand);
              END IF;

              IF  NVL(p_atp_record.top_tier_org_flag, 2) = 1 THEN
                  --for top tier org l_pegging_id should be mapped to demand in
                  -- the top org. Since demand is created in atp)_check_subst procedure
                  -- and corresponding peggign id is passed as p_parent_pegging_id
                  --- we mapped l_pegging_id to p_parent_pegging_id
                  l_pegging_id := p_parent_pegging_id;

                  --5088719
                  l_atp_insert_rec.instance_id := p_atp_record.instance_id;
                     /* Modularize Item and Org Info */
                     -- time_phased_atp changes begin
                  l_atp_insert_rec.inventory_item_id := PF_ITEM_INFO_REC.dest_inv_item_id;
                  l_atp_insert_rec.request_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
                  l_atp_insert_rec.atf_date := p_atp_record.atf_date;
                  l_atp_insert_rec.atf_date_quantity := 0; -- check this??
                  l_atp_insert_rec.requested_date_quantity := l_requested_date_quantity;
                     -- time_phased_atp changes end

                  l_atp_insert_rec.organization_id := p_atp_record.organization_id;
                  l_atp_insert_rec.identifier := p_atp_record.identifier;
                  l_atp_insert_rec.demand_source_type:=nvl(p_atp_record.demand_source_type, 2);
                  l_atp_insert_rec.demand_source_header_id :=
                                     nvl(p_atp_record.demand_source_header_id, -1);
                  l_atp_insert_rec.demand_source_delivery :=
                                     p_atp_record.demand_source_delivery;

                  l_atp_insert_rec.quantity_ordered :=  p_atp_record.quantity_ordered;

                  l_atp_insert_rec.requested_ship_date := l_requested_ship_date;
                  l_atp_insert_rec.demand_class := p_atp_record.demand_class;
                  l_atp_insert_rec.refresh_number := p_refresh_number; -- summary enhancement p_atp_record.refresh_number;
                  l_atp_insert_rec.order_number := p_atp_record.order_number;


                  l_atp_insert_rec.origination_type := 30; --1; 5088719
                     -- for performance reason, we call these function here and
                     -- then populate the pegging tree with the values

                     /* Modularize Item and Org Info */
                     -- Re-Use info instead of making unnecessary call.
                  l_inv_item_name := C_ITEM_INFO_REC.item_name;
                  MSC_ATP_PROC.get_global_org_info (p_atp_record.instance_id,
                                                    p_atp_record.organization_id);
                  l_org_code := G_ORG_INFO_REC.org_code;

                  l_atp_insert_rec.old_demand_id := null;


                     --s_cto_rearch
                  l_atp_insert_rec.Top_Model_line_id := p_atp_record.Top_Model_line_id;
                  l_atp_insert_rec.ATO_Parent_Model_Line_Id := p_atp_record.ATO_Parent_Model_Line_Id;
                  l_atp_insert_rec.Parent_line_id := p_atp_record.Parent_line_id;
                  l_atp_insert_rec.ATO_Model_Line_Id := p_atp_record.ATO_Model_Line_Id;
                  l_atp_insert_rec.wip_supply_type := p_atp_record.wip_supply_type;
                  l_atp_insert_rec.mand_comp_flag := p_atp_record.mand_comp_flag;
                  l_atp_insert_rec.wip_supply_type := p_atp_record.mand_comp_flag;
                     --e_cto_rearch
                     --plan by request date enhancement
                  l_atp_insert_rec.ship_set_name := p_atp_record.ship_set_name;
                  l_atp_insert_rec.arrival_set_name := p_atp_record.arrival_set_name;
                  l_atp_insert_rec.original_request_ship_date :=l_original_req_ship_date;

                     -- ship_rec_cal
                  IF p_search = 1 and p_parent_pegging_id is null THEN
                      IF  p_atp_record.ship_method <> '@@@' THEN
                         l_atp_insert_rec.ship_method := p_atp_record.ship_method;
                      ELSE
                         l_atp_insert_rec.ship_method := null;
                      END IF;
                  END IF;
                  l_atp_insert_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
                  l_atp_insert_rec.delivery_lead_time := l_delivery_lead_time;

                  l_demand_id := p_atp_record.subs_demand_id; --5088719

              END IF;
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_pegging_id := ' || l_pegging_id);
              END IF;
              /* Modularize Item and Org Info */
              -- Re-Use info instead of making unnecessary call.
              l_inv_item_name := C_ITEM_INFO_REC.item_name;
              /*l_inv_item_name := MSC_ATP_FUNC.get_inv_item_name(p_atp_record.instance_id,
                                         p_atp_record.inventory_item_id,
                                         p_atp_record.organization_id);

               Modularize Item and Org Info */
               MSC_ATP_PROC.get_global_org_info (p_atp_record.instance_id,
                                                 p_atp_record.organization_id );
              l_org_code := G_ORG_INFO_REC.org_code;
              /*l_org_code := MSC_ATP_FUNC.get_org_code(p_atp_record.instance_id,
                                          p_atp_record.organization_id);
               Modularize Item and Org Info */
              l_atp_date_this_level := null;
              --MSC_ATP_PVT.G_DEMAND_PEGGING_ID := p_parent_pegging_id;
              --5026618 Start 4902658 Fix 5216528
              l_substitutes_rec.inventory_item_id.EXTEND;
              l_substitutes_rec.pegging_id.EXTEND;
              l_substitutes_rec.sub_atp_qty.EXTEND;
              l_substitutes_rec.demand_id.EXTEND;
              l_substitutes_rec.atf_date_quantity.EXTEND; --5283809
              l_substitutes_rec.quantity_ordered.EXTEND;
              l_substitutes_rec.pf_item_id.EXTEND;

              l_substitutes_rec.demand_id(1) := l_demand_id; --4902658 / 5216528
              l_substitutes_rec.inventory_item_id(1) := p_atp_record.Request_Item_Id;
              l_substitutes_rec.pegging_id(1) := p_parent_pegging_id;
              l_substitutes_rec.sub_atp_qty(1) :=  LEAST(GREATEST(l_requested_date_quantity,0),
                                                         p_atp_record.quantity_ordered);
              --5026618 Ends 4902658/5216528 Fix
          ELSE
             --s_cto_rearch
             IF (l_atp_flag in ('Y', 'C')) and
                                 NOT(C_ITEM_INFO_REC.bom_item_type = 1 and
                                    --bug 3423277: Do ATP Check on model when
                                    --ATP flag for model = 'Y' and atp_comp_flag in ('R', 'N')
                                    -- as in these cases ATP on model will not be done  when
                                    -- we are checking component's availability
                                    -- Since we are using 'Not' clause, we check for other values
                                    ( C_ITEM_INFO_REC.atp_comp_flag in ('Y', 'C') and
                                      p_atp_record.parent_item_id is null)) THEN
              -- for bug 1124538:
              -- we need to get atp info even if requested ship date < sysdate
              -- if this is the top level and backward,
              -- otherwise we only do it if requested ship date >= sysdate

              IF ((l_requested_ship_date >= l_sysdate) OR
                 (p_search = BACKWARD_SCHEDULING AND
                  p_parent_pegging_id is null) OR
                 (p_search = FORWARD_SCHEDULING)) THEN

                 --- bug 2178544: In forward schedulling for components we start looking for
                 --- availabilty on greatest of (PTF of parent , req_date)
                 --- Here PTF_date is ptf date for parent i.e if we came here from get_comp_req then
                 --- it is PTF for parent item. If we came here for transfer then PTF will be that of last org
                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PTF_DATE from  parent := ' || MSC_ATP_PVT.G_PTF_DATE);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_request_date := ' || l_atp_request_date);
                 END IF;

                 --diag_atp
                 l_get_mat_in_rec.rounding_control_flag := l_rounding_control_flag;
                 l_get_mat_in_rec.dest_inv_item_id := l_dest_inv_item_id;
                 l_get_mat_in_rec.plan_name := p_atp_record.plan_name;

	         IF ((p_search = FORWARD_SCHEDULING) AND
                     --- Enhance CTO Phase 1 Req #17
                       -- Support Forward Stealing for components of ATO model in
                       -- Model's sourcing organization.
                     --support forward scheduling for all level
                     --(p_parent_pegging_id IS NULL)  AND
                    --- End Enhance CTO Phase 1 Req #17
		    (MSC_ATP_PVT.G_INV_CTP = 4) AND
                    (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND
                    (MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1) AND
                    (MSC_ATP_PVT.G_ALLOCATION_METHOD = 1)) THEN

                    /*
                    --- Enhance CTO Phase 1 Req #17
                       -- Support Forward Stealing for components of ATO model in
                       -- Model's sourcing organization.
                    IF (NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) = p_atp_record.organization_id ) THEN
                       l_parent_peg_forward := p_parent_pegging_id;
                    ELSE
                       l_parent_peg_forward := 0;
                    END IF;
                    */

                    l_parent_peg_forward := p_parent_pegging_id;
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Parent Pegging Id :' || l_parent_peg_forward);
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Future Pegging Id :' || l_future_pegging_id);
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Demand Pegging Id :' || MSC_ATP_PVT.G_DEMAND_PEGGING_ID);
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Global Future Pegging Id :' || MSC_ATP_PVT.G_CTO_FORWARD_DMD_PEG);
                    END IF;

                    l_get_mat_in_rec.parent_bom_item_type := p_atp_record.parent_bom_item_type;
                    l_get_mat_in_rec.bom_item_type := C_ITEM_INFO_REC.bom_item_type;
                    l_get_mat_in_rec.replenish_to_ord_flag := C_ITEM_INFO_REC.replenish_to_ord_flag;
                    l_get_mat_in_rec.parent_repl_order_flag := p_atp_record.parent_repl_order_flag;
                    l_get_mat_in_rec.ato_model_line_id := p_atp_record.ato_model_line_id;
                    l_get_mat_in_rec.shipping_cal_code := p_atp_record.shipping_cal_code;
                    l_get_mat_in_rec.receiving_cal_code := p_atp_record.receiving_cal_code; -- Bug 3826234
                    l_get_mat_in_rec.intransit_cal_code := p_atp_record.intransit_cal_code; -- Bug 3826234
                    l_get_mat_in_rec.manufacturing_cal_code := p_atp_record.manufacturing_cal_code; -- Bug 3826234
                    l_get_mat_in_rec.to_organization_id := p_atp_record.to_organization_id; -- Bug 3826234
                    -- Bug 3371817 - Pass calendar code to calculate sys_next_date
                    --               In make case this will actually contain OMC for lower level components

		    MSC_AATP_REQ.Get_Forward_Material_Atp(
				p_atp_record.instance_id,
				p_plan_id,
				p_level + 1,
				p_atp_record.identifier,
				p_atp_record.demand_source_type,--cmro
				p_scenario_id,
				p_atp_record.inventory_item_id,
				p_atp_record.request_item_id, -- For time_phased_atp
				p_atp_record.organization_id,
				C_ITEM_INFO_REC.item_name,   -- Modular re-use
				PF_ITEM_INFO_REC.item_name,  -- For time_phased_atp
				l_requested_ship_date,
				p_atp_record.quantity_ordered,
				p_atp_record.demand_class,
				l_requested_date_quantity,
				l_atf_date_qty, -- For time_phased_atp
				l_atp_date_this_level,
				l_atp_date_quantity_this_level,
				l_atp_pegging_tab,
				l_return_status,
				l_used_available_quantity, --bug3409973
                                --diag_atp,
                                null,
                                l_get_mat_in_rec,
                                l_get_mat_out_rec,
                                p_atp_record.atf_date, -- For time_phased_atp
                                p_atp_record.order_number,
                                p_refresh_number,
                                l_parent_peg_forward);

                     IF p_parent_pegging_id is not null THEN

                        l_pegging_id := l_get_mat_out_rec.demand_pegging_id;
                         --bug3432341: store demand id for demands added in forward scheduling
                        l_demand_id := l_get_mat_out_rec.demand_id;

                     ELSE

                        l_pegging_id := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;

                     END IF;
                     p_atp_record.atf_date_quantity := NVL(l_atf_date_qty, 0);

                     --- End Enhance CTO Phase 1 Req #17
	             -- print the results from Get_Forward_Material_Atp
	             IF PG_DEBUG in ('Y', 'C') THEN
	                msc_sch_wb.atp_debug('ATP_Check: ' || '********** Result from Get_Forward_Material_Atp **********');
	                msc_sch_wb.atp_debug('ATP_Check: ' || 'l_used_available_quantity : '|| l_used_available_quantity); --bug3409973
	             END IF;

	         ELSE 		-- IF MSC_ATP_PVT.G_ALLOCATION_METHOD = 1
                        -- time_phased_atp changes begin
                        l_mat_atp_info_rec.instance_id               := p_atp_record.instance_id;
                        l_mat_atp_info_rec.plan_id                   := p_plan_id;
                        l_mat_atp_info_rec.level                     := p_level + 1;
                        l_mat_atp_info_rec.identifier                := p_atp_record.identifier;
                        l_mat_atp_info_rec.scenario_id               := p_scenario_id;
                        l_mat_atp_info_rec.inventory_item_id         := p_atp_record.inventory_item_id;
                        l_mat_atp_info_rec.request_item_id           := p_atp_record.request_item_id;
                        l_mat_atp_info_rec.organization_id           := p_atp_record.organization_id;
                        l_mat_atp_info_rec.requested_date            := l_requested_ship_date;
                        l_mat_atp_info_rec.quantity_ordered          := p_atp_record.quantity_ordered;
                        l_mat_atp_info_rec.demand_class              := p_atp_record.demand_class;
                        l_mat_atp_info_rec.insert_flag               := p_atp_record.insert_flag;
                        l_mat_atp_info_rec.rounding_control_flag     := l_get_mat_in_rec.rounding_control_flag;
                        l_mat_atp_info_rec.dest_inv_item_id          := l_get_mat_in_rec.dest_inv_item_id;
                        l_mat_atp_info_rec.infinite_time_fence_date  := l_get_mat_in_rec.infinite_time_fence_date;
                        l_mat_atp_info_rec.plan_name                 := l_get_mat_in_rec.plan_name;
                        l_mat_atp_info_rec.optimized_plan            := l_get_mat_in_rec.optimized_plan;
                        l_mat_atp_info_rec.substitution_window       := l_substitution_window;
                        l_mat_atp_info_rec.atf_date                  := p_atp_record.atf_date;
                        l_mat_atp_info_rec.refresh_number            := p_refresh_number;   -- For summary enhancement
                        l_mat_atp_info_rec.shipping_cal_code         := p_atp_record.shipping_cal_code;
                        -- Bug 3371817 - Pass calendar code to calculate sys_next_date
                        --               In make case this will actually contain OMC for lower level components

                        MSC_ATP_REQ.Get_Material_Atp_Info(
                                l_mat_atp_info_rec,
                                l_atp_period,
                                l_atp_supply_demand,
                                l_return_status);

                        l_atf_date_qty                               := l_mat_atp_info_rec.atf_date_quantity;
                        l_atp_date_this_level                        := l_mat_atp_info_rec.atp_date_this_level;
                        l_atp_date_quantity_this_level               := l_mat_atp_info_rec.atp_date_quantity_this_level;
                        l_get_mat_out_rec.atp_rule_name              := l_mat_atp_info_rec.atp_rule_name;
                        l_get_mat_out_rec.infinite_time_fence_date   := l_mat_atp_info_rec.infinite_time_fence_date;
                        l_requested_date_quantity                    := l_mat_atp_info_rec.requested_date_quantity;
                        p_atp_record.atf_date_quantity               := l_atf_date_qty;
                        -- time_phased_atp changes end
                        /* rajjain changes for re-review comments
                           removed check for rule based AATP as this should be set
                           for all scenarios
                        IF MSC_ATP_PVT.G_ALLOCATION_METHOD = 2 THEN
                          l_used_available_quantity := l_mat_atp_info_rec.atp_date_quantity_this_level;
                        END IF; --bug3409973*/
                        l_used_available_quantity := l_mat_atp_info_rec.atp_date_quantity_this_level;

	             -- print the results from Get_Material_Atp_Info
	             IF PG_DEBUG in ('Y', 'C') THEN
	                msc_sch_wb.atp_debug('ATP_Check: ' || '********** Result from Get_Material_Atp_Info **********');
	             END IF;

	         END IF;	-- IF MSC_ATP_PVT.G_ALLOCATION_METHOD = 1

                 -- Bug 3782472
                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('p_search '||p_search);
                    msc_sch_wb.atp_debug('MSC_ATP_PVT.G_PTF_DATE '||MSC_ATP_PVT.G_PTF_DATE);
                    msc_sch_wb.atp_debug('l_ptf_date '||l_ptf_date);
                    msc_sch_wb.atp_debug('l_requested_ship_date '||l_requested_ship_date);
                    msc_sch_wb.atp_debug('l_net_demand '||l_net_demand);
                 END IF;
                 IF p_search = FORWARD_SCHEDULING AND
                          l_requested_date_quantity >= p_atp_record.quantity_ordered and
                              MSC_ATP_PVT.G_PTF_DATE > l_requested_ship_date THEN
                    l_net_demand := l_net_demand;
                    l_atp_comp_flag := 'N';
                 ELSE

                    l_net_demand := p_atp_record.quantity_ordered -
                                              greatest(l_requested_date_quantity, 0);
                 END IF;

	         IF PG_DEBUG in ('Y', 'C') THEN
	            msc_sch_wb.atp_debug('ATP_Check: ' || 'l_return_status : '|| l_return_status);
	            msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date : '|| l_requested_ship_date);
	            msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_date_quantity : '|| l_requested_date_quantity);
	            msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_date_this_level : '|| l_atp_date_this_level);
	            msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_date_quantity_this_level : '|| l_atp_date_quantity_this_level);
	            msc_sch_wb.atp_debug('ATP_Check: ' || 'l_used_available_quantity : '|| l_used_available_quantity);
	            msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atf_date_qty : '|| l_atf_date_qty);
	            msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_pegging_tab : '|| l_atp_pegging_tab.COUNT);
	         END IF;
              ELSE
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('ATP_Check: ' || 'did not call get_material_atp_info');
               END IF;
               l_net_demand := p_atp_record.quantity_ordered;
               l_requested_date_quantity := 0.0; -- cchen 08/31

              END IF;
             ELSE
               /* --bug 4428128 : move this code down
               l_net_demand := p_atp_record.quantity_ordered;
               -- Bug 1587015, ngoel 1/19/2001
               l_requested_date_quantity := 0.0;
               */

               -- Bug 1566260, Initialize atp_date_this_level and atp_date_quantity_this_level to
               -- infinite_time_fence_date and INFINITE_NUMBER to avoid them to be null later on.

	       IF PG_DEBUG in ('Y', 'C') THEN
	          msc_sch_wb.atp_debug('ATP_Check: ' || 'Initialize atp_date and atp_quantity_this_level');
	       END IF;

               /* s_cto_rearch: chnage call to MSC_ATP_PROC.get_infinite_time_fence_date procedure
               l_atp_date_this_level := GREATEST(MSC_ATP_FUNC.get_infinite_time_fence_date(
                           p_atp_record.instance_id, p_atp_record.inventory_item_id,
                           p_atp_record.organization_id,p_plan_id), l_requested_ship_date);
                e_cto_rearch*/

               --bug 4394904: Store ITF in seperate variable
               MSC_ATP_PROC.get_infinite_time_fence_date(
                            p_atp_record.instance_id, p_atp_record.inventory_item_id,
                            p_atp_record.organization_id,p_plan_id,
                            --l_atp_date_this_level, l_atp_rule_name);
                            l_infinite_time_fence, l_atp_rule_name);
               l_atp_date_this_level := GREATEST(l_infinite_time_fence, l_requested_ship_date);

	       IF l_atp_date_this_level IS NOT NULL THEN
                  l_atp_date_quantity_this_level := INFINITE_NUMBER;
	       END IF;

               --bug 4428128: if request date > IFT then do not explode sources
               IF l_requested_ship_date >= l_infinite_time_fence THEN
                   l_requested_date_quantity := INFINITE_NUMBER;
                   l_net_demand := 0;
               ELSE
                   l_net_demand := p_atp_record.quantity_ordered;
                   -- Bug 1587015, ngoel 1/19/2001
                   l_requested_date_quantity := 0.0;
               END IF;

	       IF PG_DEBUG in ('Y', 'C') THEN
	          msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_date_this_level : '|| l_atp_date_this_level);
	          msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_date_quantity_this_level : '|| l_atp_date_quantity_this_level);
	          msc_sch_wb.atp_debug('ATP_Check: ' || 'l_used_available_quantity : '|| l_used_available_quantity); --bug3409973
	       END IF;

             END IF;

	     -- print the net_demand
	     IF PG_DEBUG in ('Y', 'C') THEN
	        msc_sch_wb.atp_debug('ATP_Check: ' || 'l_net_demand : '|| to_char(l_net_demand));
	     END IF;

             -- cchen 1238941

             -- this should be a good place to do substitute.
             -- we change the logic so that we do the substitutes check
             -- before we populate the supply pegging.
             -- for the primary. however, we need to populate the demand
             -- pegging tree so that the order in the pegging tree will be ok.

               -- prepare the insert record
               -- no matter it is a demand or not, we need to insert this
               -- record into database since it is a recursive procedure
               -- and we will rollback in ATP procedure if it is not a
               -- demand.
               --- Enhance CTO Phase 1 Req  #16 and #17

             IF NOT((p_search = FORWARD_SCHEDULING) AND
                    (MSC_ATP_PVT.G_INV_CTP = 4) AND
                    (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND
                    (MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1) AND
                    (MSC_ATP_PVT.G_ALLOCATION_METHOD = 1) and l_atp_flag = 'Y'

                  /*---bug 3524230 ---
                   Demand in demand priority allocated ATP for items with
                   atp flag is 'Y'  is added in get_forward_material_ATP info procedure.
                   The above condition restricts demand addition for such items.

                   If model's ATP flag is yes then ATP on model is performed only when
                   that model is made as model's supply statement is statement of resource capacity.
                   Therefore, resource capacity is used only when model is being made. Therefore,
                   the supply chian for model would be  POD for Model (Step 1) --> Make PO for Model
                      (Step 2) ---> POD for model + other components (step 3)

                   We do not need to check availability for model but do need to add demand in setp 1.
                   We do not call get_forward_material ATP info because we have a condition to not
                   call the procedure if we are in step 1. We were not adding demand here because
                   of above condition "l_atp_flag = 'Y'". As a result, demand for model was not getting added.
                   To correct this problem, we added the following condition.
                   If we are coming for second time for model then parent_item_is is populated.
                   In step 1 the condition below becomes false due
                   to null parent_item_id and the overall condition becomes true. Therefore, demand
                   for model gets added correctly. In setp 3, the demand becomes tru and hence overall
                   condition becomes false. Therfore, demand doesn't get added here but gets added
                   in get_forward_material_info. Thus, demand for model is maintained correctly.

                   */
                   AND NOT(C_ITEM_INFO_REC.bom_item_type = 1 and
                                    ( C_ITEM_INFO_REC.atp_comp_flag in ('Y', 'C') and
                                      p_atp_record.parent_item_id is null))) THEN
                -- Only Add Create Demand Record and Pegging when not dealing with Forward Stealing
               l_atp_insert_rec.instance_id := p_atp_record.instance_id;
               /* Modularize Item and Org Info */
               -- time_phased_atp changes begin
               IF G_INV_CTP = 5 THEN
                  l_atp_insert_rec.inventory_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
               ELSE
                  l_atp_insert_rec.inventory_item_id := PF_ITEM_INFO_REC.dest_inv_item_id;
               END IF;
               l_atp_insert_rec.request_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
               l_atp_insert_rec.atf_date := p_atp_record.atf_date;
               l_atp_insert_rec.atf_date_quantity := l_atf_date_qty;
               l_atp_insert_rec.requested_date_quantity := l_requested_date_quantity;
               -- time_phased_atp changes end

                -- No need to call function below.
               /*l_atp_insert_rec.inventory_item_id := MSC_ATP_FUNC.get_inv_item_id
                                                   (p_atp_record.instance_id,
                                                   --2152184
                                                   --p_atp_record.request_item_id,
						   l_request_item_id,
                                                   null,
                                                   p_atp_record.organization_id);
                Modularize Item and Org Info */
               l_atp_insert_rec.organization_id := p_atp_record.organization_id;
               l_atp_insert_rec.identifier := p_atp_record.identifier;
               l_atp_insert_rec.demand_source_type:=nvl(p_atp_record.demand_source_type, 2);
               l_atp_insert_rec.demand_source_header_id :=
                               nvl(p_atp_record.demand_source_header_id, -1);
               l_atp_insert_rec.demand_source_delivery :=
                               p_atp_record.demand_source_delivery;

               -- AATP: need to do something later on the reset the quantity
               -- back

               --steal_before_ctp
               --- if we are in allocated ATP and we want to do stealing then
               --- we will create demand for what is available. This way we wouldn't need to
               --- adjust the demand

               IF (l_net_demand > 0)
                    --stealing will be supported at all levels
                    -- AND ((p_parent_pegging_id IS NULL) OR -- Bug 2745728 Stealing for components.
                    --  NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) = p_atp_record.organization_id )
                   AND (p_search =1)
                   AND (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND (l_atp_flag = 'Y')
                   --bug 3524230: When ATP flag for model is 'Y' then we do ATP on this model
                   --- only when we are making it. Therefore, we need to add full quantity
                   -- when not doing ATP check on the model
                   AND NOT(C_ITEM_INFO_REC.bom_item_type = 1 and
                                    ( C_ITEM_INFO_REC.atp_comp_flag in ('Y', 'C') and
                                      p_atp_record.parent_item_id is null)) THEN
                  l_atp_insert_rec.quantity_ordered :=  LEAST(GREATEST(l_requested_date_quantity, 0),
                                                                      p_atp_record.quantity_ordered);
	          IF PG_DEBUG in ('Y', 'C') THEN
           	      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_insert_rec.quantity_ordered : '||
                                                                    l_atp_insert_rec.quantity_ordered);
           	      msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.quantity_ordered : '||
                                                                    p_atp_record.quantity_ordered);
           	      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_date_quantity : '||
                                                                    l_requested_date_quantity);
           	      msc_sch_wb.atp_debug('ATP_Check: ' || 'steal_before_ctp condition : ' );
	          END IF;
               ELSE
                  --5220357
                  /*
                  --5151972 insert demand for primary component = demand quantity found.
                  IF (p_search = BACKWARD_SCHEDULING) and (p_parent_pegging_id is not null
                       and MSC_ATP_PVT.G_SUB_COMP = 'Y')
                       --5192094 added check to see if actually we have calculated material availiability
                       and (l_atp_flag = 'Y') THEN
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Inside comp substitution ');
                     END IF;

                     l_atp_insert_rec.quantity_ordered :=  LEAST(GREATEST(l_requested_date_quantity, 0),
                                                                      p_atp_record.quantity_ordered);
                  ELSE
                     l_atp_insert_rec.quantity_ordered :=  p_atp_record.quantity_ordered;
                  END IF;
                  */
                  l_atp_insert_rec.quantity_ordered :=  p_atp_record.quantity_ordered;
	          IF PG_DEBUG in ('Y', 'C') THEN
           	      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_insert_rec.quantity_ordered : '||
                                                                    l_atp_insert_rec.quantity_ordered);
           	      msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.quantity_ordered : '||
                                                                    p_atp_record.quantity_ordered);
           	      msc_sch_wb.atp_debug('ATP_Check: ' || 'steal_before_ctp Else : ' );
	          END IF;
               END IF;

               l_atp_insert_rec.requested_ship_date := l_requested_ship_date;
               l_atp_insert_rec.demand_class := p_atp_record.demand_class;
               l_atp_insert_rec.refresh_number := p_refresh_number; -- summary enhancement p_atp_record.refresh_number;
               l_atp_insert_rec.order_number := p_atp_record.order_number;

               /* Enhance CTO Phase 1 Req #16 */
               -- Create Sales Orders instead of Plan Order Demands for
               -- CTO items and set the order line id for the item
               -- only for the appropriate organizations.
               IF (p_parent_pegging_id is NULL) or MSC_ATP_PVT.G_INV_CTP = 5 THEN
                   --NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) = p_atp_record.organization_id ) THEN

                 -- this is top level demand, which we should consider it
                 -- as sales order demand.

                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Either ODS based ATP or top level demand. Add as a SO Demand');
                 END IF;

	         -- Modified by ngoel on 1/12/2001 for origination_type = 30
                 --l_atp_insert_rec.origination_type := 6;
                 l_atp_insert_rec.origination_type := 30;

                 l_atp_insert_rec.demand_source_line := p_atp_record.demand_source_line;
                 l_atp_insert_rec.old_demand_id := p_atp_record.old_demand_id;
               ELSE
                 -- this is not the top level demand, which we should consider it
                 -- as planned order demand

                 -- ATP4drp If we are dealing with a component
                 -- then set the origination type to Constrained Kit Demand
                 -- for DRP plans.
                 IF (NVL(p_atp_record.parent_item_id, p_atp_record.inventory_item_id) <> p_atp_record.inventory_item_id AND
                      NVL(MSC_ATP_PVT.G_PLAN_INFO_REC.plan_type,1) = 5) THEN
                      l_atp_insert_rec.origination_type := 47;
                      IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('----- ATP4drp Specific Debug Messages -----');
                          msc_sch_wb.atp_debug('ATP_Check: ' || 'DRP origination_type ='|| l_atp_insert_rec.origination_type);
                          msc_sch_wb.atp_debug('ATP_Check: ' || 'DRP parent_item_id ='|| p_atp_record.parent_item_id);
                          msc_sch_wb.atp_debug('ATP_Check: ' || 'DRP child_item_id ='|| p_atp_record.inventory_item_id);
                          msc_sch_wb.atp_debug('----- ATP4drp Specific Debug Messages -----');
                      END IF;
                 ELSE
                      l_atp_insert_rec.origination_type := 1;
                 END IF;
                 -- End ATP4drp
                 IF (p_atp_record.parent_bom_item_type in (1, 4) and p_atp_record.parent_repl_order_flag = 'Y')
                    --parent is model entity
                    OR (C_ITEM_INFO_REC.bom_item_type in (1, 4) and C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y') THEN
                     ---always add line id for lower level model components
                     l_atp_insert_rec.demand_source_line := p_atp_record.demand_source_line;
                 END IF;

               END IF;
               /* End Enhance CTO Phase 1 Req #16 */
               -- for performance reason, we call these function here and
               -- then populate the pegging tree with the values

               -- for performance reason, we call these function here and
               -- then populate the pegging tree with the values

               /* Modularize Item and Org Info */
               -- Re-Use info instead of making unnecessary call.
               l_inv_item_name := C_ITEM_INFO_REC.item_name;
               /*l_inv_item_name := MSC_ATP_FUNC.get_inv_item_name(p_atp_record.instance_id,
                                         p_atp_record.inventory_item_id,
                                         p_atp_record.organization_id);

                Modularize Item and Org Info */
               MSC_ATP_PROC.get_global_org_info (p_atp_record.instance_id,
                                                  p_atp_record.organization_id);
               l_org_code := G_ORG_INFO_REC.org_code;
               /* l_org_code := MSC_ATP_FUNC.get_org_code(p_atp_record.instance_id,
                                          p_atp_record.organization_id);
                Modularize Item and Org Info */

               IF p_search = 1 and p_parent_pegging_id is null THEN
                  --- we need to pass old demand id so that we can update that demand
                  --- this will happen in case of reschedulling
                  l_atp_insert_rec.old_demand_id := p_atp_record.old_demand_id;
               ELSE
                  l_atp_insert_rec.old_demand_id := null;
               END IF;


   -- temporary
	       IF PG_DEBUG in ('Y', 'C') THEN
	          msc_sch_wb.atp_debug('ATP_Check: ' || 'temp l_net_demand : '|| l_net_demand);
	       END IF;
	       --optional_fw Only in first iteration code should come here or while adding POD lower level
               IF ((p_search = 1) AND (MSC_ATP_PVT.G_OPTIONAL_FW is null )) OR
                  ((p_search= 2 AND p_parent_pegging_id is not null)
                  OR (MSC_ATP_PVT.G_OPTIONAL_FW is not null AND p_parent_pegging_id is not null))
                  --- IN ODS ATP, we do not want add demand for model only once.
                  AND NOT (MSC_ATP_PVT.G_INV_CTP = 5 and p_atp_record.parent_item_id is not null) THEN

                 --s_cto_rearch
                 l_atp_insert_rec.Top_Model_line_id := p_atp_record.Top_Model_line_id;
                 l_atp_insert_rec.ATO_Parent_Model_Line_Id := p_atp_record.ATO_Parent_Model_Line_Id;
                 l_atp_insert_rec.Parent_line_id := p_atp_record.Parent_line_id;
                 l_atp_insert_rec.ATO_Model_Line_Id := p_atp_record.ATO_Model_Line_Id;
                 l_atp_insert_rec.wip_supply_type := p_atp_record.wip_supply_type;
                 l_atp_insert_rec.mand_comp_flag := p_atp_record.mand_comp_flag;
                 --plan by request date enhancement
                 l_atp_insert_rec.ship_set_name := p_atp_record.ship_set_name;
                 l_atp_insert_rec.arrival_set_name := p_atp_record.arrival_set_name;
                 l_atp_insert_rec.original_request_ship_date :=l_original_req_ship_date;
                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'latest_acceptable_date: '|| l_atp_insert_rec.latest_acceptable_date);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'latest_acceptable_date: '|| l_atp_insert_rec.original_request_ship_date);
                 END IF;
                 l_atp_insert_rec.wip_supply_type := p_atp_record.mand_comp_flag;
                 --e_cto_rearch

                 -- ship_rec_cal
                 IF p_search = 1 and p_parent_pegging_id is null THEN
                     IF  p_atp_record.ship_method <> '@@@' THEN
                        l_atp_insert_rec.ship_method := p_atp_record.ship_method;
                     ELSE
                        l_atp_insert_rec.ship_method := null;
                     END IF;
                 END IF;
                 IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_insert_rec.ship_method : '|| l_atp_insert_rec.ship_method);
                 END IF;
                 l_atp_insert_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
                 l_atp_insert_rec.delivery_lead_time := l_delivery_lead_time;

                 ---bug 4267076: Do not create demand for planned outbound shipment
                 IF NOT(p_parent_pegging_id is not null
                        AND NVL(p_atp_record.parent_item_id, p_atp_record.inventory_item_id)
                                                                  = p_atp_record.inventory_item_id
                        AND NVL(MSC_ATP_PVT.G_PLAN_INFO_REC.plan_type,1) = 5) THEN  --5067205

                    MSC_ATP_DB_UTILS.Add_Mat_Demand(l_atp_insert_rec,
                                 p_plan_id,
                                 l_demand_class_flag,
                                 l_demand_id);
                 END IF;

                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'after calling Add_Mat_Demand, l_demand_id ='||
                              l_demand_id);
                 END IF;

                 -- populate insert rec to pegging tree for this demand

                 l_pegging_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
                 --s_cto_rearch: store actual line id for lower level components
                 --l_pegging_rec.order_line_id:= MSC_ATP_PVT.G_ORDER_LINE_ID;
                 l_pegging_rec.order_line_id :=  p_atp_record.demand_source_line;
                 l_pegging_rec.parent_pegging_id:= p_parent_pegging_id;
                 l_pegging_rec.atp_level:= p_level;
                 l_pegging_rec.organization_id:= p_atp_record.organization_id;
                 l_pegging_rec.organization_code := l_org_code;
                 l_pegging_rec.identifier1:= p_atp_record.instance_id;
                 l_pegging_rec.identifier2 := p_plan_id;
                 l_pegging_rec.identifier3 := l_demand_id;

                 -- time_phased_atp changes begin
                 IF (l_pf_atp = 'Y') or (G_INV_CTP = 5) THEN
                     l_pegging_rec.inventory_item_id:= p_atp_record.inventory_item_id;
                     l_pegging_rec.inventory_item_name := PF_ITEM_INFO_REC.item_name;
                 ELSE
                     l_pegging_rec.inventory_item_id:= p_atp_record.request_item_id;
                     l_pegging_rec.inventory_item_name := C_ITEM_INFO_REC.item_name;
                 END IF;
                 l_pegging_rec.aggregate_time_fence_date := p_atp_record.atf_date;
                 -- time_phased_atp changes end

                 l_pegging_rec.resource_id := NULL;
                 l_pegging_rec.resource_code := NULL;
                 l_pegging_rec.department_id := NULL;
                 l_pegging_rec.department_code := NULL;
                 l_pegging_rec.supplier_id := NULL;
                 l_pegging_rec.supplier_name := NULL;
                 l_pegging_rec.supplier_site_id := NULL;
                 l_pegging_rec.supplier_site_name := NULL;
                 l_pegging_rec.scenario_id:= p_scenario_id;
                 l_pegging_rec.supply_demand_source_type:= 6;
                 l_pegging_rec.supply_demand_quantity:=
                    p_atp_record.quantity_ordered ;
                 l_pegging_rec.supply_demand_type:= 1;
                 l_pegging_rec.supply_demand_date:= l_requested_ship_date;

		 -- dsting ATO 2465370
		 IF NVL(G_LINE_OVERRIDE_FLAG, 'N') = 'Y'
		    --AND (NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) = p_atp_record.organization_id
		    --OR  p_parent_pegging_id is null)
		 THEN
		    l_pegging_rec.required_date := l_requested_ship_date;
                    --bug 3328421
                    l_pegging_rec.actual_supply_demand_date := l_requested_ship_date;
		 ELSE
                    -- Bug 2748730. No need to move date to the end of as we will be doing that
		    -- inside the procedure Add_Pegging
                    -- l_pegging_rec.required_date := TRUNC(l_requested_ship_date) + MSC_ATP_PVT.G_END_OF_DAY;
		    l_pegging_rec.required_date := l_requested_ship_date ;
                    --bug 3328421
                    l_pegging_rec.actual_supply_demand_date := l_requested_ship_date;
		 END IF;

                 /* ship_rec_cal
                    calendar constraint*/
                 IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP =1 and MSC_ATP_PVT.G_CALENDAR_CONSTRAINT='Y'
                        and p_parent_pegging_id is NULL THEN
                        l_pegging_rec.constraint_type :=7;
                 END IF;

                 -- for demo:1153192
                 l_pegging_rec.constraint_flag := 'N';
	         l_pegging_rec.component_identifier :=
                            NVL(p_atp_record.component_identifier, MSC_ATP_PVT.G_COMP_LINE_ID);

                 l_pegging_rec.summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;
                 --- bug 2152184: For PF based ATP inventory_item_id field contains id for PF item
                 --- cto looks at pegging tree to place their demands. Since CTO expects to find
                 --  id for the requested item, we add the following column. CTO will now read from this column
                 l_pegging_rec.request_item_id := p_atp_record.request_item_id;

                 --diag_atp
                 l_pegging_rec.pegging_type := MSC_ATP_PVT.ORG_DEMAND; --item demand node

                 --s_cto_rearch

                 IF (p_atp_record.parent_bom_item_type in (1, 4) and p_atp_record.parent_repl_order_flag = 'Y')
                    --parent is model entity
                    OR (C_ITEM_INFO_REC.bom_item_type in (1, 4) and C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y') THEN
                     l_pegging_rec.model_sd_flag := 1;
                 END IF;
                 l_pegging_rec.dest_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
                 l_pegging_rec.base_model_id := p_atp_record.base_model_id;
                 --e_cto_rearch

                 -- ship_rec_cal
                 IF p_search = 1 and p_parent_pegging_id is null THEN
                     IF  p_atp_record.ship_method <> '@@@' THEN
                        l_pegging_rec.ship_method := p_atp_record.ship_method;
                     ELSE
                        l_pegging_rec.ship_method := null;
                     END IF;
                 END IF;

                 -- Only Add Pegging when not dealing with Forward Stealing
                 l_pegging_rec.demand_class :=  p_atp_record.demand_class;

                 --4570421
                 l_pegging_rec.scaling_type                      := p_atp_record.scaling_type;
                 l_pegging_rec.scale_multiple                    := p_atp_record.scale_multiple;
                 l_pegging_rec.scale_rounding_variance           := p_atp_record.scale_rounding_variance;
                 l_pegging_rec.rounding_direction                := p_atp_record.rounding_direction;
                 l_pegging_rec.component_yield_factor            := p_atp_record.component_yield_factor; --4570421
                 l_pegging_rec.usage                             := p_atp_record.usage_qty; --4775920
                 l_pegging_rec.organization_type                 := p_atp_record.organization_type; --4775920

                 MSC_ATP_DB_UTILS.Add_Pegging(l_pegging_rec, l_pegging_id);

                 IF p_search = 1 AND p_parent_pegging_id is null THEN
                   MSC_ATP_PVT.G_DEMAND_PEGGING_ID := l_pegging_id;
                 END IF;
               ELSE
                 l_pegging_id := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
                  --5158454 In cases when profile is set to yes and time phased ATP happens then
                  --  we need the value in l_demand_id of originally inserted SO demand.
                  IF l_time_phased_atp = 'Y' AND G_FORWARD_ATP = 'Y' THEN

                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('ATP_Check: ' || 'before assigning from G_DEMAND_ID, G_DEMAND_ID ='||
                              G_DEMAND_ID);
                     END IF;
                     l_demand_id  := NVL(l_demand_id,G_DEMAND_ID);

                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('ATP_Check: ' || 'after assigning from G_DEMAND_ID, l_demand_id ='||
                              l_demand_id);
                     END IF;
                  END IF;
		 --dsting Stealing was here but commented out 10/17/02.
               END IF;
             ELSE
                  --for demand priority forward ATP we have already set l_pegging_id after get_forward
                  /*
                  l_pegging_id := MSC_ATP_PVT.G_CTO_FORWARD_DMD_PEG;
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('ATP_Check: ' || 'Demand Pegging Id for Forward Stealing is : ' || l_pegging_id);
                  END IF;

                  */
                  IF p_parent_pegging_id is not null THEN

                    l_pegging_id := l_get_mat_out_rec.demand_pegging_id;

                  ELSE

                    l_pegging_id := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;

                  END IF;

             END IF;
             --- End Enhance CTO Phase 1 Req #17

               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Right before pegging');
               END IF;
               --optional_fw first iteration we should come here
               IF (p_parent_pegging_id is null) AND (p_search = 1) AND MSC_ATP_PVT.G_OPTIONAL_FW is null THEN
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'p_parent_pegging_id is null');
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PEGGING_FOR_SET.COUNT = ' ||MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'G_REQ_ATP_DATE.COUNT = ' || MSC_ATP_PVT.G_REQ_ATP_DATE.COUNT);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'G_REQ_DATE_QTY.COUNT = ' || MSC_ATP_PVT.G_REQ_DATE_QTY.COUNT);
                   END IF;

                   MSC_ATP_PVT.G_PEGGING_FOR_SET.Extend;
                   MSC_ATP_PVT.G_REQ_ATP_DATE.EXTEND;
 		   MSC_ATP_PVT.G_REQ_DATE_QTY.EXTEND;

                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PEGGING_FOR_SET.COUNT = ' ||MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'G_REQ_ATP_DATE.COUNT = ' || MSC_ATP_PVT.G_REQ_ATP_DATE.COUNT);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'G_REQ_DATE_QTY.COUNT = ' || MSC_ATP_PVT.G_REQ_DATE_QTY.COUNT);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_pegging_id = '||l_pegging_id );
                   END IF;


                   MSC_ATP_PVT.G_PEGGING_FOR_SET(MSC_ATP_PVT.G_PEGGING_FOR_SET.COUNT) := l_pegging_id;
                   MSC_ATP_PVT.G_REQ_ATP_DATE( MSC_ATP_PVT.G_REQ_ATP_DATE.COUNT) := l_requested_ship_date;
                   MSC_ATP_PVT.G_REQ_DATE_QTY(MSC_ATP_PVT.G_REQ_DATE_QTY.COUNT) := p_atp_record.Quantity_Ordered;

               END IF;
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Right after pegging');
               END IF;
		-- dsting: 9/19/2002 component substitute check moved to
		-- after move_sd_temp_to_mrp_details.
               --optional_fw we need to come here for condition added
               IF (
                    (
                     ( p_search = 2 AND p_parent_pegging_id is not null) OR
                     (MSC_ATP_PVT.G_OPTIONAL_FW is not null )
                    )
                   OR
                    ((p_search=1) AND (MSC_ATP_PVT.G_OPTIONAL_FW is null ))
                  ) AND
                   --bug 4428128: Add supply pegging if req date >= ITF
                  ((l_atp_flag in ('Y', 'C') AND
                  NOT(C_ITEM_INFO_REC.bom_item_type = 1 and
                                       --bug 3423277
                                       C_ITEM_INFO_REC.atp_comp_flag in ('Y', 'C') and
                                      p_atp_record.parent_item_id is null))
                 ---bug 4523103: Add pegging corretly if  req date >= ITF
                 or (l_atp_flag = 'N' and l_requested_ship_date >= l_infinite_time_fence)) AND
                 -- populate pegging tree for existing supply
                 -- If this is the backward search, no matter what we have
                 -- on the request date, we need to populate it.
                 (NVL(l_parent_peg_forward, 0) = 0) THEN
                   --- Enhance CTO Phase 1 Req #17

                 l_pegging_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
                 l_pegging_rec.order_line_id:= MSC_ATP_PVT.G_ORDER_LINE_ID;
                 l_pegging_rec.parent_pegging_id:= l_pegging_id;
                 l_pegging_rec.atp_level:= p_level + 1;
                 l_pegging_rec.organization_id:= p_atp_record.organization_id;
                 l_pegging_rec.organization_code := l_org_code;
                 l_pegging_rec.identifier1:= p_atp_record.instance_id;
                 l_pegging_rec.identifier2 := p_plan_id;
                 l_pegging_rec.identifier3 := NULL;

                 -- time_phased_atp changes begin
                 IF l_time_phased_atp = 'Y' and l_requested_ship_date <= p_atp_record.atf_date THEN
                         l_pegging_rec.inventory_item_id:= l_request_item_id;
                         l_pegging_rec.inventory_item_name := C_ITEM_INFO_REC.item_name;
                 ELSE
                         l_pegging_rec.inventory_item_id:= p_atp_record.inventory_item_id;
                         l_pegging_rec.inventory_item_name := PF_ITEM_INFO_REC.item_name;
                 END IF;
                 l_pegging_rec.aggregate_time_fence_date := p_atp_record.atf_date;
                 -- time_phased_atp changes end
                 --s_cto_rearch
                 l_pegging_rec.dest_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;

                 l_pegging_rec.resource_id := NULL;
                 l_pegging_rec.resource_code := NULL;
                 l_pegging_rec.department_id := NULL;
                 l_pegging_rec.department_code := NULL;
                 l_pegging_rec.supplier_id := NULL;
                 l_pegging_rec.supplier_name := NULL;
                 l_pegging_rec.supplier_site_id := NULL;
                 l_pegging_rec.supplier_site_name := NULL;
                 l_pegging_rec.scenario_id:= p_scenario_id;
                 l_pegging_rec.supply_demand_source_type:= ATP;
                 l_pegging_rec.supply_demand_quantity:=l_requested_date_quantity;
                 l_pegging_rec.supply_demand_date:= l_requested_ship_date;
                 l_pegging_rec.supply_demand_type:= 2;
                 l_pegging_rec.source_type := 0;
	         l_pegging_rec.component_identifier :=
                            NVL(p_atp_record.component_identifier, MSC_ATP_PVT.G_COMP_LINE_ID);

                 -- for demo:1153192
                 --optional_fw
                 IF ((p_search = 1)
                      AND (l_atp_comp_flag = 'N')
                      AND ( p_atp_record.quantity_ordered >=
                           l_requested_date_quantity)) AND (G_FORWARD_ATP = 'N' OR G_SUBSTITUTION_FLAG = 'Y')THEN --5211286
                     l_pegging_rec.constraint_flag := 'Y';
                 ELSE
                     l_pegging_rec.constraint_flag := 'N';

                 END IF;

                 l_pegging_rec.summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;
                 --- bug 2152184: For PF based ATP inventory_item_id field contains id for PF item
                 --- cto looks at pegging tree to place their demands. Since CTO expects to find
                 --  id for the requested item, we add the following column. CTO will now read from this column
                 l_pegging_rec.request_item_id := p_atp_record.request_item_id;

                 --diag_atp
                 l_pegging_rec.plan_name := p_atp_record.plan_name;
                 --5151678 no need for assigning with global variable.
                 /*
                 --optional_fw added correct required date in pegging
                 IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('ATP_Check: ' || 'G_REQUESTED_SHIP_DATE = '||G_REQUESTED_SHIP_DATE);
                 END IF;
                 l_pegging_rec.required_quantity:= p_atp_record.quantity_ordered;
                 l_pegging_rec.required_date := G_REQUESTED_SHIP_DATE; --l_requested_ship_date;
                 */
                 l_pegging_rec.required_quantity:= p_atp_record.quantity_ordered;
                 l_pegging_rec.required_date := l_requested_ship_date;
                 --bug 3328421
                 l_pegging_rec.actual_supply_demand_date := l_requested_ship_date;
                 l_pegging_rec.infinite_time_fence := l_get_mat_out_rec.infinite_time_fence_date;
                 l_pegging_rec.atp_rule_name := l_get_mat_out_rec.atp_rule_name;
                 l_pegging_rec.rounding_control := l_rounding_control_flag;
                 l_pegging_rec.atp_flag := l_atp_flag;
                 l_pegging_rec.atp_component_flag := l_atp_comp_flag;
                 l_pegging_rec.pegging_type := MSC_ATP_PVT.ATP_SUPPLY; ---atp supply node
                 l_pegging_rec.postprocessing_lead_time := l_post_pro_lt;
		 l_pegging_rec.processing_lead_time := l_process_lt; -- 5438149
                 l_pegging_rec.preprocessing_lead_time := l_pre_pro_lt;
                 l_pegging_rec.fixed_lead_time := l_fixed_lt;
                 l_pegging_rec.variable_lead_time := l_variable_lt;
                 l_pegging_rec.weight_capacity := l_unit_weight;
                 l_pegging_rec.volume_capacity := l_unit_volume;
                 l_pegging_rec.weight_uom := l_weight_uom;
                 l_pegging_rec.volume_uom := l_volume_uom;
                 l_pegging_rec.allocation_rule := l_allocation_rule_name;
                 l_pegging_rec.substitution_window  := l_substitution_window;
                 l_pegging_rec.REVERSE_CUM_YIELD := p_atp_record.reverse_cumulative_yield;
                 l_pegging_rec.model_sd_flag := 2;


                 IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP =1 THEN
                     IF ((p_search = 1) and (l_atp_comp_flag = 'N') and
                           (p_atp_record.quantity_ordered > l_requested_date_quantity)) THEN
                        l_pegging_rec.constraint_type := 1;
                        p_atp_record.combined_requested_date_qty := l_requested_date_quantity;
			p_atp_record.requested_date_quantity := l_requested_date_quantity;
                     END IF;
                 END IF;

                 l_pegging_rec.demand_class :=  p_atp_record.demand_class;
                 -- Bug 3826234
                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || '----------- Calendars passed to Pegging -----------------');
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'shipping_cal_code = '      ||p_atp_record.shipping_cal_code);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'receiving_cal_code = '     ||p_atp_record.receiving_cal_code);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'intransit_cal_code = '     ||p_atp_record.intransit_cal_code);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'manufacturing_cal_code = ' ||p_atp_record.manufacturing_cal_code);
                 END IF;
                 IF p_parent_pegging_id is null then
                    l_pegging_rec.shipping_cal_code      :=  p_atp_record.shipping_cal_code;
                    l_pegging_rec.receiving_cal_code     :=  p_atp_record.receiving_cal_code;
                    l_pegging_rec.intransit_cal_code     :=  p_atp_record.intransit_cal_code;
                    l_pegging_rec.manufacturing_cal_code :=  p_atp_record.manufacturing_cal_code;
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Inside IF');
                    END IF;
                 ELSIF NVL(p_atp_record.to_organization_id,p_atp_record.organization_id)
                                                             <> p_atp_record.organization_id THEN

                    l_pegging_rec.shipping_cal_code      :=  p_atp_record.shipping_cal_code;
                    l_pegging_rec.receiving_cal_code     :=  p_atp_record.receiving_cal_code;
                    l_pegging_rec.intransit_cal_code     :=  p_atp_record.intransit_cal_code;
                    l_pegging_rec.manufacturing_cal_code :=  NULL;
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Inside ELSIF');
                    END IF;
                 ELSE
                    l_pegging_rec.manufacturing_cal_code :=  p_atp_record.manufacturing_cal_code;
                    l_pegging_rec.shipping_cal_code      :=  NULL;
                    l_pegging_rec.receiving_cal_code     :=  NULL;
                    l_pegging_rec.intransit_cal_code     :=  NULL;
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Inside ELSE');
                    END IF;
                 END IF;
                 -- Bug 3826234

                 --4570421
                 l_pegging_rec.scaling_type                      := p_atp_record.scaling_type;
                 l_pegging_rec.scale_multiple                    := p_atp_record.scale_multiple;
                 l_pegging_rec.scale_rounding_variance           := p_atp_record.scale_rounding_variance;
                 l_pegging_rec.rounding_direction                := p_atp_record.rounding_direction;
                 l_pegging_rec.component_yield_factor            := p_atp_record.component_yield_factor; --4570421
                 l_pegging_rec.usage                             := p_atp_record.usage_qty; --4775920
                 l_pegging_rec.organization_type                 := p_atp_record.organization_type; --4775920

                 MSC_ATP_DB_UTILS.Add_Pegging(l_pegging_rec, l_atp_pegging_id);

                 -- Add pegging_id to the l_atp_period and l_atp_supply_demand
                 --optional_fw store the the supply line pegging id for forward pass
                 IF (MSC_ATP_PVT.G_OPTIONAL_FW is not null and p_parent_pegging_id is null) THEN
                   G_FW_PEGGING_ID := l_atp_pegging_id;
                   IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Setting G_FW_PEGGING_ID for ATP supply line ' || G_FW_PEGGING_ID);
                   END IF;
                 END IF;

                 FOR i in 1..l_atp_period.Level.COUNT LOOP
                   l_atp_period.Pegging_Id(i) := l_atp_pegging_id;
                   l_atp_period.End_Pegging_Id(i) := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
                 END LOOP;


                 -- dsting: supply/demand details pl/sql table no longer used
/*                 FOR i in 1..l_atp_supply_demand.Level.COUNT LOOP
                   l_atp_supply_demand.Pegging_Id(i) := l_atp_pegging_id;
                   l_atp_supply_demand.End_Pegging_Id(i) := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
                 END LOOP;
*/
		 IF p_atp_record.insert_flag <> 0 THEN
	   	         MSC_ATP_DB_UTILS.move_SD_temp_into_mrp_details(l_atp_pegging_id,
				MSC_ATP_PVT.G_DEMAND_PEGGING_ID);
   		 END IF;


               -- Now if this item was a component of a BOM, then check the
               -- substitutes and see if we can satisfy the demand

   -- Nagaraj
               IF ( p_search = BACKWARD_SCHEDULING) and (p_parent_pegging_id is not null --5006799
                   and l_net_demand > 0  and MSC_ATP_PVT.G_SUB_COMP = 'Y') THEN
                 IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Before check substitutes call:'||
                 to_char(p_parent_pegging_id) || ':' || to_char(l_net_demand));
                 END IF;

                 -- Setup new g_atp_record during each loop, we should not
                 -- resue the original record, because we need the original one
                 -- for CTP if there is not enough supply of components
                 g_atp_record.error_code := ALLSUCCESS;
                 g_atp_record.inventory_item_id := p_atp_record.inventory_item_id;
                 -- time_phased_atp changes begin
                 IF l_pf_atp = 'Y' THEN
                     g_atp_record.request_item_id := p_atp_record.inventory_item_id;
                 ELSE
                     g_atp_record.request_item_id := p_atp_record.request_item_id;
                 END IF;
                 g_atp_record.atf_date := p_atp_record.atf_date;
                 -- time_phased_atp changes end
                 g_atp_record.organization_id := p_atp_record.organization_id;
                 g_atp_record.instance_id := p_atp_record.instance_id;
                 g_atp_record.quantity_ordered := l_net_demand;
                 g_atp_record.quantity_UOM := p_atp_record.quantity_UOM;
                 g_atp_record.requested_ship_date :=
                             p_atp_record.requested_ship_date;
                 g_atp_record.requested_arrival_date :=
                             p_atp_record.requested_arrival_date;
                 g_atp_record.latest_acceptable_date :=
                             p_atp_record.latest_acceptable_date;
                 g_atp_record.delivery_lead_time :=
                             p_atp_record.delivery_lead_time;
                 g_atp_record.freight_carrier := p_atp_record.freight_carrier;
                 g_atp_record.ship_method := p_atp_record.ship_method;
                 g_atp_record.demand_class := p_atp_record.demand_class;
                 g_atp_record.override_flag := p_atp_record.override_flag;
                 g_atp_record.action := p_atp_record.action;
                 g_atp_record.ship_date := p_atp_record.ship_date;
                 g_atp_record.available_quantity :=
                             p_atp_record.available_quantity;
                 g_atp_record.used_available_quantity :=
                             p_atp_record.used_available_quantity; --bug3409973
                 g_atp_record.requested_date_quantity :=
                             p_atp_record.requested_date_quantity;
                 g_atp_record.supplier_id := p_atp_record.supplier_id;
                 g_atp_record.supplier_site_id := p_atp_record.supplier_site_id;
                 g_atp_record.insert_flag := p_atp_record.insert_flag;
                 g_atp_record.order_number := p_atp_record.order_number;
                 g_atp_record.demand_source_line :=
                             p_atp_record.demand_source_line;
                 g_atp_record.demand_source_header_id :=
                             p_atp_record.demand_source_header_id;
                 g_atp_record.demand_source_type :=
                             p_atp_record.demand_source_type;
                 g_atp_record.shipping_cal_code := p_atp_record.shipping_cal_code; -- Bug 3371817
                 g_atp_record.manufacturing_cal_code := p_atp_record.manufacturing_cal_code; -- Bug 3826234

                 -- cchen : 1238941
                 -- temporary we set the the l_sub_requested_date_quantity
                 -- to the original net demand
                 l_sub_requested_date_quantity := l_net_demand;
                 --plan by request date enhancement
                 g_atp_record.ship_set_name := p_atp_record.ship_set_name;
                 g_atp_record.arrival_set_name := p_atp_record.arrival_set_name;
                 g_atp_record.original_request_ship_date := l_original_req_ship_date;
                 g_atp_record.bill_seq_id := p_atp_record.bill_seq_id; --4741012 passing bill id
                 -- l_sub_net_demand := l_net_demand;
                 --4902658 Start This is for primary component / 5216528
                 l_substitutes_rec.inventory_item_id.EXTEND;
                 l_substitutes_rec.pegging_id.EXTEND;
                 l_substitutes_rec.sub_atp_qty.EXTEND;
                 l_substitutes_rec.demand_id.EXTEND;
                 l_substitutes_rec.atf_date_quantity.EXTEND; --5283809
                 l_substitutes_rec.quantity_ordered.EXTEND;
                 l_substitutes_rec.pf_item_id.EXTEND;

                 MSC_ATP_REQ.Check_Substitutes(
                  g_atp_record,
                  p_parent_pegging_id,
                  g_atp_record.instance_id,
                  p_scenario_id,
                  p_level,
                  p_search,
                  p_plan_id,
                  g_atp_record.inventory_item_id,
                  g_atp_record.organization_id,
                  g_atp_record.quantity_ordered,
                  l_net_demand,  -- out variable
                  x_atp_supply_demand,
                  x_atp_period,
                  l_substitutes_rec,--4902658/5216528
                  l_return_status,
                  p_refresh_number);    -- For summary enhancenment
                -- this is to keep track how many we have in substitutes

                 -- 4902658/5216528 start this has main items's details
                 l_substitutes_rec.inventory_item_id(1) := p_atp_record.Request_Item_Id; --4902658/5216528
                 l_substitutes_rec.pegging_id(1) := l_pegging_Id; --4902658/5216528
                 l_substitutes_rec.demand_id(1) := l_demand_id; --4902658/5216528
                 l_substitutes_rec.sub_atp_qty(1) :=  LEAST(GREATEST(l_requested_date_quantity, 0),
                                                                      p_atp_record.quantity_ordered);
               IF PG_DEBUG in ('Y', 'C') THEN
                 for ii in 1..l_substitutes_rec.inventory_item_id.count
                  loop
                    msc_sch_wb.atp_debug('From Substitute Array Item   : '|| l_substitutes_rec.inventory_item_id(ii));
                    msc_sch_wb.atp_debug('From Substitute Array Pegging: '|| l_substitutes_rec.pegging_id(ii));
                    msc_sch_wb.atp_debug('From Substitute Array ATP QTY: '|| l_substitutes_rec.sub_atp_qty(ii));
                  end loop;
               END IF;
               --4902658/5216528 end
                -- cchen : 1238941
                -- l_sub_net_demand := l_sub_net_demand - l_net_demand;
                l_sub_requested_date_quantity := l_sub_requested_date_quantity -
                                                greatest(l_net_demand, 0);

                --4570421
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_net_demand:'|| l_net_demand);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_sub_requested_date_quantity:'|| l_sub_requested_date_quantity);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.scaling_type'|| p_atp_record.scaling_type);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'MSC_ATP_PVT.G_ORG_INFO_REC.org_type:'|| MSC_ATP_PVT.G_ORG_INFO_REC.org_type);
                END IF;
                IF ( ( MSC_ATP_PVT.G_ORG_INFO_REC.org_type = MSC_ATP_PVT.DISCRETE_ORG AND p_atp_record.scaling_type = 2) OR
                     (MSC_ATP_PVT.G_ORG_INFO_REC.org_type = MSC_ATP_PVT.OPM_ORG AND p_atp_record.scaling_type IN (0,2))) AND l_net_demand = 0 then
                      -- Delete the supply pegging of the main component, if substitute can satisfy the lot-size.
                      MSC_ATP_DB_UTILS.delete_pegging( l_atp_pegging_id);
                END IF;

                IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP =1 THEN
                     IF ((p_search = 1) and (l_atp_comp_flag = 'N') and
                           (p_atp_record.quantity_ordered > l_requested_date_quantity)) THEN
                        l_pegging_rec.constraint_type := 1;
                        p_atp_record.combined_requested_date_qty := l_requested_date_quantity +
                                                                                   l_sub_requested_date_quantity;
                     END IF;
                END IF;

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'After check substitutes:'||
                                             to_char(l_net_demand));
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_sub_requested_date_quantity : '||
                                             to_char(l_sub_requested_date_quantity));
                END IF;

               -- In order to show the correct demand quantity that got considered
               -- for the primary component, we need to change the requested
               -- quantity for that primary component to what was requested minus
               -- what got satisfied by the substitutes

               -- cchen : 1238941
               -- p_atp_record.quantity_ordered :=
               --          (p_atp_record.quantity_ordered - l_net_demand);
               -- l_atp_insert_rec.quantity_ordered :=
               --          (l_atp_insert_rec.quantity_ordered - l_net_demand);
               -- l_pegging_rec.supply_demand_quantity :=
               --          (l_pegging_rec.supply_demand_quantity - l_net_demand);

               -- update the primary demand pegging tree with right quantity since
               -- we do the substitute now.
                  --5220357 start
                 IF l_sub_requested_date_quantity > 0 THEN
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'Update POD for Primary Component');
                   END IF;
		   IF NVL(MSC_ATP_PVT.G_DIAGNOSTIC_ATP,2) <> 1 THEN
                   	MSC_ATP_DB_UTILS.Update_Pegging(l_pegging_id,
                                  null,
                                  p_atp_record.quantity_ordered-
                                  l_sub_requested_date_quantity );
		   END IF;

                   update msc_demands
                   set    USING_REQUIREMENT_QUANTITY =
                          MSC_ATP_UTILS.Truncate_Demand((USING_REQUIREMENT_QUANTITY-
                           greatest(l_sub_requested_date_quantity, 0)))  -- 5598066
                   where  demand_id = l_demand_id
                   and    plan_id = p_plan_id
                   returning inventory_item_id into l_inventory_item_id;

                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'number of rows updated := ' || SQL%ROWCOUNT);
                   END IF;
                   /* time_phased_atp
                      need to check this while UT*/
                   IF l_time_phased_atp = 'Y' THEN
		        --using the same insert rec we prepared earlier
		        l_atp_insert_rec.quantity_ordered :=  l_atp_insert_rec.quantity_ordered - greatest(l_sub_requested_date_quantity, 0);
		        l_atp_insert_rec.requested_date_quantity := l_atp_insert_rec.requested_date_quantity - greatest(l_sub_requested_date_quantity, 0);
		        -- No need to change ATF date qty, let it be the same. Increment_Bucketed_Demands_Qty will take care of whether to use
		        -- qty upto ATF completely.
		        MSC_ATP_PF.Increment_Bucketed_Demands_Qty(
                                l_atp_insert_rec,
                                p_plan_id,
                                l_demand_id,
                                l_return_status
		        );
                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured in procedure Increment_Bucketed_Demands_Qty');
                           END IF;
                           RAISE FND_API.G_EXC_ERROR;
                        END IF;
                   ELSIF MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                      AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN
                          update msc_alloc_demands
                          set allocated_quantity = (allocated_quantity -
                                                    greatest(l_sub_requested_date_quantity, 0))
                          where parent_demand_id = l_demand_id --updating for primary only
                          and   plan_id = p_plan_id;

                          IF PG_DEBUG in ('Y', 'C') THEN
                             msc_sch_wb.atp_debug('ATP_Check: ' || 'number of rows updated := ' || SQL%ROWCOUNT);
                          END IF;
                   END IF;
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inventory_item_id := ' || l_inventory_item_id);
                      msc_sch_wb.atp_debug('ATP_Check: ' || ' MSC_ATP_PVT.G_SUMMARY_FLAG := ' ||  MSC_ATP_PVT.G_SUMMARY_FLAG);
                   END IF;

                   -- update summary records removed in ODS case - for summary enhancement
                   IF MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y' AND p_plan_id = -1 THEN
                       MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                          p_plan_id,
                                                          p_atp_record.organization_id,
                                                          l_inventory_item_id,
                                                          l_requested_ship_date,
                                                          null,
                                                          null,
                                                          null,
                                                          null,
                                                          null,
                                                          null,
                                                          2);
                       update /*+ INDEX(msc_atp_summary_sd MSC_ATP_SUMMARY_SD_U1) */ msc_atp_summary_sd
                       set sd_qty = sd_qty + greatest(l_sub_requested_date_quantity, 0)
                       where plan_id = p_plan_id
                       and sr_instance_id  = p_atp_record.instance_id
                       and inventory_item_id = l_inventory_item_id
                       and organization_id = p_atp_record.organization_id
                       and sd_date = trunc(l_requested_ship_date);
                       commit;
                   END IF;

                 END IF;
                 --5220357 end
             ELSE --4902658/5216528 start if no check_substitutes gets called in b/w pass
                l_substitutes_rec.inventory_item_id.EXTEND;
                l_substitutes_rec.pegging_id.EXTEND;
                l_substitutes_rec.sub_atp_qty.EXTEND;
                l_substitutes_rec.demand_id.EXTEND;
                l_substitutes_rec.atf_date_quantity.EXTEND; --5283809
                l_substitutes_rec.quantity_ordered.EXTEND;
                l_substitutes_rec.pf_item_id.EXTEND;

                l_substitutes_rec.demand_id(1) := l_demand_id; --4902658/5216528

                l_substitutes_rec.inventory_item_id(1) := p_atp_record.request_Item_Id;

                l_substitutes_rec.pegging_id(1) := l_pegging_Id;
                l_substitutes_rec.sub_atp_qty(1) :=  LEAST(GREATEST(l_requested_date_quantity, 0),
                                                           p_atp_record.quantity_ordered);
                --4902658/5216528 end
               END IF; -- for substitute check
   -- Nagaraj

                 -- 1413608: instead of replace x_atp with l_atp, append it
                 -- x_atp_supply_demand := l_atp_supply_demand;
                 -- x_atp_period := l_atp_period;

                 MSC_ATP_PROC.Details_Output(l_atp_period,
                                l_atp_supply_demand,
                                x_atp_period,
                                x_atp_supply_demand,
                                l_return_status);
              ELSE --4902658/5216528 start For f/w pass when check_substitutes is not callled.
                 l_substitutes_rec.inventory_item_id.EXTEND;
                 l_substitutes_rec.pegging_id.EXTEND;
                 l_substitutes_rec.sub_atp_qty.EXTEND;
                 l_substitutes_rec.demand_id.EXTEND;
                 l_substitutes_rec.atf_date_quantity.EXTEND; --5283809
                 l_substitutes_rec.quantity_ordered.EXTEND;
                 l_substitutes_rec.pf_item_id.EXTEND;

                 l_substitutes_rec.demand_id(1) := l_demand_id; --4902658/5216528
                 l_substitutes_rec.inventory_item_id(1) := p_atp_record.Request_Item_Id;
                 l_substitutes_rec.pegging_id(1) := l_pegging_Id;
                 l_substitutes_rec.sub_atp_qty(1) :=  LEAST(GREATEST(l_requested_date_quantity, 0),
                                                            p_atp_record.quantity_ordered);
                 --4902658/5216528 end
               END IF;

               --- Enhance CTO Phase 1 Req #17
               -- for aatp --- steal_before_ctp
               -- Only do stealing if ATP flag for the item is Yes.
               --s_cto_rearch: Do stealing for all levels in all orgs
               /* IF (l_net_demand > 0) AND -- Bug 2745728 removed p_parent_pegging_id clause
                   --- Enhance CTO Phase 1 Req #17
                       -- Support Backward Stealing for components of ATO model in
                       -- Model's sourcing organization.
                    ( (p_parent_pegging_id IS NULL) OR
                        NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) = p_atp_record.organization_id ) AND
                    --- End Enhance CTO Phase 1 Req #17
                  (p_search =1)
                  AND (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND (l_atp_flag = 'Y') THEN

               --IF ((MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND (l_net_demand > 0) AND
               --    (l_atp_flag = 'Y') AND (l_atp_comp_flag = 'N') AND
               --    (p_parent_pegging_id is null)) THEN
               */
               IF (l_net_demand > 0) AND
                   (p_search =1) AND (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND (l_atp_flag = 'Y')
                              --bug 3423277: Restrict stealing only for cases where we are
                               ---doing atp check for model.
                              AND NOT(C_ITEM_INFO_REC.bom_item_type = 1 and
                                    ( C_ITEM_INFO_REC.atp_comp_flag in ('Y', 'C') and
                                      p_atp_record.parent_item_id is null)) THEN
                   --- Enhance CTO Phase 1 Req #17
                       -- Support Backward Stealing for components of ATO model in
                       -- Model's sourcing organization.
                       -- Do not reset the parent pegging Id in such a case.
                   /* We support stealing at all levels.
                   IF (NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) <> p_atp_record.organization_id) THEN
                       l_pegging_id := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
                   END IF;
                   */

                   IF p_parent_pegging_id is null THEN
                        l_pegging_id := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
                   END IF;
                   --- End Enhance CTO Phase 1 Req #17

                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'Start stealing in backward case, before CTP');
                   END IF;
                   -- AATP: here we need to do the stealing.
                   -- Only do stealing if ATP flag for the item is Yes.
                   g_atp_record.error_code := ALLSUCCESS;
                   g_atp_record.inventory_item_id := p_atp_record.inventory_item_id;
                   -- time_phased_atp
                   IF l_pf_atp='Y' THEN
                       g_atp_record.request_item_id := p_atp_record.inventory_item_id;
                   ELSE
                       g_atp_record.request_item_id := p_atp_record.request_item_id;
                   END IF;
                   g_atp_record.organization_id := p_atp_record.organization_id;
                   g_atp_record.instance_id := p_atp_record.instance_id;
                   g_atp_record.quantity_ordered := l_net_demand;
                   g_atp_record.quantity_UOM := p_atp_record.quantity_UOM;
                   g_atp_record.requested_ship_date := l_requested_ship_date;
                   g_atp_record.requested_arrival_date := null;
                   g_atp_record.latest_acceptable_date :=
                             p_atp_record.latest_acceptable_date;
                   g_atp_record.delivery_lead_time :=
                             p_atp_record.delivery_lead_time;
                   g_atp_record.freight_carrier := p_atp_record.freight_carrier;
                   g_atp_record.ship_method := p_atp_record.ship_method;
                   g_atp_record.demand_class := p_atp_record.demand_class;
                   g_atp_record.override_flag := p_atp_record.override_flag;
                   g_atp_record.action := p_atp_record.action;
                   g_atp_record.ship_date := p_atp_record.ship_date;
                   g_atp_record.available_quantity :=
                             p_atp_record.available_quantity;
                   g_atp_record.used_available_quantity :=
                             p_atp_record.used_available_quantity;
                   g_atp_record.requested_date_quantity :=
                             p_atp_record.requested_date_quantity;
                   g_atp_record.supplier_id := p_atp_record.supplier_id;
                   g_atp_record.supplier_site_id := p_atp_record.supplier_site_id;
                   g_atp_record.insert_flag := p_atp_record.insert_flag;
                   g_atp_record.order_number := p_atp_record.order_number;
                   g_atp_record.demand_source_line :=
                             p_atp_record.demand_source_line;
                   g_atp_record.demand_source_header_id :=
                             p_atp_record.demand_source_header_id;
                   g_atp_record.demand_source_type :=
                             p_atp_record.demand_source_type;
                   g_atp_record.shipping_cal_code := p_atp_record.shipping_cal_code; -- Bug 3371817
                   g_atp_record.receiving_cal_code := p_atp_record.receiving_cal_code; -- Bug 3826234
                   g_atp_record.intransit_cal_code := p_atp_record.intransit_cal_code; -- Bug 3826234
                   g_atp_record.manufacturing_cal_code := p_atp_record.manufacturing_cal_code; -- Bug 3826234
                   g_atp_record.to_organization_id := p_atp_record.to_organization_id; -- Bug 3826234

                   -- for bug 1410327
                   g_atp_record.identifier :=
                             p_atp_record.identifier;

                   l_stealing_requested_date_qty := l_net_demand;

                  --pumehta Bug2471377 Copy the period ATP to another table
                  --Which can be used later for another forward pass
                  --to find better date for the case where component
                  --Flag is set to 'N'and stealing has happened.
		  --dsting port 2621270. For sd details, we save the pegging id
                  --and copy the data from mrp_atp_details and give it a new pegging id

                   l_atp_period_first := l_atp_period;
                   --diag-atp
                   g_atp_record.plan_name := p_atp_record.plan_name;

                   -- time_phased_atp
                   g_atp_record.atf_date := p_atp_record.atf_date;
                   g_atp_record.ato_model_line_id := p_atp_record.ato_model_line_id;
                   MSC_AATP_PVT.Stealing(
                            g_atp_record,
                            l_pegging_id,
                            p_scenario_id,
                            p_level,
                            p_search,
                            p_plan_id,
                            l_net_demand,  -- out variable
                            l_mem_stealing_qty, -- For time_phased_atp
                            l_pf_stealing_qty,  -- For time_phased_atp
                            l_atp_supply_demand,
                            l_atp_period,
                            l_return_status,
                            p_refresh_number);   -- For summary enhancement

                   l_stealing_qty := l_stealing_requested_date_qty -
                                     greatest(l_net_demand, 0);

                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_stealing_qty = '||l_stealing_qty);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_mem_stealing_qty = '||l_mem_stealing_qty);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_pf_stealing_qty = '||l_pf_stealing_qty);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_net_demand = ' || l_net_demand);
                   END IF;

                   -- using the pegging_id to find the demand_id and plan_id
                   ---demandxyz
                   --- Initially we created the demand for l_requested_date_qty
                   --- now we update the quantity
                   update msc_demands
                   set USING_REQUIREMENT_QUANTITY = p_atp_record.quantity_ordered
                   where plan_id = p_plan_id and
                         demand_id = l_demand_id;

                   /* time_phased_atp
                      put qty stolen upto req date ((not upto ATF) on member item */
                   --5211558 we want to update the demands only in first pass and not in further passes
                   IF l_time_phased_atp = 'Y' and MSC_ATP_PVT.G_OPTIONAL_FW is null THEN
		        --using the same insert rec we prepared earlier
		        l_atp_insert_rec.quantity_ordered :=  p_atp_record.quantity_ordered;
		        l_atp_insert_rec.requested_date_quantity := l_atp_insert_rec.requested_date_quantity + nvl(l_stealing_qty, 0);
		        l_atp_insert_rec.atf_date_quantity := l_atp_insert_rec.atf_date_quantity + nvl(l_mem_stealing_qty, 0);
		        MSC_ATP_PF.Increment_Bucketed_Demands_Qty(
                                l_atp_insert_rec,
                                p_plan_id,
                                l_demand_id,
                                l_return_status
		        );
                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured in procedure Increment_Bucketed_Demands_Qty');
                           END IF;
                           RAISE FND_API.G_EXC_ERROR;
                        END IF;
                        /* update atf date quantity */
                        p_atp_record.atf_date_quantity := l_atp_insert_rec.atf_date_quantity;
                        /* Reset l_atf_date_qty to 0*/
                        l_atf_date_qty := 0;
                   ELSIF MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                          AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN

                             update msc_alloc_demands
                             set allocated_quantity = p_atp_record.quantity_ordered
                             where parent_demand_id = l_demand_id
                             and   plan_id = p_plan_id;

                   END IF;

                   IF (l_stealing_qty > 0) THEN
                         ----bug 1892779
                        MSC_ATP_PROC.Details_Output(l_atp_period,
                                 l_atp_supply_demand,
                                 x_atp_period,
                                 x_atp_supply_demand,
                                 l_return_status);
                   END IF;

                   l_stealing_requested_date_qty := l_stealing_requested_date_qty -
                                                l_net_demand;

                   l_net_demand := greatest(l_net_demand, 0);

                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'After Stealing :'|| l_net_demand);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_stealing_requested_date_qty = '||
                                          l_stealing_requested_date_qty);
                   END IF;
   /* bug 1680212
                   -- In order to show the correct demand quantity that got
                   -- considered for the primary component,
                   -- we need to change the requested quantity for that primary
                   -- component to what was requested minus
                   -- what got satisfied by the stealing

                   update msc_demands
                   set    USING_REQUIREMENT_QUANTITY =
                          (p_atp_record.quantity_ordered - l_stealing_qty)
                   where  demand_id = l_demand_id
                   and    plan_id = p_plan_id;
     bug 1680212 */
               END IF; -- end if G_ALLOCATED_ATP
               -- PTF
               IF (p_search = FORWARD_SCHEDULING) AND
                  (p_parent_pegging_id IS NOT  NULL) AND
                  (MSC_ATP_PVT.G_PTF_DATE > l_requested_ship_date) THEN
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('ATP_Check: ' || 'Look forward to meet the remaining shortage of comp');
                  END IF;
		   --Bug2682094 Do not reset the demand
		   --l_net_demand := p_atp_record.quantity_ordered;
                  l_req_date_qty := 0;
               ELSE
                  l_req_date_qty := null;
               END IF;

          END IF; -- if SUBS_FLAG = 'Y'


            ---here we add hack for config item where flag  = 'Y', 'N'
            IF l_net_demand > 0 and C_ITEM_INFO_REC.bom_item_type = 1 and
                                    C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y' and
                                    C_ITEM_INFO_REC.atp_flag = 'Y' and
                                    C_ITEM_INFO_REC.atp_comp_flag = 'N' and
                                    MSC_ATP_PVT.G_INV_CTP = 4 THEN

                MSC_ATP_CTO.Check_Base_Model_For_Cap_Check(C_ITEM_INFO_REC.dest_inv_item_id,
                                                           C_ITEM_INFO_REC.base_item_id,
                                                           l_requested_ship_date,
                                                           p_atp_record.instance_id,
                                                           p_plan_id,
                                                           p_atp_record.organization_id,
                                                           l_net_demand,
                                                           l_sr_inv_item_id,
                                                           l_check_model_capacity);

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('l_check_model_capacity := ' || l_check_model_capacity);
                END IF;
                IF l_check_model_capacity = 1 THEN
                    --- we set comp flag to  Y so that it goes into the logic of make
                    l_atp_comp_flag := 'Y';
                    --null out the lead time as well as we want to check the base model's capacity same day

                    l_fixed_lt := 0;
                    l_variable_lt := 0;
                    l_pre_pro_lt := 0;
                END IF;
            END IF;

            IF l_net_demand <= 0 THEN
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Demabnd is Met');
                 msc_sch_wb.atp_debug('Requested Date quantity := ' ||  l_requested_date_quantity);
              END IF;
               -- we meet the requirements!!!
               --commenting for bug3550292
              /*p_atp_record.requested_date_quantity:= l_requested_date_quantity
                                                     +  l_sub_requested_date_quantity
                                                     + l_stealing_qty;*/
              --bug3550292
              p_atp_record.requested_date_quantity:= l_requested_date_quantity;
              -- cchen: 1238941
              -- 1411818: add greatest
              p_atp_record.combined_requested_date_qty :=
                  GREATEST(p_atp_record.requested_date_quantity, 0) +
                  l_sub_requested_date_quantity + l_stealing_requested_date_qty;

              /* s_cto_rearch: do not honor atp lead time
              p_atp_record.ship_date := MSC_CALENDAR.DATE_OFFSET
                                 (p_atp_record.organization_id,
                                  p_atp_record.instance_id,
                                  1,
                                  l_requested_ship_date, -- bug 1338599
                                  NVL(p_atp_record.atp_lead_time, 0));
              */
              p_atp_record.ship_date := l_requested_ship_date;
              -- for aatp
              p_atp_record.available_quantity:=
                  p_atp_record.combined_requested_date_qty;
              p_atp_record.used_available_quantity:=
                  p_atp_record.combined_requested_date_qty; --bug3409973
              -- p_atp_record.available_quantity:=l_atp_date_quantity_this_level;
              --optional_fw further iterations error code should be set 53
             IF MSC_ATP_PVT.G_OPTIONAL_FW is not null THEN
              p_atp_record.error_code := ATP_REQ_DATE_FAIL;
             END IF;
	      IF PG_DEBUG in ('Y', 'C') THEN
	         msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.atf_date_quantity = '||p_atp_record.atf_date_quantity);
	         msc_sch_wb.atp_debug('ATP_Check: ' || 'after insert row, 1');
	      END IF;
            --diag_atp
            ELSIF (l_atp_comp_flag = 'N') AND MSC_ATP_PVT.G_DIAGNOSTIC_ATP <> 1 THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'ATP Component flag = N');
                END IF;

                -- we cannot meet the requirements, so we provide
                -- the information at this level
                --optional_fw
                --Either we set the component flag and do not do any more iterations, for this
                --we neeed to set this flag only for the top org and that too for first b.w pass only so that subsequent
                --f,w pass may not be needed and loop may surely exit.

                IF (p_parent_pegging_id IS NULL and MSC_ATP_PVT.G_OPTIONAL_FW is null and G_FORWARD_ATP  = 'Y') then
                    MSC_ATP_PVT.G_ATP_COMP_FLAG := 'N'; --setting global variable for optional_fw
                END IF;

                p_atp_record.requested_date_quantity:=l_requested_date_quantity;

		IF MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' AND
		   (MSC_ATP_PVT.G_ALLOCATION_METHOD = 1) AND
		   (MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1)
                   --support forward stealing for all levels
		   AND p_parent_pegging_id IS NULL
		THEN
		   IF PG_DEBUG in ('Y', 'C') THEN
		      msc_sch_wb.atp_debug('ATP_Check: ' || 'Get forward mat...');
		      msc_sch_wb.atp_debug('ATP_Check: ' || 'requested_date quantity: ' || l_requested_date_quantity);
		      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_net_demand: ' || l_net_demand);
		      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_demand_id: ' || l_demand_id);
		   END IF;

		   update msc_demands
		   set using_requirement_quantity = MSC_ATP_UTILS.Truncate_Demand(p_atp_record.requested_date_quantity + l_stealing_requested_date_qty)
		   where demand_id = l_demand_id
	      	   and plan_id = p_plan_id;

	     	   -- time_phased_atp changes begin
		   IF l_time_phased_atp = 'Y' THEN
        	        --using the same insert rec we prepared earlier
        	        l_atp_insert_rec.quantity_ordered :=  p_atp_record.quantity_ordered - l_net_demand;
                        l_atp_insert_rec.requested_date_quantity := GREATEST(p_atp_record.requested_date_quantity, 0)
                                                                                 + nvl(l_stealing_requested_date_qty, 0);
        	        l_atp_insert_rec.atf_date_quantity := NVL(p_atp_record.atf_date_quantity, 0);
                        --5211558 not needed as when comp flag is no then only one iteration
        	        MSC_ATP_PF.Increment_Bucketed_Demands_Qty(
                                        l_atp_insert_rec,
                                        p_plan_id,
                                        l_demand_id,
                                        l_return_status
        		        );
                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured in procedure Increment_Bucketed_Demands_Qty');
                            END IF;
                            RAISE FND_API.G_EXC_ERROR;
                        END IF;
	           ELSE
        	        update msc_alloc_demands
        		set allocated_quantity = p_atp_record.requested_date_quantity + l_stealing_requested_date_qty
        		where parent_demand_id = l_demand_id
        		and plan_id = p_plan_id;
		   END IF;
	       	   -- time_phased_atp changes end

                   --diag_atp
                   l_get_mat_in_rec.rounding_control_flag := l_rounding_control_flag;
                   l_get_mat_in_rec.dest_inv_item_id := l_dest_inv_item_id;
                   l_get_mat_in_rec.parent_bom_item_type := p_atp_record.parent_bom_item_type;
                   l_get_mat_in_rec.bom_item_type := C_ITEM_INFO_REC.bom_item_type;
                   l_get_mat_in_rec.replenish_to_ord_flag := C_ITEM_INFO_REC.replenish_to_ord_flag;
                   l_get_mat_in_rec.parent_repl_order_flag := p_atp_record.parent_repl_order_flag;
                   l_get_mat_in_rec.ato_model_line_id := p_atp_record.ato_model_line_id;
                   l_get_mat_in_rec.shipping_cal_code := p_atp_record.shipping_cal_code;
                   l_get_mat_in_rec.receiving_cal_code := p_atp_record.receiving_cal_code; -- Bug 3826234
                   l_get_mat_in_rec.intransit_cal_code := p_atp_record.intransit_cal_code; -- Bug 3826234
                   l_get_mat_in_rec.manufacturing_cal_code := p_atp_record.manufacturing_cal_code; -- Bug 3826234
                   l_get_mat_in_rec.to_organization_id := p_atp_record.to_organization_id; -- Bug 3826234
                   -- Bug 3371817 - Pass calendar code to calculate sys_next_date
                   --               In make case this will actually contain OMC for lower level components


		   MSC_AATP_REQ.Get_Forward_Material_ATP(
                            p_atp_record.instance_id,
                            p_plan_id,
                            p_level+1,
                            p_atp_record.identifier,
                            p_atp_record.demand_source_type,--cmro
                            p_scenario_id,
                            p_atp_record.inventory_item_id,
                            p_atp_record.request_item_id, -- For time_phased_atp
                            p_atp_record.organization_id,
                            C_ITEM_INFO_REC.item_name,   -- Modular re-use
                            PF_ITEM_INFO_REC.item_name,  -- For time_phased_atp
                            l_requested_ship_date,
                            l_net_demand,
                            p_atp_record.demand_class,
                            l_requested_date_quantity,
                            l_atf_date_qty, -- For time_phased_atp
                            l_atp_date_this_level,
                            l_atp_quantity_this_level_fwd,
                            l_atp_pegging_tab,
                            l_return_status,
                            l_used_available_quantity_fwd, --bug3409973
                            --diag_atp,
                            null,
                            l_get_mat_in_rec,
                            l_get_mat_out_rec,
                            p_atp_record.atf_date, -- For time_phased_atp
                            null,               -- order number
                            p_refresh_number    -- For summary enhancement
			);
		   l_atp_date_quantity_this_level :=
                  		GREATEST(p_atp_record.requested_date_quantity, 0) +
                  		l_sub_requested_date_quantity +
				l_atp_quantity_this_level_fwd;
	           l_used_available_quantity :=
                  		GREATEST(p_atp_record.requested_date_quantity, 0) +
                  		l_sub_requested_date_quantity +
				l_used_available_quantity_fwd; --bug3409973
                   -- time_phased_atp
                   IF l_requested_ship_date <= p_atp_record.atf_date THEN
                       p_atp_record.atf_date_quantity := NVL(l_atp_insert_rec.requested_date_quantity, 0) + NVL(l_atf_date_qty, 0);
                   ELSE
                       p_atp_record.atf_date_quantity := NVL(p_atp_record.atf_date_quantity, 0) + NVL(l_atf_date_qty, 0);
                   END IF;

		   IF PG_DEBUG in ('Y', 'C') THEN
		       msc_sch_wb.atp_debug('ATP_Check: ' || 'atp_date_this_level: ' || l_atp_date_this_level);
		       msc_sch_wb.atp_debug('ATP_Check: ' || 'atp_qty_this_level: ' || l_atp_date_quantity_this_level);
		       msc_sch_wb.atp_debug('ATP_Check: ' || 'l_used_available_quantity: ' || l_used_available_quantity); --bug3409973
		       msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atf_date_qty : ' || l_atf_date_qty);
		       msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.atf_date_quantity : ' || p_atp_record.atf_date_quantity);
		   END IF;

		ELSE
		   IF (l_stealing_requested_date_qty > 0) AND
		      (MSC_ATP_PVT.G_ALLOCATION_METHOD = 2)
		   THEN
        	        --pumehta Bug2471377 Begin Changes
        	       	--Make another pass to check if we can get a better date
		        --as stealing has happened.
        	       	l_requested_quantity := p_atp_record.quantity_ordered -
                                l_stealing_requested_date_qty;
	               	IF PG_DEBUG in ('Y', 'C') THEN
	               	   msc_sch_wb.atp_debug('ATP_Check: ' || 'Do a Second pass to find better date for Qty:' || l_requested_quantity);
			   msc_sch_wb.atp_debug('ATP_Check: ' || 'Count:' || l_atp_period_first.period_start_date.COUNT);
			END IF;

			FOR i in 1..l_atp_period_first.period_start_date.COUNT LOOP
				IF i <> l_atp_period_first.period_start_date.COUNT THEN
					IF (l_atp_period_first.cumulative_quantity(i) >=
					    l_requested_quantity) AND
					   ((l_atp_period_first.period_start_date(i) <=
                       				l_sysdate AND
                       			    l_atp_period_first.period_start_date(i+1) >
                           			l_sysdate)
                          		   OR (l_atp_period_first.period_start_date(i) >
                              			l_sysdate))
					THEN
                       				IF (MSC_ATP_PVT.G_ITEM_INFO_REC.rounding_control_type = 1) THEN
                          				l_atp_date_quantity_this_level :=
                          				FLOOR(l_atp_period_first.cumulative_quantity(i));
                       				ELSE
                           				l_atp_date_quantity_this_level :=
                           				l_atp_period_first.cumulative_quantity(i);
                       				END IF;
                      				l_atp_date_this_level :=
                      				GREATEST(l_atp_period_first.period_start_date(i),l_sysdate);
                      				EXIT;
                    			END IF;
                   		END IF;
                  	END LOOP;
			IF PG_DEBUG in ('Y', 'C') THEN
			   msc_sch_wb.atp_debug('ATP_Check: ' || 'Avail Date II pass is ' || l_atp_date_this_level);
			   msc_sch_wb.atp_debug('ATP_Check: ' || 'Avail Qty II Pass is ' || l_atp_date_quantity_this_level);
			END IF;
			--End Changes bug2471377 pumehta
                   END IF;

                   l_used_available_quantity := l_atp_date_quantity_this_level; --bug3409973

		END IF;

                -- cchen: 1238941
                p_atp_record.combined_requested_date_qty :=
                     p_atp_record.requested_date_quantity +
                     l_sub_requested_date_quantity+l_stealing_requested_date_qty;

                p_atp_record.available_quantity:=LEAST(INFINITE_NUMBER,
                                               (l_atp_date_quantity_this_level+
                                                l_stealing_qty));

                p_atp_record.used_available_quantity:=LEAST(INFINITE_NUMBER,
                                               (l_used_available_quantity+
                                                l_stealing_qty)); --bug3409973
                -- 2859130 move to next work day for forward pass
                /* Do not honor atp lead time
                IF NVL(p_atp_record.atp_lead_time, 0) > 0 THEN
                   p_atp_record.ship_date := MSC_CALENDAR.DATE_OFFSET
                                    (p_atp_record.organization_id,
                                     p_atp_record.instance_id,
                                     1,
                                     l_atp_date_this_level,
                                     NVL(p_atp_record.atp_lead_time, 0));
                ELSE
                   p_atp_record.ship_date := MSC_CALENDAR.NEXT_WORK_DAY
                                    (p_atp_record.organization_id,
                                     p_atp_record.instance_id,
                                     1,
                                     l_atp_date_this_level);
                END IF;
                */
                --Bug 3855866: If l_atp_date_this_level is NULL, set p_atp_record.ship_date
                -- to NULL, thus error_code is set to ATP_REQ_QTY_FAIL(52)

                IF (l_atp_date_this_level is NULL ) THEN
                   p_atp_record.ship_date := NULL;
                ELSE
                   p_atp_record.ship_date := MSC_CALENDAR.next_work_day(
                                        p_atp_record.shipping_cal_code,
                                        p_atp_record.instance_id,
                                        l_atp_date_this_level);
                END IF;

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.ship_date' || p_atp_record.ship_date);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'avail qty: ' || p_atp_record.available_quantity);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'used avail qty: ' || p_atp_record.used_available_quantity); --bug3409973
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'qty level: ' || l_atp_date_quantity_this_level);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'stealing qty level: ' || l_stealing_qty);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'atf date qty: ' || p_atp_record.atf_date_quantity);
                END IF;
                -- p_atp_record.available_quantity:=l_atp_date_quantity_this_level;
                IF p_atp_record.ship_date IS NOT NULL THEN
                    p_atp_record.error_code := ATP_REQ_DATE_FAIL;

/* 1421413: move into the if below
                    -- bug 1302394: we should adjust the date
                    -- of the demand which causes this planned order
                    -- as well so that they can cancel each other.

                    UPDATE msc_demands
                    SET  USING_ASSEMBLY_DEMAND_DATE = l_atp_date_this_level
--ngoel 8/30/2000 Check if this needs to be changed to l_atp_date_this_level.
                    WHERE  demand_id = l_demand_id
                    AND    plan_id = p_plan_id;

                    -- 1262907: no matter this is the components or not,
                    -- we need to populate the pegging tree
                    -- IF p_parent_pegging_id is null THEN
*/
                    -- 1421413: only populate pegging if
                    -- this is for top assembly or
                    -- this is for components and it is the future case

                    -- IF (p_parent_pegging_id is null) OR   commented for bug 2738280.
		    -- This piece of code moves the demand date which is also done in procedure update_sd_date
		    -- Since update_sd_date was not called for last line of SLSO ATO model, therefore, the summary
		    -- picture was not matching with details picture for last line.
		    -- On commenting this line, this piece of code is never executed for SLSO ATO model lines
		    -- making the summary picture consistent with details picture for all the lines.
                    ---bug 3098127: the following condition was removed by the bug 2738280.
                    -- this shouldn't have been removed.

                    IF   (p_parent_pegging_id is null) OR
                        ((p_parent_pegging_id is not null AND
                        p_search = FORWARD_SCHEDULING)) THEN

			-- dsting ATO 2465370
			-- in case of override for CTO, do not adjust the demand date
                        --bug 3564511: This condition is not necessary as we always want to
                        -- adjust dates
		        --IF NVL(G_LINE_OVERRIDE_FLAG, 'N') = 'N'
			   --OR (NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) <> p_atp_record.organization_id
			   --AND p_parent_pegging_id is not null)
			--THEN
                                --bug 3328421: required date contains the original request date
                                -- actual_supply_demand_date contain the actual sd date
				--update mrp_atp_details_temp set required_date = TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY
				update mrp_atp_details_temp set actual_supply_demand_date =
                                                                 TRUNC(l_atp_date_this_level)--4460369 + MSC_ATP_PVT.G_END_OF_DAY
				where session_id = MSC_ATP_PVT.G_SESSION_ID
				and pegging_id = l_pegging_id
				and record_type = 3;

				IF PG_DEBUG in ('Y', 'C') THEN
					msc_sch_wb.atp_debug('ATO update details_temp 1: ' || l_pegging_id || ' date: ' || l_atp_date_this_level);
                                        msc_sch_wb.atp_debug('Update demand with demand id := ' || l_demand_id);
                                        msc_sch_wb.atp_debug('Update demand on date : = ' || l_atp_date_this_level);
				END IF;

                                -- bug 1302394: we should adjust the date
                                -- of the demand which causes this planned order
                                -- as well so that they can cancel each other.

                -- For bug 2259824, move the demand to the end of day
                                --s_cto_rearch: For ODS based ATP, we should be updating msc_sales_orders
                                IF p_plan_id = -1 THEN
                                   UPDATE msc_sales_orders
                                   SET REQUIREMENT_DATE = TRUNC(l_atp_date_this_level) --4460369+ MSC_ATP_PVT.G_END_OF_DAY
                                   WHERE sr_instance_id  = p_atp_record.instance_id
                                   AND   DEMAND_ID = l_demand_id
                                   returning inventory_item_id into l_inventory_item_id;
                                ELSE
                                   UPDATE msc_demands
                                   SET
                                   --start changes for plan by request date
                                   USING_ASSEMBLY_DEMAND_DATE =
                                        DECODE(ORIGINATION_TYPE,
                                               6,  decode(MSC_ATP_PVT.G_PLAN_INFO_REC.schedule_by_date_type,
                                                          MSC_ATP_PVT.G_SCHEDULE_SHIP_DATE_LEGEND,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                          MSC_ATP_PVT.G_SCHEDULE_ARRIVAL_DATE_LEGEND,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                          MSC_ATP_PVT.G_PROMISE_SHIP_DATE_LEGEND,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                          MSC_ATP_PVT.G_PROMISE_ARRIVAL_DATE_LEGEND,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                          MSC_ATP_PVT.G_REQUEST_SHIP_DATE_LEGEND,
                                                              l_original_req_ship_date,
                                                          MSC_ATP_PVT.G_REQUEST_ARRIVAL_DATE_LEGEND,
                                                              l_original_req_ship_date,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY),
                                               30, decode(MSC_ATP_PVT.G_PLAN_INFO_REC.schedule_by_date_type,
                                                          MSC_ATP_PVT.G_SCHEDULE_SHIP_DATE_LEGEND,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                          MSC_ATP_PVT.G_SCHEDULE_ARRIVAL_DATE_LEGEND,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                          MSC_ATP_PVT.G_PROMISE_SHIP_DATE_LEGEND,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                          MSC_ATP_PVT.G_PROMISE_ARRIVAL_DATE_LEGEND,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                          MSC_ATP_PVT.G_REQUEST_SHIP_DATE_LEGEND,
                                                              l_original_req_ship_date,
                                                          MSC_ATP_PVT.G_REQUEST_ARRIVAL_DATE_LEGEND,
                                                              l_original_req_ship_date,
                                                              TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY),
                                               TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY),
                                   schedule_ship_date = DECODE(ORIGINATION_TYPE,
	                                                       6,  TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
	                                                       30, TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
	                                                       NULL),
                                   promise_ship_date  = DECODE(ORIGINATION_TYPE,
                                                               6,  TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                               30, TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY,
                                                               NULL)
                                   --end of plan by request date enhanc
                                   WHERE  demand_id = l_demand_id
                                   AND    plan_id = p_plan_id
                                   returning inventory_item_id into l_inventory_item_id;
                                END IF;


                                -- time_phased_atp changes begin
                                IF l_time_phased_atp = 'Y' THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'I come here 123');
                                         --bug3397904 start
                                         IF p_atp_record.requested_ship_date <= p_atp_record.atf_date THEN
                                            l_bkwd_pass_atf_date_qty := GREATEST(NVL(p_atp_record.combined_requested_date_qty,
                                            p_atp_record.requested_date_quantity), 0);
                                         ELSE
                                            l_bkwd_pass_atf_date_qty := p_atp_record.atf_date_quantity;
                                         END IF;
                                        --bug3397904 end
                                        --5211558 not needed as when comp flag is no then only one iteration
                                        MSC_ATP_PF.Move_PF_Bucketed_Demands(
                                                p_plan_id,
                                                l_demand_id,
                                                p_atp_record.requested_ship_date,
                                                l_atp_date_this_level,
                                                p_atp_record.quantity_ordered,--bug3397904 changed from NULL
                                                p_atp_record.used_available_quantity,--bug3397904 changed from NULL
                                                p_atp_record.atf_date,
                                                p_atp_record.atf_date_quantity, -- --bug3397904 changed from NULL
                                                l_return_status,
                                                l_bkwd_pass_atf_date_qty --bug3397904
                                        );
                                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                                IF PG_DEBUG in ('Y', 'C') THEN
                                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured in procedure Move_PF_Bucketed_Demands');
                                                END IF;
                                                RAISE FND_API.G_EXC_ERROR;
                                        END IF;
                                ELSIF MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                                    AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN
                                    update msc_alloc_demands
                                    set DEMAND_DATE = l_atp_date_this_level
                                    where parent_demand_id = l_demand_id
                                    and   plan_id = p_plan_id;
                                END IF;
                                -- time_phased_atp changes end

                                -- update summary records removed in ODS cases - for summary enhancement
                                IF MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y'  and (p_parent_pegging_id is not null) AND p_plan_id = -1 THEN
                                    IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'update old date demand');
                                    END IF;
                                    MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                        p_plan_id,
                                                        p_atp_record.organization_id,
                                                        l_inventory_item_id,
                                                        l_requested_ship_date,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        2);

                                    update /*+ INDEX(msc_atp_summary_sd MSC_ATP_SUMMARY_SD_U1) */ msc_atp_summary_sd
                                    set sd_qty = sd_qty + p_atp_record.quantity_ordered
                                    where plan_id = p_plan_id
                                    and   sr_instance_id = p_atp_record.instance_id
                                    and   organization_id = p_atp_record.organization_id
                                    and   inventory_item_id = l_inventory_item_id
                                    and   sd_date = trunc(l_requested_ship_date);
                                    commit;
                                    MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                        p_plan_id,
                                                        p_atp_record.organization_id,
                                                        l_inventory_item_id,
                                                        l_atp_date_this_level,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        2);


                                    IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'update demand on new date');
                                    END IF;
                                    update /*+ INDEX(msc_atp_summary_sd MSC_ATP_SUMMARY_SD_U1) */ msc_atp_summary_sd
                                    set sd_qty = sd_qty - p_atp_record.quantity_ordered
                                    where plan_id = p_plan_id
                                    and   sr_instance_id = p_atp_record.instance_id
                                    and   organization_id = p_atp_record.organization_id
                                    and   inventory_item_id = l_inventory_item_id
                                    and   sd_date = trunc(l_atp_date_this_level);
                                    commit;
                                    IF SQL%NOTFOUND THEN
                                        IF PG_DEBUG in ('Y', 'C') THEN
                                            msc_sch_wb.atp_debug('ATP_Check: ' || 'insert demand on new date');
                                        END IF;
                                        MSC_ATP_DB_UTILS.INSERT_SUMMARY_SD_ROW(p_plan_id,
                                                                p_atp_record.instance_id,
                                                                p_atp_record.organization_id,
                                                                l_inventory_item_id,
                                                                l_atp_date_this_level,
                                                                -1 * p_atp_record.quantity_ordered,
                                                                '@@@');
                                    END IF;
                                    commit;
                                END IF;
			--END IF; -- end changes cto override

                        --- Enhance CTO Phase 1 Req #17
                        IF NOT (MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' AND
                           (MSC_ATP_PVT.G_ALLOCATION_METHOD = 1) AND
                           (MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1)) THEN

              		   l_pegging_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
              		   l_pegging_rec.order_line_id:= MSC_ATP_PVT.G_ORDER_LINE_ID;
              		   l_pegging_rec.parent_pegging_id:= l_pegging_id;
              		   l_pegging_rec.atp_level:= p_level+ 1;
              		   l_pegging_rec.organization_id:=
                               p_atp_record.organization_id;
                           l_pegging_rec.organization_code := l_org_code;
              		   l_pegging_rec.identifier1:= p_atp_record.instance_id;
                           l_pegging_rec.identifier2 := p_plan_id;
              		   l_pegging_rec.identifier3 := NULL;

                           -- time_phased_atp changes begin
                           IF l_time_phased_atp = 'Y' and l_atp_date_this_level <= p_atp_record.atf_date THEN
                                   l_pegging_rec.inventory_item_id:= l_request_item_id;
                                   l_pegging_rec.inventory_item_name := C_ITEM_INFO_REC.item_name;
                           ELSE
                                   l_pegging_rec.inventory_item_id:= p_atp_record.inventory_item_id;
                                   l_pegging_rec.inventory_item_name := PF_ITEM_INFO_REC.item_name;
                           END IF;
                           l_pegging_rec.aggregate_time_fence_date := p_atp_record.atf_date;
                           -- time_phased_atp changes end

              		   l_pegging_rec.resource_id := NULL;
                           l_pegging_rec.resource_code := NULL;
              		   l_pegging_rec.department_id := NULL;
                           l_pegging_rec.department_code := NULL;
              		   l_pegging_rec.supplier_id := NULL;
                           l_pegging_rec.supplier_name := NULL;
              		   l_pegging_rec.supplier_site_id := NULL;
                           l_pegging_rec.supplier_site_name := NULL;
              		   l_pegging_rec.scenario_id:= p_scenario_id;
              		   l_pegging_rec.supply_demand_source_type:= ATP;
                           -- bug 1304991: make sure  we following the same
                           -- way to populate pegging tree. that is,
                           -- future case's net supply should not consider the
                           -- request date quantity.
                           IF p_atp_record.available_quantity <> INFINITE_NUMBER THEN
                              --- IF req_date < PTF date and if enough quanity is available on req date then
                              --- we show peggin for two days. On req date we show wahtever quantity is
                              --- available on that day. On PTF date , we show req-date qty + whatever qty is available
                              --- between req date and ptf date. If req_date > ptf then we show atp date qty - req date qty
                              --- if req date < PTF date then we set l_req_date_qty = 0 else it is null

                              IF nvl(l_req_date_qty, -1) = 0 THEN
                                 l_pegging_rec.supply_demand_quantity:= p_atp_record.available_quantity;
                              ELSE
                                 l_pegging_rec.supply_demand_quantity:=
                                    p_atp_record.available_quantity - greatest(0,
                                    p_atp_record.requested_date_quantity +
			 	   NVL(l_stealing_requested_date_qty, 0));
                              END IF;
                           ELSE
                              l_pegging_rec.supply_demand_quantity:=INFINITE_NUMBER;
                           END IF;
                           ---bug 2798667: ship_date = l_atp_date_this_level + atp_lead_time
                           ---The option item should be requested on l_atp_date_this_level instead of ship date
                           --l_pegging_rec.supply_demand_date:=p_atp_record.ship_date;
                           l_pegging_rec.supply_demand_date:= l_atp_date_this_level;
                           l_pegging_rec.actual_supply_demand_date:= l_atp_date_this_level;
              		   l_pegging_rec.supply_demand_type:= 2;
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Qty := ' || l_pegging_rec.supply_demand_quantity);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Date := ' || l_pegging_rec.supply_demand_date);
                           END IF;
              		   l_pegging_rec.source_type := 0;

                           -- for demo:1153192
                           l_pegging_rec.constraint_flag := 'N';
			   l_pegging_rec.component_identifier :=
	                            NVL(p_atp_record.component_identifier, MSC_ATP_PVT.G_COMP_LINE_ID);

                           --- bug 2152184: For PF based ATP inventory_item_id field contains id for PF item
                           --- cto looks at pegging tree to place their demands. Since CTO expects to find
                           --  id for the requested item, we add the following column. CTO will now read from this column
                           l_pegging_rec.request_item_id := p_atp_record.request_item_id;

                           --diag_atp
                           l_pegging_rec.pegging_type := MSC_ATP_PVT.ATP_SUPPLY; ---atp supply node

                           --s_cto_rearch
                           l_pegging_rec.dest_inv_item_id := l_dest_inv_item_id;
                           l_pegging_rec.model_sd_flag := 2;
                           --s_cto_rearch
                           IF NVL(MSC_ATP_PVT.G_DIAGNOSTIC_ATP, 2) = 2
                               AND l_requested_date_quantity < p_atp_record.quantity_ordered
                               AND G_FORWARD_ATP = 'N' THEN --optional_fw
                               -- Bug 3828469 - Add constraint only if it exists
                               IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('Forward ATP, add pegging constriant');
                               END IF;
                               l_pegging_rec.constraint_type := 1;
                           END IF;
                           --e_cto_rearch

			   -- dsting: get_forward_material_info has already added the pegging
			   -- in this case
			   IF NOT (MSC_ATP_PVT.G_INV_CTP = 4 and
			      MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' AND
			      MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 AND
			      MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 AND
			      l_atp_comp_flag = 'N' AND
			      --p_parent_pegging_id is null AND
			      MSC_ATP_PVT.G_DIAGNOSTIC_ATP <> 1)
			   THEN
	              	      l_pegging_rec.summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;     -- for summary enhancement
                              l_pegging_rec.demand_class :=  p_atp_record.demand_class;
                              --4570421
                              l_pegging_rec.scaling_type                      := p_atp_record.scaling_type;
                              l_pegging_rec.scale_multiple                    := p_atp_record.scale_multiple;
                              l_pegging_rec.scale_rounding_variance           := p_atp_record.scale_rounding_variance;
                              l_pegging_rec.rounding_direction                := p_atp_record.rounding_direction;
                              l_pegging_rec.component_yield_factor            := p_atp_record.component_yield_factor; --4570421
                              l_pegging_rec.usage                             := p_atp_record.usage_qty; --4775920
                              l_pegging_rec.organization_type                 := p_atp_record.organization_type; --4775920

	              	      MSC_ATP_DB_UTILS.Add_Pegging(l_pegging_rec, l_atp_pegging_id);
			   END IF;

                           -- 1250141: we need to populate the details
                           -- 1300692: we only populate the details for
                           -- PDS case here.  Because the form use end_pegging_id
                           -- to retrive info and we will end up display
                           -- same info twice.

                           --Bug2471377 Begin changes
                           IF NVL(p_atp_record.insert_flag,0) <> 0 THEN
                              IF MSC_ATP_PVT.G_INV_CTP = 4 THEN
                                 IF (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND
                                   (MSC_ATP_PVT.G_ALLOCATION_METHOD = 2) THEN
                                   -- Link the Supply Demand Details for
                                   --first Demand class to the pegging details

				   IF l_atp_period_first.pegging_id.COUNT > 0 THEN
				 	MSC_ATP_UTILS.copy_mrp_sd_recs(
				 		l_atp_period_first.pegging_id(1),
				 		l_atp_pegging_id);
				   END IF;

                                   FOR i in 1..l_atp_period_first.Level.COUNT LOOP
                                      l_atp_period_first.Pegging_Id(i) :=
                                             l_atp_pegging_id;
                                      l_atp_period_first.End_Pegging_Id(i) :=
                                             MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
                                   END LOOP;

                                   MSC_ATP_PROC.Details_Output(l_atp_period_first,
                                               l_atp_supply_demand,
                                               x_atp_period,
                                               x_atp_supply_demand,
                                               l_return_status);
                                 ELSIF MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' AND
				       (MSC_ATP_PVT.G_ALLOCATION_METHOD = 1) AND
				       (MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1) AND
				       p_parent_pegging_id IS NULL THEN
				     null;
                                 ELSE

                                 FOR i in 1..l_atp_period.Level.COUNT LOOP
                                   l_atp_period.Pegging_Id(i) := l_atp_pegging_id;
                                   l_atp_period.End_Pegging_Id(i) :=
                                     MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
                                 END LOOP;

			         IF p_atp_record.insert_flag <> 0 THEN
   		                         MSC_ATP_DB_UTILS.move_SD_temp_into_mrp_details(l_atp_pegging_id,
				    		   MSC_ATP_PVT.G_DEMAND_PEGGING_ID);
			         END IF;

                                 MSC_ATP_PROC.Details_Output(l_atp_period,
                                            l_atp_supply_demand,
                                            x_atp_period,
                                            x_atp_supply_demand,
                                            l_return_status);
                                 END IF; -- MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y
                              END IF; --MSC_ATP_PVT.G_INV_CTP = 4
                           END IF;
                         --- End Enhance CTO Phase 1 Req #17
                        END IF;  --Bug2471377 End Changes

                    END IF; -- 1421413 IF (p_parent_pegging_id is null) OR
                            -- ((p_parent_pegging_id is not null and
                            -- p_search = FORWARD_SCHEDULING))

                ELSE
                    p_atp_record.error_code := ATP_REQ_QTY_FAIL;
                END IF;
            --diag_atp
            ELSIF NOT(l_atp_comp_flag = 'N') THEN -- if net_demand > 0 and atp_comp_flag = 'Y'

              --- bug 2178544: Implement PTF
              -- PTF changes
              -- If the requested ship date is before planning time fence (PTF) date then
              -- we fail the request. The logic is that production schedule is fixed before
              -- PTF. Hence no planned orders should be placed before PTF

	      -- 3/4/2002, modified to honor planning_time_fence_flag from msc_plans to adjust for
	      -- ptf only if plan option is checked.

              -- Bug 3535999 - l_ptf_date should be validated on mgf cal
              -- l_ptf_date := l_sysdate;
              l_ptf_date := NVL(MSC_CALENDAR.next_work_day(
                                        p_atp_record.manufacturing_cal_code,
                                        p_atp_record.instance_id,
                                        l_trunc_sysdate), l_trunc_sysdate);

              -- Bug 3525582 - PTF constraint should be added only if plan is PTF enabled
              l_ptf_enabled := 2;

              -- when we are checking base model's capacity then we do not want to check PTF
              IF l_check_model_capacity = 2 THEN
                 BEGIN
                   Select DECODE(pl.planning_time_fence_flag,
                                        1, trunc(NVL(itm.planning_time_fence_date, l_ptf_date)), -- Bug 3535999 - l_sysdate)),
                                        l_ptf_date), -- Bug 3535999 - l_sysdate),
                          pl.planning_time_fence_flag   -- Bug 3525582
                   into   l_ptf_date, l_ptf_enabled     -- Bug 3525582
                   from   msc_system_items itm,
		          msc_plans pl
                   where  itm.plan_id = p_plan_id
                   and    itm.sr_instance_id = p_atp_record.instance_id
                   and    itm.organization_id = p_atp_record.organization_id
                   --and    itm.sr_inventory_item_id = p_atp_record.inventory_item_id
                   and    itm.sr_inventory_item_id = nvl(p_atp_record.request_item_id,p_atp_record.inventory_item_id) --Bug-5160663
		   and    pl.plan_id = itm.plan_id
		   and    pl.sr_instance_id = itm.sr_instance_id;
                 EXCEPTION
                   WHEN OTHERS THEN
                       IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured while getting PTF : ' || sqlerrm);
                       END IF;
                       l_ptf_date := l_ptf_date; -- Bug 3535999 - l_sysdate;
                 END;
              END IF;
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_date := ' || l_ptf_date);
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_enabled := ' || l_ptf_enabled);
              END IF;
              -- for bug 1124538: do not pass down the demand to the
              -- next level if it is backward scheduling and
              -- requested_ship_date is less than sysdate.

              IF ((p_search = BACKWARD_SCHEDULING) AND
                 --bug 2235012
                 --(l_requested_ship_date < GREATEST(l_sysdate, l_ptf_date))) THEN
                 --diag_atp: we dont want to stop in case of diag ATP. We still want to explode sources
                 (l_requested_ship_date < l_sysdate ) AND (MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 2)) THEN
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'backward, request ship date<sysdate or ptf_date');
                   END IF;
                   p_atp_record.requested_date_quantity:=0.0;
                   -- cchen : 1238941
                   p_atp_record.combined_requested_date_qty := 0.0;

                   IF p_parent_pegging_id is null THEN
                       IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('ATP_Check: ' || 'top level, set future date Y');
                       END IF;
                       MSC_ATP_PVT.G_FIND_FUTURE_DATE := 'Y';
                       MSC_ATP_PVT.G_ASSEMBLY_LINE_ID := p_atp_record.Identifier;
                       MSC_ATP_PVT.G_COMP_LINE_ID := p_atp_record.Identifier;
                       -- 1275751
                       p_atp_record.error_code := ATP_REQ_DATE_FAIL;
                       ---- bug 1819638
                       ---remove the demand record as supply is 0 on the req_date

                       UPDATE msc_demands
                       SET  USING_REQUIREMENT_QUANTITY = 0
                       WHERE  demand_id = l_demand_id
                       AND    plan_id = p_plan_id
                       returning inventory_item_id into l_inventory_item_id;

                       -- time_phased_ATP
                       IF (l_time_phased_atp = 'Y')
                          OR
                          MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                           AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN

                           update msc_alloc_demands
                           set ALLOCATED_QUANTITY = 0
                           where parent_demand_id = l_demand_id
                           and   plan_id = p_plan_id;
                       END IF;

                        -- update summary records removed in ODS cases - for summary enhancement
                        IF MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y' AND p_plan_id = -1 THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'in sumary mode, update msc-demands');
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inventory_item_id := ' || l_inventory_item_id);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date := ' || l_requested_ship_date);
                           END IF;

                           MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                                p_plan_id,
                                                                p_atp_record.organization_id,
                                                                l_inventory_item_id,
                                                                l_requested_ship_date,
                                                                null,
                                                                null,
                                                                null,
                                                                null,
                                                                null,
                                                                null,
                                                                2);


                           update /*+ INDEX(msc_atp_summary_sd MSC_ATP_SUMMARY_SD_U1) */ msc_atp_summary_sd
                           set sd_qty = sd_qty + p_atp_record.quantity_ordered
                           where plan_id = p_plan_id
                           and  inventory_item_id = l_inventory_item_id
                           and  sr_instance_id = p_atp_record.instance_id
                           and  organization_id = p_atp_record.organization_id
                           and  sd_date = trunc(l_requested_ship_date);
                           commit;
                       END IF;

                       IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('ATP_Check: ' || 'demand updated for demand id = '|| l_demand_id);
                       END IF;

                   END IF;
              ELSE

                -- pass the net demand down for next level
                -- we try to meet the requirement by going down to the
                -- components.
                -- first we check the supply chain bill

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'inside net_demand > 0');
                END IF;
                -- for bug 1094773
                IF (p_search = FORWARD_SCHEDULING) AND
                   --subst : for top org in case of subst we do not add pegg
                   NOT (MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y' and
                              p_atp_record.top_tier_org_flag = 1) THEN

                   -- assume the atp date and quantity to be single level.
                   -- this is the worst that we can get.

                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'Forward ATP Qty := ' || l_atp_date_quantity_this_level);
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'ATP Date : FUTURE : ' || l_atp_date_this_level);
                   END IF;

                   p_atp_record.available_quantity:= l_atp_date_quantity_this_level;
                   p_atp_record.used_available_quantity:= l_used_available_quantity;--bug3409973

                   -- 2859130 move to next work day for forward pass
                   /* do not honor atp lead time
                   IF NVL(p_atp_record.atp_lead_time, 0) > 0 THEN
                      p_atp_record.ship_date := MSC_CALENDAR.DATE_OFFSET
                                        (p_atp_record.organization_id,
                                         p_atp_record.instance_id,
                                         1,
                                         l_atp_date_this_level,
                                         NVL(p_atp_record.atp_lead_time, 0));
                   ELSE
                      p_atp_record.ship_date := MSC_CALENDAR.NEXT_WORK_DAY
                                        (p_atp_record.organization_id,
                                         p_atp_record.instance_id,
                                         1,
                                         l_atp_date_this_level);
                   END IF;
                   */
                   p_atp_record.ship_date := MSC_CALENDAR.next_work_day(
                                                p_atp_record.shipping_cal_code,
                                                p_atp_record.instance_id,
                                                l_atp_date_this_level);

                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.ship_date : ' || p_atp_record.ship_date);
                   END IF;

		   -- Planned Pegging Based AATP Changes
                   --enable forward pegging for all cases.
                   /* IF (
                       --- Enhance CTO Phase 1 Req #17
                          -- Support Forward Stealing for components of ATO model in
                          -- Model's sourcing organization.
                       ( (p_parent_pegging_id IS NULL) OR
                           NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) = p_atp_record.organization_id ) AND
                       --- End Enhance CTO Phase 1 Req #17
                   */
                   IF (
                      (MSC_ATP_PVT.G_INV_CTP = 4) AND
                      (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND
                      (MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1) AND
                      (MSC_ATP_PVT.G_ALLOCATION_METHOD = 1)) AND C_ITEM_INFO_REC.atp_flag = 'Y'
                        --optional_fw disabling it as no forward stealing
                        AND MSC_ATP_PVT.G_FORWARD_ATP = 'N'
                                --3423277
                                AND NOT(C_ITEM_INFO_REC.bom_item_type = 1 and
                                    ( C_ITEM_INFO_REC.atp_comp_flag in ('Y', 'C') and
                                      p_atp_record.parent_item_id is null)) THEN

		      -- Already Called MSC_AATP_REQ.Get_Forward_Material_Atp, thus don't add
		      -- pegging for future case here as its already added.

		      IF PG_DEBUG in ('Y', 'C') THEN
		         msc_sch_wb.atp_debug('ATP_Check: ' || 'Already added future supply pegging : '|| l_atp_pegging_tab.COUNT);
		      END IF;
		   ELSE
                      l_future_atp_period := l_atp_period;
                      l_future_atp_supply_demand := l_atp_supply_demand;

                      l_pegging_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
                      l_pegging_rec.order_line_id:= MSC_ATP_PVT.G_ORDER_LINE_ID;
                      l_pegging_rec.parent_pegging_id:= l_pegging_id;
                      l_pegging_rec.atp_level:= p_level+1;
                      l_pegging_rec.organization_id:= p_atp_record.organization_id;
                      l_pegging_rec.organization_code := l_org_code;
                      l_pegging_rec.identifier1:= p_atp_record.instance_id;
                      l_pegging_rec.identifier2 := p_plan_id;
                      l_pegging_rec.identifier3 := NULL;

                      -- time_phased_atp changes begin
                      IF l_time_phased_atp = 'Y' and l_atp_date_this_level <= p_atp_record.atf_date THEN
                          l_pegging_rec.inventory_item_id:= l_request_item_id;
                          l_pegging_rec.inventory_item_name := C_ITEM_INFO_REC.item_name;
                      ELSE
                          l_pegging_rec.inventory_item_id:= p_atp_record.inventory_item_id;
                          l_pegging_rec.inventory_item_name := PF_ITEM_INFO_REC.item_name;
                      END IF;
                      l_pegging_rec.aggregate_time_fence_date := p_atp_record.atf_date;
                      -- time_phased_atp changes end

                      l_pegging_rec.resource_id := NULL;
                      l_pegging_rec.resource_code := NULL;
                      l_pegging_rec.department_id := NULL;
                      l_pegging_rec.department_code := NULL;
                      l_pegging_rec.supplier_id := NULL;
                      l_pegging_rec.supplier_name := NULL;
                      l_pegging_rec.supplier_site_id := NULL;
                      l_pegging_rec.supplier_site_name := NULL;
                      l_pegging_rec.scenario_id:= p_scenario_id;
                      l_pegging_rec.supply_demand_source_type:= ATP;

                      -- bug 1304991: make sure we follow the same way to populate pegging tree.
		      -- that is, future case's net supply should not consider the request date quantity.
                      --- IF req_date < PTF date and if enough quanity is available on req date then
                      --- we show peggin for two days. On req date we show wahtever quantity is
                      --- available on that day. On PTF date , we show req-date qty + whatever qty is available
                      --- between req date and ptf date. If req_date > ptf then we show atp date qty - req date qty
                      --- if req date < PTF date then we set l_req_date_qty = 0 else it is null
                      --4410439 start
                      IF nvl(l_req_date_qty, -1) = 0 THEN
                         l_pegging_rec.supply_demand_quantity:= p_atp_record.available_quantity;
                      ELSE
                         IF PG_DEBUG in ('Y', 'C') THEN
		            msc_sch_wb.atp_debug('ATP_Check: p_atp_record_available_qty : ' || p_atp_record.available_quantity);
                            msc_sch_wb.atp_debug('ATP_Check: requested_day_quantity : ' || p_atp_record.available_quantity);
		         END IF;
                         IF(p_atp_record.available_quantity <>  INFINITE_NUMBER) THEN
                            IF PG_DEBUG in ('Y', 'C') THEN
		               msc_sch_wb.atp_debug('ATP_Check: Available Quantity is not INFINITE, subtracting requested_day_qty');
                            END IF;
                         l_pegging_rec.supply_demand_quantity:=
                                p_atp_record.available_quantity - greatest(0, l_requested_date_quantity);
                         ELSE
                            IF PG_DEBUG in ('Y', 'C') THEN
		               msc_sch_wb.atp_debug('ATP_Check: Available Quantity INFINITE');
                            END IF;
                             l_pegging_rec.supply_demand_quantity:=  p_atp_record.available_quantity;
                         END IF;
                      END IF;
                      --4410439 end
                      ---bug 2798667: ship_date = l_atp_date_this_level + atp_lead_time
                      ---The option item should be requested on l_atp_date_this_level instead of ship date
                      --l_pegging_rec.supply_demand_date:=p_atp_record.ship_date;
                      l_pegging_rec.supply_demand_date:=l_atp_date_this_level;
                      --bug 3328421: store actual supply demand date
                      l_pegging_rec.actual_supply_demand_date := l_atp_date_this_level;

                      l_pegging_rec.supply_demand_type:= 2;
                      l_pegging_rec.source_type := 0;

                      -- for demo:1153192
                      l_pegging_rec.constraint_flag := 'N';
		      l_pegging_rec.component_identifier :=
                             NVL(p_atp_record.component_identifier, MSC_ATP_PVT.G_COMP_LINE_ID);

                      l_pegging_rec.summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;

                      --- bug 2152184: For PF based ATP inventory_item_id field contains id for PF item
                      --- cto looks at pegging tree to place their demands. Since CTO expects to find
                      --  id for the requested item, we add the following column. CTO will now read from this column
                      --diag_atp
                      l_pegging_rec.plan_name := p_atp_record.plan_name;
                      l_pegging_rec.required_quantity:= p_atp_record.quantity_ordered;
                      l_pegging_rec.required_date := l_requested_ship_date;
                      l_pegging_rec.infinite_time_fence := l_get_mat_out_rec.infinite_time_fence_date;
                      l_pegging_rec.atp_rule_name := l_get_mat_out_rec.atp_rule_name;
                      l_pegging_rec.rounding_control := l_rounding_control_flag;
                      l_pegging_rec.atp_flag := l_atp_flag;
                      l_pegging_rec.atp_component_flag := l_atp_comp_flag;
                      l_pegging_rec.pegging_type := MSC_ATP_PVT.ATP_SUPPLY; ---atp supply node
                      l_pegging_rec.postprocessing_lead_time := l_post_pro_lt;
                      l_pegging_rec.preprocessing_lead_time := l_pre_pro_lt;
                      l_pegging_rec.fixed_lead_time := l_fixed_lt;
                      l_pegging_rec.variable_lead_time := l_variable_lt;
                      l_pegging_rec.weight_capacity := l_unit_weight;
                      l_pegging_rec.volume_capacity := l_unit_volume;
                      l_pegging_rec.weight_uom := l_weight_uom;
                      l_pegging_rec.volume_uom := l_volume_uom;
                      l_pegging_rec.allocation_rule := l_allocation_rule_name;


                      l_pegging_rec.request_item_id := p_atp_record.request_item_id;

                      --s_cto_rearch
                      IF NVL(MSC_ATP_PVT.G_DIAGNOSTIC_ATP, 2) = 2 THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Forward ATP, add pegging constriant');
                        END IF;
                        l_pegging_rec.constraint_type := 1;
                      END IF;
                      l_pegging_rec.dest_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
                      l_pegging_rec.model_sd_flag := 2;
                      --e_cto_rearch
                      l_pegging_rec.demand_class :=  p_atp_record.demand_class;

                      --4570421
                      l_pegging_rec.scaling_type                      := p_atp_record.scaling_type;
                      l_pegging_rec.scale_multiple                    := p_atp_record.scale_multiple;
                      l_pegging_rec.scale_rounding_variance           := p_atp_record.scale_rounding_variance;
                      l_pegging_rec.rounding_direction                := p_atp_record.rounding_direction;
                      l_pegging_rec.component_yield_factor            := p_atp_record.component_yield_factor; --4570421
                      l_pegging_rec.usage                             := p_atp_record.usage_qty; --4775920
                      l_pegging_rec.organization_type                 := p_atp_record.organization_type; --4775920

                      MSC_ATP_DB_UTILS.Add_Pegging(l_pegging_rec, l_future_pegging_id);

                      -- bug 1225478
                      FOR i in 1..l_future_atp_period.Level.COUNT LOOP
                          l_future_atp_period.Pegging_Id(i) := l_future_pegging_id;
                          l_future_atp_period.End_Pegging_Id(i) := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
                      END LOOP;

                 -- dsting: supply/demand details pl/sql table no longer used
/*
                      FOR i in 1..l_future_atp_supply_demand.Level.COUNT LOOP
                          l_future_atp_supply_demand.Pegging_Id(i) := l_future_pegging_id;
                          l_future_atp_supply_demand.End_Pegging_Id(i) := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;
                      END LOOP;
*/
		      IF p_atp_record.insert_flag <> 0 THEN
		      	MSC_ATP_DB_UTILS.move_SD_temp_into_mrp_details(l_future_pegging_id,
					MSC_ATP_PVT.G_DEMAND_PEGGING_ID);
		      END IF;

                   END IF; 	--IF (MSC_ATP_PVT.G_ALLOCATION_METHOD = 1) THEN
                END IF;
                -- store this pegging id to l_parent_pegging_id so
                -- that we know how to peg to the demand for the planned
                -- order that we are going to create for each child.
                --4902658/5216528
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('l_parent_pegging_id := ' || l_parent_pegging_id);
                END IF;

                l_parent_pegging_id := l_pegging_id;
                -- Bug 2814872
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('l_parent_pegging_id := ' || l_parent_pegging_id);
                    msc_sch_wb.atp_debug('l_pegging_id := ' || l_pegging_id);
                    msc_sch_wb.atp_debug('ATP_Check: l_atp_date_this_level ' || l_atp_date_this_level);
                    msc_sch_wb.atp_debug('ATP_Check: l_atp_date_quantity_this_level ' ||
                                                                l_atp_date_quantity_this_level);
                    msc_sch_wb.atp_debug('ATP_Check: l_used_available_quantity ' ||
                                                                l_used_available_quantity);
                    msc_sch_wb.atp_debug('ATP_Check: p_atp_record.Quantity_Ordered '||
                                                                p_atp_record.Quantity_Ordered);
                    msc_sch_wb.atp_debug('ATP_Check: l_temp_net_demand '|| l_net_demand );
                    msc_sch_wb.atp_debug('ATP_Check: Count of Subs Items '|| l_substitutes_rec.inventory_item_id.count );
               END IF;
               l_tmp_parent_pegging_id := l_parent_pegging_id;
               --4902658/5216528
               for l_index in 1..l_substitutes_rec.inventory_item_id.count
                  LOOP

                  IF l_substitutes_rec.inventory_item_id.count > 1 THEN
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Substitute Loop Starts with l_index := ' || l_index);
               END IF;
               END IF;

                  IF (l_net_demand <= 0) then
                     EXIT;
                  END IF;

                  l_temp_net_demand := l_net_demand;
                  l_parent_pegging_id :=  l_substitutes_rec.pegging_id(l_index);
                  l_request_item_id :=  l_substitutes_rec.inventory_item_id(l_index);
                  MSC_ATP_PROC.get_global_item_info(p_atp_record.instance_id,
                                            --3917625: read item attributes from planned data
                                            -- -1,
                                            p_plan_id,
                                            l_request_item_id,
                                            p_atp_record.organization_id,
                                            l_item_info_rec );
                  C_ITEM_INFO_REC := G_ITEM_INFO_REC;
                  --In regular cases PF rec should point to PF Item .
                  if l_substitutes_rec.inventory_item_id.count > 1 then
                     PF_ITEM_INFO_REC := G_ITEM_INFO_REC;
                  end if;
                  p_atp_record.request_item_id :=     l_substitutes_rec.inventory_item_id(l_index);

               -- Do not do Any Forward processing of sources for past due orders .
               IF ((p_search = FORWARD_SCHEDULING) AND
                   (l_atp_date_quantity_this_level >= p_atp_record.Quantity_Ordered) AND
                   (l_atp_date_this_level = l_sysdate ) AND (MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 2)) THEN
                   --diag_atp: we dont want to stop in case of diag ATP. We still want to explode sources
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' ||
                          'Past Due Order Satisfied on Sysdate, Stop unless dia_atp ');
                   END IF;
                  p_atp_record.error_code := ATP_REQ_DATE_FAIL;
                --END IF;
                -- End Bug 2814872

                ----bug 2235012
                --diag_atp
                ELSIF NOT (p_search = BACKWARD_SCHEDULING AND l_requested_ship_date < l_ptf_date
                                                       AND  MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 2) THEN

                   IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Find Sources');
                       msc_sch_wb.atp_debug('bom_item_type := ' || C_ITEM_INFO_REC.bom_item_type);
                       msc_sch_wb.atp_debug('wip_supply_type := ' || p_atp_record.wip_supply_type);
                       msc_sch_wb.atp_debug('replenish_to_ord_flag := ' || C_ITEM_INFO_REC.replenish_to_ord_flag);
                   END IF;
                   --s_cto_rearch
                   l_item_sourcing_info_rec := l_null_item_sourcing_info_rec;
                   l_item_sourcing_info_rec.sr_inventory_item_id.extend;
                   l_item_sourcing_info_rec.line_id.extend;
                   l_item_sourcing_info_rec.ato_line_id.extend;
                   l_item_sourcing_info_rec.match_item_id.extend;
                   --l_item_sourcing_info_rec.sr_inventory_item_id(1) := p_atp_record.inventory_item_id;
                   l_item_sourcing_info_rec.sr_inventory_item_id(1) := l_request_item_id; -- for time_phased_atp
                   l_item_sourcing_info_rec.line_id(1) := p_atp_record.demand_source_line;
                   l_item_sourcing_info_rec.match_item_id(1) := null;
                   IF C_ITEM_INFO_REC.bom_item_type = 1 and
                          C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y' THEN
                      l_item_sourcing_info_rec.ato_line_id(1) := p_atp_record.ATO_Model_Line_Id;
                   ELSE
                      l_item_sourcing_info_rec.ato_line_id(1) := null;
                   END IF;

                   --if ods ATP and ATO model/item or if checking base model's capacity  then we only make
                   IF MSC_ATP_PVT.G_INV_CTP = 5 or l_check_model_capacity = 1 THEN
                      IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('ATP_Check: ' || 'ods atp, we always make');
                      END IF;

                      --we should come here only for ATO models or ATO items
                      l_sources.Source_Type := MRP_ATP_PUB.number_arr(2); -- make
                      l_sources.Organization_Id:=
                           MRP_ATP_PUB.number_arr(p_atp_record.organization_id);
                      l_sources.Rank := MRP_ATP_PUB.number_arr(1);
                      l_sources.Supplier_Id := MRP_ATP_PUB.number_arr(NULL);
                      l_sources.Supplier_Site_Id := MRP_ATP_PUB.number_arr(NULL);
                      l_sources.instance_id :=
                            MRP_ATP_PUB.number_arr(p_atp_record.instance_id);
                      l_sources.Lead_Time := MRP_ATP_PUB.number_arr(0); -- ship_rec_cal
                           l_sources.Ship_Method := MRP_ATP_PUB.char30_arr('@@@'); -- ship_rec_cal
                           l_sources.Preferred := MRP_ATP_PUB.number_arr(NULL); -- ship_rec_cal
                           l_sources.make_flag := MRP_ATP_PUB.char1_arr(NULL); -- ship_rec_cal
                           l_sources.Sup_Cap_Type := MRP_ATP_PUB.number_arr(2); -- ship_rec_cal

                   --do not get sources for phantom model
                   ELSIF NOT (C_ITEM_INFO_REC.bom_item_type = 1 and NVL(p_atp_record.wip_supply_type,2) = 6 and
                              C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y') THEN


                      MSC_ATP_PROC.Atp_Sources(p_atp_record.instance_id,
			         p_plan_id,
                                 l_request_item_id, -- for time_phased_atp
                                 p_atp_record.organization_id,
                                 NULL,
                                 NULL,
                                 p_assign_set_id,
                                 l_item_sourcing_info_rec,
                                 --MRP_ATP_PUB.number_arr(NULL),
                                 MSC_ATP_PVT.G_SESSION_ID,
                                 l_sources,
			         l_return_status);

                   END IF;
                   --e_cto_rearch
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'after atp_sources');
                   END IF;

                   IF l_return_status = MSC_ATP_PVT.CTO_OSS_ERROR Then
                       --- Model has option specific sources which do not match with sourcing of model
                       --update the demand pegging
                       update mrp_atp_details_temp
                       set error_code = MSC_ATP_PVT.OSS_ERROR_AT_THIS_LEVEL
                       where session_id = MSC_ATP_PVT.G_SESSION_ID
                       and   pegging_id = l_pegging_id
                       and   record_type = 3;

                       RAISE MSC_ATP_PVT.INVALID_OSS_SOURCE;

                   ELSIF l_return_status <> FND_API.G_RET_STS_SUCCESS  OR
                     l_sources.source_type.count = 0  THEN
                       -- no sources in supply chain bill, then we assume
                       -- it has "make at" type
                       IF PG_DEBUG in ('Y', 'C') THEN
                          msc_sch_wb.atp_debug('ATP_Check: ' || 'no sources');
                       END IF;
                       --- select make buy code  to decide if we want to make it or buy it
                       --EFTC Changes
                       BEGIN
               		   SELECT planning_make_buy_code INTO  l_make_buy_cd
               		   FROM MSC_SYSTEM_ITEMS I
               		   --bug3842035 Using member item id instead of family
               		   --WHERE  I.sr_inventory_item_id = p_atp_record.inventory_item_id and
               		   WHERE  I.sr_inventory_item_id = p_atp_record.request_item_id and
                      	   I.sr_instance_id = p_atp_record.instance_id and
                       	   I.organization_id = p_atp_record.organization_id and
                       	   I.plan_id = p_plan_id ;
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'make-buy Code = '|| l_make_buy_cd);
                           END IF;
                       EXCEPTION
               		   WHEN OTHERS THEN
			   l_make_buy_cd := 1; --- make 'make' default
                       END;
                       IF (l_make_buy_cd = 2) THEN ---  buy
                           l_sources.Source_Type := MRP_ATP_PUB.number_arr(3); --- BUY
                           l_sources.Organization_Id:=
                                   MRP_ATP_PUB.number_arr(p_atp_record.organization_id);
                           l_sources.Rank := MRP_ATP_PUB.number_arr(1);
                           ----- Since supplier id  and supplier site id is no known
                           ----  we set it to -99. We cant set it to null because
                           ----  when atp_check procedure is called from buy logic below
                           ----  then it will go into inventory org to do atp check rather
                           ----- then calling get_supplier_atp_info
                           l_sources.Supplier_Id :=MRP_ATP_PUB.number_arr(-99);
                           l_sources.Supplier_Site_Id :=MRP_ATP_PUB.number_arr(-99);
                           l_sources.instance_id :=
                             MRP_ATP_PUB.number_arr(p_atp_record.instance_id);
   			   l_sources.Lead_Time := MRP_ATP_PUB.number_arr(0); -- ship_rec_cal
                           l_sources.Ship_Method := MRP_ATP_PUB.char30_arr('@@@'); -- ship_rec_cal
                           l_sources.Preferred := MRP_ATP_PUB.number_arr(NULL); -- ship_rec_cal
                           l_sources.make_flag := MRP_ATP_PUB.char1_arr(NULL); -- ship_rec_cal
                           l_sources.Sup_Cap_Type := MRP_ATP_PUB.number_arr(2); -- ship_rec_cal

			  -- dsting
			  IF PG_DEBUG in ('Y', 'C') THEN
			     msc_sch_wb.atp_debug('ATP_Check: ' || 'MAKE_BUY_CHILDREN: have buy source');
			  END IF;
			  p_atp_record.children_type := MAKE_BUY_CHILDREN;
		       ELSE
                           l_sources.Source_Type := MRP_ATP_PUB.number_arr(2); -- make
                           l_sources.Organization_Id:=
                              MRP_ATP_PUB.number_arr(p_atp_record.organization_id);
                           l_sources.Rank := MRP_ATP_PUB.number_arr(1);
                           l_sources.Supplier_Id := MRP_ATP_PUB.number_arr(NULL);
                           l_sources.Supplier_Site_Id := MRP_ATP_PUB.number_arr(NULL);
                           l_sources.instance_id :=
                              MRP_ATP_PUB.number_arr(p_atp_record.instance_id);
                           l_sources.Lead_Time := MRP_ATP_PUB.number_arr(0); -- ship_rec_cal
                           l_sources.Ship_Method := MRP_ATP_PUB.char30_arr('@@@'); -- ship_rec_cal
                           l_sources.Preferred := MRP_ATP_PUB.number_arr(NULL); -- ship_rec_cal
                           l_sources.make_flag := MRP_ATP_PUB.char1_arr(NULL); -- ship_rec_cal
                           l_sources.Sup_Cap_Type := MRP_ATP_PUB.number_arr(2); -- ship_rec_cal

			  -- dsting
			  IF PG_DEBUG in ('Y', 'C') THEN
			     msc_sch_wb.atp_debug('ATP_Check: ' || 'MAKE_BUY_CHILDREN: have make source');
			  END IF;
			  p_atp_record.children_type := MAKE_BUY_CHILDREN;
		       END IF;

                   END IF;
                END IF;
                -- go over each sources
                j := l_sources.source_type.FIRST;


                --- we store parent_ptf in a local varibale as it might get changed
                l_parent_ptf_date := NVL(MSC_ATP_PVT.G_PTF_DATE, l_ptf_date);
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_parent_ptf_date := ' || l_parent_ptf_date);
                END IF;
                WHILE (j IS NOT NULL)   LOOP

                    -- Bug 3667729 - Reset G_ITEM_INFO_REC as it may have changed in last source.
                    G_ITEM_INFO_REC := C_ITEM_INFO_REC;

                    --Bug 3821358
                    l_store_g_ptf_date := NULL;
                    --optional_fw
                    --If we are going deep in the supply chain then we need not to set this as null as we want
                    --this to point to the top most org so that we can delete all the records by passing that pegging id.
                    --But if we are going in breath first manner then we need to keep an array of all the POs of all the
                    --sources. Let's keep every id in the loop no need of resetting n all that fuss.
                    IF G_FORWARD_ATP = 'Y' AND (l_sources.source_type.count > 1) THEN
                      G_FW_CTP_PEGGING_ID.EXTEND;
                      G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT) := NULL;

                      IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'inside more than source');
                      END IF;
                    END IF;

                    --bug 2178544: Since the ptf flag may be chnaged by transfer org, we reassign it for the curent plan
                    MSC_ATP_PVT.G_PTF_DATE := l_parent_ptf_date;

                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'inside while loop for the children');
                    END IF;

                    /* ship_rec_cal changes begin */
                    -- populate calendar codes in l_atp_rec
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('**************** Calendar Codes ******************************');
                       msc_sch_wb.atp_debug('*  ___________________Input_____________________');
                       msc_sch_wb.atp_debug('*  ');
                       msc_sch_wb.atp_debug('*  Source Type             : '|| l_sources.source_type(j) );
                       msc_sch_wb.atp_debug('*  Sup Cap Type            : '|| l_sources.sup_cap_type(j) );
                       msc_sch_wb.atp_debug('*  Instance ID             : '|| p_atp_record.instance_id );
                       msc_sch_wb.atp_debug('*  Source Instance ID      : '|| l_sources.instance_id(j) );
                       msc_sch_wb.atp_debug('*  Source Org ID           : '|| l_sources.organization_id(j) );
                       msc_sch_wb.atp_debug('*  Receiving Org ID        : '|| p_atp_record.organization_id );
                       msc_sch_wb.atp_debug('*  Plan ID                 : '|| p_plan_id );
                       msc_sch_wb.atp_debug('*  Inv Item ID             : '|| p_atp_record.inventory_item_id );
                       msc_sch_wb.atp_debug('*  Supplier ID             : '|| l_sources.supplier_id(j) );
                       msc_sch_wb.atp_debug('*  Supplier Site ID        : '|| l_sources.supplier_site_id(j) );
                       msc_sch_wb.atp_debug('*  Ship Method             : '|| l_sources.Ship_Method(j) );
                    END IF;

                    IF l_sources.source_type(j) = MAKE THEN

                        l_atp_rec.receiving_cal_code := p_atp_record.manufacturing_cal_code;
                        l_atp_rec.intransit_cal_code := p_atp_record.manufacturing_cal_code;
                        l_atp_rec.shipping_cal_code := p_atp_record.manufacturing_cal_code;
                        l_atp_rec.manufacturing_cal_code := p_atp_record.manufacturing_cal_code;

                    ELSIF l_sources.source_type(j) = TRANSFER THEN

                         --bug 3953635: calculate lead time if its not populated on sourcing rule
                        IF l_sources.Ship_Method(j) <> '@@@' THEN
                            l_atp_rec.ship_method := l_sources.Ship_Method(j);
                            l_atp_rec.delivery_lead_time := l_sources.lead_time(j);
                        ELSE
                            l_atp_rec.ship_method := null;
                            l_atp_rec.delivery_lead_time := null;

                            MSC_ATP_PROC.get_delivery_lead_time(
                                        l_sources.organization_id(j), -- p_from_org_id
                                        NULL,              -- p_from_loc_id
                                        l_sources.instance_id(j),
                                        p_atp_record.organization_id,
                                        NULL,              -- p_to_loc_id
                                        l_sources.instance_id(j),
                                        NULL,              -- p_customer_id
                                        NULL,              -- p_customer_site_id
                                        null,              -- Supplier_id
                                        null,              --suplier_site_id
                                        MSC_ATP_PVT.G_SESSION_ID,
                                        NULL,              -- p_partner_site_id
                                        l_atp_rec.ship_method,
                                        l_atp_rec.delivery_lead_time);

                            --reset the ship method and lead time because
                            --both l_sources.ship_method(j) and l_atp_rec.ship_method is used at
                            --different places.
                            l_sources.Ship_Method(j) := l_atp_rec.ship_method;
                            l_sources.lead_time(j) := l_atp_rec.delivery_lead_time;

                           IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('Lead time := ' || l_atp_rec.delivery_lead_time);
                               msc_sch_wb.atp_debug('Ship Method := ' || l_atp_rec.ship_method);
                           END IF;
                        END IF;

                        -- Bug 3737759 - Moved from below
                        l_atp_rec.manufacturing_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             l_sources.instance_id(j),
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             l_sources.organization_id(j),
                                                             null,
                                                             MSC_CALENDAR.OMC);

                        -- Bug 3593394
                        IF MSC_ATP_PVT.G_USE_SHIP_REC_CAL='Y' THEN
                            -- receiving party is org
                            l_atp_rec.receiving_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             p_atp_record.instance_id,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             p_atp_record.organization_id,
                                                             l_sources.Ship_Method(j),
                                                             MSC_CALENDAR.ORC);

                            l_atp_rec.intransit_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             l_sources.instance_id(j),
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             4,
                                                             null,
                                                             l_sources.Ship_Method(j),
                                                             MSC_CALENDAR.VIC);

                            l_atp_rec.shipping_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             l_sources.instance_id(j),
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             l_sources.organization_id(j),
                                                             l_sources.Ship_Method(j),
                                                             MSC_CALENDAR.OSC);
                        ELSE
                            -- Bug 3593394
                            IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'G_USE_SHIP_REC_CAL is N');
                            END IF;
                            -- Bug 3737759 - Use receiving org's OMC - l_atp_rec.receiving_cal_code := MSC_CALENDAR.FOC;
                            l_atp_rec.receiving_cal_code := p_atp_record.manufacturing_cal_code;
                            l_atp_rec.intransit_cal_code := MSC_CALENDAR.FOC;
                            -- Bug 3737759 - Use shipping org's OMC - l_atp_rec.shipping_cal_code := MSC_CALENDAR.FOC;
                            l_atp_rec.shipping_cal_code := l_atp_rec.manufacturing_cal_code;
                        END IF;

                        /* Bug 3737759 - Moved to beginning of IF
                        l_atp_rec.manufacturing_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             l_sources.instance_id(j),
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             l_sources.organization_id(j),
                                                             null,
                                                             MSC_CALENDAR.OMC);
                        */
                    ELSE
                        -- receiving party is org
                        /* Bug 3593394 - Moved after get_delivery_lead_time
                        l_atp_rec.receiving_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             p_atp_record.instance_id,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             p_atp_record.organization_id,
                                                             l_sources.Ship_Method(j),
                                                             MSC_CALENDAR.ORC);
                        */

                        -- supplier intransit LT
                        MSC_ATP_PROC.Get_Supplier_Regions(l_sources.Supplier_Site_Id(j),
                                                          724,  -- calling module is immaterial here
                                                          l_sources.instance_id(j),
                                                          l_return_status);
                        --3953635: If ship method is null then l_sources.Ship_Method(j) contains '@@@'
                        -- Decode it back to null if it contains '@@@'
                        IF l_sources.Ship_Method(j) <> '@@@' THEN
                            l_atp_rec.ship_method := l_sources.Ship_Method(j);
                        ELSE
                            l_atp_rec.ship_method := null;
                        END IF;

                        MSC_ATP_PROC.get_delivery_lead_time(
                                        NULL,              -- p_from_org_id
                                        NULL,              -- p_from_loc_id
                                        l_sources.instance_id(j),
                                        p_atp_record.organization_id,
                                        NULL,              -- p_to_loc_id
                                        l_sources.instance_id(j),
                                        NULL,              -- p_customer_id
                                        NULL,              -- p_customer_site_id
                                        l_sources.Supplier_Id(j),
                                        l_sources.Supplier_Site_Id(j),
                                        MSC_ATP_PVT.G_SESSION_ID,
                                        NULL,              -- p_partner_site_id
                                        l_atp_rec.ship_method,
                                        l_atp_rec.delivery_lead_time);

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: Use SMC irrespective of profile G_USE_SHIP_REC_CAL');
                        END IF;
                        --l_atp_rec.manufacturing_cal_code := p_atp_record.manufacturing_cal_code;
                        --Bug 3687353: Use SMC irrespective of profile MSC_ATP_PVT.G_USE_SHIP_REC_CAL

                        l_atp_rec.manufacturing_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             l_sources.instance_id(j),
                                                             p_plan_id,
                                                             --s_cto_rearch
                                                             --In case of ATP item pass model's id
                                                             --base item id is populated only for ATO items
                                                             NVL(C_ITEM_INFO_REC.base_item_id,
                                                                     C_ITEM_INFO_REC.dest_inv_item_id),
                                                             l_sources.supplier_id(j),
                                                             l_sources.supplier_site_id(j),
                                                             null,
                                                             null,
                                                             null,
                                                             MSC_CALENDAR.SMC);

                        -- Bug 3593394
                        IF MSC_ATP_PVT.G_USE_SHIP_REC_CAL='Y' THEN

                            l_atp_rec.receiving_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             p_atp_record.instance_id,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             p_atp_record.organization_id,
                                                             l_atp_rec.ship_method,
                                                             -- Bug 3593394 - l_sources.Ship_Method(j),
                                                             MSC_CALENDAR.ORC);

                            l_atp_rec.intransit_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             p_atp_record.instance_id,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             4,
                                                             null,
                                                             l_atp_rec.ship_method,
                                                             MSC_CALENDAR.VIC);

                            l_atp_rec.shipping_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             l_sources.instance_id(j),
                                                             null,
                                                             null,
                                                             l_sources.supplier_id(j),
                                                             l_sources.supplier_site_id(j),
                                                             1,
                                                             null,
                                                             l_atp_rec.ship_method,
                                                             MSC_CALENDAR.SSC);

                            /* Bug 3687353: Use SMC irrespective of profile MSC_ATP_PVT.G_USE_SHIP_REC_CAL
                            l_atp_rec.manufacturing_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             l_sources.instance_id(j),
                                                             p_plan_id,
                                                             --s_cto_rearch
                                                             --In case of ATP item pass model's id
                                                             --base item id is populated only for ATO items
                                                             NVL(C_ITEM_INFO_REC.base_item_id,
                                                                     C_ITEM_INFO_REC.dest_inv_item_id),
                                                             l_sources.supplier_id(j),
                                                             l_sources.supplier_site_id(j),
                                                             null,
                                                             null,
                                                             null,
                                                             MSC_CALENDAR.SMC);
                            */

                        ELSE

                            -- Bug 3593394
                            IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'G_USE_SHIP_REC_CAL is N');
                            END IF;
                            -- Bug 3737759 - Use receiving org's OMC - l_atp_rec.receiving_cal_code := MSC_CALENDAR.FOC;
                            l_atp_rec.receiving_cal_code := p_atp_record.manufacturing_cal_code;
                            l_atp_rec.intransit_cal_code := MSC_CALENDAR.FOC;
                            l_atp_rec.shipping_cal_code := MSC_CALENDAR.FOC;

                            /*Bug 3687353: Use SMC irrespective of profile MSC_ATP_PVT.G_USE_SHIP_REC_CAL
                            l_atp_rec.manufacturing_cal_code := p_atp_record.manufacturing_cal_code;*/

                        END IF;
                    END IF;
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('  ');
                       msc_sch_wb.atp_debug('*  ___________________Output____________________');
                       msc_sch_wb.atp_debug('*  ');
                       msc_sch_wb.atp_debug('*  Receiving calendar code         : ' || l_atp_rec.receiving_cal_code);
                       msc_sch_wb.atp_debug('*  Intransit calendar code         : ' || l_atp_rec.intransit_cal_code);
                       msc_sch_wb.atp_debug('*  Shipping calendar code          : ' || l_atp_rec.shipping_cal_code);
                       msc_sch_wb.atp_debug('*  Manufacturing calendar code     : ' || l_atp_rec.manufacturing_cal_code);
                       msc_sch_wb.atp_debug('**************************************************************');
                    END IF;

                    /* planned order due date as per OMC-D */
                    l_planned_order_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                p_atp_record.manufacturing_cal_code,
                                                p_atp_record.instance_id,
                                                l_requested_ship_date);
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('*  Planned Order Due Date as per OMC-D: ' || l_planned_order_date);
                    END IF;
                    -- ship_rec_cal changes end

                    IF ((l_sources.source_type(j) = MAKE) or
			(l_sources.source_type(j) = BUY))
		    THEN
			  -- dsting
			  IF PG_DEBUG in ('Y', 'C') THEN
			     msc_sch_wb.atp_debug('ATP_Check: ' || 'MAKE_BUY_CHILDREN: have make/buy source');
			  END IF;
			  p_atp_record.children_type := MAKE_BUY_CHILDREN;
			  G_HAVE_MAKE_BUY_PARENT := 1;
		    END IF;

                    --diag_atp
                    --reinitialize all the variables so that values from last source is not carried over
                    l_pegging_rec.plan_name := null;
                    l_pegging_rec.required_quantity:= null;
                    l_pegging_rec.required_date := null;
                    --bug 3328421
                    l_pegging_rec.actual_supply_demand_date := null;
                    l_pegging_rec.postprocessing_lead_time := null;
                    l_pegging_rec.preprocessing_lead_time := null;
                    l_pegging_rec.processing_lead_time := null;
                    l_pegging_rec.constraint_date := null;
                    l_pegging_rec.constraint_type := null;
                    l_pegging_rec.intransit_lead_time := null;
                    l_pegging_rec.ship_method := null;

                    IF ((l_sources.source_type(j) = TRANSFER) or
                        (l_sources.source_type(j) = BUY)) THEN

                        -- 1214740
                        l_atp_rec.identifier := p_atp_record.identifier;
                        l_atp_rec.demand_source_type := p_atp_record.demand_source_type;--cmro
                        --- Enhance CTO Phase 1 Req #16, #17
                        -- Pass the demand source line across only for CTO case.
                        --IF  NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) = p_atp_record.organization_id THEN
                        --IF ( MSC_ATP_PVT.G_CTO_LINE = 'Y' ) THEN
                        --    l_atp_rec.demand_source_line := p_atp_record.demand_source_line;
                        --END IF;
                        --- End Enhance CTO Phase 1 Req #16, #17

                        l_atp_rec.instance_id := l_sources.instance_id(j);

                        /* time_phased_atp changes begin
                           If time phased atp and buy scenario then populate member item id.
                           This is because we are not supporting aggregate supplier capacity currently*/
                        IF l_sources.source_type(j) = BUY THEN
                            l_atp_rec.inventory_item_id := l_request_item_id;
                        ELSE
                            l_atp_rec.inventory_item_id := p_atp_record.inventory_item_id;
                        END IF;
                        -- time_phased_atp changes end

                        l_atp_rec.request_item_id :=
				p_atp_record.request_item_id;
			---- EFTC: check for buy_make code. If it is 3 then no sources defined and
			---- therefore no source is known

			---    l_atp_rec.supplier_id := NULL;
		       	---     l_atp_rec.supplier_site_id := NULL;
		        ---	ELSE
                        l_atp_rec.supplier_id :=  l_sources.Supplier_Id(j);
                        l_atp_rec.supplier_site_id := l_sources.Supplier_Site_Id(j);
			---END IF;
                        IF l_sources.source_type(j) = BUY  THEN
                          -- this is to make sure we know what's the
                          -- receiving org since supplier capacities are
                          -- defined this way.

                          -- dsting 2764213
                          l_planned_sources := 1;

                          -- for 1381331 fix
                          l_atp_rec.instance_id := p_atp_record.instance_id;

                          l_atp_rec.organization_id :=
				p_atp_record.organization_id;

                          -- this is the plan id for next level
                          l_plan_id := p_plan_id;
                          l_assign_set_id := p_assign_set_id;

                          -- for bug 1124206: to be consistant with planning,
                          -- the lead time from a vendor site to an inv org
                          -- should be obtained from the postprocessing
                          -- lead time instead of leave it blank and
                          -- have atp pick up
                          -- the default one in mtl_interorg_ship_methods.

                          -- bug 1303196: delivery lead time is
                          -- postprocessing lead time,
                          -- not postprocessing lead time+1

                          -- Bug2085872 Check if l_inv_item_id is null.
                          IF l_inv_item_id IS NULL THEN
                             /* Modularize Item and Org Info */
                             -- Buy case
                             -- Re-Use info instead of making unnecessary call.
                             l_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
                             /*l_inv_item_id := MSC_ATP_FUNC.get_inv_item_id(
                                          		l_atp_rec.instance_id,
                                          		l_atp_rec.inventory_item_id,
                                                        null,
                                          		l_atp_rec.organization_id);
                              Modularize Item and Org Info */
                          END IF;
                          ---  2178544 replace this query as we already have processing lead time
                          /*begin
                          SELECT nvl(postprocessing_lead_time, 0)
                          INTO   l_atp_rec.delivery_lead_time
                          FROM   msc_system_items
                          WHERE  plan_id = p_plan_id
                          AND    organization_id = l_atp_rec.organization_id
                          AND    sr_instance_id = l_atp_rec.instance_id
                          AND    inventory_item_id = l_inv_item_id; -- 1665483
                          exception
                            when others then
                              l_atp_rec.delivery_lead_time := 0;
                          end; */
                          -- l_atp_rec.delivery_lead_time := l_post_pro_lt; -- suuplier intransit lt

                          --l_atp_rec.ship_method := 'DEFAULT';
                          l_new_summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;
			  l_old_summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;

                          --diag_atp
                          l_atp_rec.plan_name := p_atp_record.plan_name;
			  --Bug 5651914 start
			  IF PG_DEBUG in ('Y', 'C') THEN
			     msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PLAN_INFO_REC.sr_instance_id: ' || G_PLAN_INFO_REC.sr_instance_id);
			  END IF;
                          IF NVL(MSC_ATP_PVT.G_PLAN_INFO_REC.sr_instance_id,-1) = -1 THEN
			     IF PG_DEBUG in ('Y', 'C') THEN
			        msc_sch_wb.atp_debug('ATP_Check: ' || 'Re-calculating global plan information');
			     END IF;
			     SELECT trunc(cutoff_date),
                                    DECODE(plan_type, 4, 1,
                                        DECODE(daily_material_constraints, 1, NVL(enforce_pur_lt_constraints, 2),
                                            DECODE(daily_resource_constraints, 1, NVL(enforce_pur_lt_constraints, 2),
                                                DECODE(weekly_material_constraints, 1, NVL(enforce_pur_lt_constraints, 2),
                                                    DECODE(weekly_resource_constraints, 1, NVL(enforce_pur_lt_constraints, 2),
                                                        DECODE(period_material_constraints, 1, NVL(enforce_pur_lt_constraints, 2),
                                                            DECODE(period_resource_constraints, 1, NVL(enforce_pur_lt_constraints, 2), 1)
                                                              )
                                                          )
                                                      )
                                                  )
                                              )
                                          ),
                                    sr_instance_id,
                                    trunc(plan_start_date),
                                    organization_id
                             INTO   MSC_ATP_PVT.G_PLAN_INFO_REC.plan_cutoff_date,
                                    MSC_ATP_PVT.G_PLAN_INFO_REC.enforce_pur_lead_time,
                                    MSC_ATP_PVT.G_PLAN_INFO_REC.sr_instance_id,
                                    MSC_ATP_PVT.G_PLAN_INFO_REC.plan_start_date,
                                    MSC_ATP_PVT.G_PLAN_INFO_REC.organization_id
                             FROM   msc_plans
                             WHERE  plan_id = p_plan_id;
                          END IF;
                          --Bug 5651914 end

                        ELSE
                          --s_cto_rearch
                          IF  PG_DEBUG in ('Y', 'C') THEN
                              msc_Sch_wb.atp_debug('Transfer case: bom_item_type := ' || C_ITEM_INFO_REC.bom_item_type);
                              msc_Sch_wb.atp_debug('Transfer case: parent_repl_ord_flag := ' || C_ITEM_INFO_REC.replenish_to_ord_flag);

                          END IF;
                          IF C_ITEM_INFO_REC.bom_item_type in (1, 2) and C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y' THEN
                              IF PG_DEBUG in ('Y', 'C') THEN
                                 msc_Sch_wb.atp_debug('This is model entity. Pass Line IDs');
                              END IF;
                              --if model then pass the
                              l_atp_rec.Top_Model_line_id := p_atp_record.Top_Model_line_id;
                              l_atp_rec.ATO_Parent_Model_Line_Id := p_atp_record.ATO_Parent_Model_Line_Id;
                              l_atp_rec.ATO_Model_Line_Id := p_atp_record.ATO_Model_Line_Id;
                              l_atp_rec.Parent_line_id := p_atp_record.Parent_line_id;
                              l_atp_rec.wip_supply_type := p_atp_record.wip_supply_type;
                              l_atp_rec.parent_atp_flag := null;
                              l_atp_rec.parent_atp_comp_flag := null;
                              l_atp_rec.parent_repl_order_flag := null;
                              l_atp_rec.parent_bom_item_type := null;
                              l_atp_rec.bom_item_type := C_ITEM_INFO_REC.bom_item_type;
                              l_atp_rec.rep_ord_flag  := C_ITEM_INFO_REC.replenish_to_ord_flag;
                              l_atp_rec.mand_comp_flag := 2;
                              l_atp_rec.parent_so_quantity := p_atp_record.parent_so_quantity;
                              l_atp_rec.demand_source_line := p_atp_record.demand_source_line;
                              l_atp_rec.refresh_number :=  p_atp_record.refresh_number;

                          ELSIF C_ITEM_INFO_REC.bom_item_type  = 4 and C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y' THEN
                              l_atp_rec.ATO_Model_Line_Id := p_atp_record.ATO_Model_Line_Id;
                          END IF;
                          --e_cto_rearch
                          -- transfer from which org.
                          l_atp_rec.organization_id :=
                                l_sources.Organization_Id(j);


                          ---- store summary flags before and after get_plan_info
                          ---- The reason we are doing it is that we haven't added
                          ---- planned order as yet. If summary is not available for
                          ---- new plann then MSC_ATP_PVT.G_SUMMARY_FLAG will be set to 'N'.
                          ---- When we try to add planned order then the sumamry tables will
                          ----- not be updated even though the G_SUMMARY_FLAG for the old org's
                          ----- plan was 'Y'

                          l_old_summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;

                          /*
                          -- New procedure for obtaining plan data : Supplier Capacity Lead Time proj.
                                -- (SCLT)
                          MSC_ATP_PROC.get_global_plan_info(l_atp_rec.instance_id,
                                      l_atp_rec.inventory_item_id,
                                      l_atp_rec.organization_id,
                                      l_atp_rec.demand_class);*/

                          --Bug4548245 When we call this procedure from schedule then we check in ODS data
                           l_atp_rec.inventory_item_id := MSC_ATP_PF.Get_PF_Atp_Item_Id(l_atp_rec.instance_id,
                                                                             -1,
                                                                             l_atp_rec.request_item_id,
                                                                             l_atp_rec.organization_id);
                          --set the correct family item value
                          --Bug4548245 end
                          /* time_phased_atp changes begin
                             Call new procedure Get_PF_Plan_Info*/
                          MSC_ATP_PF.Get_PF_Plan_Info(
                                       l_atp_rec.instance_id,
                                       l_atp_rec.request_item_id,
                                       l_atp_rec.inventory_item_id,
                                       l_atp_rec.organization_id,
                                       l_atp_rec.demand_class,
                                       l_atp_rec.atf_date,
                                       l_atp_rec.error_code,
                                       l_return_status,
                                       p_plan_id --bug3510475 same plan when
                                                 --moving from one org to another
                          );

                          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'ATP Downtime');
                                END IF;
                                x_return_status := FND_API.G_RET_STS_ERROR;
                                RAISE FND_API.G_EXC_ERROR;
                          END IF;
                          /* time_phased_atp changes end*/

                          l_plan_info_rec := MSC_ATP_PVT.G_PLAN_INFO_REC;
                          -- End New procedure for obtaining plan data : Supplier Capacity Lead Time proj.

                          l_plan_id             := l_plan_info_rec.plan_id;
                          l_assign_set_id       := l_plan_info_rec.assignment_set_id;
                          -- changes for bug 2392456 ends


                          l_new_summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;

                          /* bug 3953635: Del_lead_time and ship method have already been populated
                          -- for bug 1124206
                          l_atp_rec.delivery_lead_time :=
                                l_sources.Lead_Time(j);
                          l_atp_rec.ship_method :=
                                l_sources.Ship_Method(j);
                          */
                          --diag_atp
                          l_atp_rec.plan_name := l_plan_info_rec.plan_name;

                        END IF;

                        -- need to do uom quantity conversion

                        -- Bug 2382963, ATP was erroring out in case a component is being transferred
                        -- from an organization with no ATPable plan due to PDS-ODS switch

                        -- 24x7 ATP
                        -- IF (l_plan_id is NULL) or (l_plan_id = -100) THEN
                        IF NVL(l_plan_id, -1) = -1 or (l_plan_id  = -100  ) THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Plan not found for : '||
				                    l_atp_rec.inventory_item_id
				                    ||' in org : '||l_atp_rec.organization_id);
                           END IF;
                        ELSIF l_plan_id = -300 then
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'ATP Downtime in plan for' ||
				                    l_atp_rec.inventory_item_id
				                    ||' in org : '||l_atp_rec.organization_id);
                           END IF;
                           --bug 2854351
                           --l_atp_rec.error_code := TRY_ATP_LATER;
                           l_atp_rec.error_code := PLAN_DOWN_TIME;
                           MSC_ATP_PVT.G_DOWNTIME_HIT := 'Y';
                           RAISE MSC_ATP_PVT.EXC_NO_PLAN_FOUND;

                        ELSIF l_plan_id is NOT NULL THEN
                           -- dsting 2764213
                           l_planned_sources := 1;

                           MSC_ATP_PROC.inv_primary_uom_conversion(l_atp_rec.instance_id,
                                          l_atp_rec.organization_id,
                                          l_atp_rec.inventory_item_id,
                                          p_atp_record.quantity_uom,
                                          l_atp_rec.quantity_uom,
                                          l_conversion_rate);

                           -- dsting 2754446 adjust planned order amt according to rounding_control_type
                           --bug3397904 start
                           --bug 3904063: Reset the quantity only in case of demand priorit allocated ATP
                           IF NVL(C_ITEM_INFO_REC.rounding_control_type, 2) = 1 THEN
                              --l_PO_qty := CEIL(l_net_demand); --bug3397904
                              IF (p_search = FORWARD_SCHEDULING)
                                 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                                 AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1
                                 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN  --bug3397904

                                   l_PO_qty := CEIL(p_atp_record.quantity_ordered);
                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('If l_PO_qty: ' || l_PO_qty);
                                   END IF;
                              ELSE
                               l_PO_qty := CEIL(l_net_demand);
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('Else l_PO_qty: ' || l_PO_qty);
                               END IF;
                              END IF;
                           ELSE
                              --bug 3904063: Reset the quantity only in case of demand priorit allocated ATP
                              IF (p_search = FORWARD_SCHEDULING)
                                 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                                 AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1
                                 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN  --bug3397904

                                   l_PO_qty := trunc(p_atp_record.quantity_ordered, 6);   --5598066
                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('If l_PO_qty: ' || l_PO_qty);
                                   END IF;
                              ELSE
                               l_PO_qty := trunc(l_net_demand, 6);	-- 5598066
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('Else l_PO_qty: ' || l_PO_qty);
                               END IF;
                              END IF;
                           END IF;
                          --bug3397904 end
                           l_atp_rec.quantity_ordered:=l_PO_qty*
                                                       l_conversion_rate;
                          l_atp_rec.quantity_ordered := ROUND(l_atp_rec.quantity_ordered, 6);  --4562646
--                        l_atp_rec.quantity_ordered:=l_net_demand*
--                                                    l_conversion_rate;

                        -- since it is a transfer/buy, we specify request
		        -- arrival date not request ship date

                        -- Need to initialize these dates so that only one is populated

                        l_atp_rec.requested_ship_date := NULL;
                        l_atp_rec.requested_arrival_date := NULL;

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date := ' || l_requested_ship_date);
                        END IF;

                        --- 2178544 calculate start date
                        --diag_atp
                        l_constraint_flag := 2;
                        -- Enforce Pur LT
                        l_trunc_started := 2;
                        IF l_sources.source_type(j) = TRANSFER  THEN

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Backward Scheduling ');
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'From Org : '|| l_atp_rec.organization_id);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'To Org : '|| p_atp_record.organization_id);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Lead Time : '|| l_atp_rec.delivery_lead_time);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'PPLT '||l_post_pro_lt);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Ship_method := ' || l_sources.ship_method(j));
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'MSC_ATP_PVT.G_PTF_DATE := ' ||MSC_ATP_PVT.G_PTF_DATE );
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_date_for_child := ' ||l_ptf_date_for_child );
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_date := ' ||l_ptf_date);
                            END IF;

                            -- Bug 3782472 - calculate ptf date for lower level
                            l_ptf_date_for_child := MSC_CALENDAR.DATE_OFFSET (
                                                p_atp_record.manufacturing_cal_code,
                                                p_atp_record.instance_id,
                                                l_parent_ptf_date,
                                                -1 * l_post_pro_lt, -1);
                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' ||
                                                    'After Man. Cal Offset l_ptf_date_for_child := ' ||l_ptf_date_for_child );
                            END IF;
                            l_ptf_date_for_child := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
        					l_ptf_date_for_child, l_atp_rec.receiving_cal_code, -1,
        					l_atp_rec.intransit_cal_code, -1 * l_atp_rec.delivery_lead_time, -1,
        					l_atp_rec.shipping_cal_code, -1, p_atp_record.instance_id);
                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'After 3 Set Cal  Offset l_ptf_date_for_child := ' ||l_ptf_date_for_child );
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'MSC_ATP_PVT.G_PTF_DATE := ' ||MSC_ATP_PVT.G_PTF_DATE );
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_date_for_child := ' ||l_ptf_date_for_child );
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_date := ' ||l_ptf_date);
                            END IF;

                            MSC_ATP_PVT.G_PTF_DATE := GREATEST(l_ptf_date_for_child,l_ptf_date,MSC_ATP_PVT.g_ptf_date); --5053993

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'After Offset MSC_ATP_PVT.G_PTF_DATE := '
                                                    ||MSC_ATP_PVT.G_PTF_DATE );
                            END IF;

                            /* ship_rec_cal changes begin */
                           l_dock_date := MSC_CALENDAR.DATE_OFFSET (
                                                p_atp_record.manufacturing_cal_code,
                                                p_atp_record.instance_id,
                                                l_requested_ship_date,
                                                -1 * l_post_pro_lt, -1);

                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_date_for_child: '||l_ptf_date_for_child);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Setting ptf_date for lower level: '||MSC_ATP_PVT.G_PTF_DATE);
                              msc_sch_wb.atp_debug('ATP_Check: ' || '___________________Start Offset___________________');
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting PPLT using OMC: '||l_dock_date);
                           END IF;

                           l_dock_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                l_atp_rec.receiving_cal_code,
                                                p_atp_record.instance_id,
                                                l_dock_date);
                           /* populating new_dock_date for transfer orders also, this is to support requirement of supporting
                              org modeled as supplier which might come in future*/
                           l_new_dock_date := l_dock_date;

                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on ORC : '||l_dock_date);
                           END IF;

                           l_start_date := MSC_CALENDAR.DATE_OFFSET (
                                                l_atp_rec.intransit_cal_code,
                                                p_atp_record.instance_id,
                                                l_dock_date,
                                                -1 * l_atp_rec.delivery_lead_time, -1);
                           -- Bug No  4592289/4667756/5053993 Start
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PTF_DATE before offset  : '||MSC_ATP_PVT.G_PTF_DATE);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_PTF_DATE before offset  : '||l_PTF_DATE);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_START_DATE before offset  : '||l_START_DATE);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'From Org : '|| l_atp_rec.organization_id);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'To Org : '|| p_atp_record.organization_id);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Lead Time : '|| l_atp_rec.delivery_lead_time);
                           END IF;
                           IF l_PTF_DATE < MSC_ATP_PVT.G_PTF_DATE  THEN
                              MSC_ATP_PVT.G_PTF_DATE := MSC_CALENDAR.DATE_OFFSET (l_atp_rec.intransit_cal_code,
                                                                   p_atp_record.instance_id,
                                                                      MSC_ATP_PVT.G_PTF_DATE ,
                                                                   -1 * l_atp_rec.delivery_lead_time, -1); -- Bug No: 4592289/4667756
                           IF PG_DEBUG in ('Y', 'C') THEN
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PTF_DATE after offset  : '||MSC_ATP_PVT.G_PTF_DATE);
                           END IF;
                           else
                              G_PTF_DATE := l_PTF_DATE;
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PTF_DATE after assign  : '||MSC_ATP_PVT.G_PTF_DATE );
                           END IF;
                           MSC_ATP_PVT.G_PTF_DATE := MSC_CALENDAR.NEXT_WORK_DAY(
                                                                l_atp_rec.shipping_cal_code,
                                                                p_atp_record.instance_id,
                                                                MSC_ATP_PVT.G_PTF_DATE );
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PTF_DATE after offset(Shipping cal)  : '||MSC_ATP_PVT.G_PTF_DATE);
                           END IF;

                           -- Bug No  4592289/4667756/5053993 Ends

                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting DLT using VIC : '||l_start_date);
                           END IF;

                           l_atp_rec.requested_ship_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                l_atp_rec.shipping_cal_code,
                                                l_atp_rec.instance_id,
                                                l_start_date);
                           /* populating new_ship_date for transfer orders also, this is to support requirement of supporting
                              org modeled as supplier which might come in future*/
                           l_new_ship_date := l_atp_rec.requested_ship_date;
                           l_sugg_start_date := l_new_ship_date;        -- Bug 3241766
                           l_start_date := l_new_ship_date; -- Bug 3412143 -- Setting the variable that is compared with PTF date
                                                            -- This should be source org's ship date.

                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on OSC : '||l_atp_rec.requested_ship_date);
                           END IF;

                           l_order_date := MSC_CALENDAR.DATE_OFFSET (
                                                p_atp_record.manufacturing_cal_code,
                                                p_atp_record.instance_id,
                                                l_atp_rec.requested_ship_date,
                                                -1 * MSC_ATP_PVT.G_ITEM_INFO_REC.pre_pro_lt, -1);

                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting pre PLT using OMC : '||l_order_date);
                              msc_sch_wb.atp_debug('ATP_Check: ' || '____________________End Offset____________________');
                           END IF;
                           -- ship_rec_cal changes end

                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Ship Date '||l_atp_rec.requested_ship_date);
                           END IF;

                           IF (MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 or p_search = forward_scheduling) and
                                  -- ship_rec_cal
                                  -- (l_dock_date < l_ptf_date or l_order_date < sysdate) THEN
                                  -- Bug 3412143 - Ship date in source org should be greater than receiving org's PTF
                                  -- Also use l_trunc_sysdate instead of accessing sysdate directly.
                                  (l_start_date < l_ptf_date or l_order_date < l_trunc_sysdate) THEN

                              /* ship_rec_cal changes begin*/
                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '___________________Start Calc PTF Due Date___________________');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'PTF Date: '||l_ptf_date);
                              END IF;

                              /* Bug 3412143 - Earlier ptf_due_date was calculated as
                              ptf_due_date := ptf_date + pre-processing lead time + delivery lead time + post-processing lead time
                              it should actually be
                              ptf_due_date := ptf_date + delivery lead time + post-processing lead time
                              l_ptf_due_date := MSC_CALENDAR.DATE_OFFSET (
                                                p_atp_record.manufacturing_cal_code,
                                                p_atp_record.instance_id,
                                                l_ptf_date,
                                                MSC_ATP_PVT.G_ITEM_INFO_REC.pre_pro_lt, 1);

                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding pre PLT using OMC: '||l_ptf_due_date);
                              END IF;
                              */

                              l_ptf_due_date := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
                        			l_ptf_date, l_atp_rec.shipping_cal_code, +1,
                        			l_atp_rec.intransit_cal_code, nvl(l_atp_rec.delivery_lead_time, 0), +1,
                        			l_atp_rec.receiving_cal_code, +1, p_atp_record.instance_id);

                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on OSC, adding intransit LT using VIC and ');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '    validating on ORC: '||l_ptf_due_date);
                              END IF;

                              l_ptf_due_date :=  MSC_CALENDAR.DATE_OFFSET (
                                                p_atp_record.manufacturing_cal_code, -- using OMC destination
                                                p_atp_record.instance_id,
                                                l_ptf_due_date,
                                                l_post_pro_lt, 1);

                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding PPLT using OMC: '||l_ptf_due_date);
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '___________________End Calc PTF Due Date___________________');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || ' ');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '___________________Start Calc LT Due Date___________________');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Sysdate: '||sysdate);
                              END IF;

                              l_lt_due_date := MSC_CALENDAR.DATE_OFFSET (
                                                p_atp_record.manufacturing_cal_code,
                                                p_atp_record.instance_id,
                                                -- sysdate, - Bug 3512996 - Removed unnecessary reference to sysdate
                                                l_trunc_sysdate,
                                                MSC_ATP_PVT.G_ITEM_INFO_REC.pre_pro_lt, 1);

                              -- Bug 3512996 - Set this date as PTF date for the source org so that the call to ATP_Check
                              --               for source org does not return a date earlier than this date, thereby enforcing
                              --               pre-PLT for transfer cases. Also this date doesn't need to be validated on OSC
                              --               the output of ATP_Check will anyway be validated on OSC.
                              MSC_ATP_PVT.G_PTF_DATE := GREATEST(l_lt_due_date, MSC_ATP_PVT.G_PTF_DATE);

                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding pre PLT using OMC: '||l_lt_due_date);
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Setting PTF for lower level: '||MSC_ATP_PVT.G_PTF_DATE);
                              END IF;

                              l_lt_due_date := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
                        			l_lt_due_date, l_atp_rec.shipping_cal_code, +1,
                        			l_atp_rec.intransit_cal_code, nvl(l_atp_rec.delivery_lead_time, 0), +1,
                        			l_atp_rec.receiving_cal_code, +1, p_atp_record.instance_id);

                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on OSC, adding intransit LT using VIC and ');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '    validating on ORC: '||l_lt_due_date);
                              END IF;

                              l_lt_due_date :=  MSC_CALENDAR.DATE_OFFSET (
                                                p_atp_record.manufacturing_cal_code, -- using OMC destination
                                                p_atp_record.instance_id,
                                                l_lt_due_date,
                                                l_post_pro_lt, 1);

                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding PPLT using OMC: '||l_lt_due_date);
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '___________________End Calc LT Due Date___________________');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || ' ');
                              END IF;
                              /* ship_rec_cal end */

                              IF PG_DEBUG in ('Y', 'C') THEN
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_lt_due_date := ' || l_lt_due_date);
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_due_date := ' || l_ptf_due_date);
                              END IF;


                              -- Bug 3525582 - Constraint message should be added only if constraint actually exists
                              IF l_lt_due_date > l_requested_ship_date OR
                                 l_ptf_due_date > l_requested_ship_date THEN

                                 -- Bug 3525582 - PTF constraint should be added only if plan is PTF enabled
                                 IF l_ptf_enabled=2 OR l_lt_due_date > l_ptf_due_date THEN
                                    --transfer lead time constraint
                                    l_pegging_rec.constraint_type := 5;
                                    l_pegging_rec.constraint_date := l_lt_due_date;
                                    l_constraint_flag := 1;
                                 ELSE
                                    ---PTF lead time constraint
                                    l_pegging_rec.constraint_type := 2;
                                    l_pegging_rec.constraint_date := l_ptf_due_date;
                                    l_constraint_flag := 1;
                                 END IF;

                              END IF;

                           END IF; --- IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN

                        ELSE
                           --s_cto_rearch
                             l_atp_rec.base_model_id := C_ITEM_INFO_REC.base_item_id;
                             l_atp_rec.bom_item_type := C_ITEM_INFO_REC.bom_item_type;
                             l_atp_rec.rep_ord_flag :=  C_ITEM_INFO_REC.replenish_to_ord_flag;
                           --e_cto_rearch

                            /* Enforce Pur LT - Moved code to get last cap date from Get_Supplier_ATP_Info. At this point it
                                        is sufficient to know whether capacity is defined or not. However since this table
                                        is being queried, we are getting last cap date as well.*/
                            SELECT max(trunc(NVL(to_date,G_PLAN_INFO_REC.plan_cutoff_date)))  --4055719
                            INTO   l_atp_rec.last_cap_date
                            FROM   msc_supplier_capacities s
                            WHERE  s.inventory_item_id = NVL(C_ITEM_INFO_REC.base_item_id,
                                                         C_ITEM_INFO_REC.dest_inv_item_id)
                            AND    s.sr_instance_id = l_sources.instance_id(j)
                            AND    s.plan_id = p_plan_id
                            AND    s.organization_id = p_atp_record.organization_id
                            AND    s.supplier_id = l_sources.supplier_id(j)
                            AND    NVL(s.supplier_site_id, -1) = NVL(l_sources.supplier_site_id(j), -1);

                            IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'last_cap_date: '||l_atp_rec.last_cap_date);
                            END IF;
                            /* Enforce Pur LT - changes end */


                            /* ship_rec_cal changes begin */
                            l_start_date := MSC_CALENDAR.DATE_OFFSET(
                                                 p_atp_record.manufacturing_cal_code,
                                                 p_atp_record.instance_id,
                                                 l_requested_ship_date,
                                                 -1 * l_post_pro_lt, -1);

                            IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'enforce_pur_lead_time: ' || G_PLAN_INFO_REC.enforce_pur_lead_time);
                              msc_sch_wb.atp_debug('ATP_Check: ' || '___________________Start Offset___________________');
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting PPLT using OMC: '||l_start_date);
                            END IF;

                            /* Enforce Pur LT - check if date is past due. dock date can be past due only if capacity is not defined. */
                            IF l_start_date < l_trunc_sysdate AND G_PLAN_INFO_REC.enforce_pur_lead_time = 2
                                AND l_atp_rec.last_cap_date IS NULL THEN
                                l_trunc_started := 1;
                                l_start_date := l_trunc_sysdate;
                                IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Past due date truncated to: '||l_trunc_sysdate);
                                END IF;
                            END IF;

                            /* Enforce Pur LT - No need to calculate dates if trunc has started */
                            IF l_trunc_started = 2 THEN
                                -- Actually dock date
                                l_start_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                l_atp_rec.receiving_cal_code,
                                                p_atp_record.instance_id,
                                                l_start_date);
                                IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on ORC : '||l_start_date);
                                END IF;
                                /* Enforce Pur LT - check if date is past due. dock date can be past due only
                                        if capacity is not defined. */
                                IF l_start_date < l_trunc_sysdate AND G_PLAN_INFO_REC.enforce_pur_lead_time = 2
                                    AND l_atp_rec.last_cap_date IS NULL THEN
                                    l_trunc_started := 1;
                                    l_start_date := l_trunc_sysdate;
                                    IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Past due date truncated to: '||l_trunc_sysdate);
                                    END IF;
                                END IF;
                            END IF;

                           /* populating new_dock_date */
                           l_new_dock_date := l_start_date;

                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Dock date : '||l_new_dock_date);
                              msc_sch_wb.atp_debug('ATP_Check: ' || '  ');
                           END IF;
                           /* ship_rec_cal changes end */

                           --diag_atp: we calculate the supplier lead time here.
                           -- Supplier Capacity and Lead Time (SCLT) changes

                           BEGIN
                             -- l_process_lt := l_fixed_lt + l_variable_lt * l_net_demand;
                             -- Fixed + Variable is discontinued, Instead item's processing lead time
                             -- essentially full_lead_time is used.

                             l_process_lt := MSC_ATP_PVT.G_ITEM_INFO_REC.processing_lt;
                             l_pre_pro_lt := MSC_ATP_PVT.G_ITEM_INFO_REC.pre_pro_lt;
                             IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Item Process_lead_time = '|| l_process_lt);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_pre_pro_lt  = ' || l_pre_pro_lt);
                             END IF;

                             IF (l_sources.Supplier_Id(j) <> -99) THEN
                                -- Query changed to include lead_time_date
                                select   nvl(processing_lead_time, l_process_lt), supplier_lead_time_date
                                into     l_process_lt, g_sup_cap_cum_date
                                from     msc_item_suppliers
                                where    plan_id = p_plan_id
                                and      sr_instance_id =  p_atp_record.instance_id
                                and      organization_id = p_atp_record.organization_id
                                 --bug 3373598: Use model's inv id for config item.
                                -- base_item_id will be populated only for ATO items
                                and      inventory_item_id = NVL(C_ITEM_INFO_REC.base_item_id, l_inv_item_id)
                                and      supplier_id =  l_sources.Supplier_Id(j)
                                and      supplier_site_id = l_sources.Supplier_site_Id(j);
                             ELSE
                                g_sup_cap_cum_date := null;
                             END IF;

                           Exception
                               WHEN others THEN
                                 g_sup_cap_cum_date := null;
                           END;
                           IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Plan Id = ' || p_plan_id);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Instance Id = ' || p_atp_record.instance_id);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Organization Id = ' || p_atp_record.organization_id);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Item Id = ' || l_inv_item_id);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Supplier Id = ' || l_sources.Supplier_Id(j));
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Supplier Site Id = ' || l_sources.Supplier_site_Id(j));

                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Process lead time after ASL query = '
                                                                                            || l_process_lt);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Supplier Lead Time Date = '
                                                                                       || g_sup_cap_cum_date);
                           END IF;
                           -- Bug 2803195
                           IF (g_sup_cap_cum_date IS NOT NULL) THEN
                               -- Get the next_working day based on plan owning org's calendar.
                               -- to account for MBP's -ve 1 day offset.
                               /* ship_rec_cal
                               g_sup_cap_cum_date :=  MSC_CALENDAR.next_work_day
                                                     (G_PLAN_INFO_REC.organization_id,
                                                      G_PLAN_INFO_REC.sr_instance_id,
                                                      1,
                                                      g_sup_cap_cum_date + 1);*/
                               g_sup_cap_cum_date :=  MSC_CALENDAR.next_work_day(
                                                      l_atp_rec.manufacturing_cal_code,
                                                      G_PLAN_INFO_REC.sr_instance_id,
                                                      g_sup_cap_cum_date + 1);
                               IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'Supplier Lead Time Date Next Day offset = '
                                                                                       || g_sup_cap_cum_date);
                               END IF;
                           END IF;
                           -- End Bug 2803195
                           -- End Supplier Capacity and Lead Time changes
                           l_net_processing_lt := CEIL(l_process_lt + l_pre_pro_lt);

                           -- Supplier Capacity and Lead Time (SCLT) changes
                              -- l_atp_rec.atp_lead_time := l_net_processing_lt;
                           -- Only the processing lead time will be passed back into ATP_Check
                           l_atp_rec.atp_lead_time := l_process_lt;
                           -- End Supplier Capacity and Lead Time changes
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_process_lt := ' || l_process_lt);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_net_processing_lt := ' || l_net_processing_lt);
                           END IF;

                            -- Bug 3782472 - calculate ptf date for lower level
                            l_ptf_date_for_child := MSC_CALENDAR.DATE_OFFSET (
                                                p_atp_record.manufacturing_cal_code,
                                                p_atp_record.instance_id,
                                                l_parent_ptf_date,
                                                -1 * l_post_pro_lt, -1);

                            MSC_ATP_PVT.G_PTF_DATE := GREATEST(l_ptf_date_for_child, l_ptf_date);

                            /* ship_rec_cal changes begin */
                            -- intransit lead time offset in case of capacity to ship
                            IF l_sources.sup_cap_type(j) = 1 THEN
                                    IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || '--- Capacity to Ship ---');
                                    END IF;

                                    -- Bug 3782472 - calculate ptf date for lower level
                                    l_ptf_date_for_child := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
        					l_ptf_date_for_child, l_atp_rec.receiving_cal_code, -1,
        					l_atp_rec.intransit_cal_code, -1 * l_atp_rec.delivery_lead_time, -1,
        					l_atp_rec.shipping_cal_code, -1, p_atp_record.instance_id);

                                    /* Enforce Pur LT - Check if date needs to be calculated */
                                    IF l_trunc_started = 1 THEN
                                        l_supplier_start_date := l_trunc_sysdate;
                                    ELSE
                                        l_supplier_start_date := MSC_CALENDAR.DATE_OFFSET(
                                                        l_atp_rec.intransit_cal_code,
                                                        l_atp_rec.instance_id,
                                                        l_new_dock_date,
                                                        (-1 * l_atp_rec.delivery_lead_time), -1);
                                        IF PG_DEBUG in ('Y', 'C') THEN
                                            msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting intransit LT using VIC : '||l_supplier_start_date);
                                        END IF;
                                        /* Enforce Pur LT - check if date is past due. for capacity to ship cases ship date
                                                can be past due only if capacity is not defined. */
                                        IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_atp_rec.last_cap_date IS NULL
                                            AND l_supplier_start_date < l_trunc_sysdate THEN
                                            l_supplier_start_date := l_trunc_sysdate;
                                            l_trunc_started := 1;
                                            IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Past due date truncated to: '||l_trunc_sysdate);
                                            END IF;
                                        END IF;
                                    END IF;


                                    /* Enforce Pur LT - Check if date needs to be calculated */
                                    IF l_trunc_started = 2 THEN
                                        l_supplier_start_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                l_atp_rec.shipping_cal_code,
                                                l_atp_rec.instance_id,
                                                l_supplier_start_date);
                                        IF PG_DEBUG in ('Y', 'C') THEN
                                            msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on SSC : '||l_supplier_start_date);
                                        END IF;
                                        /* Enforce Pur LT - check if date is past due. for capacity to ship cases ship date
                                                can be past due only if capacity is not defined. */
                                        IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_atp_rec.last_cap_date IS NULL
                                            AND l_supplier_start_date < l_trunc_sysdate THEN
                                            l_supplier_start_date := l_trunc_sysdate;
                                            l_trunc_started := 1;
                                            IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Past due date truncated to: '||l_trunc_sysdate);
                                            END IF;
                                        END IF;
                                    END IF;

                                   /* populating new_ship_date */
                                   l_new_ship_date := l_supplier_start_date;

                                   l_atp_rec.requested_ship_date := l_new_ship_date;

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'Ship date :'||l_new_ship_date);
                                      msc_sch_wb.atp_debug('ATP_Check: ' || '---------------------------');
                                   END IF;
                            ELSE
                                    l_supplier_start_date := l_new_dock_date;
                                    -- supplier intransit LT

                                    l_atp_rec.requested_ship_date := l_new_dock_date;

                                    -- Bug 3782472 - calculate ptf date for lower level
                                    l_ptf_date_for_child := MSC_CALENDAR.PREV_WORK_DAY(
                                                l_atp_rec.receiving_cal_code,
                                                p_atp_record.instance_id,
                                                l_ptf_date_for_child);

                                    IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || '--- Capacity to Dock ---');
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Supplier Start Date : '||l_supplier_start_date);
                                    END IF;

                                    /* populating new_ship_date in Capacity to Dock scenarios also */
                                    /* Enforce Pur LT - Check if date needs to be calculated */
                                    IF l_trunc_started = 1 THEN
                                        l_new_ship_date := l_trunc_sysdate;
                                    ELSE
                                        l_new_ship_date := MSC_CALENDAR.DATE_OFFSET(
                                                        l_atp_rec.intransit_cal_code,
                                                        l_atp_rec.instance_id,
                                                        l_start_date,
                                                        (-1 * l_atp_rec.delivery_lead_time), -1);

                                        IF PG_DEBUG in ('Y', 'C') THEN
                                            msc_sch_wb.atp_debug('ATP_Check: ' || '--- Calculate ship date ---');
                                            msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting intransit LT using VIC : '||l_new_ship_date);
                                        END IF;

                                        /* Enforce Pur LT - check if date is past due.*/
                                        IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_new_ship_date < l_trunc_sysdate THEN
                                            l_new_ship_date := l_trunc_sysdate;
                                            -- Not setting the flag l_trunc_started as dock date may still be more than sysdate
                                            -- and in capacity to dock cases further calculation of dates (start date, order date)
                                            -- is done from dock date.
                                            IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Past due date truncated to: '||l_trunc_sysdate);
                                            END IF;
                                        ELSE
                                            l_new_ship_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                        l_atp_rec.shipping_cal_code,
                                                        l_atp_rec.instance_id,
                                                        l_new_ship_date);

                                            IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on SSC :'||l_new_ship_date);
                                            END IF;

                                            /* Enforce Pur LT - check if date is past due.*/
                                            IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_new_ship_date < l_trunc_sysdate THEN
                                                l_new_ship_date := l_trunc_sysdate;
                                                IF PG_DEBUG in ('Y', 'C') THEN
                                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Past due date truncated to: '||l_trunc_sysdate);
                                                END IF;
                                            END IF;
                                        END IF;

                                    END IF;

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'Ship date :'||l_new_ship_date);
                                      msc_sch_wb.atp_debug('ATP_Check: ' || '---------------------------');
                                   END IF;

                            END IF;

                            /* Enforce Pur LT - Check if date needs to be calculated */
                            IF l_trunc_started = 1 THEN
                                l_supplier_start_date := l_trunc_sysdate;
                            ELSIF l_process_lt > 0 THEN
                                l_supplier_start_date := MSC_CALENDAR.DATE_OFFSET(
                                                                l_atp_rec.manufacturing_cal_code,
                                                                G_PLAN_INFO_REC.sr_instance_id,
                                                                l_supplier_start_date,
                                                                (-1 * l_process_lt), -1);
                                IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after offsetting processing LT on SMC :'||l_supplier_start_date);
                                END IF;
                                /* Enforce Pur LT - check if date is past due.*/
                                IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_supplier_start_date < l_trunc_sysdate THEN
                                    l_supplier_start_date := l_trunc_sysdate;
                                    l_trunc_started := 1;
                                    IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Past due date truncated to: '||l_trunc_sysdate);
                                    END IF;
                                END IF;
                            END IF;

                            l_sugg_start_date := l_supplier_start_date;          -- Bug 3241766

                            /* Enforce Pur LT - Check if date needs to be calculated */
                            IF l_trunc_started = 2 THEN
                                l_supplier_start_date := MSC_CALENDAR.DATE_OFFSET(
                                                        p_atp_record.manufacturing_cal_code, -- use OMC
                                                        l_atp_rec.instance_id,
                                                        l_supplier_start_date,
                                                        (-1 * l_pre_pro_lt), -1);
                                IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting pre PLT using OMC : '||l_supplier_start_date);
                                END IF;
                                /* Enforce Pur LT - check if date is past due.*/
                                IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_supplier_start_date < l_trunc_sysdate THEN
                                    l_supplier_start_date := l_trunc_sysdate;
                                    l_trunc_started := 1;
                                    IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Past due date truncated to: '||l_trunc_sysdate);
                                    END IF;
                                END IF;
                            END IF;

                            l_order_date := l_supplier_start_date;               -- Bug 3241766

                            -- Bug 3782472 - set ptf date for lower level
                            MSC_ATP_PVT.G_PTF_DATE := GREATEST(l_ptf_date_for_child, l_ptf_date);

                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || '____________________End Offset____________________');
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_start_date := ' || l_start_date);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_supplier_start_date := ' || l_supplier_start_date);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_date_for_child := ' || l_ptf_date_for_child);
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Setting ptf_date for lower level: '||MSC_ATP_PVT.G_PTF_DATE);
                           END IF;
                           /* ship_rec_cal changes end */

                           IF (MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 or p_search = FORWARD_SCHEDULING) and
                              (l_start_date < l_ptf_date or
                                 l_supplier_start_date < l_trunc_sysdate) THEN -- Enforce Pur LT - change sysdate to avoid
                                 -- l_supplier_start_date < sysdate) THEN      -- extraneous call to sysdate

                              /* ship_rec_cal changes begin */
                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '___________________Start Calc PTF Due Date___________________');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'PTF Date: '||l_ptf_date);
                              END IF;

                              IF l_start_date < l_ptf_date and l_post_pro_lt > 0 THEN
                                 l_ptf_due_date := MSC_CALENDAR.DATE_OFFSET(
                                                         p_atp_record.manufacturing_cal_code,
                                                         p_atp_record.instance_id,
                                                         l_ptf_date,
                                                         l_post_pro_lt, 1);

                                 IF PG_DEBUG in ('Y', 'C') THEN
                                     msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding PPLT using OMC: '||l_ptf_due_date);
                                 END IF;
                              ELSE
                                 --- bug 2771784: earliest due date should be PTF date. Not start date
                                 --l_ptf_due_date := l_start_date;
                                 -- ship_rec_cal i dont need to move l_ptf_date to next_work_day on mfg cal
                                 l_ptf_due_date :=  l_ptf_date;
                              END IF;

                              /* 3316028 (Enforce Pur LT) - PTF and sysdate validations were done here as well as after
                                        the call to ATP_Check for supplier. In forward pass doing all the calculations here
                                        itself and passing request ship date as the actual date on which capacity should
                                        be checked. l_supplier_request_date stores this date. */
                              /* Bug 3828494 (done with 3828469) - Don't change request date as that shows up in the pegging.
                                 This constraint will get enforced via the G_PTF_DATE which has already been set to a date
                                 greater than or equal to l_ptf_date
                              IF p_search = FORWARD_SCHEDULING THEN
                                  l_supplier_request_date := GREATEST(l_start_date, l_ptf_date);
                                  l_supplier_request_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                            l_atp_rec.receiving_cal_code,
                                                            l_atp_rec.instance_id,
                                                            l_supplier_request_date);

                                  IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on ORC : '||l_supplier_request_date);
                                  END IF;

                                  IF l_sources.sup_cap_type(j) = 1 THEN
                                      -- capacity to be checked on ship date
                                      l_supplier_request_date := MSC_CALENDAR.DATE_OFFSET(
                                                            l_atp_rec.intransit_cal_code,
                                                            l_atp_rec.instance_id,
                                                            l_supplier_request_date,
                                                            (-1 * l_atp_rec.delivery_lead_time), -1);
                                      IF PG_DEBUG in ('Y', 'C') THEN
                                          msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting intransit LT using VIC : '||l_supplier_request_date);
                                      END IF;
                                      l_supplier_request_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                    l_atp_rec.shipping_cal_code,
                                                    l_atp_rec.instance_id,
                                                    l_supplier_request_date);
                                  END IF;
                                  -- IF PTF is more constraining then this would be the date at which capacity would be checked
                                  l_atp_rec.requested_ship_date := l_supplier_request_date;
                              END IF;
                              */

                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '___________________End Calc PTF Due Date___________________');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || ' l_ptf_due_date := ' || l_ptf_due_date);
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Sysdate: '||l_trunc_sysdate);
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '___________________Start Calc LT Due Date___________________');
                              END IF;
                              -- IF l_supplier_start_date < l_sysdate and (l_post_pro_lt + l_net_processing_lt) >0 THEN
                              IF l_supplier_start_date < l_trunc_sysdate
                                 and ((l_post_pro_lt + l_net_processing_lt)>0
                                      or (l_sources.sup_cap_type(j) = 1 and l_atp_rec.delivery_lead_time>0))THEN
                                   -- Enforce Pur LT - change sysdate to avoid extraneous call to sysdate
                                   -- Bug 3316028 - also included transit time for capacity to ship cases

                                   --Bug 3821358
                                   IF l_trunc_sysdate < l_sys_next_date THEN
                                      l_store_order_date  := l_sys_next_date - 1;
                                   ELSE
                                      l_store_order_date  := l_trunc_sysdate;
                                   END IF;

                                   l_lt_due_date := MSC_CALENDAR.DATE_OFFSET(
                                                                p_atp_record.manufacturing_cal_code,
                                                                l_atp_rec.instance_id,
                                                                l_trunc_sysdate,
                                                                l_pre_pro_lt, 1);
                                   --Bug 3821358
                                   l_store_start_date := l_lt_due_date;

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding Pre PLT using OMC: '||l_lt_due_date);
                                   END IF;

                                   IF l_process_lt > 0 THEN
                                           l_lt_due_date := MSC_CALENDAR.DATE_OFFSET(
                                                                        l_atp_rec.manufacturing_cal_code,
                                                                        G_PLAN_INFO_REC.sr_instance_id,
                                                                        l_lt_due_date,
                                                                        l_process_lt, 1);
                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding PLT using SMC: '||l_lt_due_date);
                                           END IF;
                                   END IF;

                                   -- intransit lead time offset in case of capacity to ship
                                   IF l_sources.sup_cap_type(j) = 1 THEN
                                           l_lt_due_date:= MSC_CALENDAR.NEXT_WORK_DAY(
                                                                l_atp_rec.shipping_cal_code,
                                                                p_atp_record.instance_id,
                                                                l_lt_due_date);
                                           --Bug 3821358
                                           l_store_ship_date := l_lt_due_date;

                                           /* Bug 3828494 (done with 3828469)
                                           IF p_search = FORWARD_SCHEDULING THEN
                                               l_supplier_request_date := l_lt_due_date;
                                           END IF;
                                           */
                                           l_ptf_date_for_child := l_lt_due_date;       -- Bug 3828494 (done with 3828469)

                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || '--- Capacity to Ship ---');
                                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on SSC: '||l_lt_due_date);
                                           END IF;

                                           l_lt_due_date := MSC_CALENDAR.DATE_OFFSET(
                                                                l_atp_rec.intransit_cal_code,
                                                                G_PLAN_INFO_REC.sr_instance_id,
                                                                l_lt_due_date,
                                                                l_atp_rec.delivery_lead_time, 1);

                                           l_lt_due_date := MSC_CALENDAR.NEXT_WORK_DAY(
                                                                l_atp_rec.receiving_cal_code,
                                                                p_atp_record.instance_id,
                                                                l_lt_due_date);

                                           --Bug 3821358
                                           l_store_dock_date := l_lt_due_date ;

                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding intransit LT using VIC: '||l_lt_due_date);
                                           END IF;

                                   ELSE
                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || '--- Capacity to Dock ---');
                                           END IF;

                                           --Bug 3821358
                                           l_lt_due_date := MSC_CALENDAR.NEXT_WORK_DAY(
                                                               l_atp_rec.receiving_cal_code,
                                                               p_atp_record.instance_id,
                                                               l_lt_due_date);

                                           l_store_dock_date :=  l_lt_due_date;

                                           l_store_ship_date := MSC_CALENDAR.DATE_OFFSET(
                                                                l_atp_rec.intransit_cal_code,
                                                                G_PLAN_INFO_REC.sr_instance_id,
                                                                l_lt_due_date,
                                                                (-1 * l_atp_rec.delivery_lead_time), -1);

                                           l_store_ship_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                                l_atp_rec.shipping_cal_code,
                                                                p_atp_record.instance_id,
                                                                l_store_ship_date);
                                   END IF;

                                   /*l_lt_due_date := MSC_CALENDAR.NEXT_WORK_DAY(
                                                        l_atp_rec.receiving_cal_code,
                                                        p_atp_record.instance_id,
                                                        l_lt_due_date);*/

                                   /* Bug 3828494 (done with 3828469)
                                   IF p_search = FORWARD_SCHEDULING AND l_sources.sup_cap_type(j) = 2 THEN
                                       l_supplier_request_date := l_lt_due_date;
                                   END IF;
                                   */
                                   IF l_sources.sup_cap_type(j) = 2 THEN
                                       l_ptf_date_for_child := l_lt_due_date;   -- Bug 3828494 (done with 3828469)
                                   END IF;

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on ORC: '||l_lt_due_date);
                                   END IF;

                                   l_lt_due_date := MSC_CALENDAR.DATE_OFFSET(
                                                         p_atp_record.manufacturing_cal_code,
                                                         p_atp_record.instance_id,
                                                         l_lt_due_date,
                                                         l_post_pro_lt, 1);

                                   l_store_due_date :=  l_lt_due_date;

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding PPLT using OMC: '||l_lt_due_date);
                                   END IF;

                                   --Bug 3821358
                                   l_store_g_ptf_date := l_ptf_date_for_child;

                              ELSE
                                 l_lt_due_date := l_supplier_start_date;
                                 /* Bug 3828494 (done with 3828469)
                                 IF p_search = FORWARD_SCHEDULING THEN
                                     l_supplier_request_date := GREATEST(l_supplier_start_date,l_trunc_sysdate);
                                 END IF;
                                 */
                                 l_ptf_date_for_child := GREATEST(l_supplier_start_date,l_trunc_sysdate);
                              END IF;

                              /* Bug 3828494 (done with 3828469) - Don't change request date as that shows up in the pegging.
                                 Instead pass this constraint as G_PTF_DATE
                              l_atp_rec.requested_ship_date := GREATEST(l_atp_rec.requested_ship_date,l_supplier_request_date);
                              */

                              MSC_ATP_PVT.G_PTF_DATE := GREATEST(MSC_ATP_PVT.G_PTF_DATE, l_ptf_date_for_child);

                              -- PTF for lower level = greatest(sysdate+prePLT, current org's PTF, parent org's PTF)
                              -- after validating on all applicable calendars.

                              IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || '___________________End Calc LT Due Date___________________');
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'l_lt_due_date := ' || l_lt_due_date);
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_date_for_child: '||l_ptf_date_for_child);
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Setting ptf_date for lower level: '||MSC_ATP_PVT.G_PTF_DATE);
                              END IF;
                              /* ship_rec_cal changes end */

                              -- Bug 3525582 - Constraint message should be added only if constraint actually exists
                              IF l_lt_due_date > l_requested_ship_date OR
                                 l_ptf_due_date > l_requested_ship_date THEN

                                 -- Bug 3525582 - PTF constraint should be added only if plan is PTF enabled
                                 IF l_ptf_enabled=2 OR l_lt_due_date > l_ptf_due_date THEN
                                    --purchasing lead time constraint
                                    l_pegging_rec.constraint_type := 4;
                                    l_pegging_rec.constraint_date := l_lt_due_date;
                                    l_constraint_flag := 1;

                                 ELSE
                                    --PTF lead time constraint
                                    l_pegging_rec.constraint_type := 2;
                                    l_pegging_rec.constraint_date := l_ptf_due_date;
                                    l_constraint_flag := 1;

                                END IF;
                             END IF;
                           END IF;

                        END IF;

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_start_date := ' || l_start_date);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'ship_date := ' || l_atp_rec.requested_ship_date);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'arrival_date := ' || l_atp_rec.requested_arrival_date);
                        END IF;

                        l_atp_rec.latest_acceptable_date := null;
                        l_atp_rec.freight_carrier := null;
                        -- 1665483
                        --- bug 1870820 This bug was occuring because following line was commented out
                        --- As a result demand class was not getting passed to -get_supplier_atp_info proc
                        --- the line was commented out for bug 1665483. Uncommenting the line after discussing
                        --- with christine. She has commented this line out so that demand class info is not
                        --- passed to the org where we are transferring the item from and demand class
                        --- for second org gets enforced
                        l_atp_rec.demand_class := p_atp_record.demand_class;
                        l_atp_rec.override_flag := null;
                        l_atp_rec.ship_date := null;
                        l_atp_rec.action := p_atp_record.action;
                        l_atp_rec.insert_flag := p_atp_record.insert_flag;
                        l_atp_rec.to_location_id :=
 				MSC_ATP_FUNC.get_location_id(p_atp_record.instance_id,
                                p_atp_record.organization_id,
                                null,
                                null,
                                null,
                                null);
                        l_atp_rec.to_organization_id :=
                            p_atp_record.organization_id;
			l_atp_rec.to_instance_id := p_atp_record.instance_id;

                        l_atp_rec.order_number := p_atp_record.order_number;

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'ORDER_NUMBER is : ' || l_atp_rec.order_number);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'Demand Source Type is : ' || l_atp_rec.demand_source_type);--cmro
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'net_demand is : ' || l_net_demand);
                        END IF;
                        --- End Enhance CTO Phase 1 Req #16 and #17


                        -- insert a plan order for the l_net_demand
                         ---- Change the flag temprorily as new plan's summary flag might be
                         ---- different from last plan's summary flag
                         ----
                        MSC_ATP_PVT.G_SUMMARY_FLAG := l_old_summary_flag;
                        /* rajjain 02/19/2003 Bug 2788302 Begin
                         * set org to null for Supplier's case. */
                        IF NVL(l_atp_rec.supplier_id,-1) <> -1 THEN
                           msc_sch_wb.atp_debug('Set Org id null in Supplier case');
                           l_src_org_id := NULL;
                        ELSE
                           l_src_org_id := l_atp_rec.organization_id;
                        END IF;
                        -- rajjain 02/19/2003 Bug 2788302 End

                        /* Modularize Item and Org Info */
                        -- Changed call to remove embedded function call.

			-- dsting only add planned_order if it's not a constraint node
			l_transaction_id := NULL;
                        --bug 2792702: Remove this condition as we need to create planned order
                        --during forward scheduling
			--IF l_pegging_rec.constraint_type IS NULL THEN
                        -- Begin ATP4drp Create Planned Arrivals for DRP plans
                        IF (NVL(MSC_ATP_PVT.G_PLAN_INFO_REC.plan_type,1) = 5) AND (l_src_org_id is NOT NULL) THEN
                             l_supply_rec.instance_id            := p_atp_record.instance_id;
                             l_supply_rec.plan_id                := p_plan_id;
                             l_supply_rec.inventory_item_id      :=
                                                  C_ITEM_INFO_REC.dest_inv_item_id;
                             l_supply_rec.organization_id        := p_atp_record.organization_id;
                             l_supply_rec.schedule_date          := l_planned_order_date;
                             l_supply_rec.order_quantity         := l_PO_qty;
                             l_supply_rec.demand_class           := p_atp_record.demand_class;
                             -- l_supply_rec.source_organization_id
                             -- l_supply_rec.source_sr_instance_id
                             -- Source fields will be updated as a part of
                             -- Update_Planned_Order process.
                             l_supply_rec.refresh_number         := p_refresh_number;
                             l_supply_rec.shipping_cal_code      := l_atp_rec.shipping_cal_code;
                             l_supply_rec.receiving_cal_code     := l_atp_rec.receiving_cal_code;
                             l_supply_rec.intransit_cal_code     := l_atp_rec.intransit_cal_code;
                             l_supply_rec.new_ship_date          := l_new_ship_date;
                             l_supply_rec.new_dock_date          := l_new_dock_date;

                             --BUG 4488336: Populate correct start date
                             --l_supply_rec.start_date             := l_new_dock_date;
                             l_supply_rec.start_date             := l_start_date;
                             l_supply_rec.order_date             := l_order_date;
                             l_supply_rec.ship_method            := l_atp_rec.ship_method;

                             --l_supply_rec.return_status

                             l_supply_rec.firm_planned_type := 2;
                             l_supply_rec.disposition_status_type := 1;
                             l_supply_rec.record_source := 2; -- ATP created
                             l_supply_rec.supply_type := 51; --- planned arrival
                             l_supply_rec.intransit_lead_time := l_atp_rec.delivery_lead_time; --4127630

                             MSC_ATP_DB_UTILS.ADD_Supplies(l_supply_rec);
                             -- Asssign the output to local variables.
                             l_transaction_id := l_supply_rec.transaction_id;
                             l_return_status  := l_supply_rec.return_status;
                             IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Supply Id l_transaction_id: ' || l_transaction_id);
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Supply Type l_supply_rec.supply_type: '
                                                                                       || l_supply_rec.supply_type);
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Return Status l_return_status: ' || l_return_status);
                             END IF;
                        ELSE -- Create Planned Order otherwise.

                             MSC_ATP_DB_UTILS.Add_Planned_Order(
                                    p_atp_record.instance_id,
                                    p_plan_id,
                                    PF_ITEM_INFO_REC.dest_inv_item_id,
                                    p_atp_record.organization_id,
                                    l_planned_order_date, -- For ship_rec_cal
                                    l_PO_qty, -- 2754446
                                    --l_net_demand,
                                    null, -- l_atp_rec.supplier_id,
                                    null, -- l_atp_rec.supplier_site_id,
                                    p_atp_record.demand_class,
                                    -- rajjain 02/19/2003 Bug 2788302 Begin
                                    -- Add Sourcing details.
                                    l_src_org_id,
                                    l_atp_rec.instance_id,
                                    null, --process seq id (transfer case)
                                    -- rajjain 02/19/2003 Bug 2788302 End
                                    p_refresh_number,    -- For summary enhancenment
                                    -- ship_rec_cal changes begin
                                    l_atp_rec.shipping_cal_code,
                                    l_atp_rec.receiving_cal_code,
                                    l_atp_rec.intransit_cal_code,
                                    l_new_ship_date,
                                    l_new_dock_date,
                                    l_sugg_start_date,  -- Bug 3241766
                                    l_order_date,       -- Bug 3241766
                                    l_atp_rec.ship_method,
                                    -- ship_rec_cal changes end
                                    l_transaction_id,
                                    l_return_status,
                                    -- time_phased_atp
                                    l_atp_rec.delivery_lead_time, --4127630
                                    C_ITEM_INFO_REC.dest_inv_item_id,
                                    p_atp_record.atf_date
                                );
                        END IF;
                        -- End ATP4drp
			--END IF;

                        -- populate insert rec to pegging tree for this supply

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'here the the parent_pegging_id inside the buy/transfer :'||
				l_pegging_id);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_parent_pegging_id := ' || l_parent_pegging_id);
                        END IF;
                        l_pegging_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
                        l_pegging_rec.order_line_id:= MSC_ATP_PVT.G_ORDER_LINE_ID;
                        l_pegging_rec.parent_pegging_id:= l_parent_pegging_id;
                        l_pegging_rec.atp_level:= p_level+1;


                        IF l_sources.source_type(j) = TRANSFER or l_sources.source_type(j) = MAKE THEN --5222584
                          l_pegging_rec.organization_id :=
                              l_sources.organization_id(j);
                          /* Modularize Item and Org Info */
                          IF (G_ORG_INFO_REC.organization_id =
                                         l_pegging_rec.organization_id) AND
                             (G_ORG_INFO_REC.instance_id =
                                            p_atp_record.instance_id) THEN
                            -- If org has not changed then re-use.
                            l_pegging_rec.organization_code :=
                                                   G_ORG_INFO_REC.org_code;
                            ---we need this organization for pegging creation
                            -- Org id contains source org. We need to create atp simplified peg
                            --- in rec org. Therefore, we remember it
                          ELSE
                             /* Modularize Item and Org Info */
                             MSC_ATP_PROC.get_global_org_info(p_atp_record.instance_id,
                                                         l_pegging_rec.organization_id);
                             l_pegging_rec.organization_code := MSC_ATP_PVT.G_ORG_INFO_REC.org_code;
                             /* l_pegging_rec.organization_code :=
                               MSC_ATP_FUNC.get_org_code(p_atp_record.instance_id,
                                           l_pegging_rec.organization_id);
                             Modularize Item and Org Info */
                          END IF;
                          /* Modularize Item and Org Info */
                          l_pegging_rec.supplier_id := NULL;
                          l_pegging_rec.supplier_name := NULL;
                          l_pegging_rec.supplier_site_id := NULL;
                          l_pegging_rec.supplier_site_name := NULL;
                          l_pegging_rec.receiving_organization_id :=  p_atp_record.organization_id;
                        ELSE
                          --- for CTO rearch: add this field so that its read for creating ATP pegging
                          --l_pegging_rec.organization_id := NULL;
                          l_pegging_rec.organization_id := p_atp_record.organization_id;
                          l_pegging_rec.organization_code := NULL;
			  --- EFTC if l_buy_make_cd = 3 then it means that no sources are defined
                          --- Therefore source info is not available
			  --- we set the supplier info to null
			  IF (l_make_buy_cd = 3) THEN --- no sources defined
 				l_pegging_rec.supplier_id := NULL;
                          	l_pegging_rec.supplier_name := NULL;
                          	l_pegging_rec.supplier_site_id := NULL;
                          	l_pegging_rec.supplier_site_name := NULL;
			  ELSE
                       		l_pegging_rec.supplier_id := l_sources.supplier_id(j);
                       		l_pegging_rec.supplier_name :=
                              		MSC_ATP_FUNC.get_supplier_name(p_atp_record.instance_id,
                               				               l_pegging_rec.supplier_id);
                                l_pegging_rec.supplier_site_id :=
                              		l_sources.supplier_site_id(j);
                          	l_pegging_rec.supplier_site_name :=
                              		MSC_ATP_FUNC.get_supplier_site_name(p_atp_record.instance_id,
                                       			                    l_pegging_rec.supplier_site_id);
                    	  END IF;
                        END IF;

                        l_pegging_rec.identifier1:= p_atp_record.instance_id;
                        l_pegging_rec.identifier2:= p_plan_id;
                        l_pegging_rec.identifier3 := l_transaction_id;

                        -- time_phased_atp changes begin
                        IF l_pf_atp = 'Y' THEN
                           l_pegging_rec.inventory_item_id:= p_atp_record.inventory_item_id;
                           l_pegging_rec.inventory_item_name := PF_ITEM_INFO_REC.item_name;
                        ELSE
                           l_pegging_rec.inventory_item_id:= p_atp_record.request_item_id;
                           l_pegging_rec.inventory_item_name := C_ITEM_INFO_REC.item_name;
                        END IF;
                        l_pegging_rec.aggregate_time_fence_date := p_atp_record.atf_date;
                        -- time_phased_atp changes end

                        l_pegging_rec.resource_id := NULL;
                        l_pegging_rec.resource_code := NULL;
                        l_pegging_rec.department_id := NULL;
                        l_pegging_rec.department_code := NULL;
                        l_pegging_rec.scenario_id:= p_scenario_id;
                        l_pegging_rec.supply_demand_source_type:=
                            l_sources.source_type(j);


                        l_pegging_rec.supply_demand_type:= 2;
                        l_pegging_rec.supply_demand_date:= l_requested_ship_date;
                        l_pegging_rec.source_type := l_sources.source_type(j);

                        -- for demo:1153192
                        l_pegging_rec.constraint_flag := 'N';
			l_pegging_rec.component_identifier :=

                         NVL(p_atp_record.component_identifier, MSC_ATP_PVT.G_COMP_LINE_ID);
                        l_pegging_rec.summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;

                        --- bug 2152184: For PF based ATP inventory_item_id field contains id for PF item
                        --- cto looks at pegging tree to place their demands. Since CTO expects to find
                        --  id for the requested item, we add the following column. CTO will now read from this column
                        l_pegging_rec.request_item_id := p_atp_record.request_item_id;

                        IF l_start_date < l_ptf_date then
                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Add PTF date to pegging');
                            END IF;
                            l_pegging_rec.ptf_date := l_ptf_date;
                        END IF;

                        --diag_atp:
                        IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 and p_search = BACKWARD_SCHEDULING
                           AND l_constraint_flag = 1 THEN
                           l_pegging_rec.supply_demand_quantity := 0;
                        ELSE
                           l_pegging_rec.supply_demand_quantity :=l_atp_rec.quantity_ordered;
                        END IF;
                        l_pegging_rec.ptf_date := l_ptf_date;
                        IF l_sources.source_type(j) = TRANSFER THEN
                            l_pegging_rec.intransit_lead_time := l_sources.Lead_Time(j);
                            l_pegging_rec.postprocessing_lead_time := l_post_pro_lt;
                            l_pegging_rec.pegging_type := MSC_ATP_PVT.TRANSFER_SUPPLY;
                            l_pegging_rec.preprocessing_lead_time := l_pre_pro_lt;
                            -- Bug 3826234
                            l_pegging_rec.shipping_cal_code      :=  l_atp_rec.shipping_cal_code;
                            l_pegging_rec.receiving_cal_code     :=  l_atp_rec.receiving_cal_code;
                            l_pegging_rec.intransit_cal_code     :=  l_atp_rec.intransit_cal_code;
                            l_pegging_rec.manufacturing_cal_code :=  NULL;

                        ELSE
                            l_pegging_rec.intransit_lead_time := l_atp_rec.delivery_lead_time; --supplier intransit LT
                            l_pegging_rec.postprocessing_lead_time := l_post_pro_lt;
                            l_pegging_rec.preprocessing_lead_time := l_pre_pro_lt;
                            l_pegging_rec.processing_lead_time := l_process_lt;
                            l_pegging_rec.pegging_type := MSC_ATP_PVT.BUY_SUPPLY;
                             -- Bug 3826234
                            l_pegging_rec.shipping_cal_code      :=  l_atp_rec.shipping_cal_code;
                            l_pegging_rec.receiving_cal_code     :=  l_atp_rec.receiving_cal_code;
                            l_pegging_rec.intransit_cal_code     :=  l_atp_rec.intransit_cal_code;
                            l_pegging_rec.manufacturing_cal_code :=  l_atp_rec.manufacturing_cal_code;
                        END IF;

                        /* ship_rec_cal
                           populate ship_method */
                        IF  l_atp_rec.ship_method <> '@@@' THEN
                           -- if no ship method is defined then ATP_sources retuns @@@ which
                           --we don't want to display
                           l_pegging_rec.ship_method := l_atp_rec.ship_method;
                        ELSE
                           l_pegging_rec.ship_method := null;
                        END IF;

                        l_pegging_rec.plan_name := p_atp_record.plan_name;
                        l_pegging_rec.required_quantity := l_net_demand;
                        l_pegging_rec.required_date := l_requested_ship_date;
                        --bug 3328421
                        l_pegging_rec.actual_supply_demand_date := l_requested_ship_date;

			-- dsting diag_atp
			IF l_sources.source_type(j) = MSC_ATP_PVT.BUY
			   AND l_pegging_rec.constraint_type IS NULL
			THEN
				l_last_good_pegging_id := l_pegging_id;
				IF PG_DEBUG in ('Y', 'C') THEN
				   msc_sch_wb.atp_debug('buy last good pegging: ' || l_pegging_id);
				END IF;
			END IF;

                        --s_cto_rearch
                            --parent is model entity
                        --bug 3373075: Mark plan order to be model entity only for
                        -- config, model or option class
                        /* IF (p_atp_record.parent_bom_item_type in (1, 4) and
                                                  p_atp_record.parent_repl_order_flag = 'Y')
                           --item itself is model entity
                           OR (C_ITEM_INFO_REC.bom_item_type in (1, 4) and
                                                  C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y') THEN
                        */
                        IF (C_ITEM_INFO_REC.bom_item_type in (1, 2, 4) and
                                                  C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y') THEN
                            l_pegging_rec.model_sd_flag := 1;
                        END IF;

                        l_pegging_rec.dest_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;

                        --bug 3356779: populate atp rule and ITF on PO
                        IF l_atp_flag = 'Y' THEN
                           l_pegging_rec.infinite_time_fence := l_get_mat_out_rec.infinite_time_fence_date;
                           l_pegging_rec.atp_rule_name := l_get_mat_out_rec.atp_rule_name;
                        ELSE
                           --bug 4394904
                           --l_pegging_rec.infinite_time_fence := l_atp_date_this_level;
                           l_pegging_rec.infinite_time_fence := l_infinite_time_fence;
                           l_pegging_rec.atp_rule_name := l_atp_rule_name;
                        END IF;
                        --e_Cto_rearch

			-- dsting diag_atp
			IF PG_DEBUG in ('Y', 'C') THEN
				msc_sch_wb.atp_debug('MSC_ATP_PVT.G_HAVE_MAKE_BUY_PARENT ' || MSC_ATP_PVT.G_HAVE_MAKE_BUY_PARENT);
			END IF;
                        -- dsting 2819716. we always add planned orders now
                        -- so we should always add pegging.
/*
			IF l_constraint_flag <> 1
			   OR NVL(MSC_ATP_PVT.G_SUBSTITUTION_FLAG, 'N') <> 'Y'
			   OR MSC_ATP_PVT.G_HAVE_MAKE_BUY_PARENT = 1
			THEN
*/                              l_pegging_rec.demand_class :=  p_atp_record.demand_class;

                                --4570421
                                l_pegging_rec.scaling_type                      := p_atp_record.scaling_type;
                                l_pegging_rec.scale_multiple                    := p_atp_record.scale_multiple;
                                l_pegging_rec.scale_rounding_variance           := p_atp_record.scale_rounding_variance;
                                l_pegging_rec.rounding_direction                := p_atp_record.rounding_direction;
                                l_pegging_rec.component_yield_factor            := p_atp_record.component_yield_factor; --4570421
                                l_pegging_rec.usage                             := p_atp_record.usage_qty; --4775920
                                l_pegging_rec.organization_type                 := p_atp_record.organization_type; --4775920

	                        MSC_ATP_DB_UTILS.Add_Pegging(l_pegging_rec, l_pegging_id);
--			END IF;
                        --optional_fw Buy/Transfer PO should be set for top level
                        IF PG_DEBUG in ('Y', 'C') AND G_FW_CTP_PEGGING_ID.COUNT >0 THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_CTP_PEGGING_ID := '
                                                              || G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT));
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_OPTIONAL_FW := ' || G_OPTIONAL_FW);
                        ELSIF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_OPTIONAL_FW := ' || G_OPTIONAL_FW);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_PEGGING_ID := ' || G_FW_PEGGING_ID);
                        END IF;
                        IF MSC_ATP_PVT.G_OPTIONAL_FW is not null
                                               AND (G_FW_CTP_PEGGING_ID.COUNT = 0 --Means top level, for next source value = null
                                                    OR G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT) is null) then
                         IF G_FW_CTP_PEGGING_ID.COUNT = 0 THEN
                          G_FW_CTP_PEGGING_ID.EXTEND;
                         END IF;
                         G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT) := l_pegging_id;
                         IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_CTP_PEGGING_ID := '
                                                              || G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT));
                         END IF;
                        END IF;
                        IF PG_DEBUG in ('Y', 'C') AND G_FW_CTP_PEGGING_ID.COUNT >0 THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_CTP_PEGGING_ID := '
                                                              || G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT));
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_OPTIONAL_FW := ' || G_OPTIONAL_FW);
                        ELSIF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_OPTIONAL_FW := ' || G_OPTIONAL_FW);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_PEGGING_ID := ' || G_FW_PEGGING_ID);
                        END IF;
                        --- now chnage back the summary flag for new plan
                        MSC_ATP_PVT.G_SUMMARY_FLAG := l_new_summary_flag;
                        -- 2178544:
                        MSC_ATP_PVT.G_PTF_DATE := GREATEST(l_ptf_date, MSC_ATP_PVT.G_PTF_DATE);
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PTF_DATE := ' || MSC_ATP_PVT.G_PTF_DATE);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_date := ' || l_ptf_date);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_start_date := ' || l_start_date);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'inside buy/transfer');
                        END IF;

                        ---subst: Since we go down so we do not remain in top org. So we set the flags again
                        l_atp_rec.original_item_flag := p_atp_record.original_item_flag;
                        l_atp_rec.top_tier_org_flag := 2;

                        IF p_search = BACKWARD_SCHEDULING and
                           --diag_atp
                           /* Enforce Pur LT - For BUY cases PTF date check needs to be done only if capacity is defined
                           (l_start_date < l_ptf_date or
                                      (l_sources.source_type(j) = TRANSFER AND
                                            l_atp_rec.requested_ship_date < sysdate) OR
                                      (l_sources.source_type(j) = BUY AND
                                            l_supplier_start_date < sysdate))  THEN
                           */
                           ((l_sources.source_type(j) = TRANSFER AND
                                -- (l_atp_rec.requested_ship_date < sysdate OR l_start_date < l_ptf_date)) OR
                                -- Bug 3412143 - use l_trunc_sysdate instead of accessing sysdate directly.
                                (l_atp_rec.requested_ship_date < l_trunc_sysdate OR l_start_date < l_ptf_date)) OR
                            (l_sources.source_type(j) = BUY AND
                                (l_supplier_start_date < l_trunc_sysdate OR
                                        (l_atp_rec.last_cap_date IS NOT NULL AND l_start_date < l_ptf_date))))  THEN

                           l_atp_rec.requested_date_quantity := 0;
                           -- dsting 2754446
                           l_prim_uom_req_date_qty := 0;

                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('ATP_Check: ' || 'PTF Date check failed in case of transfer');
                           END IF;
                        ELSE
			   l_atp_rec.children_type := NO_MAKE_BUY_CHILDREN;
                           IF PG_DEBUG in ('Y', 'C') THEN
                              msc_sch_wb.atp_debug('NO_MAKE_BUY_CHILDREN: pre atp_check');
                           END IF;

                           MSC_ATP_PVT.ATP_Check(l_atp_rec,
                                  l_plan_id,
                                  p_level + 2,
                                  p_scenario_id,
                                  p_search,
                                  p_refresh_number,
                                  l_pegging_id,
			          l_assign_set_id,
                                  l_tb_atp_period,
                                  l_tb_atp_supply_demand,
                                  l_return_status);
                                  -- krajan: 2400614


                           IF l_return_status = MSC_ATP_PVT.CTO_OSS_ERROR THEN

                               RAISE MSC_ATP_PVT.INVALID_OSS_SOURCE;

                           ELSIF l_return_status = MSC_ATP_PVT.G_ATO_SRC_MISMATCH THEN
                                 IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('Error in ATP_CHECK');
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Error in lower level component check');
                                 END IF;
                                 RAISE MSC_ATP_PVT.G_ATO_SOURCING_MISMATCH;
                              -- dsting 2764213
                           ELSIF l_return_status = MSC_ATP_PVT.G_NO_PLAN_FOUND THEN
                                    IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('Error in ATP_CHECK');
                                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Error in lower level component check');
                                    END IF;
                                    RAISE MSC_ATP_PVT.EXC_NO_PLAN_FOUND;
                              -- krajan 2752705
                           ELSIF l_return_status = MSC_ATP_PVT.G_ATO_UNCOLL_ITEM THEN
                                    IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('Error in ATP_CHECK');
                                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Error in lower level component check');
                                    END IF;
                                    RAISE MSC_ATP_PVT.G_EXC_UNCOLLECTED_ITEM;
                           END IF;

                           -- Bug 3633591 - Reset G_ITEM_INFO_REC as it may have changed.
                           G_ITEM_INFO_REC := C_ITEM_INFO_REC;

                           -- dsting 2754446
                           l_prim_uom_avail_qty := nvl(l_atp_rec.available_quantity, 0);
                           l_prim_uom_req_date_qty := nvl(l_atp_rec.requested_date_quantity, 0);
                           IF nvl(l_conversion_rate, 0) <> 0 THEN
                              l_prim_uom_avail_qty := l_prim_uom_avail_qty / l_conversion_rate;
                              l_prim_uom_req_date_qty := l_prim_uom_req_date_qty / l_conversion_rate;
                           END IF;

                           -- round to avoid any floating point errors.
                           IF NVL(C_ITEM_INFO_REC.rounding_control_type, 2) = 1 THEN
--                              l_atp_rec.available_quantity := FLOOR(l_atp_rec.available_quantity);
                              l_prim_uom_avail_qty := FLOOR(l_prim_uom_avail_qty);   --5598066
                              l_prim_uom_req_date_qty := FLOOR(l_prim_uom_req_date_qty); --5598066
			   ELSE								--5598066
                              l_prim_uom_avail_qty := trunc(l_prim_uom_avail_qty, 6);   --5598066
                              l_prim_uom_req_date_qty := trunc(l_prim_uom_req_date_qty, 6); --5598066
                           END IF;

  			   IF PG_DEBUG IN ('Y','C') THEN
                                msc_sch_wb.atp_debug('prim_uom_avail_qty: ' || l_prim_uom_avail_qty);
                                msc_sch_wb.atp_debug('prim_uom_req_date_qty: ' || l_prim_uom_req_date_qty);
                                msc_sch_wb.atp_debug('l_conversion_rate: ' || l_conversion_rate);
				msc_sch_wb.atp_debug('resetting make_buy_parent : ' || G_HAVE_MAKE_BUY_PARENT || ' -> ' || l_have_make_buy_parent);
                                msc_sch_wb.atp_debug('req date qty := ' || l_atp_rec.requested_date_quantity);
			   END IF;

			   G_HAVE_MAKE_BUY_PARENT := l_have_make_buy_parent;
			   IF (l_atp_rec.children_type = MAKE_BUY_CHILDREN ) THEN
				p_atp_record.children_type := l_atp_rec.children_type;
			   END IF;
                        END IF;
                        -- check the return status
                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                            RAISE FND_API.G_EXC_ERROR;
                        END IF;

                        IF p_search = BACKWARD_SCHEDULING THEN
                          -- rajjain 01/29/03 Bug 2774827
                          -- 2754446
                          l_net_demand := l_net_demand -
                              greatest(nvl(l_prim_uom_req_date_qty, 0), 0);
                            -- greatest(nvl(l_atp_rec.requested_date_quantity,0), 0);
                        END IF;
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'Are we here, p_search ='||p_search);
                           msc_sch_wb.atp_debug('ATP_Check: l_net_demand := ' || l_net_demand);
                        END IF;
                        IF (p_search = FORWARD_SCHEDULING) THEN

                            -- bug 1303196, ship date need to consider
                            -- workday if it is from supplier

                            IF l_sources.source_type(j) = TRANSFER THEN

                                -- 2463556 : krajan : Added comment
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'Forward Scheduling ');
                                END IF;

          			/* ship_rec_cal changes begin */
		                -- BEGIN -- removed exception handling from here so that it can be handled in the end
		                        /* Bug 3241766 : Broke the single call to get intermediate dates
                                        l_ship_date := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
                                			l_atp_rec.ship_date, l_atp_rec.shipping_cal_code, +1,
                                			l_atp_rec.intransit_cal_code, nvl(l_atp_rec.delivery_lead_time, 0), +1,
                                			l_atp_rec.receiving_cal_code, +1, p_atp_record.instance_id);
                                	*/
                                	l_ship_date := MSC_CALENDAR.NEXT_WORK_DAY(
                                	                l_atp_rec.shipping_cal_code,
                                	                p_atp_record.instance_id,
                                	                l_atp_rec.ship_date);
                                	l_new_ship_date := l_ship_date;

                                        IF PG_DEBUG in ('Y', 'C') THEN
                                           msc_sch_wb.atp_debug('ATP_Check: ' || 'Ship Date: ' || l_atp_rec.ship_date);
                                           msc_sch_wb.atp_debug('ATP_Check: ' || '___________________Start Offset___________________');
                                           msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on OSC: '||l_ship_date);
                                        END IF;

                                        l_ship_date := MSC_CALENDAR.DATE_OFFSET(
                        				l_atp_rec.intransit_cal_code,
                        				p_atp_record.instance_id,
                        				l_ship_date,
                        				nvl(l_atp_rec.delivery_lead_time, 0),
                        				+1);

                                        IF PG_DEBUG in ('Y', 'C') THEN
                                           msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding intransit LT using VIC: '||l_ship_date);
                                        END IF;

                                        l_ship_date := MSC_CALENDAR.NEXT_WORK_DAY(
                        				l_atp_rec.receiving_cal_code,
                        				p_atp_record.instance_id,
                        				l_ship_date);
                                        l_new_dock_date := l_ship_date;

                                        IF PG_DEBUG in ('Y', 'C') THEN
                                           msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on ORC: '||l_ship_date);
                                        END IF;

                                        -- Bug 3241766 : Back calculate start date and order date
                                        l_sugg_start_date := l_new_ship_date;

                                        l_order_date := MSC_CALENDAR.DATE_OFFSET (
                                                        p_atp_record.manufacturing_cal_code,
                                                        p_atp_record.instance_id,
                                                        l_sugg_start_date,
                                                        -- Bug 3633591 - Dont use global variable here : -1 * MSC_ATP_PVT.G_ITEM_INFO_REC.pre_pro_lt, -1);
                                                        -1 * l_pre_pro_lt, -1);
                                        --bug3821358  Moving Order date to non past due non working date on a day closer to the first working day
                                        IF l_order_date < l_trunc_sysdate THEN
                                           IF PG_DEBUG in ('Y', 'C') THEN
                                              msc_sch_wb.atp_debug('ATP_Check: ' || 'Back Calculated Order date is less then sysdate: '||l_order_date);
                                              --bug 4188385 removed this debug was giving error during concatenation
                                              --msc_sch_wb.atp_debug('ATP_Check: ' || 'Moving Order date to non past due non working date: '||l_sys_next_date - (1)); --Putting 1 in brackets to avoid error.
                                           END IF;
                                           l_order_date  := l_sys_next_date - 1;
                                           --bug 4188385 printed the order date
                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Back Calculated Order date is less then sysdate: '||l_order_date);
                                           END IF;
                                        END IF;
                                        --bug3821358
                                        IF PG_DEBUG in ('Y', 'C') THEN
                                           msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting pre PLT using OMC : '||l_order_date);
                                        END IF;

                                        l_ship_date := MSC_CALENDAR.DATE_OFFSET (
                                                        p_atp_record.manufacturing_cal_code,
                                                        p_atp_record.instance_id,
                                                        l_ship_date,
                                                        l_post_pro_lt, 1);

                                        IF PG_DEBUG in ('Y', 'C') THEN
                                           msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding PPLT using OMC: '||l_ship_date);
                                           msc_sch_wb.atp_debug('ATP_Check: ' || '___________________End Offset___________________');
                                        END IF;
          			/*
          			EXCEPTION
                                        WHEN others THEN
                                                IF PG_DEBUG in ('Y', 'C') THEN
                                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'Sysdate not found in Calendar');
                                                END IF;
                                        null;
          			END;
          			*/

                            ELSE
                                -- buy
                                /* ship_rec_cal changes begin */

                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'Ship Date: ' || l_atp_rec.ship_date);
                                   msc_sch_wb.atp_debug('ATP_Check: ' || '___________________Start Offset___________________');
                                END IF;
                                -- intransit lead time offset in case of capacity to ship
                                --Bug 3821358
                                IF (l_atp_rec.ship_date = l_store_g_ptf_date )  THEN
                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_rec.ship_date' || l_atp_rec.ship_date);
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_store_g_ptf_date' || l_store_g_ptf_date);
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_store_dock_date' || l_store_dock_date);
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_store_ship_date' || l_store_ship_date);
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_store_start_date' || l_store_start_date);
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_store_order_date' || l_store_order_date);
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_store_due_date' || l_store_due_date);
                                   END IF;
                                   -- assign the values in l_store* variables..
                                   l_ship_date := l_store_due_date;
                                   l_new_dock_date := l_store_dock_date;
                                   l_new_ship_date := l_store_ship_date;
                                   l_sugg_start_date := l_store_start_date;
                                   l_order_date := l_store_order_date;

                                ELSE

                                   IF l_sources.sup_cap_type(j) = 1 THEN

                                           l_ship_date:= MSC_CALENDAR.NEXT_WORK_DAY(
                                                                l_atp_rec.shipping_cal_code,
                                                                l_atp_rec.instance_id,
                                                                l_atp_rec.ship_date);

                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || '--- Capacity to Ship ---');
                                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on SSC: '||l_ship_date);
                                           END IF;

                                           l_new_ship_date := l_ship_date;      -- Bug 3241766

                                           l_ship_date := MSC_CALENDAR.DATE_OFFSET(
                                                                l_atp_rec.intransit_cal_code,
                                                                l_atp_rec.instance_id,
                                                                l_ship_date,
                                                                l_atp_rec.delivery_lead_time, 1);

                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding intransit LT using VIC: '||l_ship_date);
                                           END IF;
                                   ELSE

                                           l_ship_date := l_atp_rec.ship_date;

                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || '--- Capacity to Dock ---');
                                           END IF;

                                           -- Bug 3241766 : back calculate the ship date
                                           l_new_ship_date := MSC_CALENDAR.DATE_OFFSET(
                                                                l_atp_rec.intransit_cal_code,
                                                                l_atp_rec.instance_id,
                                                                l_ship_date,
                                                                -1 * l_atp_rec.delivery_lead_time, -1);

                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding intransit LT using VIC: '||l_new_ship_date);
                                           END IF;

                                           l_new_ship_date := MSC_CALENDAR.PREV_WORK_DAY(
                                                                l_atp_rec.shipping_cal_code,
                                                                l_atp_rec.instance_id,
                                                                l_new_ship_date);
                                                                --Bug 3821358
                                                                --l_atp_rec.ship_date);

                                           IF PG_DEBUG in ('Y', 'C') THEN
                                               msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on SSC: '||l_new_ship_date);
                                           END IF;
                                   END IF;

                                   l_ship_date  := MSC_CALENDAR.NEXT_WORK_DAY(
                                                        l_atp_rec.receiving_cal_code,
                                                        l_atp_rec.instance_id,
                                                        l_ship_date );

                                   l_new_dock_date := l_ship_date;      -- Bug 3241766

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after validating on ORC: '||l_ship_date);
                                   END IF;

                                   -- Bug 3241766 : Backcalculate start date and order date
                                   -- Bug 3405708 - Enforce Pur LT: Truncate past due dates
                                   IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_new_ship_date <= l_trunc_sysdate THEN
                                        l_sugg_start_date := l_trunc_sysdate;
                                   ELSE
                                        IF (l_sources.sup_cap_type(j) = 1) THEN --Bug 3821358
                                           l_sugg_start_date := MSC_CALENDAR.DATE_OFFSET(
                                                                l_atp_rec.manufacturing_cal_code,
                                                                l_atp_rec.instance_id,
                                                                l_new_ship_date,
                                                                (-1 * l_process_lt), -1);
                                        ELSE
                                           l_sugg_start_date := MSC_CALENDAR.DATE_OFFSET(
                                                                l_atp_rec.manufacturing_cal_code,
                                                                l_atp_rec.instance_id,
                                                                l_new_dock_date,
                                                                (-1 * l_process_lt), -1);
                                        END IF; --Bug 3821358
                                        IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_sugg_start_date <= l_trunc_sysdate THEN
                                            l_sugg_start_date := l_trunc_sysdate;
                                        END IF;
                                   END IF;

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting PLT using SMC : '||l_sugg_start_date);
                                   END IF;

                                   IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_sugg_start_date <= l_trunc_sysdate THEN
                                        l_order_date := l_trunc_sysdate;
                                   ELSE
                                        l_order_date := MSC_CALENDAR.DATE_OFFSET(
                                                        p_atp_record.manufacturing_cal_code, -- use OMC
                                                        l_atp_rec.instance_id,
                                                        l_sugg_start_date ,
                                                        (-1 * l_pre_pro_lt), -1);
                                        IF G_PLAN_INFO_REC.enforce_pur_lead_time = 2 AND l_order_date <= l_trunc_sysdate THEN
                                            l_order_date := l_trunc_sysdate;
                                        END IF;
                                   END IF;
                                   -- Bug 3405708 - changes end

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after subtracting pre PLT using OMC : '||l_order_date);
                                   END IF;

                                   l_ship_date := MSC_CALENDAR.DATE_OFFSET(
                                                         p_atp_record.manufacturing_cal_code,
                                                         l_atp_rec.instance_id,
                                                         l_ship_date,
                                                         l_post_pro_lt, 1);

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Date after adding PPLT using OMC: '||l_ship_date);
                                       msc_sch_wb.atp_debug('ATP_Check: ' || '___________________End Offset___________________');
                                   END IF;
                                   -- ship_rec_cal changes end
                                END IF; --Bug 3821358
                            END IF;
                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug ('ATP_Check: ' || 'ship date is '||l_ship_date);
                               msc_sch_wb.atp_debug ('ATP_Check: ' || 'original is '|| p_atp_record.ship_date );
                            END IF;

                             ---bug 2798667: The p_atp_record.ship_date for option item contains ship date for
                            --- model from earlier source + atp lead time. We should compare with ship date +
                            --- atp lead time from this source and not just ship date
                            /* s_cto_rearch: Do not honot ATP lead time
                            IF NVL(p_atp_record.atp_lead_time, 0) > 0 THEN
                                  l_atp_lt_offset_ship_date :=
                                     MSC_CALENDAR.DATE_OFFSET(
                                     p_atp_record.organization_id,
                                     p_atp_record.instance_id,
                                     1,
                                     l_ship_date,
                                     NVL(p_atp_record.atp_lead_time, 0));
                            ELSE
                                 l_atp_lt_offset_ship_date := l_ship_date;
                            END IF;
                            */
                            l_atp_lt_offset_ship_date := l_ship_date;

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug ('l_atp_lt_offset_ship_date := ' || l_atp_lt_offset_ship_date);
                            END IF;


			    -- Bug 1566260, If p_atp_record.ship_date and l_ship_date is null, we assume
			    -- that going down is better. This is being done for preserving exploded
                            -- pegging tree for use by CTO for storing component demands.
                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.ship_date := ' || p_atp_record.ship_date);
                            END IF;
                            --bug 2798667: Compare with l_atp_lt_offset_ship_date
                            /*IF ((p_atp_record.ship_date IS NULL and l_ship_date IS NULL) OR
                               (p_atp_record.ship_date IS NOT NULL and (p_atp_record.ship_date <=
                               NVL(l_ship_date, p_atp_record.ship_date )))) THEN
                            */
                            IF ((p_atp_record.ship_date IS NULL and l_atp_lt_offset_ship_date IS NULL) OR
                               (p_atp_record.ship_date IS NOT NULL and (p_atp_record.ship_date <=
                               NVL(l_atp_lt_offset_ship_date, p_atp_record.ship_date )))) THEN


                                -- single level result is better than
                                -- going down to next level.

                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'single level results is better than multi-level');
                                END IF;

				-- dsting ATO 2465370
--				IF NVL(p_atp_record.override_flag, 'N') = 'N'
			        IF NVL(G_LINE_OVERRIDE_FLAG, 'N') = 'N'
				   --OR (NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) <> p_atp_record.organization_id
				   --AND p_parent_pegging_id is not null)
				THEN
                                        --bug 3328421: Update actual_supply_demand_date column
					--update mrp_atp_details_temp set required_date =
					update mrp_atp_details_temp set actual_supply_demand_date =
						TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY
					 where session_id = MSC_ATP_PVT.G_SESSION_ID
					   and pegging_id = l_parent_pegging_id
					   and record_type = 3;

					IF PG_DEBUG in ('Y', 'C') THEN
						msc_sch_wb.atp_debug('ATO update details_temp date single lev: ' || p_atp_record.ship_date);
						msc_sch_wb.atp_debug('pegging id: ' || l_parent_pegging_id);
					END IF;
				END IF;

                                MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
                                                 p_plan_id,
                                                 p_atp_record.ship_date,
                                                 0,
                                                 l_atp_rec.supplier_id,
                                                 l_atp_rec.supplier_site_id,
                                                 null,
                                                 null,  -- Bug 3241766
                                                 null,  -- Bug 3241766
                                                 null,  -- Bug 3241766
                                                 C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                                 PF_ITEM_INFO_REC.dest_inv_item_id); -- Bug 3293163

				IF PG_DEBUG in ('Y', 'C') THEN
				   msc_sch_wb.atp_debug('ATP_Check: ' || 'after copying the data');
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'x_atp_supply_demand.level.count = '||
						x_atp_supply_demand.level.count);
                                END IF;

                            ELSE
 				-- going down is better than the results
                                -- in this level
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'go down is better');
                                END IF;

				-- dsting ATO 2465370
--				IF NVL(p_atp_record.override_flag, 'N') = 'N'
			        IF NVL(G_LINE_OVERRIDE_FLAG, 'N') = 'N'
				   --OR (NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) <> p_atp_record.organization_id
				   --AND p_parent_pegging_id is not null)
				THEN
                                        --bug 3328421: update actual suply demand date
					--update mrp_atp_details_temp set required_date =
					update mrp_atp_details_temp set actual_supply_demand_date =
						TRUNC(l_ship_date) + MSC_ATP_PVT.G_END_OF_DAY
					where session_id = MSC_ATP_PVT.G_SESSION_ID
					   and pegging_id = l_parent_pegging_id
					   and record_type = 3;

					IF PG_DEBUG in ('Y', 'C') THEN
						msc_sch_wb.atp_debug('ATO update details_temp date go down: ' || l_ship_date);
						msc_sch_wb.atp_debug('pegging id: ' || l_parent_pegging_id);
					END IF;
				END IF;

                                -- remove what's bad
                                --subst: we remember this pegging id so that when we go back in
                                -- ATP_CHECK_SUBST we can remember to remove this pegging if need to be
                                MSC_ATP_PVT.G_FUTURE_PEGGING_ID := l_pegging_id;
                                -- remove what's bad

                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_pegging_tab : ' || l_atp_pegging_tab.COUNT);
                                END IF;

				IF l_atp_pegging_tab.COUNT > 0 THEN

				   -- Planned Pegging based AATP, l_atp_pegging_tab populated in
				   -- MSC_AATP_REQ.Get_Forward_Material_Atp

				   MSC_ATP_DB_UTILS.Remove_Invalid_Future_SD(l_atp_pegging_tab);
				   l_atp_pegging_tab := MRP_ATP_PUB.Number_Arr(); --bug3581151

				ELSE 		-- IF l_atp_pegging_tab.COUNT > 0 THEN
                                   MSC_ATP_DB_UTILS.Update_Planned_Order(l_future_pegging_id,
                                                 p_plan_id,
                                                 p_atp_record.ship_date,
                                                 0,
                                                 l_atp_rec.supplier_id,
                                                 l_atp_rec.supplier_site_id,
                                                 null,
                                                 null,  -- Bug 3241766
                                                 null,  -- Bug 3241766
                                                 null,  -- Bug 3241766
                                                 C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                                 PF_ITEM_INFO_REC.dest_inv_item_id); -- Bug 3293163
				END IF;		-- IF l_atp_pegging_tab.COUNT > 0 THEN

                                --bug 2798667: we have already calculated the final date
                                /*p_atp_record.ship_date :=
                                     MSC_CALENDAR.DATE_OFFSET(
                                     p_atp_record.organization_id,
                                     p_atp_record.instance_id,
                                     1,
                                     l_ship_date,
                                     NVL(p_atp_record.atp_lead_time, 0));
                                */
                                p_atp_record.ship_date := l_atp_lt_offset_ship_date;


                                -- we will say the available quantity is
                                -- exact the quantity we want to order.
                                -- although this is not correct (
                                -- it should be the quantity we get from next
                                -- level plus what we can have on the parent
                                -- level.  But now we don't want to search

                                p_atp_record.available_quantity := p_atp_record.quantity_ordered;

                                IF p_atp_record.ship_date <= p_atp_record.atf_date THEN
                                    p_atp_record.atf_date_quantity := p_atp_record.quantity_ordered;
                                ELSE
                                    p_atp_record.atf_date_quantity := 0;
                                END IF;

				IF PG_DEBUG in ('Y', 'C') THEN
				   msc_sch_wb.atp_debug('ATP_Check: ' || 'question: l_atp_rec.quantity_ordered = '||
					l_atp_rec.quantity_ordered);
				   msc_sch_wb.atp_debug('ATP_Check: ' || 'question: l_atp_rec.available_quantity = '||
					l_atp_rec.available_quantity);
				   msc_sch_wb.atp_debug('ATP_Check: ' || 'question: p_atp_record.available_quantity = '||
					p_atp_record.available_quantity);
			           msc_sch_wb.atp_debug('ATP_Check: ' || 'question: p_atp_record.used_available_quantity = '||
					p_atp_record.used_available_quantity); --bug3409973

                                   -- 2754446
                                   msc_sch_wb.atp_debug('l_prim_uom_avail_qty: ' ||l_prim_uom_avail_qty);
                                   msc_sch_wb.atp_debug('l_PO_qty: ' ||l_PO_qty);
                                   msc_sch_wb.atp_debug('l_conversion_rate:' || l_conversion_rate);
				END IF;

                                MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
                                            p_plan_id,
                                            --bug 2798667: The ATO components are sourced on l_ship_date
                                            --p_atp_record.ship_date,
                                            l_ship_date,
                                            -- dsting 2754446
--                                            least(l_atp_rec.available_quantity, l_atp_rec.quantity_ordered),
                                            least(l_prim_uom_avail_qty, l_PO_qty),
                                            l_atp_rec.supplier_id,
                                            l_atp_rec.supplier_site_id,
                                            l_new_dock_date,    -- Bug 3241766
                                            l_new_ship_date,    -- Bug 3241766
                                            l_sugg_start_date,  -- Bug 3241766
                                            l_order_date,       -- Bug 3241766
                                            C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                            PF_ITEM_INFO_REC.dest_inv_item_id,  -- Bug 3293163
                                            MSC_ATP_PVT.UNDO, -- dsting 2754446
                                            l_conversion_rate -- dsting 2754446
                                );  -- dock date

                                -- move the supply/demand, period atp
                                -- of the transfer/buy to the output record of
                                -- tables.

                                l_future_pegging_id := l_pegging_id;
                                l_future_atp_period := l_tb_atp_period;
                                l_future_atp_supply_demand := l_tb_atp_supply_demand;

                            END IF;  -- which level is better

                        ELSE

                             -- we are in backward part
                             IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Are we here? we should adjust the planned order');
                             END IF;

                             --5183022 further iterations error code should be set 53
	                     IF MSC_ATP_PVT.G_OPTIONAL_FW is not null THEN
                                p_atp_record.error_code := ATP_REQ_DATE_FAIL;
                             END IF;
                             -- cchen: bug 1121227
                             -- the quantity we want to adjust should not
                             -- less than 0.  add greatest to
                             -- l_atp_rec.requested_date_quantity

			     IF( l_atp_rec.children_type <> MAKE_BUY_CHILDREN and
				 l_have_make_buy_parent = 0 AND
				 MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 and
				 MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y' )
			     THEN
				l_update_PO_mode := MSC_ATP_PVT.INVALID;
			     ELSE
				l_update_PO_mode := MSC_ATP_PVT.UNDO;
			     END IF;
			     IF PG_DEBUG in ('Y', 'C') THEN
			        msc_sch_wb.atp_debug('ATP_Check: ' || 'set l_update_PO_mode ' || l_update_PO_mode);
			        msc_sch_wb.atp_debug('ATP_Check: ' || 'make_buy_children ' || l_atp_rec.children_type);
			        msc_sch_wb.atp_debug('ATP_Check: ' || 'make_buy_parent ' || l_have_make_buy_parent);
				msc_sch_wb.atp_debug('last good pegging ' || l_last_good_pegging_id);
				msc_sch_wb.atp_debug('constraint_flag: ' || l_constraint_flag );
			     END IF;

			     -- dsting diag_atp if we still have sources or diagnostic atp is off
			     -- then we update the planned order. If l_update_PO_mode is INVALID
			     -- then we remove the subtree. Otherwise, diagnostic atp is on and
			     -- this is the last source, so we leave the planned order as is to
			     -- balance the parent demand and only update the pegging
                             -- dsting 2819716. we always add planned orders now
                             -- so we should always update them too.
--			     IF l_constraint_flag <> 1 THEN
			        IF l_update_PO_mode = MSC_ATP_PVT.INVALID OR
				   l_sources.source_type.next(j) is not NULL OR
				   MSC_ATP_PVT.G_DIAGNOSTIC_ATP <> 1
			        THEN

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('l_PO_qty: ' || l_PO_qty);
                                      msc_sch_wb.atp_debug('l_prim_uom_req_date_qty: ' || l_prim_uom_req_date_qty);
                                   END IF;

                                   MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
	                             p_plan_id,
	                             null,
                                     -- dsting 2754446
--	                             least(greatest(l_atp_rec.requested_date_quantity, 0),
--	                             l_atp_rec.quantity_ordered),
                                     least(greatest(l_prim_uom_req_date_qty, 0),
                                           l_PO_qty),
	                             l_atp_rec.supplier_id,
	                             l_atp_rec.supplier_site_id,
	                             null, -- l_atp_rec.requested_ship_date, no need to update -- Bug 3241766
	                             null, -- Bug 3241766
	                             null, -- Bug 3241766
	                             null, -- Bug 3241766
                                     C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                     PF_ITEM_INFO_REC.dest_inv_item_id,  -- Bug 3293163
				     l_update_PO_mode,
                                     l_conversion_rate
                                  );  -- dock date

				IF l_update_PO_mode = MSC_ATP_PVT.UNDO THEN
				     l_last_good_pegging_id := l_pegging_id;
				END IF;

				IF l_requested_ship_date <= p_atp_record.atf_date THEN
				    p_atp_record.atf_date_quantity := p_atp_record.atf_date_quantity +
				                                            least(greatest(l_prim_uom_req_date_qty, 0),
				                                                  l_PO_qty);
                                END IF;
/*			     ELSE

				l_last_good_pegging_id := l_pegging_id;
				MSC_ATP_DB_UTILS.Update_Pegging(l_pegging_id, null,
					least(greatest(l_atp_rec.requested_date_quantity, 0)));
			     END IF;
*/
                           --5230396, updating planned order for diag ATP too in Buy case.
                           ELSIF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
                                 IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('l_PO_qty: ' || l_PO_qty);
                                      msc_sch_wb.atp_debug('l_prim_uom_req_date_qty: ' || l_prim_uom_req_date_qty);
                                   END IF;

                                   MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
	                             p_plan_id,
	                             null,
                                     -- dsting 2754446
--	                             least(greatest(l_atp_rec.requested_date_quantity, 0),
--	                             l_atp_rec.quantity_ordered),
                                     --least(greatest(l_prim_uom_req_date_qty, 0),
                                     --     l_PO_qty),
                                     --NVL(l_PO_qty,0),
                                     NULL,
	                             l_atp_rec.supplier_id,
	                             l_atp_rec.supplier_site_id,
	                             null, -- l_atp_rec.requested_ship_date, no need to update -- Bug 3241766
	                             null, -- Bug 3241766
	                             null, -- Bug 3241766
	                             null, -- Bug 3241766
                                     C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                     PF_ITEM_INFO_REC.dest_inv_item_id,  -- Bug 3293163
				     l_update_PO_mode,
                                     l_conversion_rate
                                  );  -- dock date
                        END IF;

/*
                             -- 1228607: since we add this planned order,
                             -- we need to work on the demand record for this too.
                             update msc_demands
                             set    USING_REQUIREMENT_QUANTITY =
                                   (USING_REQUIREMENT_QUANTITY -
                                   LEAST(l_net_demand, 0))
                             where  demand_id = l_demand_id
                             and    plan_id = p_plan_id;
*/
                             -- cchen :1064647
                             -- 2754446
                             IF least(l_prim_uom_req_date_qty, l_PO_qty) > 0 THEN
                             -- IF least(l_atp_rec.requested_date_quantity,
                             --   l_atp_rec.quantity_ordered) > 0 THEN
                                MSC_ATP_PROC.Details_Output(l_tb_atp_period,
                                l_tb_atp_supply_demand,
                                x_atp_period,
                                x_atp_supply_demand,
                                l_return_status);
                             END IF;

                        END IF; -- forward scheduling

                        IF l_net_demand <= 0 THEN
                           l_net_demand := 0;
                           EXIT;
                        END IF;

                        END IF; -- for the plan
                    ELSE  -- it is a make

                        --s_cto_rearch
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('It is a make case ');
                           msc_sch_wb.atp_debug('G_MODEL_BOM_IS_COLLECTED := ' || MSC_ATP_CTO.G_MODEL_BOM_IS_COLLECTED);
                           msc_sch_wb.atp_debug('Bom Item Flag := ' || PF_ITEM_INFO_REC.bom_item_type);
                        END IF;
                        l_get_comp_info_rec.line_id := p_atp_record.demand_source_line;
                        l_get_comp_info_rec.bom_item_type := PF_ITEM_INFO_REC.Bom_item_type;
                        l_get_comp_info_rec.atp_flag := l_atp_flag;
                        l_get_comp_info_rec.atp_comp_flag := l_atp_comp_flag;
                        l_get_comp_info_rec.fixed_lt  := PF_ITEM_INFO_REC.fixed_lt;
                        l_get_comp_info_rec.variable_lt := PF_ITEM_INFO_REC.variable_lt;
                        l_get_comp_info_rec.replenish_to_order_flag  := PF_ITEM_INFO_REC.replenish_to_ord_flag;
                        l_get_comp_info_rec.check_model_capacity_flag := l_check_model_capacity;
                        l_get_comp_info_rec.model_sr_inv_item_id := l_sr_inv_item_id;
                        --bug 3059305: Pass ship date from last source as the cutoff date
                        l_get_comp_info_rec.ship_date_this_level := p_atp_record.ship_date;

                        --4501944, call get_pf_plan_info in make cases too.
                        MSC_ATP_PVT.G_PLAN_INFO_REC.plan_id := NULL; --NULL the plan_id in global array so that get_plan_info gets called properly
                        MSC_ATP_PF.Get_PF_Plan_Info(
                                       p_atp_record.instance_id,
                                       p_atp_record.request_item_id,
                                       p_atp_record.inventory_item_id,
                                       p_atp_record.organization_id,
                                       p_atp_record.demand_class,
                                       p_atp_record.atf_date,
                                       p_atp_record.error_code,
                                       l_return_status,
                                       p_plan_id );

                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'ATP Downtime');
                           END IF;
                           x_return_status := FND_API.G_RET_STS_ERROR;
                           RAISE FND_API.G_EXC_ERROR;
                        END IF;
                        --4501944

                        IF PF_ITEM_INFO_REC.bom_item_type =1 and PF_ITEM_INFO_REC.replenish_to_ord_flag = 'Y' THEN

                           --pass line info for model as model might be getting sourced from another org
                           l_get_comp_info_rec.replenish_to_order_flag  := PF_ITEM_INFO_REC.replenish_to_ord_flag;
                           l_get_comp_info_rec.top_model_line_id := p_atp_record.top_model_line_id;
                           l_get_comp_info_rec.ato_model_line_id := p_atp_record.ato_model_line_id;
                           l_get_comp_info_rec.ato_parent_model_line_id := p_atp_record.ato_parent_model_line_id;
                           l_get_comp_info_rec.parent_line_id := p_atp_record.parent_line_id;
                           l_get_comp_info_rec.parent_so_quantity := p_atp_record.parent_so_quantity;

                           /* -- we also need to get model bom if it has not been collected
                           IF NVL(MSC_ATP_CTO.G_MODEL_BOM_IS_COLLECTED, 2) = 2 THEN

                                MSC_ATP_CTO.Populate_CTO_Bom(MSC_ATP_PVT.G_SESSION_ID, null);
                                MSC_ATP_CTO.G_MODEL_BOM_IS_COLLECTED := 1;

                           END IF;
                           */
                        ELSIF PF_ITEM_INFO_REC.bom_item_type = 4 and PF_ITEM_INFO_REC.replenish_to_ord_flag = 'Y' THEN
                           -- We are deleting stealing records using ato_model_lien_id
                           -- Therefore , we need to pass ato model line id so that
                           --stealing records could be adjusted correctly.
                           l_get_comp_info_rec.ato_model_line_id := p_atp_record.ato_model_line_id;

                        END IF;
                        --e_cto_rearch

                        l_sched_status := TRUE;

                        -- dsting 2754446 adjust l_net_demand according to rounding_control_type
                        -- so our planned orders turn out right.
                        --bug3397904 start
                        IF NVL(C_ITEM_INFO_REC.rounding_control_type, 2) = 1 THEN
                           --l_PO_qty := CEIL(l_net_demand);
                           --bug 3904063: Reset the quantity only in case of demand priorit allocated ATP
                           IF (p_search = FORWARD_SCHEDULING)
                               and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                               AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1
                               AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN  --bug3397904
                               l_PO_qty := CEIL(p_atp_record.quantity_ordered);
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('If l_PO_qty: ' || l_PO_qty);
                               END IF;
                           ELSE
                               l_PO_qty := CEIL(l_net_demand);
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('Else l_PO_qty: ' || l_PO_qty);
                               END IF;
                           END IF;
                        ELSE
                           --bug 3904063: Reset the quantity only in case of demand priorit allocated ATP
                           IF (p_search = FORWARD_SCHEDULING)
                               and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                               AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1
                               AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1  THEN  --bug3397904

                               l_PO_qty := trunc(p_atp_record.quantity_ordered, 6);   --5598066
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('If l_PO_qty: ' || l_PO_qty);
                               END IF;
                           ELSE
                               l_PO_qty := trunc(l_net_demand, 6);	--5598066
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('Else l_PO_qty: ' || l_PO_qty);
                               END IF;
                           END IF;
                        END IF;
                        --bug3397904 end
                        -- dsting 2764213
                        l_planned_sources := 1;

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'inside make');
                        END IF;
                        -- insert a plan order for the l_net_demand
                        --- bug 1941489
                        --- assign correct pegging-id to co-product pegging id
                        --- this pegging id will be used to link the coproduct supply to correct
                        ---parent
                        --5216821 commenting and setting it down
                        /*
                        l_coprod_pegging_id := l_parent_pegging_id;
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_coprod_pegging_id := ' || l_coprod_pegging_id);
                        END IF;
                        */
                        --- bug 2178544
                        ---- get mso_lead_time factor
                        l_mso_lead_time_factor := MSC_ATP_PVT.G_MSO_LEAD_TIME_FACTOR;
                        --- Get the lead time for the item
                        -- dsting 2754446
                        l_net_processing_lt := CEIL((l_fixed_lt +
                                                    (l_variable_lt * l_PO_qty))*(1 + l_mso_lead_time_factor)
                                                    + l_pre_pro_lt);
                        l_process_lt := CEIL((l_fixed_lt +
                                             (l_variable_lt * l_PO_qty))*(1 + l_mso_lead_time_factor));

--                        l_net_processing_lt := CEIL((l_fixed_lt +
--                                                      (l_variable_lt * l_net_demand))*(1 + l_mso_lead_time_factor)
--                                                      + l_pre_pro_lt);
--                        l_process_lt := CEIL((l_fixed_lt +
--                                                  (l_variable_lt * l_net_demand))*(1 + l_mso_lead_time_factor));
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_mso_lead_time_factor := ' || l_mso_lead_time_factor);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_net_processing_lt := ' || l_net_processing_lt);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_process_lt := ' || l_process_lt);
                        END IF;
                        MSC_ATP_PVT.G_PTF_DATE_THIS_LEVEL := l_ptf_date;
                        ---diag_ATP
                        IF p_search = BACKWARD_SCHEDULING THEN
                            l_constraint_flag := 2;
                            --diag_ATP
                            IF l_net_processing_lt > 0 THEN
                                 IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Calculate order date');
                                 END IF;
                                /* ship_rec_cal
                                l_order_date := MSC_CALENDAR.DATE_OFFSET
                                                                (p_atp_record.organization_id,
                                                                p_atp_record.instance_id,
                                                                1,
                                                                l_requested_ship_date,
                                                                (-1 * l_net_processing_lt));*/
                                -- since it is a make case only calendar being used is p_atp_record.manufacturing_cal_code
                                l_order_date := MSC_CALENDAR.DATE_OFFSET(
                                                                p_atp_record.manufacturing_cal_code,
                                                                p_atp_record.instance_id,
                                                                l_requested_ship_date,
                                                                (-1 * l_net_processing_lt), -1);

                            ELSE
                                 IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Net process lt is zero');
                                 END IF;
                                l_order_date := l_sysdate;
                            END IF;

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_order_date := ' || l_order_date);
                            END IF;
                            -- calculate start date only if PTF_flag is enabled for the plan
                            IF (l_process_lt > 0) THEN
                               IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'Calculate start date');
                               END IF;
                               /* ship_rec_cal
                               l_start_date := MSC_CALENDAR.DATE_OFFSET
                                                                (p_atp_record.organization_id,
                                                                p_atp_record.instance_id,
                                                                1,
                                                                l_requested_ship_date,
                                                                (-1 * l_process_lt));*/
                               l_start_date := MSC_CALENDAR.DATE_OFFSET(
                                                                p_atp_record.manufacturing_cal_code,
                                                                p_atp_record.instance_id,
                                                                l_requested_ship_date,
                                                                (-1 * l_process_lt), -1);
                            ELSE

                               IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'PTF flag is off for the plan or process LT is 0');
                               END IF;
                               l_start_date := l_ptf_date;
                            END IF;

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_start_date := ' || l_start_date);
                            END IF;
                            -- bug 2178544

                            IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
                                IF (l_order_date < l_sysdate OR l_start_date < l_ptf_date)  THEN
                                   -- we set the constraint flag so that we know that an constraint has occured
                                   l_constraint_flag := 1;

                                   ---calculate earliest due date possible based on PTF date
                                   IF l_net_processing_lt > 0 THEN
                                        /* ship_rec_cal
                                        l_lt_due_date :=
                                                    MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                                                      p_atp_record.instance_id,
                                                                                      1,
                                                                                      l_sysdate,
                                                                                      l_net_processing_lt);*/
                                        l_lt_due_date :=
                                                    MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                                                      p_atp_record.instance_id,
                                                                                      l_sysdate,
                                                                                      l_net_processing_lt, 1);
                                   ELSE
                                      l_lt_due_date := l_sysdate;
                                   END IF;
                                   ---calculate earliest due date possible based on PTF date
                                   IF  l_process_lt > 0 THEN
                                        /* ship_rec_cal
                                        l_ptf_due_date :=  MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                                       p_atp_record.instance_id,
                                                                       1,
                                                                       l_ptf_date,
                                                                       l_process_lt);*/
                                        l_ptf_due_date :=  MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                                       p_atp_record.instance_id,
                                                                       l_ptf_date,
                                                                       l_process_lt, 1);
                                   ELSE
                                        l_ptf_due_date := l_ptf_date;
                                   END IF;
                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_ptf_due_date := ' || l_ptf_due_date);
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_lt_due_date := ' || l_lt_due_date);
                                   END IF;

                                   ---We marked the most constrained constraint. If both constraint are equally
                                   -- constrained then we mark PTF constraint.

                                   -- Bug 3525582 - Constraint message should be added only if constraint actually exists
                                   IF l_lt_due_date > l_requested_ship_date OR
                                       l_ptf_due_date > l_requested_ship_date THEN

                                       -- Bug 3525582 - PTF constraint should be added only if plan is PTF enabled
                                       IF l_ptf_enabled=2 OR l_lt_due_date > l_ptf_due_date THEN
                                           l_pegging_rec.constraint_date := l_lt_due_date;
                                           l_pegging_rec.constraint_type := 3;
                                       ELSE
                                           l_pegging_rec.constraint_date := l_ptf_due_date;
                                           l_pegging_rec.constraint_type := 2;
                                       END IF;
                                   END IF;
                                END IF; -- IF (l_order_date < l_sysdate OR l_start_date < l_ptf_date)  THEN
                            END IF; --IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
                        END IF;
                        IF p_search = FORWARD_SCHEDULING THEN

                            -- p_sched_flag = FORWARD_SCHEDULING
                            --- The future date must be greater than
                            --             1) sysdate + net_process time (pre + fixed + variable )
                            --             2) PTF Date + processing LT ( fixed + varibale LT)
                            -- Therefore we calcuate these dates
                            --- bug 2178544
                            IF l_net_processing_lt > 0 THEN
                               /* ship_rec_cal
                               MSC_ATP_PVT.G_FUTURE_ORDER_DATE :=  MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                                                      p_atp_record.instance_id,
                                                                                      1,
                                                                                      l_sysdate,
                                                                                      l_net_processing_lt); */
                               MSC_ATP_PVT.G_FUTURE_ORDER_DATE :=  MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                                                      p_atp_record.instance_id,
                                                                                      l_sysdate,
                                                                                      l_net_processing_lt, 1);
                            ELSE
                               MSC_ATP_PVT.G_FUTURE_ORDER_DATE := l_sysdate;
                            END IF;

                            IF  l_process_lt > 0 THEN
                                /* ship_rec_cal
                                l_start_date :=  MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                                       p_atp_record.instance_id,
                                                                       1,
                                                                       l_ptf_date,
                                                                       l_process_lt); */
                                l_start_date :=  MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                                       p_atp_record.instance_id,
                                                                       l_ptf_date,
                                                                       l_process_lt, 1);
                            ELSE
                                l_start_date := l_ptf_date;
                            END IF;
                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_start_date := ' || l_start_date);
                            END IF;
                            MSC_ATP_PVT.G_FUTURE_START_DATE := GREATEST(l_start_date, MSC_ATP_PVT.G_PTF_DATE);
                            ---we make sure that PTF for this stage is greatst of Parent's ptf - lead time,
                            -- current level's PTF and (sysdate + pre processing lt). The last part is the minimum
                            -- start date. This PTF is start date for the components for the current itme
                            IF l_pre_pro_lt >0 THEN
                               MSC_ATP_PVT.G_PTF_DATE := GREATEST(
                                                               /* ship_rec_cal
                                                               MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                                                        p_atp_record.instance_id,
                                                                                        1,
                                                                                        MSC_ATP_PVT.G_PTF_DATE,
                                                                                        -1 * l_process_lt),*/
                                                               MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                                                        p_atp_record.instance_id,
                                                                                        MSC_ATP_PVT.G_PTF_DATE,
                                                                                        -1 * l_process_lt, -1),
                                                               l_ptf_date,
                                                               /* ship_rec_cal
                                                               MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                                                      p_atp_record.instance_id,
                                                                                      1,
                                                                                      l_sysdate,
                                                                                      l_pre_pro_lt));*/
                                                               MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                                                      p_atp_record.instance_id,
                                                                                      l_sysdate,
                                                                                      l_pre_pro_lt, 1));
                            ELSE
                               MSC_ATP_PVT.G_PTF_DATE := GREATEST(
                                                               /* ship_rec_cal
                                                               MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                                                        p_atp_record.instance_id,
                                                                                        1,
                                                                                        MSC_ATP_PVT.G_PTF_DATE,
                                                                                        -1 * l_process_lt),*/
                                                               MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                                                        p_atp_record.instance_id,
                                                                                        MSC_ATP_PVT.G_PTF_DATE,
                                                                                        -1 * l_process_lt, -1),
                                                                l_ptf_date, l_sysdate);
                            END IF;

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FUTURE_ORDER_DATE :='|| MSC_ATP_PVT.G_FUTURE_ORDER_DATE);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FUTURE_START_DATE :='|| MSC_ATP_PVT.G_FUTURE_START_DATE);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PTF_DATE := ' || MSC_ATP_PVT.G_PTF_DATE);
                            END IF;
                            --- if requested_ship_date is less than l_ptf_date then we add ptf_date for this item
                            -- UI checks this column. If this coulm is populated then UI flags this PO
                            --diag_atp
                            -- IF l_requested_ship_date < l_start_date  or l_requested_ship_date < sysdate THEN
                            -- Bug 3412143 - Use l_sysdate (in this case validated in OMC) instead of sysdate
                            IF l_requested_ship_date < l_start_date  or l_requested_ship_date < l_sysdate THEN
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'Add PTF date to pegging');
                                END IF;
                                -- Bug 3525582 - PTF constraint should be added only if plan is PTF enabled
                                IF l_ptf_enabled=2 OR MSC_ATP_PVT.G_FUTURE_ORDER_DATE > l_start_date THEN
                                       l_pegging_rec.constraint_date := MSC_ATP_PVT.G_FUTURE_ORDER_DATE;
                                       l_pegging_rec.constraint_type := 3;
                                ELSE
                                       l_pegging_rec.constraint_date := l_start_date;
                                       l_pegging_rec.constraint_type := 2;
                                END IF;

                            END IF;
                        END IF;
                        /* Modularize Item and Org Info */
                        -- Changed call to remove embedded function call.

                        ---diag_atp
                        IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 and l_constraint_flag = 1 THEN
                           --in diagnostic ATP since we have already failed the lead time test
                           --- there is no point in adding PO and removing it later
			   l_transaction_id := NULL;
                        ELSE

                           --s_cto_rearch
                           --we do not get process effectivity when checking base model's
                           -- capacity for config item
                           IF l_check_model_capacity = 2 THEN
                               /* Make case Get the Process Sequence ID.*/
                              -- (ssurendr) Bug 2865389 : Replace call to function MSC_ATP_FUNC.get_process_seq_id
                              -- by procedure MSC_ATP_PROC.get_process_effectivity
                              --Details. Derive Item's Start Date by Offsetting
                              --Due date with LT. Check effectivity on Start Date.
                              /* ship_rec_cal
                              l_opm_start_date := MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                           p_atp_record.instance_id,
                                                           1,
                                                           l_requested_ship_date,
                                                           -1 * (nvl(PF_ITEM_INFO_REC.fixed_lt,0) +
                                                              nvl(PF_ITEM_INFO_REC.variable_lt,0) * l_PO_qty));*/
                              l_opm_start_date := MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                           p_atp_record.instance_id,
                                                           l_requested_ship_date,
                                                           -1 * (nvl(PF_ITEM_INFO_REC.fixed_lt,0) +
                                                              nvl(PF_ITEM_INFO_REC.variable_lt,0) * l_PO_qty), -1);
                              MSC_ATP_PROC.get_process_effectivity(
                                   p_plan_id,
                                   --PF_ITEM_INFO_REC.dest_inv_item_id,
                                   C_ITEM_INFO_REC.dest_inv_item_id, -- For time_phased_atp
                                   p_atp_record.organization_id,
                                   p_atp_record.instance_id,
                                   l_opm_start_date,
                                   l_PO_qty,
                                   l_process_seq_id,
                                   l_routing_seq_id,
                                   l_bill_seq_id,
                                   l_op_seq_id, --4570421
                                   l_return_status);
                              -- check the return status
                              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                              	   RAISE FND_API.G_EXC_ERROR;
	                      END IF;
                           END IF;
                           --s_cto_rearch
	                   IF MSC_ATP_PVT.G_INV_CTP = 4 THEN
                              MSC_ATP_DB_UTILS.Add_Planned_Order(
                                    p_atp_record.instance_id,
                                    p_plan_id,
                                    PF_ITEM_INFO_REC.dest_inv_item_id,
                                    p_atp_record.organization_id,
                                    l_planned_order_date,  -- For ship_rec_cal
                                    l_PO_qty, -- 2754446
                                    -- l_net_demand,
                                    null,
                                    null,
                                    p_atp_record.demand_class,
                                    -- rajjain 02/19/2003 Bug 2788302 Begin
                                    -- Add Sourcing details
                                    l_sources.organization_id(j),
                                    l_sources.instance_id(j),
                                    l_process_seq_id,
                                    -- rajjain 02/19/2003 Bug 2788302 End
                                    p_refresh_number,    -- For summary enhancenment
                                    -- ship_rec_cal changes begin
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    --bug 3755704: Add start date and order date
                                    l_start_date,
                                    l_order_date,
                                    --null,       -- Bug 3241766
                                    --null,       -- Bug 3241766
                                    null,
                                    -- ship_rec_cal changes end
                                    l_transaction_id,
                                    l_return_status,
                                    -- time_phased_atp
                                    NULL, --4127630 (Make case)
                                    C_ITEM_INFO_REC.dest_inv_item_id,
                                    p_atp_record.atf_date
                              );
                           END IF;
                        END IF;
                        /* Modularize Item and Org Info */

                        -- populate insert rec to pegging tree for this supply

                        l_pegging_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
                        l_pegging_rec.order_line_id:= MSC_ATP_PVT.G_ORDER_LINE_ID;
                        --subst
                        --l_pegging_rec.parent_pegging_id:= l_pegging_id;
                        l_pegging_rec.parent_pegging_id := l_parent_pegging_id;
                        l_pegging_rec.atp_level:= p_level+1;
                        l_pegging_rec.organization_id :=
                            p_atp_record.organization_id;
                        --l_pegging_rec.organization_code := l_org_code;
                        l_pegging_rec.organization_code :=
                               MSC_ATP_FUNC.get_org_code(p_atp_record.instance_id,
                                           l_pegging_rec.organization_id);--5222584
                        l_pegging_rec.identifier1:= p_atp_record.instance_id;
                        l_pegging_rec.identifier2:= p_plan_id;
                        l_pegging_rec.identifier3 := l_transaction_id;

                        -- time_phased_atp changes begin
                        IF l_pf_atp = 'Y' THEN
                           l_pegging_rec.inventory_item_id:= p_atp_record.inventory_item_id;
                           l_pegging_rec.inventory_item_name := PF_ITEM_INFO_REC.item_name;
                        ELSE
                           l_pegging_rec.inventory_item_id:= p_atp_record.request_item_id;
                           l_pegging_rec.inventory_item_name := C_ITEM_INFO_REC.item_name;
                        END IF;
                        l_pegging_rec.aggregate_time_fence_date := p_atp_record.atf_date;
                        -- time_phased_atp changes end

                        l_pegging_rec.resource_id := NULL;
                        l_pegging_rec.resource_code := NULL;
                        l_pegging_rec.department_id := NULL;
                        l_pegging_rec.department_code := NULL;
                        l_pegging_rec.supplier_id := NULL;
                        l_pegging_rec.supplier_name := NULL;
                        l_pegging_rec.supplier_site_id := NULL;
                        l_pegging_rec.supplier_site_name := NULL;

                        l_pegging_rec.scenario_id:= p_scenario_id;
                        l_pegging_rec.supply_demand_source_type:= 1;

                        --diag_atp -- bug 3903205: set qty to zero only for diagnostic ATP
                        IF l_constraint_flag = 1 and NVL(MSC_ATP_PVT.G_DIAGNOSTIC_ATP, 2) = 1 THEN
                           l_pegging_rec.supply_demand_quantity :=0;
                        ELSE
                           l_pegging_rec.supply_demand_quantity :=l_PO_qty; -- 2754446
                           -- l_pegging_rec.supply_demand_quantity :=l_net_demand;
                        END IF;
                        l_pegging_rec.supply_demand_type:= 2;
                        l_pegging_rec.supply_demand_date:= l_requested_ship_date;
                        l_pegging_rec.source_type := 2;

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'inside make 1');
                        END IF;

                        -- for demo:1153192
                        l_pegging_rec.constraint_flag := 'N';
			l_pegging_rec.component_identifier :=
                         NVL(p_atp_record.component_identifier, MSC_ATP_PVT.G_COMP_LINE_ID);

                        l_pegging_rec.summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;

                        --- bug 2152184: For PF based ATP inventory_item_id field contains id for PF item
                        --- cto looks at pegging tree to place their demands. Since CTO expects to find
                        --  id for the requested item, we add the following column. CTO will now read from this column
                        l_pegging_rec.request_item_id := p_atp_record.request_item_id;

                        --diag_atp
                        l_pegging_rec.ptf_date := l_ptf_date;
                        l_pegging_rec.preprocessing_lead_time := l_pre_pro_lt;
                        l_pegging_rec.processing_lead_time := l_process_lt;

                        --bug 4409618: Show variable and fixed lt in pegging properties
                        l_pegging_rec.fixed_lead_time := l_fixed_lt;
                        l_pegging_rec.VARIABLE_LEAD_TIME := l_variable_lt;

                        l_pegging_rec.pegging_type := MSC_ATP_PVT.MAKE_SUPPLY; -- it is a make planned order
                        l_pegging_rec.required_date := l_requested_ship_date;
                        --bug 3328421
                        l_pegging_rec.actual_supply_demand_date := l_requested_ship_date;
                        l_pegging_rec.required_quantity := l_net_demand;
                        l_pegging_rec.plan_name := p_atp_record.plan_name;
                        l_pegging_rec.dest_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;

                        --bug 3373075: Mark plan order to be model entity only for
                        -- config, model or option class
                        --parent is model entity
                        /* IF (p_atp_record.parent_bom_item_type in (1, 4) and
                                                  p_atp_record.parent_repl_order_flag = 'Y')
                           --item itself is model entity
                           OR (C_ITEM_INFO_REC.bom_item_type in (1, 4) and
                                                  C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y') THEN
                        */
                        --item itself is model entity
                        IF (C_ITEM_INFO_REC.bom_item_type in (1,2, 4) and
                                                  C_ITEM_INFO_REC.replenish_to_ord_flag = 'Y') THEN
                           l_pegging_rec.model_sd_flag := 1;
                        END IF;


                        --bug 3356779: populate atp rule and ITF on PO
                        IF l_atp_flag = 'Y' THEN
                           l_pegging_rec.infinite_time_fence := l_get_mat_out_rec.infinite_time_fence_date;
                           l_pegging_rec.atp_rule_name := l_get_mat_out_rec.atp_rule_name;
                        ELSE
                           --4394904
                           --l_pegging_rec.infinite_time_fence := l_atp_date_this_level;
                           l_pegging_rec.infinite_time_fence := l_infinite_time_fence;
                           l_pegging_rec.atp_rule_name := l_atp_rule_name;
                        END IF;

                        l_pegging_rec.demand_class :=  p_atp_record.demand_class;
                         -- Bug 3826234
                        l_pegging_rec.manufacturing_cal_code :=  l_atp_rec.manufacturing_cal_code;
                        l_pegging_rec.shipping_cal_code      :=  NULL;
                        l_pegging_rec.receiving_cal_code     :=  NULL;
                        l_pegging_rec.intransit_cal_code     :=  NULL;

                        --4570421
                        l_pegging_rec.scaling_type                      := p_atp_record.scaling_type;
                        l_pegging_rec.scale_multiple                    := p_atp_record.scale_multiple;
                        l_pegging_rec.scale_rounding_variance           := p_atp_record.scale_rounding_variance;
                        l_pegging_rec.rounding_direction                := p_atp_record.rounding_direction;
                        l_pegging_rec.component_yield_factor            := p_atp_record.component_yield_factor; --4570421
                        l_pegging_rec.usage                             := p_atp_record.usage_qty; --4775920
                        l_pegging_rec.organization_type                 := p_atp_record.organization_type; --4775920

                        MSC_ATP_DB_UTILS.Add_Pegging(l_pegging_rec, l_pegging_id);

			-- dsting diag_atp last good peggingfor make
			IF l_pegging_rec.constraint_type IS NULL THEN
				IF PG_DEBUG in ('Y', 'C') THEN
				   msc_sch_wb.atp_debug('make last good pegging id ' || l_pegging_id);
				END IF;
				l_last_good_pegging_id := l_pegging_id;
			END IF;
                        --5216821 Set co prod peg id to PO peg id
                        l_coprod_pegging_id := l_pegging_id;

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_coprod_pegging_id : ' || l_coprod_pegging_id);
                        END IF;
                        --optional_fw Make PO should be set for top level
                        IF PG_DEBUG in ('Y', 'C') AND G_FW_CTP_PEGGING_ID.COUNT >0 THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_CTP_PEGGING_ID := '
                                                              || G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT));
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_OPTIONAL_FW := ' || G_OPTIONAL_FW);
                        ELSIF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_OPTIONAL_FW := ' || G_OPTIONAL_FW);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_PEGGING_ID := ' || G_FW_PEGGING_ID);
                        END IF;
                        IF MSC_ATP_PVT.G_OPTIONAL_FW is not null
                                               AND (G_FW_CTP_PEGGING_ID.COUNT = 0 --Means top level, for next source value = null
                                                    OR G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT) is null) then
                         IF G_FW_CTP_PEGGING_ID.COUNT = 0 THEN
                          G_FW_CTP_PEGGING_ID.EXTEND;
                         END IF;
                         G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT) := l_pegging_id;
                         IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_CTP_PEGGING_ID := '
                                                              || G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT));
                         END IF;
                        END IF;
                        IF PG_DEBUG in ('Y', 'C') AND G_FW_CTP_PEGGING_ID.COUNT >0 THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_CTP_PEGGING_ID := '
                                                              || G_FW_CTP_PEGGING_ID(G_FW_CTP_PEGGING_ID.COUNT));
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_OPTIONAL_FW := ' || G_OPTIONAL_FW);
                        ELSIF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_OPTIONAL_FW := ' || G_OPTIONAL_FW);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_FW_PEGGING_ID := ' || G_FW_PEGGING_ID);
                        END IF;
                        /*--- bug 2178544
                        ---- get mso_lead_time factor
                        l_mso_lead_time_factor := MSC_ATP_PVT.G_MSO_LEAD_TIME_FACTOR;
                        --- Get the lead time for the item
                        l_net_processing_lt := CEIL((l_fixed_lt +
                                                      (l_variable_lt * l_net_demand))*(1 + l_mso_lead_time_factor)
                                                      + l_pre_pro_lt);
                        l_process_lt := CEIL((l_fixed_lt +
                                                  (l_variable_lt * l_net_demand))*(1 + l_mso_lead_time_factor));
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_mso_lead_time_factor := ' || l_mso_lead_time_factor);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_net_processing_lt := ' || l_net_processing_lt);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_process_lt := ' || l_process_lt);
                        END IF;
                        MSC_ATP_PVT.G_PTF_DATE_THIS_LEVEL := l_ptf_date; */

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'p_search' || p_search);
                        END IF;
                        --diag_atp
                        IF (MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 and l_constraint_flag <> 1) OR
                            (p_search = BACKWARD_SCHEDULING and MSC_ATP_PVT.G_DIAGNOSTIC_ATP <> 1) THEN

                            l_avail_assembly_qty := l_net_demand;
                            --2178544
                            ---- if lead time > 0 then offset the date to see if the offseted
                            --- date falls before sysdate or not
                            ---- If ofsetted date falls before sys date then we can't make the item
                            ---- and requested_date quantity is set to Zero
                            --- If Offseted date is > sysdate then we  continue as ususal

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_start_date := ' || l_start_date);
                            END IF;
                            -- bug 2178544

                            IF (l_order_date < l_sysdate OR l_start_date < l_ptf_date)  THEN
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'req date - lead time is less than sys or ptf date');
                                END IF;
                                l_avail_assembly_qty := 0;
                            ELSE

                               IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'inside make 2');
                               END IF;
                               IF ((l_atp_comp_flag = 'R') OR
                               	   (l_atp_comp_flag = 'C')) THEN
                               	   IF PG_DEBUG in ('Y', 'C') THEN
                               	      msc_sch_wb.atp_debug('ATP_Check: ' || 'inside make 3');
                               	   END IF;

                               	   -- get resource requirements first
            		       	   MSC_ATP_REQ.Get_Res_Requirements(
                               	     p_atp_record.instance_id,
			       	     p_plan_id,
                               	     p_level+2,
                               	     p_scenario_id,
                               	     --p_atp_record.inventory_item_id,
                               	     l_request_item_id, -- Pass member item's id to make sure member item's id is
                               	                        -- inserted in assembly_item_id column in msc_resource_requirements
                               	     p_atp_record.organization_id,
                              	     l_pegging_id,
                                     l_PO_qty, -- 2754446
                               	     --l_net_demand,
                               	     l_requested_ship_date,
                               	     p_refresh_number,
			       	     p_atp_record.insert_flag,
                               	     p_search,
                               	     p_atp_record.demand_class,
                                     --(ssurendr) Bug 2865389 Added Routing Sequence id
                                     --and Bill sequence id for OPM fix.
                                     l_routing_seq_id,
                                     l_bill_seq_id,
                                     p_atp_record.ship_date, -- Bug 2814872
                                     p_atp_record.demand_source_line,   -- CTO ODR
                               	     l_avail_assembly_qty,
                               	     l_res_atp_date,
                               	     l_res_atp_period,
                               	     l_res_atp_supply_demand,
	                             l_return_status );

                               	   -- check the return status
                               	   IF l_return_status <>
                               	       FND_API.G_RET_STS_SUCCESS THEN
                              	       RAISE FND_API.G_EXC_ERROR;
	                           END IF;
	                           --optional_fw
	                           IF MSC_ATP_PVT.G_OPTIONAL_FW is not null THEN
                                      p_atp_record.error_code := ATP_REQ_DATE_FAIL;
                                   END IF;

                               END IF;

                               ---diag_ATP
                               IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
                                   ---In diagnostic mode we look for complete qty. Thats why looks
                                   -- for component as if we got complete resource qty.
                                   l_res_avail_qty := l_avail_assembly_qty;
                                   l_avail_assembly_qty := l_net_demand;
                               END IF;


                               IF ((l_atp_comp_flag = 'C') OR
                                (l_atp_comp_flag = 'Y')) AND
                               LEAST(l_net_demand, l_avail_assembly_qty) >0 THEN
                             	   -- get component requirements first

                               	   IF PG_DEBUG in ('Y', 'C') THEN
                               	      msc_sch_wb.atp_debug('ATP_Check: ' || 'inside make 4');
                               	   END IF;

                                   BEGIN
                                        IF l_avail_assembly_qty < l_net_demand AND
                                            G_ORG_INFO_REC.org_type = 1 THEN
                                            /* ship_rec_cal
                                            l_opm_start_date := l_requested_ship_date -
                                                                (nvl(PF_ITEM_INFO_REC.fixed_lt,0) +
                                                                nvl(PF_ITEM_INFO_REC.variable_lt,0) *
                                                                l_avail_assembly_qty);*/
                                            l_opm_start_date := MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                                p_atp_record.instance_id,
                                                                l_requested_ship_date,
                                                                -1 * (nvl(PF_ITEM_INFO_REC.fixed_lt,0) +
                                                                      nvl(PF_ITEM_INFO_REC.variable_lt,0) * l_avail_assembly_qty), -1);
                                            MSC_ATP_PROC.get_process_effectivity(
                                                p_plan_id,
                                                --PF_ITEM_INFO_REC.dest_inv_item_id,
                                                C_ITEM_INFO_REC.dest_inv_item_id, -- For time_phased_atp
                                                p_atp_record.organization_id,
                                                p_atp_record.instance_id,
                                                l_opm_start_date,
                                                l_avail_assembly_qty,
                                                l_process_seq_id,
                                                l_routing_seq_id,
                                                l_bill_seq_id,
                                                l_op_seq_id, --4570421
                                                l_return_status);
                                           -- check the return status
                                           IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                              	RAISE FND_API.G_EXC_ERROR;
                	                   END IF;
                                        END IF;


                               	        MSC_ATP_REQ.Get_Comp_Requirements(
                                	     p_atp_record.instance_id,
                                    	     p_plan_id,
                                    	     p_level+2,
                                    	     p_scenario_id,
                                    	     l_request_item_id, -- for time_phased_atp
                                    	     p_atp_record.organization_id,
                                    	     l_pegging_id,
                                    	     p_atp_record.demand_class,
                                             LEAST(l_PO_qty, l_avail_assembly_qty),
                                    	     --LEAST(l_net_demand, l_avail_assembly_qty),
                                    	     l_requested_ship_date,
                                    	     p_refresh_number,
                                    	     p_atp_record.insert_flag,
                                    	     p_search,
				    	     p_assign_set_id,
                                             -- (ssurendr) Bug 2865389 Added Routing Sequence id
                                             --and Bill sequence id for OPM fix.
                                             l_routing_seq_id,
                                             l_bill_seq_id,
                                             p_atp_record.inventory_item_id,      -- For time_phased_atp
                                             p_atp_record.atf_date,               -- For time_phased_atp
                                             p_atp_record.manufacturing_cal_code, -- For ship_rec_cal
                                    	     l_avail_assembly_qty,
                                    	     l_comp_atp_date,
                                    	     l_comp_atp_period,
                                    	     l_comp_atp_supply_demand,
	                                     l_return_status,
                                             --s_cto_rearch
                                             l_get_comp_info_rec,
                                             -- CTO Phase 1 #16, #17
                                             p_atp_record.order_number,
                                             l_op_seq_id --4570421
                                             );
                                             -- Allow creation of Sales Order for CTO comps.
                                   -- 2400614: krajan
                                   EXCEPTION
                                        WHEN MSC_ATP_PVT.G_ATO_SOURCING_MISMATCH THEN
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: ' || ' Sourcing Mismatch Error');
                                             END IF;
                                             p_atp_record.error_code := MSC_ATP_PVT.ASSIGN_SET_NOT_IN_SYNC;
                                             RAISE MSC_ATP_PVT.G_ATO_SOURCING_MISMATCH;

                                        -- dsting 2764213
                                        WHEN MSC_ATP_PVT.EXC_NO_PLAN_FOUND THEN
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: Plan not found Error');
                                             END IF;
                                             --24x7
                                             if (NVL(MSC_ATP_PVT.G_DOWNTIME_HIT, 'N') = 'Y') then
                                                ---2854351
                                                --p_atp_record.error_code := MSC_ATP_PVT.TRY_ATP_LATER;
                                                p_atp_record.error_code := MSC_ATP_PVT.PLAN_DOWN_TIME;
                                             else
                                                p_atp_record.error_code := MSC_ATP_PVT.PLAN_NOT_FOUND;
                                             end if;

                                             RAISE MSC_ATP_PVT.EXC_NO_PLAN_FOUND;
                                        -- krajan 2752705
                                        WHEN MSC_ATP_PVT.G_EXC_UNCOLLECTED_ITEM THEN
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: Uncollected Item Error');
                                             END IF;
                                             p_atp_record.error_code := MSC_ATP_PVT.ATP_ITEM_NOT_COLLECTED;
                                             RAISE MSC_ATP_PVT.G_EXC_UNCOLLECTED_ITEM;
                                        WHEN MSC_ATP_PVT.NO_MATCHING_DATE_IN_CAL THEN --bug3583705
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug ('ATP_Check:NO_MATCHING_DATE_IN_CAL');
                                             END IF;
                                             p_atp_record.error_code := MSC_ATP_PVT.NO_MATCHING_CAL_DATE;
                                             RAISE MSC_ATP_PVT.NO_MATCHING_DATE_IN_CAL;
                                   END;

                                   IF l_return_status = MSC_ATP_PVT.CTO_OSS_ERROR THEN

                                        RAISE MSC_ATP_PVT.INVALID_OSS_SOURCE;

                              	   ELSIF l_return_status <>FND_API.G_RET_STS_SUCCESS THEN
	                                RAISE FND_API.G_EXC_ERROR;
	                           END IF;
	                           --optional_fw
	                           IF MSC_ATP_PVT.G_OPTIONAL_FW is not null THEN
                                      p_atp_record.error_code := ATP_REQ_DATE_FAIL;
                                   END IF;

                               END IF;
 			    END IF;
                            -- now we have done the capacity check
                            -- l_avail_assembly_qty is the quantity that
                            -- we think we can build.  Since we may reserve
                            -- more during the the check for each comp/res,
                            -- we need to undo what we have done so far
                            -- and use this l_avail_assembly_qty to reserve
                            -- the capacity if we can not build the whole
                            -- l_net_demand.  For example,  we have bill like
                            -- this
                            --    A
                            --   / \
                            --  B   R
                            -- let say we need to build 10 A and we have 7 B
                            -- and 4 R.  During atp check we reserve 7B and 4R
                            -- already.  Now we need to undo these reservation,
                            -- and just reserve 4 B and 4 R instead.
                            -- the way we will do is
                            -- 1: undo all the inserts we have done for this
                            --    make node.
                            -- 2: redo this make node with l_avail_assembly_qty.

                            -- 2869830 do not assume lower level returns rounded qty
                            IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
                               l_avail_assembly_qty := LEAST(l_avail_assembly_qty, l_res_avail_qty);
                            END IF;

                            IF NVL(C_ITEM_INFO_REC.rounding_control_type, 2) = 1 THEN
                               msc_sch_wb.atp_debug('FLOOR of avail qty for l_avail_PO_qty: '
                                                    || l_avail_assembly_qty);
                               l_avail_PO_qty := FLOOR(l_avail_assembly_qty);
                            ELSE
                               msc_sch_wb.atp_debug('l_avail_PO_qty := avail qty: '
                                                    || l_avail_assembly_qty);
                               l_avail_PO_qty := trunc(l_avail_assembly_qty, 6);	--5598066
                            END IF;

                            --diag_atp
                            --- we go back and adjust the quantities for non-diagnostic ATP only
                            IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
                               l_avail_assembly_qty := LEAST(l_avail_assembly_qty, l_res_avail_qty);

                               IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('ATP_Check: ' || 'l_avail_assembly_qty := ' || l_avail_assembly_qty);
				  msc_sch_wb.atp_debug('last good pegging: ' || l_pegging_id);
				  msc_sch_wb.atp_debug('qty ' || l_avail_assembly_qty);
				  msc_sch_wb.atp_debug('PO qty ' || l_avail_PO_qty);
                               END IF;

				-- dsting diag_atp
				-- If this is the last source we should only update the pegging and not
				-- the actual PO in case of diagnostic atp
                               IF l_avail_PO_qty < l_net_demand THEN -- 2754446
                               --IF l_avail_assembly_qty < l_net_demand THEN
				  l_last_good_pegging_id := l_pegging_id;
				  IF l_sources.source_type.next(j) IS NULL
				     AND MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1
				  THEN
					MSC_ATP_DB_UTILS.Update_Pegging(l_pegging_id, null, l_avail_PO_qty); -- 2869830
					-- MSC_ATP_DB_UTILS.Update_Pegging(l_pegging_id, null, l_avail_assembly_qty);
				  ELSE
                                        MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
                                                   p_plan_id,
                                                   null,
                                                   l_avail_PO_qty, -- 2869830
                                                   --l_avail_assembly_qty,
                                                   null,
                                                   null,
                                                   null,
                                                   null,  -- Bug 3241766
                                                   --bug 3755704: Pass start date and order date
                                                   l_start_date,
                                                   l_order_date,
                                                   --null,  -- Bug 3241766
                                                   --null,  -- Bug 3241766
                                                   C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                                   PF_ITEM_INFO_REC.dest_inv_item_id,  -- Bug 3293163
						   MSC_ATP_PVT.UNDO);
				  END IF;

                               END IF;
                               -- move the supply/demand, period atp
                               -- of the components to the output record of
                               -- tables.
                               MSC_ATP_PROC.Details_Output(l_comp_atp_period,
                                             l_comp_atp_supply_demand,
                                             x_atp_period,
                                             x_atp_supply_demand,
                                             l_return_status);

                               MSC_ATP_PROC.Details_Output(l_res_atp_period,
                                             l_res_atp_supply_demand,
                                             x_atp_period,
                                             x_atp_supply_demand,
                                             l_return_status);

                            ELSIF (l_avail_PO_qty < l_net_demand)  THEN
                            --ELSIF (l_avail_assembly_qty < l_net_demand)  THEN
                              IF PG_DEBUG in ('Y', 'C') THEN
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_avail_assembly_qty ='||l_avail_assembly_qty);
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_pegging_id = '||l_pegging_id);
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'inside make 7');
                              END IF;
                              IF l_avail_PO_qty > 0 THEN
                              --IF l_avail_assembly_qty > 0 THEN

                                -- bug 1277418: now clean up the data.
                                -- if l_avail_assembly_qty >0, we need to
                                -- to keep the planned order.

                                MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
                                       l_pegging_id ,
                                       p_atp_record.instance_id,
                                       p_plan_id,
                                       INVALID,
                                       0,
                                       l_return_status);

                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'inside make 6');
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_pegging_id = '||l_pegging_id);
                                END IF;

                                -- update/delete the planned order record.
                                MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
                                                   p_plan_id,
                                                   null,
                                                   l_avail_PO_qty,
                                                   --l_avail_assembly_qty,
                                                   null,
                                                   null,
                                                   null,
                                                   null,  -- Bug 3241766
                                                   --bug 3755704: pass start date and order date
                                                   l_start_date,
                                                   l_order_date,
                                                   --null,  -- Bug 3241766
                                                   --null,  -- Bug 3241766
                                                   C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                                   PF_ITEM_INFO_REC.dest_inv_item_id); -- Bug 3293163

                                -- redo the check using l_avail_assembly_qty

       				-- Bug 1562754, use G_ASSEMBLY_LINE_ID instead of G_COMP_LINE_ID,
				-- to make sure that in case of CTO, we try to get the BOM
				-- correctly from msc_bom_temp_table.-NGOEL 02/01/2001

				-- Commented on 01/02/2001 by NGOEL as we are now using
				-- G_ASSEMBLY_LINE_ID instead of G_COMP_LINE_ID for BOM.

                                -- Bug 1532051, set G_COMP_LINE_ID again to G_ORDER_LINE_ID,
                                -- just to make sure that in case of CTO, we try to get the
                                -- BOM correctly from msc_bom_temp_table.

                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'setting G_COMP_LINE_ID = '||MSC_ATP_PVT.G_ASSEMBLY_LINE_ID);
                                END IF;

                                MSC_ATP_PVT.G_COMP_LINE_ID := MSC_ATP_PVT.G_ASSEMBLY_LINE_ID;

                                IF ((l_atp_comp_flag = 'R') OR
                                  (l_atp_comp_flag = 'C')) THEN
                                  -- get resource requirements first
                                  IF PG_DEBUG in ('Y', 'C') THEN
                                     msc_sch_wb.atp_debug('ATP_Check: ' || 'l_avail_assembly_qty := ' || l_avail_assembly_qty);
                                  END IF;

				  -- dsting for nocopy changes
                                  l_res_demand := l_avail_PO_qty; -- 2869830
				  --l_res_demand := l_avail_assembly_qty;

                                  --(ssurendr) Bug 2865389. call get_process_effectivity
                                  -- again since quantity has changed. Routing
                                  -- and bill seq id could change in this case.
                                  /* ship_rec_cal
                                  l_opm_start_date := MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                        p_atp_record.instance_id,
                                                        1,
                                                        l_requested_ship_date,
                                                        -1 * (nvl(PF_ITEM_INFO_REC.fixed_lt,0) +
                                                              nvl(PF_ITEM_INFO_REC.variable_lt,0) * l_res_demand));*/
                                  l_opm_start_date := MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                        p_atp_record.instance_id,
                                                        l_requested_ship_date,
                                                        -1 * (nvl(PF_ITEM_INFO_REC.fixed_lt,0) +
                                                              nvl(PF_ITEM_INFO_REC.variable_lt,0) * l_res_demand), -1);
                                  MSC_ATP_PROC.get_process_effectivity(
                                          p_plan_id,
                                          --PF_ITEM_INFO_REC.dest_inv_item_id,
                                          C_ITEM_INFO_REC.dest_inv_item_id, -- For time_phased_atp
                                          p_atp_record.organization_id,
                                          p_atp_record.instance_id,
                                          l_opm_start_date,
                                          l_res_demand,
                                          l_process_seq_id,
                                          l_routing_seq_id,
                                          l_bill_seq_id,
                                          l_op_seq_id, --4570421
                                          l_return_status);
                                     -- check the return status
                                  IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                      RAISE FND_API.G_EXC_ERROR;
        	                  END IF;
                                  MSC_ATP_REQ.Get_Res_Requirements(
                                    p_atp_record.instance_id,
                                    p_plan_id,
                                    p_level+2,
                                    p_scenario_id,
                                    --p_atp_record.inventory_item_id,
                               	    l_request_item_id, -- Pass member item's id to make sure member item's id is
                               	                       -- inserted in assembly_item_id column in msc_resource_requirements
                                    p_atp_record.organization_id,
                                    l_pegging_id,
                                    l_res_demand,
                                    l_requested_ship_date,
                                    p_refresh_number,
                                    p_atp_record.insert_flag,
                                    p_search,
                                    p_atp_record.demand_class,
                                     --(ssurendr) Bug 2865389 Added Routing Sequence id
                                     --and Bill sequence id for OPM fix.
                                    l_routing_seq_id,
                                    l_bill_seq_id,
                                    p_atp_record.ship_date, -- Bug 2814872
                                    p_atp_record.demand_source_line,   -- CTO ODR
                                    l_avail_assembly_qty,
			            l_res_atp_date,
                                    l_res_atp_period,
                                    l_res_atp_supply_demand,
                                    l_return_status );

                                   -- check the return status
                                   IF l_return_status <>
                               	       FND_API.G_RET_STS_SUCCESS THEN
                              	       RAISE FND_API.G_EXC_ERROR;
                                   END IF;

                                END IF;

                                IF --((l_atp_comp_flag = 'C') OR
                                  ((l_atp_comp_flag = 'C' AND nvl(l_avail_assembly_qty,0) <> 0) OR  --5283809
                                  (l_atp_comp_flag = 'Y')) THEN
                                  -- get component requirements first
                                  BEGIN
                                        MSC_ATP_REQ.Get_Comp_Requirements(
                                                p_atp_record.instance_id,
                                                p_plan_id,
                                                p_level+2,
                                                p_scenario_id,
                                                l_request_item_id, -- for time_phased_atp
                                                p_atp_record.organization_id,
                                                l_pegging_id,
                                                p_atp_record.demand_class,
                                                LEAST(l_PO_qty, l_avail_assembly_qty), -- 2754446
                                                --LEAST(l_net_demand, l_avail_assembly_qty),
                                                l_requested_ship_date,
                                                p_refresh_number,
                                                p_atp_record.insert_flag,
                                                p_search,
                                                p_assign_set_id,
                                                --(ssurendr) Bug 2865389 Added Routing Sequence id
                                                --and Bill sequence id for OPM fix.
                                                l_routing_seq_id,
                                                l_bill_seq_id,
                                                p_atp_record.inventory_item_id,      -- For time_phased_atp
                                                p_atp_record.atf_date,               -- For time_phased_atp
                                                p_atp_record.manufacturing_cal_code, -- For ship_rec_cal
                                                l_avail_assembly_qty,
                                                l_comp_atp_date,
                                                l_comp_atp_period,
                                                l_comp_atp_supply_demand,
                                                l_return_status,
                                                --s_cto_rearch
                                                l_get_comp_info_rec,
                                                -- CTO Phase 1 #16, #17
                                                p_atp_record.order_number,
                                                l_op_seq_id --4570421
                                                );
                                                 -- Allow creation of Sales Order for CTO comps.
                                  -- 2400614 : krajan
                                  EXCEPTION
                                        -- Raising exception handled below
                                        WHEN MSC_ATP_PVT.G_ATO_SOURCING_MISMATCH THEN
                                                IF PG_DEBUG in ('Y', 'C') THEN
                                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'Sourcing Mismatch Error');
                                                END IF;
                                                p_atp_record.error_code := MSC_ATP_PVT.ASSIGN_SET_NOT_IN_SYNC;
                                                RAISE MSC_ATP_PVT.G_ATO_SOURCING_MISMATCH;

                                        -- dsting 2764213
                                        WHEN MSC_ATP_PVT.EXC_NO_PLAN_FOUND THEN
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: Plan not found Error');
                                             END IF;
                                             --24x7
                                             if (NVL(MSC_ATP_PVT.G_DOWNTIME_HIT, 'N') = 'Y') then
                                                --bug 2854351:
                                                --p_atp_record.error_code := MSC_ATP_PVT.TRY_ATP_LATER;
                                                p_atp_record.error_code := MSC_ATP_PVT.PLAN_DOWN_TIME;
                                             else
                                                p_atp_record.error_code := MSC_ATP_PVT.PLAN_NOT_FOUND;
                                             end if;
                                             RAISE MSC_ATP_PVT.EXC_NO_PLAN_FOUND;
                                        -- krajan : 2752705
                                        WHEN MSC_ATP_PVT.G_EXC_UNCOLLECTED_ITEM THEN
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: Uncollected Item Found');
                                             END IF;
                                             p_atp_record.error_code := MSC_ATP_PVT.ATP_ITEM_NOT_COLLECTED;
                                             RAISE MSC_ATP_PVT.G_EXC_UNCOLLECTED_ITEM;
                                        WHEN MSC_ATP_PVT.NO_MATCHING_DATE_IN_CAL THEN --bug3583705
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug ('ATP_Check:NO_MATCHING_DATE_IN_CAL');
                                             END IF;
                                             p_atp_record.error_code := MSC_ATP_PVT.NO_MATCHING_CAL_DATE;
                                             RAISE MSC_ATP_PVT.NO_MATCHING_DATE_IN_CAL;
                                  END;

                                  IF l_return_status = MSC_ATP_PVT.CTO_OSS_ERROR THEN

                                        RAISE MSC_ATP_PVT.INVALID_OSS_SOURCE;

                                  ELSIF l_return_status <>
                                    FND_API.G_RET_STS_SUCCESS THEN
                                    RAISE FND_API.G_EXC_ERROR;
                                  END IF;

                                END IF;

                                -- move the supply/demand, period atp
                                -- of the resources to the output record of
                                -- tables.

                                -- bug 1277418
                                -- we need to make sure the l_avail_assembly_qty
                                -- in this second round because it is possible
                                -- that due to lead time we check different
                                -- comp/res that may not have enough capacities.

                                IF l_avail_assembly_qty > 0 THEN
                                  MSC_ATP_PROC.Details_Output(l_comp_atp_period,
                                               l_comp_atp_supply_demand,
                                               x_atp_period,
                                               x_atp_supply_demand,
                                               l_return_status);

                                  MSC_ATP_PROC.Details_Output(l_res_atp_period,
                                               l_res_atp_supply_demand,
                                               x_atp_period,
                                               x_atp_supply_demand,
                                               l_return_status);
                                ELSE

                                  MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
                                                   p_plan_id,
                                                   null,
                                                   0,
                                                   null,
                                                   null,
                                                   null,
                                                   null,  -- Bug 3241766
                                                   --3755704: Pass start date and order date
                                                   l_start_date,
                                                   l_order_date,
                                                   --null,  -- Bug 3241766
                                                   --null,  -- Bug 3241766
                                                   C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                                   PF_ITEM_INFO_REC.dest_inv_item_id); -- Bug 3293163
                                END IF;
                              ELSE
                                -- bug 1277418: now clean up the data.
                                -- we remove the whole planned order
                                MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
                                                   p_plan_id,
                                                   null,
                                                   0,
                                                   null,
                                                   null,
                                                   null,
                                                   null,  -- Bug 3241766
                                                   --bug 3755704: Pass start date and order date
                                                   l_start_date,
                                                   l_order_date,
                                                   --null,  -- Bug 3241766
                                                   --null,  -- Bug 3241766
                                                   C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                                   PF_ITEM_INFO_REC.dest_inv_item_id); -- Bug 3293163
                                 MSC_ATP_PVT.G_SUMMARY_FLAG := l_summary_flag;
                              END IF; -- end if l_avail_assembly_qty > 0
                            ELSE
                              -- move the supply/demand, period atp
                              -- of the components to the output record of
                              -- tables.
                              MSC_ATP_PROC.Details_Output(l_comp_atp_period,
                                             l_comp_atp_supply_demand,
                                             x_atp_period,
                                             x_atp_supply_demand,
                                             l_return_status);

                              MSC_ATP_PROC.Details_Output(l_res_atp_period,
                                             l_res_atp_supply_demand,
                                             x_atp_period,
                                             x_atp_supply_demand,
                                             l_return_status);


                            END IF;  -- end if the undo stuff
                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'OSFM Coproducts Backward');
                            END IF;
			    --- OSFM Changes: update coproduct supply
			    l_coproducts_flag := FND_Profile.value('MSC_PLAN_COPRODUCTS');
                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'msc_plan_coproducts = ' || l_coproducts_flag);
                            END IF;
                            --- set the sumary flag back to summary flag for p_plan_id
                            MSC_ATP_PVT.G_SUMMARY_FLAG := l_summary_flag;
                            IF ((l_atp_comp_flag = 'C') OR
                               (l_atp_comp_flag = 'Y')) AND
                               l_coproducts_flag = 'Y'  AND
                               l_avail_assembly_qty >0 THEN

 				IF PG_DEBUG in ('Y', 'C') THEN
 				   msc_sch_wb.atp_debug('ATP_Check: ' || 'Add Coproducts for item '||p_atp_record.inventory_item_id);
 				END IF;
			 	MSC_ATP_PROC.Add_Coproducts(
                                    p_plan_id,
                                    p_atp_record.instance_id,
                                    p_atp_record.organization_id,
                                    --bug 3766179: pass request item as inventory_item_id contains
                                    --PF's id in case of PF based ATP
                                    --p_atp_record.inventory_item_id,
                                    l_request_item_id,
                                    l_requested_ship_date,
                                    p_atp_record.demand_class,
                                    l_avail_assembly_qty,
                                    l_coprod_pegging_id,
                                    C_ITEM_INFO_REC.rounding_control_type, -- 2869830
                                    p_refresh_number,    -- For summary enhancement
                                    l_transaction_id --3766179
                                );
	              		IF PG_DEBUG in ('Y', 'C') THEN
	              		   msc_sch_wb.atp_debug('ATP_Check: ' || 'After adding coproducts Backward');
	              		END IF;

        		    END IF;
                            l_net_demand := l_net_demand-l_avail_assembly_qty;

                            IF l_requested_ship_date <= p_atp_record.atf_date THEN
                                p_atp_record.atf_date_quantity := p_atp_record.atf_date_quantity + l_avail_assembly_qty;
                            END IF;

                            IF l_net_demand <= 0 THEN
                                l_net_demand := 0;
                                EXIT;
                            END IF;
                        ---diag_atp
                        ELSIF MSC_ATP_PVT.G_DIAGNOSTIC_ATP <> 1 THEN
                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'inside forward_scheduling');
                            END IF;
                            -- p_sched_flag = FORWARD_SCHEDULING

                            -- initialize the atp date
                            -- although we set to sysdate now, each individual
                            -- routine will give the right date (or null).

                            l_res_atp_date := l_requested_ship_date;
                            l_comp_atp_date := l_requested_ship_date;

				-- Bug 1554159, donot change G_COMP_LINE_ID here
                                -- Bug 1532051, set G_COMP_LINE_ID again to G_ORDER_LINE_ID,
                                -- just to make sure that in case of CTO, we try to get the
                                -- BOM correctly from msc_bom_temp_table.

                                --msc_sch_wb.atp_debug('setting G_COMP_LINE_ID = '||MSC_ATP_PVT.G_ORDER_LINE_ID);

                                --MSC_ATP_PVT.G_COMP_LINE_ID := MSC_ATP_PVT.G_ORDER_LINE_ID;

                            -- dsting 2754446 adjust l_net_demand according to rounding_control_type
                            -- so our planned orders turn out right for the future case.
                            IF NVL(C_ITEM_INFO_REC.rounding_control_type, 2) = 1 THEN
                              --l_PO_qty := CEIL(l_net_demand);
                              --bug3397904 start
                              --bug 3904063: Reset the quantity only in case of demand priority allocated ATP
                              IF (p_search = FORWARD_SCHEDULING)
                                 AND MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                                 AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1
                                 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN
                               l_PO_qty := CEIL(p_atp_record.quantity_ordered);
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('If l_PO_qty: ' || l_PO_qty);
                               END IF;
                              ELSE
                               l_PO_qty := CEIL(l_net_demand);
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('Else l_PO_qty: ' || l_PO_qty);
                               END IF;
                              END IF;
                            ELSE
                            --bug 3904063: Reset the quantity only in case of demand priority allocated ATP
                              IF (p_search = FORWARD_SCHEDULING)
                                 AND MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                                 AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1
                                 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN
                               l_PO_qty := trunc(p_atp_record.quantity_ordered, 6);	--5598066
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('If l_PO_qty: ' || l_PO_qty);
                               END IF;
                              ELSE
                               l_PO_qty := trunc(l_net_demand, 6);	--5598066
                               IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('Else l_PO_qty: ' || l_PO_qty);
                               END IF;
                              END IF;
                            END IF;
                            --bug3397904 end
                            IF ((l_atp_comp_flag = 'R') OR
                                (l_atp_comp_flag = 'C')) THEN
                                 -- get resource requirements first
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'inside atp_comp_flag R or C');
                                END IF;

                                --(ssurendr) Bug 2865389 Call procedure get_process_effectivity
                                --Details. Derive Item's Start Date by Offsetting
                                --Due date with LT. Check effectivity on Start Date.
                                /* ship_rec_cal
                                l_opm_start_date := MSC_CALENDAR.date_offset(p_atp_record.organization_id,
                                                        p_atp_record.instance_id,
                                                        1,
                                                        l_requested_ship_date,
                                                        -1 * (nvl(PF_ITEM_INFO_REC.fixed_lt,0) +
                                                              nvl(PF_ITEM_INFO_REC.variable_lt,0) * l_PO_qty));*/
                                l_opm_start_date := MSC_CALENDAR.date_offset(p_atp_record.manufacturing_cal_code,
                                                        p_atp_record.instance_id,
                                                        l_requested_ship_date,
                                                        -1 * (nvl(PF_ITEM_INFO_REC.fixed_lt,0) +
                                                              nvl(PF_ITEM_INFO_REC.variable_lt,0) * l_PO_qty), -1);
                                MSC_ATP_PROC.get_process_effectivity(
                                        p_plan_id,
                                        --PF_ITEM_INFO_REC.dest_inv_item_id,
                                        C_ITEM_INFO_REC.dest_inv_item_id, -- For time_phased_atp
                                        p_atp_record.organization_id,
                                        p_atp_record.instance_id,
                                        l_opm_start_date,
                                        l_PO_qty,
                                        l_process_seq_id,
                                        l_routing_seq_id,
                                        l_bill_seq_id,
                                        l_op_seq_id, --4570421
                                        l_return_status);
                                -- check the return status
                                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                    RAISE FND_API.G_EXC_ERROR;
        	                END IF;
                                MSC_ATP_REQ.Get_Res_Requirements(
                                    p_atp_record.instance_id,
                                    p_plan_id,
                                    p_level+2,
                                    p_scenario_id,
                                    --p_atp_record.inventory_item_id,
                               	    l_request_item_id, -- Pass member item's id to make sure member item's id is
                               	                       -- inserted in assembly_item_id column in msc_resource_requirements
                                    p_atp_record.organization_id,
                                    l_pegging_id,
                                    l_PO_qty, -- 2754446
                                    --l_net_demand,
                                    l_requested_ship_date,
                                    p_refresh_number,
                                    p_atp_record.insert_flag,
                                    p_search,
                                    p_atp_record.demand_class,
                                    --(ssurendr) Bug 2865389 Added Routing Sequence id
                                    --and Bill sequence id for OPM fix.
                                    l_routing_seq_id,
                                    l_bill_seq_id,
                                    p_atp_record.ship_date, -- Bug 2814872
                                    p_atp_record.demand_source_line,   -- CTO ODR
                                    l_avail_assembly_qty,
                                    l_res_atp_date,
                                    l_res_atp_period,
                                    l_res_atp_supply_demand,
                                    l_return_status );

                                -- check the return status
                                -- Error Handling Changes krajan
                                 IF l_return_status <>
                               	       FND_API.G_RET_STS_SUCCESS THEN
                              	       RAISE FND_API.G_EXC_ERROR;
                                 END IF;

                                 IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_avail_assembly_qty = '||l_avail_assembly_qty);
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_res_atp_date = '||l_res_atp_date);
                                 END IF;

				 -- Bug 1608755, in case l_res_atp_date is null, set l_comp_atp_date
				 -- to NULL so that we return single level better than going down.
                            	 IF l_comp_atp_date is NOT NULL and l_res_atp_date is NULL THEN
                                    l_comp_atp_date := NULL;
                                 END IF;

                            END IF;

                            -- Do comp check if res_atp_date is less than parent's infinite time fence.
                            -- Bug 2814872
                            IF ((l_atp_comp_flag = 'C' AND l_res_atp_date is not null AND--5211286
                                --l_res_atp_date < p_atp_record.ship_date ) OR
                                l_res_atp_date < NVL(p_atp_record.ship_date,l_res_atp_date + 1) AND nvl(l_avail_assembly_qty,0) <> 0 ) OR --5283809
                                (l_atp_comp_flag = 'Y')) AND
                                l_res_atp_date is not null THEN
                                 -- we addd the  l_res_atp_date is not null
                                 -- condition to avoid checking components
                                 -- if we don't have resources availability.

                                 -- get component requirements first

                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'inside atp_comp_flag Y or C');
                                END IF;
                                BEGIN
                                    MSC_ATP_REQ.Get_Comp_Requirements(
                                        p_atp_record.instance_id,
                                        p_plan_id,
                                        p_level+2,
                                        p_scenario_id,
                                        l_request_item_id, -- for time_phased_atp
                                        p_atp_record.organization_id,
                                        l_pegging_id,
                                        p_atp_record.demand_class,
                                        l_PO_qty, -- 2754446
                                        --l_net_demand,
                                        l_requested_ship_date,
  				        p_refresh_number,
                                        p_atp_record.insert_flag,
                                        p_search,
                                        p_assign_set_id,
                                        --(ssurendr) Bug 2865389 Added Routing Sequence id
                                        --and Bill sequence id for OPM fix.
                                        l_routing_seq_id,
                                        l_bill_seq_id,
                                        p_atp_record.inventory_item_id,      -- For time_phased_atp
                                        p_atp_record.atf_date,               -- For time_phased_atp
                                        p_atp_record.manufacturing_cal_code, -- For ship_rec_cal
                                        l_avail_assembly_qty,
                                        l_comp_atp_date,
                                        l_comp_atp_period,
                                        l_comp_atp_supply_demand,
                                        l_return_status,
                                        --s_cto_rearch
                                        l_get_comp_info_rec,
                                        -- CTO Phase 1 #16, #17
                                        p_atp_record.order_number,
                                        l_op_seq_id --4570421
                                        );
                                        -- Allow creation of Sales Order for CTO comps.
                                 -- 2400614 : krajan
                                 EXCEPTION
                                        WHEN MSC_ATP_PVT.G_ATO_SOURCING_MISMATCH THEN
                                             p_atp_record.error_code := MSC_ATP_PVT.ASSIGN_SET_NOT_IN_SYNC;
                              	             IF PG_DEBUG in ('Y', 'C') THEN
                              	                msc_sch_wb.atp_debug('ATP_Check: ' || 'Source Mismatch Error');
                              	             END IF;
	                                     RAISE MSC_ATP_PVT.G_ATO_SOURCING_MISMATCH;

                                        -- dsting 2764213
                                        WHEN MSC_ATP_PVT.EXC_NO_PLAN_FOUND THEN
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: Plan not found Error');
                                             END IF;
                                             --24x7
                                             if (NVL(MSC_ATP_PVT.G_DOWNTIME_HIT, 'N') = 'Y') then
               				        --bug 2854351
                                                --p_atp_record.error_code := MSC_ATP_PVT.TRY_ATP_LATER;
                                                p_atp_record.error_code := MSC_ATP_PVT.PLAN_DOWN_TIME;
                                             else
                                                p_atp_record.error_code := MSC_ATP_PVT.PLAN_NOT_FOUND;
                                             end if;
                                             RAISE MSC_ATP_PVT.EXC_NO_PLAN_FOUND;

                                        -- krajan : 2752705
                                        WHEN MSC_ATP_PVT.G_EXC_UNCOLLECTED_ITEM THEN
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug('ATP_Check: Uncollected Item');
                                             END IF;
                                             p_atp_record.error_code := MSC_ATP_PVT.ATP_ITEM_NOT_COLLECTED;
                                             RAISE MSC_ATP_PVT.G_EXC_UNCOLLECTED_ITEM;

                                        WHEN MSC_ATP_PVT.NO_MATCHING_DATE_IN_CAL THEN --bug3583705
                                             IF PG_DEBUG in ('Y', 'C') THEN
                                                msc_sch_wb.atp_debug ('ATP_Check:NO_MATCHING_DATE_IN_CAL');
                                             END IF;
                                             p_atp_record.error_code := MSC_ATP_PVT.NO_MATCHING_CAL_DATE;
                                             RAISE MSC_ATP_PVT.NO_MATCHING_DATE_IN_CAL;
                                 END;

                                 IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_avail_assembly_qty = '||l_avail_assembly_qty);
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_comp_atp_date = '||l_comp_atp_date);
                                 END IF;

				 -- Bug 1608755, in case l_comp_atp_date is null, set l_res_atp_date
				 -- to NULL so that we return single level better than going down.
                            	 IF l_comp_atp_date is NULL and l_res_atp_date is NOT NULL THEN
                                    l_res_atp_date := NULL;
                                 END IF;

                            END IF;

                            -- check the return status
                            IF l_return_status = MSC_ATP_PVT.CTO_OSS_ERROR THEN

                                 RAISE MSC_ATP_PVT.INVALID_OSS_SOURCE;
                            ELSIF l_return_status <>
                                   FND_API.G_RET_STS_SUCCESS THEN
                                RAISE FND_API.G_EXC_ERROR;
                            END IF;

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_date_this_level ='||l_atp_date_this_level);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_comp_atp_date ='||l_comp_atp_date);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'l_res_atp_date ='||l_res_atp_date);
                               msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.ship_date ='||p_atp_record.ship_date);
                            END IF;

                            -- Bug 1449555
                            IF l_comp_atp_date is NOT NULL and
                                l_res_atp_date is NOT NULL THEN
                                l_temp_date := GREATEST(l_comp_atp_date, l_res_atp_date);
                            ELSIF l_comp_atp_date is NOT NULL and
                                l_res_atp_date is NULL THEN
                                l_temp_date := l_comp_atp_date;
                            ELSIF l_comp_atp_date is NULL and
                                l_res_atp_date is NOT NULL THEN
                                l_temp_date := l_res_atp_date;
                            ELSE
                                l_temp_date := p_atp_record.ship_date;
                            END IF;

                            -- 2859130 move to next work date for forward pass
                            l_temp_date := MSC_CALENDAR.NEXT_WORK_DAY(
                               p_atp_record.organization_id,
                               p_atp_record.instance_id,
                               1,
                               l_temp_date);

                            ---bug 2798667: The p_atp_record.ship_date for option item contains ship date for
                            --- model from earlier source + atp lead time. We should compare with ship date +
                            --- atp lead time from this source and not just ship date
                            /* s_cto_rearch: do not honor ATP lead time
                            IF NVL(p_atp_record.atp_lead_time, 0) > 0 THEN
                              l_atp_lt_offset_ship_date :=
                                  MSC_CALENDAR.DATE_OFFSET(
                                  p_atp_record.organization_id,
                                  p_atp_record.instance_id,
                                  1,
                                  --GREATEST(l_comp_atp_date, l_res_atp_date),
                                  l_temp_date,
                                  NVL(p_atp_record.atp_lead_time, 0));
                            ELSE
                               l_atp_lt_offset_ship_date := l_temp_date;
                            END IF;
                            */
                            l_atp_lt_offset_ship_date := l_temp_date;

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('l_atp_lt_offset_ship_date := ' || l_atp_lt_offset_ship_date);
                            END IF;


                            ---bug 2798667: should be comparing with l_atp_lt_offset_ship_date instead of l_temp_date
                             /*IF (p_atp_record.ship_date IS NULL AND l_temp_date IS NULL) OR
                                (p_atp_record.ship_date <= l_temp_date) THEN
                            */
                            IF (p_atp_record.ship_date IS NULL AND l_atp_lt_offset_ship_date IS NULL) OR
                                (p_atp_record.ship_date <= l_atp_lt_offset_ship_date) THEN
                /*
                            IF p_atp_record.ship_date <=
                                NVL(GREATEST(l_comp_atp_date, l_res_atp_date),
                                p_atp_record.ship_date) THEN
                */

                                -- single level result is better than
                                -- going down to next level.

                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'single level results is better than multi-level');
                                END IF;


                                MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
                                                 p_plan_id,
                                                 p_atp_record.ship_date,
                                                 0,
                                                 null,
                                                 null,
                                                 null,
                                                 null,  -- Bug 3241766
                                                 --bug 3755704: Pass start date and order date
                                                 l_start_date,
                                                 l_order_date,
                                                 --null,  -- Bug 3241766
                                                 --null,  -- Bug 3241766
                                                 C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                                 PF_ITEM_INFO_REC.dest_inv_item_id); -- Bug 3293163
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'x_atp_supply_demand.level.count = '||
						x_atp_supply_demand.level.count);
                                END IF;

                            ELSE
 				-- going down is better than the results
                                -- in this level

                                -- remove what's bad
                                --- subst: remember this pegging as we might need to undo
                                --- this pegging in ATP_CHECK_SUBST
                                MSC_ATP_PVT.G_FUTURE_PEGGING_ID := l_pegging_id;

                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_pegging_tab : ' || l_atp_pegging_tab.COUNT);
                                END IF;

                                IF l_atp_pegging_tab.COUNT > 0 THEN

                                   -- Planned Pegging based AATP, l_atp_pegging_tab populated in
                                   -- MSC_AATP_REQ.Get_Forward_Material_Atp

                                   MSC_ATP_DB_UTILS.Remove_Invalid_Future_SD(l_atp_pegging_tab);
                                   l_atp_pegging_tab := MRP_ATP_PUB.Number_Arr(); --bug3581151

                                ELSE            -- IF l_atp_pegging_tab.COUNT > 0 THEN

                                   MSC_ATP_DB_UTILS.Update_Planned_Order(l_future_pegging_id,
                                                 p_plan_id,
                                                 p_atp_record.ship_date,
                                                 0,
                                                 null,
                                                 null,
                                                 null,
                                                 null,  -- Bug 3241766
                                                 --bug 3755704: Pass start date and order date
                                                 l_start_date,
                                                 l_order_date,
                                                 --null,  -- Bug 3241766
                                                 --null,  -- Bug 3241766
                                                 C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                                 PF_ITEM_INFO_REC.dest_inv_item_id); -- Bug 3293163
                                END IF;            -- IF l_atp_pegging_tab.COUNT > 0 THEN

                                --bug 2798667: This value is already in l_atp_lt_offset_ship_date
                                /* p_atp_record.ship_date :=
                                  MSC_CALENDAR.DATE_OFFSET(
                                  p_atp_record.organization_id,
                                  p_atp_record.instance_id,
                                  1,
                                  --GREATEST(l_comp_atp_date, l_res_atp_date),
                                  l_temp_date,
                                  NVL(p_atp_record.atp_lead_time, 0));
                                */
                                p_atp_record.ship_date := l_atp_lt_offset_ship_date;


                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.ship_date ='||p_atp_record.ship_date);
                                END IF;
                                -- we will say the available quantity is
                                -- exact the quantity we want to order.
                                -- although this is not correct (
                                -- it should be the quantity we get from next
                                -- level plus what we can have on the parent
                                -- level.  But now we don't want to search

                                p_atp_record.available_quantity :=
                                  p_atp_record.quantity_ordered;

                                IF p_atp_record.ship_date <= p_atp_record.atf_date THEN
                                    p_atp_record.atf_date_quantity := p_atp_record.quantity_ordered;
                                ELSE
                                    p_atp_record.atf_date_quantity := 0;
                                END IF;

                                -- bug 1247433: we don't need to update
                                -- the quantity

                                --bug 3755704: Calculate order date and start date based on new date

                                IF l_net_processing_lt > 0 THEN
                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'Calculate order date');
                                   END IF;
                                   -- since it is a make case only calendar being used is
                                   --p_atp_record.manufacturing_cal_code
                                   l_order_date := MSC_CALENDAR.DATE_OFFSET(
                                                                p_atp_record.manufacturing_cal_code,
                                                                p_atp_record.instance_id,
                                                                l_temp_date,
                                                                (-1 * l_net_processing_lt), -1);

                                ELSE
                                   IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Net process lt is zero');
                                   END IF;
                                   l_order_date := l_temp_date;
                                END IF;

                                IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_order_date := ' || l_order_date);
                                END IF;
                                -- calculate start date only if PTF_flag is enabled for the plan
                                IF (l_process_lt > 0) THEN
                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'Calculate start date');
                                   END IF;
                                   l_start_date := MSC_CALENDAR.DATE_OFFSET(
                                                                p_atp_record.manufacturing_cal_code,
                                                                p_atp_record.instance_id,
                                                                l_temp_date,
                                                                (-1 * l_process_lt), -1);
                                ELSE

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'process LT is 0');
                                   END IF;
                                   l_start_date := l_temp_date;
                                END IF;

                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_start_date := ' || l_start_date);
                                END IF;
                                --  end bug 3755704

                                MSC_ATP_DB_UTILS.Update_Planned_Order(l_pegging_id,
                                                 p_plan_id,
                                                 --bug 2798667: this should be l_temp_date
                                                 --p_atp_record.ship_date,
                                                 l_temp_date,
                                                 null,
                                                 null,
                                                 null,
                                                 null,
                                                 null,  -- Bug 3241766
                                                 --bug 3755704: populate start date and order date
                                                 l_start_date,
                                                 l_order_date,
                                                 --null,  -- Bug 3241766
                                                 --null,  -- Bug 3241766
                                                 C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                                 PF_ITEM_INFO_REC.dest_inv_item_id); -- Bug 3293163

                                -- bug 1214740
                                l_future_atp_period := l_comp_atp_period;
                                l_future_atp_supply_demand :=
                                                 l_comp_atp_supply_demand;
                                l_future_pegging_id := l_pegging_id;

                                MSC_ATP_PROC.Details_Output(l_res_atp_period,
                                               l_res_atp_supply_demand,
                                               l_future_atp_period,
                                               l_future_atp_supply_demand,
                                               l_return_status);
 			        IF PG_DEBUG in ('Y', 'C') THEN
 			           msc_sch_wb.atp_debug('ATP_Check: ' || 'OSFM Coproducts Forward ');
 			        END IF;
                                --- reset the sumamry flag back to summary flag corresponding to p_plan_id
                                MSC_ATP_PVT.G_SUMMARY_FLAG := l_summary_flag;
                            	  --- OSFM Changes: update coproduct supply
                                l_coproducts_flag := FND_Profile.value('MSC_PLAN_COPRODUCTS');
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'msc_plan_coproducts = ' || l_coproducts_flag);
                                END IF;
                                IF ((l_atp_comp_flag = 'C') OR
                                	(l_atp_comp_flag = 'Y')) AND
                               	l_coproducts_flag = 'Y' THEN

                              	  IF PG_DEBUG in ('Y', 'C') THEN
                              	     msc_sch_wb.atp_debug('ATP_Check: ' || 'Add Coproducts for item '||p_atp_record.inventory_item_id);
                              	  END IF;
                              	  MSC_ATP_PROC.Add_Coproducts(
                                                p_plan_id,
                                                p_atp_record.instance_id,
                                                p_atp_record.organization_id,
                                                --p_atp_record.inventory_item_id,
                                                l_request_item_id, -- for time_phased_atp
                                                l_temp_date,
                                                p_atp_record.demand_class,
                                                p_atp_record.quantity_ordered,
                                                l_coprod_pegging_id,
                                                C_ITEM_INFO_REC.rounding_control_type, -- 2869830
                                                p_refresh_number,    -- For summary enhancement
                                                l_transaction_id --3766179
                                   );

                                   IF PG_DEBUG in ('Y', 'C') THEN
                                      msc_sch_wb.atp_debug('ATP_Check: ' || 'After adding coproducts Forward');
                                   END IF;
                            	  END IF;

                             END IF;

                        END IF; -- (p_sched_flag = BACKWARD_SCHEDULING)

                    END IF;  -- it is a make or buy or transfer
                    j := l_sources.source_type.NEXT(j);
                END LOOP;  -- end the loop of the l_sources
                --4902658/5216528 Fix
                                /*
                 Update the pegging with the ATP+CTP Quantity of the pegging.
                 l_temp_net_demand -  l_net_demand; gives us the CTP quantity
                 */
                IF  l_substitutes_rec.inventory_item_id.Count  > 1 THEN
                   l_atp_ctp_qty := l_temp_net_demand -  l_net_demand +  l_substitutes_rec.sub_atp_qty(l_index);

                   IF ( ((l_temp_net_demand - l_net_demand) <> 0)
                      AND (l_substitutes_rec.sub_atp_qty(l_index) = 0)
                      AND (l_index >= 2) ) THEN

                   --5283809 , adding the demand in case ATP qty for substitute is 0 but CTP not zero.
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'adding the demand in case ATP qty for substitute is 0 but CTP not zero');
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'ATP QTY : ' || l_substitutes_rec.sub_atp_qty(l_index) );
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'CTP QTY : ' || l_atp_ctp_qty );
                   END IF;


                   IF NVL(MSC_ATP_PVT.G_DIAGNOSTIC_ATP,2) <> 1 THEN
                      MSC_ATP_DB_UTILS.Update_Pegging( l_substitutes_rec.pegging_id(l_index),
                                                       null,
                                                       l_atp_ctp_qty );
                   END IF;

                   l_atp_insert_rec.instance_id := p_atp_record.instance_id;
                   l_atp_insert_rec.inventory_item_id := l_substitutes_rec.pf_item_id(l_index);
                   l_atp_insert_rec.request_item_id := l_substitutes_rec.inventory_item_id(l_index);
                   l_atp_insert_rec.atf_date_quantity := l_substitutes_rec.atf_date_quantity(l_index);
                   l_atp_insert_rec.organization_id := p_atp_record.organization_id;
                   l_atp_insert_rec.identifier := p_atp_record.identifier;
                   l_atp_insert_rec.demand_source_type:=
                          nvl(p_atp_record.demand_source_type, 2);
                   l_atp_insert_rec.demand_source_header_id :=
                            nvl(p_atp_record.demand_source_header_id, -1);
                   l_atp_insert_rec.demand_source_delivery :=
                            p_atp_record.demand_source_delivery;
                   l_atp_insert_rec.quantity_ordered:= LEAST(
                                                            l_atp_ctp_qty,
                                                            l_substitutes_rec.quantity_ordered(l_index));
                   l_atp_insert_rec.requested_ship_date := p_atp_record.requested_ship_date;
                   l_atp_insert_rec.demand_class := p_atp_record.demand_class;
                   l_atp_insert_rec.refresh_number := p_refresh_number;
                   l_atp_insert_rec.order_number := p_atp_record.order_number;
                   l_atp_insert_rec.origination_type := 1;

                   MSC_ATP_DB_UTILS.Add_Mat_Demand(l_atp_insert_rec,
                              l_plan_id,
                              0,
                              l_demand_id);
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check : demand id     :' || l_demand_id );
                   END IF;

                   --5553953
                   --in order to update the demand id for the pegging line, otherwise demand will remain in the system
                   UPDATE mrp_atp_details_temp
                   SET   identifier3 = l_demand_id
                   WHERE pegging_id = l_substitutes_rec.pegging_id(l_index)
                   AND   session_id = MSC_ATP_PVT.G_SESSION_ID
                   AND   record_type = 3;

                 ELSE
                     IF NVL(MSC_ATP_PVT.G_DIAGNOSTIC_ATP,2) <> 1 THEN
                   	  MSC_ATP_DB_UTILS.Update_Pegging( l_substitutes_rec.pegging_id(l_index),
                                  null,
                                  l_atp_ctp_qty );
                     END IF;
                     update msc_demands
                        set    USING_REQUIREMENT_QUANTITY = MSC_ATP_UTILS.Truncate_Demand(l_atp_ctp_qty)  -- 5598066
                      where  demand_id = l_substitutes_rec.demand_id(l_index)
                        and    plan_id = p_plan_id
                               returning inventory_item_id
                       into l_inventory_item_id;
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check : l_atp_ctp_qty :' || l_atp_ctp_qty);
                      msc_sch_wb.atp_debug('ATP_Check : l_tem_net_dem :' || l_temp_net_demand);
                      msc_sch_wb.atp_debug('ATP_Check : l_net_demand  :' || l_net_demand);
                      msc_sch_wb.atp_debug('ATP_Check : l_sub_atp_qty :' || l_substitutes_rec.sub_atp_qty(l_index));
                      msc_sch_wb.atp_debug('ATP_Check : pegging_id    :' || l_substitutes_rec.pegging_id(l_index));
                      msc_sch_wb.atp_debug('ATP_Check : demand id     :' || l_substitutes_rec.demand_id(l_index));
                   END IF;
                   --5217510 demand id should be used from substitute record
                   IF MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                        AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN
                        update msc_alloc_demands
                           set allocated_quantity = l_atp_ctp_qty
                         where parent_demand_id = l_substitutes_rec.demand_id(l_index) --l_demand_id
                               --where parent_demand_id = l_demand_id
                           and plan_id = p_plan_id;
                   END IF;
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inventory_item_id := ' || l_inventory_item_id);
                      msc_sch_wb.atp_debug('ATP_Check: ' || ' MSC_ATP_PVT.G_SUMMARY_FLAG := ' ||  MSC_ATP_PVT.G_SUMMARY_FLAG);
                   END IF;
                   -- update summary records removed in ODS case - for summary enhancement
                   IF MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y' AND p_plan_id = -1 THEN
                      MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                         p_plan_id,
                                                         p_atp_record.organization_id,
                                                         l_inventory_item_id,
                                                         l_requested_ship_date,
                                                         null,
                                                         null,
                                                         null,
                                                         null,
                                                         null,
                                                         null,
                                                         2);
                        update /*+ INDEX(msc_atp_summary_sd MSC_ATP_SUMMARY_SD_U1) */ msc_atp_summary_sd
                           set sd_qty = sd_qty + l_atp_ctp_qty
                         where plan_id = p_plan_id
                           and sr_instance_id  = p_atp_record.instance_id
                           and inventory_item_id = l_inventory_item_id
                           and organization_id = p_atp_record.organization_id
                           and sd_date = trunc(l_requested_ship_date);
                      commit;
                   END IF;
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Substitute Loop Ends with l_index := ' || l_index);
                   END IF;
                END IF;
               END IF;
             END LOOP; -- for subs array

                  p_atp_record.request_item_id :=     l_substitutes_rec.inventory_item_id(1);
                  l_parent_pegging_id          :=     l_tmp_parent_pegging_id;
                  l_pegging_id                 :=     l_substitutes_rec.inventory_item_id(1);
                  -- Re initialize the C_item_info_rec G_item_info_rec
                  MSC_ATP_PROC.get_global_item_info(p_atp_record.instance_id,
                                                    p_plan_id,
                                                    p_atp_record.request_item_id,
                                                    p_atp_record.organization_id,
                                                    l_item_info_rec );
                		/* Make a copy */
                  C_ITEM_INFO_REC := G_ITEM_INFO_REC;

                  if l_substitutes_rec.inventory_item_id.count > 1 then
                     PF_ITEM_INFO_REC := G_ITEM_INFO_REC;
                  end if;
                  -- 4902658/5216528 ends update
		-- dsting diag_atp update the last good pegging record to make supply/demand match
		IF PG_DEBUG in ('Y', 'C') THEN
			msc_sch_wb.atp_debug('diag_atp l_pegging_id ' || l_pegging_id);
			msc_sch_wb.atp_debug('last good pegging ' || l_last_good_pegging_id);
			msc_sch_wb.atp_debug('net_demand ' || l_net_demand);
			msc_sch_wb.atp_debug('subst last good pegging ' || MSC_ATP_SUBST.G_TOP_LAST_PO_PEGGING);
		END IF;

		IF MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y'
		   AND l_last_good_pegging_id is NULL
		   AND MSC_ATP_SUBST.G_TOP_LAST_PO_PEGGING is not null
		   AND p_atp_record.top_tier_org_flag = 1
		THEN
		   l_last_good_pegging_id := MSC_ATP_SUBST.G_TOP_LAST_PO_PEGGING;
		   l_subst_existing_PO_qty := MSC_ATP_SUBST.G_TOP_LAST_PO_QTY;
		ELSE
		   l_subst_existing_PO_qty := 0;
		END IF;

		IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 AND
		   l_net_demand > 0 AND
		   l_pegging_id <> l_last_good_pegging_id
		THEN
		   -- bug 5598066   added the following to honour rounding_control_type
		      IF NVL(C_ITEM_INFO_REC.rounding_control_type, 2) = 1 THEN
                         l_net_demand_qty := FLOOR(l_net_demand_qty);
			 l_subst_existing_PO_qty := FLOOR(l_subst_existing_PO_qty);

			 IF PG_DEBUG in ('Y', 'C') THEN
			 msc_sch_wb.atp_debug('Floor of l_net_demand_qty '||l_net_demand_qty);
			 msc_sch_wb.atp_debug('Floor of l_subst_existing_PO_qty '||l_subst_existing_PO_qty);
                         END IF;
		       ELSE
                           l_net_demand_qty := trunc(l_net_demand_qty, 6);
			   l_subst_existing_PO_qty := trunc(l_subst_existing_PO_qty, 6);

			   IF PG_DEBUG in ('Y', 'C') THEN
			   msc_sch_wb.atp_debug('trunc of l_net_demand_qty '||l_net_demand_qty);
			   msc_sch_wb.atp_debug('trunc of l_subst_existing_PO_qty '||l_subst_existing_PO_qty);
                           END IF;
			END IF;

			MSC_ATP_DB_UTILS.Update_Planned_Order(l_last_good_pegging_id,
					p_plan_id,
					null,
					l_net_demand + l_subst_existing_PO_qty,
					null,
					null,
					null,
                                        null,  -- Bug 3241766
                                        null,  -- Bug 3241766
                                        null,  -- Bug 3241766
                                        C_ITEM_INFO_REC.dest_inv_item_id,   -- Bug 3293163
                                        PF_ITEM_INFO_REC.dest_inv_item_id,  -- Bug 3293163
					3);
		END IF;

                MSC_ATP_PVT.G_SUMMARY_FLAG := l_summary_flag;
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'MSC_ATP_PVT.G_SUMMARY_FLAG := ' || MSC_ATP_PVT.G_SUMMARY_FLAG);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'l_demand_id := ' || l_demand_id); --5211558
                END IF;

                --- adjust the demand here
                IF (l_net_demand > 0) and (p_search =1) and (p_parent_pegging_id is null) THEN

		  -- dsting diag_atp. do not adjust the demands for diagnostic ATP

		  IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP <> 1 THEN
                    update msc_demands
                    set    USING_REQUIREMENT_QUANTITY =
                           MSC_ATP_UTILS.Truncate_Demand((USING_REQUIREMENT_QUANTITY-l_net_demand))  -- 5598066
                    where demand_id = l_demand_id
                    and plan_id = p_plan_id
                    returning  inventory_item_id into l_inventory_item_id;

                    /* time_phased_atp*/
                    --5211558 we want to update the demands only in first pass and not in further passes
                    IF l_time_phased_atp = 'Y' and MSC_ATP_PVT.G_OPTIONAL_FW is null THEN
                         --using the same insert rec we prepared earlier
                         l_atp_insert_rec.quantity_ordered :=  p_atp_record.quantity_ordered - l_net_demand;
                         l_atp_insert_rec.requested_date_quantity := l_atp_insert_rec.quantity_ordered;
                         l_atp_insert_rec.atf_date_quantity := GREATEST(NVL(p_atp_record.atf_date_quantity,
                                                                                0), 0); --7185041
                         MSC_ATP_PF.Increment_Bucketed_Demands_Qty(
                                l_atp_insert_rec,
                                p_plan_id,
                                l_demand_id,
                                l_return_status
                         );
                         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                                msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured in procedure Increment_Bucketed_Demands_Qty');
                           END IF;
                           RAISE FND_API.G_EXC_ERROR;
                         END IF;
                    ELSIF MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                         AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN

                         update msc_alloc_demands
                         set allocated_quantity  = allocated_quantity -l_net_demand
                         where parent_demand_id = l_demand_id
                         and   plan_id = p_plan_id;
                    END IF;

                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'Check This scenario in backward case');
                       msc_sch_wb.atp_debug('ATP_Check: ' || 'MSC_ATP_PVT.G_SUMMARY_FLAG' || MSC_ATP_PVT.G_SUMMARY_FLAG);
                    END IF;

                    -- update summary records removed in ODS cases - for summary enhancement
                    IF MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y' AND p_plan_id = -1 THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'in sumary mode, update msc-demands');
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inventory_item_id := ' || l_inventory_item_id);
                           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date := ' || l_requested_ship_date);
                        END IF;

                        MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                                p_plan_id,
                                                                p_atp_record.organization_id,
                                                                l_inventory_item_id,
                                                                l_requested_ship_date,
                                                                null,
                                                                null,
                                                                null,
                                                                null,
							        null,
 							        null,
                                                                2);

                        update /*+ INDEX(msc_atp_summary_sd MSC_ATP_SUMMARY_SD_U1) */ msc_atp_summary_sd
                        set sd_qty = sd_qty + l_net_demand
                        where plan_id = p_plan_id
                        and  inventory_item_id = l_inventory_item_id
                        and  sr_instance_id = p_atp_record.instance_id
                        and  organization_id = p_atp_record.organization_id
                        and  sd_date = trunc(l_requested_ship_date);
                        commit;
                    END IF;

   		  END IF; -- not DIAGNOSTIC ATP

                END IF;

                -- now we have the request date quantity from next level

                -- cchen : 1238941
                -- p_atp_record.requested_date_quantity:=
                --     p_atp_record.quantity_ordered-l_net_demand;

                p_atp_record.combined_requested_date_qty:=
                    p_atp_record.quantity_ordered-l_net_demand;

                p_atp_record.requested_date_quantity:=
                    p_atp_record.quantity_ordered-l_net_demand-
                    greatest(l_sub_requested_date_quantity,0);

               /* rajjain changes for re-review comments
                  removed check for rule based AATP as this should be set
                  for all scenarios
               IF MSC_ATP_PVT.G_ALLOCATION_METHOD = 2 THEN
                   p_atp_record.used_available_quantity :=
                     l_used_available_quantity;
               END IF; --bug3409973*/
                p_atp_record.used_available_quantity :=
                    l_used_available_quantity;

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.requested_date_quantity:'||
                    	p_atp_record.requested_date_quantity);
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.combined_requested_date_qty:'||
			p_atp_record.combined_requested_date_qty);
	           msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.atp_date_quantity_this_level:'||
			l_used_available_quantity);
                END IF;

                -- now we want to find the future date and quantity
                -- if we still have net demand, otherwise the atp date
                -- and quantity will be the same as the request date and
                -- request date quantity.


                IF (l_net_demand = 0) THEN
                    /* s_cto_rearch: Do not honor atp lead time
                    p_atp_record.ship_date :=  MSC_CALENDAR.DATE_OFFSET
                                 (p_atp_record.organization_id,
                                  p_atp_record.instance_id,
                                  1,
                                  l_requested_ship_date,
                                  NVL(p_atp_record.atp_lead_time, 0));
                    */
                    p_atp_record.ship_date := l_requested_ship_date;
                    -- cchen : 1238941
                    -- p_atp_record.available_quantity :=
                    --    p_atp_record.requested_date_quantity;

                    p_atp_record.available_quantity :=
                        p_atp_record.combined_requested_date_qty;

                    -- Update bucketed demands
                    --5211558 we want to update the demands only in first pass and last pass
                    -- and not in any mid passes as this will be exit point
                    IF l_time_phased_atp = 'Y' and (((MSC_ATP_PVT.G_OPTIONAL_FW is null
                                                      OR G_NUMBER_OF_ITERATIONS = G_LOOP_COUNT)
                                                      and G_FORWARD_ATP = 'Y') OR
                                                      (G_FORWARD_ATP = 'N'))THEN
                            l_atp_insert_rec.quantity_ordered :=  p_atp_record.quantity_ordered;
                            l_atp_insert_rec.requested_date_quantity := p_atp_record.combined_requested_date_qty;
                            l_atp_insert_rec.atf_date_quantity := GREATEST(NVL(p_atp_record.atf_date_quantity,
                                                                                   0), 0); --7185041
                            MSC_ATP_PF.Increment_Bucketed_Demands_Qty(
                                   l_atp_insert_rec,
                                   p_plan_id,
                                   l_demand_id,
                                   l_return_status
                            );
                            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                              IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured in procedure Increment_Bucketed_Demands_Qty');
                              END IF;
                              RAISE FND_API.G_EXC_ERROR;
                            END IF;
                    END IF;
                ELSE
                    -- if this is the top node, we need to turn on a flag so
                    -- that we can find the future date.

                    IF p_search = 1 AND p_parent_pegging_id is null THEN
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('ATP_Check: ' || 'not enough, set G_FIND_FUTURE_DATE=Y');
                      END IF;

                      -- 1275751
                      p_atp_record.error_code := ATP_REQ_DATE_FAIL;

                      -- 1228607
                      --- This code has been moved before stealing
                      ---  so that demand record is correct before stealing takes place
                      /*update msc_demands
                      set    USING_REQUIREMENT_QUANTITY =
                             (USING_REQUIREMENT_QUANTITY-l_net_demand)
                      where demand_id = l_demand_id
                      and plan_id = p_plan_id;*/

                      MSC_ATP_PVT.G_FIND_FUTURE_DATE := 'Y';
                      MSC_ATP_PVT.G_ASSEMBLY_LINE_ID := p_atp_record.Identifier;
                      MSC_ATP_PVT.G_COMP_LINE_ID := p_atp_record.Identifier;
                    ELSIF p_search = 1 AND
                      --subst: In case of substitution we do not want to adjust the planned order for top org
                      NOT (NVL(p_atp_record.original_item_flag, 2) = 1 AND
                                    MSC_ATP_PVT.G_SUBSTITUTION_FLAG = 'Y' AND
                                    p_atp_record.top_tier_org_flag = 1) THEN
                      --diag_atp: we do not adjust the demand in case of diagnostic ATP, because we place the
                      -- same demand as we need.
                      IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP <> 1 THEN
                         -- adjust the demand record
                         IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('ATP_Check: ' || 'Check this scenario, bacward case 2');
                            msc_sch_wb.atp_debug('ATP_Check: ' || 'adjust demand record, l_parent_pegging_id = '||l_parent_pegging_id);
                         END IF;
                         /* bug 1235225
                         update mrp_atp_details_temp
                         set    supply_demand_quantity =
                                (supply_demand_quantity - l_net_demand)
                         where  session_id = MSC_ATP_PVT.G_SESSION_ID
                         and    pegging_id = l_parent_pegging_id
                         and    record_type = 3;
                         */

                         SELECT supply_demand_quantity
                         INTO   l_peg_qty
                         FROM   mrp_atp_details_temp
                         WHERE  session_id = MSC_ATP_PVT.G_SESSION_ID
                         AND    pegging_id = l_parent_pegging_id
                         AND    record_type = 3;

                         MSC_ATP_DB_UTILS.Update_Pegging(l_parent_pegging_id,
                                        null,
                                        (l_peg_qty - l_net_demand));

                         IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('ATP_Check: ' || 'adjust demand quantity, l_demand_id = '||l_demand_id);
                         END IF;

			-- dsting diag_atp do not adjust the demands for diagnostic atp
			IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP <> 1 THEN

                         update msc_demands
                         set    USING_REQUIREMENT_QUANTITY =
                                MSC_ATP_UTILS.Truncate_Demand((USING_REQUIREMENT_QUANTITY-l_net_demand)) -- 5598066
                         where demand_id = l_demand_id
                         and plan_id = p_plan_id
                         returning inventory_item_id into l_inventory_item_id;

                        /* time_phased_atp
                           Update PF Bucketed Demands to qty we could find in backward case*/
                        --5211558 we want to update the demands only in first pass and not in further passes
                        IF l_time_phased_atp = 'Y' and MSC_ATP_PVT.G_OPTIONAL_FW is null THEN
                                MSC_ATP_PF.Update_PF_Bucketed_Demands(
                                        p_plan_id,
                                        l_demand_id,
                                        l_requested_ship_date,
                                        p_atp_record.atf_date,
                                        p_atp_record.quantity_ordered,
                                        p_atp_record.combined_requested_date_qty,
                                        l_return_status
                                );
                                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                   IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured in procedure Update_PF_Bucketed_Demands');
                                   END IF;
                                   RAISE FND_API.G_EXC_ERROR;
                                END IF;
                         --alloc_pp
                         ELSIF MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                             AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN

                              update msc_alloc_demands
                              set allocated_quantity = allocated_quantity - l_net_demand
                              where parent_demand_id = l_demand_id
                              and   plan_id = p_plan_id;
                         END IF;

                         IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('ATP_Check: ' || 'Check this Flag MSC_ATP_PVT.G_SUMMARY_FLAG := ' || MSC_ATP_PVT.G_SUMMARY_FLAG);
                         END IF;

                        -- update summary records removed in ODS cases - for summary enhancement
                         IF MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y' AND p_plan_id = -1 THEN
                              IF PG_DEBUG in ('Y', 'C') THEN
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'update sd table for component');
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'in sumary mode, update msc-demands');
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inventory_item_id := ' || l_inventory_item_id);
                                 msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date := ' || l_requested_ship_date);
                              END IF;

                              MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                                   p_plan_id,
                                                                   p_atp_record.organization_id,
                                                                   l_inventory_item_id,
                                                                   l_requested_ship_date,
                                                                   null,
                                                                   null,
                                                                   null,
                                                                   null,
								   null,
								   null,
                                                                   2);

                              update /*+ INDEX(msc_atp_summary_sd MSC_ATP_SUMMARY_SD_U1) */ msc_atp_summary_sd
                              set sd_qty = sd_qty + l_net_demand
                              where plan_id = p_plan_id
                              and  inventory_item_id = l_inventory_item_id
                              and  sr_instance_id = p_atp_record.instance_id
                              and  organization_id = p_atp_record.organization_id
                              and  sd_date = trunc(l_requested_ship_date);
                              commit;
                         END IF;

			END IF; -- not DIAGNOSTIC ATP
                      END IF;
                    ---subst
                    --ELSE
                    ELSIF p_search = 2 THEN


                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('ATP_Check: ' || 'forward l_net_demand = '||l_net_demand);
                         msc_sch_wb.atp_debug('ATP_Check: ' || 'forward p_atp_record.ship_date = '||p_atp_record.ship_date);
                         msc_sch_wb.atp_debug('ATP_Check: ' || 'forward p_atp_record.quantity_ordered = '||
						p_atp_record.quantity_ordered);
                         msc_sch_wb.atp_debug('ATP_Check: ' || 'Check this scenario, forward case');
                      END IF;
                      -- future case

                      -- bug 1302394: we should adjust the date
                      -- of the demand which causes this planned order
                      -- as well so that they can cancel each other.

                      -- bug 1531429 : if p_atp_record.ship_date is null, update
		      -- USING_ASSEMBLY_DEMAND_DATE with same value

                      -- 1421413: don't update the quantity

                     IF p_atp_record.ship_date IS NOT NULL THEN
                         -- Update only if p_atp_record.ship_date is NOT NULL

			-- dsting ATO 2465370
			-- for override case for CTO, do not adjust demand date in msc_demands
                        --bug 3564511: always update the date on PO demands
		        --IF NVL(G_LINE_OVERRIDE_FLAG, 'N') = 'N'
			   --OR (NVL(C_ITEM_INFO_REC.cto_source_org_id, -1) <> p_atp_record.organization_id
			   --AND p_parent_pegging_id is not null)
			--THEN
                                --bug 3328421: update actual date
				--update mrp_atp_details_temp set required_date =
				update mrp_atp_details_temp set actual_supply_demand_date =
					TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY
				where session_id = MSC_ATP_PVT.G_SESSION_ID
				and pegging_id = l_parent_pegging_id
				and record_type = 3;

				IF PG_DEBUG in ('Y','C') THEN
					msc_sch_wb.atp_debug('ATO update details_temp 12: ' || l_parent_pegging_id || ' date: ' || p_atp_record.ship_date);
				END IF;

                	        UPDATE msc_demands
        	                --SET  USING_ASSEMBLY_DEMAND_DATE = NVL(p_atp_record.ship_date,
			        --					USING_ASSEMBLY_DEMAND_DATE)
                        	-- For bug 2259824, move the demand to the end of day
                        	----start changes for plan by request date
                        	SET    USING_ASSEMBLY_DEMAND_DATE =
                        	           DECODE(ORIGINATION_TYPE,
                        	                  6,  decode(MSC_ATP_PVT.G_PLAN_INFO_REC.schedule_by_date_type,
                        	                             MSC_ATP_PVT.G_SCHEDULE_SHIP_DATE_LEGEND,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                             MSC_ATP_PVT.G_SCHEDULE_ARRIVAL_DATE_LEGEND,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                             MSC_ATP_PVT.G_PROMISE_SHIP_DATE_LEGEND,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                             MSC_ATP_PVT.G_PROMISE_ARRIVAL_DATE_LEGEND,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                             MSC_ATP_PVT.G_REQUEST_SHIP_DATE_LEGEND,
                        	                                 l_original_req_ship_date,
                        	                             MSC_ATP_PVT.G_REQUEST_ARRIVAL_DATE_LEGEND,
                        	                                 l_original_req_ship_date,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY),
                        	                  30, decode(MSC_ATP_PVT.G_PLAN_INFO_REC.schedule_by_date_type,
                        	                             MSC_ATP_PVT.G_SCHEDULE_SHIP_DATE_LEGEND,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                             MSC_ATP_PVT.G_SCHEDULE_ARRIVAL_DATE_LEGEND,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                             MSC_ATP_PVT.G_PROMISE_SHIP_DATE_LEGEND,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                             MSC_ATP_PVT.G_PROMISE_ARRIVAL_DATE_LEGEND,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                             MSC_ATP_PVT.G_REQUEST_SHIP_DATE_LEGEND,
                        	                                 l_original_req_ship_date,
                        	                             MSC_ATP_PVT.G_REQUEST_ARRIVAL_DATE_LEGEND,
                        	                                 l_original_req_ship_date,
                        	                                 TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY),
                        	                  TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY),
                        	       schedule_ship_date =
                        	           DECODE(ORIGINATION_TYPE,
                        	                  6,  TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                  30, TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                  NULL),
                        	       promise_ship_date =
                        	           DECODE(ORIGINATION_TYPE,
                        	                  6,  TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                  30, TRUNC(p_atp_record.ship_date) + MSC_ATP_PVT.G_END_OF_DAY,
                        	                  NULL)
                		--end changes for plan by request date
                		WHERE  demand_id = l_demand_id
	                        AND    plan_id = p_plan_id
                        	returning inventory_item_id into l_inventory_item_id;
                	        IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('demand_id: ' || l_demand_id);
        	                   msc_sch_wb.atp_debug('ATP_Check: ' || 'number of rows updated := ' || SQL%ROWCOUNT);
	                        END IF;

                                /* time_phased_atp*/
                                --5211558 not needed here as this is executed in forward pass
                                IF l_time_phased_atp = 'Y' THEN
                                        MSC_ATP_PF.Move_PF_Bucketed_Demands(
                                                p_plan_id,
                                                l_demand_id,
                                                p_atp_record.requested_ship_date,
                                                p_atp_record.ship_date,
                                                NULL,
                                                NULL,
                                                p_atp_record.atf_date,
                                                NULL, -- pass atf_date_qty as null
                                                l_return_status,
                                                NULL --bug3397904
                                        );
                                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                                IF PG_DEBUG in ('Y', 'C') THEN
                                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'Error occured in procedure Move_PF_Bucketed_Demands');
                                                END IF;
                                                RAISE FND_API.G_EXC_ERROR;
                                        END IF;
                         	--alloc_pp
                         	ELSIF MSC_ATP_PVT.G_INV_CTP = 4 and MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y'
                            	   AND MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 AND MSC_ATP_PVT.G_ALLOCATION_METHOD = 1 THEN
                                   update msc_alloc_demands
                                   set demand_date  = p_atp_record.ship_date
                                   where parent_demand_id = l_demand_id
                                   and   plan_id = p_plan_id;
                         	END IF;

                         	IF PG_DEBUG in ('Y', 'C') THEN
                            	   msc_sch_wb.atp_debug('ATP_Check: ' || 'inventory_item_id := ' || l_inventory_item_id);
                         	END IF;
                            -- update summary records removed in ODS cases - for summary enhancement
                            IF (MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y') AND (  SQL%ROWCOUNT > 1) AND p_plan_id = -1 THEN

                                IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'old and new dates are  not same');
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Update summary for old date');
                                END IF;
                                MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                                        p_plan_id,
                                                                        p_atp_record.organization_id,
                                                                        l_inventory_item_id,
                                                                        l_requested_ship_date,
                                                                        null,
                                                                        null,
                                                                        null,
                                                                        null,
                                                                        null,
                                                                        null,
                                                                        2);


                                UPDATE /*+ INDEX(msc_atp_summary_sd MSC_ATP_SUMMARY_SD_U1) */ MSC_ATP_SUMMARY_SD
                                set sd_qty = (sd_qty + p_atp_record.quantity_ordered)
                                where sr_instance_id = p_atp_record.instance_id and
                                inventory_item_id = l_inventory_item_id and
                                organization_id = p_atp_record.organization_id and
                                sd_date = trunc(l_requested_ship_date) and
                                plan_id = p_plan_id;

                                commit;

                                --- if record exists then update
                                IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('ATP_Check: ' || 'update the qty on new date ');
                                END IF;
                                MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                                        p_plan_id,
                                                                        p_atp_record.organization_id,
                                                                        l_inventory_item_id,
                                                                        p_atp_record.ship_date,
                                                                        null,
                                                                        null,
                                                                        null,
                                                                        null,
                                                                        null,
                                                                        null,
                                                                        2);

                                update /*+ INDEX(msc_atp_summary_sd MSC_ATP_SUMMARY_SD_U1) */ msc_atp_summary_sd
                                set sd_qty = sd_qty - p_atp_record.quantity_ordered
                                where plan_id = p_plan_id and
                                sr_instance_id = p_atp_record.instance_id and
                                inventory_item_id = l_inventory_item_id and
                                organization_id = p_atp_record.organization_id and
                                sd_date = trunc(p_atp_record.ship_date);

                                IF SQL%NOTFOUND THEN
                                    --  record doesn't exists. insert the record
                                    IF PG_DEBUG in ('Y', 'C') THEN
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'insert qty on new date');
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'plan_id := ' || p_plan_id);
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inventory_item_id := ' || l_inventory_item_id);
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'organization_id := ' || p_atp_record.organization_id);
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'instance_id := ' || p_atp_record.instance_id);
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'ship_date := ' || p_atp_record.ship_date);
                                        msc_sch_wb.atp_debug('ATP_Check: ' || 'quantity_ordered := ' || p_atp_record.quantity_ordered);
                                    END IF;
                                    BEGIN
                                        MSC_ATP_DB_UTILS.INSERT_SUMMARY_SD_ROW(p_plan_id,
                                        p_atp_record.instance_id,
                                        p_atp_record.organization_id,
                                        l_inventory_item_id,
                                        p_atp_record.ship_date,
                                        -1 * p_atp_record.quantity_ordered,
                                        '@@@');

                                    END;
                                END IF; --- if sql%notfound
                                commit;
                            END IF;

			--END IF; -- end changes for cto override
		     END IF;

		      MSC_ATP_PROC.Details_Output(l_future_atp_period,
                     	             l_future_atp_supply_demand,
                     	             x_atp_period,
                     	             x_atp_supply_demand,
                     	             l_return_status);

                    END IF;
                END IF;
              END IF; -- end if p_search = BACKWARD_SCHEDULING and
                      -- l_requested_ship_date < sysdate.  bug 1124538

            END IF;  -- end if net_demand

        END IF;  -- end if atp_flag = 'Y'

    ELSE
        -- doing atp check in an vendor site

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'do atp check at a supplier site');
        END IF;

        l_requested_ship_date := p_atp_record.requested_ship_date;
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date := ' || l_requested_ship_date);
        END IF;
        -- get the following information
        -- requested_date_quantity
        -- atp_date_this_level
        -- atp_date_quantity_this_level

        /* Modularize Item and Org Info */
        -- Re-Use info instead of making unnecessary call.
        ---bug 2374548: C_ITEM_INFO_rec is set only in org part and not in suppplier part
        --l_inv_item_id := C_ITEM_INFO_REC.dest_inv_item_id;
        IF NVL(G_ITEM_INFO_REC.sr_inv_item_id, 0) = p_atp_record.inventory_item_id THEN
            l_inv_item_id := G_ITEM_INFO_REC.dest_inv_item_id;
        ELSE
            MSC_ATP_PROC.get_global_item_info(p_atp_record.instance_id,
                                            --bug 3917625: read attributes from planned data
                                            -- -1,
                                            p_plan_id,
                                            p_atp_record.inventory_item_id,
                                            p_atp_record.organization_id,
                                            l_item_info_rec  );
            l_inv_item_id := G_ITEM_INFO_REC.dest_inv_item_id;

        END IF;

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inv_item_id := ' || l_inv_item_id);
        END IF;

        /* Modularize Item and Org Info */

        IF (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND (MSC_ATP_PVT.G_HIERARCHY_PROFILE = 2) THEN
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('ATP_Check: ' || 'G_HIERARCHY_PROFILE = 2');
               END IF;
              p_atp_record.demand_class :=
                  MSC_AATP_FUNC.Get_Hierarchy_Demand_Class(MSC_ATP_PVT.G_PARTNER_ID,
                           MSC_ATP_PVT.G_PARTNER_SITE_ID,
                           l_inv_item_id,
                           p_atp_record.organization_id,
                           p_atp_record.instance_id,
                           l_requested_ship_date,
                           NULL, -- level_id
                           p_atp_record.Demand_Class);
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'after getting the dummy demand class');
                 msc_sch_wb.atp_debug('ATP_Check: ' || 'p_atp_record.demand_class = '||p_atp_record.demand_class);
              END IF;

              --diag_atp
              l_allocation_rule_name := MSC_ATP_PVT.G_ALLOCATION_RULE_NAME;
        END IF;

        -- Bug 1410591, we need to consider processing lead time also similar
        -- to planning.
        ---- EFTC changes add preprocessing lead time to the lead time
        l_sysdate := sysdate;

        l_atp_request_date := l_requested_ship_date;
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_request_date := ' || l_atp_request_date);
        END IF;
        -- Supplier Capacity and Lead Time (SCLT) changes
        -- Fixed + Variable is discontinued, Instead item's processing lead time
        -- essentially full_lead_time is used. Initialize local variables.

        l_process_lt := p_atp_record.atp_lead_time;
        l_pre_pro_lt := MSC_ATP_PVT.G_ITEM_INFO_REC.pre_pro_lt;
        -- End Supplier Capacity and Lead Time changes
        /* 3316028 (Enforce Pur LT) - No need to to PTF/sysdate checks here as these have already been done
                before calling this */
        l_atp_ship_date := l_requested_ship_date;
        /*
        IF p_search = BACKWARD_SCHEDULING THEN
           l_atp_ship_date := l_requested_ship_date;

        ELSIF p_search = FORWARD_SCHEDULING THEN
           --diag_atp, Supplier Capacity and Lead Time (SCLT) changes
           IF p_atp_record.atp_lead_time > 0 THEN
               /* we know the req date but we dont know whether (req date - (pre + process lead time)) < sysdate or not.
                  IF (req date - (pre + process lead time)) < sysdate then earlierst we can ship is
                  (sysdate + lead time) */
             --  Supplier Capacity and Lead Time (SCLT) changes
             -- First do the Pre-Processing Lead Time Offset in Forward Case.
        /*     IF l_pre_pro_lt > 0 THEN
                /* ship_rec_cal
                l_dock_date := MSC_CALENDAR.DATE_OFFSET(p_atp_record.organization_id,
                                                           p_atp_record.instance_id, 1,
                                                           l_sysdate,
                                                           l_pre_pro_lt);*/
        /*        l_dock_date := MSC_CALENDAR.DATE_OFFSET(
                                        p_atp_record.manufacturing_cal_code,
                                        p_atp_record.instance_id,
                                        l_sysdate,
                                        l_pre_pro_lt, 1);

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'After pre-process Lead Time Offset ' );
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'After atp dock date = '||
                    to_char(l_dock_date, 'DD-MON-YYYY'));
                END IF;
              ELSE
                l_dock_date := l_sysdate;
              END IF;
              -- Next do the Processing lead time offset in Forward Case using Plan Owning Org's calendar.
              IF p_atp_record.atp_lead_time > 0 THEN
                  /* ship_rec_cal
                  l_dock_date := MSC_CALENDAR.DATE_OFFSET(G_PLAN_INFO_REC.organization_id,
                                                                  G_PLAN_INFO_REC.sr_instance_id, 1,
                                                                  l_dock_date,
                                                                  p_atp_record.atp_lead_time);*/
        /*          l_dock_date := MSC_CALENDAR.DATE_OFFSET(
                                        p_atp_record.manufacturing_cal_code,
                                        G_PLAN_INFO_REC.sr_instance_id,
                                        l_dock_date,
                                        p_atp_record.atp_lead_time, 1);
              END IF;
              IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'After Process Lead Time Offset ' );
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'After atp dock date = '||
                       to_char(l_dock_date, 'DD-MON-YYYY'));
              END IF;
              -- End  Supplier Capacity and Lead Time changes
              l_atp_ship_date := GREATEST(l_dock_date, l_requested_ship_date, MSC_ATP_PVT.G_PTF_DATE);
           ELSE
               l_atp_ship_date := GREATEST(l_sysdate,  MSC_ATP_PVT.G_PTF_DATE, l_requested_ship_date);
           END IF;
        END IF;
        3316028 (Enforce Pur LT) - changes end */
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_request_date := ' || l_atp_request_date);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_ship_date := ' || l_atp_ship_date);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'G_PTF_DATE := ' || MSC_ATP_PVT.G_PTF_DATE);
        END IF;

        --diag_atp
        /* IF p_search = BACKWARD_SCHEDULING AND
           ((l_atp_request_date < l_sysdate) OR (l_requested_ship_date < MSC_ATP_PVT.G_PTF_DATE)) THEN
                l_requested_date_quantity := 0;
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ATP_Check: ' || 'Sys date, ptf check failed for supplier');
                END IF;
        ELSE
        */
           --  Supplier Capacity and Lead Time (SCLT) changes
           IF (g_sup_cap_cum_date IS NULL) THEN
                g_sup_cap_cum_date := MSC_ATP_PVT.G_PLAN_INFO_REC.plan_start_date;
           END IF;
           IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('ATP_Check: ' || 'Plan Id := ' || MSC_ATP_PVT.G_PLAN_INFO_REC.plan_id);
                msc_sch_wb.atp_debug('ATP_Check: ' || 'Plan Start Date := ' ||
                                           MSC_ATP_PVT.G_PLAN_INFO_REC.plan_start_date);
                msc_sch_wb.atp_debug('ATP_Check: ' || 'g_sup_cap_cum_date := ' || g_sup_cap_cum_date);
           END IF;


           -- ship_rec_cal changes begin
           l_sup_atp_info_rec.instance_id                       := p_atp_record.instance_id;
           l_sup_atp_info_rec.plan_id                           := p_plan_id;
           l_sup_atp_info_rec.level                             := p_level + 1;
           l_sup_atp_info_rec.identifier                        := p_atp_record.identifier;
           l_sup_atp_info_rec.scenario_id                       := p_scenario_id;
           l_sup_atp_info_rec.inventory_item_id                 := l_inv_item_id;
           l_sup_atp_info_rec.organization_id                   := p_atp_record.organization_id;
           l_sup_atp_info_rec.supplier_id                       := p_atp_record.supplier_id;
           l_sup_atp_info_rec.supplier_site_id                  := p_atp_record.supplier_site_id;
           l_sup_atp_info_rec.requested_date                    := l_atp_ship_date;
           l_sup_atp_info_rec.quantity_ordered                  := p_atp_record.quantity_ordered;
           l_sup_atp_info_rec.demand_class                      := p_atp_record.demand_class;
           l_sup_atp_info_rec.insert_flag                       := p_atp_record.insert_flag;
           l_sup_atp_info_rec.requested_date_quantity           := null;
           l_sup_atp_info_rec.atp_date_this_level               := null;
           l_sup_atp_info_rec.atp_date_quantity_this_level      := null;
           l_sup_atp_info_rec.shipping_cal_code                 := p_atp_record.shipping_cal_code;
           l_sup_atp_info_rec.receiving_cal_code                := p_atp_record.receiving_cal_code;
           l_sup_atp_info_rec.manufacturing_cal_code            := p_atp_record.manufacturing_cal_code;
           l_sup_atp_info_rec.intransit_cal_code                := p_atp_record.intransit_cal_code;
           l_sup_atp_info_rec.sup_cap_cum_date                  := g_sup_cap_cum_date;
           l_sup_atp_info_rec.sysdate_seq_num                   := l_sysdate_seq_num;
           l_sup_atp_info_rec.sup_cap_type                      := l_sup_cap_type;
           l_sup_atp_info_rec.refresh_number                    := p_refresh_number;
           -- For CTO rearch
           l_sup_atp_info_rec.base_item_id                      := p_atp_record.base_model_id;
           l_sup_atp_info_rec.bom_item_type                     := p_atp_record.bom_item_type;
           l_sup_atp_info_rec.rep_ord_flag                      := p_atp_record.rep_ord_flag;
           -- Enforce Pur LT - pass last cap date as it has been passed to the ATP_check for supplier case
           l_sup_atp_info_rec.last_cap_date                     := p_atp_record.last_cap_date;

           MSC_ATP_REQ.Get_Supplier_Atp_Info(
                        l_sup_atp_info_rec,
                        x_atp_period,
                        x_atp_supply_demand,
                        l_return_status);

           l_requested_date_quantity           := l_sup_atp_info_rec.requested_date_quantity;
           l_atp_date_this_level               := l_sup_atp_info_rec.atp_date_this_level;
           l_atp_date_quantity_this_level      := l_sup_atp_info_rec.atp_date_quantity_this_level;
           -- ship_rec_cal changes end

        -- bug 1512366
        p_atp_record.requested_ship_date:=l_requested_ship_date;

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'after call supplier, x_atp_supply_demand'||x_atp_supply_demand.supplier_id.COUNT);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_date_this_level := ' || l_atp_date_this_level);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_date_quantity := ' || l_requested_date_quantity);
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_date_quantity_this_level := ' || l_atp_date_quantity_this_level);
        END IF;
        IF l_requested_date_quantity >= p_atp_record.quantity_ordered THEN

            -- we meet the requirements!!!
            p_atp_record.requested_date_quantity:=l_requested_date_quantity;
            p_atp_record.ship_date := l_atp_date_this_level;
            p_atp_record.available_quantity:=l_atp_date_quantity_this_level;

        ELSE

            -- we cannot meet the requirements, so we provide
            -- the information at this level
            p_atp_record.requested_date_quantity:=l_requested_date_quantity;
            p_atp_record.ship_date := l_atp_date_this_level;
            p_atp_record.available_quantity:=l_atp_date_quantity_this_level;
            p_atp_record.error_code := ATP_REQ_QTY_FAIL;

        END IF;

        -- add pegging info for this demand

        -- for performance reason, we call these function here and
        -- then populate the pegging tree with the values

        /* Modularize Item and Org Info */
        -- Re-Use info instead of making unnecessary call.
        ---bug 2374548: C_ITEM_INFO_rec is set only in org part and not in suppplier part
        --l_inv_item_name := C_ITEM_INFO_REC.item_name;
        IF NVL(G_ITEM_INFO_REC.sr_inv_item_id, 0) = p_atp_record.inventory_item_id THEN
            l_inv_item_name := G_ITEM_INFO_REC.item_name;
        ELSE
            MSC_ATP_PROC.get_global_item_info(p_atp_record.instance_id,
                                            --3917625: Read data from plan output
                                            -- -1,
                                            p_plan_id,
                                            p_atp_record.inventory_item_id,
                                            p_atp_record.organization_id,
                                            l_item_info_rec  );
            l_inv_item_name := G_ITEM_INFO_REC.item_name;
        END IF;

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inv_item_name := ' || l_inv_item_name);
        END IF;

        /*l_inv_item_name := MSC_ATP_FUNC.get_inv_item_name(p_atp_record.instance_id,
                                      p_atp_record.inventory_item_id,
                                      p_atp_record.organization_id);
         Modularize Item and Org Info */

        l_supplier_name := MSC_ATP_FUNC.get_supplier_name(p_atp_record.instance_id,
                                             p_atp_record.supplier_id);
        l_supplier_site_name :=
            MSC_ATP_FUNC.get_supplier_site_name(p_atp_record.instance_id,
                                   p_atp_record.supplier_site_id);

        l_pegging_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
        l_pegging_rec.order_line_id:= MSC_ATP_PVT.G_ORDER_LINE_ID;
        l_pegging_rec.parent_pegging_id:= p_parent_pegging_id;
        l_pegging_rec.atp_level:= p_level;
        l_pegging_rec.inventory_item_id := p_atp_record.inventory_item_id;
        l_pegging_rec.inventory_item_name := l_inv_item_name;
        l_pegging_rec.supplier_id := p_atp_record.supplier_id;
        l_pegging_rec.supplier_name := l_supplier_name;
        l_pegging_rec.supplier_site_id := p_atp_record.supplier_site_id;
        l_pegging_rec.supplier_site_name := l_supplier_site_name;
        l_pegging_rec.resource_id := NULL;
        l_pegging_rec.resource_code := NULL;
        l_pegging_rec.department_id := NULL;
        l_pegging_rec.department_code := NULL;
        l_pegging_rec.identifier1:= p_atp_record.instance_id;
        l_pegging_rec.identifier2:= p_plan_id;
        l_pegging_rec.identifier3 := -1;
        l_pegging_rec.scenario_id:= p_scenario_id;
        l_pegging_rec.supply_demand_source_type:= 1;
        ---- summary

        IF (p_search = 1) THEN
           l_pegging_rec.supplier_atp_date :=  l_requested_ship_date;
        ELSE
           l_pegging_rec.supplier_atp_date := l_atp_date_this_level;
        END IF;
        l_pegging_rec.dest_inv_item_id := l_inv_item_id;

        -- 1408056
        IF (p_search = 1) THEN
          --diag_atp : we place the demand on complete quantity in case of diagnostic ATP
          IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
              l_pegging_rec.supply_demand_quantity:=  p_atp_record.quantity_ordered;
          ELSE

             l_pegging_rec.supply_demand_quantity:=
                LEAST(l_requested_date_quantity, p_atp_record.quantity_ordered);
          END IF;
        ELSE
          l_pegging_rec.supply_demand_quantity:= p_atp_record.quantity_ordered;

        END IF;
        -- l_pegging_rec.supply_demand_quantity:=p_atp_record.quantity_ordered;

        l_pegging_rec.supply_demand_type:= 1;
        l_pegging_rec.supply_demand_date:= l_requested_ship_date;

	-- dsting ATO 2465370
	IF PG_DEBUG in ('Y','C') THEN
		msc_sch_wb.atp_debug('set required_date supplier demand');
	END IF;
        IF (p_search = BACKWARD_SCHEDULING) THEN
          -- Commented for bug 2748730. G_END_OF_DAY not required here.
	  -- We will do that inside the procedure Add_Pegging
	  -- l_pegging_rec.required_date:= TRUNC(l_requested_ship_date) + MSC_ATP_PVT.G_END_OF_DAY;
          --bug 3328421
	  l_pegging_rec.required_date:= l_requested_ship_date ;
          l_pegging_rec.actual_supply_demand_date := l_requested_ship_date;
        ELSE
	  -- Commented for bug 2748730. G_END_OF_DAY not required here.
	  -- We will do that inside the procedure Add_Pegging
          -- l_pegging_rec.required_date:= TRUNC(l_atp_date_this_level) + MSC_ATP_PVT.G_END_OF_DAY;

	  l_pegging_rec.required_date:= l_requested_ship_date ;
          l_pegging_rec.actual_supply_demand_date := l_atp_date_this_level;
        END IF;

        -- for demo:1153192
        l_pegging_rec.constraint_flag := 'N';
	l_pegging_rec.component_identifier :=
                         NVL(p_atp_record.component_identifier, MSC_ATP_PVT.G_COMP_LINE_ID);

        l_pegging_rec.summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;

        --diag_atp
        l_pegging_rec.pegging_type := MSC_ATP_PVT.SUPPLIER_DEMAND;
        l_pegging_rec.demand_class :=  p_atp_record.demand_class;

        --4570421
        l_pegging_rec.scaling_type                      := p_atp_record.scaling_type;
        l_pegging_rec.scale_multiple                    := p_atp_record.scale_multiple;
        l_pegging_rec.scale_rounding_variance           := p_atp_record.scale_rounding_variance;
        l_pegging_rec.rounding_direction                := p_atp_record.rounding_direction;
        l_pegging_rec.component_yield_factor            := p_atp_record.component_yield_factor; --4570421
        l_pegging_rec.usage                             := p_atp_record.usage_qty; --4775920
        l_pegging_rec.organization_type                 := p_atp_record.organization_type; --4775920

        MSC_ATP_DB_UTILS.Add_Pegging(l_pegging_rec, l_pegging_id);

        -- add pegging info for the supply

        l_pegging_rec.session_id:= MSC_ATP_PVT.G_SESSION_ID;
        l_pegging_rec.order_line_id:= MSC_ATP_PVT.G_ORDER_LINE_ID;
        l_pegging_rec.parent_pegging_id:= l_pegging_id;
        l_pegging_rec.atp_level:= p_level+1;

        l_pegging_rec.inventory_item_id := p_atp_record.inventory_item_id;
        l_pegging_rec.inventory_item_name := l_inv_item_name;
        l_pegging_rec.supplier_id := p_atp_record.supplier_id;
        l_pegging_rec.supplier_name := l_supplier_name;
        l_pegging_rec.supplier_site_id := p_atp_record.supplier_site_id;
        l_pegging_rec.supplier_site_name := l_supplier_site_name;
        l_pegging_rec.resource_id := NULL;
        l_pegging_rec.resource_code := NULL;
        l_pegging_rec.department_id := NULL;
        l_pegging_rec.department_code := NULL;

        l_pegging_rec.identifier1:= p_atp_record.instance_id;
        l_pegging_rec.identifier2:= p_plan_id;
        l_pegging_rec.identifier3 := -1;
        l_pegging_rec.scenario_id:= p_scenario_id;
        l_pegging_rec.supply_demand_source_type:= ATP;
        l_pegging_rec.supply_demand_type:= 2;
        l_pegging_rec.source_type := 0;
	l_pegging_rec.component_identifier :=
                         NVL(p_atp_record.component_identifier, MSC_ATP_PVT.G_COMP_LINE_ID);

        IF (p_search = 1) THEN
          l_pegging_rec.supply_demand_date:= l_requested_ship_date;
          l_pegging_rec.supply_demand_quantity:= l_requested_date_quantity;
          --bug 3328421
          l_pegging_rec.actual_supply_demand_date := l_requested_ship_date;

          -- for demo:1153192
          --optional_fw
          IF p_atp_record.quantity_ordered >= l_requested_date_quantity
                   AND (G_FORWARD_ATP = 'N' OR G_SUBSTITUTION_FLAG = 'Y') THEN --5211286
              l_pegging_rec.constraint_flag := 'Y';
          ELSE
              l_pegging_rec.constraint_flag := 'N';
          END IF;
        ELSE
          l_pegging_rec.supply_demand_date:= l_atp_date_this_level;
          l_pegging_rec.supply_demand_quantity:= l_atp_date_quantity_this_level;
          --bug 3328421
          l_pegging_rec.actual_supply_demand_date := l_atp_date_this_level;
        END IF;
        l_pegging_rec.summary_flag := MSC_ATP_PVT.G_SUMMARY_FLAG;

        --diag_atp
        l_pegging_rec.pegging_type := MSC_ATP_PVT.ATP_SUPPLIER;
        -- Bug 3828469 - Move the quantity check out so that constraint is added only if it exists
        IF p_atp_record.quantity_ordered > l_requested_date_quantity THEN
            IF MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 1 THEN
                l_pegging_rec.constraint_type := 1;
            ELSIF (MSC_ATP_PVT.G_DIAGNOSTIC_ATP = 2 and p_search = 2) THEN

                --s_cto_rearch
                IF l_atp_date_this_level > l_requested_ship_date THEN
                    l_pegging_rec.constraint_type := 1;
                END IF;
                --e_cto_rearch
            END IF;
        END IF;
        l_pegging_rec.dest_inv_item_id := l_inv_item_id;

        l_pegging_rec.required_quantity := p_atp_record.quantity_ordered;
        --bug 3328421: required date always contain the original requested date
        --l_pegging_rec.required_date := l_atp_ship_date;
        l_pegging_rec.required_date := l_requested_ship_date;
        l_pegging_rec.allocation_rule := l_allocation_rule_name;
        l_pegging_rec.plan_name := p_atp_record.plan_name;
        l_pegging_rec.demand_class :=  p_atp_record.demand_class;
        -- Bug 3826234
        l_pegging_rec.shipping_cal_code      :=  p_atp_record.shipping_cal_code;
        l_pegging_rec.receiving_cal_code     :=  p_atp_record.receiving_cal_code;
        l_pegging_rec.intransit_cal_code     :=  p_atp_record.intransit_cal_code;
        l_pegging_rec.manufacturing_cal_code :=  p_atp_record.manufacturing_cal_code;

        --4570421
        l_pegging_rec.scaling_type                      := p_atp_record.scaling_type;
        l_pegging_rec.scale_multiple                    := p_atp_record.scale_multiple;
        l_pegging_rec.scale_rounding_variance           := p_atp_record.scale_rounding_variance;
        l_pegging_rec.rounding_direction                := p_atp_record.rounding_direction;
        l_pegging_rec.component_yield_factor            := p_atp_record.component_yield_factor; --4570421
        l_pegging_rec.usage                             := p_atp_record.usage_qty; --4775920
        l_pegging_rec.organization_type                 := p_atp_record.organization_type; --4775920

        MSC_ATP_DB_UTILS.Add_Pegging(l_pegging_rec, l_pegging_id);

        ---- summary
        --- Create record into summary table for this supplier
        -- Code to update summary records removed for summary enhancement
        /** code commented for time being. Will be removed after code review
        IF MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y' THEN
            IF (p_search = 1) THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Update summary table , backward case');
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_requested_ship_date := ' || l_requested_ship_date);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Supplier_id := ' ||  p_atp_record.supplier_id);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inv_item_id := ' || l_inv_item_id);
                    msc_sch_wb.atp_debug('ATP_Check: ' || ' Quantity := ' || least(l_requested_date_quantity, p_atp_record.quantity_ordered));
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'First try to update');
                END IF;
                MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                    p_plan_id,
                                                    null,
                                                    l_inv_item_id,
                                                    l_requested_ship_date,
                                                    null,
                                                    null,
                                                    p_atp_record.supplier_id,
                                                    p_atp_record.supplier_site_id,
                                                    null,
                                                    null,
                                                    4);

                update /*+ INDEX(msc_atp_summary_sup MSC_ATP_SUMMARY_sup_U1) *//* msc_atp_summary_sup
                set sd_qty = sd_qty - least(l_requested_date_quantity, p_atp_record.quantity_ordered)
                where plan_id = p_plan_id
                and   sr_instance_id = p_atp_record.instance_id
                and   inventory_item_id = l_inv_item_id
                and   supplier_id = p_atp_record.supplier_id
                and   supplier_site_id = p_atp_record.supplier_site_id
                and   sd_date = trunc(l_requested_ship_date);
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'After update of msc_atp_summary_sup');
                    msc_sch_wb.atp_debug('ATP_Check: ' || ' Number of rows updated := ' || SQL%ROWCOUNT);
                END IF;

                IF SQL%NOTFOUND THEN
                    IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('ATP_Check: ' || 'update failed, insert a row');
                    END IF;
                    BEGIN
                    insert into /*+ INDEX(msc_atp_summary_sup MSC_ATP_SUMMARY_SUP_U1) *//* msc_atp_summary_sup
                         (plan_id,
                          inventory_item_id,
                          supplier_id,
                          supplier_site_id,
                          sr_instance_id,
                          sd_date,
                          sd_qty,
                          LAST_UPDATE_DATE,
                          LAST_UPDATED_BY,
                          CREATION_DATE,
                          CREATED_BY
                          )
                          VALUES
                          (p_plan_id,
                           l_inv_item_id,
                           p_atp_record.supplier_id,
                           p_atp_record.supplier_site_id,
                           p_atp_record.instance_id,
                           trunc(l_requested_ship_date),
                           -1 * least(l_requested_date_quantity, p_atp_record.quantity_ordered),
                           sysdate,
                           FND_GLOBAL.USER_ID,
                           sysdate,
                           FND_GLOBAL.USER_ID);
                    EXCEPTION
                        WHEN DUP_VAL_ON_INDEX THEN
                            MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                                p_plan_id,
                                                                null,
                                                                l_inv_item_id,
                                                                l_requested_ship_date,
                                                                null,
                                                                null,
                                                                p_atp_record.supplier_id,
                                                                p_atp_record.supplier_site_id,
                                                                null,
                                                                null,
                                                                4);

                            update /*+ INDEX(msc_atp_summary_sup MSC_ATP_SUMMARY_SUP_U1) *//* msc_atp_summary_sup
                            set sd_qty = sd_qty - least(l_requested_date_quantity, p_atp_record.quantity_ordered)
                            where plan_id = p_plan_id
                            and   sr_instance_id = p_atp_record.instance_id
                            and   inventory_item_id = l_inv_item_id
                            and   supplier_id = p_atp_record.supplier_id
                            and   supplier_site_id = p_atp_record.supplier_site_id
                            and   sd_date = trunc(l_requested_ship_date);
                    END;
                END IF;
                commit;
            ELSIF l_atp_date_this_level IS NOT NULL THEN
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Update summary table, forward case');
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'First try to update');
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_atp_date_this_level := ' || l_atp_date_this_level);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'Supplier_id := ' ||  p_atp_record.supplier_id);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'l_inv_item_id := ' || l_inv_item_id);
                    msc_sch_wb.atp_debug('ATP_Check: ' || ' Quantity := ' ||  p_atp_record.quantity_ordered);
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'First try to update');
                END IF;
                MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                    p_plan_id,
                                                    p_atp_record.organization_id,
                                                    l_inv_item_id,
                                                    l_atp_date_this_level,
                                                    null,
                                                    null,
                                                    p_atp_record.supplier_id,
                                                    p_atp_record.supplier_site_id,
                                                    null,
                                                    null,
                                                    4);

                update /*+ INDEX(msc_atp_summary_sup MSC_ATP_SUMMARY_SUP_U1) *//* msc_atp_summary_sup
                set sd_qty = sd_qty -  p_atp_record.quantity_ordered
                where plan_id = p_plan_id
                and   sr_instance_id = p_atp_record.instance_id
                and   inventory_item_id = l_inv_item_id
                and   supplier_id = p_atp_record.supplier_id
                and   supplier_site_id = p_atp_record.supplier_site_id
                and   sd_date = trunc(l_atp_date_this_level);
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('ATP_Check: ' || 'After update of msc_atp_summary_sup');
                    msc_sch_wb.atp_debug('ATP_Check: ' || ' Number of rows updated := ' || SQL%ROWCOUNT);
                END IF;

                IF SQL%NOTFOUND THEN
                    IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('ATP_Check: ' || 'update failed, insert a row');
                    END IF;
                    BEGIN
                        insert /*+ INDEX(msc_atp_summary_sup MSC_ATP_SUMMARY_SUP_U1) *//* into msc_atp_summary_sup
                                (plan_id,
                                inventory_item_id,
                                supplier_id,
                                supplier_site_id,
                                sr_instance_id,
                                sd_date,
                                sd_qty,
                                LAST_UPDATE_DATE,
                                LAST_UPDATED_BY,
                                CREATION_DATE,
                                CREATED_BY
                                )
                        VALUES
                                (p_plan_id,
                                l_inv_item_id,
                                p_atp_record.supplier_id,
                                p_atp_record.supplier_site_id,
                                p_atp_record.instance_id,
                                trunc(l_atp_date_this_level),
                                -1 * p_atp_record.quantity_ordered,
                                sysdate,
                                FND_GLOBAL.USER_ID,
                                sysdate,
                                FND_GLOBAL.USER_ID);
                    EXCEPTION
                        WHEN DUP_VAL_ON_INDEX THEN
                            MSC_ATP_PROC.SHOW_SUMMARY_QUANTITY(p_atp_record.instance_id,
                                                                p_plan_id,
                                                                null,
                                                                l_inv_item_id,
                                                                l_atp_date_this_level,
                                                                null,
                                                                null,
                                                                p_atp_record.supplier_id,
                                                                p_atp_record.supplier_site_id,
                                                                null,
                                                                null,
                                                                4);
                            update /*+ INDEX(msc_atp_summary_sup MSC_ATP_SUMMARY_SUP_U1) *//* msc_atp_summary_sup
                            set sd_qty = sd_qty -  p_atp_record.quantity_ordered
                            where plan_id = p_plan_id
                            and   sr_instance_id = p_atp_record.instance_id
                            and   inventory_item_id = l_inv_item_id
                            and   supplier_id = p_atp_record.supplier_id
                            and   supplier_site_id = p_atp_record.supplier_site_id
                            and   sd_date = trunc(l_atp_date_this_level) ;
                    END;

                END IF;
                commit;
            END IF; -- if p_search = 1
            commit;
        END IF; -- IF summary_flag = 'y'
        **/

        FOR i in 1..x_atp_period.Level.COUNT LOOP
            x_atp_period.Pegging_Id(i) := l_pegging_id;
            x_atp_period.End_Pegging_Id(i) := MSC_ATP_PVT.G_DEMAND_PEGGING_ID;

        END LOOP;

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'in get_res_requirements we are here 2');
        END IF;

	IF p_atp_record.insert_flag <> 0 THEN
	         MSC_ATP_DB_UTILS.move_SD_temp_into_mrp_details(l_pegging_id,
			MSC_ATP_PVT.G_DEMAND_PEGGING_ID);
   	END IF;

    END IF;

IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('ATP_Check: ' || 'children_type: ' || p_atp_record.children_type);
       msc_sch_wb.atp_debug('***** End ATP_Check Procedure *****');
    END IF;


EXCEPTION

    WHEN MSC_ATP_PVT.INVALID_OSS_SOURCE THEN

        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'Invalid OSS setup detected');
        END IF;
        p_atp_record.requested_date_quantity := 0;
        p_atp_record.available_quantity := 0;
        p_atp_record.ship_date := null;
        p_atp_record.error_code := MSC_ATP_PVT.OSS_SOURCING_ERROR;
        x_return_status := MSC_ATP_PVT.CTO_OSS_ERROR;
        --RAISE MSC_ATP_PVT.INVALID_OSS_SOURCE;

    -- 2400614 : krajan: For detecting assignment set mismatch
    WHEN MSC_ATP_PVT.G_ATO_SOURCING_MISMATCH THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('something wrong in the ATP_Check 0');
           msc_sch_wb.atp_debug('ATP_Check: ' || 'Source Mismatch detected');
        END IF;
        p_atp_record.error_code := MSC_ATP_PVT.ASSIGN_SET_NOT_IN_SYNC;
        x_return_status := MSC_ATP_PVT.G_ATO_SRC_MISMATCH ;   --- krajan : indicates mismatch
                                  --- Primarily for processing in get_comp_requirements
    -- dsting 2764213
    WHEN MSC_ATP_PVT.EXC_NO_PLAN_FOUND THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('something wrong in the ATP_Check 0.1');
           msc_sch_wb.atp_debug('ATP_Check: Plan not found for the requested item or component');
        END IF;
        if (NVL(MSC_ATP_PVT.G_DOWNTIME_HIT, 'N') = 'Y') then
           --bug 2854351:
           --p_atp_record.error_code := MSC_ATP_PVT.TRY_ATP_LATER;
           p_atp_record.error_code := MSC_ATP_PVT.PLAN_DOWN_TIME;
        else
           p_atp_record.error_code := MSC_ATP_PVT.PLAN_NOT_FOUND;
        end if;
        x_return_status := MSC_ATP_PVT.G_NO_PLAN_FOUND;

    -- krajan 2752705
    WHEN MSC_ATP_PVT.G_EXC_UNCOLLECTED_ITEM THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('something wrong in the ATP_Check 0.2');
           msc_sch_wb.atp_debug('ATP_Check: The item is not collected');
        END IF;
        p_atp_record.error_code := MSC_ATP_PVT.ATP_ITEM_NOT_COLLECTED;
        x_return_status := MSC_ATP_PVT.G_ATO_UNCOLL_ITEM;

    WHEN FND_API.G_EXC_ERROR THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('something wrong in the ATP_Check 1');
        END IF;
        x_return_status := FND_API.G_RET_STS_ERROR;
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_CHECK: IN Error block for G_EXC_ERROR');
           msc_sch_wb.atp_debug('ATP_Check: ' || 'Error := ' || SQLerrm);
        END IF;

    WHEN NO_MATCHING_DATE_IN_CAL THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('MAtching cal date not found, in atp_check');
        END IF;
        p_atp_record.error_code := NO_MATCHING_CAL_DATE;
        --x_return_status := FND_API.G_RET_STS_ERROR; --bug3583705
        RAISE NO_MATCHING_DATE_IN_CAL;

    /************ Bug 1510853 ATP Rule Check ************/
    WHEN  EXC_NO_ATP_RULE THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('No ATP Rule for Item and Org., in atp_check');
        END IF;
        p_atp_record.error_code := ATP_BAD_RULE;
        x_return_status := FND_API.G_RET_STS_ERROR;

    -- Error Handling Modifications
    WHEN MSC_ATP_PUB.ATP_INVALID_OBJECTS_FOUND THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'error := ' || sqlerrm);
           msc_sch_wb.atp_debug('ATP_Check: Invalid Objects found, sqlcode= '||sqlcode);
        END IF;

        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
        IF (p_atp_record.error_code IS NULL) or (p_atp_record.error_code IN (0,61,150)) THEN
                p_atp_record.error_code := ATP_INVALID_OBJECTS;
        END IF;
        IF FND_MSG_PUB.Check_Msg_Level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
            FND_MSG_PUB.Add_Exc_Msg(G_PKG_NAME , 'ATP_Check');
        END IF;
        RAISE MSC_ATP_PUB.ATP_INVALID_OBJECTS_FOUND;
    -- Error Handling Insert End

    -- rajjain 02/20/2003 Bug 2813095
    WHEN ALLOC_ATP_INVALID_PROFILE THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_Check: ' || 'error := ' || sqlerrm);
        END IF;
        p_atp_record.error_code := INVALID_ALLOC_PROFILE_SETUP;
        x_return_status := FND_API.G_RET_STS_ERROR;

    WHEN OTHERS THEN
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('ATP_CHECK: IN Error block for OTHERS');
	   msc_sch_wb.atp_debug('ATP_Check: ' || 'error := ' || sqlerrm);
           msc_sch_wb.atp_debug('something wrong in the ATP_Check 2, sqlcode= '||sqlcode);
        END IF;

        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        /* Check if this is actually coming from a calendar routine*/
        l_encoded_text := fnd_message.GET_ENCODED;
        IF l_encoded_text IS NULL THEN
                l_msg_app := NULL;
                l_msg_name := NULL;
        ELSE
                fnd_message.parse_encoded(l_encoded_text, l_msg_app, l_msg_name);
        END IF;

        -- Error Handling Changes
        IF (p_atp_record.error_code IS NULL) or (p_atp_record.error_code IN (0,61,150)) THEN
                IF l_msg_app='MRP' AND l_msg_name='GEN-DATE OUT OF BOUNDS' THEN
                        p_atp_record.error_code := NO_MATCHING_CAL_DATE;
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('ATP_CHECK: NO_MATCHING_CAL_DATE');
                        END IF;
                ELSE
                        p_atp_record.error_code := ATP_PROCESSING_ERROR; -- ATP Processing Error
                        IF PG_DEBUG in ('Y', 'C') THEN --bug3583705
                           msc_sch_wb.atp_debug('ATP_CHECK: ATP_PROCESSING_ERROR');
                        END IF;
                END IF;
        END IF;

        IF FND_MSG_PUB.Check_Msg_Level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
            FND_MSG_PUB.Add_Exc_Msg(G_PKG_NAME , 'ATP_Check');
        END IF;

        IF l_msg_app='MRP' AND l_msg_name='GEN-DATE OUT OF BOUNDS' THEN
                RAISE NO_MATCHING_DATE_IN_CAL;
        ELSE
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;
END ATP_Check;


PROCEDURE Call_Schedule (
               p_session_id         IN    NUMBER,
               p_atp_table          IN    MRP_ATP_PUB.ATP_Rec_Typ,
               p_instance_id        IN    NUMBER,
               p_assign_set_id      IN    NUMBER,
               p_refresh_number     IN    NUMBER,
               x_atp_table          OUT   NoCopy MRP_ATP_PUB.ATP_Rec_Typ,
               x_return_status      OUT   NoCopy VARCHAR2,
               x_msg_data           OUT   NoCopy VARCHAR2,
               x_msg_count          OUT   NoCopy NUMBER,
               x_atp_supply_demand  OUT   NOCOPY MRP_ATP_PUB.ATP_Supply_Demand_Typ,
               x_atp_period         OUT   NOCOPY MRP_ATP_PUB.ATP_Period_Typ,
               x_atp_details        OUT   NOCOPY MRP_ATP_PUB.ATP_Details_Typ
) IS

i				PLS_INTEGER;
j				PLS_INTEGER;
k                       	PLS_INTEGER;
m                       	PLS_INTEGER;
l_return_status			VARCHAR2(1);
l_atp_input_table 		MRP_ATP_PUB.ATP_Rec_Typ;
l_atp_output_table 		MRP_ATP_PUB.ATP_Rec_Typ;
l_atp_period 			MRP_ATP_PUB.ATP_Period_Typ;
l_atp_supply_demand 		MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_atp_details 			MRP_ATP_PUB.ATP_Details_Typ;
l_null_atp_table       	     	MRP_ATP_PUB.ATP_Rec_Typ;
l_null_atp_period            	MRP_ATP_PUB.ATP_Period_Typ;
l_null_atp_supply_demand     	MRP_ATP_PUB.ATP_Supply_Demand_Typ;
l_null_atp_details           	MRP_ATP_PUB.ATP_Details_Typ;
l_msg_data 		     	VARCHAR2(2000);
l_msg_text 		     	VARCHAR2(2000);
l_msg_count			NUMBER;
l_msg_number			NUMBER;
plsql_block                     VARCHAR2(10000);
l_dblink                     	VARCHAR2(128);
--For Workflow
l_req_ship_date                 DATE;
l_stealing_qty                  NUMBER;
l_wf_item_key                   VARCHAR2(20);
l_wf_profile			VARCHAR2(1);
l_plan_id                       NUMBER;
-- Override Workflow Variables
l_avail_date                    DATE;
l_wf_start                      VARCHAR2(1);

/* Bug 2290633 */
l_delivery_lead_time            NUMBER;
l_from_location_id              NUMBER;
l_from_location                 NUMBER;
l_to_location_id                NUMBER;
l_to_location                   NUMBER;
l_ship_method                   VARCHAR2(30);
l_sysdate                       DATE;
L_PREV_WORK_SHIP_DATE           DATE;
l_requested_ship_date           DATE;
/* End Bug 2290633 */

-- ATP Override rajjain begin 10/03/2002 for generating exceptions
l_exception_rec			MSC_ATP_EXCEPTIONS.ATP_Exception_Rec_Typ;
l_plan_type			NUMBER := 0;
l_generate_exception		VARCHAR2(1);
l_exception_return_status	VARCHAR2(2);
-- ATP Override rajjain end

-- rajjain 02/06/2003 Bug 2781863
l_inventory_item_id		NUMBER;
-- 24x7
l_instance_id                   NUMBER;

-- rajjain 02/03/2003 Bug 2766713
l_set_fail_flag			VARCHAR2(1) := 'N';

--s_cto_rearch
l_included_item_table               MRP_ATP_PUB.ATP_Rec_Typ;
l_included_item_cntr                number;
l_mand_comp_info_rec                MSC_ATP_CTO.mand_comp_info_rec;
l_null_mand_comp_info_rec           MSC_ATP_CTO.mand_comp_info_rec;
l_pto_cntr                          number;
l_count                             number;
l_parent_idx                        number;
l_process_included_item_flag        number := 0;
--e_cto_rearch

-- ship_rec_cal
l_shipping_cal_code		VARCHAR2(14);
l_receiving_cal_code		VARCHAR2(14);
l_manufacturing_cal_code	VARCHAR2(14);
l_intransit_cal_code		VARCHAR2(14);

l_quantity_uom		VARCHAR2(3);
l_quantity_ordered	NUMBER;
l_conversion_rate       NUMBER;
--bug3583705
l_encoded_text                  varchar2(4000);
l_msg_app                       varchar2(50);
l_msg_name                      varchar2(30);

l_global_availability                         varchar2(1); --3720018
l_temp                                        VARCHAR2(1); --3720018
l_null_remove_req_level_rec                   MSC_ATP_PVT.remove_request_level_rec; --3720018
l_old_source_org_id                           NUMBER; --3720018
l_delete_atp_rec                              MSC_ATP_PVT.DELETE_ATP_REC ;--3720018
l                                             NUMBER; --3720018
x_plan_info_rec                               MSC_ATP_PVT.plan_info_rec ;
l_same_org_count                              NUMBER;
l_feeder_count                                NUMBER;
l_consume_so_profile_value                    NUMBER;


l_atp_progess_bar varchar2(1) := nvl(fnd_profile.value('MRP_ATP_PROGRESS_BAR'),'Y');  --7419485
BEGIN

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('***** Begin Call_Schedule Procedure *****');
    END IF;

    -- Initialize global variables to work in a connection pooling env
    G_INV_CTP          := FND_PROFILE.value('INV_CTP') ;
    G_SUB_COMP         := NVL(FND_PROFILE.value('MRP_ATP_SUB_COMP'), 'N');
    G_ALLOCATED_ATP    := NVL(FND_PROFILE.value('MSC_ALLOCATED_ATP'),'N');
    G_HIERARCHY_PROFILE:= NVL(FND_PROFILE.VALUE('MSC_CLASS_HIERARCHY'), 2);
    G_INF_SUP_TF_PAD  :=  GREATEST(CEIL(NVL(FND_PROFILE.VALUE('MSC_ATP_INFINITE_TF_PAD'),0)),0);

    --bug 3625348: reset global variable
    MSC_ATP_CTO.G_MODEL_BOM_IS_COLLECTED := 2;
    MSC_ATP_CTO.G_MODEL_IS_PRESENT  := 2;
    MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET  := 2;
    MSC_ATP_CTO.G_INCLUDED_ITEM_IS_PRESENT  := 2;

    -- ngoel 9/27: Reset G_SR_PARTNER_SITE_ID GLOBAL Variable
    G_SR_PARTNER_SITE_ID := NULL;

    -- 24x7
    G_DOWNTIME_HIT := 'N';


    MSC_ATP_PVT.G_INSTANCE_ID := p_instance_id;

    G_TIME_PHASED_SET := 'N';   -- For summary enhancement

    -- initialize API return status to success
    x_return_status := FND_API.G_RET_STS_SUCCESS;

    -- Bug 2356892
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule: ' || 'Check_CTO: G_INV_CTP : '||G_INV_CTP);
    END IF;
    IF (NVL(G_INV_CTP,-1) not in (4,5)) THEN
        G_INV_CTP := 5;
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Call_Schedule: ' || 'Check_CTO: Setting G_INV_CTP to 5');
        END IF;
    END IF;

    --3720018, setting l_global_availability flag based on duplicity of order_line_id.

    BEGIN
    l_global_availability := 'Y';
    select 'x'
       into l_temp
       from mrp_atp_schedule_temp
       where session_id = p_session_id
       group by order_line_id
       having count(*) > 1;
    EXCEPTION
      WHEN no_data_found THEN
          l_global_availability := 'N';
          IF PG_DEBUG in ('Y', 'C') THEN
             --bug4291375 changed debug statements
             --msc_sch_wb.atp_debug('Exception := ' || SQLERRM);
             msc_sch_wb.atp_debug('Setting l_global_availability as No' );
          END IF;
      WHEN TOO_MANY_ROWS THEN
          l_global_availability := 'Y';
          IF PG_DEBUG in ('Y', 'C') THEN
             --bug4291375 changed debug statements
             --msc_sch_wb.atp_debug('Exception := ' || SQLERRM);
             msc_sch_wb.atp_debug('Setting l_global_availability as Yes' );
          END IF;
    END;

    IF PG_DEBUG in ('Y', 'C') THEN
          msc_sch_wb.atp_debug('Call_Schedule: ' || 'l_global_availability = ' || l_global_availability );
    END IF; --3720018

    -- initial null collections so that we can use these
    -- collections to initialize collections for next iterations
    MSC_ATP_PVT.G_SESSION_ID := p_session_id;
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule: ' || 'G_SESSION_ID = '||MSC_ATP_PVT.G_SESSION_ID);
    END IF;

    l_null_atp_table := x_atp_table;
    l_null_atp_period := x_atp_period;
    l_null_atp_supply_demand := x_atp_supply_demand;
    l_null_atp_details := x_atp_details;

    --alloc_pp
    IF MSC_ATP_PVT.G_INV_CTP = 4 AND MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' AND
       MSC_ATP_PVT.G_HIERARCHY_PROFILE = 1 THEN

        MSC_ATP_PVT.G_ALLOCATION_METHOD := NVL(FND_PROFILE.VALUE('MSC_ALLOCATION_METHOD'), 2);
        IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Call_Schedule: ' || 'G_ALLOCATION_METHOD := ' || MSC_ATP_PVT.G_ALLOCATION_METHOD);
        END IF;
    END IF;

    --3720018, call in case of ATP inquiry or global availability from scheduled line of Sales Order pad.
    IF ((p_atp_table.Action(1) = ATPQUERY) AND
        (NVL(p_atp_table.calling_module(1), -99) <> 724)) OR
        ((p_atp_table.Action(1) = ATPQUERY) AND
        (NVL(p_atp_table.calling_module(1), -99) = -99) AND
        (l_global_availability = 'Y'))  THEN

            -- Call_delete_row will take care of calling delete_row for the whole request.
            -- The input to this procedure is p_atp_table.
            -- l_delete_atp_rec will contain array to be used to call undo_delete_row.
            MSC_ATP_DB_UTILS.call_delete_row (
                             p_instance_id,
                             p_atp_table,
                             p_refresh_number,
                             l_delete_atp_rec,
                             l_return_status);

            IF PG_DEBUG in ('Y', 'C') THEN --3720018
                 msc_sch_wb.atp_debug('Call_Schedule: l_return_status: ' || l_return_status);
                 msc_sch_wb.atp_debug('Call_Schedule: l_delete_atp_rec.error_code(1): ' || l_delete_atp_rec.error_code(1));
            END IF;
            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Call_Schedule: ' || 'Error in Call_delete_row');
                        END IF;
                        x_return_status := FND_API.G_RET_STS_ERROR;
                        RAISE FND_API.G_EXC_ERROR;
            END IF;
            IF (l_delete_atp_rec.error_code(1) = MSC_ATP_PVT.TRY_ATP_LATER) OR
               (l_delete_atp_rec.error_code(1) = MSC_ATP_PVT.SUMM_CONC_PROG_RUNNING) THEN
                   x_atp_table := p_atp_table;
                   FOR i in 1..x_atp_table.action.count LOOP
                      x_atp_table.error_code(i) := l_delete_atp_rec.error_code(1);
                   END LOOP;
               RETURN;
            END IF;
    END IF;
    -- 3720018

    -- start from the first row of the atp list
    -- for each row , arrival set or ship set, call Schedule function
    -- we assume that the records are ordered in the way you would
    -- like scheduling to consider them.
    -- And we also assume that when we have ship set or arrival set,
    -- the lines in each set are grouped together.
    -- Assume a line is either in a ship set or in an arrival set
    -- but not both.

    i := p_atp_table.Action.FIRST;

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule, i='||i);
           msc_sch_wb.atp_debug('Call_Schedule: ' || 'G_ALLOCATION_METHOD := ' || MSC_ATP_PVT.G_ALLOCATION_METHOD);
        END IF;

    LOOP
      -- make sure we set the variables to null so that it is clean
      -- before we assign new value to them.
      l_atp_input_table := l_null_atp_table;
      l_atp_output_table := l_null_atp_table;
      l_atp_period := l_null_atp_period;
      l_atp_supply_demand := l_null_atp_supply_demand;
      l_atp_details := l_null_atp_details;
       --s_cto_rearch
      --l_mand_comp_info_rec := l_null_mand_comp_info_rec;
      l_set_fail_flag := 'N';
      MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET := 2;
      --e_cto_rearch


      IF PG_DEBUG in ('Y', 'C') THEN
         msc_sch_wb.atp_debug('Call_Schedule, i='||i);
      END IF;

      EXIT WHEN i is NULL;
      /* ---s_cto_rearch
      MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table,
                           i,
                           l_atp_input_table,
                           l_return_status );

      j := p_atp_table.Action.NEXT(i);
      e_cto_rearch */

      ---s_cto_rearch


      IF  NOT (l_mand_comp_info_rec.sr_inventory_item_id.count = 0) AND
                      l_included_item_cntr < l_mand_comp_info_rec.sr_inventory_item_id.count THEN
          ---process the included item for non SMC PTO model.
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Process Included item');
              msc_sch_wb.atp_debug('l_included_item_cntr := ' || l_included_item_cntr);
           END IF;

          l_included_item_cntr := nvl(l_included_item_cntr, 0) + 1;
          MSC_ATP_CTO.G_INCLUDED_ITEM_IS_PRESENT := 1;

          MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table,
                                  j,
                                  l_atp_input_table,
                                  l_return_status );


          l_atp_input_table.mandatory_item_flag(1) := 1;
          l_atp_input_table.quantity_ordered(1) :=
                                            l_mand_comp_info_rec.quantity(l_included_item_cntr);

          l_atp_input_table.inventory_item_id(1) :=
                                            l_mand_comp_info_rec.sr_inventory_item_id(l_included_item_cntr);

          l_atp_input_table.parent_line_id(1) := p_atp_table.identifier(j);
          l_atp_input_table.sequence_number(1) :=  p_atp_table.sequence_number(j) * (1 + (.0001 * l_included_item_cntr));

          l_atp_input_table.Quantity_UOM(1) := l_mand_comp_info_rec.uom_code(l_included_item_cntr);

          IF l_included_item_cntr = l_mand_comp_info_rec.sr_inventory_item_id.count THEN
                l_mand_comp_info_rec := l_null_mand_comp_info_rec;
                j := p_atp_table.Action.NEXT(j);
          END IF;

          l_process_included_item_flag := 0;
      ELSE
         j := i;
         LOOP --- loop for finding lines for a set

            EXIT WHEN l_process_included_item_flag = 1;

            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Process ordered item');
            END IF;

            ---either  this is first item or PTO included items have already been ATPed. Null out the table
            l_mand_comp_info_rec := l_null_mand_comp_info_rec;

            MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table,
                                  j,
                                  l_atp_input_table,
                                  l_return_status );

            IF p_atp_table.ato_model_line_id(j) is not null THEN --and p_atp_table.bom_item_type(j) = 1 THEN
                --set a flag to tell that a model is present.
                -- this flag will be used in put into temp table in results mode to
                -- selectively update the data for child lines.
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('ato model -line is := ' || p_atp_table.ato_model_line_id(j));
                END IF;
                MSC_ATP_CTO.G_MODEL_IS_PRESENT := 1;
                MSC_ATP_CTO.G_MODEL_IS_PRESENT_IN_SET := 1;


                IF NVL(MSC_ATP_CTO.G_MODEL_BOM_IS_COLLECTED, 2) = 2 and
                                   (NVL(MSC_ATP_PVT.G_SYNC_ATP_CHECK, 'N') = 'N' ) THEN

                   MSC_ATP_CTO.Populate_CTO_Bom(MSC_ATP_PVT.G_SESSION_ID, p_refresh_number, null);
                   MSC_ATP_CTO.G_MODEL_BOM_IS_COLLECTED := 1;

                END IF;
            END IF;

            IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('attribute_06 := ' ||  NVL(p_atp_table.attribute_06(j), -1));
                 msc_sch_wb.atp_debug('Validation Org := ' || NVL(p_atp_table.validation_org(j), -1));
                 msc_sch_wb.atp_debug('source_organization_id := ' || NVL(p_atp_table.source_organization_id(j), -1));
            END IF;

            --- raise invalid item org combo error only for non-aps instance
            IF (p_atp_table.attribute_06(j) is null and NVL(MSC_ATP_PVT.G_CALLING_MODULE, -1) <> 724
                -- if validation org and source_org are null then we cannot validate the item
                -- hence do not raise the error
                and (p_atp_table.validation_org(j) is not null
                or p_atp_table.source_organization_id(j) is not null))  or
               p_atp_table.oss_error_code(j) in ( MSC_ATP_PVT.MUTUALLY_EXCLUSIVE_OSS,
                                                  MSC_ATP_PVT.OSS_ERROR_AT_LOWER_LEVEL,
                                                  MSC_ATP_PVT.OSS_ERROR_AT_THIS_LEVEL) or
               l_set_fail_flag = 'Y'  THEN

               l_count := l_atp_input_table.inventory_item_id.count;

               If p_atp_table.attribute_06(j) is null THEN
                    IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Invalid Item Org Combo');
                    END IF;


                    l_atp_input_table.error_code(l_count) := INVALID_ITEM_ORG_COMBINATION;

               ELSIF p_atp_table.oss_error_code(j) in  (MSC_ATP_PVT.MUTUALLY_EXCLUSIVE_OSS,
                                                  MSC_ATP_PVT.OSS_ERROR_AT_LOWER_LEVEL,
                                                  MSC_ATP_PVT.OSS_ERROR_AT_THIS_LEVEL) THEN

                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Inavlid CTO sourcing');
                    END IF;
                    l_atp_input_table.error_code(l_count) := p_atp_table.oss_error_code(j);

               ELSE
                    l_atp_input_table.error_code(l_count) := GROUPEL_ERROR;

               END IF;
               l_set_fail_flag := 'Y';

               j := p_atp_table.Action.NEXT(j);

            ELSIF NVL(p_atp_table.included_item_flag(j), 1) = 2 and
                -- calling module must pass 2 else we will assume that
                -- calling module has already exploded the included items
                -- This is to provided backward compatibility
                p_atp_table.pick_components_flag(j) = 'Y' and
                p_atp_table.bom_item_type(j) in (1, 2)  THEN

                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Explode Included Items');
                    msc_sch_wb.atp_debug('First Do UOM Convesrion');
                END IF;

                MSC_ATP_PROC.inv_primary_uom_conversion(p_instance_id,
                                       p_atp_table.validation_org(j),
                                       p_atp_table.inventory_item_id(j),
                                       p_atp_table.Quantity_UOM(i),
                                       l_quantity_uom,
                                       l_conversion_rate);

                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('l_conversion_rate');
                    msc_sch_wb.atp_debug('QTY Ordered := ' ||  p_atp_table.Quantity_Ordered(j));

                END IF;

                l_quantity_ordered := p_atp_table.Quantity_Ordered(j) * l_conversion_rate;
                l_quantity_ordered := ROUND( l_quantity_ordered, 6); --4562646
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('QTY Ordered  after conversion:= ' ||  l_quantity_ordered);
                    msc_sch_wb.atp_debug('Now call Get Mand Comp');
                END IF;

                --- included items are not passed. Explode them
                MSC_ATP_PVT.G_PTF_DATE := sysdate;
                MSC_ATP_CTO.Get_Mandatory_Components( -1,
                                                     p_instance_id,
                                                     p_atp_table.validation_org(j),
                                                     p_atp_table.inventory_item_id(j),
                                                     p_atp_table.quantity_ordered(j),
                                                     NVL(p_atp_table.Requested_Ship_Date(j),
                                                             p_atp_table.Requested_Arrival_Date(j)),
                                                     null,
                                                     l_mand_comp_info_rec);

                --- if SMC PTO then add to l_atp_input_table else add to l_included_item_table
                IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('After getting included items');
                    msc_sch_wb.atp_debug('Ship set name := ' ||  NVL(p_atp_table.Ship_Set_Name(j), 'XYZ'));
                END IF;

                IF p_atp_table.Ship_Set_Name(j) is not null then

                   --its an SMC PTO or KIT, add to the same set

                   IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Comp Count := ' || l_mand_comp_info_rec.sr_inventory_item_id.count);
                       msc_sch_wb.atp_debug('SMC or PTO Kit');
                   END IF;
                   FOR l_pto_cntr in 1..l_mand_comp_info_rec.sr_inventory_item_id.count LOOP
                        MSC_ATP_CTO.G_INCLUDED_ITEM_IS_PRESENT := 1;
                        MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table,
                                  j,
                                  l_atp_input_table,
                                  l_return_status );
                        IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('l_pto_cntr := ' || l_pto_cntr);
                        END IF;
                        --cr:ngoel: add seq num as well as UOM code
                        l_count := l_atp_input_table.inventory_item_id.count;
                        l_atp_input_table.mandatory_item_flag(l_count) := 1;
                        l_atp_input_table.quantity_ordered(l_count) :=
                                           l_mand_comp_info_rec.quantity(l_pto_cntr);

                        l_atp_input_table.inventory_item_id(l_count) :=
                                                          l_mand_comp_info_rec.sr_inventory_item_id(l_pto_cntr);

                        l_atp_input_table.parent_line_id(l_count) := p_atp_table.identifier(j);
                        IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('Assign Seq num');
                        END IF;
                        ---multiplying by .000001 will make sure that std mand comp are inserted in the
                        -- table after the parent
                        begin
                           l_atp_input_table.sequence_number(l_count) := p_atp_table.sequence_number(j) *
                                                                                           (1 + (.0001 * l_pto_cntr));
                        EXCEPTION
                             when others then
                                IF PG_DEBUG in ('Y', 'C') THEN
                                    msc_sch_wb.atp_debug('Error := ' || SQLERRM);
                                END IF;
                        END;
                        IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('assign UOM');
                            msc_sch_wb.atp_debug('seq count := ' || l_atp_input_table.sequence_number.count);
                            msc_sch_wb.atp_debug(' uom cnt := ' || l_atp_input_table.Quantity_UOM.count);
                            msc_sch_wb.atp_debug('uom code cnt := ' || l_mand_comp_info_rec.uom_code.count);
                        END IF;
                        l_atp_input_table.Quantity_UOM(l_count) := l_mand_comp_info_rec.uom_code(l_pto_cntr);
                        IF p_atp_table.bom_item_type(j)  = 4 and p_atp_table.Ship_Set_Name(j) is null THEN
                           IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('process KIT');
                           END IF;
                            -- If its a PTO KIt  and if ship set name is null then we populate
                            --shipset name so that whole kit is processed as one entity
                            l_atp_input_table.Ship_Set_Name(l_parent_idx) := p_atp_table.identifier(j);
                            l_atp_input_table.Ship_Set_Name(l_count) :=  p_atp_table.identifier(j);
                        END IF;

                   END LOOP;

                   ---null out mand_comp_table
                   l_mand_comp_info_rec := l_null_mand_comp_info_rec;
                   j := p_atp_table.Action.NEXT(j);
                ELSE ---  IF p_atp_table.Ship_Set_Name(j) is not null then
                   IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('This is not SMC PTO');
                   END IF;
                   --non smc PTO
                   l_included_item_cntr := 0;
                   IF l_mand_comp_info_rec.sr_inventory_item_id.count > 0 THEN
                      l_process_included_item_flag := 1;
                   ELSE
                      j := p_atp_table.Action.NEXT(j);
                   END IF;
                END IF;

            ELSE
               ---increase the counter only if its a non PTO item or icluded item already exploded
               j := p_atp_table.Action.NEXT(j);
            END IF;


            IF (j IS NULL) THEN
               EXIT;
            END IF;

            /* Fixed as part of ship_rec_cal/sup int LT
            Prev condition was not handling arrival sets
            EXIT WHEN NVL(p_atp_table.Ship_Set_Name(i),-99) <> NVL(p_atp_table.Ship_Set_Name(j),-100) OR
                       NVL(p_atp_table.Arrival_Set_Name(i),-100) <> NVL(p_atp_table.Arrival_Set_Name(j),-100);*/
             EXIT WHEN (NVL(NVL(p_atp_table.Ship_Set_Id(i),p_atp_table.Ship_Set_Name(i)),-99) <> NVL(NVL(p_atp_table.Ship_Set_Id(j),p_atp_table.Ship_Set_Name(j)),-100) OR     --bug 7443357 changed ship_set_name to ship_set_id
                        -- Bug 3729551, added for support of Global availability for a shipset from OM
                        NVL(p_atp_table.source_organization_id(i), -1) <> NVL(p_atp_table.source_organization_id(j), -1)) AND
                        NVL(NVL(p_atp_table.Arrival_Set_Id(i),p_atp_table.Arrival_Set_Name(i)),-99) <> NVL(NVL(p_atp_table.Arrival_Set_Id(j),p_atp_table.Arrival_Set_Name(j)),-100);  --bug 7443357 changed arrival_set_name to arrival_set_id

         END LOOP;   --- end loop for finding lines for a set
      END IF;---IF l_included_item_cntr <= l_m
      ---e_cto_reach

      /* s_cto_rearch --- modify the way we do the looping for CTO project
      IF (p_atp_table.Ship_Set_Name(i) is not NULL
          OR  p_atp_table.Arrival_Set_Name(i) is not NULL)
          AND  j is not null  THEN

        LOOP
          -- Bug 1868923, Added NVL for ship/ arrival set exit conditions.

          EXIT WHEN NVL(p_atp_table.Ship_Set_Name(i),-99) <> NVL(p_atp_table.Ship_Set_Name(j),-99) OR
                    NVL(p_atp_table.Arrival_Set_Name(i),-99) <> NVL(p_atp_table.Arrival_Set_Name(j),-99);


          IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Call_Schedule, j='||j);
          END IF;

          -- make sure we are in the same ship set before we assign the value.

          MSC_SATP_FUNC.Assign_Atp_Input_Rec(p_atp_table,
                               j,
                               l_atp_input_table,
                               l_return_status );

          j := p_atp_table.Action.NEXT(j);

          IF (j IS NULL) THEN
            EXIT;
          END IF;


        END LOOP;

      END IF;

      e_cto_rearch */
      -- Added by ngoel on 1/23/2001.
      -- In case of PDS, check if this line/set is due to an internal Sales Order.
      -- Check OE_Flag='Y', if internal sales order, no ATP is required to be done
      -- as the supply has already been reserved for items in this line/set.

      m := l_atp_input_table.Action.FIRST;
      IF m is not null THEN
	 IF PG_DEBUG in ('Y', 'C') THEN
	    msc_sch_wb.atp_debug('Call_Schedule: ' || 'OE Flag (Before ISO check) : '||l_atp_input_table.OE_flag(m));
	 END IF;
      --Bug 4279623 	4333596
      IF l_atp_input_table.oe_flag(m) = 'Y' and MSC_ATP_PVT.G_INV_CTP = 4 THEN
         l_consume_so_profile_value :=  NVL(FND_PROFILE.VALUE('MSC_ATP_CHECK_INT_SALES_ORDERS'), NVL(FND_PROFILE.VALUE('MSC_CONSUME_INT_SALES_ORDERS'), NO)); --5564082
         --l_consume_so_profile_value :=  NVL(FND_PROFILE.VALUE('MSC_CONSUME_INT_SALES_ORDERS'), NO);
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Before get_plan_info_call:l_consume_so_profile_value ' || l_consume_so_profile_value);
            msc_sch_wb.atp_debug('Before get_plan_info_call:MSC_CONSUME_INT_SALES_ORDERS ' || l_consume_so_profile_value);
            msc_sch_wb.atp_debug('New profile: '||FND_PROFILE.VALUE('MSC_ATP_CHECK_INT_SALES_ORDERS')); --5564082
         END IF;
         IF  l_consume_so_profile_value  = CHECK_ORG_IN_PLAN THEN
             MSC_ATP_PROC.get_plan_info(p_instance_id,
                                        l_atp_input_table.inventory_item_id(m),
                                        l_atp_input_table.source_organization_id(m),
                                        null,
                                        x_plan_info_rec);

             IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('After get_plan_info_call:plan_id : ' || x_plan_info_rec.plan_id );
             END IF;

             IF x_plan_info_rec.plan_id > 0 THEN

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Plan found for the item in the source org.');
                   msc_sch_wb.atp_debug('l_atp_input_table.inventory_item_id(m)' || l_atp_input_table.inventory_item_id(m) );
                   msc_sch_wb.atp_debug('l_atp_input_table.internal_org_id(m)' || l_atp_input_table.internal_org_id(m) );
                   msc_sch_wb.atp_debug('l_atp_input_table.source_organization_id(m)' || l_atp_input_table.source_organization_id(m) );
                   msc_sch_wb.atp_debug('l_atp_input_table.organization_id(m)' || l_atp_input_table.organization_id(m) );
                END IF;

                select count(*)
                into l_same_org_count
                from msc_system_items i
                where i.plan_id = x_plan_info_rec.plan_id
                and i.organization_id = l_atp_input_table.internal_org_id(m)
                and i.sr_instance_id = p_instance_id
                and i.sr_inventory_item_id = l_atp_input_table.inventory_item_id(m);

                IF l_same_org_count > 0 THEN
                   l_atp_input_table.oe_flag(m) := 'Y';
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Both the Orgs are in the same plan and the item is planned.');
                   END IF;
                ELSE
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Both the Orgs are in NOT the same plan');
                   END IF;
                   select count(*) into l_feeder_count
                   from msc_system_items
                   where plan_id  in ( select plans.plan_id input_plan_id
                                           from msc_plan_schedules sched,
                                           msc_designators md,
                                           msc_plans plans
                                           where sched.plan_id = x_plan_info_rec.plan_id
                                           and sched.input_type = 1
                                           and sched.designator_type in (2,3,4,5)
                                           and sched.input_schedule_id = md.designator_id
                                           -- we need not consider plans collected from source
                                           and md.collected_flag = 2
                                           and md.designator = plans.compile_designator
                                           and md.sr_instance_id = plans.sr_instance_id
                                           and md.organization_id = plans.organization_id
                                         )
                   and organization_id = l_atp_input_table.internal_org_id(m)
                   and sr_instance_id = p_instance_id
                   and sr_inventory_item_id =  l_atp_input_table.inventory_item_id(m);

                  IF l_feeder_count > 0 then
                     l_atp_input_table.oe_flag(m) := 'Y';
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('There is a feeder plan which has the item palnned. we need not do ATP');
                     END IF;
                  ELSE
                     l_atp_input_table.oe_flag(m) := 'N';
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('There is no feeder plan too. We have to do ATP');
	 END IF;
                  END IF; -- l_feeder_count > 0
                END IF; --if l_same_org_count > 0 then
             ELSE
               l_atp_input_table.oe_flag(m) := 'Y';
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('The item is not planned at all. No need to do ATP');
               END IF;
             END IF; -- x_plan_info_rec.count > 0
         ELSIF l_consume_so_profile_value = YES THEN
            l_atp_input_table.oe_flag(m) := 'N';
            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Profile value is set to CHECK ATP. We need to do ATP always.');
            END IF;

         END IF; -- nvl(fnd_profile.value('msc_consume_int_sales_orders'), '2') = 3
      END IF; -- l_atp_input_table.oe_flag(1) = 'y' and msc_atp_pvt.g_inv_ctp = 4
     --Bug 4279623 	4333596
        msc_sch_wb.atp_debug('l_atp_input_table.oe_flag(m) = '||l_atp_input_table.oe_flag(m)); --5564082
	 IF l_atp_input_table.OE_flag(m) = 'Y' AND MSC_ATP_PVT.G_INV_CTP = 4 THEN

	    IF PG_DEBUG in ('Y', 'C') THEN
	       msc_sch_wb.atp_debug('Call_Schedule: ' || 'Inside Internal Sales order import for OM');
	    END IF;

	    x_atp_table := l_atp_input_table;
           BEGIN --bug3583705
            WHILE m IS NOT NULL LOOP
                /* Bug 3449812 - Documenting the logic of plan suggested internal sales orders
                   1.   If DLT is not available then obtain it.
                   2.   Get all the necessary calendars.
                   3.   If date type = ship then
                   4.       Obtain ship date by validating RSD on OSC.
                   5.   ELse
                   6.       Calculate ship date from RAD honoring all calendars.
                   7.   End if
                   8.   If override then
                   9.       If date type = ship then
                  10.           ship date = RSD
                  11.       Else
                  12.           arrival date = RAD
                  13.           ship date = Calculate ship date from RAD honoring all calendars.
                  14.       End if
                  15.   Else
                  16.       ship date = greatest(ship date, sysdate)
                  17.   End if
                  18.   If arrival date is null then calculate it from ship date.
                */

                /* Bug 2290633 : krajan : 04/05/02 */

                l_delivery_lead_time := l_atp_input_table.delivery_lead_time(m);

                -- dsting dlt
                IF (NVL(l_atp_input_table.delivery_lead_time(m), -1) = -1 ) THEN
                   IF PG_DEBUG IN ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('delivery lead time is not specified');
                   END IF;

                   l_ship_method := x_atp_table.ship_method(m);
                   -- Bug 3449812 - Base DLT on internal_org_id if available
                   -- Bug 3515520, don't use org in case customer/site is populated
                   -- IF x_atp_table.internal_org_id(m) IS NOT NULL THEN

                   IF (x_atp_table.internal_org_id(m) IS NOT NULL) OR
                      (x_atp_table.organization_id(m) IS NOT NULL AND
                       x_atp_table.customer_id(m) IS NULL AND x_atp_table.customer_site_id(m) IS NULL) THEN
                       MSC_ATP_PROC.get_delivery_lead_time(
                                    x_atp_table.source_organization_id(m),
                                    NULL, -- from_loc
                                    p_instance_id,
                                    -- x_atp_table.internal_org_id(m), -- Bug 3515520
                                    NVL(x_atp_table.internal_org_id(m), x_atp_table.organization_id(m)), --Bug 3515520
                                    NULL, -- to loc
                                    p_instance_id,
                                    NULL, -- customer id
                                    NULL, -- customer site id
                                    NULL, -- supplier_id
                                    NULL, -- supplier_site_id
                                    MSC_ATP_PVT.G_SESSION_ID,
                                    NULL, -- partner site id
                                    l_ship_method,
                                    l_delivery_lead_time
                                    );
                   ELSE
                       MSC_ATP_PROC.get_delivery_lead_time(
                                    x_atp_table.source_organization_id(m),
                                    NULL, -- from_loc
                                    p_instance_id,
                                    -- x_atp_table.organization_id(m), --Bug 3515520
                                    NULL, --Bug 3515520
                                    NULL, -- to loc
                                    p_instance_id,
                                    x_atp_table.customer_id(m),
                                    x_atp_table.customer_site_id(m),
                                    NULL, -- supplier_id
                                    NULL, -- supplier_site_id
                                    MSC_ATP_PVT.G_SESSION_ID,
                                    x_atp_table.customer_site_id(m),
                                    l_ship_method,
                                    l_delivery_lead_time
                                    );
                   END IF;

                   x_atp_table.delivery_lead_time(m) := l_delivery_lead_time; --4430710
		   -- dsting removed old delivery lead time code
                END IF; -- end delivery lead time not specified

                IF PG_DEBUG in ('Y', 'C') THEN
                   --msc_sch_wb.atp_debug('Call_Schedule: ' || 'Lead Time '||l_delivery_lead_time);
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'Lead Time '||x_atp_table.delivery_lead_time(m)); --4430710
                END IF;

                -- Bug 3449812 - get receiving cal from ISO's destination org if available
                -- Bug 3515520, don't use org in case customer/site is populated.
                -- IF NVL(x_atp_table.internal_org_id(m),x_atp_table.organization_id(m)) IS NOT NULL THEN

                -- Bug 3737759 - Moved from below
                l_manufacturing_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                             p_instance_id,
                                             null,
                                             null,
                                             null,
                                             null,
                                             null,
                                             x_atp_table.source_organization_id(m),
                                             null,
                                             MSC_CALENDAR.OMC);

                -- Bug 3593394
                IF MSC_ATP_PVT.G_USE_SHIP_REC_CAL='Y' THEN

                    IF (x_atp_table.internal_org_id(m) IS NOT NULL) OR
                       (x_atp_table.organization_id(m) IS NOT NULL AND
                        x_atp_table.customer_id(m) IS NULL AND x_atp_table.customer_site_id(m) IS NULL) THEN
                            l_receiving_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             p_instance_id,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             NVL(x_atp_table.internal_org_id(m),x_atp_table.organization_id(m)),
                                                             l_ship_method,
                                                             -- Bug 3593394 - x_atp_table.ship_method(m),
                                                             MSC_CALENDAR.ORC);
                    ELSIF x_atp_table.customer_id(m)  IS NOT NULL THEN
                            -- receiving party is customer
                            l_receiving_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             p_instance_id,
                                                             null,
                                                             null,
                                                             MSC_ATP_PVT.G_PARTNER_ID,
                                                             MSC_ATP_PVT.G_PARTNER_SITE_ID,
                                                             2,
                                                             null,
                                                             l_ship_method,
                                                             -- Bug 3593394 - x_atp_table.ship_method(m),
                                                             MSC_CALENDAR.CRC);
                    ELSE
                            -- neither customer nor org is provided
                            l_receiving_cal_code := MSC_CALENDAR.FOC;
                    END IF;

                    l_intransit_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                             p_instance_id,
                                             null,
                                             null,
                                             null,
                                             null,
                                             4,
                                             null,
                                             l_ship_method,
                                             -- Bug 3593394 - x_atp_table.ship_method(m),
                                             MSC_CALENDAR.VIC);

                    l_shipping_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                             p_instance_id,
                                             null,
                                             null,
                                             null,
                                             null,
                                             null,
                                             x_atp_table.source_organization_id(m),
                                             l_ship_method,
                                             -- Bug 3593394 - x_atp_table.ship_method(m),
                                             MSC_CALENDAR.OSC);

                ELSE

                    -- Bug 3593394
                    IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Call_Schedule: ' || 'G_USE_SHIP_REC_CAL is N');
                    END IF;
                    -- Bug 3737759 - Use receiving org's OMC
                    IF (x_atp_table.internal_org_id(m) IS NOT NULL) OR
                       (x_atp_table.organization_id(m) IS NOT NULL AND
                        x_atp_table.customer_id(m) IS NULL AND x_atp_table.customer_site_id(m) IS NULL) THEN
                            l_receiving_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                                             p_instance_id,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             null,
                                                             NVL(x_atp_table.internal_org_id(m),x_atp_table.organization_id(m)),
                                                             null,
                                                             MSC_CALENDAR.OMC);
                    ELSE
                        l_receiving_cal_code := MSC_CALENDAR.FOC;
                    END IF;
                    l_intransit_cal_code := MSC_CALENDAR.FOC;
                    -- Bug 3737759 - Use source org's OMC - l_shipping_cal_code := MSC_CALENDAR.FOC;
                    l_shipping_cal_code := l_manufacturing_cal_code;

                END IF;

                /* Bug 3737759 - Moved before IF
                l_manufacturing_cal_code := MSC_CALENDAR.Get_Calendar_Code(
                                             p_instance_id,
                                             null,
                                             null,
                                             null,
                                             null,
                                             null,
                                             x_atp_table.source_organization_id(m),
                                             null,
                                             MSC_CALENDAR.OMC);
                */

                -- Bug 3449812 - Corrected the logic of date calculation
                IF x_atp_table.requested_ship_date(m) IS NOT NULL THEN
                        x_atp_table.ship_date(m) := MSC_CALENDAR.PREV_WORK_DAY(
        						l_shipping_cal_code,
        						p_instance_id,
        						x_atp_table.requested_ship_date(m));
                ELSE
                        x_atp_table.ship_date(m) := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
                        				x_atp_table.requested_arrival_date(m), l_receiving_cal_code, -1,
                        				l_intransit_cal_code, -1 * nvl( --l_delivery_lead_time 4430710
                        				x_atp_table.delivery_lead_time(m), 0), -1,
                        				l_shipping_cal_code, -1, p_instance_id);
                END IF;

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'x_atp_table.ship_date ' || x_atp_table.ship_date(m) );
                END IF;

                BEGIN  -- Bug2031894. Handle Exception here.

                    l_sysdate := MSC_CALENDAR.NEXT_WORK_DAY(
                                        l_shipping_cal_code,    -- Bug 3449812
                                        p_instance_id,
                                        sysdate);
                EXCEPTION
                    WHEN OTHERS THEN
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Call_Schedule: ' || 'When Others ');
                        END IF;
                        NULL;
                END;
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'l_sysdate '||l_sysdate);
                END IF;
                IF l_sysdate IS NULL THEN
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Call_Schedule: ' || 'Sysdate not found in Calendar');
                   END IF;
                   x_atp_table.error_code(m) := NO_MATCHING_CAL_DATE;
                END IF;

                IF x_atp_table.ship_date(m) < l_sysdate THEN
                        x_atp_table.requested_date_quantity(m) := 0;
                ELSE
                        x_atp_table.requested_date_quantity(m) :=
                        x_atp_table.quantity_ordered(m);
                END IF;
                /* Bug 3449812 - l_prev_work_ship_date not required as ship date has already been validated
                l_prev_work_ship_date := MSC_ATP_FUNC.prev_work_day
                                    (x_atp_table.source_organization_id(m),
                                    p_instance_id,
                                     x_atp_table.ship_date(m));

                IF l_prev_work_ship_date IS NULL THEN
                   IF PG_DEBUG in ('Y', 'C') THEN
                      msc_sch_wb.atp_debug('Call_Schedule: ' || 'prev date for ship date not found in Calendar');
                      msc_sch_wb.atp_debug('Call_Schedule: ' || 'x_atp_table.ship_date ' || x_atp_table.ship_date(m) );
                   END IF;
                   x_atp_table.error_code(m) := MSC_ATP_PVT.NO_MATCHING_CAL_DATE;
                END IF;
                */

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'x_atp_table.requested_ship_date(m) : ' ||
                        to_char(x_atp_table.requested_ship_date(m), 'dd/mm/yyyy hh:mi:ss'));
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'x_atp_table.ship_date(m) : ' ||
                        to_char(x_atp_table.ship_date(m), 'dd/mm/yyyy hh:mi:ss'));
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'x_atp_table.requested_arrival_date(m): ' ||
                        to_char(x_atp_table.requested_arrival_date(m),'dd/mm/yyyy hh:mi:ss'));
                END IF;
                -- Bug  Bug 2232555, 2250456

		/* Old commented code removed*/

                -- ship_rec_cal changes begin
                -- Bug 3449812 - Code to get calendars moved at the beginning of while loop

                IF (NVL(x_atp_table.Override_Flag(m), 'N') = 'Y') THEN
                   IF (x_atp_table.requested_ship_date(m) IS NOT NULL) THEN
                      x_atp_table.ship_date(m) := x_atp_table.requested_ship_date(m);

                      -- Bug 3520301 - dont consider first calendar in override cases
                      x_atp_table.arrival_date(m) := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
                                                        x_atp_table.ship_date(m), MSC_CALENDAR.FOC, 1,
                                                        l_intransit_cal_code, nvl(x_atp_table.delivery_lead_time(m), 0), 1,
                                                        l_receiving_cal_code, 1, p_instance_id);

                   ELSE
                      x_atp_table.arrival_date(m) := x_atp_table.requested_arrival_date(m);

                      -- Bug 3520301 - ship date needs to be recalculated because first calendar
                      --               is not to be considered in override cases
                      x_atp_table.ship_date(m) := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
                					x_atp_table.requested_arrival_date(m), MSC_CALENDAR.FOC, -1,
                					l_intransit_cal_code, -1 * nvl(x_atp_table.delivery_lead_time(m), 0), -1,
                					l_shipping_cal_code, -1, p_instance_id);

                   END IF;

                ELSE
                    -- Bug 3449812 - Added the non-override case, which, it seems, got removed while ship_rec changes were done
                    x_atp_table.ship_date(m) := GREATEST(l_sysdate, x_atp_table.ship_date(m));

                END IF;
                IF (x_atp_table.ship_date(m) IS NOT NULL)  AND (x_atp_table.arrival_date(m) IS NULL) THEN
                    x_atp_table.arrival_date(m) := MSC_CALENDAR.THREE_STEP_CAL_OFFSET_DATE(
                                                        x_atp_table.ship_date(m), l_shipping_cal_code, 1,
                                                        l_intransit_cal_code, nvl(x_atp_table.delivery_lead_time(m), 0), 1,
                                                        l_receiving_cal_code, 1, p_instance_id);

                    /* Bug 3449812 - Arrival date should not be pushed back to non-working day
                    IF x_atp_table.requested_arrival_date(m) is not null THEN
                       x_atp_table.arrival_date(m) := TRUNC(GREATEST(x_atp_table.requested_arrival_date(m),
                                                        x_atp_table.arrival_date(m)));
                    END IF;
                    */
                END IF;
                -- ship_rec_cal changes end

                x_atp_table.group_ship_date(m) := x_atp_table.ship_date(m);
                x_atp_table.group_arrival_date(m) := x_atp_table.arrival_date(m);
                x_atp_table.ship_method(m) := l_ship_method;
                x_atp_table.delivery_lead_time(m) := l_delivery_lead_time;
                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'group ship date '|| x_atp_table.group_ship_date(m));
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'group arrival date '|| x_atp_table.group_arrival_date(m));
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'x_atp_table.requested_ship_date(m) after : ' ||
                        to_char(x_atp_table.requested_ship_date(m), 'dd/mm/yyyy hh:mi:ss'));
                END IF;

                -- End Changes

                x_atp_table.Available_quantity(m) := l_atp_input_table.Quantity_Ordered(m);
                --x_atp_table.requested_date_quantity(m) := l_atp_input_table.Quantity_Ordered(m);
                x_atp_table.Error_Code(m) := 0;

                m := l_atp_input_table.Action.NEXT(m);
                -- End Bug 2232555, 2250456
            END LOOP;
          EXCEPTION --bug3583705 start

            WHEN NO_MATCHING_DATE_IN_CAL THEN
              FOR i in l_atp_input_table.Action.FIRST ..l_atp_input_table.Action.LAST	 LOOP
                IF (x_atp_table.Error_Code(i) IS NULL) or (x_atp_table.Error_Code(i) IN (0,61,150)) THEN
                 x_atp_table.Error_Code(i) := NO_MATCHING_CAL_DATE;
                END IF;
              END LOOP;

            WHEN OTHERS THEN
              x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
              /* Check if this is actually coming from a calendar routine*/
              l_encoded_text := fnd_message.GET_ENCODED;
              IF l_encoded_text IS NULL THEN
                l_msg_app := NULL;
                l_msg_name := NULL;
              ELSE
                fnd_message.parse_encoded(l_encoded_text, l_msg_app, l_msg_name);
              END IF;

              -- Error Handling Changes
              FOR i in l_atp_input_table.Action.FIRST ..l_atp_input_table.Action.LAST LOOP
               IF (x_atp_table.Error_Code(i) IS NULL) or (x_atp_table.Error_Code(i) IN (0,61,150)) THEN
                IF l_msg_app='MRP' AND l_msg_name='GEN-DATE OUT OF BOUNDS' THEN
                        x_atp_table.Error_Code(i) := MSC_ATP_PVT.NO_MATCHING_CAL_DATE;
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Call_Schedule: NO_MATCHING_CAL_DATE');
                        END IF;
                ELSE
                        x_atp_table.Error_Code(i) := MSC_ATP_PVT.ATP_PROCESSING_ERROR; -- ATP Processing Error
                END IF;
               END IF;
              END LOOP;
              IF FND_MSG_PUB.Check_Msg_Level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
                 FND_MSG_PUB.Add_Exc_Msg(G_PKG_NAME , 'MSC_ATP_PVT');
              END IF;
              IF PG_DEBUG in ('Y', 'C') THEN
                 msc_sch_wb.atp_debug('Call_Schedule: ' || 'error := ' || sqlerrm);
              END IF;
          END;
          --bug3583705 end
        /* END Bug 2290633 : krajan : 04/05/02 */

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Call_Schedule: ' || 'After Assigning values for l_atp_output_table');
            END IF;

         ELSE 	-- IF l_atp_input_table.OE_flag(m) = 'Y' AND MSC_ATP_PVT.G_INV_CTP = 4 THEN
            -- now call schedule to schedule this line/set.
            -- the reason that we do it this way is that when source org not
            -- specified, for each line/set, we may return multiple results
            -- to users when we cannot satisfy the request on the preferred
            -- warehouse and the action is ATP inquiry.

            IF PG_DEBUG in ('Y', 'C') THEN
               msc_sch_wb.atp_debug('Call_Schedule, before Schedule ');
            END IF;
            /* --s_cto_rearch
            -- rajjain 02/03/2003 Bug 2766713 Begin
            k := l_atp_input_table.error_code.First;
            FOR k in 1.. l_atp_input_table.error_code.COUNT LOOP
                IF l_atp_input_table.error_code(k) = INVALID_ITEM_ORG_COMBINATION THEN
                   msc_sch_wb.atp_debug ('Call_Schedule: '||'Invalid Item Org Combination : '||k);
                   l_set_fail_flag := 'Y';
                   EXIT;
                END IF;
            END LOOP;
            e_cto_rearch*/

            IF l_set_fail_flag = 'Y' THEN
               l_atp_output_table := l_atp_input_table;
               /* --s_cto_rearch
               k := l_atp_input_table.error_code.First;
               IF PG_DEBUG in ('Y','C') THEN
                   msc_sch_wb.atp_debug ('Call_Schedule: '
                     || 'This set failed as this has atleast one item with invalid item-org combination');
               END IF;
               FOR k in 1.. l_atp_input_table.error_code.COUNT LOOP
                   IF nvl(l_atp_input_table.error_code(k), 0) <> INVALID_ITEM_ORG_COMBINATION THEN
                      l_atp_output_table.error_code(k) := GROUPEL_ERROR;
                   END IF;
               END LOOP;
               e_cto_rearch */
               -- Reset l_set_fail_flag
               l_set_fail_flag := 'N';
            ELSE
               -- 24x7 Call to schedule. What do we call ?
               if (NVL(MSC_ATP_PVT.G_SYNC_ATP_CHECK, 'N') = 'Y' ) then
                   IF PG_DEBUG in ('Y','C') THEN
                       msc_sch_wb.atp_debug ('Calling Schedule with 24x7 related parameters');
                   END IF;

                   MSC_ATP_PVT.Schedule(l_atp_input_table,
                       l_atp_input_table.instance_id(l_atp_input_table.instance_id.FIRST),
                       p_assign_set_id,
                       l_atp_input_table.attribute_04(l_atp_input_table.attribute_04.FIRST),
                       l_atp_output_table,
                       l_return_status,
                       l_msg_data,
                       l_msg_count,
                       l_atp_supply_demand,
                       l_atp_period,
                       l_atp_details);
                 else
                   MSC_ATP_PVT.Schedule(l_atp_input_table,
                     p_instance_id,
                     p_assign_set_id,
                     p_refresh_number,
                     l_atp_output_table,
                     l_return_status,
                     l_msg_data,
                     l_msg_count,
                     l_atp_supply_demand,
                     l_atp_period,
                     l_atp_details);
               end if;

               -- Bug 1531469
               -- Check if the Scheduling was successful. In case no, set the error code
               -- for all rows where its either success or atp_not_appl or null.


               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN

                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Call_Schedule: ' || 'inside return status error');
                  END IF;
                  x_return_status := FND_API.G_RET_STS_ERROR;
                  k := l_atp_output_table.Calling_Module.First;
                  FOR k in 1.. l_atp_output_table.Calling_Module.COUNT LOOP
                      --l_atp_output_table.Group_Ship_Date(k):= l_group_date;
                      IF (l_atp_output_table.Error_Code(k) = ALLSUCCESS) OR
                         (l_atp_output_table.error_code(k) = ATP_NOT_APPL) OR
                         (l_atp_output_table.Error_Code(k) IS NULL) THEN
                         l_atp_output_table.Error_Code(k) := GROUPEL_ERROR;
                      END IF;
                  END LOOP;
                  IF PG_DEBUG in ('Y', 'C') THEN
                     msc_sch_wb.atp_debug('Call_Schedule: ' || 'after setting group error');
                  END IF;
               END IF;
            END IF; --IF l_set_fail_flag = 'Y' THEN
            -- rajjain 02/03/2003 Bug 2766713 End
            --4500382 Starts
            k := l_atp_output_table.action.FIRST;
            IF l_return_status = FND_API.G_RET_STS_SUCCESS  and l_atp_output_table.action(k) <> 100
                 and  p_atp_table.part_of_set(k) = 'Y' and
               (l_atp_output_table.Error_Code(k) = ALLSUCCESS OR
                    l_atp_output_table.error_code(k) = ATP_NOT_APPL OR
                    l_atp_output_table.Error_Code(k) is NULL) THEN

                    FOR k in 1.. l_atp_output_table.Calling_Module.COUNT
                    LOOP
                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('requested ship date = '||
                                                to_char( p_atp_table.requested_ship_date(k), 'DD-MON-YYYY HH24:MI:SS'));
                           msc_sch_wb.atp_debug('requested arrival date = '
                                                ||to_char( p_atp_table.requested_arrival_date(k), 'DD-MON-YYYY HH24:MI:SS'));
                           msc_sch_wb.atp_debug('group ship date = '
                                                ||to_char( l_atp_output_table.group_Ship_Date(k), 'DD-MON-YYYY HH24:MI:SS'));
                           msc_sch_wb.atp_debug('group arrival date = '
                                                ||to_char( l_atp_output_table.arrival_Date(k), 'DD-MON-YYYY HH24:MI:SS'));
                           msc_sch_wb.atp_debug('arrival date  = '
                                                ||to_char(l_atp_output_table.arrival_Date(k), 'DD-MON-YYYY HH24:MI:SS'));
                           msc_sch_wb.atp_debug('ship date  = '
                                                ||to_char(l_atp_output_table.ship_Date(k), 'DD-MON-YYYY HH24:MI:SS'));
                        END IF;
                        if((( p_atp_table.requested_ship_date(k)is not null and
                            (p_atp_table.requested_ship_date(k) <>
                             greatest(nvl( l_atp_output_table.group_Ship_Date(k),
                                           l_atp_output_table.Ship_Date(k)),
                                      l_atp_output_table.Ship_Date(k )))) or
                                         ( p_atp_table.requested_arrival_date(k)is not null and
                            ( p_atp_table.requested_arrival_date(k) <>
                              greatest(nvl( l_atp_output_table.group_arrival_Date(k),
                                            l_atp_output_table.arrival_Date(k)),
                                       l_atp_output_table.arrival_Date(k)))))) THEN

                           l_atp_output_table.Error_Code(k) := ATP_ACCEPT_FAIL;

                           MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(l_atp_output_table.end_pegging_id(k),
                                                                  l_atp_output_table.instance_id(k),
                                                                  l_atp_output_table.plan_id(k),
                                                                  MSC_ATP_PVT.UNDO,
                                                                  2,--p_dc_flag
                                                                  l_return_status);
                        END IF;
                     END LOOP;
                  END IF;
               --4500382 ENDS
            -- now get the results/details and append it to the 'real' output
            MSC_SATP_FUNC.Assign_Atp_Output_Rec(l_atp_output_table,x_atp_table,l_return_status );

            MSC_ATP_PROC.Details_Output(l_atp_period,
                                        l_atp_supply_demand,
                                        x_atp_period,
                                        x_atp_supply_demand,
                                        l_return_status);

         END IF; 	--IF l_atp_input_table.OE_flag(m) = 'Y' THEN
      END IF;

      -- this is for backlog: we need to send a message back.
      IF PG_DEBUG in ('Y', 'C') THEN
         msc_sch_wb.atp_debug('Call_Schedule: ' || 'before backlog');
      END IF;

      k := l_atp_output_table.Calling_Module.First;
      IF k IS NOT NULL THEN

        IF NVL(l_atp_output_table.Calling_Module(k), 0) = -1 AND l_atp_progess_bar = 'Y' THEN -- backlog 7419485

          IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Call_Schedule: ' || 'for backlog');
          END IF;
          --Bug3765793 adding trim functions to remove spaces from db_link
    	  SELECT ltrim(rtrim(M2A_DBLINK))
    	  INTO   l_dblink
    	  FROM   msc_apps_instances
    	  WHERE  instance_id = p_instance_id;
          IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Call_Schedule: ' || 'after l_dblink : '||l_dblink);
          END IF;

          FOR k in 1..l_atp_output_table.Calling_Module.COUNT LOOP

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Call_Schedule: ' || 'in side for loop for backlog');
           END IF;
/*
            msc_sch_wb.pipe_utility(p_session_id,
                                    'SEND',
                                     l_msg_data,
                                     l_msg_count,
                                     x_return_status,
                                     l_msg_data,
                                     l_msg_count);
*/         --bug3520746 pass MSC_ATP_PVT.G_DATABASE_LINK insead of l_dblink
           --as global variable already has the right dblink for RAC
           IF l_dblink IS NOT NULL THEN
            plsql_block := 'BEGIN msc_sch_wb.pipe_utility'
				||'@'||MSC_ATP_PVT.G_DATABASE_LINK||'(:p_session_id,
                                     :p_command,
                                     :l_msg_data,
                                     :l_msg_number,
                                     :x_return_status,
                                     :l_msg_text,
                                     :l_msg_count); END;';

           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Call_Schedule: ' || 'plsql_block : '|| plsql_block);
           END IF;

           BEGIN
            EXECUTE IMMEDIATE plsql_block USING
                                     p_session_id,
                                     'SEND',
                                     IN OUT l_msg_data,
                                     OUT l_msg_number,
                                     OUT x_return_status,
                                     OUT l_msg_text,
                                     OUT l_msg_count;
           IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Call_Schedule: ' || 'after plsql_block');
           END IF;
           EXCEPTION
		when others then
                      IF PG_DEBUG in ('Y', 'C') THEN
                         msc_sch_wb.atp_debug('Call_Schedule: ' || 'inside send exception : '||sqlcode);
                      END IF;
           END;

           ELSE		--IF l_dblink IS NOT NULL THEN
            msc_sch_wb.pipe_utility(p_session_id,
                                    'SEND',
                                     l_msg_data,
                                     l_msg_number,
                                     x_return_status,
                                     l_msg_count,
                                     l_msg_count);
           END IF;
          END LOOP;
        END IF;
      END IF;

      -- go to the next row.
      -- make sure we jump to the right row since we may process more
      -- than one row due to ship set or arrival set.

       --3720018, Changes for global Availability
       -- Remove_Invalid_SD_Rec is called per source.
       -- When we move to the next source G_REMOVE_REQUEST_LEVEL_REC array is NULLed
       -- Undo_delete_row is not called here but at request level.
      IF (j is NULL) THEN
         l := i;
      ELSE
         l := j;
      END IF;


      IF ( l_global_availability = 'Y' )
	  AND (p_atp_table.source_organization_id(i) <> p_atp_table.source_organization_id(l)) THEN

	  IF PG_DEBUG in ('Y', 'C') THEN
              msc_sch_wb.atp_debug('Call_Schedule: ' || 'Inside global availability check and calling remove_invalid_sd_rec');
          END IF;
          IF ( x_atp_table.Action(1) = ATPQUERY ) THEN
	    IF ( MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST IS NOT NULL AND MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST.Count > 0) THEN
		    FOR m in 1..MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST.COUNT LOOP
		        MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
  			            MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST(m),
                                    p_instance_id,
                                    MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PLAN_ID_REQUEST (m),
                                    UNDO,
                                    MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_DC_ATP_FLAG_REQUEST(m),
  			            l_return_status); --3720018
	            END LOOP;
	    END IF;
          END IF;

	  --3720018, Initialize global variables to NULL.
          MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC := l_null_remove_req_level_rec;

      END IF;

      i := j;

    END LOOP;

    IF PG_DEBUG in ('Y', 'C') THEN
         msc_sch_wb.atp_debug(x_atp_table.Action(1));
         msc_sch_wb.atp_debug(x_atp_table.calling_module(1));
    END IF;

    --3720018, Call to Remove_invalid_SD_rec and Undo_delete_row for the whole_request in case of ATP Inquiry
    IF ( x_atp_table.Action(1) = ATPQUERY ) THEN
      IF PG_DEBUG in ('Y', 'C') THEN
         msc_sch_wb.atp_debug('Call_Schedule: ' || 'Outside global availability check and calling remove_invalid_sdrec');
      END IF;

      IF ( MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST IS NOT NULL AND MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST.Count > 0) THEN
        FOR m in 1..MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST.COUNT LOOP
	    MSC_ATP_DB_UTILS.Remove_Invalid_SD_Rec(
  	            MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PEGGING_ID_REQUEST(m)  ,
                    p_instance_id,
                    MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_PLAN_ID_REQUEST(m),
                    UNDO,
                    MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC.REMOVE_DC_ATP_FLAG_REQUEST(m),
  	            l_return_status);
	END LOOP;
      END IF;
      IF  (NVL(p_atp_table.calling_module(1), -99) <> 724) OR
          ((NVL(p_atp_table.calling_module(1), -99) = -99) AND
          (l_global_availability = 'Y')) THEN --3720018
            IF (l_delete_atp_rec.del_demand_ids IS NOT NULL AND l_delete_atp_rec.del_demand_ids.Count > 0) OR
               (l_delete_atp_rec.del_ods_demand_ids IS NOT NULL AND l_delete_atp_rec.del_ods_demand_ids.Count > 0)  THEN
 		    MSC_ATP_DB_UTILS.Undo_Delete_Row(
                    l_delete_atp_rec.del_identifiers,
                    l_delete_atp_rec.del_plan_ids,
                    p_instance_id,
                    l_delete_atp_rec.del_demand_ids,
                    l_delete_atp_rec.del_inv_item_ids,
                    l_delete_atp_rec.del_copy_demand_ids,
                    l_delete_atp_rec.del_copy_demand_plan_ids,
                    l_delete_atp_rec.time_phased_set,
                    l_delete_atp_rec.del_atp_peg_items,
                    l_delete_atp_rec.del_atp_peg_demands,
                    l_delete_atp_rec.del_atp_peg_supplies,
                    l_delete_atp_rec.del_atp_peg_res_reqs,
                    l_delete_atp_rec.del_demand_source_type,
                    l_delete_atp_rec.atp_peg_demands_plan_ids,
                    l_delete_atp_rec.atp_peg_supplies_plan_ids,
                    l_delete_atp_rec.atp_peg_res_reqs_plan_ids,
                    l_delete_atp_rec.del_ods_demand_ids,         --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_inv_item_ids,       --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_demand_src_type,    --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_demand_ids,     --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_inv_item_ids,   --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_dem_src_type,   --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_atp_refresh_no,     --3720018, added for support of rescheduling in ODS
                    l_delete_atp_rec.del_ods_cto_atp_refresh_no  --3720018, added for support of rescheduling in ODS
                    );
	    END IF;
      END IF;

      MSC_ATP_PVT.G_REMOVE_REQUEST_LEVEL_REC := l_null_remove_req_level_rec;

    END IF;

   --3720018 (end of changes)

    -- Delete records from MSC_REGIONS_TEMP before returning back to calling
    -- application so as to clean up the table for another request within
    -- same session for Region Level Sourcing Support

    DELETE msc_regions_temp
    WHERE session_id = p_session_id;

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule: ' || 'Rows deleted from msc_regions_temp : '||sql%rowcount);
    END IF;
    --bug3940999 Delete records from msc_atp_src_profile_temp before returning
    --back to calling application so as to clean up the table
    DELETE msc_atp_src_profile_temp
    WHERE session_id = p_session_id;



    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule: ' || 'Rows deleted from msc_atp_src_profile_temp : '||sql%rowcount);
       msc_sch_wb.atp_debug('Call_Schedule: ' || 'Before calling MSC_ATP_PROC.Delete_Copy_Demand');
    END IF;

    -- Summary enhancement - Delete the copy demands that were created in this transaction if refresh number has moved.
    IF MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y' THEN --bug4291375 Delete_Copy_Demand should be called when summary is ON.
       MSC_ATP_DB_UTILS.Delete_Copy_Demand(MSC_ATP_PVT.G_COPY_DEMAND_ID,
                                           MSC_ATP_PVT.G_COPY_DEMAND_PLAN_ID,
                                           G_TIME_PHASED_SET,
                                           l_return_status);
    END IF;
    MSC_ATP_PVT.G_COPY_DEMAND_ID        := MRP_ATP_PUB.number_arr();
    MSC_ATP_PVT.G_COPY_DEMAND_PLAN_ID   := MRP_ATP_PUB.number_arr();

    --Bug 3629191: Insert Offset Record to MRP_ATP_DETAILS_TEMP with record_type = 3
    -- and these will be inserted with NULL in all the three pegging_id columns

     IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule: G_OFF_DEM_TRANS_ID.count ' || G_OFF_DEM_TRANS_ID.count);
       for i in 1..G_OFF_DEM_TRANS_ID.count LOOP
         msc_sch_wb.atp_debug('Call_Schedule: ' ||G_OFF_INSTANCE_ID(i) ||',' || G_OFF_PLAN_ID(i)||','||G_OFF_DEM_TRANS_ID(i));
       END LOOP;
    END IF;

    IF (MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y')  THEN
    FORALL i in 1..G_OFF_DEM_TRANS_ID.count
    INSERT INTO MRP_ATP_DETAILS_TEMP(
                                     session_id,
                                     identifier1,
                                     identifier2,
                                     identifier3,
                                     record_type,
                                     scenario_id,
                                     summary_flag
                                     )
                               VALUES(
                                     p_session_id,
                                     G_OFF_INSTANCE_ID(i),
                                     G_OFF_PLAN_ID(i),
                                     G_OFF_DEM_TRANS_ID(i),
                                     3,
                                     1,
                                     'Y'
                                     );
    END IF;

    /* rajjain 02/27/2003 Bug 2824700 Begin
     * Restructured Exception/WF Notification code */
    l_wf_profile := NVL(G_ATP_WORKFLOW,
			NVL(fnd_profile.value('MSC_ALLOCATED_ATP_WORKFLOW'), 'N'));
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule: ' || 'WF Profile:' || l_wf_profile);
    END IF;

    k := x_atp_table.Calling_Module.First;
    -- Generate exceptions only if action is not ATP query.
    IF x_atp_table.Action(k) <> 100 THEN

       WHILE k IS NOT NULL LOOP
                -- re-initialize these variables
                l_wf_start := NULL;
                l_exception_rec.demand_id := NULL;

                IF PG_DEBUG in ('Y', 'C') THEN
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'k := '||k);
                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'Override_flag : '||x_atp_table.Override_Flag(k));
	        END IF;

                /* rajjain code specific to workflow generation begin*/
                IF NVL(l_wf_profile, 'N') = 'Y' AND MSC_ATP_PVT.G_INV_CTP = 4 THEN
                     -- generate workflow notification only in case of PDS.
                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Call_Schedule: ' || '*** Begin Workflow Notification ***');
                        msc_sch_wb.atp_debug('Call_Schedule: ' || 'qty ordered : '||x_atp_table.Quantity_Ordered(k));
                        msc_sch_wb.atp_debug('Call_Schedule: ' || 'req_date_qty : '||x_atp_table.Requested_Date_Quantity(k));
                     END IF;

                     IF (nvl(x_atp_table.Error_Code(k),-1) = 0) AND (NVL(x_atp_table.Override_Flag(k), 'N') = 'Y') THEN
                         BEGIN
						   -- Bug 3444096, use x_atp_table.match_item_id for match cases in CTO
                           SELECT MAX(supply_demand_date)
                           INTO   l_avail_date
                           FROM   mrp_atp_details_temp
                           WHERE  session_id = p_session_id
                           AND    order_line_id =  x_atp_table.identifier(k)
                           AND    parent_pegging_id = end_pegging_id
                           AND    supply_demand_type = 2
                           AND    record_type = 3
                           AND    inventory_item_id = NVL(x_atp_table.match_item_id(k), x_atp_table.inventory_item_id(k));
                         EXCEPTION
                           WHEN no_data_found THEN
                                l_avail_date := NULL;
                           WHEN others THEN
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('Call_Schedule: ' || '***** Error getting Available Date for WF *****');
                                END IF;
                                l_avail_date := NULL;
                         END;

        		 l_wf_start := 'Y';
        	     END IF;	--IF x_atp_table.Override_Flag ... THEN

                     IF PG_DEBUG in ('Y', 'C') THEN
                        msc_sch_wb.atp_debug('Call_Schedule: ' || 'l_avail_date : '||l_avail_date);
                     END IF;
                     IF (nvl(x_atp_table.Error_Code(k),-1) IN (0,53)) AND MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' THEN

                         IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Call_Schedule: ' || 'Inside Workflow for Action : '||
                                       x_atp_table.Action(k));
                           msc_sch_wb.atp_debug('Call_Schedule: ' || 'Inside Workflow for calling Module : '||
                                       x_atp_table.Calling_Module(k));
                         END IF;

                         BEGIN
						   -- Bug 3444096, use x_atp_table.match_item_id for match cases in CTO
                           SELECT NVL(sum(NVL(allocated_quantity, 0)), 0)
                           INTO   l_stealing_qty
                           FROM   mrp_atp_details_temp
                           WHERE  session_id = p_session_id
                           AND    order_line_id =  x_atp_table.identifier(k)
                           AND    parent_pegging_id = end_pegging_id
                           AND    char1 IS NOT NULL
                           AND    record_type = 3
                           AND    inventory_item_id = NVL(x_atp_table.match_item_id(k), x_atp_table.inventory_item_id(k));
                         EXCEPTION
                           WHEN no_data_found THEN
                                l_stealing_qty := 0;
                           WHEN others THEN
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('Call_Schedule: ' || '***** Error getting stealing qty for WF *****');
                                END IF;
                                l_stealing_qty := -1;
                         END;

                         IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('Call_Schedule: ' || 'l_stealing_qty : '||l_stealing_qty);
                         END IF;

        		 l_wf_start := 'Y';
        	     END IF;	--IF MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y' THEN

        	     IF NVL(l_wf_start, 'N') = 'Y' THEN

        	         -- Get the demand_id from mrp_atp_details_temp
                         BEGIN
						   -- Bug 3444096, use x_atp_table.match_item_id for match cases in CTO
                           SELECT p_session_id ||':'||mrp_atp_schedule_temp_s.nextval,
                                  DECODE(x_atp_table.Requested_Ship_Date(k),
                                             NULL, x_atp_table.Requested_Arrival_Date(k),
                                             x_atp_table.Requested_Ship_Date(k)),
                                  identifier3,
                                  identifier2
                           INTO   l_wf_item_key,
                                  l_req_ship_date,
                                  l_exception_rec.demand_id,
                                  l_plan_id
                           FROM   mrp_atp_details_temp
                           WHERE  session_id = p_session_id
                           AND    order_line_id =  x_atp_table.identifier(k)
                           AND    inventory_item_id = NVL(x_atp_table.match_item_id(k), x_atp_table.inventory_item_id(k))
                           AND    record_type = 3
                           AND    parent_pegging_id IS NULL;

                         EXCEPTION
                           WHEN no_data_found THEN
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('Call_Schedule: ' || 'No Data Found getting item key for WF');
                                END IF;
                                l_wf_item_key := NULL;
                           WHEN others THEN
                                IF PG_DEBUG in ('Y', 'C') THEN
                                   msc_sch_wb.atp_debug('Call_Schedule: ' || '***** Error getting item key for WF *****');
                                END IF;
                                l_wf_item_key := NULL;
                         END;

                         IF PG_DEBUG in ('Y', 'C') THEN
                            msc_sch_wb.atp_debug('Call_Schedule: ' || 'l_wf_item_key : '||l_wf_item_key);
                            msc_sch_wb.atp_debug('Call_Schedule: ' || 'l_plan_id : '||l_plan_id);
                            msc_sch_wb.atp_debug('Call_Schedule: ' || 'l_exception_rec.demand_id : '||l_exception_rec.demand_id);
                         END IF;

                         IF ((nvl(x_atp_table.Requested_Date_Quantity(k),0) < nvl(x_atp_table.Quantity_Ordered(k),0)) OR
                            (nvl(l_stealing_qty, 0) > 0)) AND (MSC_ATP_PVT.G_ALLOCATED_ATP = 'Y') AND
        		    (l_wf_item_key IS NOT NULL) THEN

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('Call_Schedule: ' || 'Before Allocated ATP Workflow');
                            END IF;
                            --bug 2463556: wrap workflow call with begin end so that if any exception
                            ---occurs in workflow generation then ATP continues as normal

                            -- Start Work Flow
                            BEGIN
							   -- Bug 3444096, use x_atp_table.match_item_id and matched_item_name for match cases in CTO
                               msc_wf_alloc_atp.start_mscalloc_wf(
                                   l_wf_item_key,  NVL(x_atp_table.match_item_id(k), x_atp_table.inventory_item_id(k)),
                                   NVL(x_atp_table.matched_item_name(k), x_atp_table.inventory_item_name(k)), l_plan_id,
                                   x_atp_table.source_organization_id(k), x_atp_table.source_organization_code(k),
                                   p_instance_id, x_atp_table.demand_class(k),
                                   x_atp_table.quantity_ordered(k), l_req_ship_date,
                                   x_atp_table.Requested_Date_Quantity(k), x_atp_table.Available_Quantity(k),
                                   x_atp_table.ship_date(k), l_stealing_qty, x_atp_table.Customer_Id(k),
        			               x_atp_table.Customer_Site_Id(k),x_atp_table.Order_Number(k));
                            EXCEPTION
                                  WHEN OTHERS THEN
                                      IF PG_DEBUG in ('Y', 'C') THEN
                                         msc_sch_wb.atp_debug('Call_Schedule: ' || ' Allocated ATP WF notification generation failed');
                                      END IF;
                            END;

                         END IF;

                         IF ((nvl(x_atp_table.Requested_Date_Quantity(k),0) < nvl(x_atp_table.Quantity_Ordered(k),0)) AND
                            (nvl(x_atp_table.Override_Flag(k), 'N') = 'Y')) AND
        		    (l_wf_item_key IS NOT NULL) THEN

                            IF PG_DEBUG in ('Y', 'C') THEN
                               msc_sch_wb.atp_debug('Call_Schedule: ' || 'Before ATP Override Workflow');
                            END IF;
                            --bug 2463556: wrap workflow call with begin end so that if any exception
                            ---occurs in workflow generation then ATP continues as normal

                            -- Start Work Flow
                            BEGIN
							  -- Bug 3444096, use x_atp_table.match_item_id and matched_item_name for match cases in CTO
                              msc_wf_alloc_atp.start_mscatp_wf(
                                   l_wf_item_key, NVL(x_atp_table.match_item_id(k), x_atp_table.inventory_item_id(k)),
                                   NVL(x_atp_table.matched_item_name(k), x_atp_table.inventory_item_name(k)), l_plan_id,
                                   x_atp_table.source_organization_id(k), x_atp_table.source_organization_code(k),
                                   p_instance_id, x_atp_table.demand_class(k),
                                   x_atp_table.quantity_ordered(k), l_req_ship_date,
                                   x_atp_table.Requested_Date_Quantity(k), x_atp_table.Available_Quantity(k),
                                   l_avail_date, x_atp_table.Customer_Id(k),
        			               x_atp_table.Customer_Site_Id(k),x_atp_table.Order_Number(k), x_atp_table.Identifier(k));
                            EXCEPTION
                                 WHEN OTHERS THEN
                                    IF PG_DEBUG in ('Y', 'C') THEN
                                       msc_sch_wb.atp_debug('Call_Schedule: ' || 'ATP Override WF Notification Generation Failed');
                                    END IF;

                            END;
                         END IF;
                     END IF;
        	END IF;
        	/* rajjain code specific to workflow generation end */

                /* rajjain code specific to ATP Override Exception begin
                 * ATP Override rajjain begin 10/11/2002 Generate Exceptions */
	        IF (nvl(x_atp_table.Requested_Date_Quantity(k),0) < nvl(x_atp_table.Quantity_Ordered(k),0))
	            AND (nvl(x_atp_table.Override_Flag(k), 'N') = 'Y')
                    -- bug 2795053-reopen (ssurendr): Generate exception only if set is successful
	            AND (nvl(x_atp_table.Error_Code(k),-1) = 0)
	        THEN
                  IF PG_DEBUG in ('Y', 'C') THEN
                    msc_sch_wb.atp_debug('Call_Schedule: ' || 'Before ATP Override Exception');
	          END IF;

                  -- 24x7
                  if (NVL(MSC_ATP_PVT.G_SYNC_ATP_CHECK, 'N') = 'Y' ) then
                       if (x_atp_table.instance_id.exists(k)) then
                           l_instance_id := NVL (x_atp_table.instance_id(k),
                                   x_atp_table.instance_id(x_atp_table.instance_id.FIRST));
                       else
                           l_instance_id := x_atp_table.instance_id(x_atp_table.instance_id.FIRST);
                       end if;
                  else
                       l_instance_id := p_instance_id;
                  end if;
                  IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug ('Call_Schedule: ' || 'Using Instance ID : ' || l_instance_id);
                  END IF;
                  -- End 24x7

                  If l_exception_rec.demand_id is null THEN
        	        -- Get the demand_id from mrp_atp_details_temp
                        BEGIN
						  -- Bug 3444096, use x_atp_table.match_item_id for match cases in CTO
                          SELECT identifier3,
                                 identifier2
                          INTO   l_exception_rec.demand_id,
                                 l_plan_id
                          FROM   mrp_atp_details_temp
                          WHERE  session_id = p_session_id
                          AND    order_line_id =  x_atp_table.identifier(k)
                          AND    inventory_item_id = NVL(x_atp_table.match_item_id(k), x_atp_table.inventory_item_id(k))
                          AND    record_type = 3
                          AND    parent_pegging_id IS NULL;

                        EXCEPTION
                          WHEN no_data_found THEN
                               IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('Call_Schedule: ' || 'Exception: No data found');
                               END IF;
                               l_exception_rec.demand_id := NULL;
                          WHEN others THEN
                               IF PG_DEBUG in ('Y', 'C') THEN
                                  msc_sch_wb.atp_debug('Call_Schedule: ' || '***** Error getting demand_id for generating exception *****');
                               END IF;
                               l_exception_rec.demand_id := NULL;
                        END;

                        IF PG_DEBUG in ('Y', 'C') THEN
                           msc_sch_wb.atp_debug('Call_Schedule: ' || 'l_exception_rec.demand_id : '||l_exception_rec.demand_id);
                           msc_sch_wb.atp_debug('Call_Schedule: ' || 'l_plan_id : '||l_plan_id);
                        END IF;
                  END IF;
                  IF (l_plan_id is not null) AND
                     (l_exception_rec.demand_id is not null) THEN
                    -- bug 2795053-reopen (ssurendr): do not generate exception for non-ATPable items.
                    --                                In case of non-ATPable there will be no pegging record.
                    -- generate exception only in case of PDS. In case of ODS ATP l_plan_id will be null
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug('Call_Schedule: ' || '*** Begin ATP Override Exception ***');
                    END IF;

                    l_exception_rec.exception_type := 68; -- Overcommitment of Sales Order
		    l_exception_rec.quantity := -1 * x_atp_table.quantity_ordered(k);

                    /* rajjain 02/06/2003 Bug 2781863
                       Selecting inventory_item_id from msc_system_items*/
                    BEGIN
					  -- Bug 3444096, use x_atp_table.match_item_id for match cases in CTO
                      Select inventory_item_id
                      into   l_inventory_item_id
                      from   msc_system_items
                      where  plan_id = l_plan_id
                      and    sr_instance_id = l_instance_id
                      and    organization_id = x_atp_table.source_organization_id(k)
                      and    sr_inventory_item_id =  NVL(x_atp_table.match_item_id(k), x_atp_table.inventory_item_id(k));
                    EXCEPTION
                      WHEN OTHERS THEN
                          IF PG_DEBUG in ('Y', 'C') THEN
                             msc_sch_wb.atp_debug('Call_Schedule: ' || 'Error occured while selecting inventory_item_id : ' || sqlerrm);
                          END IF;
                          RAISE FND_API.G_EXC_UNEXPECTED_ERROR ;
                    END;

                    IF PG_DEBUG in ('Y', 'C') THEN
				       msc_sch_wb.atp_debug('Call_Schedule: Inventory Item Id : ' || l_inventory_item_id);
                    END IF;
	            l_exception_rec.exception_group := 5;
	            l_exception_rec.plan_id := l_plan_id;
	            l_exception_rec.organization_id := x_atp_table.source_organization_id(k);
	            l_exception_rec.inventory_item_id := l_inventory_item_id;
	            -- 24x7 : Using l_instance_id
                    -- l_exception_rec.sr_instance_id := p_instance_id;
	            l_exception_rec.sr_instance_id := l_instance_id;
	            l_exception_rec.order_number := x_atp_table.Order_Number(k);
	            l_exception_rec.customer_id := x_atp_table.Customer_Id(k);
	            l_exception_rec.customer_site_id := x_atp_table.Customer_Site_Id(k);
	            l_exception_rec.demand_satisfy_date := x_atp_table.Ship_Date(k); -- bug 2795053-reopen (ssurendr)
	            -- demand_satisfy_date is a misnomer. This actually contains demand date.
	            l_exception_rec.quantity_satisfied := x_atp_table.Requested_Date_Quantity(k);

                    MSC_ATP_EXCEPTIONS.Add_ATP_Exception(p_session_id, l_exception_rec, l_exception_return_status);
                    IF PG_DEBUG in ('Y', 'C') THEN
                       msc_sch_wb.atp_debug ('Call_Schedule: ' || 'Return Status After adding exception : '||
                                          l_exception_return_status);
                    END IF;
                  END IF;
                  msc_sch_wb.atp_debug('Call_Schedule: ' || '*** End ATP Override Exception ***');
                END IF;
                /* rajjain code specific to ATP Override Exception end*/

	        k := x_atp_table.Calling_Module.Next(k);
       END LOOP;
    END IF;
    /* rajjain 02/27/2003 Bug 2824700 End*/

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('***** End Call_Schedule Procedure *****');
    END IF;

END Call_Schedule;


PROCEDURE Call_Schedule_Remote (
               p_session_id         IN    NUMBER,
               p_instance_id        IN    NUMBER,
               p_assign_set_id      IN    NUMBER,
               p_refresh_number     IN    NUMBER,
--               p_inv_ctp            IN    NUMBER := -1,                      --bug3940999 getting from table
               p_def_assign_set_id  IN    NUMBER := -1,
               p_atp_debug_flag     IN    VARCHAR2 := NULL,
--               p_atp_workflow       IN    VARCHAR2 := NULL,                  --bug3940999 getting from table
               --ATP Debug Workflow
               x_session_loc_des    OUT NOCOPY  VARCHAR2,
               x_spid_des           OUT NOCOPY  NUMBER,
               x_trace_loc_des      OUT NOCOPY  VARCHAR2,
               p_node_id            IN    NUMBER DEFAULT null --bug3520746
--               p_use_ship_rec       IN    VARCHAR2 DEFAULT 'N' --bug3593394  --bug3940999 getting from table
) IS

    i                      PLS_INTEGER;
    l_dblink               VARCHAR2(128);
    p_atp_table            MRP_ATP_PUB.ATP_Rec_Typ;
    x_atp_table            MRP_ATP_PUB.ATP_Rec_Typ;
    x_return_status        VARCHAR2(128);
    x_msg_data             VARCHAR2(2000);
    x_msg_count            NUMBER;
    x_atp_supply_demand    MRP_ATP_PUB.ATP_Supply_Demand_Typ;
    x_atp_period           MRP_ATP_PUB.ATP_Period_Typ;
    x_atp_details          MRP_ATP_PUB.ATP_Details_Typ;
    l_atp_bom_rec          MRP_ATP_PUB.ATP_BOM_Rec_Typ;

    -- Bug 2387242 : krajan
    -- Variables for SQL trace setup
    C                      INTEGER;
    STATEMENT              VARCHAR2(255);
    ROWS_PROCESSED         INTEGER;
    l_summary_flag         PLS_INTEGER;
    -- rajjain 12/20/2002
    l_spid                          VARCHAR2(12);

    --bug3940999
    l_profile_value        MRP_ATP_PUB.char255_arr := MRP_ATP_PUB.char255_arr();   --bug3940999
    l_profile_name         MRP_ATP_PUB.char255_arr := MRP_ATP_PUB.char255_arr();   --bug3940999
    l_use_ship_rec         VARCHAR2(2);                                          --bug3940999
    j                      NUMBER ;                                              --bug3940999

BEGIN
    -- initialize API return status to success

    x_return_status := FND_API.G_RET_STS_SUCCESS;
    --bug3940999 setting debug mode explicitly so the messages can be printed
    IF p_atp_debug_flag IS NOT NULL THEN
	   FND_PROFILE.put('MSC_ATP_DEBUG', p_atp_debug_flag);
	   PG_DEBUG := p_atp_debug_flag;
    END IF;
    IF PG_DEBUG in ('Y', 'C') THEN
            --ATP Debug Workflow
	   select ltrim(rtrim(substr(value, instr(value,',',-1,1)+1)))
           into x_session_loc_des
           from v$parameter where name= 'utl_file_dir';
    END IF;
    msc_sch_wb.set_session_id(p_session_id);
    --bug3940999 This code used to be down, moved it up
    IF order_sch_wb.mr_debug in ('T','C') THEN
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'Database Trace being enabled');
         END IF;
         C := DBMS_SQL.OPEN_CURSOR;
         -- STATEMENT := 'ALTER SESSION SET SQL_TRACE=TRUE';
         STATEMENT := 'ALTER SESSION SET  events ' || '''' || '10046 trace name context forever, level 12' || '''' ;
         DBMS_SQL.PARSE(C, STATEMENT, DBMS_SQL.NATIVE);
         ROWS_PROCESSED := DBMS_SQL.EXECUTE(C);
         DBMS_SQL.CLOSE_CURSOR(C);

         -- rajjain 12/20/2002
         SELECT spid
         INTO   l_spid
         FROM   v$process
         WHERE  addr = (SELECT paddr FROM v$session
                        WHERE audsid=userenv('SESSIONID'));
         x_spid_des := l_spid; --ATP Debug Workflow

         SELECT value
         INTO x_trace_loc_des
         from v$parameter
         WHERE name = 'user_dump_dest'; --ATP Debug Workflow

         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'spid: ' || l_spid);
         END IF;

    END IF;

    IF PG_DEBUG in ('Y', 'C') THEN --bug3940999
        msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'G_SESSION_ID : ' || order_sch_wb.debug_session_id);
        msc_sch_wb.atp_debug('***** Begin Call_Schedule_Remote Procedure *****');
        msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'p_node_id            : ' || p_node_id           );
        msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'p_session_id         : ' || p_session_id        );
        msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'p_instance_id        : ' || p_instance_id       );
        msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'p_assign_set_id      : ' || p_assign_set_id     );
        msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'p_refresh_number     : ' || p_refresh_number    );
        msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'p_def_assign_set_id  : ' || p_def_assign_set_id );
    END IF;

    --bug3520746 start
    l_dblink := null;
    IF p_node_id is not null THEN
       BEGIN
         --Bug3765793 adding trim functions to remove spaces from db_link
         SELECT ltrim(rtrim(M2A_DBLINK))
         INTO   l_dblink
         FROM   msc_apps_instance_nodes
         WHERE  instance_id = p_instance_id and
                node_id     = p_node_id;
       EXCEPTION
        WHEN OTHERS THEN
            l_dblink := null;
            IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Did not get records in rac case');
            END IF;
       END;
    ELSE --6697106
    ---bug 2301524: read summary flag
    --Bug3765793 adding trim functions to remove spaces from db_link
    SELECT NVL(l_dblink,ltrim(rtrim(M2A_DBLINK)))
    INTO   l_dblink
    FROM   msc_apps_instances
    WHERE  instance_id = p_instance_id;
    END IF;
    --bug3520746 end
    SELECT summary_flag, apps_ver
    INTO   l_summary_flag, MSC_ATP_PVT.G_APPS_VER
    FROM   msc_apps_instances
    WHERE  instance_id = p_instance_id;

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'after get m2a_dblink');
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'l_dblink = ' || l_dblink);
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'l_summary_flag := ' || l_summary_flag);
    END IF;

    --bug3940999 start  honor profile options passed from the source
    -- We have passed atp debug mode profile seperately so that debug mode
    -- can be set as we enter Call_Schedule_Remote
    IF l_dblink is not null then
     MSC_SATP_FUNC.get_src_to_dstn_profiles(l_dblink,
                                            p_session_id,
                                            x_return_status);
    END IF;

    select profile_value,profile_name
    bulk collect into l_profile_value,l_profile_name
    from MSC_ATP_SRC_PROFILE_TEMP
    where session_id = p_session_id;

    FOR j in 1..l_profile_name.count LOOP

     IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || l_profile_name(j) || ' : ' || l_profile_value(j));
     END IF;

     IF  l_profile_name(j)   = 'MSC_ALLOCATION_METHOD'      THEN

       MSC_ATP_PVT.G_ALLOCATION_METHOD := NVL(l_profile_value(j),  2 );
       FND_PROFILE.put(l_profile_name(j) , NVL(l_profile_value(j), 2 ));

     ELSIF l_profile_name(j) = 'MSC_ALLOCATED_ATP'          THEN

       MSC_ATP_PVT.G_ALLOCATED_ATP     := NVL(l_profile_value(j), 'N');
       FND_PROFILE.put(l_profile_name(j) , NVL(l_profile_value(j), 'N'));

     ELSIF l_profile_name(j) = 'MSC_CLASS_HIERARCHY'        THEN

       MSC_ATP_PVT.G_HIERARCHY_PROFILE := NVL(l_profile_value(j),  2 );
       FND_PROFILE.put(l_profile_name(j) , NVL(l_profile_value(j),  2 ));

     ELSIF l_profile_name(j) = 'MSC_ALLOCATED_ATP_WORKFLOW' THEN

       G_ATP_WORKFLOW                  := l_profile_value(j);
       FND_PROFILE.put(l_profile_name(j) , l_profile_value(j));

     ELSIF l_profile_name(j) = 'INV_CTP'                    THEN

       MSC_ATP_PVT.G_INV_CTP_SOURCE    := NVL(l_profile_value(j),  0 );

     ELSIF l_profile_name(j) = 'MSC_USE_SHIP_REC_CAL'       THEN

       l_use_ship_rec                  := NVL(l_profile_value(j), 'N');

     --optional_fw
     ELSIF l_profile_name(j) = 'MSC_ENHANCED_FORWARD_ATP'   THEN

       MSC_ATP_PVT.G_FORWARD_ATP     := NVL(l_profile_value(j), 'N');
       FND_PROFILE.put(l_profile_name(j) , NVL(l_profile_value(j), 'N'));

     ELSIF l_profile_name(j) = 'MSC_MOVE_PAST_DUE_TO_SYSDATE'          THEN		--6316476

       MSC_ATP_PVT.G_MOV_PAST_DUE_SYSDATE_PROF := NVL(l_profile_value(j), 'Y');		--6316476

     ELSIF l_profile_name(j) = 'MSC_ZERO_ALLOC_PERC'		THEN		--6359986

     	 MSC_ATP_PVT.G_ZERO_ALLOCATION_PERC := NVL(l_profile_value(j), 'N');		--6359986

     ELSE

        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Call_Schedule_Remote: Inside Else No match Got');
        END IF;
     END IF;

    END LOOP;
    --bug3940999 end honor profile options passed from the source

    /* --bug3940999 set above
    IF p_atp_debug_flag IS NOT NULL THEN
	   FND_PROFILE.put('MSC_ATP_DEBUG', p_atp_debug_flag);
	   PG_DEBUG := p_atp_debug_flag;
    END IF;

    msc_sch_wb.set_session_id(p_session_id);
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'G_SESSION_ID : ' || order_sch_wb.debug_session_id);
    END IF;

    -- Fixed as part of Fix for Bug 3444096, need to set profile value as it is queried again in msc_wf_alloc_atp.start_mscatp_wf
    IF p_atp_workflow IS NOT NULL THEN
       FND_PROFILE.put('MSC_ALLOCATED_ATP_WORKFLOW', p_atp_workflow);
       G_ATP_WORKFLOW := p_atp_workflow;
    END IF;

    -- Bug 2387242 : krajan
    -- Set Sql Trace.
    IF order_sch_wb.mr_debug in ('T','C') THEN
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'Database Trace being enabled');
         END IF;
         C := DBMS_SQL.OPEN_CURSOR;
         -- STATEMENT := 'ALTER SESSION SET SQL_TRACE=TRUE';
         STATEMENT := 'ALTER SESSION SET  events ' || '''' || '10046 trace name context forever, level 12' || '''' ;
         DBMS_SQL.PARSE(C, STATEMENT, DBMS_SQL.NATIVE);
         ROWS_PROCESSED := DBMS_SQL.EXECUTE(C);
         DBMS_SQL.CLOSE_CURSOR(C);

         -- rajjain 12/20/2002
         SELECT spid
         INTO   l_spid
         FROM   v$process
         WHERE  addr = (SELECT paddr FROM v$session
                        WHERE audsid=userenv('SESSIONID'));
         IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'spid: ' || l_spid);
         END IF;

    END IF;

    -- store p_inv_ctp and assignment_set_id passed from source
    -- in global variable for bug 2368426 starts
    --MSC_ATP_PVT.G_INV_CTP_SOURCE := NVL(p_inv_ctp, 0); --bug3940999 set above
    MSC_ATP_PVT.G_SR_ASSIGN_SET := NVL(p_def_assign_set_id, 0);
    -- changes for bug 2368426 ends

    IF PG_DEBUG in ('Y', 'C') THEN
        msc_sch_wb.atp_debug('***** Begin Call_Schedule_Remote Procedure *****');
        msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'p_node_id      : ' || p_node_id);
        msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'p_use_ship_rec : ' || p_use_ship_rec);
    END IF;
    --bug3520746 start
    l_dblink := null;
    IF p_node_id is not null THEN
       BEGIN
         --Bug3765793 adding trim functions to remove spaces from db_link
         SELECT ltrim(rtrim(M2A_DBLINK))
         INTO   l_dblink
         FROM   msc_apps_instance_nodes
         WHERE  instance_id = p_instance_id and
                node_id     = p_node_id;
       EXCEPTION
        WHEN OTHERS THEN
            l_dblink := null;
            IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Did not get records in rac case');
            END IF;
       END;
    ELSE --6697106
    ---bug 2301524: read summary flag
    --Bug3765793 adding trim functions to remove spaces from db_link
      SELECT NVL(l_dblink,ltrim(rtrim(M2A_DBLINK)))
      INTO   l_dblink
      FROM   msc_apps_instances
      WHERE  instance_id = p_instance_id;
    END IF;
    --bug3520746 end
    SELECT summary_flag, apps_ver
    INTO   l_summary_flag, MSC_ATP_PVT.G_APPS_VER
    FROM   msc_apps_instances
    WHERE  instance_id = p_instance_id;
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'after get m2a_dblink');
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'l_dblink = ' || l_dblink);
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'l_summary_flag := ' || l_summary_flag);
    END IF;
    */ --bug3940999 end
    MSC_ATP_PVT.G_SR_ASSIGN_SET := NVL(p_def_assign_set_id, 0);
    MSC_ATP_PVT.G_DATABASE_LINK := l_dblink;

    --s_cto_rearch: 24x7
    MSC_ATP_PVT.G_REFRESH_NUMBER := p_refresh_number;
    --e_cto_rearch: 24x7

    MSC_ATP_UTILS.Get_From_Temp_Table(
                l_dblink,
                p_session_id,
                p_atp_table,
                x_atp_supply_demand,
                x_atp_period,
		x_atp_details ,
		MSC_ATP_UTILS.REQUEST_MODE,
                x_return_status,
                x_msg_data,
                x_msg_count,
                2);

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'after get_from_temp_table'||p_atp_table.action.count);
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'before Call_Schedule');
    END IF;

    --- 2301524: Summary mode is not supported for backlog workbench.
    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'G_SUMMARY_FLAG := ' || MSC_ATP_PVT.G_SUMMARY_FLAG);
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'G_ALLOCATED_ATP := ' || MSC_ATP_PVT.G_ALLOCATED_ATP);
       msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'calling_module := '||  p_atp_table.calling_module(1));
    END IF;
    IF NVL(p_atp_table.calling_module(1), -99) = -1 and NVL(l_summary_flag, -1) <> 200 AND MSC_ATP_PVT.G_SUMMARY_FLAG = 'Y'
          and MSC_ATP_PVT.G_ALLOCATED_ATP = 'N' AND MSC_ATP_PVT.G_INV_CTP = 5 THEN  -- INV_CTP check added for summary enhancement
          --- if backlog workbench is used then set the summary falg to 200 for ODS cases
          IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'Site is using backlog workbench, update tables and turnoff ODS summary');
          END IF;

          update  msc_apps_instances
          set     summary_flag = 200;

          MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';
    ELSIF l_summary_flag = 200 AND MSC_ATP_PVT.G_INV_CTP = 5 THEN  -- INV_CTP check added for summary enhancement
          --site is using backlog workbench, turn off the summary flag for ODS cases;
          IF PG_DEBUG in ('Y', 'C') THEN
             msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'Site is using backlog workbench, turnoff ODS summary');
          END IF;
          MSC_ATP_PVT.G_SUMMARY_FLAG := 'N';
    END IF;


    -- bug3940999 Moved code from Line 579 in Schedule here, not directly due to this bug
    -- Also changed the order of IF condition.
    IF l_use_ship_rec <> MSC_ATP_PVT.G_USE_SHIP_REC_CAL THEN --bug3593394

        --bug3593394
        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'G_USE_SHIP_REC_CAL doesnt match');
        END IF;
        x_atp_table := p_atp_table;
        i := x_atp_table.action.FIRST;
        WHILE i IS NOT NULL LOOP
            IF (i=1) or
               (NVL(x_atp_table.Ship_Set_Name(i),-99) <> NVL(x_atp_table.Ship_Set_Name(i-1),-100) AND
                       NVL(x_atp_table.Arrival_Set_Name(i),-99) <> NVL(x_atp_table.Arrival_Set_Name(i-1),-100)) THEN
                -- Independent line or first line of a set. Error should be USE_SHIP_REC_NOT_IN_SYNC
                x_atp_table.error_code(i) := MSC_ATP_PVT.USE_SHIP_REC_NOT_IN_SYNC;
            ELSE
                -- Part of a set. Error code should be
                x_atp_table.error_code(i) := MSC_ATP_PVT.GROUPEL_ERROR;
            END IF;
            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'error_code(' || i || ') : ' || x_atp_table.error_code(i));
            END IF;
            i := p_atp_table.Action.NEXT(i);
       END LOOP;

    ELSIF MSC_ATP_PVT.G_INV_CTP_SOURCE <> MSC_ATP_PVT.G_INV_CTP THEN

       IF PG_DEBUG in ('Y', 'C') THEN
           msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'Source INV_CTP not in sync with destination ');
       END IF;
       x_atp_table := p_atp_table;
        i := x_atp_table.action.FIRST;
        WHILE i IS NOT NULL LOOP
            IF (i=1) or
               (NVL(x_atp_table.Ship_Set_Name(i),-99) <> NVL(x_atp_table.Ship_Set_Name(i-1),-100) AND
                       NVL(x_atp_table.Arrival_Set_Name(i),-99) <> NVL(x_atp_table.Arrival_Set_Name(i-1),-100)) THEN
                -- Independent line or first line of a set. Error should be INV_CTP_NOT_IN_SYNC
                x_atp_table.error_code(i) := MSC_ATP_PVT.INV_CTP_NOT_IN_SYNC;
            ELSE
                -- Part of a set. Error code should be
                x_atp_table.error_code(i) := MSC_ATP_PVT.GROUPEL_ERROR;
            END IF;
            IF PG_DEBUG in ('Y', 'C') THEN
                msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'error_code(' || i || ') : ' || x_atp_table.error_code(i));
            END IF;
            i := p_atp_table.Action.NEXT(i);
       END LOOP;

    ELSE

       MSC_ATP_PVT.Call_Schedule(p_session_id,
                p_atp_table,
                p_instance_id,
                p_assign_set_id,
                p_refresh_number,
                x_atp_table,
                x_return_status,
                x_msg_data,
                x_msg_count,
                x_atp_supply_demand,
                x_atp_period,
                x_atp_details);

        IF PG_DEBUG in ('Y', 'C') THEN
            msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'after Call_Schedule');
        END IF;

    END IF;

    MSC_ATP_UTILS.Put_Into_Temp_Table(
                l_dblink,
                p_session_id,
                x_atp_table,
                x_atp_supply_demand,
                x_atp_period,
                x_atp_details,
		MSC_ATP_UTILS.RESULTS_MODE,
                x_return_status,
                x_msg_data,
                x_msg_count);

IF PG_DEBUG in ('Y', 'C') THEN
   msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'here');
END IF;
    IF l_dblink IS NOT NULL THEN
	MSC_ATP_UTILS.Transfer_mrp_atp_details_temp(l_dblink, p_session_id);
    END IF;

    -- Bug 2387242 : krajan
    -- Set Sql Trace.
    IF order_sch_wb.mr_debug in ('T','C') THEN
               IF PG_DEBUG in ('Y', 'C') THEN
                  msc_sch_wb.atp_debug('Call_Schedule_Remote: ' || 'Database Trace disabled');
               END IF;
               C := DBMS_SQL.OPEN_CURSOR;
               STATEMENT := 'ALTER SESSION SET SQL_TRACE=FALSE';
               DBMS_SQL.PARSE(C, STATEMENT, DBMS_SQL.NATIVE);
               ROWS_PROCESSED := DBMS_SQL.EXECUTE(C);
               DBMS_SQL.CLOSE_CURSOR(C);
    END IF;

    IF PG_DEBUG in ('Y', 'C') THEN
       msc_sch_wb.atp_debug('***** End Call_Schedule_Remote Procedure *****');
    END IF;

END Call_Schedule_Remote;
PROCEDURE Process_Time_Stamp_Errors (l_atp_table  IN OUT NOCOPY   MRP_ATP_PUB.ATP_Rec_Typ,
                                     i NUMBER)
IS
   BEGIN

      IF PG_DEBUG in ('Y', 'C') THEN
         msc_sch_wb.atp_debug('********** Begin Process_Time_Stamp_Errors **********');
          msc_sch_wb.atp_debug('ship_date:(Before) ' ||  to_char(l_atp_table.ship_date(i), 'DD-MON-YYYY HH24:MI:SS'));
          msc_sch_wb.atp_debug('Req. ship_date:(Before) ' ||  to_char(l_atp_table.requested_ship_date(i), 'DD-MON-YYYY HH24:MI:SS'));
          msc_sch_wb.atp_debug('MSC_ATP_PVT.G_RETAIN_TIME_NON_ATP := ' ||  MSC_ATP_PVT.G_RETAIN_TIME_NON_ATP);
          msc_sch_wb.atp_debug('MSC_ATP_PVT.G_ATP_ITEM_PRESENT_IN_SET := ' ||  MSC_ATP_PVT.G_ATP_ITEM_PRESENT_IN_SET);
      END IF;

       IF MSC_ATP_PVT.G_RETAIN_TIME_NON_ATP = 'Y' and MSC_ATP_PVT.G_ATP_ITEM_PRESENT_IN_SET = 'N' THEN
       	--bug 9237457, We should TRUNC ship/arrival date before adding time_stamp even if G_RETAIN_TIME_NON_ATP = 'Y'
          IF l_atp_table.requested_ship_date(i) is not null then
             l_atp_table.ship_date(i) := trunc(l_atp_table.ship_date(i)) +
                (l_atp_table.requested_ship_date(i)
                 - TRUNC(l_atp_table.requested_ship_date(i)));
             l_atp_table.arrival_date(i) := trunc(l_atp_table.arrival_date(i)) +  --4967040
                (l_atp_table.requested_ship_date(i)
                 - TRUNC(l_atp_table.requested_ship_date(i)));

          ELSE
             l_atp_table.arrival_date(i) := trunc(l_atp_table.arrival_date(i)) +
                (l_atp_table.requested_arrival_date(i)
                 - TRUNC(l_atp_table.requested_arrival_date(i)));
             l_atp_table.ship_date(i) := trunc(l_atp_table.ship_date(i)) +        --4967040
                (l_atp_table.requested_arrival_date(i)
                 - TRUNC(l_atp_table.requested_arrival_date(i)));
          END IF;
       ELSE
          IF l_atp_table.requested_ship_date(i) is not null then
             l_atp_table.ship_date(i) := trunc(l_atp_table.ship_date(i)) +  MSC_ATP_PVT.G_END_OF_DAY;
             l_atp_table.arrival_date(i) := trunc(l_atp_table.arrival_date(i)) +  MSC_ATP_PVT.G_END_OF_DAY; --4967040
          ELSE
             l_atp_table.arrival_date(i) := trunc(l_atp_table.arrival_date(i)) +  MSC_ATP_PVT.G_END_OF_DAY;
             l_atp_table.ship_date(i) := trunc(l_atp_table.ship_date(i)) +  MSC_ATP_PVT.G_END_OF_DAY; --4967040

          END IF;
       END IF;
       MSC_ATP_PROC.G_latest_ship_date_set := GREATEST(NVL(MSC_ATP_PROC.G_latest_ship_date_set, l_atp_table.ship_date(i)),
                                                       NVL(l_atp_table.ship_date(i), MSC_ATP_PROC.G_latest_ship_date_set));
       MSC_ATP_PROC.G_latest_arr_date_set  := GREATEST(NVL(MSC_ATP_PROC.G_latest_arr_date_set, l_atp_table.arrival_date(i)),
                                                       NVL(l_atp_table.arrival_date(i), MSC_ATP_PROC.G_latest_arr_date_set));
       IF PG_DEBUG in ('Y', 'C') THEN
          msc_sch_wb.atp_debug('ship_date:(After) ' ||  to_char(l_atp_table.ship_date(i), 'DD-MON-YYYY HH24:MI:SS'));
          msc_sch_wb.atp_debug('Arrival_date:(After) ' ||  to_char(l_atp_table.arrival_date(i), 'DD-MON-YYYY HH24:MI:SS'));
          msc_sch_wb.atp_debug('Req. ship_date:(After) ' ||  to_char(l_atp_table.requested_ship_date(i), 'DD-MON-YYYY HH24:MI:SS'));
          msc_sch_wb.atp_debug('********** END Process_Time_Stamp_Errors **********');
       END IF;
    END Process_Time_Stamp_Errors;

/*--GET_SEQ_NUM-------------------------------------------------
|  o  This procedure is called from Schedule to return the seq
|       number for the passed date. (Used in binary search algo)
+---------------------------------------------------------------*/
FUNCTION Get_Seq_Num (p_calendar_date           IN DATE,
                      p_calendar_code           IN VARCHAR2,
                      p_instance_id		IN number
                      )  RETURN NUMBER
IS
 l_seq_num		NUMBER;
BEGIN
   IF PG_DEBUG in ('Y', 'C') THEN
      msc_sch_wb.atp_debug('Get_Seq_Num: p_calendar_date: ' || p_calendar_date);
      msc_sch_wb.atp_debug('Get_Seq_Num: p_calendar_code: ' || p_calendar_code);
      msc_sch_wb.atp_debug('Get_Seq_Num: p_instance_id: ' || p_instance_id);
   END IF;
     SELECT  seq_num
     INTO    l_seq_num
     FROM    msc_calendar_dates
     WHERE   calendar_code = p_calendar_code
     AND     seq_num is not null --This date will always be there only case is if ITF is non working day.
     AND     calendar_date = trunc(p_calendar_date)
     AND     sr_instance_id = p_instance_id
     AND     exception_set_id = -1;

  IF PG_DEBUG in ('Y', 'C') THEN
      msc_sch_wb.atp_debug('Get_Seq_Num: l_seq_num: ' || l_seq_num);
  END IF;

  RETURN	l_seq_num;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    IF PG_DEBUG in ('Y', 'C') THEN
      msc_sch_wb.atp_debug('Get_Seq_Num: Inside exception block ');
    END IF;
     FND_MESSAGE.SET_NAME('MRP', 'GEN-DATE OUT OF BOUNDS');
     APP_EXCEPTION.RAISE_EXCEPTION;
END Get_Seq_Num;

/*--GET_DATE_FROM_SEQNUM-----------------------------------------
|  o  This procedure is called from Schedule to return the date
|        for the passed seq number. (Used in binary search algo)
+---------------------------------------------------------------*/
FUNCTION Get_Date_From_Seqnum (p_seq_num        IN NUMBER,
                      p_calendar_code           IN VARCHAR2,
                      p_instance_id		IN number
                      )  RETURN DATE
IS
 l_date		DATE;
BEGIN
   IF PG_DEBUG in ('Y', 'C') THEN
      msc_sch_wb.atp_debug('Get_Date_From_Seqnum: p_seq_num: ' || p_seq_num);
      msc_sch_wb.atp_debug('Get_Date_From_Seqnum: p_calendar_code: ' || p_calendar_code);
      msc_sch_wb.atp_debug('Get_Date_From_Seqnum: p_instance_id: ' || p_instance_id);
   END IF;

     SELECT  calendar_date
     INTO    l_date
     FROM    msc_calendar_dates
     WHERE   calendar_code = p_calendar_code
     AND     seq_num = p_seq_num --Seq should always be there if calendar is build till ITF.
     AND     sr_instance_id = p_instance_id
     AND     exception_set_id = -1;

   IF PG_DEBUG in ('Y', 'C') THEN
      msc_sch_wb.atp_debug('Get_Date_From_Seqnum: l_date: ' || l_date);
   END IF;

   RETURN	l_date;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    IF PG_DEBUG in ('Y', 'C') THEN
      msc_sch_wb.atp_debug('Get_Date_From_Seqnum: Inside exception block ');
    END IF;
     FND_MESSAGE.SET_NAME('MRP', 'GEN-DATE OUT OF BOUNDS');
     APP_EXCEPTION.RAISE_EXCEPTION;
END Get_Date_From_Seqnum;

-- Comment
END MSC_ATP_PVT;

/
