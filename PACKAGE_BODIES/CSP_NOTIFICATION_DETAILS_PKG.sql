--------------------------------------------------------
--  DDL for Package Body CSP_NOTIFICATION_DETAILS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."CSP_NOTIFICATION_DETAILS_PKG" AS
/* $Header: csptpndb.pls 115.4 2004/03/12 23:57:09 phegde noship $ */
-- Start of Comments
-- Package name     : CSP_NOTIFICATION_DETAILS_PKG
-- Purpose          :
-- History          :
-- NOTE             :
-- End of Comments

G_PKG_NAME CONSTANT VARCHAR2(30):= 'CSP_NOTIFICATION_DETAILS_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'csptndtb.pls';

PROCEDURE Insert_Row(
          px_NOTIFICATION_DETAIL_ID   IN OUT NOCOPY NUMBER
         ,p_NOTIFICATION_ID    NUMBER
         ,p_INVENTORY_ITEM_ID    NUMBER
         ,p_AVAILABLE_QUANTITY    NUMBER
         ,p_ORDER_BY_DATE    DATE
         ,p_SOURCE_TYPE    VARCHAR2
         ,p_SOURCE_ORGANIZATION_ID    NUMBER
         ,p_SOURCE_SUBINVENTORY    VARCHAR2
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_ATTRIBUTE_CATEGORY    VARCHAR2
         ,p_ATTRIBUTE1    VARCHAR2
         ,p_ATTRIBUTE2    VARCHAR2
         ,p_ATTRIBUTE3    VARCHAR2
         ,p_ATTRIBUTE4    VARCHAR2
         ,p_ATTRIBUTE5    VARCHAR2
         ,p_ATTRIBUTE6    VARCHAR2
         ,p_ATTRIBUTE7    VARCHAR2
         ,p_ATTRIBUTE8    VARCHAR2
         ,p_ATTRIBUTE9    VARCHAR2
         ,p_ATTRIBUTE10    VARCHAR2
         ,p_ATTRIBUTE11    VARCHAR2
         ,p_ATTRIBUTE12    VARCHAR2
         ,p_ATTRIBUTE13    VARCHAR2
         ,p_ATTRIBUTE14    VARCHAR2
         ,p_ATTRIBUTE15    VARCHAR2
         ,p_REPAIR_SUPPLIER_ID NUMBER
         ,p_ORDER_NUMBER   NUMBER
)
 IS
   CURSOR C2 IS SELECT CSP_NOTIFICATION_DETAILS_S1.nextval FROM sys.dual;
BEGIN
   If (px_NOTIFICATION_DETAIL_ID IS NULL) OR (px_NOTIFICATION_DETAIL_ID = FND_API.G_MISS_NUM) then
       OPEN C2;
       FETCH C2 INTO px_NOTIFICATION_DETAIL_ID;
       CLOSE C2;
   End If;
   INSERT INTO CSP_NOTIFICATION_DETAILS(
           NOTIFICATION_DETAIL_ID
          ,NOTIFICATION_ID
          ,INVENTORY_ITEM_ID
          ,AVAILABLE_QUANTITY
          ,ORDER_BY_DATE
          ,SOURCE_TYPE
          ,SOURCE_ORGANIZATION_ID
          ,SOURCE_SUBINVENTORY
          ,CREATED_BY
          ,CREATION_DATE
          ,LAST_UPDATED_BY
          ,LAST_UPDATE_DATE
          ,LAST_UPDATE_LOGIN
          ,ATTRIBUTE_CATEGORY
          ,ATTRIBUTE1
          ,ATTRIBUTE2
          ,ATTRIBUTE3
          ,ATTRIBUTE4
          ,ATTRIBUTE5
          ,ATTRIBUTE6
          ,ATTRIBUTE7
          ,ATTRIBUTE8
          ,ATTRIBUTE9
          ,ATTRIBUTE10
          ,ATTRIBUTE11
          ,ATTRIBUTE12
          ,ATTRIBUTE13
          ,ATTRIBUTE14
          ,ATTRIBUTE15
          ,REPAIR_SUPPLIER_ID
          ,ORDER_NUMBER
          ) VALUES (
           px_NOTIFICATION_DETAIL_ID
          ,decode( p_NOTIFICATION_ID, FND_API.G_MISS_NUM, NULL, p_NOTIFICATION_ID)
          ,decode( p_INVENTORY_ITEM_ID, FND_API.G_MISS_NUM, NULL, p_INVENTORY_ITEM_ID)
          ,decode( p_AVAILABLE_QUANTITY, FND_API.G_MISS_NUM, NULL, p_AVAILABLE_QUANTITY)
          ,decode( p_ORDER_BY_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_ORDER_BY_DATE)
          ,decode( p_SOURCE_TYPE, FND_API.G_MISS_CHAR, NULL, p_SOURCE_TYPE)
          ,decode( p_SOURCE_ORGANIZATION_ID, FND_API.G_MISS_NUM, NULL, p_SOURCE_ORGANIZATION_ID)
          ,decode( p_SOURCE_SUBINVENTORY, FND_API.G_MISS_CHAR, NULL, p_SOURCE_SUBINVENTORY)
          ,decode( p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY)
          ,decode( p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE)
          ,decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
          ,decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE)
          ,decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
          ,decode( p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE_CATEGORY)
          ,decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1)
          ,decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2)
          ,decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3)
          ,decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4)
          ,decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5)
          ,decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6)
          ,decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7)
          ,decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8)
          ,decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9)
          ,decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10)
          ,decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11)
          ,decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12)
          ,decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13)
          ,decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14)
          ,decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15)
          ,decode( p_REPAIR_SUPPLIER_ID, FND_API.G_MISS_NUM, NULL, p_REPAIR_SUPPLIER_ID)
          ,decode( p_ORDER_NUMBER, FND_API.G_MISS_NUM, NULL, p_ORDER_NUMBER)
);
End Insert_Row;

PROCEDURE Update_Row(
          p_NOTIFICATION_DETAIL_ID    NUMBER
         ,p_NOTIFICATION_ID    NUMBER
         ,p_INVENTORY_ITEM_ID    NUMBER
         ,p_AVAILABLE_QUANTITY    NUMBER
         ,p_ORDER_BY_DATE    DATE
         ,p_SOURCE_TYPE    VARCHAR2
         ,p_SOURCE_ORGANIZATION_ID    NUMBER
         ,p_SOURCE_SUBINVENTORY    VARCHAR2
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_ATTRIBUTE_CATEGORY    VARCHAR2
         ,p_ATTRIBUTE1    VARCHAR2
         ,p_ATTRIBUTE2    VARCHAR2
         ,p_ATTRIBUTE3    VARCHAR2
         ,p_ATTRIBUTE4    VARCHAR2
         ,p_ATTRIBUTE5    VARCHAR2
         ,p_ATTRIBUTE6    VARCHAR2
         ,p_ATTRIBUTE7    VARCHAR2
         ,p_ATTRIBUTE8    VARCHAR2
         ,p_ATTRIBUTE9    VARCHAR2
         ,p_ATTRIBUTE10    VARCHAR2
         ,p_ATTRIBUTE11    VARCHAR2
         ,p_ATTRIBUTE12    VARCHAR2
         ,p_ATTRIBUTE13    VARCHAR2
         ,p_ATTRIBUTE14    VARCHAR2
         ,p_ATTRIBUTE15    VARCHAR2
         ,p_REPAIR_SUPPLIER_ID NUMBER
         ,p_ORDER_NUMBER   NUMBER
)
IS
BEGIN
    Update CSP_NOTIFICATION_DETAILS
    SET
        NOTIFICATION_ID = decode( p_NOTIFICATION_ID, FND_API.G_MISS_NUM, NOTIFICATION_ID, p_NOTIFICATION_ID)
       ,INVENTORY_ITEM_ID = decode( p_INVENTORY_ITEM_ID, FND_API.G_MISS_NUM, INVENTORY_ITEM_ID, p_INVENTORY_ITEM_ID)
       ,AVAILABLE_QUANTITY = decode( p_AVAILABLE_QUANTITY, FND_API.G_MISS_NUM, AVAILABLE_QUANTITY, p_AVAILABLE_QUANTITY)
       ,ORDER_BY_DATE = decode( p_ORDER_BY_DATE, FND_API.G_MISS_DATE, ORDER_BY_DATE, p_ORDER_BY_DATE)
       ,SOURCE_TYPE = decode( p_SOURCE_TYPE, FND_API.G_MISS_CHAR, SOURCE_TYPE, p_SOURCE_TYPE)
       ,SOURCE_ORGANIZATION_ID = decode( p_SOURCE_ORGANIZATION_ID, FND_API.G_MISS_NUM, SOURCE_ORGANIZATION_ID, p_SOURCE_ORGANIZATION_ID)
       ,SOURCE_SUBINVENTORY = decode( p_SOURCE_SUBINVENTORY, FND_API.G_MISS_CHAR, SOURCE_SUBINVENTORY, p_SOURCE_SUBINVENTORY)
       ,CREATED_BY = decode( p_CREATED_BY, FND_API.G_MISS_NUM, CREATED_BY, p_CREATED_BY)
       ,CREATION_DATE = decode( p_CREATION_DATE, FND_API.G_MISS_DATE, CREATION_DATE, p_CREATION_DATE)
       ,LAST_UPDATED_BY = decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, LAST_UPDATED_BY, p_LAST_UPDATED_BY)
       ,LAST_UPDATE_DATE = decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, LAST_UPDATE_DATE, p_LAST_UPDATE_DATE)
       ,LAST_UPDATE_LOGIN = decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, LAST_UPDATE_LOGIN, p_LAST_UPDATE_LOGIN)
       ,ATTRIBUTE_CATEGORY = decode( p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, ATTRIBUTE_CATEGORY, p_ATTRIBUTE_CATEGORY)
       ,ATTRIBUTE1 = decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, ATTRIBUTE1, p_ATTRIBUTE1)
       ,ATTRIBUTE2 = decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, ATTRIBUTE2, p_ATTRIBUTE2)
       ,ATTRIBUTE3 = decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, ATTRIBUTE3, p_ATTRIBUTE3)
       ,ATTRIBUTE4 = decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, ATTRIBUTE4, p_ATTRIBUTE4)
       ,ATTRIBUTE5 = decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, ATTRIBUTE5, p_ATTRIBUTE5)
       ,ATTRIBUTE6 = decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, ATTRIBUTE6, p_ATTRIBUTE6)
       ,ATTRIBUTE7 = decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, ATTRIBUTE7, p_ATTRIBUTE7)
       ,ATTRIBUTE8 = decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, ATTRIBUTE8, p_ATTRIBUTE8)
       ,ATTRIBUTE9 = decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, ATTRIBUTE9, p_ATTRIBUTE9)
       ,ATTRIBUTE10 = decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, ATTRIBUTE10, p_ATTRIBUTE10)
       ,ATTRIBUTE11 = decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, ATTRIBUTE11, p_ATTRIBUTE11)
       ,ATTRIBUTE12 = decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, ATTRIBUTE12, p_ATTRIBUTE12)
       ,ATTRIBUTE13 = decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, ATTRIBUTE13, p_ATTRIBUTE13)
       ,ATTRIBUTE14 = decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, ATTRIBUTE14, p_ATTRIBUTE14)
       ,ATTRIBUTE15 = decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, ATTRIBUTE15, p_ATTRIBUTE15)
       ,REPAIR_SUPPLIER_ID = decode( p_REPAIR_SUPPLIER_ID, FND_API.G_MISS_NUM, REPAIR_SUPPLIER_ID, p_REPAIR_SUPPLIER_ID)
       ,ORDER_NUMBER = decode( p_ORDER_NUMBER, FND_API.G_MISS_NUM, ORDER_NUMBER, p_ORDER_NUMBER)
    where NOTIFICATION_DETAIL_ID = p_NOTIFICATION_DETAIL_ID;

    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Update_Row;

PROCEDURE Delete_Row(
    p_NOTIFICATION_DETAIL_ID  NUMBER)
IS
BEGIN
    DELETE FROM CSP_NOTIFICATION_DETAILS
    WHERE NOTIFICATION_DETAIL_ID = p_NOTIFICATION_DETAIL_ID;
    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Delete_Row;

PROCEDURE Lock_Row(
          p_NOTIFICATION_DETAIL_ID    NUMBER
         ,p_NOTIFICATION_ID    NUMBER
         ,p_INVENTORY_ITEM_ID    NUMBER
         ,p_AVAILABLE_QUANTITY    NUMBER
         ,p_ORDER_BY_DATE    DATE
         ,p_SOURCE_TYPE    VARCHAR2
         ,p_SOURCE_ORGANIZATION_ID    NUMBER
         ,p_SOURCE_SUBINVENTORY    VARCHAR2
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_ATTRIBUTE_CATEGORY    VARCHAR2
         ,p_ATTRIBUTE1    VARCHAR2
         ,p_ATTRIBUTE2    VARCHAR2
         ,p_ATTRIBUTE3    VARCHAR2
         ,p_ATTRIBUTE4    VARCHAR2
         ,p_ATTRIBUTE5    VARCHAR2
         ,p_ATTRIBUTE6    VARCHAR2
         ,p_ATTRIBUTE7    VARCHAR2
         ,p_ATTRIBUTE8    VARCHAR2
         ,p_ATTRIBUTE9    VARCHAR2
         ,p_ATTRIBUTE10    VARCHAR2
         ,p_ATTRIBUTE11    VARCHAR2
         ,p_ATTRIBUTE12    VARCHAR2
         ,p_ATTRIBUTE13    VARCHAR2
         ,p_ATTRIBUTE14    VARCHAR2
         ,p_ATTRIBUTE15    VARCHAR2
         ,p_REPAIR_SUPPLIER_ID NUMBER
         ,p_ORDER_NUMBER   NUMBER
)
 IS
   CURSOR C IS
       SELECT *
       FROM CSP_NOTIFICATION_DETAILS
       WHERE NOTIFICATION_DETAIL_ID =  p_NOTIFICATION_DETAIL_ID
       FOR UPDATE of NOTIFICATION_DETAIL_ID NOWAIT;
   Recinfo C%ROWTYPE;
BEGIN
    OPEN C;
    FETCH C INTO Recinfo;
    If (C%NOTFOUND) then
        CLOSE C;
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;
    CLOSE C;
    if (
           (      Recinfo.NOTIFICATION_DETAIL_ID = p_NOTIFICATION_DETAIL_ID)
       AND (    ( Recinfo.NOTIFICATION_ID = p_NOTIFICATION_ID)
            OR (    ( Recinfo.NOTIFICATION_ID IS NULL )
                AND (  p_NOTIFICATION_ID IS NULL )))
       AND (    ( Recinfo.INVENTORY_ITEM_ID = p_INVENTORY_ITEM_ID)
            OR (    ( Recinfo.INVENTORY_ITEM_ID IS NULL )
                AND (  p_INVENTORY_ITEM_ID IS NULL )))
       AND (    ( Recinfo.AVAILABLE_QUANTITY = p_AVAILABLE_QUANTITY)
            OR (    ( Recinfo.AVAILABLE_QUANTITY IS NULL )
                AND (  p_AVAILABLE_QUANTITY IS NULL )))
       AND (    ( Recinfo.ORDER_BY_DATE = p_ORDER_BY_DATE)
            OR (    ( Recinfo.ORDER_BY_DATE IS NULL )
                AND (  p_ORDER_BY_DATE IS NULL )))
       AND (    ( Recinfo.SOURCE_TYPE = p_SOURCE_TYPE)
            OR (    ( Recinfo.SOURCE_TYPE IS NULL )
                AND (  p_SOURCE_TYPE IS NULL )))
       AND (    ( Recinfo.SOURCE_ORGANIZATION_ID = p_SOURCE_ORGANIZATION_ID)
            OR (    ( Recinfo.SOURCE_ORGANIZATION_ID IS NULL )
                AND (  p_SOURCE_ORGANIZATION_ID IS NULL )))
       AND (    ( Recinfo.SOURCE_SUBINVENTORY = p_SOURCE_SUBINVENTORY)
            OR (    ( Recinfo.SOURCE_SUBINVENTORY IS NULL )
                AND (  p_SOURCE_SUBINVENTORY IS NULL )))
       AND (    ( Recinfo.CREATED_BY = p_CREATED_BY)
            OR (    ( Recinfo.CREATED_BY IS NULL )
                AND (  p_CREATED_BY IS NULL )))
       AND (    ( Recinfo.CREATION_DATE = p_CREATION_DATE)
            OR (    ( Recinfo.CREATION_DATE IS NULL )
                AND (  p_CREATION_DATE IS NULL )))
       AND (    ( Recinfo.LAST_UPDATED_BY = p_LAST_UPDATED_BY)
            OR (    ( Recinfo.LAST_UPDATED_BY IS NULL )
                AND (  p_LAST_UPDATED_BY IS NULL )))
       AND (    ( Recinfo.LAST_UPDATE_DATE = p_LAST_UPDATE_DATE)
            OR (    ( Recinfo.LAST_UPDATE_DATE IS NULL )
                AND (  p_LAST_UPDATE_DATE IS NULL )))
       AND (    ( Recinfo.LAST_UPDATE_LOGIN = p_LAST_UPDATE_LOGIN)
            OR (    ( Recinfo.LAST_UPDATE_LOGIN IS NULL )
                AND (  p_LAST_UPDATE_LOGIN IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE_CATEGORY = p_ATTRIBUTE_CATEGORY)
            OR (    ( Recinfo.ATTRIBUTE_CATEGORY IS NULL )
                AND (  p_ATTRIBUTE_CATEGORY IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE1 = p_ATTRIBUTE1)
            OR (    ( Recinfo.ATTRIBUTE1 IS NULL )
                AND (  p_ATTRIBUTE1 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE2 = p_ATTRIBUTE2)
            OR (    ( Recinfo.ATTRIBUTE2 IS NULL )
                AND (  p_ATTRIBUTE2 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE3 = p_ATTRIBUTE3)
            OR (    ( Recinfo.ATTRIBUTE3 IS NULL )
                AND (  p_ATTRIBUTE3 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE4 = p_ATTRIBUTE4)
            OR (    ( Recinfo.ATTRIBUTE4 IS NULL )
                AND (  p_ATTRIBUTE4 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE5 = p_ATTRIBUTE5)
            OR (    ( Recinfo.ATTRIBUTE5 IS NULL )
                AND (  p_ATTRIBUTE5 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE6 = p_ATTRIBUTE6)
            OR (    ( Recinfo.ATTRIBUTE6 IS NULL )
                AND (  p_ATTRIBUTE6 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE7 = p_ATTRIBUTE7)
            OR (    ( Recinfo.ATTRIBUTE7 IS NULL )
                AND (  p_ATTRIBUTE7 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE8 = p_ATTRIBUTE8)
            OR (    ( Recinfo.ATTRIBUTE8 IS NULL )
                AND (  p_ATTRIBUTE8 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE9 = p_ATTRIBUTE9)
            OR (    ( Recinfo.ATTRIBUTE9 IS NULL )
                AND (  p_ATTRIBUTE9 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE10 = p_ATTRIBUTE10)
            OR (    ( Recinfo.ATTRIBUTE10 IS NULL )
                AND (  p_ATTRIBUTE10 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE11 = p_ATTRIBUTE11)
            OR (    ( Recinfo.ATTRIBUTE11 IS NULL )
                AND (  p_ATTRIBUTE11 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE12 = p_ATTRIBUTE12)
            OR (    ( Recinfo.ATTRIBUTE12 IS NULL )
                AND (  p_ATTRIBUTE12 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE13 = p_ATTRIBUTE13)
            OR (    ( Recinfo.ATTRIBUTE13 IS NULL )
                AND (  p_ATTRIBUTE13 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE14 = p_ATTRIBUTE14)
            OR (    ( Recinfo.ATTRIBUTE14 IS NULL )
                AND (  p_ATTRIBUTE14 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE15 = p_ATTRIBUTE15)
            OR (    ( Recinfo.ATTRIBUTE15 IS NULL )
                AND (  p_ATTRIBUTE15 IS NULL )))
       AND (    ( Recinfo.REPAIR_SUPPLIER_ID = p_REPAIR_SUPPLIER_ID)
            OR (    ( Recinfo.REPAIR_SUPPLIER_ID IS NULL )
                AND (  p_REPAIR_SUPPLIER_ID IS NULL )))
       AND (    ( Recinfo.ORDER_NUMBER = p_ORDER_NUMBER)
            OR (    ( Recinfo.ORDER_NUMBER IS NULL )
                AND (  p_ORDER_NUMBER IS NULL )))
        ) then
        return;
    else
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;
END Lock_Row;

End CSP_NOTIFICATION_DETAILS_PKG;

/
