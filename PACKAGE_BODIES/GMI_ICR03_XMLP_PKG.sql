--------------------------------------------------------
--  DDL for Package Body GMI_ICR03_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."GMI_ICR03_XMLP_PKG" AS
/* $Header: ICR03B.pls 120.0 2007/12/24 13:14:51 nchinnam noship $ */
  FUNCTION DOCUMENT_NOCFFORMULA(DOC_TYPE IN VARCHAR2
                               ,DOC_ID IN NUMBER
                               ,LINE_ID1 IN NUMBER
                               ,ITEM_ID1 IN NUMBER) RETURN VARCHAR2 IS
    D_NO VARCHAR2(40);
  BEGIN
    IF DOC_TYPE = 'PROD' THEN
      SELECT
        H.BATCH_NO
      INTO D_NO
      FROM
        PM_MATL_DTL D,
        PM_BTCH_HDR H,
        FM_FORM_MST F
      WHERE D.BATCH_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.BATCH_ID = H.BATCH_ID
        AND H.FORMULA_ID = F.FORMULA_ID
        AND H.DELETE_MARK = 0
        AND F.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'PORD' THEN
      SELECT
        H.PO_NO
      INTO D_NO
      FROM
        PO_ORDR_HDR H,
        PO_ORDR_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.PO_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.PO_ID = H.PO_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSO' THEN
      SELECT
        H.ORDER_NO
      INTO D_NO
      FROM
        OP_ORDR_HDR H,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.ORDER_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.ORDER_ID = H.ORDER_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'RECV' THEN
      SELECT
        H.RECV_NO
      INTO D_NO
      FROM
        PO_RECV_HDR H,
        PO_RECV_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.RECV_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.RECV_ID = H.RECV_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSP' THEN
      SELECT
        B1.BOL_NO
      INTO D_NO
      FROM
        OP_BILL_LAD B1,
        OP_BILL_LAD B2,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE B1.BOL_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.BOL_ID = B2.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND B2.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPCR' THEN
      SELECT
        B1.BOL_NO
      INTO D_NO
      FROM
        OP_BILL_LAD B1,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.INVOICE_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.INVOICE_ID = B1.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = B1.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE in ('CREI','ADJI','STSI','TRNI','GRDI','CRER','ADJR','STSR','TRNR','GRDR') THEN
      SELECT
        M.JOURNAL_NO
      INTO D_NO
      FROM
        IC_JRNL_MST M,
        IC_ADJS_JNL D
      WHERE D.DOC_ID = DOC_ID
        AND D.ITEM_ID = ITEM_ID1
        AND D.LINE_ID = LINE_ID1
        AND D.JOURNAL_ID = M.JOURNAL_ID;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'XFER' THEN
      SELECT
        TRANSFER_NO
      INTO D_NO
      FROM
        IC_XFER_MST
      WHERE TRANSFER_ID = DOC_ID
        AND ITEM_ID = ITEM_ID1;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'PORC' THEN
      SELECT
        DISTINCT
        RSH.RECEIPT_NUM
      INTO D_NO
      FROM
        RCV_SHIPMENT_LINES RSL,
        RCV_SHIPMENT_HEADERS RSH,
        RCV_TRANSACTIONS RT
      WHERE RT.TRANSACTION_ID = LINE_ID1
        AND RT.SHIPMENT_HEADER_ID = RSH.SHIPMENT_HEADER_ID
        AND RT.SHIPMENT_LINE_ID = RSL.SHIPMENT_LINE_ID;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OMSO' THEN
      SELECT
        DISTINCT
        OOH.ORDER_NUMBER
      INTO D_NO
      FROM
        OE_ORDER_HEADERS_ALL OOH,
        OE_ORDER_LINES_ALL OOL
      WHERE OOL.LINE_ID = LINE_ID1
        AND OOH.HEADER_ID = OOL.HEADER_ID;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    END IF;
    RETURN (D_NO);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END DOCUMENT_NOCFFORMULA;
  FUNCTION FORMULA_NOCFFORMULA(DOC_TYPE IN VARCHAR2
                              ,DOC_ID IN NUMBER
                              ,LINE_ID1 IN NUMBER
                              ,ITEM_ID1 IN NUMBER) RETURN VARCHAR2 IS
    F_NO VARCHAR2(40);
  BEGIN
    IF DOC_TYPE = 'PROD' THEN
      SELECT
        F.FORMULA_NO
      INTO F_NO
      FROM
        PM_MATL_DTL D,
        PM_BTCH_HDR H,
        FM_FORM_MST F
      WHERE D.BATCH_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.BATCH_ID = H.BATCH_ID
        AND H.FORMULA_ID = F.FORMULA_ID
        AND H.DELETE_MARK = 0
        AND F.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    END IF;
    RETURN (F_NO);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END FORMULA_NOCFFORMULA;
  FUNCTION VERSCFFORMULA(DOC_TYPE IN VARCHAR2
                        ,DOC_ID IN NUMBER
                        ,LINE_ID1 IN NUMBER
                        ,ITEM_ID1 IN NUMBER) RETURN NUMBER IS
    V_NO NUMBER(5);
  BEGIN
    IF DOC_TYPE = 'PROD' THEN
      SELECT
        F.FORMULA_VERS
      INTO V_NO
      FROM
        PM_MATL_DTL D,
        PM_BTCH_HDR H,
        FM_FORM_MST F
      WHERE D.BATCH_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.BATCH_ID = H.BATCH_ID
        AND H.FORMULA_ID = F.FORMULA_ID
        AND H.DELETE_MARK = 0
        AND F.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN NULL;
      END IF;
    END IF;
    RETURN (V_NO);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END VERSCFFORMULA;
  FUNCTION VEND_SHIP_LOCATIONCFFORMULA(DOC_TYPE IN VARCHAR2
                                      ,DOC_ID IN NUMBER
                                      ,LINE_ID1 IN NUMBER
                                      ,ITEM_ID1 IN NUMBER) RETURN VARCHAR2 IS
    V_S_L VARCHAR2(32);
  BEGIN
    IF DOC_TYPE = 'PORD' THEN
      SELECT
        V.VENDOR_NO
      INTO V_S_L
      FROM
        PO_ORDR_HDR H,
        PO_ORDR_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.PO_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.PO_ID = H.PO_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSO' THEN
      SELECT
        V.CUST_NO
      INTO V_S_L
      FROM
        OP_ORDR_HDR H,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.ORDER_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.ORDER_ID = H.ORDER_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'RECV' THEN
      SELECT
        V.VENDOR_NO
      INTO V_S_L
      FROM
        PO_RECV_HDR H,
        PO_RECV_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.RECV_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.RECV_ID = H.RECV_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSP' THEN
      SELECT
        V.CUST_NO
      INTO V_S_L
      FROM
        OP_BILL_LAD B1,
        OP_BILL_LAD B2,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE B1.BOL_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.BOL_ID = B2.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND B1.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPCR' THEN
      SELECT
        V.CUST_NO
      INTO V_S_L
      FROM
        OP_BILL_LAD B1,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.INVOICE_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.INVOICE_ID = B1.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = B1.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    END IF;
    RETURN (V_S_L);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END VEND_SHIP_LOCATIONCFFORMULA;
  FUNCTION FRTBILL_MTHDCFFORMULA(DOC_TYPE IN VARCHAR2
                                ,DOC_ID IN NUMBER
                                ,LINE_ID1 IN NUMBER
                                ,ITEM_ID1 IN NUMBER) RETURN VARCHAR2 IS
    F_M VARCHAR2(4);
  BEGIN
    IF DOC_TYPE = 'PORD' THEN
      SELECT
        D.FRTBILL_MTHD
      INTO F_M
      FROM
        PO_ORDR_HDR H,
        PO_ORDR_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.PO_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.PO_ID = H.PO_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSO' THEN
      SELECT
        D.FRTBILL_MTHD
      INTO F_M
      FROM
        OP_ORDR_HDR H,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.ORDER_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.ORDER_ID = H.ORDER_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'RECV' THEN
      SELECT
        D.FRTBILL_MTHD
      INTO F_M
      FROM
        PO_RECV_HDR H,
        PO_RECV_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.RECV_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.RECV_ID = H.RECV_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSP' THEN
      SELECT
        D.FRTBILL_MTHD
      INTO F_M
      FROM
        OP_BILL_LAD B1,
        OP_BILL_LAD B2,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE B1.BOL_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.BOL_ID = B2.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND B1.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPCR' THEN
      SELECT
        D.FRTBILL_MTHD
      INTO F_M
      FROM
        OP_BILL_LAD B1,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.INVOICE_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.INVOICE_ID = B1.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = B1.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    END IF;
    RETURN (F_M);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END FRTBILL_MTHDCFFORMULA;
  FUNCTION SHIPPING_MTHDCFFORMULA(DOC_TYPE IN VARCHAR2
                                 ,DOC_ID IN NUMBER
                                 ,LINE_ID1 IN NUMBER
                                 ,ITEM_ID1 IN NUMBER) RETURN VARCHAR2 IS
    S_M VARCHAR2(4);
  BEGIN
    IF DOC_TYPE = 'PORD' THEN
      SELECT
        D.SHIP_MTHD
      INTO S_M
      FROM
        PO_ORDR_HDR H,
        PO_ORDR_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.PO_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.PO_ID = H.PO_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSO' THEN
      SELECT
        D.SHIP_MTHD
      INTO S_M
      FROM
        OP_ORDR_HDR H,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.ORDER_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.ORDER_ID = H.ORDER_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'RECV' THEN
      SELECT
        D.SHIP_MTHD
      INTO S_M
      FROM
        PO_RECV_HDR H,
        PO_RECV_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.RECV_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.RECV_ID = H.RECV_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSP' THEN
      SELECT
        D.SHIP_MTHD
      INTO S_M
      FROM
        OP_BILL_LAD B1,
        OP_BILL_LAD B2,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE B1.BOL_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.BOL_ID = B2.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND B1.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPCR' THEN
      SELECT
        D.SHIP_MTHD
      INTO S_M
      FROM
        OP_BILL_LAD B1,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.INVOICE_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.INVOICE_ID = B1.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = B1.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    END IF;
    RETURN (S_M);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END SHIPPING_MTHDCFFORMULA;
  FUNCTION SHIPPER_NAMECFFORMULA(DOC_TYPE IN VARCHAR2
                                ,DOC_ID IN NUMBER
                                ,LINE_ID1 IN NUMBER
                                ,ITEM_ID1 IN NUMBER) RETURN VARCHAR2 IS
    S_N VARCHAR2(40);
  BEGIN
    IF DOC_TYPE = 'PORD' THEN
      SELECT
        S.SHIPPER_NAME
      INTO S_N
      FROM
        PO_ORDR_HDR H,
        PO_ORDR_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.PO_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.PO_ID = H.PO_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSO' THEN
      SELECT
        S.SHIPPER_NAME
      INTO S_N
      FROM
        OP_ORDR_HDR H,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.ORDER_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.ORDER_ID = H.ORDER_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'RECV' THEN
      SELECT
        S.SHIPPER_NAME
      INTO S_N
      FROM
        PO_RECV_HDR H,
        PO_RECV_DTL D,
        PO_VEND_MST V,
        OP_SHIP_MST S
      WHERE D.RECV_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.RECV_ID = H.RECV_ID
        AND V.VENDOR_ID = D.SHIPVEND_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND H.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPSP' THEN
      SELECT
        S.SHIPPER_NAME
      INTO S_N
      FROM
        OP_BILL_LAD B1,
        OP_BILL_LAD B2,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE B1.BOL_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.BOL_ID = B2.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = D.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND B1.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    ELSIF DOC_TYPE = 'OPCR' THEN
      SELECT
        S.SHIPPER_NAME
      INTO S_N
      FROM
        OP_BILL_LAD B1,
        OP_ORDR_DTL D,
        OP_CUST_MST V,
        OP_SHIP_MST S
      WHERE D.INVOICE_ID = DOC_ID
        AND D.LINE_ID = LINE_ID1
        AND D.ITEM_ID = ITEM_ID1
        AND D.INVOICE_ID = B1.BOL_ID
        AND V.CUST_ID = D.SHIPCUST_ID
        AND S.SHIPPER_CODE = B1.SHIPPER_CODE
        AND B1.DELETE_MARK = 0
        AND S.DELETE_MARK = 0
        AND V.DELETE_MARK = 0;
      IF SQL%NOTFOUND THEN
        RETURN (NULL);
      END IF;
    END IF;
    RETURN (S_N);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END SHIPPER_NAMECFFORMULA;
  FUNCTION DOC_TYPECFFORMULA(DOC_TYPE IN VARCHAR2) RETURN VARCHAR2 IS
    DOC_TYPE1 VARCHAR2(4);
  BEGIN
    SELECT
      DOC_TYPE
    INTO DOC_TYPE1
    FROM
      DUAL;
    IF SQL%NOTFOUND THEN
      RETURN (NULL);
    ELSE
      RETURN (DOC_TYPE1);
    END IF;
    RETURN NULL;
  END DOC_TYPECFFORMULA;
  FUNCTION RANGE1CFFORMULA RETURN VARCHAR2 IS
    RANGEV VARCHAR2(100);
  BEGIN
    SELECT
      DECODE(FROM_WHSE
            ,NULL
            ,DECODE(TO_WHSE
                  ,NULL
                  ,'Warehouse Range : All '
                  ,' Warehouse: All  - ' || TO_WHSE)
            ,DECODE(TO_WHSE
                  ,NULL
                  ,'Warehouse Range: ' || FROM_WHSE || ' - All '
                  ,' Warehouse Range: ' || FROM_WHSE || ' - ' || TO_WHSE))
    INTO RANGEV
    FROM
      DUAL;
    RETURN (RANGEV);
  END RANGE1CFFORMULA;
  FUNCTION RANGE2CFFORMULA RETURN VARCHAR2 IS
  BEGIN
    IF FROM_TRANSDATE IS NULL AND TO_TRANSDATE IS NULL THEN
      RETURN ('Trans Date Range: All');
    ELSIF FROM_TRANSDATE IS NOT NULL AND TO_TRANSDATE IS NOT NULL THEN
      RETURN (' Trans Date Range: ' || FROM_TRANSDATE1 || ' - ' || TO_TRANSDATE1);
    ELSIF FROM_TRANSDATE IS NULL AND TO_TRANSDATE IS NOT NULL THEN
      RETURN (' Trans Date Range: All - ' || TO_TRANSDATE1);
    ELSIF FROM_TRANSDATE IS NOT NULL AND TO_TRANSDATE IS NULL THEN
      RETURN (' Trans Date Range: ' || FROM_TRANSDATE1 || ' - All ');
    END IF;
    RETURN NULL;
  END RANGE2CFFORMULA;
  FUNCTION UNIT_COSTCFFORMULA(ITEM_ID1 IN NUMBER
                             ,WAREHOUSE IN VARCHAR2
                             ,TRANS_DATE IN DATE) RETURN NUMBER IS
    UNIT_COST NUMBER;
    X_RET NUMBER;
    X_CMPNTCLSID NUMBER;
    X_ANALYSISCODE VARCHAR2(100);
    X_COSTMTHD VARCHAR2(100);
    X_NOROWS NUMBER;
  BEGIN
    X_RET := GMF_CMCOMMON.CMCOMMON_GET_COST(ITEM_ID1
                                           ,WAREHOUSE
                                           ,P_ORGN
                                           ,TRANS_DATE
                                           ,COST_METHOD
                                           ,X_CMPNTCLSID
                                           ,X_ANALYSISCODE
                                           ,1
                                           ,UNIT_COST
                                           ,X_NOROWS);
    IF X_RET = 1 THEN
      RETURN (UNIT_COST);
    END IF;
    RETURN NULL;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END UNIT_COSTCFFORMULA;
  FUNCTION COST_ACCUMCFFORMULA(UNIT_COSTCF IN NUMBER
                              ,COUNT_QTYSC IN NUMBER) RETURN NUMBER IS
    COSTACCUM NUMBER;
  BEGIN
    SELECT
      UNIT_COSTCF * COUNT_QTYSC
    INTO COSTACCUM
    FROM
      DUAL;
    RETURN (COSTACCUM);
    RETURN NULL;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END COST_ACCUMCFFORMULA;
  FUNCTION DEFAULTCURRCFFORMULA(COST_ACCUMCF IN NUMBER) RETURN VARCHAR2 IS
    CONSTANT VARCHAR2(40);
  BEGIN
    IF COST_ACCUMCF IS NOT NULL THEN
      CONSTANT := DEFAULT_CURR;
    ELSE
      CONSTANT := NULL;
    END IF;
    RETURN (CONSTANT);
  END DEFAULTCURRCFFORMULA;
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    RETURN (TRUE);
  END BEFOREREPORT;
  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    DEFAULT_CURR := FND_PROFILE.VALUE('SY$DEFAULT_CURR');
FROM_TRANSDATE1 := to_char(FROM_TRANSDATE,'DD-MON-YY');
TO_TRANSDATE1 := to_char(TO_TRANSDATE,'DD-MON-YY');
    RETURN (TRUE);
  END AFTERPFORM;
  PROCEDURE GMI_ICR03_XMLP_PKG_HEADER IS
  BEGIN
    NULL;
  END GMI_ICR03_XMLP_PKG_HEADER;
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;
  FUNCTION DOC_TYPECP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN DOC_TYPECP;
  END DOC_TYPECP_P;
  FUNCTION DOCUMENT_NOCP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN DOCUMENT_NOCP;
  END DOCUMENT_NOCP_P;
  FUNCTION FORMULA_NOCP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN FORMULA_NOCP;
  END FORMULA_NOCP_P;
  FUNCTION VERSCP_P RETURN NUMBER IS
  BEGIN
    RETURN VERSCP;
  END VERSCP_P;
  FUNCTION VEND_SHIP_LOCATIONCP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN VEND_SHIP_LOCATIONCP;
  END VEND_SHIP_LOCATIONCP_P;
  FUNCTION FRTBILL_MTHDCP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN FRTBILL_MTHDCP;
  END FRTBILL_MTHDCP_P;
  FUNCTION SHIPPING_MTHDCP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN SHIPPING_MTHDCP;
  END SHIPPING_MTHDCP_P;
  FUNCTION SHIPPER_NAMECP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN SHIPPER_NAMECP;
  END SHIPPER_NAMECP_P;
END GMI_ICR03_XMLP_PKG;


/
