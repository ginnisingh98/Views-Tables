--------------------------------------------------------
--  DDL for Package Body PAY_PAYGBPAY_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PAY_PAYGBPAY_XMLP_PKG" AS
/* $Header: PAYGBPAYB.pls 120.3 2008/03/21 07:23:31 vjaganat noship $ */
  FUNCTION BEFORE_REPORT_TRIGGER RETURN BOOLEAN IS
  BEGIN
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
      CP_BUSINESS_GROUP_NAME := RTRIM(SUBSTRB(HR_REPORTS.GET_BUSINESS_GROUP(P_BUSINESS_GROUP_ID)
                                             ,1
                                             ,240));
      CP_EARLIEST_PAYMENT := FND_DATE.CANONICAL_TO_DATE(P_PAYMENT_START_DATE);
      CP_LATEST_PAYMENT := FND_DATE.CANONICAL_TO_DATE(P_PAYMENT_END_DATE);
    END;
    BEGIN
      IF P_CONSOLIDATION_SET_ID IS NULL THEN
        P_CONSOLIDATION_SET_LINE := '/* No Consolidation Set Condition */';
      ELSE
        P_CONSOLIDATION_SET_LINE := 'and ppa.consolidation_set_id =' || (TO_CHAR(P_CONSOLIDATION_SET_ID));
      END IF;
      SELECT
        LEGISLATION_CODE
      INTO P_LEGISLATION_CODE
      FROM
        PER_BUSINESS_GROUPS
      WHERE BUSINESS_GROUP_ID = P_BUSINESS_GROUP_ID;
      SELECT
        DISTINCT
        PAYROLL_NAME
      INTO CP_PAYROLL_NAME
      FROM
        PAY_PAYROLLS_F
      WHERE PAYROLL_ID = P_PAYROLL_ID;
      IF P_CONSOLIDATION_SET_ID IS NOT NULL THEN
        SELECT
          CONSOLIDATION_SET_NAME
        INTO CP_CONSOLIDATION_SET_NAME
        FROM
          PAY_CONSOLIDATION_SETS
        WHERE CONSOLIDATION_SET_ID = P_CONSOLIDATION_SET_ID;
      ELSE
        CP_CONSOLIDATION_SET_NAME := NULL;
      END IF;
    END;
    RETURN (TRUE);
  END BEFORE_REPORT_TRIGGER;

  FUNCTION CF_CALCULATE_RUNNING_TOTALFORM(CS_RUNNING_TOTAL_AMOUNT_PAID IN NUMBER) RETURN NUMBER IS
  BEGIN
    CP_RUNNING_TOTAL_AMOUNT_PAID := CP_RUNNING_TOTAL_AMOUNT_PAID + CS_RUNNING_TOTAL_AMOUNT_PAID;
    RETURN (0);
  END CF_CALCULATE_RUNNING_TOTALFORM;

  FUNCTION CF_RUNNING_TOTAL_NUMBER_PAIDFO(TOTAL_ASSIGNMENTS_PAID IN NUMBER) RETURN NUMBER IS
  BEGIN
    CP_RUNNING_TOTAL_NUMBER_PAID := CP_RUNNING_TOTAL_NUMBER_PAID + TOTAL_ASSIGNMENTS_PAID;
    RETURN (0);
  END CF_RUNNING_TOTAL_NUMBER_PAIDFO;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CP_RUNNING_TOTAL_NUMBER_PAID_P RETURN NUMBER IS
  BEGIN
    RETURN CP_RUNNING_TOTAL_NUMBER_PAID;
  END CP_RUNNING_TOTAL_NUMBER_PAID_P;

  FUNCTION CP_RUNNING_TOTAL_AMOUNT_PAID_P RETURN NUMBER IS
  BEGIN
    RETURN CP_RUNNING_TOTAL_AMOUNT_PAID;
  END CP_RUNNING_TOTAL_AMOUNT_PAID_P;

  FUNCTION CP_BUSINESS_GROUP_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_BUSINESS_GROUP_NAME;
  END CP_BUSINESS_GROUP_NAME_P;

  FUNCTION CP_PAYROLL_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PAYROLL_NAME;
  END CP_PAYROLL_NAME_P;

  FUNCTION CP_CONSOLIDATION_SET_LINE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CONSOLIDATION_SET_LINE;
  END CP_CONSOLIDATION_SET_LINE_P;

  FUNCTION CP_CONSOLIDATION_SET_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CONSOLIDATION_SET_NAME;
  END CP_CONSOLIDATION_SET_NAME_P;

  FUNCTION CP_EARLIEST_PAYMENT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_EARLIEST_PAYMENT;
  END CP_EARLIEST_PAYMENT_P;

  FUNCTION CP_LATEST_PAYMENT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_LATEST_PAYMENT;
  END CP_LATEST_PAYMENT_P;

END PAY_PAYGBPAY_XMLP_PKG;


/
