--------------------------------------------------------
--  DDL for Package Body CAC_SR_OBJECT_CAPACITY_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."CAC_SR_OBJECT_CAPACITY_PKG" as
/* $Header: cacsroctb.pls 120.1.12010000.3 2009/06/01 08:49:24 anangupt ship $ */
procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_OBJECT_CAPACITY_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_OBJECT_TYPE in VARCHAR2,
  X_OBJECT_ID in NUMBER,
  X_START_DATE_TIME in DATE,
  X_END_DATE_TIME in DATE,
  X_AVAILABLE_HOURS in NUMBER,
  X_AVAILABLE_HOURS_BEFORE in NUMBER,
  X_AVAILABLE_HOURS_AFTER in NUMBER,
  X_SCHEDULE_DETAIL_ID in NUMBER,
  X_STATUS in NUMBER,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_AVAILABILITY_TYPE IN VARCHAR2 DEFAULT CAC_SR_OBJECT_CAPACITY_PUB.DEFAULT_AVAILABILITY_TYPE,
  X_SOURCE_TYPE IN VARCHAR2
) is
  cursor C is select ROWID from CAC_SR_OBJECT_CAPACITY
    where OBJECT_CAPACITY_ID = X_OBJECT_CAPACITY_ID
    ;
begin
  insert into CAC_SR_OBJECT_CAPACITY (
    OBJECT_CAPACITY_ID,
    OBJECT_VERSION_NUMBER,
    OBJECT_TYPE,
    OBJECT_ID,
    START_DATE_TIME,
    END_DATE_TIME,
    AVAILABLE_HOURS,
    AVAILABLE_HOURS_BEFORE,
    AVAILABLE_HOURS_AFTER,
    SCHEDULE_DETAIL_ID,
    STATUS,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    AVAILABILITY_TYPE,
    SOURCE_TYPE
  ) values (
    X_OBJECT_CAPACITY_ID,
    X_OBJECT_VERSION_NUMBER,
    X_OBJECT_TYPE,
    X_OBJECT_ID,
    X_START_DATE_TIME,
    X_END_DATE_TIME,
    X_AVAILABLE_HOURS,
    X_AVAILABLE_HOURS_BEFORE,
    X_AVAILABLE_HOURS_AFTER,
    X_SCHEDULE_DETAIL_ID,
    X_STATUS,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_AVAILABILITY_TYPE,
    X_SOURCE_TYPE
  );

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_OBJECT_CAPACITY_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_OBJECT_TYPE in VARCHAR2,
  X_OBJECT_ID in NUMBER,
  X_START_DATE_TIME in DATE,
  X_END_DATE_TIME in DATE,
  X_AVAILABLE_HOURS in NUMBER,
  X_AVAILABLE_HOURS_BEFORE in NUMBER,
  X_AVAILABLE_HOURS_AFTER in NUMBER,
  X_SCHEDULE_DETAIL_ID in NUMBER,
  X_STATUS in NUMBER
) is
  cursor c is select
    OBJECT_VERSION_NUMBER,
    OBJECT_TYPE,
    OBJECT_ID,
    START_DATE_TIME,
    END_DATE_TIME,
    AVAILABLE_HOURS,
    AVAILABLE_HOURS_BEFORE,
    AVAILABLE_HOURS_AFTER,
    SCHEDULE_DETAIL_ID,
    STATUS
    from CAC_SR_OBJECT_CAPACITY
    where OBJECT_CAPACITY_ID = X_OBJECT_CAPACITY_ID
    for update of OBJECT_CAPACITY_ID nowait;
  recinfo c%rowtype;

begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.AVAILABLE_HOURS_BEFORE = X_AVAILABLE_HOURS_BEFORE)
           OR ((recinfo.AVAILABLE_HOURS_BEFORE is null) AND (X_AVAILABLE_HOURS_BEFORE is null)))
      AND ((recinfo.AVAILABLE_HOURS_AFTER = X_AVAILABLE_HOURS_AFTER)
           OR ((recinfo.AVAILABLE_HOURS_AFTER is null) AND (X_AVAILABLE_HOURS_AFTER is null)))
      AND ((recinfo.SCHEDULE_DETAIL_ID = X_SCHEDULE_DETAIL_ID)
           OR ((recinfo.SCHEDULE_DETAIL_ID is null) AND (X_SCHEDULE_DETAIL_ID is null)))
      AND (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
      AND (recinfo.OBJECT_TYPE = X_OBJECT_TYPE)
      AND (recinfo.OBJECT_ID = X_OBJECT_ID)
      AND (recinfo.START_DATE_TIME = X_START_DATE_TIME)
      AND (recinfo.END_DATE_TIME = X_END_DATE_TIME)
      AND (recinfo.STATUS = X_STATUS)
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

end LOCK_ROW;

procedure UPDATE_ROW (
  X_OBJECT_CAPACITY_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_OBJECT_TYPE in VARCHAR2,
  X_OBJECT_ID in NUMBER,
  X_START_DATE_TIME in DATE,
  X_END_DATE_TIME in DATE,
  X_AVAILABLE_HOURS in NUMBER,
  X_AVAILABLE_HOURS_BEFORE in NUMBER,
  X_AVAILABLE_HOURS_AFTER in NUMBER,
  X_SCHEDULE_DETAIL_ID in NUMBER,
  X_STATUS in NUMBER,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_AVAILABILITY_TYPE IN VARCHAR2 DEFAULT CAC_SR_OBJECT_CAPACITY_PUB.DEFAULT_AVAILABILITY_TYPE,
  X_SOURCE_TYPE IN VARCHAR2
) is
begin
  update CAC_SR_OBJECT_CAPACITY set
    OBJECT_CAPACITY_ID = X_OBJECT_CAPACITY_ID,
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    OBJECT_TYPE = X_OBJECT_TYPE,
    OBJECT_ID = X_OBJECT_ID,
    START_DATE_TIME = X_START_DATE_TIME,
    END_DATE_TIME = X_END_DATE_TIME,
    AVAILABLE_HOURS = X_AVAILABLE_HOURS,
    AVAILABLE_HOURS_BEFORE = X_AVAILABLE_HOURS_BEFORE,
    AVAILABLE_HOURS_AFTER = X_AVAILABLE_HOURS_AFTER,
    SCHEDULE_DETAIL_ID = X_SCHEDULE_DETAIL_ID,
    STATUS = X_STATUS,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    AVAILABILITY_TYPE=X_AVAILABILITY_TYPE,
    SOURCE_TYPE=X_SOURCE_TYPE
  where OBJECT_CAPACITY_ID = X_OBJECT_CAPACITY_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

end UPDATE_ROW;

procedure DELETE_ROW (
  X_OBJECT_CAPACITY_ID in NUMBER
) is
begin
  delete from CAC_SR_OBJECT_CAPACITY
  where OBJECT_CAPACITY_ID = X_OBJECT_CAPACITY_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

end DELETE_ROW;

end CAC_SR_OBJECT_CAPACITY_PKG;

/
