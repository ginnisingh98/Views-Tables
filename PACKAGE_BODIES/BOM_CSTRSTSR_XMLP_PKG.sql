--------------------------------------------------------
--  DDL for Package Body BOM_CSTRSTSR_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."BOM_CSTRSTSR_XMLP_PKG" AS
/* $Header: CSTRSTSRB.pls 120.2 2008/01/06 16:16:32 nchinnam noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    L_FCN_CURRENCY VARCHAR2(15);
    SQL_STMT_NUM VARCHAR2(5);
  BEGIN
    SQL_STMT_NUM := '0: ';
    PV_EXCHANGE_RATE := FND_NUMBER.CANONICAL_TO_NUMBER(P_EXCHANGE_RATE_CHAR);
    SQL_STMT_NUM := '10: ';
    IF P_VIEW_COST <> 1 THEN
      FND_MESSAGE.SET_NAME('null'
                          ,'null');
      /*SRW.USER_EXIT('FND MESSAGE_DISPLAY')*/NULL;
      /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END IF;
    SQL_STMT_NUM := '30: ';
    SELECT
      OOD.ORGANIZATION_NAME,
      SOB.CURRENCY_CODE,
      NVL(FC.MINIMUM_ACCOUNTABLE_UNIT
         ,POWER(10
              ,NVL(-FC.PRECISION
                 ,0))),
      MCS.CATEGORY_SET_NAME,
      LOOKUP1.MEANING
    INTO PV_ORGANIZATION_NAME,L_FCN_CURRENCY,PV_ROUND_UNIT,PV_CATEGORY_SET_NAME,PV_SORT_OPTION
    FROM
      ORG_ORGANIZATION_DEFINITIONS OOD,
      GL_SETS_OF_BOOKS SOB,
      FND_CURRENCIES FC,
      MTL_CATEGORY_SETS MCS,
      MFG_LOOKUPS LOOKUP1
    WHERE OOD.ORGANIZATION_ID = P_ORG_ID
      AND SOB.SET_OF_BOOKS_ID = OOD.SET_OF_BOOKS_ID
      AND FC.CURRENCY_CODE = P_CURRENCY_CODE
      AND MCS.CATEGORY_SET_ID = P_CATEGORY_SET
      AND LOOKUP1.LOOKUP_TYPE = 'CST_ITEM_REPORT_SORT'
      AND LOOKUP1.LOOKUP_CODE = P_SORT_OPTION;
    SQL_STMT_NUM := '50: ';
    IF L_FCN_CURRENCY = P_CURRENCY_CODE THEN
      PV_CURRENCY_CODE := P_CURRENCY_CODE;
    ELSE
      PV_CURRENCY_CODE := P_CURRENCY_CODE || ' @ ' || TO_CHAR(ROUND(1 / PV_EXCHANGE_RATE
                                       ,5)) || ' ' || L_FCN_CURRENCY;
    END IF;
    SQL_STMT_NUM := '60: ';
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(999
                   ,'FND SRWINIT >X')*/NULL;
        RAISE;
    END;
    SQL_STMT_NUM := '70: ';
    BEGIN
      NULL;
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(999
                   ,'FND FLEXSQL(MCAT) >X')*/NULL;
        RAISE;
    END;
    SQL_STMT_NUM := '80: ';
    BEGIN
      NULL;
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(999
                   ,'FND FLEXSQL(MSTK) >X')*/NULL;
        RAISE;
    END;
    SQL_STMT_NUM := '90: ';
    /*SRW.MESSAGE(0
               ,'BOM_CSTRSTSR_XMLP_PKG <<     ' || TO_CHAR(SYSDATE
                      ,'Dy Mon FmDD HH24:MI:SS YYYY'))*/NULL;
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(999
                 ,SQL_STMT_NUM || SQLERRM)*/NULL;
      /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    /*SRW.MESSAGE(0
               ,'BOM_CSTRSTSR_XMLP_PKG >>     ' || TO_CHAR(SYSDATE
                      ,'Dy Mon FmDD HH24:MI:SS YYYY'))*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION ITEM_PSEGFORMULA(ITEM_NUMBER IN VARCHAR2
                           ,ITEM_SEGMENT IN VARCHAR2
                           ,ITEM_PSEG IN VARCHAR2) RETURN CHAR IS
  BEGIN
    /*SRW.REFERENCE(ITEM_NUMBER)*/NULL;
    /*SRW.REFERENCE(ITEM_SEGMENT)*/NULL;
    RETURN (ITEM_PSEG);
  END ITEM_PSEGFORMULA;

  FUNCTION CATEGORY_PSEGFORMULA(CATEGORY IN VARCHAR2
                               ,CATEGORY_SEGMENT IN VARCHAR2
                               ,CATEGORY_PSEG IN VARCHAR2) RETURN CHAR IS
  BEGIN
    /*SRW.REFERENCE(CATEGORY)*/NULL;
    /*SRW.REFERENCE(CATEGORY_SEGMENT)*/NULL;
    RETURN (CATEGORY_PSEG);
  END CATEGORY_PSEGFORMULA;

  FUNCTION C_ORDERFORMULA(ITEM_NUMBER IN VARCHAR2
                         ,ITEM_SEGMENT IN VARCHAR2
                         ,ITEM_PSEG IN VARCHAR2
                         ,CATEGORY IN VARCHAR2
                         ,CATEGORY_SEGMENT IN VARCHAR2
                         ,CATEGORY_PSEG IN VARCHAR2) RETURN CHAR IS
  BEGIN
    /*SRW.REFERENCE(ITEM_NUMBER)*/NULL;
    /*SRW.REFERENCE(ITEM_SEGMENT)*/NULL;
    /*SRW.REFERENCE(ITEM_PSEG)*/NULL;
    /*SRW.REFERENCE(CATEGORY)*/NULL;
    /*SRW.REFERENCE(CATEGORY_SEGMENT)*/NULL;
    /*SRW.REFERENCE(CATEGORY_PSEG)*/NULL;
    IF P_SORT_OPTION = 1 THEN
      RETURN (NULL);
    ELSE
      RETURN (CATEGORY_PSEG);
    END IF;
  END C_ORDERFORMULA;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    IF (P_DATE_TO IS NOT NULL) THEN
      P_DATE_TO_1 := TO_CHAR(TO_DATE(P_DATE_TO,'YYYY/MM/DD HH24:MI:SS'),'YYYY/MM/DD') || ' 23:59:59';
    END IF;
    BEGIN
      IF P_DATE_FROM IS NOT NULL AND P_DATE_TO IS NOT NULL THEN
        P_DATE_RANGE := 'and (mmt.transaction_date) between ' || 'to_date(''' || P_DATE_FROM || ''',' || '''YYYY/MM/DD HH24:MI:SS''' || ')' || ' and ' || 'to_date(''' || P_DATE_TO || ''',' || '''YYYY/MM/DD HH24:MI:SS''' || ')';
      ELSIF P_DATE_FROM IS NOT NULL AND P_DATE_TO IS NULL THEN
        P_DATE_RANGE := 'and (mmt.transaction_date) >= ' || 'to_date(''' || P_DATE_FROM || ''',' || '''YYYY/MM/DD HH24:MI:SS''' || ')';
      ELSIF P_DATE_FROM IS NULL AND P_DATE_TO IS NOT NULL THEN
        P_DATE_RANGE := 'and  (mmt.transaction_date) <=  ' || 'to_date(''' || P_DATE_TO || ''',' || '''YYYY/MM/DD HH24:MI:SS''' || ')';
      ELSE
        P_DATE_RANGE := '  ';
      END IF;
    END;
    RETURN (TRUE);
  END AFTERPFORM;

END BOM_CSTRSTSR_XMLP_PKG;


/
