--------------------------------------------------------
--  DDL for Package Body OZF_DENORM_QUERIES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."OZF_DENORM_QUERIES_PKG" as
/* $Header: ozflofdb.pls 120.0 2005/06/01 01:09:29 appldev noship $ */

procedure INSERT_ROW (
  X_ROWID             IN OUT NOCOPY VARCHAR2,
  X_DENORM_QUERY_ID   IN NUMBER,
  X_QUERY_FOR         IN VARCHAR2,
  X_CONTEXT           IN VARCHAR2,
  X_ATTRIBUTE         IN VARCHAR2,
  X_CONDITION_ID_COLUMN      IN VARCHAR2,
  X_CONDITION_NAME_COLUMN    IN VARCHAR2,
  X_ACTIVE_FLAG       IN VARCHAR2,
  X_CREATION_DATE     IN DATE,
  X_CREATED_BY        IN NUMBER,
  X_LAST_UPDATE_DATE  IN DATE,
  X_LAST_UPDATED_BY   IN NUMBER,
  X_LAST_UPDATE_LOGIN IN NUMBER,
  X_SEEDED_FLAG       IN VARCHAR2,
  X_SQL_VALIDATION_1  IN VARCHAR2,
  X_SQL_VALIDATION_2  IN VARCHAR2,
  X_SQL_VALIDATION_3  IN VARCHAR2,
  X_SQL_VALIDATION_4  IN VARCHAR2,
  X_SQL_VALIDATION_5  IN VARCHAR2,
  X_SQL_VALIDATION_6  IN VARCHAR2,
  X_SQL_VALIDATION_7  IN VARCHAR2,
  X_SQL_VALIDATION_8  IN VARCHAR2,
  X_OBJECT_VERSION_NUMBER IN NUMBER,
  X_SECURITY_GROUP_ID IN NUMBER)
  is
  cursor C is select ROWID from OZF_DENORM_QUERIES
    where DENORM_QUERY_ID = X_DENORM_QUERY_ID;
begin
  insert into OZF_DENORM_QUERIES(
    DENORM_QUERY_ID,
    QUERY_FOR,
    CONTEXT,
    ATTRIBUTE,
    CONDITION_ID_COLUMN,
    CONDITION_NAME_COLUMN,
    ACTIVE_FLAG,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    SEEDED_FLAG,
    SQL_VALIDATION_1,
    SQL_VALIDATION_2,
    SQL_VALIDATION_3,
    SQL_VALIDATION_4,
    SQL_VALIDATION_5,
    SQL_VALIDATION_6,
    SQL_VALIDATION_7,
    SQL_VALIDATION_8,
    OBJECT_VERSION_NUMBER,
    SECURITY_GROUP_ID
  )
  values (
    X_DENORM_QUERY_ID,
    X_QUERY_FOR,
    X_CONTEXT,
    X_ATTRIBUTE,
    X_CONDITION_ID_COLUMN,
    X_CONDITION_NAME_COLUMN,
    X_ACTIVE_FLAG,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_SEEDED_FLAG,
    X_SQL_VALIDATION_1,
    X_SQL_VALIDATION_2,
    X_SQL_VALIDATION_3,
    X_SQL_VALIDATION_4,
    X_SQL_VALIDATION_5,
    X_SQL_VALIDATION_6,
    X_SQL_VALIDATION_7,
    X_SQL_VALIDATION_8,
    X_OBJECT_VERSION_NUMBER,
    X_SECURITY_GROUP_ID

  );


  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_DENORM_QUERY_ID in NUMBER,
  X_QUERY_FOR       IN VARCHAR2,
  X_CONTEXT         IN VARCHAR2,
  X_ATTRIBUTE       IN VARCHAR2,
  X_CONDITION_ID_COLUMN   IN VARCHAR2,
  X_CONDITION_NAME_COLUMN  IN VARCHAR2,
  X_ACTIVE_FLAG     IN VARCHAR2,
  X_SEEDED_FLAG     IN VARCHAR2,
  X_SQL_VALIDATION_1 IN VARCHAR2,
  X_SQL_VALIDATION_2 IN VARCHAR2,
  X_SQL_VALIDATION_3 IN VARCHAR2,
  X_SQL_VALIDATION_4 IN VARCHAR2,
  X_SQL_VALIDATION_5 IN VARCHAR2,
  X_SQL_VALIDATION_6 IN VARCHAR2,
  X_SQL_VALIDATION_7 IN VARCHAR2,
  X_SQL_VALIDATION_8 IN VARCHAR2,
  X_OBJECT_VERSION_NUMBER IN NUMBER,
  X_SECURITY_GROUP_ID IN NUMBER)is
begin
null;
end lock_row;
procedure UPDATE_ROW (
  X_DENORM_QUERY_ID   IN NUMBER,
  X_QUERY_FOR         IN VARCHAR2,
  X_CONTEXT           IN VARCHAR2,
  X_ATTRIBUTE         IN VARCHAR2,
  X_CONDITION_ID_COLUMN      IN VARCHAR2,
  X_CONDITION_NAME_COLUMN    IN VARCHAR2,
  X_ACTIVE_FLAG       IN VARCHAR2,
  X_LAST_UPDATE_DATE  IN DATE,
  X_LAST_UPDATED_BY   IN NUMBER,
  X_LAST_UPDATE_LOGIN IN NUMBER,
  X_SEEDED_FLAG       IN VARCHAR2,
  X_SQL_VALIDATION_1  IN VARCHAR2,
  X_SQL_VALIDATION_2  IN VARCHAR2,
  X_SQL_VALIDATION_3  IN VARCHAR2,
  X_SQL_VALIDATION_4  IN VARCHAR2,
  X_SQL_VALIDATION_5  IN VARCHAR2,
  X_SQL_VALIDATION_6  IN VARCHAR2,
  X_SQL_VALIDATION_7  IN VARCHAR2,
  X_SQL_VALIDATION_8  IN VARCHAR2,
  X_OBJECT_VERSION_NUMBER IN NUMBER,
  X_SECURITY_GROUP_ID IN NUMBER
) is
begin
  update OZF_DENORM_QUERIES set
    QUERY_FOR       = X_QUERY_FOR ,
    CONTEXT         = X_CONTEXT ,
    ATTRIBUTE       = X_ATTRIBUTE,
    CONDITION_ID_COLUMN    = X_CONDITION_ID_COLUMN,
    CONDITION_NAME_COLUMN  = X_CONDITION_NAME_COLUMN,
    ACTIVE_FLAG     = X_ACTIVE_FLAG,
    LAST_UPDATE_DATE  = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY   = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SEEDED_FLAG     = X_SEEDED_FLAG,
    SQL_VALIDATION_1= X_SQL_VALIDATION_1,
    SQL_VALIDATION_2= X_SQL_VALIDATION_2,
    SQL_VALIDATION_3= X_SQL_VALIDATION_3,
    SQL_VALIDATION_4= X_SQL_VALIDATION_4,
    SQL_VALIDATION_5= X_SQL_VALIDATION_5,
    SQL_VALIDATION_6= X_SQL_VALIDATION_6,
    SQL_VALIDATION_7= X_SQL_VALIDATION_7,
    SQL_VALIDATION_8= X_SQL_VALIDATION_8,
    OBJECT_VERSION_NUMBER=X_OBJECT_VERSION_NUMBER,
    SECURITY_GROUP_ID=X_SECURITY_GROUP_ID
  where DENORM_QUERY_ID = X_DENORM_QUERY_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;



end UPDATE_ROW;

procedure DELETE_ROW (
  X_DENORM_QUERY_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER IN NUMBER
) is
begin
  delete from OZF_DENORM_QUERIES
  where DENORM_QUERY_ID = X_DENORM_QUERY_ID
  and object_version_number=X_OBJECT_VERSION_NUMBER;
  if (sql%notfound) then
    raise no_data_found;
  end if;


end DELETE_ROW;



procedure LOAD_ROW (
  X_DENORM_QUERY_ID  IN NUMBER,
  X_QUERY_FOR        IN VARCHAR2,
  X_CONTEXT          IN VARCHAR2,
  X_ATTRIBUTE        IN VARCHAR2,
  X_CONDITION_ID_COLUMN     IN VARCHAR2,
  X_CONDITION_NAME_COLUMN   IN VARCHAR2,
  X_ACTIVE_FLAG      IN VARCHAR2,
  X_SEEDED_FLAG      IN VARCHAR2,
  X_SQL_VALIDATION_1 IN VARCHAR2,
  X_SQL_VALIDATION_2 IN VARCHAR2,
  X_SQL_VALIDATION_3 IN VARCHAR2,
  X_SQL_VALIDATION_4 IN VARCHAR2,
  X_SQL_VALIDATION_5 IN VARCHAR2,
  X_SQL_VALIDATION_6 IN VARCHAR2,
  X_SQL_VALIDATION_7 IN VARCHAR2,
  X_SQL_VALIDATION_8 IN VARCHAR2,
  X_OBJECT_VERSION_NUMBER IN NUMBER,
  X_SECURITY_GROUP_ID IN NUMBER,
  X_CUSTOM_MODE IN VARCHAR2,
  X_OWNER_NAME IN VARCHAR2
  ) IS



l_user_id   number;
l_dummy_char  varchar2(1);
l_row_id    varchar2(100);
l_DENORM_QUERY_ID   number;
l_db_luby_id NUMBER;

CURSOR c_db_luby_id IS
SELECT last_updated_by
FROM   ozf_denorm_queries
WHERE  denorm_query_id = X_DENORM_QUERY_ID;



cursor c_chk_denorm_exists is
  select 'x'
  from    OZF_DENORM_QUERIES
  where  context=  X_CONTEXT
  AND attribute=X_ATTRIBUTE;

cursor c_get_denorm_id is
   select OZF_DENORM_QUERIES_S.nextval
   from dual;

BEGIN

  l_user_id := FND_LOAD_UTIL.OWNER_ID(X_OWNER_NAME);

 open c_chk_denorm_exists;
 fetch c_chk_denorm_exists into l_dummy_char;
 IF c_chk_denorm_exists%notfound
 THEN
    close c_chk_denorm_exists;
    IF X_DENORM_QUERY_ID is null
    THEN
      open c_get_denorm_id;
      fetch c_get_denorm_id into l_DENORM_QUERY_id;
      close c_get_denorm_id;
    ELSE
       l_DENORM_QUERY_id := X_DENORM_QUERY_ID;
    END IF;
    --insert into jl_temp values(sysdate,l_user_id,FND_GLOBAL.CONC_LOGIN_ID,'I',l_DENORM_QUERY_id);
    OZF_DENORM_QUERIES_PKG.INSERT_ROW(
    X_ROWID			=> l_row_id,
    X_DENORM_QUERY_ID		=> l_DENORM_QUERY_id,
    X_QUERY_FOR                 => X_QUERY_FOR,
    X_CONTEXT                   => X_CONTEXT,
    X_ATTRIBUTE                 => X_ATTRIBUTE,
    X_CONDITION_ID_COLUMN             => X_CONDITION_ID_COLUMN ,
    X_CONDITION_NAME_COLUMN            => X_CONDITION_NAME_COLUMN,
    X_ACTIVE_FLAG               => X_ACTIVE_FLAG,
    X_CREATION_DATE		=> SYSDATE,
    X_CREATED_BY		=> l_user_id,
    X_LAST_UPDATE_DATE		=> SYSDATE,
    X_LAST_UPDATED_BY		=> l_user_id,
    X_LAST_UPDATE_LOGIN		=> FND_GLOBAL.CONC_LOGIN_ID,
    X_SEEDED_FLAG               => X_SEEDED_FLAG,
    X_SQL_VALIDATION_1          => X_SQL_VALIDATION_1,
    X_SQL_VALIDATION_2          => X_SQL_VALIDATION_2,
    X_SQL_VALIDATION_3          => X_SQL_VALIDATION_3,
    X_SQL_VALIDATION_4          => X_SQL_VALIDATION_4,
    X_SQL_VALIDATION_5          => X_SQL_VALIDATION_5,
    X_SQL_VALIDATION_6          => X_SQL_VALIDATION_6,
    X_SQL_VALIDATION_7          => X_SQL_VALIDATION_7,
    X_SQL_VALIDATION_8          => X_SQL_VALIDATION_8 ,
    X_OBJECT_VERSION_NUMBER =>X_OBJECT_VERSION_NUMBER,
    X_SECURITY_GROUP_ID => X_SECURITY_GROUP_ID
    );


ELSE
   close c_chk_denorm_exists;

-- assigning value for l_DENORM_QUERIES_id
	l_DENORM_QUERY_id := X_DENORM_QUERY_ID;

  --OPEN c_db_luby_id;
  --FETCH c_db_luby_id INTO l_db_luby_id;
  --CLOSE c_db_luby_id;
  --insert into jl_temp values(sysdate,l_user_id,FND_GLOBAL.CONC_LOGIN_ID,'U',l_DENORM_QUERY_id);
  --IF (l_db_luby_id IN (1,2,0) OR NVL(x_custom_mode,'PRESERVE') = 'FORCE') THEN
  IF x_owner_name like 'ORACLE%' OR NVL(x_custom_mode,'PRESERVE') = 'FORCE' THEN
    OZF_DENORM_QUERIES_PKG.UPDATE_ROW(
    X_DENORM_QUERY_ID   =>  l_denorm_query_id,
    X_QUERY_FOR         =>  X_QUERY_FOR,
    X_CONTEXT           =>  X_CONTEXT,
    X_ATTRIBUTE         =>  X_ATTRIBUTE,
    X_CONDITION_ID_COLUMN      =>  X_CONDITION_ID_COLUMN,
    X_CONDITION_NAME_COLUMN    =>  X_CONDITION_NAME_COLUMN,
    X_ACTIVE_FLAG       =>  X_ACTIVE_FLAG,
    X_LAST_UPDATE_DATE  =>  SYSDATE,
    X_LAST_UPDATED_BY   =>  l_user_id,
    X_LAST_UPDATE_LOGIN	=>  FND_GLOBAL.CONC_LOGIN_ID,
    X_SEEDED_FLAG       =>  X_SEEDED_FLAG,
    X_SQL_VALIDATION_1  =>  X_SQL_VALIDATION_1,
    X_SQL_VALIDATION_2  =>  X_SQL_VALIDATION_2,
    X_SQL_VALIDATION_3  =>  X_SQL_VALIDATION_3,
    X_SQL_VALIDATION_4  =>  X_SQL_VALIDATION_4,
    X_SQL_VALIDATION_5  =>  X_SQL_VALIDATION_5,
    X_SQL_VALIDATION_6  =>  X_SQL_VALIDATION_6,
    X_SQL_VALIDATION_7  =>  X_SQL_VALIDATION_7,
    X_SQL_VALIDATION_8  =>  X_SQL_VALIDATION_8,
    X_OBJECT_VERSION_NUMBER =>X_OBJECT_VERSION_NUMBER,
    X_SECURITY_GROUP_ID => X_SECURITY_GROUP_ID
    );
  END IF;
END IF;
END LOAD_ROW;


end OZF_DENORM_QUERIES_PKG;

/
