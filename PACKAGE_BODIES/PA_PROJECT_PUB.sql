--------------------------------------------------------
--  DDL for Package Body PA_PROJECT_PUB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PA_PROJECT_PUB" AS
/* $Header: PAPMPRPB.pls 120.75.12010000.36 2010/06/24 23:53:54 rbruno ship $ */
--Global constants to be used in error messages
G_PKG_NAME      CONSTANT VARCHAR2(30) := 'PA_PROJECT_PUB';
G_PROJECT_CODE    CONSTANT VARCHAR2(7)  := 'PROJECT';
G_CUSTOMER_CODE    CONSTANT VARCHAR2(8)  := 'CUSTOMER';
G_KEY_MEMBER    CONSTANT VARCHAR2(10) := 'KEY_MEMBER';
G_CLASS_CATEGORY_CODE  CONSTANT VARCHAR2(14) := 'CLASS_CATEGORY';
G_TASK_CODE    CONSTANT VARCHAR2(4)  := 'TASK';
-- anlee org role changes
G_ORG_ROLE    CONSTANT VARCHAR2(10) := 'ORG_ROLE';
--Added by rtarway for FP.M Mapping
G_PROJECT_SHARING_TYPE VARCHAR2(250);
--Added by rtarway for FP.M Mapping
--PACKAGE GLOBAL to be used during updates -------------------------------------------
G_USER_ID      CONSTANT NUMBER := FND_GLOBAL.user_id;
G_LOGIN_ID    CONSTANT NUMBER := FND_GLOBAL.login_id;

l_pm_product_code       VARCHAR2(30) := 'Z'; /*for bug 2413400 a new variable defined.*/
                               /* increased the lenght for bug 2665656 */

-- PACKAGE CURSORS -------------------------------------------------------------------------
--needed to get the field values associated to a particular project_type

   CURSOR   l_project_type_csr
       (p_project_type pa_project_types.project_type%type)
   IS
   SELECT   *
   FROM   pa_project_types
   WHERE   project_type = p_project_type;

--needed to get the field values associated to a particular project

   CURSOR  l_project_csr
    (p_pa_project_id pa_projects.project_id%type)
   IS
   SELECT   *
   FROM    pa_projects p
   WHERE  p.project_id = p_pa_project_id;

      /*new cursor for bug no 2413400*/
   Cursor p_product_code_csr (p_pm_product_code IN VARCHAR2)
  Is
  Select 'X'
  from pa_lookups
  where lookup_type='PM_PRODUCT_CODE'
   and lookup_code = p_pm_product_code;

  --FP.M Changes by rtarway for Mapping and Set Financial Task
  --This cursor gets the record version number from pa_tasks for the passed task version id
     CURSOR c_get_pa_record_version_number (l_task_version_id NUMBER , l_project_id NUMBER)
     IS
     SELECT
            allTasks.record_version_number

     FROM
          PA_TASKS allTasks,
           pa_proj_element_versions elever
     WHERE
          elever.element_version_id = l_task_version_id
     AND
          elever.project_id = l_project_id
     AND  elever.proj_element_id  = allTasks.task_id
     AND  allTasks.project_id = elever.project_id;
--End FP.M Changes by rtarway for Mapping and Set Financial Task

--
-- ================================================
--
--Name:               Create_Project
--Type:                 Procedure
--Description:  This procedure can be used to create a project on basis
--                      of an existing project or template.
--
--Called subprograms: pa_project_core1.copy_project
--
--
--
--History:
--      31-JUL-1996        L. de Werker      Created
--      04-MAR-1997   L. de Werker  - workflow enabling added
--
--  22-DEC-97  jwhite    - Added OUT-parameter p_workflow_started
--             for workflow.
--      19-JAN-01       anlee           - Added l_team_template_id, l_country_code,
--                                        l_region, and l_city params for team template
--      09-MAY-02       Maansari        - Project Structure Integration
--                                      - Added call to PA_PROJ_TASK_STRUC.COPY_STRUCTURE api.
--      19-may-2003     sramesh         -Fixed the bug 2910972.Defaulting of the key member start
--                                       date
--    15-jul-2003      sramesh        -- Added the code for bug 2982057.
--                                       Changed the logic to populate the long_task_name
--                                       with task_name when the long_task_name is null.
--          22-JAN-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to add parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days to tasks and create dependencies.
--          10-FEB-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to replace parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days with parameters: pred_string and pred_delimiter.
--      03-Mar-04       Puneet         3435905 FP M Changes for Deliverables : Start
--      17-Jun-2004     Avaithia       3683732 : Provided Default Values for p_class_categories and p_key_members parameters
--                                     In  Create_Project and Update_Project API
--      11-Dec-2005     Sunkalya       Bug 4870305: Modified create_project. Passed pm_product_code
--                                     parameter to the call to function check_unique_project_reference.Changes Tagged.
--      12-Feb-2009      KJai          Bug 7830143 : In Procedure Create_project, called PA_MOAC_UTILS.SET_POLICY_CONTEXT() to set context.
--
PROCEDURE Create_Project
(
  p_api_version_number    IN  NUMBER
 ,p_commit                IN  VARCHAR2  := FND_API.G_FALSE
 ,p_init_msg_list         IN  VARCHAR2  := FND_API.G_FALSE
 ,p_msg_count             OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
 ,p_msg_data              OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_return_status         OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_workflow_started      OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_pm_product_code       IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_op_validate_flag      IN VARCHAR2   := 'Y' --added by rtarway 4218977
 ,p_project_in            IN  project_in_rec_type
 ,p_project_out           OUT NOCOPY  project_out_rec_type /*Added the nocopy check for bug 2674619*/
  /* Added for tracking bug - add customers */
 ,p_customers_in     IN  pa_project_pub.customer_tbl_type := G_customers_in_tbl
/* Added Default Value for p_class_categories and p_key_members */
 ,p_key_members           IN  project_role_tbl_type := G_key_members_in_tbl
 ,p_class_categories      IN  class_category_tbl_type := G_class_categories_in_tbl
 ,p_tasks_in              IN  task_in_tbl_type
 ,p_tasks_out             OUT NOCOPY  task_out_tbl_type /*added the nocopy check for the bug 2674619*/
 -- anlee org role changes
 ,p_org_roles             IN      project_role_tbl_type := G_org_roles_in_tbl
--project structures
 ,p_structure_in          IN      structure_in_rec_type := G_structure_in_rec
-- ,p_structure_out    OUT  structure_out_rec_type := G_structure_out_rec
 ,p_ext_attr_tbl_in       IN   PA_EXT_ATTR_TABLE_TYPE := G_ext_attr_in_tbl -- <EA added parameter for Ext Attr/>
--project structures
--FP M : deliverables
 ,p_deliverables_in           IN  deliverable_in_tbl_type := G_deliverables_in_tbl -- 3435905 passing default value
-- ,p_deliverables_out          OUT NOCOPY  deliverable_out_tbl_type -- 3435905 removed
 ,p_deliverable_actions_in    IN  action_in_tbl_type := G_deliverable_actions_in_tbl -- 3435905 passing default value
-- ,p_deliverable_actions_out   OUT NOCOPY  action_out_tbl_type -- 3435905 removed
--FP M : deliverables
)
IS

   --needed to get the overridable fields for this project template source

   CURSOR  l_override_fields_csr
    (p_pa_source_template_id NUMBER)
   IS
   SELECT  DISTINCT *
   FROM    pa_override_fields_v pof
   WHERE  pof.pa_source_template_id = p_pa_source_template_id;


   -- 4363092 TCA changes, replaced RA views with HZ tables
   -- commented out below cursor as it is not used anywhere
   --needed to default the address_id to that of the primary customer
/*
   CURSOR  l_address_csr
    (p_customer_id NUMBER)
   IS
   SELECT  a.address_id
   FROM    ra_addresses a
   ,    ra_site_uses su
   WHERE  a.customer_id = p_customer_id
   AND    a.address_id = su.address_id
   AND    nvl(su.status,'A') = 'A'
   AND    su.site_use_code = 'SHIP_TO'
   AND    su.primary_flag = 'Y';
   */
   -- 4363092 end

   --needed for validation of distribution rule
   CURSOR l_source_project_type_csr (p_source_template_id IN NUMBER )IS
   SELECT project_type
   FROM pa_projects
   WHERE project_id = p_source_template_id;

CURSOR l_get_wf_status_csr (l_project_id IN NUMBER)
IS
SELECT wf_status_code
FROM pa_projects
WHERE project_id = l_project_id;

-- IC and Multi National Currency changes Starts ...

   Cursor l_customer_csr (p_customer_id NUMBER)
   Is
   Select inv_currency_code,
          inv_rate_type,
          inv_rate_date,
          inv_exchange_rate,
          allow_inv_user_rate_type_flag,
          bill_another_project_flag,
          receiver_task_id
   From   pa_project_customers
   Where  customer_id = p_customer_id;

-- IC and Multi National Currency changes Ends ...

-- below cursor added for bug 2254661
   Cursor l_temp_flag_csr(p_proj_id NUMBER)
   Is
   select NVL(template_flag,'N')
   from pa_projects
   where project_id = p_proj_id;

   -- 5182868 Added below cursor to validate template for effectiveness

   Cursor l_temp_eff_flag_csr(p_proj_id NUMBER)
   Is
   select 'N'
   from pa_projects_all
   where project_id = p_proj_id
     and template_flag = 'Y'
     and ((nvl(trunc(template_start_date_active), trunc(sysdate)) > trunc(sysdate)) or
      (nvl(trunc(template_end_date_active), trunc(sysdate)) < trunc(sysdate)));

   l_temp_eff_flag VARCHAR2(1) := 'Y'; -- added local variable

   -- 5182868 end

/* added the below cursor for bug 3000981 */
   CURSOR cur_pa_impl
   IS
   SELECT default_rate_type
     FROM pa_implementations;

   TYPE override_fields_tbl_type IS TABLE OF l_override_fields_csr%rowtype
     INDEX BY BINARY_INTEGER;

   l_api_name      CONSTANT  VARCHAR2(30)     := 'create_project';

   l_return_status        VARCHAR2(1);
   l_copy_task_flag            VARCHAR2(1)  := 'N';  --used by copy_project
   l_copy_budget_flag          VARCHAR2(1)  := 'N';  --idem
   l_use_override_flag         VARCHAR2(1)  := 'Y';  --idem
   l_copy_assignment_flag                       VARCHAR2(1)     := 'N';
   l_template_flag             VARCHAR2(1)  := 'N';  --idem
   l_err_code          NUMBER(15);
   l_err_stage                 VARCHAR2(2000);
   l_err_stack          VARCHAR2(2000);
   i            NUMBER    := 0; --counter
   j            NUMBER    := 0; --counter
   l_is_overridable        BOOLEAN    := FALSE;
   l_project_type_rec        pa_project_types%rowtype;
   l_project_rec        pa_projects%rowtype;
   l_project_in_rec        project_in_rec_type;
   l_override_fields_rec      l_override_fields_csr%rowtype;
   l_override_fields_tab      override_fields_tbl_type;
   l_key_members        project_role_tbl_type;
-- anlee org role changes
   l_org_roles                                  project_role_tbl_type;
   l_class_categories                           class_category_tbl_type;
   l_project_id          NUMBER;
   l_task_id          NUMBER;
   l_wbs_level          NUMBER    := 1;
   l_top_task_id        NUMBER;
   l_parent_task_id        NUMBER;
   l_address_id          NUMBER;
   l_task_in_rec        task_in_rec_type;
   l_bill_to_address_id        NUMBER := NULL; --Initialized to NULL for Bug 3911782
   l_ship_to_address_id        NUMBER := NULl; --Initialized to NULL for Bug 3911782
   l_bill_to_contact_id        NUMBER := NULL; --Initialized to NULL for tracking bug AMG API Gap Analysis : Bug 4633405
   l_ship_to_contact_id        NUMBER := NULL; --Initialized to NULL for tracking bug AMG API Gap Analysis : Bug 4633405
   l_source_project_type                        VARCHAR2(80);
   l_project_start_date                         DATE;
   l_project_completion_date                    DATE;
   l_msg_count          NUMBER ;
   l_msg_data          VARCHAR2(2000);
   l_function_allowed        VARCHAR2(1);
   l_resp_id          NUMBER := 0;
   l_proj_num_numeric                           NUMBER;
   l_attribute_category        VARCHAR2(30);
   l_attribute1          VARCHAR2(150);
   l_attribute2          VARCHAR2(150);
   l_attribute3          VARCHAR2(150);
   l_attribute4          VARCHAR2(150);
   l_attribute5          VARCHAR2(150);
   l_attribute6          VARCHAR2(150);
   l_attribute7          VARCHAR2(150);
   l_attribute8          VARCHAR2(150);
   l_attribute9          VARCHAR2(150);
   l_attribute10        VARCHAR2        (150);
   l_team_template_id                           NUMBER;
   l_country_code                               VARCHAR2(2);
   l_region                                     VARCHAR2(240);
   l_city                                       VARCHAR2(80);
--Sakthi
   l_agreement_currency        VARCHAR2(10);
   l_agreement_amount          NUMBER;
   l_agreement_org_id          NUMBER;
--Sakthi
-- Tax Code changes starts ...
   l_output_tax_code                VARCHAR2(30);
   l_retention_tax_code            VARCHAR2(30);
-- Tax Code changes ends ...

-- CC and Multi National Currency Starts ...
-- Project ...
   l_project_currency_code            VARCHAR2(15);
   l_allow_cross_charge_flag          VARCHAR2(1);
   l_project_rate_date                DATE;
   l_project_rate_type                VARCHAR2(30);
   l_cc_process_labor_flag            VARCHAR2(1);
   l_labor_tp_schedule_id             NUMBER;
   l_labor_tp_fixed_date              DATE;
   l_cc_process_nl_flag            VARCHAR2(1);
   l_nl_tp_schedule_id             NUMBER;
   l_nl_tp_fixed_date              DATE;
   l_cc_tax_task_id                NUMBER;
-- Customer ...
   l_inv_currency_code              VARCHAR2(15);
   l_inv_rate_type                  VARCHAR2(30);
   l_inv_rate_date                  DATE;
   l_inv_exchange_rate              NUMBER;
   l_allow_inv_rate_type_fg         VARCHAR2(1);
   l_bill_another_prj_flag          VARCHAR2(1);
   l_receiver_task_id               NUMBER;
-- CC and Multi National Currency Ends ...

-- ORM Changes Starts here ...

   l_role_list_id                     NUMBER;
   l_work_type_id                     NUMBER;
   l_calendar_id                      NUMBER;
   l_location_id                      NUMBER;
   l_probability_member_id            NUMBER;
   l_project_value                    NUMBER;
   l_expected_approval_date           DATE;
   l_cost_job_group_id                NUMBER;
   l_bill_job_group_id                NUMBER;

-- ORM Changes Ends here ...

   l_emp_bill_rate_schedule_id        NUMBER;
   l_job_bill_rate_schedule_id        NUMBER;

-- opportunity value changes
-- anlee
   l_opp_value_currency_code          VARCHAR2(15);
-- end of opportunity value changes
--Priority Code in quick entry
   l_priority_code                    VARCHAR2(30);
   l_security_level                   NUMBER;

   l_project_number_out                         VARCHAR2(30);
   l_actual_start_date               DATE;
   l_actual_finish_date       DATE;
   l_early_start_date               DATE;
   l_early_finish_date               DATE;
   l_late_start_date               DATE;
   l_late_finish_date               DATE;
   l_scheduled_start_date       DATE;
   l_scheduled_finish_date       DATE;
   l_out_start_date        DATE;
   l_out_completion_date      DATE;
   l_error_code                NUMBER;
   l_error_message        VARCHAR2(100);
   l_relationship_type                          VARCHAR2(30);
   l_wf_status_code                             VARCHAR2(30);
   l_create_project_number                      VARCHAR2(25);


--used for starting approve_project workflow
   l_workflow_is_used         VARCHAR2(1);
   l_start_wf_automatically       VARCHAR2(1);
   p_multiple_task_msg           VARCHAR2(1) := 'T';
   l_class_code_categories                      NUMBER;
   l_key_member                                 NUMBER;
--below two variables added for bug 2254661
  l_created_from_proj_id                       NUMBER;
  l_temp_flag                                  VARCHAR2(1);
--end 2254661
--anlee org role changes
   l_org_role                                   NUMBER;
   l_party_id                      NUMBER;
   l_project_party_id              NUMBER;
   l_resource_id                   NUMBER;
   l_wf_item_type                  VARCHAR2(30);
   l_wf_type                       VARCHAR2(30);
   l_wf_party_process              VARCHAR2(30);
   l_assignment_id                 NUMBER;
   l_end_date_active               DATE;

   CURSOR l_check_org_csr(c_customer_id IN NUMBER)  IS
   SELECT PARTY_ID
   FROM PA_CUSTOMERS_V
   WHERE CUSTOMER_ID = c_customer_id
   AND   PARTY_TYPE = 'ORGANIZATION';

   --Project Structures
   l_structure_in_rec             structure_in_rec_type;
   v_task_id                      NUMBER;
   v_parent_task_id               NUMBER;
   l_amg_segment1       VARCHAR2(25);
   l_amg_task_number       VARCHAR2(50);
   l_task_version_id        NUMBER;
   l_delta                  NUMBER;
   --Project Structures

   --proj conn
   v_first_index            NUMBER;
   l_ref_task_id     NUMBER;
   --proj conn

   -- <EA>
   l_failed_row_id_list VARCHAR2(32767);
   l_errorcode      VARCHAR2(150);
   -- </EA>

   --Bug 2931183
   l_debug_mode               varchar2(1);
   g_module_name              VARCHAR2(100) := 'pa.plsql.CREATE_PROJECT';

  /* Bug 3077676 */
   l_cust_acc_rel_code pa_implementations.cust_acc_rel_code%TYPE;
   CURSOR get_cust_acc_rel_code IS
   Select cust_acc_rel_code
   From pa_implementations;

-- FP-M Bug # 3301192
   l_d_task_ver_id NUMBER;
   l_d_task_id NUMBER;
   l_d_structure_version_id NUMBER;
   l_d_loop_count NUMBER;

   l_deliverable_id NUMBER; -- 3435905
   i_actn           NUMBER := 0; -- 3435905

--Begin Add by rtarway for FP.M Set Financial Task Changes
   l_patask_record_version_number NUMBER;
--End Add by rtarway for FP.M Set Financial Task Changes

--Bug 3279981
     CURSOR cur_get_orig_tt_cust_flag( c_project_id IN NUMBER ) IS
     SELECT enable_top_task_customer_flag
     FROM   pa_projects_all
     WHERE  project_id = c_project_id ;

     l_orig_def_tt_flag VARCHAR2(1);
     l_cust_bill_split  NUMBER;
     l_def_tt_cust_flag VARCHAR2(1);
     l_en_top_task_customer_flag VARCHAR2(1);
     l_en_top_task_inv_mth_flag  VARCHAR2(1);



--Bug 3279981
l_dup_name_flag VARCHAR2(1); --bug 2450064

l1 number;
l2 varchar2(1);
l3 number;
l4 varchar2(1);

l_in_customer_id NUMBER; -- Added for the bug 3825528

l_bug_wp_enabled  VARCHAR2(1); -- Bug 4146369
l_bug_fp_enabled  VARCHAR2(1); -- Bug 4146369

/* Start of code for bug #2111806 */

-- Start of Bug fix 4878696
-- Commented this cursor for Performance Bug 4878696
-- CURSOR c_prj(c_project_id IN NUMBER ) IS
-- select project_system_status_code
--    ,project_type_class_code
-- from pa_projects_v
-- where project_id = c_project_id;

-- Added the following cursor instead of the commented one as above for Performance Bug 4878696
CURSOR c_prj(c_project_id IN NUMBER ) IS
select PROJECT_SYSTEM_STATUS_CODE , PROJECT_TYPE_CLASS_CODE
       from pa_projects_all ppa,pa_project_statuses pps,pa_project_types ppt
where ppa.project_id = c_project_id
  and ppa.PROJECT_STATUS_CODE = pps.PROJECT_STATUS_CODE
  and ppa.PROJECT_TYPE = ppt.PROJECT_TYPE
  and pps.STATUS_TYPE = 'PROJECT'
  and ppt.ORG_ID= ppa.ORG_ID ;

-- End of Bug fix 4878696

CURSOR c_prj_count(c_project_id IN NUMBER ) IS
select count(*)
  from pa_project_players
 where project_id = c_project_id
   and project_role_type='PROJECT MANAGER';

l_proj_status       pa_projects_all.project_status_code%TYPE;
l_proj_type_class       pa_project_types_all.project_type_class_code%TYPE;
l_prj_mgr_count         NUMBER;
/* End of code for bug #2111806. */

-- 4193743 Added below local variables
l_bill_to_customer_id NUMBER;
l_ship_to_customer_id NUMBER;
l_enable_top_task_cust_flag  VARCHAR2(1)    := 'N'; --added for tracking bug  by aditi
l_project_relationship_code PA_PROJECT_CUSTOMERS.PROJECT_RELATIONSHIP_CODE%TYPE; --Variable added by aditi for tracking bug

-- 5191417 Added below cursor to validate priority_code

l_valid_prio_code VARCHAR2(1) := 'N';

CURSOR priority_code_csr(p_priority_code IN VARCHAR2) IS
Select
        'Y'
from
        pa_lookups
where
        lookup_type = 'PA_PROJECT_PRIORITY_CODE'
   and  lookup_code = p_priority_code ;

-- 5191417 end

-- Bug#5191699. Added the cursor and the local variable below for validating
--              project security level.This can be either 'Enterprise' or 'Secured'.

l_check_sec_level       VARCHAR2(1) := 'N';

CURSOR cur_check_sec_level(p_proj_sec_level IN VARCHAR2 ) IS
SELECT 'Y'  FROM
dual
WHERE EXISTS
        (SELECT NULL FROM pa_lookups
         WHERE
                lookup_type     =       'PA_PROJECT_ACCESS_LEVEL' AND
                lookup_code     =       p_proj_sec_level
        );
-- End of code changes for Bug#5191699 in declare section

--Bug#5191521.  Added the cursor and the local variable below for validating
--              probability member id.

l_check_prob_id VARCHAR2(1) := 'N';

CURSOR  cur_validate_prob_member( p_project_id IN NUMBER ,p_probability_member_id IN NUMBER )
IS
SELECT 'Y' FROM dual
WHERE  EXISTS
        (
                SELECT
                NULL
                FROM
                        pa_probability_members ppm,
                        pa_projects pp,
                        pa_project_types ppt
                WHERE
                        pp.project_type                 =       ppt.project_type AND
                        pp.org_id                       =       ppt.org_id AND
                        ppt.probability_list_id         =       ppm.probability_list_id AND
                        pp.project_id                   =       p_project_id AND
                        ppm.probability_member_id       =       p_probability_member_id AND
                        trunc(sysdate) BETWEEN ppm.start_date_active AND nvl(ppm.end_date_active,trunc(sysdate))
        );
--End of code changes for Bug#5191521 in declare section


    --sunkalya:federal bug#5511353
     l_date_eff_funds_flag VARCHAR2(1);
     l_orig_date_eff_funds_flag VARCHAR2(1);
     CURSOR get_date_eff_funds_flag( c_project_id IN NUMBER )
     IS
     SELECT
     nvl(DATE_EFF_FUNDS_CONSUMPTION,'N')
     FROM
     pa_projects_all
     WHERE project_id = c_project_id ;

     /* 7508661 : EnC : Start */

     l_ar_rec_notify_flag VARCHAR2(1);
     l_orig_ar_rec_notify_flag VARCHAR2(1);

     CURSOR get_ar_rec_notify_flag( c_project_id IN NUMBER )
     IS
     SELECT
     nvl(AR_REC_NOTIFY_FLAG,'N')
     FROM
     pa_projects_all
     WHERE project_id = c_project_id ;

     l_auto_release_pwp_inv VARCHAR2(1);
     l_orig_auto_release_pwp_inv VARCHAR2(1);

     CURSOR get_auto_release_pwp_inv( c_project_id IN NUMBER )
     IS
     SELECT
     nvl(AUTO_RELEASE_PWP_INV,'Y')
     FROM
     pa_projects_all
     WHERE project_id = c_project_id ;

     /* 7508661 : EnC : End */

	CURSOR cur_enable_funds_flag(p_project_id IN VARCHAR2)
	IS
	SELECT 'Y'
	FROM
	pa_projects_all p,
	pa_project_types_all pt
	WHERE
	p.project_id			=	p_project_id	AND
	pt.project_type_class_code	=	'CONTRACT'	AND
	p.project_type			=	pt.project_type AND
	pt.CC_PRVDR_FLAG		=	'N'		AND
	p.org_id			=	pt.org_id;


	l_enable_funds_flag	VARCHAR2(1);

/*	CURSOR cur_rev_inv(p_project_id IN VARCHAR2)
	IS
	SELECT 'Y'
	FROM dual
	WHERE EXISTS
		(SELECT  NULL
		 FROM
		 pa_draft_revenues r
		 WHERE
		 r.project_id		=	p_project_id
		)
	OR EXISTS
		(SELECT  NULL
		 FROM
		 pa_draft_invoices i
		 WHERE
		 i.project_id		=	p_project_id
		);
	l_chk_rev_inv_flag	VARCHAR2(1) := NULL;

*/
	CURSOR chk_task_level_funding(p_project_id IN VARCHAR2)
	IS
	SELECT 'Y'
	FROM sys.dual
	WHERE exists
		(	select 1
			from  pa_summary_project_fundings
			where project_id = p_project_id
			and task_id is not null
		);

	l_chk_task_level_funding VARCHAR2(1) := NULL;

	CURSOR count_cust(p_project_id IN VARCHAR2)
	IS
	SELECT count(*)
	FROM pa_project_customers
	WHERE project_id =  p_project_id;

	l_count_cust	VARCHAR2(1) := NULL;

     --sunkalya:federal bug#5511353

 /* Adding new cursor for bug 6408593 */

 CURSOR c_prj_key_role_type(c_key_role_meaning IN VARCHAR) IS
 select project_role_type
 from pa_project_role_types_vl
 where meaning like c_key_role_meaning;

/*Added for bug 7830143*/
CURSOR c_get_org_id(c_project_id NUMBER) IS
select org_id
from pa_projects_all
where project_id = c_project_id;

l_org_id NUMBER ;
/*Added for bug 7830143*/


l_mapped_task_id   NUMBER;
/*  added for bug 9491704 - */


BEGIN

--  Standard begin of API savepoint

    SAVEPOINT create_project_pub;

    l_debug_mode := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');
--  Standard call to check for call compatibility.


    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;


     l_resp_id := FND_GLOBAL.Resp_id;


--Bug#5559292

G_PROJECT_NUMBER_GEN_MODE := PA_PROJECT_UTILS.GetProjNumMode;
G_PROJECT_NUMBER_TYPE     := PA_PROJECT_UTILS.GetProjNumType;

--Bug#5559292


    -- Actions performed using the APIs would be subject to
    -- function security. If the responsibility does not allow
    -- such functions to be executed, the API should not proceed further
    -- since the user does not have access to such functions

    PA_INTERFACE_UTILS_PUB.G_PROJECt_ID := null;  --bug 2471668 ( not in the project context )

    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version_number,
       p_responsibility_id  => l_resp_id,
       p_function_name      => 'PA_PM_CREATE_PROJECT',
       p_msg_count      => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed
       );


     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
      RAISE FND_API.G_EXC_ERROR;
      END IF;
        IF l_function_allowed = 'N' THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
     p_project_out.return_status := FND_API.G_RET_STS_ERROR;
     RAISE FND_API.G_EXC_ERROR;
        END IF;


    --  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

    --  Set API return status to success

    p_return_status     := FND_API.G_RET_STS_SUCCESS;
    p_project_out.return_status := FND_API.G_RET_STS_SUCCESS;

-- 22-DEC-97, jwhite:
--  Initialize New OUT-parameter to indicate workflow status

-- Set Worflow Started Status -------------------------------------------------

    p_workflow_started    := 'N';
-- ------------------------------------------------------------------------------------



    --Move incoming project record to a local project record
    --Needs to be done to change incoming values to default values

    l_project_in_rec := p_project_in;

    --project structures
    l_structure_in_rec := p_structure_in;
    --project structures

--Added by rtarway for BUG 3703440, 3717026: Populate Global Structure Type Record
    G_structure_in_rec.pa_project_id                  := l_structure_in_rec.pa_project_id;
    G_structure_in_rec.structure_type                 := l_structure_in_rec.structure_type;
    G_structure_in_rec.structure_version_name         := l_structure_in_rec.structure_version_name;
    G_structure_in_rec.structure_version_id           := l_structure_in_rec.structure_version_id;
    G_structure_in_rec.DESCRIPTION                    := l_structure_in_rec.DESCRIPTION;
--End Add by rtarway for BUG 3703440, 3717026



    -- CHECK FOR MANDATORY FIELDS
    -- check whether mandatory incoming parameters exist
    -- some of the fields for projects are checked by procedure COPY_PROJECT
--bug 2841158
--    IF p_pm_product_code IS NULL
--    OR p_pm_product_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    IF p_pm_product_code IS NOT NULL
    AND p_pm_product_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--bug 2841158
    THEN

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PRODUCT_CODE_IS_MISSING'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;
  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
  p_return_status             := FND_API.G_RET_STS_ERROR;
  RAISE FND_API.G_EXC_ERROR;
    END IF;

--bug 2841158
    IF p_pm_product_code <> 'WORKPLAN'
       AND p_pm_product_code IS NOT NULL
       AND p_pm_product_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
--bug 2841158
          /*added for bug no :2413400*/
        OPEN p_product_code_csr (p_pm_product_code);
        FETCH p_product_code_csr INTO l_pm_product_code;
        CLOSE p_product_code_csr;

        IF l_pm_product_code <> 'X'
        THEN

        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PRODUCT_CODE_IS_INVALID'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
        END IF;
        p_project_out.return_status := FND_API.G_RET_STS_ERROR;
        p_return_status             := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;
        END IF;
    END IF; --bug 2841158

    IF l_project_in_rec.pm_project_reference IS NULL
    OR l_project_in_rec.pm_project_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PROJECT_REF_IS_MISSING'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;
  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
  p_return_status             := FND_API.G_RET_STS_ERROR;
  RAISE FND_API.G_EXC_ERROR;
    END IF;

    IF l_project_in_rec.project_name IS NULL
    OR l_project_in_rec.project_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PROJECT_NAME_IS_MISSING'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;
  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
  p_return_status             := FND_API.G_RET_STS_ERROR;
  RAISE FND_API.G_EXC_ERROR;
    END IF;

-- Ensure that Project name is unique

    IF  pa_project_utils.check_unique_project_name
                 (l_project_in_rec.project_name,
                  NULL ) = 0 THEN
  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PR_EPR_PROJ_NAME_NOT_UNIQUE'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'ADDP'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;
  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
  p_return_status             := FND_API.G_RET_STS_ERROR;
  RAISE FND_API.G_EXC_ERROR;
  /*Adding for the bug 2450064*/
ELSE
  pjm_seiban_pkg.project_name_dup(l_project_in_rec.project_name,l_dup_name_flag);

  IF l_dup_name_flag = 'Y' THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_SEIBAN_NAME_NOT_UNIQUE'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'ADDP'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;
  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
  p_return_status             := FND_API.G_RET_STS_ERROR;
  RAISE FND_API.G_EXC_ERROR;
  END IF;
  /*Adding for the bug 2450064*/
    END IF;

-- Bug#2638968 Ensure that Long name is unique
  IF l_project_in_rec.long_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND l_project_in_rec.long_name IS NOT NULL THEN
    IF  pa_project_utils.check_unique_long_name
                 (l_project_in_rec.long_name,
                  NULL ) = 0 THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PR_EPR_LONG_NAME_NOT_UNIQUE'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'ADDP'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
        END IF;
        p_project_out.return_status := FND_API.G_RET_STS_ERROR;
        p_return_status             := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;
    END IF;
  END IF;

  -- bug#3014919: Ensure Project Reference is unique
  IF l_project_in_rec.pm_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND l_project_in_rec.pm_project_reference IS NOT NULL THEN
     IF  pa_project_utils.check_unique_project_reference
                    (l_project_in_rec.pm_project_reference,
                     p_pm_product_code,  -- added for bug 4870305
                     NULL ) = 0
     THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PROJECT_REF_NOT_UNIQUE'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'ADDP'
                  ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
                  ,p_attribute5       => '');
        END IF;
     p_project_out.return_status := FND_API.G_RET_STS_ERROR;
     p_return_status             := FND_API.G_RET_STS_ERROR;
     RAISE FND_API.G_EXC_ERROR;
    END IF;
  END IF;

-- Check for implementation defined Project number generation mode
-- If project number generation is manual then input project
-- reference would be copied to project number
-- Hence, need to ensure that this is unique
-- First check whether a project number is passed.If so , use that
-- else use the project reference

  IF (l_project_in_rec.pa_project_number IS NOT NULL AND
     l_project_in_rec.pa_project_number <>
     PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)  THEN
     l_create_project_number := l_project_in_rec.pa_project_number;
  ELSE
     l_create_project_number := l_project_in_rec.pm_project_reference;
  END IF;


  IF G_PROJECT_NUMBER_GEN_MODE = 'MANUAL' THEN
      IF  pa_project_utils.check_unique_project_number
          (l_create_project_number,
           NULL ) = 0 THEN
  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PR_EPR_PROJ_NUM_NOT_UNIQUE'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'ADDP'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;
  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
  p_return_status             := FND_API.G_RET_STS_ERROR;
  RAISE FND_API.G_EXC_ERROR;
      /*Adding for the bug 2450064*/
  ELSE
    pjm_seiban_pkg.project_number_dup(l_create_project_number,l_dup_name_flag);

    IF l_dup_name_flag = 'Y' THEN
          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
           pa_interface_utils_pub.map_new_amg_msg
             ( p_old_message_code => 'PA_SEIBAN_NUM_NOT_UNIQUE'
              ,p_msg_attribute    => 'CHANGE'
              ,p_resize_flag      => 'Y'
              ,p_msg_context      => ' '
              ,p_attribute1       => l_project_in_rec.pm_project_reference
              ,p_attribute2       => ''
              ,p_attribute3       => ''
              ,p_attribute4       => ''
              ,p_attribute5       => '');
    END IF;
    p_project_out.return_status := FND_API.G_RET_STS_ERROR;
    p_return_status             := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;
  END IF;
  /*Adding for the bug 2450064*/
      END IF;
      -- Check for project number being numeric if project number type is
      -- defined as numeric

         BEGIN
          IF G_PROJECT_NUMBER_TYPE = 'NUMERIC' THEN
             l_proj_num_numeric  :=
               TO_NUMBER(l_create_project_number);
          END IF;
         EXCEPTION
          WHEN VALUE_ERROR THEN
      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
          pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PR_NUMERIC_NUM_REQ'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
      END IF;
      p_project_out.return_status := FND_API.G_RET_STS_ERROR;
      p_return_status             := FND_API.G_RET_STS_ERROR;
      RAISE FND_API.G_EXC_ERROR;
         END ;
  END IF;

    IF l_project_in_rec.created_from_project_id IS NULL
    OR l_project_in_rec.created_from_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN

          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
          THEN
                 pa_interface_utils_pub.map_new_amg_msg
                   ( p_old_message_code => 'PA_SOURCE_TEMPLATE_IS_MISSING'
                    ,p_msg_attribute    => 'CHANGE'
                    ,p_resize_flag      => 'Y'
                    ,p_msg_context      => 'PROJ'
                    ,p_attribute1       => l_project_in_rec.pm_project_reference
                    ,p_attribute2       => ''
                    ,p_attribute3       => ''
                    ,p_attribute4       => ''
                    ,p_attribute5       => '');
          END IF;
          p_project_out.return_status := FND_API.G_RET_STS_ERROR;
          RAISE FND_API.G_EXC_ERROR;
    END IF;

    -- mandatory fields for tasks is checked here

/*Added for bug 7830143*/
            OPEN c_get_org_id(l_project_in_rec.created_from_project_id);
	    FETCH c_get_org_id INTO l_org_id;
	    CLOSE c_get_org_id;

	    IF NVL(PA_MOAC_UTILS.GET_CURRENT_ORG_ID,-1234) <>  l_org_id THEN
		PA_MOAC_UTILS.SET_POLICY_CONTEXT('S', l_org_id);
	    END IF;
/*Added for bug 7830143*/

     -- code addition for bug 2254661 starts
        Open l_temp_flag_csr(l_project_in_rec.created_from_project_id);
        FETCH l_temp_flag_csr INTO l_temp_flag;
        IF l_temp_flag_csr%NOTFOUND
        THEN
               CLOSE l_temp_flag_csr;
               IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
               THEN
                  pa_interface_utils_pub.map_new_amg_msg
                   ( p_old_message_code => 'PA_SOURCE_TEMPLATE_INVALID'
                    ,p_msg_attribute    => 'CHANGE'
                    ,p_resize_flag      => 'N'
                    ,p_msg_context      => 'PROJ'
                    ,p_attribute1       => l_project_in_rec.pm_project_reference
                    ,p_attribute2       => ''
                    ,p_attribute3       => ''
                    ,p_attribute4       => ''
                    ,p_attribute5       => '');
                END IF;
                p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                RAISE FND_API.G_EXC_ERROR;
        END IF;
        CLOSE l_temp_flag_csr;

     if l_temp_flag = 'Y' then

        -- 5182868 Validate the template for effectiveness

        Open l_temp_eff_flag_csr(l_project_in_rec.created_from_project_id);
        FETCH l_temp_eff_flag_csr INTO l_temp_eff_flag;
        CLOSE l_temp_eff_flag_csr;

        -- if template is inactive then throw error message

        IF l_temp_eff_flag = 'N' THEN

                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                pa_utils.add_message
                 (
                   p_app_short_name   => 'PA'
                  ,p_msg_name         => 'PA_TEMPLATE_NOT_ACTIVE'
                 );

                END IF;

                p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                RAISE FND_API.G_EXC_ERROR;

        END IF;

        -- 5182868 end

        l_created_from_proj_id := l_project_in_rec.created_from_project_id;
     else
        select created_from_project_id into l_created_from_proj_id
        from pa_projects_all
        where project_id = l_project_in_rec.created_from_project_id;
     end if;
    --code addition for bug 2254661 ends


    --CHECK FOR OVERRIDABILITY
    --get all the overridable fields for this project template source
    --changed the argument to the cursor below for bug 2254661
    OPEN l_override_fields_csr(l_created_from_proj_id);
    i := 0;
    LOOP
      i := i + 1;
      FETCH l_override_fields_csr INTO l_override_fields_rec;
      EXIT WHEN l_override_fields_csr%NOTFOUND;
      l_override_fields_tab(i) := l_override_fields_rec;

    END LOOP;
    i := 0;
    CLOSE l_override_fields_csr;

----dbms_output.put_line('Checking for Customer Overridability');
--example of how to check for overridability
/*
    ELSE
      l_is_overridable := FALSE;
  i := l_override_fields_tab.first;
  WHILE i IS NOT NULL LOOP
    IF l_override_fields_tab(i).pa_field_name = 'DESCRIPTION'
    THEN
      l_is_overridable := TRUE;
      EXIT;
    END IF;
    i := l_override_fields_tab.next(i);
  END LOOP;

  IF NOT l_is_overridable
  THEN
      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN
        FND_MESSAGE.SET_NAME('PA','PA_DESCRIPTION_NOT_OVERRIDABLE');
        FND_MSG_PUB.add;
      END IF;

      p_project_out.return_status := FND_API.G_RET_STS_ERROR;
      RAISE FND_API.G_EXC_ERROR;
  END IF;
*/
/* Code below is added for Customer Issue tracking bug. Customer Can still continue to project_in_rec_type to insert customers
  or can use the new record type for the same. However he cannot use both together in the same script*/
  ----dbms_output.put_line('Checking for Customer Overridability -- print till here ');
----dbms_output.put_line('value of l_project_in_rec.customer_id'||l_project_in_rec.customer_id);
------dbms_output.put_line('value of p_customers_in(1).customer_id'||p_customers_in(1).customer_id);

i := p_customers_in.first;
----dbms_output.put_line('value of i'||i);
IF NOT(p_customers_in.exists(i)) THEN
 If l_project_in_rec.customer_id IS NOT NULL Then
 l_in_customer_id := l_project_in_rec.customer_id;
 l_bill_to_customer_id := l_project_in_rec.bill_to_customer_id;
 l_ship_to_customer_id := l_project_in_rec.ship_to_customer_id;
 l_bill_to_address_id := l_project_in_rec.bill_to_address_id;
 l_ship_to_address_id := l_project_in_rec.ship_to_address_id;

 /* commenting this code for Bug#5517655 */
 /*
 If l_project_in_rec.project_relationship_code IS NULL OR l_project_in_rec.project_relationship_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 Then


                l_project_relationship_code := 'Primary';

 Else


                l_project_relationship_code := l_project_in_rec.project_relationship_code;

 End If;

 */ --  End of commenting for Bug#5517655

 l_cust_bill_split := 100; --default contribution for any customer that is being created
 l_enable_top_task_cust_flag := l_project_in_rec.enable_top_task_customer_flag;
 End If;
ElSIF p_customers_in(i).customer_id IS NOT NULL then
  ------dbms_output.put_line('Comes in this loop');
 l_in_customer_id := p_customers_in(1).customer_id;
 l_bill_to_customer_id:=p_customers_in(1).bill_to_customer_id;
 l_ship_to_customer_id:=p_customers_in(1).ship_to_customer_id;
 l_bill_to_address_id :=p_customers_in(1).bill_to_address_id;
 l_ship_to_address_id :=p_customers_in(1).ship_to_address_id;

 /* commenting this code for Bug#5517655 */
 /*
 If p_customers_in(1).PROJECT_RELATIONSHIP_CODE IS NULL OR p_customers_in(1).PROJECT_RELATIONSHIP_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 Then

                l_project_relationship_code := 'Primary';
 Else

                l_project_relationship_code := p_customers_in(1).PROJECT_RELATIONSHIP_CODE;
 End If;
 */ -- End of commenting for Bug#5517655
 l_cust_bill_split := p_customers_in(1).Customer_Bill_Split;
 End If;

----dbms_output.put_line('value of l_in_customer_id'||l_in_customer_id);
----dbms_output.put_line('value of l_bill_to_customer_id'||l_bill_to_customer_id);
----dbms_output.put_line('value of l_ship_to_customer_id'||l_ship_to_customer_id);
----dbms_output.put_line('value of l_bill_to_address_id'||l_bill_to_address_id);
----dbms_output.put_line('value of l_ship_to_address_id'||l_ship_to_address_id);
----dbms_output.put_line('value of l_project_relationship_code'||l_project_relationship_code);
----dbms_output.put_line('value of l_cust_bill_split'||l_cust_bill_split);

 /* End of code changes for tracking bug */

/*Start Code for Bug 6408593 */

l_key_members := p_key_members;

i := l_key_members.first;
WHILE i IS NOT NULL LOOP
   IF(l_key_members(i).project_role_meaning <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
   THEN
     OPEN c_prj_key_role_type(l_key_members(i).project_role_meaning);
     FETCH c_prj_key_role_type INTO l_key_members(i).project_role_type;
     CLOSE c_prj_key_role_type;
   END IF;
   i := l_key_members.next(i);
END LOOP;
/*End Code for Bug 6408593 */

/* code added for the bug#1891621, starts here  */
    i := l_override_fields_tab.first;

    WHILE i IS NOT NULL LOOP
      IF l_override_fields_tab(i).mandatory_flag = 'Y' THEN
        IF l_override_fields_tab(i).pa_field_name = 'CARRYING_OUT_ORGANIZATION_ID' THEN
          IF l_project_in_rec.carrying_out_organization_id IS NULL
           OR l_project_in_rec.carrying_out_organization_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_ORGANIZATION_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => 'Organization'
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'CLASSIFICATION' THEN

          l_class_categories := p_class_categories;
          j := l_class_categories.first;

          IF j IS NULL THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_CLASSIFICATION_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

          l_class_code_categories := 0;

          WHILE j IS NOT NULL LOOP
            IF upper(l_override_fields_tab(i).type) = upper(l_class_categories(j).class_category)
            AND l_class_categories(j).class_code IS NOT NULL
            THEN
             l_class_code_categories := 1;
              -- check whether the class category and class code combination is a valid one
             IF pa_project_pvt.check_class_code_valid(l_class_categories(j).class_category,
                                       l_class_categories(j).class_code) = 'N'
             THEN
               IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
               THEN
               pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_INVALID_CLASS_CATEGORY'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'N'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
               END IF;
               p_project_out.return_status := FND_API.G_RET_STS_ERROR;
               p_return_status             := FND_API.G_RET_STS_ERROR;
               RAISE FND_API.G_EXC_ERROR;
             END IF;

             EXIT;
            END IF;
            j := l_class_categories.next(j);
          END LOOP;

          IF l_class_code_categories <> 1
          THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
             pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_INVALID_CLASS_CATEGORY'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      =>'N' --'Y'is Replaced with 'N';bug#1891621
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
             END IF;
             p_project_out.return_status := FND_API.G_RET_STS_ERROR;
             p_return_status             := FND_API.G_RET_STS_ERROR;
             RAISE FND_API.G_EXC_ERROR;
          END IF;
        ELSIF l_override_fields_tab(i).pa_field_name = 'COMPLETION_DATE' THEN
          IF l_project_in_rec.completion_date IS NULL
           OR l_project_in_rec.completion_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_COMPLETION_DATE_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'START_DATE' THEN
          IF l_project_in_rec.start_date IS NULL
           OR l_project_in_rec.start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_START_DATE_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;
        ELSIF l_override_fields_tab(i).pa_field_name = 'CUSTOMER_NAME' THEN
         /* Code commented for tracking bug
         IF l_project_in_rec.customer_id IS NULL
           OR l_project_in_rec.customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM */
            /* Code added for tracking bug by aditi */
            ----dbms_output.put_line('value of l_in_customer_id'||l_in_customer_id);
         IF l_in_customer_id IS NULL
           OR l_in_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
            /* End of Code changes */
          THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_CUSTOMER_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

--Customer Account relationship Changes:

        ELSIF l_override_fields_tab(i).pa_field_name = 'BILL_TO_CUSTOMER' THEN
          /* Code commented for tracking bug
          IF l_project_in_rec.bill_to_customer_id IS NULL
           OR l_project_in_rec.bill_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM */
           /* Code added for tracking bug by aditi */
           IF l_bill_to_customer_id IS NULL
           OR l_bill_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
            /* End of Code changes */
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_BILL_TO_CUST_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'SHIP_TO_CUSTOMER' THEN
         /* Code commented for tracking bug
          IF l_project_in_rec.ship_to_customer_id IS NULL
           OR l_project_in_rec.ship_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM */
            /* Code added for tracking bug by aditi */
        IF l_ship_to_customer_id IS NULL
           OR l_ship_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
             /* End of Code changes */
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_SHIP_TO_CUST_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

----dbms_output.put_line('Overriding bill to cst and ship to cst');

        ELSIF l_override_fields_tab(i).pa_field_name = 'DESCRIPTION' THEN
          IF l_project_in_rec.description IS NULL
           OR l_project_in_rec.description = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_DESCRIPTION_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'KEY_MEMBER' THEN

    --       l_key_members := p_key_members; Commented for Bug 6408593
          j := l_key_members.first;

          IF j IS NULL THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_KEY_MEMBER_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

          l_key_member := 0;

          WHILE j IS NOT NULL LOOP
            IF upper(l_override_fields_tab(i).type) = upper(l_key_members(j).project_role_type)
            AND l_key_members(j).person_id IS NOT NULL
            THEN
             l_key_member := 1;
             EXIT;
            END IF;
            j := l_key_members.next(j);
          END LOOP;

          IF l_key_member <> 1
          THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
             pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_KEY_MEMBER_IS_NULL'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'N'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
             END IF;
             p_project_out.return_status := FND_API.G_RET_STS_ERROR;
             p_return_status             := FND_API.G_RET_STS_ERROR;
             RAISE FND_API.G_EXC_ERROR;
          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'DISTRIBUTION_RULE' THEN
          IF l_project_in_rec.distribution_rule IS NULL
           OR l_project_in_rec.distribution_rule = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_DISTRIBUTION_RULE_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'PROJECT_STATUS_CODE' THEN
          IF l_project_in_rec.project_status_code IS NULL
           OR l_project_in_rec.project_status_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_PRJ_STATUS_CODE_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'PUBLIC_SECTOR_FLAG' THEN
          IF l_project_in_rec.public_sector_flag IS NULL
           OR l_project_in_rec.public_sector_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_PUB_SECTOR_FLAG_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'TEAM_TEMPLATE_ID' THEN
          IF l_project_in_rec.team_template_id IS NULL
           OR l_project_in_rec.team_template_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_TEAM_TMPLT_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'COUNTRY' THEN
          IF l_project_in_rec.country_code IS NULL
           OR l_project_in_rec.country_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_COUNTRY_CODE_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'STATE_REGION' THEN
          IF l_project_in_rec.region IS NULL
           OR l_project_in_rec.region = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_REGION_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'CITY' THEN
          IF l_project_in_rec.city IS NULL
           OR l_project_in_rec.city = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_CITY_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'EXPECTED_APPROVAL_DATE' THEN
          IF l_project_in_rec.expected_approval_date IS NULL
           OR l_project_in_rec.expected_approval_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_EXP_APPR_DATE_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'PROBABILITY_MEMBER_ID' THEN
          IF l_project_in_rec.probability_member_id IS NULL
           OR l_project_in_rec.probability_member_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_PROB_MEMBER_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

        ELSIF l_override_fields_tab(i).pa_field_name = 'PROJECT_VALUE' THEN
          IF l_project_in_rec.project_value IS NULL
           OR l_project_in_rec.project_value = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_PROJECT_VALUE_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

-- anlee opportunity value changes
        ELSIF l_override_fields_tab(i).pa_field_name = 'OPP_VALUE_CURRENCY_CODE' THEN
          IF l_project_in_rec.project_value IS NULL
           OR l_project_in_rec.project_value = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_OPP_CURR_CODE_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

-- anlee org role changes
        ELSIF l_override_fields_tab(i).pa_field_name = 'ORG_ROLE' THEN

          l_org_roles := p_org_roles;
          j := l_org_roles.first;

          IF j IS NULL THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_ORG_ROLE_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;

          END IF;

          l_org_role := 0;

          WHILE j IS NOT NULL LOOP
            IF upper(l_override_fields_tab(i).type) = upper(l_org_roles(j).project_role_type)
            AND l_org_roles(j).person_id IS NOT NULL
            THEN
             l_org_role := 1;
             EXIT;
            END IF;
            j := l_org_roles.next(j);
          END LOOP;

          IF l_org_role <> 1
          THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
             pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_ORG_ROLE_IS_NULL'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'N'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
             END IF;
             p_project_out.return_status := FND_API.G_RET_STS_ERROR;
             p_return_status             := FND_API.G_RET_STS_ERROR;
             RAISE FND_API.G_EXC_ERROR;
          END IF;

/* Added this code for bug#2672646 if Long Name is an Quick Entry Field */

     ELSIF   l_override_fields_tab(i).pa_field_name = 'LONG_NAME' THEN
          IF l_project_in_rec.long_name IS NULL
           OR l_project_in_rec.long_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_PRJ_LONG_NAME_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
          END IF;

/* End of code added for bug#2672646 */

        END IF;    /* l_override_fields_tab(i).pa_field_name  */
      END IF;     /* mandatory_flag = 'Y'  */
      i := l_override_fields_tab.next(i);
    END LOOP;

/* code added for the bug#1891621, ends here  */


/* Bug#2672646 - If long name is passed as null or has default value, then we must default to the project name,
            This if loop will succeed only if long name is not a mandatory quick entry field, otherwise error
      would have been given above itself
Start of code for bug#2672646 */

   IF l_project_in_rec.long_name IS NULL
      OR l_project_in_rec.long_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
   THEN
       l_project_in_rec.long_name := l_project_in_rec.project_name;
   END IF;

/* End of code for bug#2672646 */

-- Need to get the project type of the source template, to validate
   -- distribution rule
   -- Validates the ID of the source template as well.

      OPEN l_source_project_type_csr(l_project_in_rec.created_from_project_id);
      FETCH l_source_project_type_csr INTO l_source_project_type;

      IF l_source_project_type_csr%NOTFOUND
      THEN
    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_SOURCE_TEMPLATE_INVALID'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
    END IF;

    p_project_out.return_status := FND_API.G_RET_STS_ERROR;
    CLOSE l_source_project_type_csr;
    RAISE FND_API.G_EXC_ERROR;
      END IF;

      CLOSE l_source_project_type_csr;

    IF  l_project_in_rec.distribution_rule <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    AND l_project_in_rec.distribution_rule IS NOT NULL
    THEN
          IF pa_project_pvt.check_valid_dist_rule
             (l_source_project_type,
              l_project_in_rec.distribution_rule,
              l_project_in_rec.enable_top_task_inv_mth_flag ) = 'N'  --Bug 3279981
          THEN
    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_INVALID_DIST_RULE'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
                END IF;

                RAISE  FND_API.G_EXC_ERROR;
          END IF;
    END IF;

    IF  l_project_in_rec.carrying_out_organization_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    AND l_project_in_rec.carrying_out_organization_id IS NOT NULL
    THEN
       IF pa_project_pvt.check_valid_org
          (l_project_in_rec.carrying_out_organization_id) = 'N'
       THEN
    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_INVALID_ORG'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
             END IF;

             RAISE  FND_API.G_EXC_ERROR;
       END IF;
    END IF;

       l_project_start_date      := l_project_in_rec.start_date;
       l_project_completion_date := l_project_in_rec.completion_date;

    -- completion date can be specified only if there is a start date
       IF  l_project_completion_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
       AND ( l_project_start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
              OR l_project_start_date IS NULL )
       THEN
    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PR_START_DATE_NEEDED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
               END IF;
                       RAISE  FND_API.G_EXC_ERROR;
       END IF;

    -- completion date cannot be less than start date
    IF     l_project_start_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
       AND l_project_start_date IS NOT NULL
       AND l_project_completion_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
       AND l_project_completion_date IS NOT NULL
       AND l_project_completion_date < l_project_start_date
       THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN

                -- 5182972 Commented below code , which was throwing wrong error message
                /*
                 pa_interface_utils_pub.map_new_amg_msg
                   ( p_old_message_code => 'PA_PR_INVALID_START_DATE'
                    ,p_msg_attribute    => 'CHANGE'
                    ,p_resize_flag      => 'N'
                    ,p_msg_context      => 'PROJ'
                    ,p_attribute1       => l_project_in_rec.pm_project_reference
                    ,p_attribute2       => ''
                    ,p_attribute3       => ''
                    ,p_attribute4       => ''
                    ,p_attribute5       => '');
                */

                -- Added below code which throws correct error message
                pa_utils.add_message
                 (
                   p_app_short_name   => 'PA'
                  ,p_msg_name         => 'PA_SU_INVALID_DATES'
                 );

                -- 5182972 end
             END IF;

     RAISE  FND_API.G_EXC_ERROR;
     END IF;
/*
       IF l_project_in_rec.actual_start_date IS NULL OR
          l_project_in_rec.actual_start_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_actual_start_date := NULL;
       ELSE
          l_actual_start_date := l_project_in_rec.actual_start_date;
       END IF;

       IF l_project_in_rec.actual_finish_date IS NULL OR
          l_project_in_rec.actual_finish_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_actual_finish_date := NULL;
       ELSE
          l_actual_finish_date := l_project_in_rec.actual_finish_date;
       END IF;
*/

       l_actual_start_date := null;
       l_actual_finish_date := null;
--Task progress changes. These dates will be passed from task progress

       IF l_project_in_rec.early_start_date IS NULL OR
          l_project_in_rec.early_start_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_early_start_date := NULL;
       ELSE
          l_early_start_date := l_project_in_rec.early_start_date;
       END IF;


       IF l_project_in_rec.early_start_date IS NULL OR
          l_project_in_rec.early_start_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_early_start_date := NULL;
       ELSE
          l_early_start_date := l_project_in_rec.early_start_date;
       END IF;


       IF l_project_in_rec.early_finish_date IS NULL OR
          l_project_in_rec.early_finish_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_early_finish_date := NULL;
       ELSIF l_early_start_date IS NOT NULL THEN
                   --Added the following error message to check whether the finish date is earlier than the start date.Bug#5185673
                   IF  l_project_in_rec.early_finish_date < l_early_start_date THEN

                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                                 pa_utils.add_message
                                 (
                                   p_app_short_name   => 'PA'
                                  ,p_msg_name         => 'PA_SU_INVALID_DATES'
                                 );

                        END IF;

                        RAISE  FND_API.G_EXC_ERROR;
                   END IF;
                   l_early_finish_date := l_project_in_rec.early_finish_date;

       ELSE        --End of Logic added to check whether the finish date is earlier than the start date.Bug#5185673
          l_early_finish_date := l_project_in_rec.early_finish_date;
       END IF;


       IF l_project_in_rec.late_start_date IS NULL OR
          l_project_in_rec.late_start_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_late_start_date := NULL;
       ELSE
          l_late_start_date := l_project_in_rec.late_start_date;
       END IF;

       IF l_project_in_rec.late_finish_date IS NULL OR
          l_project_in_rec.late_finish_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_late_finish_date := NULL;
       ELSIF l_late_start_date IS NOT NULL THEN
                   --Added the following error message to check whether the finish date is earlier than the start date.Bug#5185673
                   IF  l_project_in_rec.late_finish_date < l_late_start_date THEN

                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                                 pa_utils.add_message
                                 (
                                   p_app_short_name   => 'PA'
                                  ,p_msg_name         => 'PA_SU_INVALID_DATES'
                                 );

                        END IF;

                        RAISE  FND_API.G_EXC_ERROR;
                   END IF;
                   l_late_finish_date := l_project_in_rec.late_finish_date;
       ELSE        --End of Logic added to check whether the finish date is earlier than the start date.Bug#5185673
          l_late_finish_date := l_project_in_rec.late_finish_date;
       END IF;

       IF l_project_in_rec.scheduled_start_date IS NULL OR
          l_project_in_rec.scheduled_start_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_scheduled_start_date := NULL;
       ELSE
          l_scheduled_start_date := l_project_in_rec.scheduled_start_date;
       END IF;

       IF l_project_in_rec.scheduled_finish_date IS NULL OR
          l_project_in_rec.scheduled_finish_date =
            PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
          l_scheduled_finish_date := NULL;
       ELSE
          l_scheduled_finish_date := l_project_in_rec.scheduled_finish_date;
       END IF;

--  Call the client extension to override the default values for
--  project start/completion dates

       PA_Client_Extn_PM.customize_dates (
       p_pm_project_reference       => l_project_in_rec.pm_project_reference,
       p_pm_product_code            => p_pm_product_code,
       p_in_start_date              => l_project_in_rec.start_date,
       p_in_completion_date         => l_project_in_rec.completion_date,
       p_actual_start_date          => l_actual_start_date,
       p_actual_finish_date         => l_actual_finish_date,
       p_early_start_date           => l_early_start_date,
       p_early_finish_date          => l_early_finish_date,
       p_late_start_date            => l_late_start_date,
       p_late_finish_date           => l_late_finish_date,
       p_scheduled_start_date       => l_scheduled_start_date,
       p_scheduled_finish_date      => l_scheduled_finish_date,
       p_out_start_date             => l_out_start_date,
       p_out_completion_date        => l_out_completion_date,
       p_error_code        => l_error_code,
       p_error_message        => l_error_message );

      IF l_error_code <> 0 THEN
   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_ERROR_IN_CLIENT_EXTN'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
         END IF;
         RAISE  FND_API.G_EXC_ERROR;
      END IF;


    -- Check to ensure that the dates returned by the API are valid
    -- the out completion date cannot be less than out start date
     IF    l_out_start_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
       AND l_out_start_date IS NOT NULL
       AND l_out_completion_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
       AND l_out_completion_date IS NOT NULL
       AND l_out_completion_date < l_out_start_date
       THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN

                -- 5182972 Commented below code , which was throwing wrong error message
                /*
                 pa_interface_utils_pub.map_new_amg_msg
                   ( p_old_message_code => 'PA_PR_INVALID_START_DATE'
                    ,p_msg_attribute    => 'CHANGE'
                    ,p_resize_flag      => 'N'
                    ,p_msg_context      => 'PROJ'
                    ,p_attribute1       => l_project_in_rec.pm_project_reference
                    ,p_attribute2       => ''
                    ,p_attribute3       => ''
                    ,p_attribute4       => ''
                    ,p_attribute5       => '');
                */

                -- Added below code which throws correct error message
                pa_utils.add_message
                 (
                   p_app_short_name   => 'PA'
                  ,p_msg_name         => 'PA_SU_INVALID_DATES'
                 );

                -- 5182972 end
            END IF;

    RAISE  FND_API.G_EXC_ERROR;
    END IF;

    --Since this is an insert API (and not an update API),
    --all missing incoming parameters will be defaulted to NULL

    IF l_project_in_rec.description = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN l_project_in_rec.description := NULL;
    END IF;

    IF l_project_in_rec.project_status_code =
       PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       OR l_project_in_rec.project_status_code IS NULL THEN
        l_project_in_rec.project_status_code :=
          pa_project_stus_utils.Get_Default_Starting_Status
          (x_project_type => l_source_project_type);
    ELSE
      IF pa_project_pvt.check_valid_project_status
      ( p_project_status => l_project_in_rec.project_status_code ) = 'N'
  THEN
    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PROJECT_STATUS_INVALID'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
                END IF;
                RAISE  FND_API.G_EXC_ERROR;
  END IF;
        IF pa_project_stus_utils.Is_Starting_Status
           (l_project_in_rec.project_status_code) = 'N' THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_NOT_STARTING_STATUS'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'N'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
            RAISE  FND_API.G_EXC_ERROR;
        END IF;

    END IF;


    IF l_project_in_rec.distribution_rule = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN l_project_in_rec.distribution_rule := NULL;
    END IF;


    IF l_project_in_rec.public_sector_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    OR l_project_in_rec.public_sector_flag IS NULL
    THEN l_project_in_rec.public_sector_flag := NULL;
    ELSE
      IF l_project_in_rec.public_sector_flag NOT IN ('Y','N')
      THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PUBLIC_SECTOR_INVALID'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_in_rec.pm_project_reference
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
                END IF;
                RAISE  FND_API.G_EXC_ERROR;
        END IF;
    END IF;

     --When descriptive flex fields are not passed set them to NULL

     IF l_project_in_rec.attribute_category = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute_category := NULL;
     ELSE
  l_attribute_category := l_project_in_rec.attribute_category;
     END IF;
     IF l_project_in_rec.attribute1 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute1 := NULL;
     ELSE
  l_attribute1 := l_project_in_rec.attribute1;
     END IF;
     IF l_project_in_rec.attribute2 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute2 := NULL;
     ELSE
  l_attribute2 := l_project_in_rec.attribute2;
     END IF;
     IF l_project_in_rec.attribute3 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute3 := NULL;
     ELSE
  l_attribute3 := l_project_in_rec.attribute3;
     END IF;
     IF l_project_in_rec.attribute4 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute4 := NULL;
     ELSE
  l_attribute4 := l_project_in_rec.attribute4;
     END IF;

     IF l_project_in_rec.attribute5 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute5 := NULL;
     ELSE
  l_attribute5 := l_project_in_rec.attribute5;

     END IF;

     IF l_project_in_rec.attribute6 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute6 := NULL;
     ELSE
  l_attribute6 := l_project_in_rec.attribute6;
     END IF;

     IF l_project_in_rec.attribute7 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute7 := NULL;
     ELSE
  l_attribute7 := l_project_in_rec.attribute7;
     END IF;

     IF l_project_in_rec.attribute8 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute8 := NULL;
     ELSE
  l_attribute8 := l_project_in_rec.attribute8;
     END IF;
     IF l_project_in_rec.attribute9 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute9 := NULL;
     ELSE
  l_attribute9 := l_project_in_rec.attribute9;
     END IF;
     IF l_project_in_rec.attribute10 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_attribute10 := NULL;
     ELSE
  l_attribute10 := l_project_in_rec.attribute10;
     END IF;

-- Team template parameters
     IF l_project_in_rec.team_template_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
       l_team_template_id := NULL;
     ELSE
  l_team_template_id := l_project_in_rec.team_template_id;
     END IF;
     IF l_project_in_rec.country_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_country_code := NULL;
     ELSE
  l_country_code := l_project_in_rec.country_code;
     END IF;
     IF l_project_in_rec.region = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_region := NULL;
     ELSE
  l_region := l_project_in_rec.region;
     END IF;
     IF l_project_in_rec.city = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_city := NULL;
     ELSE
  l_city := l_project_in_rec.city;
     END IF;

-- Tax Code changes starts ...

     IF l_project_in_rec.output_tax_code =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
      l_output_tax_code := NULL;
     ELSE
   l_output_tax_code := l_project_in_rec.output_tax_code;
     END IF;

     IF l_project_in_rec.retention_tax_code =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
      l_retention_tax_code := NULL;
     ELSE
   l_retention_tax_code := l_project_in_rec.retention_tax_code;
     END IF;

-- Tax Code changes Ends ...

-- IC AND Multi National Currency Changes starts here ...

     IF l_project_in_rec.project_currency_code =
        PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--Bugfix 2293158 issue 2 --Start
 /*  Changing AND to OR and IS NOT NULL condition to IS NULL as The if condition has to be true
   when l_project_in_rec.project_currency_code is NULL or the default G_PA_MISS_ CHAR */
    /* AND */
   OR  l_project_in_rec.project_currency_code IS NULL  /* NOT NULL */
--Bugfix 2293158 issue 2 --end.
     THEN
--Bugfix 2293158 issue 1 --Start
--      l_project_currency_code := 'USD';
        l_project_currency_code := pa_multi_currency.get_acct_currency_code;
--Bugfix 2293158 issue 1 --End
     ELSE
      l_project_currency_code := l_project_in_rec.project_currency_code;
     END IF;

     IF l_project_in_rec.allow_cross_charge_flag =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
      l_allow_cross_charge_flag := 'N';
     ELSE
   l_allow_cross_charge_flag := l_project_in_rec.allow_cross_charge_flag;
     END IF;

     IF l_project_in_rec.project_rate_date =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
     THEN
      l_project_rate_date := NULL;
     ELSE
   l_project_rate_date := l_project_in_rec.project_rate_date;
     END IF;

     IF l_project_in_rec.project_rate_type =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
      l_project_rate_type := NULL;
     ELSE
   l_project_rate_type := l_project_in_rec.project_rate_type;
     END IF;

     IF l_project_in_rec.cc_process_labor_flag =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
      l_cc_process_labor_flag := 'N';
     ELSE
   l_cc_process_labor_flag := l_project_in_rec.cc_process_labor_flag;
     END IF;

     IF l_project_in_rec.labor_tp_schedule_id =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_labor_tp_schedule_id := NULL;
     ELSE
   l_labor_tp_schedule_id := l_project_in_rec.labor_tp_schedule_id;
     END IF;

     IF l_project_in_rec.labor_tp_fixed_date =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
     THEN
      l_labor_tp_fixed_date := NULL;
     ELSE
   l_labor_tp_fixed_date := l_project_in_rec.labor_tp_fixed_date;
     END IF;

     IF l_project_in_rec.cc_process_nl_flag =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
      l_cc_process_nl_flag := 'N';
     ELSE
   l_cc_process_nl_flag := l_project_in_rec.cc_process_nl_flag;
     END IF;

     IF l_project_in_rec.nl_tp_schedule_id =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_nl_tp_schedule_id := NULL;
     ELSE
   l_nl_tp_schedule_id := l_project_in_rec.nl_tp_schedule_id;
     END IF;

     IF l_project_in_rec.nl_tp_fixed_date =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
     THEN
      l_nl_tp_fixed_date := NULL;
     ELSE
   l_nl_tp_fixed_date := l_project_in_rec.nl_tp_fixed_date;
     END IF;

     IF l_project_in_rec.cc_tax_task_id =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_cc_tax_task_id := NULL;
     ELSE
   l_cc_tax_task_id := l_project_in_rec.cc_tax_task_id;
     END IF;

-- IC and Multi National Currency Changes Ends here ...

-- ORM Code change starts here ...

     IF l_project_in_rec.role_list_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_role_list_id := NULL;
     ELSE
      l_role_list_id := l_project_in_rec.role_list_id;
     END IF;

     IF l_project_in_rec.work_type_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
-- If work type attribute change to NOT Null, we need to call default API here.
      l_work_type_id := NULL;
     ELSE
      l_work_type_id := l_project_in_rec.work_type_id;
     END IF;

     IF l_project_in_rec.calendar_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_calendar_id := NULL;
     ELSE
      l_calendar_id := l_project_in_rec.calendar_id;
     END IF;

    IF l_project_in_rec.location_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_location_id := NULL;
     ELSE
      l_location_id := l_project_in_rec.location_id;
     END IF;

     IF ( nvl(l_project_in_rec.probability_member_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
     THEN
                l_probability_member_id := NULL;
     ELSE
                --Bug#5191521 included validation for probability_member_id

                OPEN  cur_validate_prob_member( l_project_in_rec.created_from_project_id,l_project_in_rec.probability_member_id);
                FETCH cur_validate_prob_member INTO l_check_prob_id;
                CLOSE cur_validate_prob_member;

                IF l_check_prob_id ='Y' THEN

                        l_probability_member_id := l_project_in_rec.probability_member_id;
                ELSE
                        l_probability_member_id := NULL;
                END IF;
                -- ENd of changes for Bug#5191521.

     END IF;

     IF l_project_in_rec.project_value = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_project_value := NULL;

     ELSE
--Added for bug 5214431
             IF l_project_in_rec.project_value IS NOT NULL AND l_project_in_rec.project_value   < 0 THEN
                        PA_UTILS.ADD_MESSAGE
                         ( p_app_short_name   => 'PA'
                          ,p_msg_name         => 'PA_INVLD_OPPORTUNITY_VALUE');
                           RAISE FND_API.G_EXC_ERROR;
            ELSE
             l_project_value := l_project_in_rec.project_value;
           END IF;
     END IF;


     IF l_project_in_rec.expected_approval_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
     THEN
        l_expected_approval_date := NULL;
     ELSE
        l_expected_approval_date := l_project_in_rec.expected_approval_date;
     END IF;

     IF l_project_in_rec.cost_job_group_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_cost_job_group_id := NULL;
     ELSE
      l_cost_job_group_id := l_project_in_rec.cost_job_group_id;
     END IF;

     IF l_project_in_rec.bill_job_group_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_bill_job_group_id := NULL;
     ELSE
      l_bill_job_group_id := l_project_in_rec.bill_job_group_id;
     END IF;

-- ORM Code change ends here ...

     -- Bug 6144566: Changes start
     -- Bug 6144566: Introduced MCB related validations

     IF l_project_in_rec.multi_currency_billing_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
        OR l_project_in_rec.multi_currency_billing_flag IS NULL  THEN
        l_project_in_rec.multi_currency_billing_flag :=null;
     ELSE
        IF l_project_in_rec.multi_currency_billing_flag = 'Y' THEN
           -- do MCB related validations

           -- Project Currency related attributes
           IF l_project_in_rec.PROJECT_BIL_RATE_TYPE is NULL
              OR l_project_in_rec.PROJECT_BIL_RATE_TYPE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN -- PA_PROJ_RATE_TYPE_INV_AMG:The project exchage rate type is invalid
              IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
     	    FND_MESSAGE.SET_NAME('PA','PA_PROJ_RATE_TYPE_INV_AMG');
     	    FND_MESSAGE.SET_TOKEN('PROJECT', l_project_rec.segment1);
     	    FND_MSG_PUB.ADD;
     	    RAISE  FND_API.G_EXC_ERROR;
              END IF;
           ELSE
              IF l_project_in_rec.PROJECT_BIL_RATE_TYPE = 'User' THEN
                 IF l_project_in_rec.PROJECT_BIL_EXCHANGE_RATE is NULL
                    OR l_project_in_rec.PROJECT_BIL_EXCHANGE_RATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN -- PA_EXCH_RATE_NULL_PC_AMG:Project Exchange Rate cannot be null when project rate type is User.
     	          FND_MESSAGE.SET_NAME('PA','PA_EXCH_RATE_NULL_PC_AMG');
     	          FND_MSG_PUB.ADD;
     	          RAISE  FND_API.G_EXC_ERROR;
                    END IF;
                 END IF;
              ELSE  -- non-User type
                 IF l_project_in_rec.PROJECT_BIL_RATE_DATE_CODE is NULL
                    OR l_project_in_rec.PROJECT_BIL_RATE_DATE_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN

                    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                       FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_TYPE_INVALID_AMG');
                       FND_MESSAGE.SET_TOKEN('CURR_TYPE','Project Currency');
                       FND_MSG_PUB.ADD;
                       RAISE  FND_API.G_EXC_ERROR;
                    END IF;
                 ELSE
                    IF l_project_in_rec.PROJECT_BIL_RATE_DATE_CODE = 'FIXED_DATE' THEN  --Modified for bug 6332591
                       IF l_project_in_rec.PROJECT_BIL_RATE_DATE is NULL
                          OR l_project_in_rec.PROJECT_BIL_RATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
     	        	FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_INVALID_AMG');
                             FND_MESSAGE.SET_TOKEN('CURR_TYPE','Project Currency');
     	        	FND_MSG_PUB.ADD;
     	        	RAISE  FND_API.G_EXC_ERROR;
                          END IF;
                       END IF;
                    END IF;
                 END IF;
              END IF;
           END IF;

           -- Project Functional Currency related attributes
           IF l_project_in_rec.PROJFUNC_BIL_RATE_TYPE is NULL
              OR l_project_in_rec.PROJFUNC_BIL_RATE_TYPE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN -- PA_PFC_RATE_TYPE_INV_AMG:The project functional exchage rate type is invalid
              IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                 FND_MESSAGE.SET_NAME('PA','PA_PFC_RATE_TYPE_INV_AMG');
                 FND_MSG_PUB.ADD;
                 RAISE  FND_API.G_EXC_ERROR;
              END IF;
           ELSE
              IF l_project_in_rec.PROJFUNC_BIL_RATE_TYPE = 'User' THEN
                 IF l_project_in_rec.PROJFUNC_BIL_EXCHANGE_RATE is NULL
                    OR l_project_in_rec.PROJFUNC_BIL_EXCHANGE_RATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN  -- PA_EXCH_RATE_NULL_PF_AMG:Project Functional Exchange Rate cannot be null when  project functional rate type is User.
             	  FND_MESSAGE.SET_NAME('PA','PA_EXCH_RATE_NULL_PF_AMG');
             	  FND_MSG_PUB.ADD;
             	  RAISE  FND_API.G_EXC_ERROR;
                    END IF;
                 END IF;

              ELSE  -- non-User type
                 IF l_project_in_rec.PROJFUNC_BIL_RATE_DATE_CODE is NULL
                    OR l_project_in_rec.PROJFUNC_BIL_RATE_DATE_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                       FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_TYPE_INVALID_AMG');
                       FND_MESSAGE.SET_TOKEN('CURR_TYPE','Project Functional Currency');
                       FND_MSG_PUB.ADD;
                       RAISE  FND_API.G_EXC_ERROR;
                    END IF;
                 ELSE
                    IF l_project_in_rec.PROJFUNC_BIL_RATE_DATE_CODE = 'FIXED_DATE' THEN  --Modified for bug 6332591
                       IF l_project_in_rec.PROJFUNC_BIL_RATE_DATE is NULL
                          OR l_project_in_rec.PROJFUNC_BIL_RATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
     	        	FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_INVALID_AMG');
                             FND_MESSAGE.SET_TOKEN('CURR_TYPE','Project Functional Currency');
             		FND_MSG_PUB.ADD;
             		RAISE  FND_API.G_EXC_ERROR;
                          END IF;
                       END IF;
                    END IF;
                 END IF;
              END IF;
           END IF;


           -- Funding Currency related attributes
           IF l_project_in_rec.FUNDING_RATE_TYPE is NULL
              OR l_project_in_rec.FUNDING_RATE_TYPE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN -- PA_FUND_RATE_TYPE_INV_AMG:The funding exchage rate type is invalid
              IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                 FND_MESSAGE.SET_NAME('PA','PA_FUND_RATE_TYPE_INV_AMG');
                 FND_MSG_PUB.ADD;
                 RAISE  FND_API.G_EXC_ERROR;
              END IF;
           ELSE
              IF l_project_in_rec.FUNDING_RATE_TYPE = 'User' THEN
                 IF l_project_in_rec.FUNDING_EXCHANGE_RATE is NULL
                    OR l_project_in_rec.FUNDING_EXCHANGE_RATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN  -- PA_EXCHANGE_RATE_NULL:Exchange rate cannot be null when rate type is User.
             	  FND_MESSAGE.SET_NAME('PA','PA_EXCHANGE_RATE_NULL');
             	  FND_MSG_PUB.ADD;
             	  RAISE  FND_API.G_EXC_ERROR;
                    END IF;
                 END IF;

              ELSE  -- non-User type
                 IF l_project_in_rec.FUNDING_RATE_DATE_CODE is NULL
                    OR l_project_in_rec.FUNDING_RATE_DATE_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                       FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_TYPE_INVALID_AMG');
                       FND_MESSAGE.SET_TOKEN('CURR_TYPE','Funding Currency');
                       FND_MSG_PUB.ADD;
                       RAISE  FND_API.G_EXC_ERROR;
                    END IF;
                 ELSE
                    IF l_project_in_rec.FUNDING_RATE_DATE_CODE = 'FIXED_DATE' THEN  --Modified for bug 6332591
                       IF l_project_in_rec.FUNDING_RATE_DATE is NULL
                          OR l_project_in_rec.FUNDING_RATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
     	        	FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_INVALID_AMG');
                             FND_MESSAGE.SET_TOKEN('CURR_TYPE','Funding Currency');
             		FND_MSG_PUB.ADD;
             		RAISE  FND_API.G_EXC_ERROR;
                          END IF;
                       END IF;
                    END IF;
                 END IF;
              END IF;
           END IF;

        ELSE -- MCB flag is not 'Y'
           -- set all currency conversion attributes to NULL

           l_project_in_rec.PROJECT_BIL_RATE_TYPE := NULL;
           l_project_in_rec.PROJECT_BIL_EXCHANGE_RATE := NULL;
           l_project_in_rec.PROJECT_BIL_RATE_DATE_CODE := NULL;
           l_project_in_rec.PROJECT_BIL_RATE_DATE := NULL;

           l_project_in_rec.PROJFUNC_BIL_RATE_TYPE := NULL;
           l_project_in_rec.PROJFUNC_BIL_EXCHANGE_RATE := NULL;
           l_project_in_rec.PROJFUNC_BIL_RATE_DATE_CODE := NULL;
           l_project_in_rec.PROJFUNC_BIL_RATE_DATE := NULL;

           l_project_in_rec.FUNDING_RATE_TYPE := NULL;
           l_project_in_rec.FUNDING_EXCHANGE_RATE := NULL;
           l_project_in_rec.FUNDING_RATE_DATE_CODE := NULL;
           l_project_in_rec.FUNDING_RATE_DATE := NULL;

        END IF;
     END IF;

-- Bug 6144566: Changes end

     IF l_project_in_rec.emp_bill_rate_schedule_id =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_emp_bill_rate_schedule_id := NULL;
     ELSE
   l_emp_bill_rate_schedule_id := l_project_in_rec.emp_bill_rate_schedule_id;
     END IF;

     IF l_project_in_rec.job_bill_rate_schedule_id =
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
      l_job_bill_rate_schedule_id := NULL;
     ELSE
   l_job_bill_rate_schedule_id := l_project_in_rec.job_bill_rate_schedule_id;
     END IF;

    IF l_project_in_rec.carrying_out_organization_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN l_project_in_rec.carrying_out_organization_id := NULL;
    END IF;


    IF l_project_in_rec.start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
    THEN l_project_in_rec.start_date := NULL;
    END IF;


    IF l_project_in_rec.completion_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
    THEN l_project_in_rec.completion_date := NULL;
    END IF;


--added to remove bug# 604762 : Ashia Bagai - 9-jan-98
    IF l_out_start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE Then
       l_out_start_date := NULL ;
    END IF ;

    IF l_out_completion_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE Then
       l_out_completion_date := NULL ;
    END IF ;

--end of addition to remove bug# 604762

-- opportunity value changes
-- anlee
   IF l_project_in_rec.opp_value_currency_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_opp_value_currency_code := NULL;
     ELSE
       l_opp_value_currency_code := l_project_in_rec.opp_value_currency_code;
   END IF;

--Priority code

   IF l_project_in_rec.priority_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
       l_priority_code := NULL;
     ELSE
       l_priority_code := l_project_in_rec.priority_code;
   END IF;

   -- 5191417 validate l_priority_code for valid value

   IF l_priority_code IS NOT NULL THEN

        OPEN priority_code_csr(l_priority_code);
        FETCH priority_code_csr into l_valid_prio_code;
        CLOSE priority_code_csr;

        -- if not valid throw , error message

        IF l_valid_prio_code = 'N' THEN

          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

            PA_UTILS.ADD_MESSAGE(p_app_short_name  => 'PA'
                                ,p_msg_name         => 'PA_INVALID_PRIORITY_CODE');

            l_return_status := FND_API.G_RET_STS_ERROR;

            RAISE  FND_API.G_EXC_ERROR;

          END IF;

        END IF;

   END IF;

   -- 5191417 end

IF l_project_in_rec.security_level = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN

       l_security_level := NULL;
ELSE
        --Modified this else part for security level validations.Bug#5191699.
        --If the user passes an invalid value or if the user passes explicitly as null,
        --we need to handle that as,
        --security level is mandatory parameter and cant be null and it can take values only
        --from the lookup.Hence we update with default value 'Enterprise'.

        OPEN  cur_check_sec_level(l_project_in_rec.security_level);
        FETCH cur_check_sec_level INTO l_check_sec_level;
        CLOSE cur_check_sec_level;

        IF l_check_sec_level = 'Y' THEN
                -- Not null and a Valid value has been passed
                l_security_level := l_project_in_rec.security_level;
        ELSE
                -- Either null has been explicitly passed or invalid value
                -- is passed. Then update it with default value of 'Enterprise'
                -- as this will be always present and cant be deleted or end dated.

                l_security_level := 1; --1 lookup_code corresponds to 'Enterprise'.
        END IF;
        --End if code changes for Bug#5191699.
END IF;
/*Addtion started for bug 3825528*/
    /* Code added for tracking bug by aditi */
--    --dbms_output.put_line('value of p_customers_in(1).customer_id'||p_customers_in(1).customer_id);
     IF l_in_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  /* End of Code changes */
   -- IF l_project_in_rec.customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM Commented for tracking bug
    THEN
       l_in_customer_id := NULL;
--    ELSE
  --     l_in_customer_id := l_project_in_rec.customer_id;
    END IF;
----dbms_output.put_line('value of l_in_customer_id at the end '||l_in_customer_id);
/*Addtion ends for bug 3825528*/



--sunkalya:federal changes bug#5511353

OPEN  get_date_eff_funds_flag(l_project_in_rec.created_from_project_id);
FETCH get_date_eff_funds_flag INTO l_orig_date_eff_funds_flag;
CLOSE get_date_eff_funds_flag;

OPEN  get_ar_rec_notify_flag(l_project_in_rec.created_from_project_id);   -- 7508661 : EnC : Added
FETCH get_ar_rec_notify_flag INTO l_orig_ar_rec_notify_flag;
CLOSE get_ar_rec_notify_flag;

OPEN  get_auto_release_pwp_inv(l_project_in_rec.created_from_project_id);   -- 7508661 : EnC : Added
FETCH get_auto_release_pwp_inv INTO l_orig_auto_release_pwp_inv;
CLOSE get_auto_release_pwp_inv;

OPEN  cur_get_orig_tt_cust_flag(l_project_in_rec.created_from_project_id);
FETCH cur_get_orig_tt_cust_flag INTO l_orig_def_tt_flag;
CLOSE cur_get_orig_tt_cust_flag;


IF (l_project_in_rec.date_eff_funds_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) OR
   (l_project_in_rec.date_eff_funds_flag IS NULL)
THEN

	l_date_eff_funds_flag := NULL;

ELSE

	OPEN  cur_enable_funds_flag(l_project_in_rec.created_from_project_id);
	FETCH cur_enable_funds_flag INTO l_enable_funds_flag;
	CLOSE cur_enable_funds_flag;

/*
	OPEN  cur_rev_inv(l_project_in_rec.created_from_project_id);
	FETCH cur_rev_inv INTO l_chk_rev_inv_flag;
	CLOSE cur_rev_inv;
*/
	IF nvl(l_enable_funds_flag,'N')='N'  AND l_project_in_rec.date_eff_funds_flag ='Y' THEN

		PA_UTILS.ADD_MESSAGE(	 p_app_short_name  =>  'PA'
					,p_msg_name         => 'PA_FUNDS_FLAG_CANT_ENABLED'
				    );

		l_return_status := FND_API.G_RET_STS_ERROR;

		RAISE  FND_API.G_EXC_ERROR;
	END IF;
/*
	IF nvl(l_chk_rev_inv_flag,'N') ='Y' AND l_project_in_rec.date_eff_funds_flag <> l_orig_date_eff_funds_flag THEN

		PA_UTILS.ADD_MESSAGE(	 p_app_short_name  =>  'PA'
					,p_msg_name         => 'PA_FUNDS_FLAG_NOT_UPDATBL'
				    );

		l_return_status := FND_API.G_RET_STS_ERROR;

		RAISE  FND_API.G_EXC_ERROR;
	END IF;
*/
		l_date_eff_funds_flag := l_project_in_rec.date_eff_funds_flag;
END IF;
--sunkalya:federal changes bug#5511353


/* 7508661 : EnC : Start */

IF (l_project_in_rec.ar_rec_notify_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) OR
   (l_project_in_rec.ar_rec_notify_flag IS NULL)
THEN
    l_ar_rec_notify_flag := 'N';
ELSE
    l_ar_rec_notify_flag := l_orig_ar_rec_notify_flag;
END IF;

IF (l_project_in_rec.auto_release_pwp_inv = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) OR
   (l_project_in_rec.auto_release_pwp_inv IS NULL)
THEN
    l_auto_release_pwp_inv := 'Y';
ELSE
    l_auto_release_pwp_inv := l_orig_auto_release_pwp_inv;
END IF;

/* 7508661 : EnC : End */


--Bug 3279981 Review
   IF (l_project_in_rec.enable_top_task_customer_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) OR
     (p_project_in.enable_top_task_customer_flag IS NULL) --Added or condition for bug 4762153
   THEN
       l_en_top_task_customer_flag := NULL;
   ELSE
       IF l_project_in_rec.enable_top_task_customer_flag IN ('Y','N') THEN
          -- Function Security Check
          PA_PM_FUNCTION_SECURITY_PUB.check_function_security
          ( p_api_version_number => p_api_version_number,
            p_responsibility_id  => l_resp_id,
            p_function_name      => 'PA_PAXPREPR_CUST_TOP_TASK',
            p_msg_count          => l_msg_count,
            p_msg_data           => l_msg_data,
            p_return_status      => l_return_status,
            p_function_allowed   => l_function_allowed);
          IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
               RAISE FND_API.G_EXC_ERROR;
          END IF;

          IF l_function_allowed = 'N' THEN
               pa_interface_utils_pub.map_new_amg_msg
                ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
                 ,p_msg_attribute    => 'CHANGE'
                 ,p_resize_flag      => 'Y'
                 ,p_msg_context      => 'GENERAL'
                 ,p_attribute1       => ''
                 ,p_attribute2       => ''
                 ,p_attribute3       => ''
                 ,p_attribute4       => ''
                 ,p_attribute5       => '');
               p_project_out.return_status := FND_API.G_RET_STS_ERROR;
               RAISE FND_API.G_EXC_ERROR;
          END IF;
       ELSE
          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
               pa_interface_utils_pub.map_new_amg_msg
               ( p_old_message_code => 'PA_TOP_TASK_CUST_FLAG_INVALID'
                ,p_msg_attribute    => 'NOCHANGE' -- Changed to NOCHANGE for Bug  4762153
                ,p_resize_flag      => 'N'
                ,p_msg_context      => 'PROJ'
                ,p_attribute1       => l_project_in_rec.pm_project_reference
                ,p_attribute2       => ''
                ,p_attribute3       => ''
                ,p_attribute4       => ''
                ,p_attribute5       => '');
          END IF;
          RAISE  FND_API.G_EXC_ERROR;
       END IF;
       l_en_top_task_customer_flag := l_project_in_rec.enable_top_task_customer_flag;
   END IF;

   IF l_project_in_rec.enable_top_task_inv_mth_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_en_top_task_inv_mth_flag := NULL;
   ELSE
       IF l_project_in_rec.enable_top_task_inv_mth_flag IN ('Y','N') THEN
          -- Function Security Check
          PA_PM_FUNCTION_SECURITY_PUB.check_function_security
          ( p_api_version_number => p_api_version_number,
            p_responsibility_id  => l_resp_id,
            p_function_name      => 'PA_PAXPREPR_INV_MTH_TOP_TASK',
            p_msg_count          => l_msg_count,
            p_msg_data           => l_msg_data,
            p_return_status      => l_return_status,
            p_function_allowed   => l_function_allowed);
          IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
               RAISE FND_API.G_EXC_ERROR;
          END IF;

          IF l_function_allowed = 'N' THEN
               pa_interface_utils_pub.map_new_amg_msg
                ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
                 ,p_msg_attribute    => 'CHANGE'
                 ,p_resize_flag      => 'Y'
                 ,p_msg_context      => 'GENERAL'
                 ,p_attribute1       => ''
                 ,p_attribute2       => ''
                 ,p_attribute3       => ''
                 ,p_attribute4       => ''
                 ,p_attribute5       => '');
               p_project_out.return_status := FND_API.G_RET_STS_ERROR;
               RAISE FND_API.G_EXC_ERROR;
          END IF;
       ELSE
          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
               pa_interface_utils_pub.map_new_amg_msg
               ( p_old_message_code => 'PA_TT_INV_MTH_FLAG_INVALID'
                ,p_msg_attribute    => 'CHANGE'
                ,p_resize_flag      => 'N'
                ,p_msg_context      => 'PROJ'
                ,p_attribute1       => l_project_in_rec.pm_project_reference
                ,p_attribute2       => ''
                ,p_attribute3       => ''
                ,p_attribute4       => ''
                ,p_attribute5       => '');
          END IF;
          RAISE  FND_API.G_EXC_ERROR;
       END IF;
       l_en_top_task_inv_mth_flag := l_project_in_rec.enable_top_task_inv_mth_flag;
   END IF;
--Bug 3279981 Review

    --PROJECT
    --create a new project using a template or other project as basis
----dbms_output.put_line('before calling Copy_Project');
    pa_project_core1.copy_project  (
     x_orig_project_id => l_project_in_rec.created_from_project_id
    ,x_project_name    => RTRIM(l_project_in_rec.project_name)
    ,x_long_name       => RTRIM(l_project_in_rec.long_name)
    ,x_project_number  => RTRIM(l_create_project_number)
    ,x_description     => RTRIM(l_project_in_rec.description)
    ,x_project_type    => NULL --project_type is always defaulted from template
    ,x_project_status_code => l_project_in_rec.project_status_code
    ,x_distribution_rule   => l_project_in_rec.distribution_rule
    ,x_public_sector_flag  => l_project_in_rec.public_sector_flag
    ,x_organization_id     => l_project_in_rec.carrying_out_organization_id
    ,x_start_date          => l_out_start_date
    ,x_completion_date     => l_out_completion_date
    ,x_probability_member_id => l_probability_member_id
    ,x_project_value         => l_project_value
    ,x_expected_approval_date => l_expected_approval_date
--Sakthi MCB
    ,x_agreement_currency     =>   l_agreement_currency
    ,x_agreement_amount       =>   l_agreement_amount
    ,x_agreement_org_id       =>   l_agreement_org_id
--Sakthi MCB
    ,x_copy_task_flag      => l_copy_task_flag
    ,x_copy_budget_flag    => l_copy_budget_flag
    ,x_use_override_flag   => l_use_override_flag
    ,x_copy_assignment_flag => l_copy_assignment_flag
    ,x_template_flag       => l_template_flag
    ,x_project_id          => l_project_id
    ,x_err_code            => l_err_code
    ,x_err_stage           => l_err_stage
    ,x_err_stack           => l_err_stack
    ,x_new_project_number  => l_project_number_out
    ,x_pm_product_code     => p_pm_product_code
    ,x_pm_project_reference => RTRIM(l_project_in_rec.pm_project_reference)
    ,x_project_currency_code => l_project_currency_code   /* 8297384 */
    ,x_attribute_category  => RTRIM(l_attribute_category)
    ,x_attribute1          => RTRIM(l_attribute1)
    ,x_attribute2          => RTRIM(l_attribute2)
    ,x_attribute3          => RTRIM(l_attribute3)
    ,x_attribute4          => RTRIM(l_attribute4)
    ,x_attribute5          => RTRIM(l_attribute5)
    ,x_attribute6          => RTRIM(l_attribute6)
    ,x_attribute7          => RTRIM(l_attribute7)
    ,x_attribute8          => RTRIM(l_attribute8)
    ,x_attribute9          => RTRIM(l_attribute9)
    ,x_attribute10         => RTRIM(l_attribute10)
    ,x_actual_start_date   => l_actual_start_date
    ,x_actual_finish_date  => l_actual_finish_date
    ,x_early_start_date    => l_early_start_date
    ,x_early_finish_date   => l_early_finish_date
    ,x_late_start_date     => l_late_start_date
    ,x_late_finish_date    => l_late_finish_date
    ,x_scheduled_start_date => l_scheduled_start_date
    ,x_scheduled_finish_date => l_scheduled_finish_date
    ,x_team_template_id    => l_team_template_id
    ,x_country_code        => l_country_code
    ,x_region              => l_region
    ,x_city                => l_city
-- anlee opportunity changes
    ,x_opp_value_currency_code => l_opp_value_currency_code
    ,x_org_project_copy_flag  => 'N'
    ,x_priority_code       => l_priority_code
    ,x_security_level       => l_security_level
    ,x_customer_id          =>  l_in_customer_id  --Modified for bug 3825528 l_project_in_rec.customer_id Bug no 3106256
    --Bug 3279981 Review FP_M development
    ,p_en_top_task_cust_flag    => l_en_top_task_customer_flag
    ,p_en_top_task_inv_mth_flag => l_en_top_task_inv_mth_flag
    ,p_date_eff_funds_flag => l_date_eff_funds_flag   --sunkalya:federal changes bug#5511353
    ,p_ar_rec_notify_flag   =>  l_ar_rec_notify_flag   -- 7508661 : EnC
    ,p_auto_release_pwp_inv =>  l_auto_release_pwp_inv -- 7508661 : EnC
    );

    IF l_err_code > 0
    then
   p_project_out.return_status := FND_API.G_RET_STS_ERROR;

   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
   THEN

      IF NOT pa_project_pvt.check_valid_message(l_err_stage)
      THEN

         pa_interface_utils_pub.map_new_amg_msg('PA_COPY_PROJECT_FAILED','CHANGE','N',
                      'PROJ',l_project_in_rec.pm_project_reference,
                      '','','','');
      ELSE


         pa_interface_utils_pub.map_new_amg_msg(l_err_stage,'CHANGE','Y',
                      'PROJ',l_project_in_rec.pm_project_reference,
                      '','','','');
      END IF;

   END IF;

   p_project_out.return_status := FND_API.G_RET_STS_ERROR;
   RAISE FND_API.G_EXC_ERROR;

    ELSIF l_err_code < 0
    then

   p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;

   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
   THEN
      pa_interface_utils_pub.map_new_amg_msg('PA_COPY_PROJECT_FAILED','CHANGE','N',
                      'PROJ',l_project_in_rec.pm_project_reference,
                      '','','','');
      /*  Added the following code for bug 3725338 */
      FND_MESSAGE.SET_NAME('PA','PA_UNEXPECTED_ERR_AMG');
      FND_MESSAGE.SET_TOKEN('ORAERR',  l_err_stage);
      FND_MSG_PUB.add;
      /* Code addition ended for bug 3725338 */
   END IF;

   p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    end IF;

/*  Not required anymore since they are passed as input to copy project
    UPDATE pa_projects
    SET pm_project_reference = l_project_in_rec.pm_project_reference
    ,   pm_product_code      = p_pm_product_code
    WHERE project_id = l_project_id;
*/

    --get the values associated to the project
    OPEN l_project_csr(l_project_id);
    FETCH l_project_csr INTO l_project_rec;
    CLOSE l_project_csr;

    -- ADD CUSTOMERS
    -- add overridable Primary Customers and their contacts

  /*  IF l_project_in_rec.customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    AND l_project_in_rec.customer_id IS NOT NULL */ --commented for tracking bug
    IF l_in_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    AND l_in_customer_id IS NOT NULL

    THEN

      l_is_overridable := FALSE;
  i := l_override_fields_tab.first;
  WHILE i IS NOT NULL LOOP


    IF l_override_fields_tab(i).pa_field_name = 'CUSTOMER_NAME'
    THEN
      l_is_overridable := TRUE;
			l_project_relationship_code := l_override_fields_tab(i).type; --introduced for Bug#5517655
                        --l_relationship_type := l_override_fields_tab(i).type; commented for Bug#5517655
      EXIT;
    END IF;
    i := l_override_fields_tab.next(i);
  END LOOP;

  IF NOT l_is_overridable
  THEN
      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_CUSTOMER_NOT_OVERRIDABLE'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
      END IF;

      p_project_out.return_status := FND_API.G_RET_STS_ERROR;
      RAISE FND_API.G_EXC_ERROR;

  END IF;

  /*Customer Account Relationship Changes*/
        IF l_bill_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    AND l_bill_to_customer_id IS NOT NULL
    THEN

        l_is_overridable := FALSE;
        i := l_override_fields_tab.first;
        WHILE i IS NOT NULL LOOP


                IF l_override_fields_tab(i).pa_field_name = 'BILL_TO_CUSTOMER'
                THEN
                        l_is_overridable := TRUE;
                        EXIT;
                END IF;
                i := l_override_fields_tab.next(i);
        END LOOP;

        IF NOT l_is_overridable
        THEN
                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_BILL_TO_NOT_OVERRIDABLE'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                        END IF;

                        p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                        RAISE FND_API.G_EXC_ERROR;

        END IF;
      END IF;

    IF l_ship_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    AND l_ship_to_customer_id IS NOT NULL
    THEN

        l_is_overridable := FALSE;
        i := l_override_fields_tab.first;
        WHILE i IS NOT NULL LOOP


                IF l_override_fields_tab(i).pa_field_name = 'SHIP_TO_CUSTOMER'
                THEN
                        l_is_overridable := TRUE;
                        EXIT;
                END IF;
                i := l_override_fields_tab.next(i);
        END LOOP;

        IF NOT l_is_overridable
        THEN
                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_SHIP_TO_NOT_OVERRIDABLE'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                        END IF;

                        p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                        RAISE FND_API.G_EXC_ERROR;

        END IF;
     END IF;
     ----dbms_output.put_line('Does the control come till here');
/*Customer account relationship changes */
/* Tracking bug ..customer code added in a loop */
i := p_customers_in.first;
----dbms_output.put_line('value of i'||i);
IF p_customers_in.exists(i) THEN
 ----dbms_output.put_line('if CUSTOMER ARE PASSED TO CREATE_PROJECT ');
  ----dbms_output.put_line('Value of p_project_in.customer_id'||p_customers_in(i).customer_id);

   /*
   These assignments have already been done
   l_bill_to_customer_id:=p_customers_in(i).bill_to_customer_id;
   l_ship_to_customer_id:=p_customers_in(i).ship_to_customer_id;
 --added for bug 3911782
   l_bill_to_address_id :=p_customers_in(i).bill_to_address_id;
   l_ship_to_address_id :=p_customers_in(i).ship_to_address_id;
   l_project_relationship_code := p_customers_in(i).PROJECT_RELATIONSHIP_CODE;
   l_cust_bill_split := p_customers_in(i).Customer_Bill_Split; */
   ----dbms_output.put_line('Value of l_bill_to_customer_id'||l_bill_to_customer_id);
   ----dbms_output.put_line('Value of l_ship_to_customer_id'||l_ship_to_customer_id);
   ----dbms_output.put_line('Value of l_bill_to_address_id'||l_bill_to_address_id);
   ----dbms_output.put_line('Value of l_ship_to_address_id'||l_ship_to_address_id);
   --changes end for Bug 3911782
   IF p_customers_in(i).customer_id IS NOT NULL AND p_customers_in(i).customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
     /* Commented the below code for Bug#5517655 */

     /*IF p_customers_in(i).project_relationship_code IS NULL OR
        p_customers_in(i).project_relationship_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
               pa_utils.add_message
                ( p_app_short_name   => 'PA'-- new message for AA TRACKING
                 ,p_msg_name    => 'PA_RELATIONSHIP_CODE_REQD'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_rec.segment1
                 ,p_token2           => 'CUSTOMER_ID'
                 ,p_value2           => p_customers_in(i).customer_id
                );
             END IF;
             RAISE FND_API.G_EXC_ERROR;
         END IF;
      */ --End of commenting for Bug#5517655

      IF p_customers_in(i).CUSTOMER_BILL_SPLIT IS NULL OR
        p_customers_in(i).CUSTOMER_BILL_SPLIT = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
        l_cust_bill_split := 100; --Default it to 100
      END If;
/* End of tracking changes */
 END IF;
   /* Code added for tracking bug */
       ----dbms_output.put_line('value of p_project_in.CONTACT_ID '||p_customers_in(i).CONTACT_ID);
   If (p_customers_in(i).CONTACT_ID IS NOT NULL) AND (p_customers_in(i).CONTACT_ID <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      then
        ----dbms_output.put_line('is this fired');

         IF (p_customers_in(i).PROJECT_CONTACT_TYPE_CODE IS NULL) OR (p_customers_in(i).PROJECT_CONTACT_TYPE_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )THEN
           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
               pa_utils.add_message
              ( p_app_short_name   => 'PA'-- new message for tracking bug
                 ,p_msg_name    => 'PA_CONTACT_TYPE_REQD'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_in_rec.pm_project_reference
                 ,p_token2           => 'CUSTOMER_ID'
                 ,p_value2           => p_customers_in(i).customer_id
                 ,p_token3           => 'CONTACT_ID'
                 ,p_value3           => p_customers_in(i).CONTACT_ID
              );
           END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
         END IF;
   end if;
        ----dbms_output.put_line('Error is hrown soon after this');
      If  p_customers_in(i).PROJECT_CONTACT_TYPE_CODE = 'BILLING' then
        l_bill_to_contact_id := p_customers_in(i).CONTACT_ID;
	l_ship_to_contact_id := NULL; -- Bug 5622539
      ElsIf p_customers_in(i).PROJECT_CONTACT_TYPE_CODE = 'SHIPPING' then
        l_ship_to_contact_id := p_customers_in(i).CONTACT_ID;
	l_bill_to_contact_id := NULL; -- Bug 5622539
      Else
        l_bill_to_contact_id := NULL;
        l_ship_to_contact_id := NULL;
      End If;
      /** end of chnages for tracking bug by aditi **/
----dbms_output.put_line('Before calling pa_customer_info.get_customer_info');
----dbms_output.put_line('Value of l_bill_to_contact_id '||l_bill_to_contact_id);
----dbms_output.put_line('Value of l_ship_to_contact_id '||l_ship_to_contact_id);

/* Code changes end for tracking bug */
If (l_bill_to_customer_id IS NOT NULL AND l_bill_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
       OR (l_ship_to_customer_id IS NOT NULL AND l_ship_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
        OR (p_customers_in(1).CONTACT_ID IS NOT NULL AND p_customers_in(1).CONTACT_ID <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)--added for tracking bug by aditi

--bug 3716805
    THEN
      If l_in_customer_id IS NULL OR l_in_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_CUSTOMER_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
        END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
    end if;

End if; --added by aditi for tracking bug -- FOR CUSTOMER ISSUE
END if; -- end here
-------------------------------------------------------------------------------------------
----dbms_output.put_line('before calling get_customer_info');
----dbms_output.put_line('If project_in_rec_type is there - then control will directl come here');


   If (l_bill_to_customer_id IS NOT NULL AND l_bill_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
       OR (l_ship_to_customer_id IS NOT NULL AND l_ship_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)

--bug 3716805
    THEN
      If l_in_customer_id IS NULL OR l_in_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_CUSTOMER_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
        END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
    end if;

End if; --added by aditi for tracking bug -- FOR CUSTOMER ISSUE


/* Bug 3077676 Begin */

 -- Not adding this error message in get_customer_info as that is called from lot of other places too
 -- and it would be a risk changing that.

   OPEN  get_cust_acc_rel_code;
   FETCH get_cust_acc_rel_code INTO l_cust_acc_rel_code;
   CLOSE get_cust_acc_rel_code;
 -- Bug 3123361. Bill to customer and ship to customer should be same as customer when passed and
   -- relations ship code is N.
   /* CODE COMMENTED FOR TRACKING BUG
   IF(NVL(l_cust_acc_rel_code,'N') ='N' and
      l_project_in_rec.customer_id IS NOT NULL AND l_project_in_rec.customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) and
    ((l_project_in_rec.bill_to_customer_id IS NOT NULL AND l_project_in_rec.bill_to_customer_id   <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      l_project_in_rec.customer_id <> l_project_in_rec.bill_to_customer_id
     ) or
     (
      l_project_in_rec.ship_to_customer_id  IS NOT NULL AND l_project_in_rec.ship_to_customer_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      l_project_in_rec.customer_id <> l_project_in_rec.ship_to_customer_id
    ))
   THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_BILL_SHIP_CUST_INV'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
           RAISE FND_API.G_EXC_ERROR;
   END IF; */
  /* Code added for tracking bug */
     IF(NVL(l_cust_acc_rel_code,'N') ='N' and
      l_in_customer_id IS NOT NULL AND l_in_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) and
    ((l_bill_to_customer_id IS NOT NULL AND l_bill_to_customer_id   <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      l_in_customer_id <> l_bill_to_customer_id
     ) or
     (
      l_ship_to_customer_id  IS NOT NULL AND l_ship_to_customer_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
     l_in_customer_id <> l_ship_to_customer_id
    ))
   THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_BILL_SHIP_CUST_INV'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
           RAISE FND_API.G_EXC_ERROR;
   END IF;

   /* End of part 1 tracking */


   /* Bug 3123361. Commenting the following validation as the complete validation of the below is done above.
   IF NVL(l_cust_acc_rel_code,'N') ='N'
           AND l_project_in_rec.customer_id IS NOT NULL AND l_project_in_rec.customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND l_project_in_rec.bill_to_customer_id IS NOT NULL AND l_project_in_rec.bill_to_customer_id   <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND l_project_in_rec.ship_to_customer_id  IS NOT NULL AND l_project_in_rec.ship_to_customer_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND l_project_in_rec.customer_id <> l_project_in_rec.bill_to_customer_id
       AND l_project_in_rec.customer_id <> l_project_in_rec.ship_to_customer_id
   THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_BILL_SHIP_CUST_INV'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
           RAISE FND_API.G_EXC_ERROR;

   END IF;
   */
/* Bug 3077676 End */

      -- 4193743 IF bill_to_cutomer_id and ship_to_customer_id are not passed set it to NULL
      -- as get_customer_info relies on NULL value not the PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
      -- Using the local variables l_ship_to_customer_id and l_bill_to_customer_id for further processing
/* The code below is being commented by aditi for tracking bug..these assignmentd have already been made
at the begiinning of the customers addition code

      IF l_project_in_rec.bill_to_customer_id IS NOT NULL AND
         l_project_in_rec.bill_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
      THEN
         l_bill_to_customer_id := NULL;
      ELSE
         -- if value is passed assign it to local variable
         l_bill_to_customer_id := l_project_in_rec.bill_to_customer_id; -- 4193743 review comment
      END IF;

      IF l_project_in_rec.ship_to_customer_id IS NOT NULL AND
         l_project_in_rec.ship_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
      THEN
         l_ship_to_customer_id := NULL;
      ELSE
         -- if value is passed assign it to local variable
         l_ship_to_customer_id := l_project_in_rec.ship_to_customer_id; --  4193743 review comment
      END IF;

     -- 4193743 end */

/* Start of changes for bug 5482997 */

      IF l_bill_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
         l_bill_to_customer_id := NULL;
      END IF;

      IF l_ship_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
         l_ship_to_customer_id := NULL;
      END IF;

/* End of changes for bug 5482997 */


----dbms_output.put_line('Before CALLING get_cstomer_info');
----dbms_output.put_line('Value of l_in_customer_id'||l_in_customer_id);
----dbms_output.put_line('Value of l_bill_to_customer_id'||l_bill_to_customer_id);
----dbms_output.put_line('Value of l_ship_to_customer_id'||l_ship_to_customer_id);
----dbms_output.put_line('Value of l_bill_to_address_id'||l_bill_to_address_id);
----dbms_output.put_line('Value of l_ship_to_address_id'||l_ship_to_address_id);
----dbms_output.put_line('Value of l_bill_to_contact_id'||l_bill_to_contact_id);
----dbms_output.put_line('Value of l_ship_to_contact_id'||l_ship_to_contact_id);
----dbms_output.put_line('Value of l_in_customer_id'||l_in_customer_id);

/* Bug 5731766 This code was moved to before get_customer_info call
       We need to bypass call get_customer_info if l_proj_type_class
       is 'contract'.*/
IF l_project_id IS NOT NULL THEN
OPEN  c_prj(l_project_id);
FETCH c_prj INTO l_proj_status, l_proj_type_class;
CLOSE c_prj;
END IF;

--if condition introduced for bug 5731766
--dbms_output.put_line('Value of l_source_project_type '||l_proj_type_class);
If nvl(l_proj_type_class,'NONE') = 'CONTRACT' then
      pa_customer_info.get_customer_info( X_project_ID          => l_project_id      --CAR changes
                                         ,X_Customer_Id         => l_in_customer_id -- l_project_in_rec.customer_id tracking
                                         ,X_Bill_To_Customer_Id => l_bill_to_customer_id -- 4193743 l_project_in_rec.bill_to_customer_id  -- car changes
                                         ,X_Ship_To_Customer_Id => l_ship_to_customer_id -- 4193743 l_project_in_rec.ship_to_customer_id  -- car changes
                                         ,X_Bill_To_Address_Id  => l_bill_to_address_id
                                         ,X_Ship_To_Address_Id  => l_ship_to_address_id
                                         ,X_Bill_To_Contact_Id  => l_bill_to_contact_id
                                         ,X_Ship_To_Contact_Id  => l_ship_to_contact_id
                                         ,X_Err_Code            => l_err_code
                                         ,X_Err_Stage           => l_err_stage
                                         ,X_Err_Stack           => l_err_stack
                                         ,p_calling_module      => 'AMG' --added for Bug#4770535
                                        );


----dbms_output.put_line('AFTER calling get_customer_info l_err_code'||l_err_code);
----dbms_output.put_line('Value of l_in_customer_id'||l_in_customer_id);
----dbms_output.put_line('Value of l_bill_to_customer_id'||l_bill_to_customer_id);
----dbms_output.put_line('Value of l_ship_to_customer_id'||l_ship_to_customer_id);
----dbms_output.put_line('Value of l_bill_to_address_id'||l_bill_to_address_id);
----dbms_output.put_line('Value of l_ship_to_address_id'||l_ship_to_address_id);
----dbms_output.put_line('Value of l_bill_to_contact_id'||l_bill_to_contact_id);
----dbms_output.put_line('Value of l_ship_to_contact_id'||l_ship_to_contact_id);
----dbms_output.put_line('Value of l_in_customer_id'||l_in_customer_id);
-- For this API,error code 10 is a warning.Anything above 10 is an error
      IF l_err_code > 10
      THEN

    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN

      IF NOT pa_project_pvt.check_valid_message(l_err_stage)
      THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_GET_CUSTOMER_INFO_FAILED'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
         ELSE
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => l_err_stage
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
      END IF;

    END IF;

    p_project_out.return_status := FND_API.G_RET_STS_ERROR;
    RAISE FND_API.G_EXC_ERROR;

      ELSIF l_err_code < 0
      THEN

    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
    THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_GET_CUSTOMER_INFO_FAILED'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
    END IF;

    p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
      END IF;
end if;  --bug 5731766
--bug 5731766
If l_bill_to_customer_id is null then
    l_bill_to_customer_id := l_in_customer_id;
end if;

If l_ship_to_customer_id is null then
    l_ship_to_customer_id := l_in_customer_id;
end if;
--bug 5731766

-- IC and Multi National Currency Changes starts here ...

/* commented for bug 3000981*/
/*    OPEN l_customer_csr (l_project_in_rec.customer_id);
    FETCH l_customer_csr INTO l_inv_currency_code,
                              l_inv_rate_type,
                              l_inv_rate_date,
                              l_inv_exchange_rate,
                              l_allow_inv_rate_type_fg,
                              l_bill_another_prj_flag,
                              l_receiver_task_id;
    CLOSE l_customer_csr;
*/
/* commented till here for bug 3000981*/

/* added for bug 3000981*/
    OPEN cur_pa_impl;
    FETCH cur_pa_impl INTO l_inv_rate_type;
    CLOSE cur_pa_impl;
/* added till for bug 3000981*/


-- IC and Multi National Currency Changes ends here ...

--  Removed because of the ALL OR NOTHING decision
--  --only create customer when there is a billing and shipping address
--  IF l_err_code <> 20
--  THEN

-- Bug 3279981
-- Set the values of customer bill split and default top task customer flag colums based on
-- whether the top task customer flag is checked or not

--sunkalya federal changes. Bug#5511353

IF l_project_in_rec.enable_top_task_customer_flag = 'Y' OR l_project_in_rec.date_eff_funds_flag ='Y' THEN

     l_cust_bill_split := null;

     IF (l_project_in_rec.enable_top_task_customer_flag = 'Y') THEN

	l_def_tt_cust_flag := 'Y';
     ELSE
	l_def_tt_cust_flag := 'N';
     END IF;

ELSIF l_project_in_rec.enable_top_task_customer_flag = 'N' AND l_project_in_rec.date_eff_funds_flag ='N' THEN
      l_cust_bill_split := 100;
      l_def_tt_cust_flag := 'N';

ELSIF l_project_in_rec.enable_top_task_customer_flag ='N' OR l_project_in_rec.date_eff_funds_flag ='N' THEN

      IF l_project_in_rec.enable_top_task_customer_flag ='N' THEN
		IF l_orig_date_eff_funds_flag ='Y' THEN
			l_cust_bill_split := null;
			l_def_tt_cust_flag := 'N';
		ELSE
			l_cust_bill_split := 100;
			l_def_tt_cust_flag := 'N';
		END IF;
      ELSIF l_project_in_rec.date_eff_funds_flag ='N' THEN
		IF l_orig_def_tt_flag ='Y' THEN
			l_cust_bill_split := null;
			l_def_tt_cust_flag := 'Y';
		ELSE
			l_cust_bill_split := 100;
			l_def_tt_cust_flag := 'N';
		END IF;
      END IF;

ELSIF l_orig_def_tt_flag = 'Y' OR l_orig_date_eff_funds_flag ='Y' THEN

     l_cust_bill_split := null;

     IF l_orig_def_tt_flag = 'Y' THEN
	l_def_tt_cust_flag := 'Y';
     END IF;
ELSE

     l_cust_bill_split := 100;
     l_def_tt_cust_flag := 'N';

END IF;
--sunkalya:federal changes bug#5511353
----dbms_output.put_line('Before Calling create_customer_contacts');

  pa_customer_info.create_customer_contacts
                               ( l_project_id
                                ,l_in_customer_id -- l_project_in_rec.customer_id
                                ,l_project_relationship_code -- l_relationship_type tracking
                                --Bug 3279981
                                --,100
                                ,l_cust_bill_split
                                ,l_bill_to_customer_id -- 4193743 l_project_in_rec.bill_to_customer_id  -- car changes
                                ,l_ship_to_customer_id -- 4193743 l_project_in_rec.ship_to_customer_id  -- car changes
                                ,l_bill_to_address_id
                                ,l_ship_to_address_id
                                ,l_bill_to_contact_id
                                ,l_ship_to_contact_id
                                          --bug 2293158
                                --,nvl(l_inv_currency_code, l_project_currency_code)
                                ,l_project_currency_code -- bug 3000981
                                ,l_inv_rate_type
                                ,l_inv_rate_date
                                ,l_inv_exchange_rate
                                ,l_allow_inv_rate_type_fg
                                ,l_bill_another_prj_flag
                                ,l_receiver_task_id
                                ,l_def_tt_cust_flag   --Bug 3279981
                                ,fnd_global.user_id
                                ,fnd_global.login_id
                                ,l_err_code
                                ,l_err_stage
                                ,l_err_stack );
----dbms_output.put_line('After  Calling create_customer_contacts l_err_code'||l_err_code);


  IF l_err_code > 0
   THEN

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN

        IF NOT pa_project_pvt.check_valid_message(l_err_stage)
        THEN
                                    pa_interface_utils_pub.map_new_amg_msg
                                       ( p_old_message_code => 'PA_CREATE_CONTACTS_FAILED'
                                        ,p_msg_attribute    => 'CHANGE'
                                        ,p_resize_flag      => 'N'
                                        ,p_msg_context      => 'PROJ'
                                        ,p_attribute1       => l_project_in_rec.pm_project_reference
                                        ,p_attribute2       => ''
                                        ,p_attribute3       => ''
                                        ,p_attribute4       => ''
                                        ,p_attribute5       => '');
                                ELSE
                                     pa_interface_utils_pub.map_new_amg_msg
                                        ( p_old_message_code => l_err_stage
                                         ,p_msg_attribute    => 'CHANGE'
                                         ,p_resize_flag      => 'N'
                                         ,p_msg_context      => 'PROJ'
                                         ,p_attribute1       => l_project_in_rec.pm_project_reference
                                         ,p_attribute2       => ''
                                         ,p_attribute3       => ''
                                         ,p_attribute4       => ''
                                         ,p_attribute5       => '');
        END IF;

      END IF;

      p_project_out.return_status := FND_API.G_RET_STS_ERROR;
      RAISE FND_API.G_EXC_ERROR;

        ELSIF l_err_code < 0
        THEN

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
      THEN
                            pa_interface_utils_pub.map_new_amg_msg
                             ( p_old_message_code => 'PA_CREATE_CONTACTS_FAILED'
                              ,p_msg_attribute    => 'CHANGE'
                              ,p_resize_flag      => 'N'
                              ,p_msg_context      => 'PROJ'
                              ,p_attribute1       => l_project_in_rec.pm_project_reference
                              ,p_attribute2       => ''
                              ,p_attribute3       => ''
                              ,p_attribute4       => ''
                              ,p_attribute5       => '');
      END IF;

      p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;
        --END if;

                --Call copy retention after all customers are created.
                DECLARE
                BEGIN
                     pa_retention_util.copy_retention_setup (
                            p_fr_project_id             => l_project_in_rec.created_from_project_id
                           ,p_to_project_id             => l_project_id
                           ,p_fr_date                   => l_project_rec.start_date
                           ,p_to_date                   => l_project_rec.completion_date
                           ,x_return_status             => l_return_status
                           ,x_msg_count                 => l_msg_count
                           ,x_msg_data                  => l_msg_data);

                     l_msg_count := FND_MSG_PUB.count_msg;
                     IF l_msg_count > 0 THEN
                        p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                        RAISE  FND_API.G_EXC_ERROR;
                     END IF;
                END;
                --End copy retention changes.

--  END IF; --l_err_code <> 20

       -- anlee org role changes
       -- create a project party if the added customer is an organization
       l_party_id := null;
       l_project_party_id := null;
       OPEN l_check_org_csr(l_in_customer_id);
       FETCH l_check_org_csr INTO l_party_id;
       IF l_check_org_csr%NOTFOUND then
         l_party_id := null;
       END IF;
       CLOSE l_check_org_csr;

       if l_party_id is not null then

          PA_PROJECT_PARTIES_PUB.CREATE_PROJECT_PARTY(
            p_validate_only              => FND_API.G_FALSE
          , p_object_id                  => l_project_id
          , p_OBJECT_TYPE                => 'PA_PROJECTS'
          , p_project_role_id            => 100
          , p_project_role_type          => 'CUSTOMER_ORG'
          , p_RESOURCE_TYPE_ID           => 112
          , p_resource_source_id         => l_party_id
          , p_start_date_active          => null
          , p_calling_module             => 'FORM'
          , p_project_id                 => l_project_id
          , p_project_end_date           => null
          , p_end_date_active            => l_end_date_active
          , x_project_party_id           => l_project_party_id
          , x_resource_id                => l_resource_id
          , x_wf_item_type               => l_wf_item_type
          , x_wf_type                    => l_wf_type
          , x_wf_process                 => l_wf_party_process
          , x_assignment_id              => l_assignment_id
          , x_return_status              => l_return_status
          , x_msg_count                  => l_msg_count
          , x_msg_data                   => l_msg_data );

          l_msg_count := FND_MSG_PUB.count_msg;
          IF l_msg_count > 0 THEN
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            RAISE  FND_API.G_EXC_ERROR;
          END IF;

          -- Add the new project party ID to the customers row
          UPDATE PA_PROJECT_CUSTOMERS
          SET project_party_id = l_project_party_id
          WHERE project_id = l_project_id
          AND customer_id = l_in_customer_id; -- l_project_in_rec.customer_id; Tracking
       end if;

    END IF; --customer exists
/*

--Sunkalya federal. Bug#5511353
    OPEN  count_cust(l_project_id);
    FETCH count_cust INTO l_count_cust;
    CLOSE count_cust;

    OPEN  chk_task_level_funding(l_project_id);
    FETCH chk_task_level_funding INTO l_chk_task_level_funding;
    CLOSE chk_task_level_funding;


    IF l_count_cust > 1										AND
       l_chk_task_level_funding = 'Y'								AND
       l_project_in_rec.date_eff_funds_flag = 'N'						AND
       l_orig_date_eff_funds_flag= 'Y'								AND
       (
		l_project_in_rec.enable_top_task_customer_flag = 'N' OR
			(
				nvl(l_project_in_rec.enable_top_task_customer_flag,
				PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR AND
				l_orig_def_tt_flag = 'N'
			)
       )
THEN
		PA_UTILS.ADD_MESSAGE(	 p_app_short_name  =>  'PA'
					,p_msg_name         => 'PA_TASK_FUNDING_EXIST'
				    );

		l_return_status := FND_API.G_RET_STS_ERROR;

		RAISE  FND_API.G_EXC_ERROR;

END IF;
--Sunkalya federal. Bug#5511353

*/

    -- KEY_MEMBER
    -- add overridable Key Members

    -- l_key_members := p_key_members; Commented for Bug 6408593

    i := l_key_members.first;

    IF l_key_members.exists(i)
    THEN

    --checking for overridability is done in the called procedure add_key_members

  WHILE i IS NOT NULL LOOP

        /*Commented the below code for the bug 2910972 since the defaulting is handled in the
        pa_project_parties_pub.create_project_party when a null value is passed*/

   /*IF l_key_members(i).start_date IS NULL
    OR l_key_members(i).start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
    THEN   IF l_project_rec.start_date IS NULL
      OR l_project_rec.start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
      THEN l_key_members(i).start_date := trunc(sysdate);
      ELSE l_key_members(i).start_date := l_project_rec.start_date;
      END IF;
    END IF;*/

     /*Bug#2910972-Adding the below code*/

     IF l_key_members(i).start_date =
        PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
     THEN
        l_key_members(i).start_date := NULL;
     END IF;

/*
-- Not required.Key member end date can be left blank.Otherwise poses
-- problems with security,since a key member has to be currently active
-- to be able to update a project and defaulting the end date to the
-- project's end date would result in inability to update projects
-- with earlier completion dates

    IF l_key_members(i).end_date IS NULL
    OR l_key_members(i).end_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
    THEN   IF l_project_rec.completion_date IS NULL
      OR l_project_rec.completion_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
      THEN l_key_members(i).end_date := NULL;
      ELSE l_key_members(i).end_date := l_project_rec.completion_date;
      END IF;
    END IF;
*/
    IF l_key_members(i).end_date =
                   PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
       l_key_members(i).end_date := NULL;
                END IF;

    i := l_key_members.next(i);

  END LOOP;

  pa_project_pvt.add_key_members(l_return_status
              ,l_project_in_rec.created_from_project_id
              ,l_project_id
              ,l_key_members
               );

      IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      p_project_out.return_status := l_return_status;
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
      p_project_out.return_status := l_return_status;
      RAISE FND_API.G_EXC_ERROR;
      END IF;

      /* Start of code for bug #2111806
         Call the check_manager_date_range to check if the Project
     Manager exists for the complete duration of the Project. */

      pa_project_check_pvt.check_manager_date_range(p_project_id    =>  l_project_id
                               ,p_return_status =>  l_return_status);

      IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
        p_project_out.return_status := l_return_status;
    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
        p_project_out.return_status := l_return_status;
        RAISE FND_API.G_EXC_ERROR;
      END IF;
      /* End of code for bug #2111806 */

    END IF;

    /* Start of code for bug #2111806
       Throw an error if there are no Project Managers assigned.
       This has to be thrown irrespective of whether there are any Key Member records
       being passed or not. So, it cannot be done in the above IF condition. */


    /* Bug 5731766 This code was moved to before get_customer_info call
       We need to bypass call get_customer_info if l_proj_type_class
       is 'contract'.
    IF l_project_id IS NOT NULL THEN
    OPEN  c_prj(l_project_id);
    FETCH c_prj INTO l_proj_status, l_proj_type_class;
    CLOSE c_prj;
    END IF;
    */
    /* The check has to be done only for an Approved Contract Type project. */
    IF (nvl(l_proj_type_class,'NONE') = 'CONTRACT' AND
        nvl(l_proj_status,'UNAPPROVED') = 'APPROVED') THEN
    OPEN c_prj_count(l_project_id);
    FETCH c_prj_count INTO l_prj_mgr_count;
    CLOSE c_prj_count;
        IF l_prj_mgr_count = 0 THEN
          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
         pa_utils.add_message
          ( p_app_short_name   => 'PA'
           ,p_msg_name         => 'PA_PR_INSUF_PROJ_MGR'
          );
              RAISE FND_API.G_EXC_ERROR;
          END IF;
        END IF;
    END IF;
    /* End of code for bug #2111806 */

    -- anlee org role changes
    -- ORG_ROLE
    -- add overridable Org Roles

    l_org_roles := p_org_roles;

    i := l_org_roles.first;

    IF l_org_roles.exists(i)
    THEN

    --checking for overridability is done in the called procedure add_org_roles

  WHILE i IS NOT NULL LOOP

    IF l_org_roles(i).start_date IS NULL
    OR l_org_roles(i).start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
    THEN   IF l_project_rec.start_date IS NULL
      OR l_project_rec.start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
      THEN l_org_roles(i).start_date := trunc(sysdate);
      ELSE l_org_roles(i).start_date := l_project_rec.start_date;
      END IF;
    END IF;

    IF l_org_roles(i).end_date =
                   PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
       l_org_roles(i).end_date := NULL;
                END IF;

    i := l_org_roles.next(i);

  END LOOP;

  pa_project_pvt.add_org_roles(l_return_status
              ,l_project_in_rec.created_from_project_id
              ,l_project_id
              ,l_org_roles
               );

      IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      p_project_out.return_status := l_return_status;
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
      p_project_out.return_status := l_return_status;
      RAISE FND_API.G_EXC_ERROR;
      END IF;

    END IF;


    --CLASS_CATEGORY
    --add overidable Class Categories


    i := p_class_categories.first;

    IF p_class_categories.exists(i)
    THEN

    --checking for overridability is done in the called procedure add_class_categories

  pa_project_pvt.add_class_categories(l_return_status
                                     ,l_project_in_rec.created_from_project_id
             ,l_project_id
             ,p_class_categories
          );

     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      p_project_out.return_status := l_return_status;
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
          p_project_out.return_status := l_return_status;
      RAISE FND_API.G_EXC_ERROR;
      END IF;

    END IF;


    -- need to understand feature of p_multiple_task_msg := 'F';

--Project Structure Integration
--This creates the
/*  not required as
        l_delta := PA_PROJ_TASK_STRUC_PUB.get_proj_dates_delta(
                       l_project_in_rec.created_from_project_id
                      ,l_out_start_date );
*/

/*--bug 2805602 we dont this anymore as copy project will take care of creating structures only
        PA_PROJ_TASK_STRUC_PUB.COPY_STRUCTURE(
                   p_dest_project_id         => l_project_id
                  ,p_src_project_id          => l_project_in_rec.created_from_project_id
                  ,p_delta                   => l_delta
                  ,p_copy_task_flag          => 'N'
                  ,x_msg_count               => l_msg_count
                  ,x_msg_data                => l_msg_data
                  ,x_return_status           => l_return_status  );

       --The following code is copied from create_project_party call above.
       l_msg_count := FND_MSG_PUB.count_msg;
       IF l_msg_count > 0 THEN
          p_project_out.return_status := FND_API.G_RET_STS_ERROR;
          RAISE  FND_API.G_EXC_ERROR;
       END IF;
*/

--Project Connect 4.0
      PA_PROJECT_PVT.get_structure_version(
               p_project_id             => l_project_id
              ,p_structure_versions_out => g_struc_out_tbl
            );

--Project Connect 4.0

       --syns up pa_proj_elements with pa_tasks
/* not required this anymore

       --Clean up first the unwanted tasks that are created by copy_structure in pa_proj_elements
       --although they had not been created in pa_tasks.

       PA_PROJ_TASK_STRUC_PUB.Clean_unwanted_tasks(
             p_project_id         => l_project_id
            ,x_msg_count          => l_msg_count
            ,x_msg_data           => l_msg_data
            ,x_return_status      => l_return_status
           );

       IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
       THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

       ELSIF l_return_status = FND_API.G_RET_STS_ERROR
       THEN
           RAISE FND_API.G_EXC_ERROR;
       END IF;
*/

--Project Structure Integration

   --bug 2738747      --create project api. Here ther is actually no pupose of this call
   G_Published_version_exists := PA_PROJ_TASK_STRUC_PUB.Published_version_exists( l_project_id );
   G_IS_WP_SEPARATE_FROM_FN   := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id );
   G_IS_WP_VERSIONING_ENABLED := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED( l_project_id );
   --bug 2738747

   G_WP_STR_EXISTS := PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( l_project_id );
    --Begin Add by rtarway FP.M changes for mapping
   G_PROJECT_SHARING_TYPE := PA_PROJ_TASK_STRUC_PUB.GET_SHARE_TYPE(l_project_id);
   --End Add by rtarway FP.M changes for mapping

--TASK
--add tasks to the just created project

--ISSUE
--Where do I get the info about automatic numbering for SEGMENT1

--  l_structure_type := p_structure_in.structure_type;

i := p_tasks_in.first;

v_first_index := i;          --proj conn

-- Bug 4146369 : Added following condition so that the error comes if user has passed tasks
-- and when both the structures are disbaled in the source project.
-- If we do not raise error here, then user will get Invalid Paramters passed error
-- which will not make much sense to users.
l_bug_wp_enabled := PA_PROJECT_STRUCTURE_UTILS.check_workplan_enabled( l_project_in_rec.created_from_project_id );
l_bug_fp_enabled := PA_PROJECT_STRUCTURE_UTILS.check_financial_enabled( l_project_in_rec.created_from_project_id );

IF l_bug_wp_enabled = 'N' AND l_bug_fp_enabled = 'N' AND p_tasks_in.exists(i)
THEN
    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA',
              p_msg_name       =>'PA_WRONG_STR_TYPE_AMG'); -- 'PA_TASKS_NOT_ALLOWD_AMG'  -- It is decided to use the same message in this case too
              -- Workplan or Financial Structures must be enabled at source project/template level in order to enter Tasks.
    RAISE FND_API.G_EXC_ERROR ;
ELSIF  l_bug_wp_enabled = 'Y' AND l_bug_fp_enabled = 'N' AND p_tasks_in.exists(i) AND l_structure_in_rec.structure_type = 'FINANCIAL'
THEN
    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA',
              p_msg_name       => 'PA_WRONG_STR_TYPE_AMG' );
              -- Please enter the correct structure type or enable the Workplan/Financial structure at the source project/template level.
    RAISE FND_API.G_EXC_ERROR ;
ELSIF  l_bug_wp_enabled = 'N' AND l_bug_fp_enabled = 'Y' AND p_tasks_in.exists(i) AND l_structure_in_rec.structure_type = 'WORKPLAN'
THEN
    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA',
              p_msg_name       => 'PA_WRONG_STR_TYPE_AMG' );
              -- Please enter the correct structure type or enable the Workplan/Financial structure at the source project/template level.
    RAISE FND_API.G_EXC_ERROR ;
END IF;

IF p_tasks_in.exists(i)
   --Project Structures
   AND l_structure_in_rec.structure_type = 'FINANCIAL'
   --Project Structures
THEN

   --Inserting tasks will be done in 2 steps
   --1> an INSERT step to get a task_id linked to task_reference
   --2> and then an UPDATE step to get the appropriate parent id and toptask id.
   --This second step will also be used to default data from parents to children.

   --get the project_type_class_code and service_code associated to the project_type

   OPEN l_project_type_csr(l_project_rec.project_type);
   FETCH l_project_type_csr INTO l_project_type_rec;
   CLOSE l_project_type_csr;


   --ROUND TRIP 1

   WHILE i IS NOT NULL LOOP

  --initialize return status to success
  p_tasks_out(i).return_status   := FND_API.G_RET_STS_SUCCESS;

  l_task_in_rec := p_tasks_in(i);

        pa_project_pvt.validate_billing_info (
	   p_project_id         =>l_project_id,  -- Added for Bug 5643876
           p_project_class_code =>l_project_type_rec.project_type_class_code,
           p_in_task_rec        =>l_task_in_rec,
           p_return_status      =>l_return_status
  );


     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
      END IF;

    -- Actions performed using the APIs would be subject to
    -- function security. If the responsibility does not allow
    -- such functions to be executed, the API should not proceed further
    -- since the user does not have access to such functions

    -- Function security procedure check whether user have the
    -- privilege to add task or not

    --Bug 2471668: we do not need to assign project id to the global variable as it is already done
    --above before checking for create_project function.

      PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version_number,
       p_responsibility_id  => l_resp_id,
       p_function_name      => 'PA_PM_ADD_TASK',
       p_msg_count       => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed);


      IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
      END IF;

      IF l_function_allowed = 'N' THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
         p_return_status := FND_API.G_RET_STS_ERROR;
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
      END IF;

      /*Code added for bug 2982057*/

       IF l_task_in_rec.long_task_name IS NULL
       OR l_task_in_rec.long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       THEN
         l_task_in_rec.long_task_name := l_task_in_rec.task_name;
       ELSE
         l_task_in_rec.long_task_name := l_task_in_rec.long_task_name;
       END IF;

       /*Code addition for bug 2982057 ends*/

     pa_project_pvt.add_task_round_one(l_return_status
              ,l_project_rec
              ,l_task_in_rec
              ,l_project_type_rec.project_type_class_code
              ,l_project_type_rec.service_type_code
              ,l_task_id);

  -- assign the appropriate values to the task out record
  p_tasks_out(i).return_status    := l_return_status;
  p_tasks_out(i).pa_task_id    := l_task_id;
  p_tasks_out(i).pm_task_reference := l_task_in_rec.pm_task_reference;

     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
      END IF;

  i := p_tasks_in.next(i);

   END LOOP;

   --ROUND TRIP 2

   i := p_tasks_in.first;

   WHILE i IS NOT NULL LOOP

  --move the incoming record to a local record
  l_task_in_rec   := p_tasks_in(i);

  --get the unique task ID for this task
  l_task_id  := p_tasks_out(i).pa_task_id;

  pa_project_pvt.add_task_round_two(l_return_status
              ,l_project_rec
              ,l_task_id
              ,l_task_in_rec
               --project structures
               ,null
               ,p_tasks_in
               ,p_tasks_out
               ,l_task_version_id
               ,'N'               -- Bug 2931183 p_create_task_structure param.
            -- distinguishes bulk calling context.
               --project structures
               );

  -- assign the return_status to the task out record
  p_tasks_out(i).return_status := l_return_status;
  p_tasks_out(i).task_version_id := l_task_version_id;

     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
      END IF;

  --move to next task in task pl/sql table
  i := p_tasks_in.next(i);

   END LOOP;

--Project Structures
ELSIF p_tasks_in.exists(i)
   AND l_structure_in_rec.structure_type = 'WORKPLAN'
THEN

    IF G_WP_STR_EXISTS = 'N' OR
       G_IS_WP_SEPARATE_FROM_FN = 'N' --bug 2876703         --create project
    THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PS_WP_NOT_SEP_FN'
                  ,p_msg_attribute    => 'CHANGE'
                  ,p_resize_flag      => 'N'
                  ,p_msg_context      => 'GENERAL'
                  ,p_attribute1       => ''
                  ,p_attribute2       => ''
                  ,p_attribute3       => ''
                  ,p_attribute4       => ''
                  ,p_attribute5       => '');
        END IF;
        RAISE FND_API.G_EXC_ERROR;
    END IF;

    -- Actions performed using the APIs would be subject to
    -- function security. If the responsibility does not allow
    -- such functions to be executed, the API should not proceed further
    -- since the user does not have access to such functions

    -- Function security procedure check whether user have the
    -- privilege to add task or not

    --Bug 2471668: we do not need to assign project id to the global variable as it is already done
    --above before checking for create_project function.

      PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version_number,
       p_responsibility_id  => l_resp_id,
       p_function_name      => 'PA_PM_ADD_TASK',
       p_msg_count       => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed);


      IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
            p_multiple_task_msg := 'F';
            RAISE FND_API.G_EXC_ERROR;
      END IF;

      IF l_function_allowed = 'N' THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
         p_return_status := FND_API.G_RET_STS_ERROR;
            p_multiple_task_msg := 'F';
            RAISE FND_API.G_EXC_ERROR;
      END IF;
   /*
   FP K one off Bug 2931183
   Commenting out this loop. Instead of this processing, we will call process_task_structure_bulk
   API which needs to be called only once.



   WHILE i IS NOT NULL LOOP

        --initialize return status to success
        p_tasks_out(i).return_status    := FND_API.G_RET_STS_SUCCESS;

        l_task_in_rec := p_tasks_in(i);

     IF (l_task_in_rec.pa_parent_task_id IS NOT NULL
  AND l_task_in_rec.pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
     THEN
        v_parent_task_id := l_task_in_rec.pa_parent_task_id;
     ELSIF (l_task_in_rec.pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND l_task_in_rec.pm_parent_task_reference IS NOT NULL)
     THEN
       --convert pm_parent_task_reference to parent_task_id.
       --All the parent tasks are created first then child tasks are created. See TRM for AMG load_task api.
       PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref(
              p_pm_parent_task_reference      =>  l_task_in_rec.pm_parent_task_reference
             ,p_project_id                    =>  l_project_id
             ,x_parent_task_id                =>  v_parent_task_id
             ,x_return_status                 =>  l_return_status
           );

       IF l_return_status <> FND_API.G_RET_STS_SUCCESS
       THEN
           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
     THEN
                     pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_PARENT_TASK_MISSING'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'TASK'
                      ,p_attribute1       => l_amg_segment1
                      ,p_attribute2       => l_amg_task_number
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
           END IF;
           RAISE  FND_API.G_EXC_ERROR;
       END IF;

     ELSE
        v_parent_task_id := null;
     END IF;

     --proj conn
     IF i = v_first_index
     THEN
        l_ref_task_id := null;
     ELSE
        l_ref_task_id := v_task_id;
     END IF;
    --proj conn

     PA_PROJ_TASK_STRUC_PUB.CREATE_TASK_STRUCTURE(
              p_project_id                   => l_project_id
             ,p_task_id                      => l_task_in_rec.pa_task_id
             ,p_parent_task_id               => v_parent_task_id
             ,p_ref_task_id                  => l_ref_task_id   --proj conn
             ,p_task_number                  => l_task_in_rec.pa_task_number
             ,p_task_name                    => l_task_in_rec.long_task_name    --bug 2833194
             ,p_task_description             => l_task_in_rec.task_description
             ,p_carrying_out_organization_id => l_task_in_rec.carrying_out_organization_id
             ,p_calling_module               => 'AMG'
             ,p_structure_type               => l_structure_in_rec.structure_type
             ,p_OBLIGATION_START_DATE        => l_task_in_rec.OBLIGATION_START_DATE
             ,p_OBLIGATION_FINISH_DATE       => l_task_in_rec.OBLIGATION_FINISH_DATE
             ,p_ESTIMATED_START_DATE         => l_task_in_rec.ESTIMATED_START_DATE
             ,p_ESTIMATED_FINISH_DATE        => l_task_in_rec.ESTIMATED_FINISH_DATE
             ,p_BASELINE_START_DATE          => l_task_in_rec.BASELINE_START_DATE
             ,p_BASELINE_FINISH_DATE         => l_task_in_rec.BASELINE_FINISH_DATE
             ,p_CLOSED_DATE                  => l_task_in_rec.CLOSED_DATE
             ,p_WQ_UOM_CODE                  => l_task_in_rec.WQ_UOM_CODE
             ,p_WQ_ITEM_CODE                 => l_task_in_rec.WQ_ITEM_CODE
             ,p_STATUS_CODE                  => l_task_in_rec.STATUS_CODE
             ,p_WF_STATUS_CODE               => l_task_in_rec.WF_STATUS_CODE
             ,p_PM_SOURCE_CODE               => p_PM_product_code
             ,p_PRIORITY_CODE                => l_task_in_rec.PRIORITY_CODE
             ,p_MILESTONE_FLAG               => l_task_in_rec.MILESTONE_FLAG
             ,p_CRITICAL_FLAG                => l_task_in_rec.CRITICAL_FLAG
             ,p_INC_PROJ_PROGRESS_FLAG       => l_task_in_rec.INC_PROJ_PROGRESS_FLAG
             ,p_LINK_TASK_FLAG               => l_task_in_rec.LINK_TASK_FLAG
             ,p_CALENDAR_ID                  => l_task_in_rec.CALENDAR_ID
             ,p_PLANNED_EFFORT               => l_task_in_rec.PLANNED_EFFORT
             ,p_DURATION                     => l_task_in_rec.DURATION
             ,p_PLANNED_WORK_QUANTITY        => l_task_in_rec.PLANNED_WORK_QUANTITY
             ,p_TASK_TYPE                    => l_task_in_rec.TASK_TYPE
             ,p_actual_start_date                  => l_task_in_rec.actual_start_date
             ,p_actual_finish_date                 => l_task_in_rec.actual_finish_date
             ,p_early_start_date                   => l_task_in_rec.early_start_date
             ,p_early_finish_date                  => l_task_in_rec.early_finish_date
             ,p_late_start_date                    => l_task_in_rec.late_start_date
             ,p_late_finish_date                   => l_task_in_rec.late_finish_date
             ,p_scheduled_start_date               => l_task_in_rec.scheduled_start_date
             ,p_scheduled_finish_date              => l_task_in_rec.scheduled_finish_date
             ,P_PM_SOURCE_reference                => l_task_in_rec.pm_task_reference
             ,p_location_id                        => l_task_in_rec.address_id
             ,p_manager_person_id                  => l_task_in_rec.task_manager_person_id
-- (Begin venkat) new params for bug #3450684 ----------------------------------------------
             ,p_ext_act_duration                   => l_task_in_rec.ext_act_duration
             ,p_ext_remain_duration                => l_task_in_rec.ext_remain_duration
             ,p_ext_sch_duration                   => l_task_in_rec.ext_sch_duration
-- (End venkat) new params for bug #3450684 -------------------------------------------------
             ,x_task_version_id                    => l_task_version_id
             ,x_task_id                            => v_task_id
             ,x_msg_count                    => l_msg_count
             ,x_msg_data                     => l_msg_data
             ,x_return_status                => l_return_status
                     );

        -- assign the appropriate values to the task out record
        p_tasks_out(i).return_status     := l_return_status;
        p_tasks_out(i).pa_task_id        := v_task_id;
        p_tasks_out(i).task_version_id   := l_task_version_id;
        p_tasks_out(i).pm_task_reference := l_task_in_rec.pm_task_reference;

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          p_multiple_task_msg := 'F';
          RAISE FND_API.G_EXC_ERROR;
        END IF;

        i := p_tasks_in.next(i);

   END LOOP;

   FP K one off Bug 2931183
   */
--Project Structures

END IF; --p_tasks_in.exists(i)

-- Bug 5622539
       pa_project_pvt.validate_data(
            p_calling_context  => 'CREATE_PROJECT',
            p_project_id       => l_project_id,
            x_msg_count        => l_msg_count,
            x_msg_data         => l_msg_data,
            x_return_status    => l_return_status
        );
       p_return_status := l_return_status;

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
            THEN
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
            THEN
                RAISE FND_API.G_EXC_ERROR;
        END IF;

-- Made the following changes for post FP K one off. Bug 2931183
-- Performance changes.
IF l_debug_mode = 'Y' THEN
   pa_debug.g_err_stage := 'Calling PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK ' ;
   pa_debug.write(g_module_name,pa_debug.g_err_stage,3);
END IF;

--Set the global variable G_OP_VALIDATE_FLAG.
--BUG 4218977
G_OP_VALIDATE_FLAG := p_op_validate_flag;

PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK
   (  p_api_version_number              => p_api_version_number
     ,p_commit                          => FND_API.G_FALSE --p_commit : Bug 3668424: passing p_commit as FND_API.G_FALSE
     ,p_project_id                      => l_project_id                 -- Changed during UT.
     ,p_source_project_id               => l_project_in_rec.created_from_project_id --ADUT. Included this new param.
     ,p_pm_product_code                 => p_pm_product_code
     ,p_structure_type                  => p_structure_in.structure_type
     ,p_tasks_in_tbl                    => p_tasks_in
     ,p_wp_str_exists                   => G_WP_STR_EXISTS
     ,p_is_wp_separate_from_fn          => G_IS_WP_SEPARATE_FROM_FN
     ,p_is_wp_versioning_enabled        => G_IS_WP_VERSIONING_ENABLED
     ,p_structure_version_id            => null
     ,p_process_mode                    => l_project_in_rec.process_mode -- PA L Changes 3010538
     ,px_tasks_out_tbl                  => p_tasks_out
     ,x_return_status                   => p_return_status
     ,x_msg_count                       => p_msg_count
     ,x_msg_data                        => p_msg_data
    );

IF p_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'Errors in PROCESS_TASK_STRUCTURE_BULK ' ;
        pa_debug.write(g_module_name,pa_debug.g_err_stage,4);
     END IF;
     p_multiple_task_msg := 'F';
END IF;

IF l_debug_mode = 'Y' THEN
   pa_debug.g_err_stage := 'Returned from PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK ' ;
   pa_debug.write(g_module_name,pa_debug.g_err_stage,3);
END IF;

/* Post FP K one off. Bug 2931183
   Commenting this code as this is done in PA_PROJ_TASK_STRUC_PUB.process_task_structure_bulk.
--bug 2732895   --create_project
IF ( G_WP_STR_EXISTS = 'Y' AND G_IS_WP_SEPARATE_FROM_FN = 'N' ) OR
   ( G_WP_STR_EXISTS = 'Y' AND G_IS_WP_SEPARATE_FROM_FN = 'Y' AND  l_structure_in_rec.structure_type = 'WORKPLAN' )  --should not call fif tasks are added to financial structure version
THEN
  PA_PROJ_TASK_STRUC_PUB.recalc_task_weightings(
             p_tasks_in             => p_tasks_out
            ,p_task_version_id      => null
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            ,x_return_status        => l_return_status
       );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          p_multiple_task_msg := 'F';
          RAISE FND_API.G_EXC_ERROR;
        END IF;

  --bug 2856033

  PA_PROJ_TASK_STRUC_PUB.rollup_dates(
             p_tasks_in             => p_tasks_out
            ,p_task_version_id      => null
            ,p_project_id           => l_project_id
            ,P_structure_version_id => null
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            ,x_return_status        => l_return_status
       );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          p_multiple_task_msg := 'F';
          RAISE FND_API.G_EXC_ERROR;
        END IF;

  --bug 2856033

END IF;
--bug 2732895
Post FP K one off. Bug 2931183
*/
   IF p_multiple_task_msg = 'F'
   THEN
      RAISE FND_API.G_EXC_ERROR;
   END IF;

-- FP-M Bug # 3301192 --create project
   l_d_loop_count := p_tasks_in.first;
   WHILE l_d_loop_count IS NOT NULL LOOP
      l_task_in_rec := p_tasks_in(l_d_loop_count);

      /*PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID(p_pa_project_id => p_project_out.pa_project_id
                                              ,p_pm_task_reference => l_task_in_rec.pm_task_reference
                                              ,p_out_task_id => l_d_task_id
                                              ,p_return_status => l_return_status);*/

      --Begin Comment by rtarway for FP.M Changes,
      --This call is redundant because Task Id is already available,
      --Also CONVERT_PM_TASKREF_TO_ID will fail is Spilt_mapping
      -- p_project_out.pa_project_id is not available till this point. Should be replaced by following.
      -- l_d_task_id := p_tasks_out(l_d_loop_count).pa_task_id;

      --Commented by rtarway FP.M Changes for Mapping
      --IF (PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS(p_project_out.pa_project_id) = 'Y') THEN
      IF (PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS(l_project_id) = 'Y') THEN

--maansari5/18 replaced api call CONVERT_PM_TASKREF_TO_ID to CONVERT_PM_TASKREF_TO_ID_all
      IF l_d_task_id IS NULL AND
         l_task_in_rec.pm_task_reference IS NOT NULL AND
         l_task_in_rec.pm_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
      THEN
        PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_all(p_pa_project_id => l_project_id
                                              ,p_pm_task_reference => l_task_in_rec.pm_task_reference
                                              ,p_structure_type => p_structure_in.structure_type
                                              ,p_out_task_id => l_d_task_id
                                              ,p_return_status => l_return_status);

           IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
           THEN
              RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
           ELSIF l_return_status = FND_API.G_RET_STS_ERROR
           THEN
              p_multiple_task_msg := 'F';
              RAISE FND_API.G_EXC_ERROR;
           END IF;
        END IF;
--maansari5/18

          --Set the global variable G_OP_VALIDATE_FLAG before going for dependence validation.

          IF NVL(PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED,'N') = 'Y'
          THEN
             l_d_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.get_current_working_ver_id(l_project_id);
          ELSE
             l_d_structure_version_id :=  PA_PROJ_ELEMENTS_UTILS.LATEST_PUBLISHED_VER_ID( l_project_id, 'WORKPLAN');
          END IF;

          l_d_task_ver_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID(p_structure_version_id => l_d_structure_version_id
                      ,p_task_id => l_d_task_id);

          pa_proj_task_struc_pub.parse_predecessor_import(p_string => l_task_in_rec.pred_string
                                 ,p_delimeter => l_task_in_rec.pred_delimiter
                                 ,p_task_version_Id => l_d_task_ver_id
                                 ,x_return_status => l_return_status
                                 ,x_msg_count => l_msg_count
                                 ,x_msg_data  => l_msg_data);

           IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
           THEN
              RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
           ELSIF l_return_status = FND_API.G_RET_STS_ERROR
           THEN
              p_multiple_task_msg := 'F';
              RAISE FND_API.G_EXC_ERROR;
           END IF;
           l_d_task_id := null;

   END IF;
   l_d_loop_count := p_tasks_in.next(l_d_loop_count);
  END LOOP;
-- Check to see if WF had been enabled by Copy projects
-- If so, then need to commit.

OPEN l_get_wf_status_csr (l_project_id);
FETCH l_get_wf_status_csr INTO l_wf_status_code;
CLOSE l_get_wf_status_csr;

p_project_out.pa_project_id   := l_project_id;
p_project_out.pa_project_number := l_project_number_out;

-- Need to commit if either workflow had been started
-- or p_commit was TRUE

-- 22-DEC-97, jwhite ----------------------------------------------------------
-- Added new OUT-paramter p_workflow_started

IF (l_wf_status_code = 'IN_ROUTE' )
 THEN
  p_workflow_started    := 'Y';
END IF;
-- -----------------------------------------------------------------------------------

--<EA Add Project/Task level Extensible Attributes>

    i := p_ext_attr_tbl_in.first;

    IF p_ext_attr_tbl_in.exists(i)
    THEN
     PA_USER_ATTR_PUB.Process_User_Attrs_Data(
         p_ext_attr_data_table   => p_ext_attr_tbl_in,
         p_project_id            => l_project_id,
         p_structure_type        => l_structure_in_rec.structure_type,
         x_failed_row_id_list    => l_failed_row_id_list,
         x_errorcode             => l_errorcode,
         x_msg_count             => l_msg_count,
         x_msg_data              => l_msg_data,
         x_return_status         => l_return_status      );

      IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
         RAISE FND_API.G_EXC_ERROR;
      END IF;
   END IF;
--</EA Add Project/Task level Extensible Attributes>
--Begin Add by rtarway for set financial task

IF (G_PROJECT_SHARING_TYPE='SHARE_PARTIAL' AND l_structure_in_rec.structure_type = 'FINANCIAL' )
THEN
     i := p_tasks_in.first();

     WHILE i IS NOT NULL LOOP
          --Initialize the return status to success
          p_tasks_out(i).return_status := FND_API.G_RET_STS_SUCCESS;
          l_task_in_rec := p_tasks_in(i);
          l_patask_record_version_number := NULL;
          --No Function Security Check required

          --Get record version number from pa_tasks table
         OPEN  c_get_pa_record_version_number ( p_tasks_out(i).task_version_id  , l_project_id);
         FETCH c_get_pa_record_version_number INTO l_patask_record_version_number;
         CLOSE c_get_pa_record_version_number;

         --If the record version Number is null, initialize it to 1 , considering in create project, It will be new record
         IF (l_patask_record_version_number IS NULL)
               THEN l_patask_record_version_number := 1;
         END IF;

        IF (
             l_task_in_rec.financial_task_flag IS NOT NULL
             AND
             l_task_in_rec.financial_task_flag <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
           )
        THEN

             PA_TASKS_MAINT_PUB.SET_FINANCIAL_FLAG_WRAPPER
              (
                 p_api_version               => p_api_version_number
               , p_init_msg_list             => FND_API.G_FALSE
               , p_commit                    => FND_API.G_FALSE--BUG 3766967
               , p_calling_module            => 'AMG'
               , p_debug_mode                => FND_API.G_TRUE
               , p_task_version_id           => p_tasks_out(i).task_version_id
               , p_checked_flag              => l_task_in_rec.financial_task_flag
               , p_record_version_number     => l_patask_record_version_number
               , p_project_id                => l_project_id
               , p_published_version_exists  => G_Published_version_exists
               , x_return_status             => l_return_status
               , x_msg_count                 => l_msg_count
               , x_msg_data                  => l_msg_data
             );

             -- Populating the appropriate values in task out records
              p_tasks_out(i).return_status    := l_return_status;
              IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
              ELSIF l_return_status = FND_API.G_RET_STS_ERROR        THEN
                   RAISE FND_API.G_EXC_ERROR;
              END IF;
        END IF;
        i := p_tasks_in.next(i);
     END LOOP;
END IF;
--End Set Financial Task Changes
--End Add by rtarway FP.M Changes for Set Financial Tasks

--Begin Add by rtarway FP.M Changes for Mapping
--Add the call to create mapping
IF (G_PROJECT_SHARING_TYPE='SPLIT_MAPPING' AND l_structure_in_rec.structure_type = 'WORKPLAN' )
THEN
     i := p_tasks_in.first();
     WHILE i IS NOT NULL LOOP
          --Initialize the return status to success
          l_return_status := FND_API.G_RET_STS_SUCCESS;
          l_task_in_rec := p_tasks_in(i);

          -- rbruno added for bug 9491704 - start
          -- If mapped_task_reference is NULL and mapped_task_id is 0 then make the
          -- mapped_task_id also NULL as 0 is not a valid value for an id. MSP is by
          -- default passing 0 for Number fields if there is no value assigned to them.
          l_mapped_task_id := p_tasks_in(i).mapped_task_id;
          IF ( (p_tasks_in(i).mapped_task_reference IS NULL OR p_tasks_in(i).mapped_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
               AND p_tasks_in(i).mapped_task_id = 0 ) THEN
            l_mapped_task_id := NULL;
          END IF;

          --No Function Security Check required
          --Call the create_mapping only id p_mapped_task_reference or p_mapped_task_id is passed
          --rbruno bug 9540263 start
          IF (
               ( l_mapped_task_id IS NOT NULL AND l_mapped_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
          --rbruno bug 9540263 end
               OR
               ( p_tasks_in(i).mapped_task_reference IS NOT NULL AND p_tasks_in(i).mapped_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
             )
          THEN
               pa_project_pub.create_mapping
               (
                   p_api_version                  => p_api_version_number
                 , p_init_msg_list                => FND_API.G_FALSE
                 , p_commit                       => FND_API.G_FALSE--bug 3766967
                 , p_debug_mode                   => FND_API.G_TRUE
                 , p_project_id                   => l_project_id
                 , p_proj_source_reference        => null
                 , p_wkp_structure_version_id     => l_d_structure_version_id
                 , p_wkp_task_id                  => p_tasks_out(i).pa_task_id--Since the tasks are already created , this will have task Ids
                 , px_mapped_task_id              => p_tasks_in(i).mapped_task_id
                 , p_mapped_task_reference        => p_tasks_in(i).mapped_task_reference
                 , x_return_status                => l_return_status
                 , x_msg_count                    => l_msg_count
                 , x_msg_data                     => l_msg_data
               );
               -- Populating the appropriate values in task out records
               p_tasks_out(i).return_status    := l_return_status;
               IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
               ELSIF l_return_status = FND_API.G_RET_STS_ERROR        THEN
                     RAISE FND_API.G_EXC_ERROR;
               END IF;
          END IF;
          i := p_tasks_in.next(i);
     END LOOP;
END IF;
--End Create Mapping
--End Add by rtarway FP.M Changes for Mapping

------ 3435905 : FP M : Deliverables Changes For AMG Start-----------

    -- 3700247, added code to check for source template/project deliverable is enabled or not
    -- if deliverable is enabled for source, call enable_deliverable api to enable deliverable for target project
    -- if deliverable is not enabled for source and for target deliverables are loaded, throw error message

    G_DLVR_STRUCTURE_ENABLED := Pa_Project_Structure_Utils.Check_Deliverable_Enabled(l_project_in_rec.created_from_project_id);

    IF l_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'Deliverable Enabled ['||G_DLVR_STRUCTURE_ENABLED||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

    i := p_deliverables_in.first();

    IF ( G_DLVR_STRUCTURE_ENABLED = 'Y' ) THEN
        Pa_Deliverable_Utils.enable_deliverable(
               p_api_version            => p_api_version_number
             , p_init_msg_list          => FND_API.G_FALSE
             , p_commit                 => FND_API.G_FALSE--bug 3766967
             , p_debug_mode             => l_debug_mode
             , p_validate_only          => FND_API.G_FALSE
             , p_project_id             => l_project_id
             , x_return_status          => l_return_status
             , x_msg_count              => l_msg_count
             , x_msg_data               => l_msg_data
             );

        -- 3700247 Added code to validate return status after enable_deliverabl call
        -- if return status is not 'S', raise the exception

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
              RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR        THEN
              RAISE FND_API.G_EXC_ERROR;
        END IF;

    ELSE
        IF i IS NOT NULL THEN
            PA_UTILS.ADD_MESSAGE(p_app_short_name  => 'PA'
                                ,p_msg_name         => 'PA_DLV_STRUCTURE_DISABLED');
            l_return_status := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
        END IF;
    END IF;

    WHILE i IS NOT NULL LOOP
      l_deliverable_id := null;

  -- A call to Create_Deliverables api creates one deliverable and its
  -- assoicated actions.

  -- Invoking the Create Deliverable API
      Pa_Project_Pub.create_deliverable
      ( p_api_version            => p_api_version_number
      , p_init_msg_list          => p_init_msg_list
      -- 3735792, passing p_commit as false to next level api calls
      , p_commit                 => FND_API.G_FALSE
      , x_return_status          => l_return_status
      , p_deliverable_name       => p_deliverables_in(i).deliverable_name
      , p_deliverable_short_name => p_deliverables_in(i).deliverable_short_name
      , p_deliverable_type_id    => p_deliverables_in(i).deliverable_type_id
      , p_deliverable_owner_id   => p_deliverables_in(i).deliverable_owner_id
      , p_description            => p_deliverables_in(i).description
      , p_status_code            => p_deliverables_in(i).status_code
      , p_due_date               => p_deliverables_in(i).due_date
      , p_completion_date        => p_deliverables_in(i).completion_date
      , p_progress_weight        => p_deliverables_in(i).progress_weight
      , px_deliverable_id        => l_deliverable_id
      , p_pm_deliverable_reference=> p_deliverables_in(i).pm_deliverable_reference
      -- for bug# 3729250
--      , p_carrying_out_org_id    => p_deliverables_in(i).carrying_out_org_id
      , p_task_id                => p_deliverables_in(i).task_id
      , p_task_source_reference  => p_deliverables_in(i).task_source_reference
      , p_project_id             => l_project_id
      , p_proj_source_reference  => null
      , p_action_in_tbl          => p_deliverable_actions_in
      -- 3435905 changed from p_deliverable_actions_out to G_deliverable_actions_out_tbl
--    , x_action_out_tbl       => p_deliverable_actions_out
      , x_action_out_tbl         => G_deliverable_actions_out_tbl
      , p_item_id                => p_deliverables_in(i).item_id     --Added for bug 3630378
      , p_inventory_org_id       => p_deliverables_in(i).inventory_org_id
      , p_quantity               => p_deliverables_in(i).quantity
      , p_uom_code               => p_deliverables_in(i).uom_code
      -- for bug# 3729250
--      , p_item_description       => p_deliverables_in(i).item_description
      , p_unit_price             => p_deliverables_in(i).unit_price
      , p_unit_number            => p_deliverables_in(i).unit_number
      , p_currency_code          => p_deliverables_in(i).currency_code
      , p_pm_source_code         =>  p_pm_product_code                       /* Bug no. 3651113 */
      , x_msg_count              => l_msg_count
      , x_msg_data               => l_msg_data
      );

    G_deliverables_out_tbl(i).return_status := l_return_status;
    G_deliverables_out_tbl(i).deliverable_id := l_deliverable_id;

  -- Populating the appropriate values in deliverables out records

  -- 3435905 return status and deliverable id is directly assigned to
  -- global deliverable table
  -- removed the p_deliverables_out parameter and added global table
--      p_deliverables_out(i).return_status    := l_return_status;
--      p_deliverables_out(i).deliverable_id   := l_deliverable_id;

    IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
          RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF l_return_status = FND_API.G_RET_STS_ERROR        THEN
          RAISE FND_API.G_EXC_ERROR;
    END IF;

    i := p_deliverables_in.next(i);

    END LOOP;

   ------ 3435905 : FP M : Deliverables Changes For AMG END-----------
--4218977, rtarway, unset this global variable upon successfull completion of create project
G_OP_VALIDATE_FLAG := null;
IF (FND_API.to_boolean( p_commit ) OR
   l_wf_status_code = 'IN_ROUTE' )
THEN
  COMMIT WORK;
END IF;


EXCEPTION
  WHEN FND_API.G_EXC_ERROR
  THEN

--    ROLLBACK TO create_project_pub;
--start: cklee fix bug: 9065594
begin
    ROLLBACK TO create_project_pub;
exception when others then rollback;

end;
--end: cklee fix bug: 9065594

    -- Bug 7335526
    IF G_PROJECT_NUMBER_GEN_MODE = 'AUTOMATIC' THEN
      PA_UTILS_SQNUM_PKG.revert_unique_proj_num(p_table_name    => 'PA_PROJECTS',
                                                p_user_id       => FND_GLOBAL.USER_ID,
                                                p_unique_number => to_number(l_project_number_out));
    END IF;

     --4218977, rtarway, unset this global variable upon unsuccessfull completion of create project
     G_OP_VALIDATE_FLAG := null;
    p_return_status := FND_API.G_RET_STS_ERROR;

    FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
--  ROLLBACK TO create_project_pub;
--start: cklee fix bug: 9065594
begin
    ROLLBACK TO create_project_pub;
exception when others then rollback;

end;
--end: cklee fix bug: 9065594

  -- Bug 7335526
  IF G_PROJECT_NUMBER_GEN_MODE = 'AUTOMATIC' THEN
    PA_UTILS_SQNUM_PKG.revert_unique_proj_num(p_table_name    => 'PA_PROJECTS',
                                              p_user_id       => FND_GLOBAL.USER_ID,
                                              p_unique_number => to_number(l_project_number_out));
  END IF;

   --4218977, rtarway, unset this global variable upon unsuccessfull completion of create project
     G_OP_VALIDATE_FLAG := null;
  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

  WHEN OTHERS
  THEN
--  ROLLBACK TO create_project_pub;
--start: cklee fix bug: 9065594
begin
    ROLLBACK TO create_project_pub;
exception when others then rollback;

end;
--end: cklee fix bug: 9065594

  -- Bug 7335526
  IF G_PROJECT_NUMBER_GEN_MODE = 'AUTOMATIC' THEN
    PA_UTILS_SQNUM_PKG.revert_unique_proj_num(p_table_name    => 'PA_PROJECTS',
                                              p_user_id       => FND_GLOBAL.USER_ID,
                                              p_unique_number => to_number(l_project_number_out));
  END IF;

  --4218977, rtarway, unset this global variable upon unsuccessfull completion of create project
   G_OP_VALIDATE_FLAG := null;
  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

  FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

END create_project;

--------------------------------------------------------------------------------
--Name:               add_task
--Type:               Procedure
--Description:        This procedure adds a task to a OP project, when this is allowed.
--
--
--
--Called subprograms: check_add_subtask_ok
--
--
--
--History:
--    28-AUG-1996        L. de Werker    Created
--    28-NOV-1996   L. de Werker   Added 11 parameters for descriptive flexfields
--    10-DEC-1996   L. de Werker   Added parameter p_address_id
--    27-MAY-1999   ODEO     Added parameter p_pa_parent_task_id *O
--
--      09-MAY-02       Maansari        - Project Structure Integration
--                                      - Added call to PA_PROJ_TASK_STRUC.CREATE_DEFAULT_TASK_STRUCTURE api.
--    17-APR-2002        amksingh        Bug 2316713 initialized the
--                                       l_task_in_rec.pa_parent_task_id with the Appropriate
--                                       parent_task_id.
--    15-jul-2003      sramesh        -- Added the code for bug 2982057.
--                                       Changed the logic to populate the long_task_name
--                                       with task_name when the long_task_name is null.
--    31-Jul-2003      Amit              Bug 3075623 : Added condition in add_task to throw error
--                                       if no ref task id is passed
--    12-Aug-2003      sacgupta          Bug 3086001. initialized l_task_in_rec.task_type with the
--                                       appropriate value.
--
--          22-JAN-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to add parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days to tasks and create dependencies.
--          10-FEB-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to replace parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days with parameters: pred_string and pred_delimiter.

--  07-JUL-2004  Rakesh Raghavan   Bug # 3663166. Modified API: add_task().
--  09-01-2006   vkadimes          Bug 4689326 Modified the customer_id validation part.

PROCEDURE add_task
( p_api_version_number      IN  NUMBER
 ,p_commit        IN  VARCHAR2  := FND_API.G_FALSE
 ,p_init_msg_list      IN  VARCHAR2  := FND_API.G_FALSE
 ,p_msg_count        OUT NOCOPY  NUMBER  /*Added the nocopy check for 4537865 */
 ,p_msg_data        OUT  NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_return_status      OUT  NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_pm_product_code      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pm_project_reference    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pa_project_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pm_task_reference      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pa_task_number            IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--Project Structures
 ,p_ref_task_id               IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
--Project Structures

 ,p_task_name        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_long_task_name      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_task_description      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_task_start_date      IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_task_completion_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_pm_parent_task_reference    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pa_parent_task_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_address_id        IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_carrying_out_organization_id  IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_service_type_code      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_task_manager_person_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_billable_flag      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_chargeable_flag      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_ready_to_bill_flag      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_ready_to_distribute_flag    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_limit_to_txn_controls_flag    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_labor_bill_rate_org_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_labor_std_bill_rate_schdl    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_labor_schedule_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_labor_schedule_discount    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_nl_bill_rate_org_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_nl_std_bill_rate_schdl    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_nl_schedule_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_nl_schedule_discount    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_labor_cost_multiplier_name    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cost_ind_rate_sch_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_rev_ind_rate_sch_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_inv_ind_rate_sch_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_cost_ind_sch_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_rev_ind_sch_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_inv_ind_sch_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_labor_sch_type      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_nl_sch_type        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_actual_start_date                   IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_actual_finish_date                  IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_early_start_date                    IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_early_finish_date                   IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_late_start_date                     IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_late_finish_date                    IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_scheduled_start_date                IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_scheduled_finish_date               IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_tasks_dff                    IN VARCHAR2    := 'N' --bug 6153503
 ,p_attribute_category      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute1        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute2        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute3        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute4        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute5        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute6        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute7        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute8        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute9        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute10        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 --bug 6153503
 ,p_attribute11        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute12        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute13        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute14        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute15        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 --end bug 6153503
 ,p_allow_cross_charge_flag            IN VARCHAR2 :=
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_project_rate_date               IN      DATE   :=
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_project_rate_type            IN VARCHAR2       :=
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cc_process_labor_flag  IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_labor_tp_schedule_id   IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_labor_tp_fixed_date    IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_cc_process_nl_flag     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_nl_tp_schedule_id      IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_nl_tp_fixed_date       IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_receive_project_invoice_flag IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_work_type_id           IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_emp_bill_rate_schedule_id  IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_job_bill_rate_schedule_id  IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
--Sakthi  MCB
 ,p_non_lab_std_bill_rt_sch_id  IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_taskfunc_cost_rate_type     IN VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_taskfunc_cost_rate_date     IN DATE        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
--Sakthi  MCB
--Project Structures
 ,p_structure_type                     IN VARCHAR2 := 'FINANCIAL'
 ,p_structure_version_id               IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_OBLIGATION_START_DATE              IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_OBLIGATION_FINISH_DATE             IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_ESTIMATED_START_DATE               IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_ESTIMATED_FINISH_DATE              IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_BASELINE_START_DATE                IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_BASELINE_FINISH_DATE               IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_CLOSED_DATE                        IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_WQ_UOM_CODE                        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_WQ_ITEM_CODE                       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_STATUS_CODE                        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_WF_STATUS_CODE                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_PM_SOURCE_CODE                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_PRIORITY_CODE                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_MILESTONE_FLAG                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_CRITICAL_FLAG                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_INC_PROJ_PROGRESS_FLAG             IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_LINK_TASK_FLAG                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_CALENDAR_ID                        IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_PLANNED_EFFORT                     IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_DURATION                           IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_PLANNED_WORK_QUANTITY              IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_TASK_TYPE                          IN NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
--Project Structures
 ,p_labor_disc_reason_code             IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_non_labor_disc_reason_code         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--PA L changes -- bug 2872708   --Add task
 ,p_retirement_cost_flag               VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cint_eligible_flag            VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cint_stop_date                DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
--end PA L changes -- bug 2872708
 ,p_pa_project_id_out              OUT NOCOPY  NUMBER /*Added the nocopy check for 4537865 */
 ,p_pa_project_number_out          OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_task_id                        OUT NOCOPY  NUMBER /*Added the nocopy check for 4537865 */
 -- PA L Changes 3010538
 ,p_process_mode                   IN VARCHAR2 := 'ONLINE'
-- FP-M Bug # 3301192
 ,p_pred_string                    IN VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- ,p_pred_delimiter                     VARCHAR2    DEFAULT ','
  ,p_pred_delimiter                IN VARCHAR2   :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes begin (venkat)
  ,p_base_percent_comp_deriv_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_sch_tool_tsk_type_code     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_type_code       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_date            IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_free_slack             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_total_slack                   IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_effort_driven_flag         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_level_assignments_flag     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_invoice_method                IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_customer_id                   IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_gen_etc_source_code             IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes end (venkat)
-- FP M changes start (Mapping )
  ,p_financial_task_flag        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_mapped_task_id             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_mapped_task_reference      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes end (Mapping )
 ,p_deliverable                 IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_deliverable_id              IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- 3661788 added IN parameter
-- (Begin venkat) Bug #3450684 ------------------------------------------------------------------
 ,p_ext_act_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
 ,p_ext_remain_duration         IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
 ,p_ext_sch_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
-- (End venkat) Bug #3450684   -------------------------------------------------------------------
 ,p_op_validate_flag            IN VARCHAR2 := 'Y' --added by rtarway for bug 4218977
 ,p_structure_updates_flag      IN VARCHAR2 := 'Y' --Added for Bug 7264422

)
IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'add_task';
   l_return_status        VARCHAR2(1);
   l_add_subtask_ok_flag      VARCHAR2(1);

-- FP-M Bug # 3301192
   l_d_task_id NUMBER;
   l_d_task_ver_id NUMBER;
   l_d_struct_ver_id NUMBER;

--custom parameters
   l_project_type_rec       pa_project_types%rowtype;
   l_project_rec            pa_projects%rowtype;
   l_task_in_rec            task_in_rec_type;
   l_project_id             pa_projects.project_id%type;
   l_task_id                pa_tasks.task_id%type;
   l_msg_count              NUMBER ;
   l_msg_data               VARCHAR2(2000);
   l_function_allowed       VARCHAR2(1);
   l_resp_id                NUMBER := 0;
   l_user_id                NUMBER := 0;
   l_module_name            VARCHAR2(80);
   l_process_code           VARCHAR2(30) ;
   l_task_weight_basis_code VARCHAR2(30) ;
   l_update_wbs_flag        VARCHAR2(1) ;
   l_customer_name	    VARCHAR2(360); -- Added for Bug 4689888 -- Modified to VARCHAR2(360) for bug 5856469
--needed to get the field values associated to a AMG message

   CURSOR   l_amg_project_csr
      (p_pa_project_id pa_projects.project_id%type)
   IS
   SELECT   segment1
   FROM     pa_projects p
   WHERE p.project_id = p_pa_project_id;

   --Added for bug 3280610
   --needed to get task_id of a task using project_id and task_reference.
   CURSOR   l_task_ref_to_id_csr
        (cp_project_id pa_tasks.project_id%TYPE
        ,cp_pm_task_reference pa_tasks.pm_task_reference%TYPE)
   IS
   SELECT   t.task_id
   FROM     pa_tasks t
   WHERE    t.project_id = cp_project_id
   AND      t.pm_task_reference = cp_pm_task_reference;

   --Bug 3279981. Fetch project information
   CURSOR cur_get_proj_billing_info IS
   SELECT enable_top_task_customer_flag, enable_top_task_inv_mth_flag,
          revenue_accrual_method, invoice_method, project_type
   FROM   pa_projects_all
   WHERE  project_id = p_pa_project_id;

   CURSOR cur_check_proj_cust_exist (c_customer_id IN NUMBER ) IS
   SELECT 'Y'
   FROM  pa_project_customers
   WHERE project_id = p_pa_project_id
   AND   customer_id = c_customer_id ;

--Added for bug 3746912
CURSOR cur_get_str_type_from_str_id( c_structure_version_id IN NUMBER ) IS
SELECT pst.structure_type
FROM   pa_proj_element_versions ppev
      ,pa_proj_structure_types ppst
      ,pa_structure_types pst
WHERE ppev.element_version_id = c_structure_version_id
AND   ppev.proj_element_id = ppst.proj_element_id
AND   ppst.structure_type_id = pst.structure_type_id ;
-- Added This cursor for Bug No 4689326
CURSOR l_cur_customer_name(l_customer_id NUMBER)
 IS
  SELECT customer_name from PA_CUSTOMERS_V
  WHERE customer_id = l_customer_id;

l_str_type VARCHAR2(150);
--End : added for bug 3746912

   l_amg_segment1       VARCHAR2(25);
   l_amg_task_number       VARCHAR2(50);

   --Project Structures
     l_ref_task_id   NUMBER;
     l_tasks_in      pa_project_pub.task_in_tbl_type;       --dummy variables.
     l_tasks_out     pa_project_pub.task_out_tbl_type ;     --dummy variables.
   --Project Structures
   --bug 2738747
     l_structure_type    VARCHAR2(25);
   --bug 2738747
     l_task_version_id   NUMBER;

     -- Bug 3091798.
     l_request_id        pa_proj_elem_ver_structure.conc_request_id%TYPE;

     --bug 3098668
     struct_ver_updatable  VARCHAR2(1);
     l_str_ver_type        VARCHAR2(1);
     --bug 3098668

     -- Bug 3106457
     l_structure_version_id pa_proj_element_versions.element_version_id%TYPE;
     --Begin Add by rtarway For FP.M Changes for Mapping and Set Financial Task
     l_patask_record_version_number NUMBER;
     --End Add by rtarway For FP.M Changes for Mapping and Set Financial Task
     --Bug 3279981 To store the project's flags
     l_proj_top_task_customer_flag VARCHAR2(1);
     l_proj_top_task_inv_mth_flag  VARCHAR2(1);
     l_proj_revenue_acc_method     VARCHAR2(30);
     l_proj_invoice_method         VARCHAR2(30);
     l_proj_type                   VARCHAR2(20);
     l_dummy                       VARCHAR2(1);

     l_deliverable_id              NUMBER := NULL;  -- 3661788 added local variable

-- Begin fix for Bug # 4373055.

l_str_ver_id            NUMBER:= null;
l_conc_request_id       NUMBER := null;
l_message_name  VARCHAR2(30) := null;
l_message_type  VARCHAR2(30) := null;

-- End fix for Bug # 4373055.

--Added for Bug 6026370
   CURSOR   l_default_parent_task_csr (c_pa_parent_task_id pa_tasks.task_id%type) IS
   SELECT   allow_cross_charge_flag,
            cc_process_labor_flag,
            labor_tp_schedule_id,
            labor_tp_fixed_date,
            cc_process_nl_flag,
            nl_tp_schedule_id,
            nl_tp_fixed_date
   FROM     pa_tasks
   WHERE task_id = c_pa_parent_task_id;

--Initializiing all the CC attributes to missing values so that if the new task is top task then values of these CC attibites
--will be populated from project CC attributes in  pa_project_pvt.add_task_round_one api
l_allow_cross_charge_flag VARCHAR(1) :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
l_cc_process_labor_flag VARCHAR(1) :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
l_labor_tp_schedule_id NUMBER :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
l_labor_tp_fixed_date DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
l_cc_process_nl_flag VARCHAR(1) :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
l_nl_tp_schedule_id NUMBER :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
l_nl_tp_fixed_date DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;

--End for Bug 6026370

--bug 6153503
l_validate_dff               VARCHAR2(1);
l_attribute_category         VARCHAR2(30);
l_attribute1                 VARCHAR2(150);
l_attribute2                 VARCHAR2(150);
l_attribute3                 VARCHAR2(150);
l_attribute4                 VARCHAR2(150);
l_attribute5                 VARCHAR2(150);
l_attribute6                 VARCHAR2(150);
l_attribute7                 VARCHAR2(150);
l_attribute8                 VARCHAR2(150);
l_attribute9                 VARCHAR2(150);
l_attribute10                VARCHAR2(150);
l_attribute11                VARCHAR2(150);
l_attribute12                VARCHAR2(150);
l_attribute13                VARCHAR2(150);
l_attribute14                VARCHAR2(150);
l_attribute15                VARCHAR2(150);

-- Bug 6410745
l_financial_task_flag         VARCHAR2(1);
l_share_code                  VARCHAR2(30);
l_shared                      VARCHAR(1) := 'N';

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT add_task_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;


    --  Initialize the message table if requested.
    --  pm_product_code is mandatory

--bug 2841158
--    IF p_pm_product_code IS NULL
--    OR p_pm_product_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    IF p_pm_product_code IS NOT NULL
    AND p_pm_product_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--bug 2841158
    THEN

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PRODUCT_CODE_IS_MISSING'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;
  RAISE FND_API.G_EXC_ERROR;
    END IF;

    /*
     * Bug 9379239
     * As per bug 2841158, the following validations are done for pm_product_code
     * 1. Throw PA_PRODUCT_CODE_IS_MISSING only if p_pm_product_code is g_miss_char
     * 2. Do not validate p_pm_product_code if its null or 'WORKPLAN' against pa_lookups
     */
    IF (p_pm_product_code IS NOT NULL) AND (p_pm_product_code <> 'WORKPLAN') THEN

        l_pm_product_code := 'Z'; -- Reset global variable l_pm_product_code
        OPEN p_product_code_csr(p_pm_product_code);
        FETCH p_product_code_csr INTO l_pm_product_code;
        CLOSE p_product_code_csr;

        IF l_pm_product_code <> 'X' THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                pa_interface_utils_pub.map_new_amg_msg
                 ( p_old_message_code => 'PA_PRODUCT_CODE_IS_INVALID'
                   ,p_msg_attribute    => 'CHANGE'
                   ,p_resize_flag      => 'N'
                   ,p_msg_context      => 'GENERAL'
                   ,p_attribute1       => ''
                   ,p_attribute2       => ''
                   ,p_attribute3       => ''
                   ,p_attribute4       => ''
                   ,p_attribute5       => ''
                 );
            END IF;
            RAISE FND_API.G_EXC_ERROR;
        END IF;

    END IF;

    l_resp_id := FND_GLOBAL.Resp_id;
    l_user_id := FND_GLOBAL.User_id;
    --l_module_name := p_pm_product_code||'.'||'PA_PM_ADD_TASK';
    l_module_name := 'PA_PM_ADD_TASK';

--Moved from below for bug 2471668
-- get the project ID

        PA_PROJECT_PVT.Convert_pm_projref_to_id
        (        p_pm_project_reference =>      p_pm_project_reference
                 ,  p_pa_project_id     =>      p_pa_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      l_return_status
        );


        IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN

                RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN

                RAISE  FND_API.G_EXC_ERROR;
        END IF;
--Moved from below for bug 2471668

-- Added for bug 3746912, reopened rtarway
--Added initialization code for l_str_type for reopened bug , now l_str_type will always be initialized with passed structure type
--and will be overridden if structure version id is passed.
               l_str_type := p_structure_type;

-- Added for bug 3746912
     --If the structure version id is passed, it gets priority over the structure type.
     --And the structure type should be derived from the version id in such a case
     IF p_structure_version_id IS NOT NULL AND p_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
          OPEN  cur_get_str_type_from_str_id(p_structure_version_id);
          FETCH cur_get_str_type_from_str_id INTO l_str_type;
          IF cur_get_str_type_from_str_id%NOTFOUND THEN
               l_str_type := p_structure_type;
           --Foll IF condition added for Bug 3810365
          ELSIF 'N' = PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id ) THEN
               l_str_type := 'FINANCIAL';
          END IF;
          CLOSE cur_get_str_type_from_str_id;
     END IF;
-- End : Added for bug 3746912

-- Moved from above for bug 3106457. The customer might pass only the project reference and not the project
-- id. So we should derive the id and use it.
-- PA L Changes 3010538
-- Need not use map new amg msg api here as we donot have context information to be displayed and
-- _AMG messages are not defined.
-- Using PA_UTILS.ADD_MESSAGE
    --IF p_structure_type IS NOT NULL THEN  Replaced p_structure_type by l_str_type for 3746912
    IF l_str_type IS NOT NULL THEN

-- Begin fix for Bug # 4373055.

/*

          l_process_code :=
                      PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_CODE(p_project_id => l_project_id --p_pa_project_id 3106457
                                                                        ,p_structure_type => l_str_type ); --p_structure_type 3746912
          IF nvl(l_process_code,'-1') = 'WUP' THEN
                    l_request_id := PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_ID(p_project_id => l_project_id -- bug 3106457 p_pa_project_id  -- Bug 3091798
                                                                                  ,p_structure_type => l_str_type ); --p_structure_type 3746912

               PA_UTILS.ADD_MESSAGE
                     (p_app_short_name => 'PA',
                      --p_msg_name       => 'PA_PS_VD_UPDWBS_PRC_INPROC');
                      p_msg_name       => 'PA_PS_UPDWBS_PRC_INPROC_AMG',  -- Bug 3091798. Message includes the request id.
                      p_token1         => 'REQUESTID',
                      p_value1         => l_request_id);


               RAISE FND_API.G_EXC_ERROR;

          ELSIF nvl(l_process_code,'-1') = 'WUE' THEN
                    l_request_id := PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_ID(p_project_id => l_project_id -- bug 3106457 p_pa_project_id  -- Bug 3091798
                                                                                  ,p_structure_type => l_str_type ); --p_structure_type 3746912

               PA_UTILS.ADD_MESSAGE
                     (p_app_short_name => 'PA',
                     -- p_msg_name       => 'PA_PS_VD_UPD_WBS_PRC_ERR');
                      p_msg_name       => 'PA_PS_UPDWBS_PRC_ERR_AMG',  -- Bug 3091798. Message includes the request id.
                      p_token1         => 'REQUESTID',
                      p_value1         => l_request_id);


              RAISE FND_API.G_EXC_ERROR;

          END IF;

*/

    PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_MSG(
        p_project_id              => l_project_id
        , p_structure_type        => l_str_type
        , p_structure_version_id  => null
        , p_context               => 'UPDATE_AMG'
        , x_message_name          => l_message_name
        , x_message_type          => l_message_type
        , x_structure_version_id  => l_str_ver_id
        , x_conc_request_id       => l_conc_request_id);


    if l_message_name is not null then

             PA_UTILS.ADD_MESSAGE(
                     p_app_short_name => 'PA'
                     , p_msg_name       => l_message_name
                     , p_token1         => 'REQUESTID'
                     , p_value1         => l_conc_request_id);

                  RAISE FND_API.G_EXC_ERROR;
    end if;

-- End fix for Bug # 4373055.

    END IF ;
  --  END IF ;

  -- PA L Changes 3010538

    -- As part of enforcing project security, which would determine
    -- whether the user has the necessary privileges to update the project
    -- need to call the pa_security package

    pa_security.initialize (X_user_id        => l_user_id,
                            X_calling_module => l_module_name);

    -- Actions performed using the APIs would be subject to
    -- function security. If the responsibility does not allow
    -- such functions to be executed, the API should not proceed further
    -- since the user does not have access to such functions

    -- Function security procedure check whether user have the
    -- privilege to add task or not

      PA_INTERFACE_UTILS_PUB.G_PROJECt_ID := l_project_id;  --bug 2471668 ( in the project context )

      PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version_number,
       p_responsibility_id  => l_resp_id,
       p_function_name      => 'PA_PM_ADD_TASK',
       p_msg_count      => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed);

       IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
       THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

       ELSIF l_return_status = FND_API.G_RET_STS_ERROR
       THEN
      RAISE FND_API.G_EXC_ERROR;
       END IF;

       IF l_function_allowed = 'N' THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
         p_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
       END IF;

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;


/* Moving this code before calling the security API. Although p_pa_project_id contains the project id but
   it is converted and l_project_id is used subsequently.
   --bug 2471668
-- get the project ID

  PA_PROJECT_PVT.Convert_pm_projref_to_id
  (   p_pm_project_reference  =>  p_pm_project_reference
     ,  p_pa_project_id   =>  p_pa_project_id
     ,  p_out_project_id   =>  l_project_id
     ,  p_return_status   =>  l_return_status
  );


  IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN

    RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

  ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN

    RAISE  FND_API.G_EXC_ERROR;
  END IF;
*/

      -- Now verify whether project security allows the user to update
      -- the project

      IF pa_security.allow_query (x_project_id => l_project_id ) = 'N' THEN

         -- The user does not have query privileges on this project
         -- Hence, cannot update the project.Raise error
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PROJECT_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
     p_return_status := FND_API.G_RET_STS_ERROR;
     RAISE FND_API.G_EXC_ERROR;
      ELSE
            -- If the user has query privileges, then check whether
            -- update privileges are also available
         IF pa_security.allow_update (x_project_id => l_project_id ) = 'N' THEN

            -- The user does not have update privileges on this project
            -- Hence , raise error

         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PROJECT_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
     p_return_status := FND_API.G_RET_STS_ERROR;
     RAISE FND_API.G_EXC_ERROR;
        END IF;
     END IF;

-- Get segment1 for AMG messages

   OPEN l_amg_project_csr( l_project_id );
   FETCH l_amg_project_csr INTO l_amg_segment1;
   CLOSE l_amg_project_csr;

   --bug 2738747    ---Add task
   G_Published_version_exists := PA_PROJ_TASK_STRUC_PUB.Published_version_exists( l_project_id );
   G_IS_WP_SEPARATE_FROM_FN   := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id );
   G_IS_WP_VERSIONING_ENABLED := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED( l_project_id );
   --bug 2738747
   G_WP_STR_EXISTS := PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( l_project_id );
   G_OP_VALIDATE_FLAG         := p_op_validate_flag; --added by rtarway for bug 4218977

--bug 2876703   --Add_task
   IF G_IS_WP_SEPARATE_FROM_FN = 'N' AND
      l_str_type = 'WORKPLAN' --p_structure_type = 'WORKPLAN' 3746912
   THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PS_WP_NOT_SEP_FN'
                  ,p_msg_attribute    => 'CHANGE'
                  ,p_resize_flag      => 'N'
                  ,p_msg_context      => 'GENERAL'
                  ,p_attribute1       => ''
                  ,p_attribute2       => ''
                  ,p_attribute3       => ''
                  ,p_attribute4       => ''
                  ,p_attribute5       => '');
        END IF;
        RAISE FND_API.G_EXC_ERROR;
   END IF;
--bug 2876703

   --bug 2738747
   IF PA_PROJECT_PUB.G_Published_version_exists = 'Y'
      AND PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'
      AND PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y'
      AND l_str_type /*p_structure_type 3746912*/= 'FINANCIAL'
   THEN
       --Change the flow to WORKPLAN
       l_structure_type := 'WORKPLAN';

   ELSE
       l_structure_type := l_str_type; --p_structure_type  3746912
   END IF;
   --bug 2738747

/* Though it does not matter but for clarity should only be done for Financial
   l_amg_task_number := pa_interface_utils_pub.get_task_number_amg
    (p_task_number=> p_task_name
    ,p_task_reference => p_pm_task_reference
    ,p_task_id => '');
*/

--check for parent task,when no parent task is given,the new task will become a
--top task and a top task can alway be added.
--modified to allow creation of sub-task for a parent not create through AMG
--A non AMG created task could have its pm_parent_task_reference NULL. *O

--project structure
--This validation should be done for only FINANCIAL structrues
--IF p_structure_type = 'FINANCIAL'    bug 2738747
IF l_structure_type = 'FINANCIAL'      --bug 2738747
THEN
--project structure

   l_amg_task_number := pa_interface_utils_pub.get_task_number_amg
    (p_task_number=> p_task_name
    ,p_task_reference => p_pm_task_reference
    ,p_task_id => '');

   IF (p_pa_parent_task_id IS NOT NULL AND p_pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) OR
   (p_pm_parent_task_reference IS NOT NULL AND p_pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
   THEN

     check_add_subtask_ok(    p_api_version_number   => p_api_version_number
                ,p_init_msg_list  => FND_API.G_FALSE
                ,p_msg_data    => p_msg_data
              ,p_msg_count    => p_msg_count
              ,p_return_status  => l_return_status
              ,p_project_id     => l_project_id
              ,p_pm_project_reference  => NULL
              ,p_task_id    => p_pa_parent_task_id
              ,p_pm_task_reference  => p_pm_parent_task_reference
              ,p_add_subtask_ok_flag  => l_add_subtask_ok_flag  );

   END IF;

   IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
   THEN
    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

   ELSIF l_return_status = FND_API.G_RET_STS_ERROR
   THEN

    RAISE FND_API.G_EXC_ERROR;
   END IF;

   IF l_add_subtask_ok_flag <> 'Y'
   then
  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_TASK_CAN_NOT_BE_ADDED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'TASK'
            ,p_attribute1       => l_amg_segment1
            ,p_attribute2       => l_amg_task_number
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;

  RAISE FND_API.G_EXC_ERROR;

   end IF;

END IF;  --<<l_structrue_type = 'FINANCIAL' >>

  -- Bug 3279981. FP_M Changes for customer and invoice method at top task
  -- Validate and set invoice method and customer id for the task
  OPEN  cur_get_proj_billing_info;
  FETCH cur_get_proj_billing_info INTO l_proj_top_task_customer_flag, l_proj_top_task_inv_mth_flag,
                                       l_proj_revenue_acc_method, l_proj_invoice_method, l_proj_type;
  CLOSE cur_get_proj_billing_info;

  IF 'Y' = l_proj_top_task_inv_mth_flag
  AND p_invoice_method IS NOT NULL AND p_invoice_method <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
     IF pa_project_pvt.check_valid_dist_rule
             ( l_proj_type,
               l_proj_revenue_acc_method||'/'||p_invoice_method,
               l_proj_top_task_inv_mth_flag ) = 'N'   THEN
               IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                   pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_INV_TASK_INVOICE_METHOD' -- 4146813 changed error message code
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'TASK'
                      ,p_attribute1       => p_invoice_method
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
               END IF;
               RAISE  FND_API.G_EXC_ERROR;
     ELSE
               l_task_in_rec.invoice_method := p_invoice_method;
     END IF;
  ELSE
       l_task_in_rec.invoice_method := NULL;
  END IF;

  IF 'Y' = l_proj_top_task_customer_flag THEN
  -- If condition is changed for Bug Number 4689326
      IF p_customer_id IS NOT NULL AND p_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
          OPEN  cur_check_proj_cust_exist(p_customer_id);
          FETCH cur_check_proj_cust_exist INTO l_dummy;
          IF cur_check_proj_cust_exist%NOTFOUND THEN
               IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                /*Commented for Bug Number 4689326
                    pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_INVALID_TASK_CUSTOMER'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'TASK'
                      ,p_attribute1       => p_customer_id
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');*/
                   -- Start of Bug Number 4689326
                   OPEN l_cur_customer_name(p_customer_id);
                   FETCH l_cur_customer_name INTO l_customer_name;
                   CLOSE l_cur_customer_name;
                   IF (l_customer_name IS NULL OR l_customer_name =  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
                    -- Checking whether the specified customer exits or not
                     pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_CUSTOMER_NOT_EXIST'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'GENERAL'
                      ,p_attribute1       => ''
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                   ELSE
                        PA_UTILS.ADD_MESSAGE
                              (p_app_short_name => 'PA',
                                p_msg_name       => 'PA_INVALID_PROJECT_CUSTOMER',
                                p_token1         => 'CUSTOMER_NAME',
                                p_value1         =>  l_customer_name
                                );
                   END IF;
                  -- End of Bug Number 4689326.
               END IF;
               CLOSE cur_check_proj_cust_exist;
               RAISE  FND_API.G_EXC_ERROR;
          ELSE
               l_task_in_rec.customer_id := p_customer_id;
               CLOSE cur_check_proj_cust_exist;
          END IF;
      ELSE
       -- Added for Bug Number 4689326
       -- Start of Bug Number 4689326
        IF p_customer_id IS NULL THEN
          pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_INVALID_CUST'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'GENERAL'
                      ,p_attribute1       => ''
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                    RAISE FND_API.G_EXC_ERROR;
        ELSE
          l_task_in_rec.customer_id :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM; -- when the customer_id is Miss Num we are passing Miss num to add_task_roundone.
        END IF;
        -- End of Bug Number 4689326
      END IF;
  ELSE
          l_task_in_rec.customer_id := NULL;
  END IF;

   --Binding the incoming parameters to the local task record
   l_task_in_rec.pm_task_reference    :=  p_pm_task_reference;
   IF p_pa_task_number IS NULL OR
      p_pa_task_number = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
      l_task_in_rec.pa_task_number        :=  p_pm_task_reference;
   ELSE
      l_task_in_rec.pa_task_number        :=  p_pa_task_number;
   END IF;
   l_task_in_rec.pa_task_id      :=  NULL;
   l_task_in_rec.task_name      :=  p_task_name;
  -- l_task_in_rec.long_task_name      :=  p_long_task_name;
/* Commented the above line of code for bug 2982057 and add the below code*/
   IF p_long_task_name IS NULL
    OR p_long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
      l_task_in_rec.long_task_name := p_task_name;
    ELSE
      l_task_in_rec.long_task_name := p_long_task_name;
    END IF;
    /* Code addition for bug 2982057 ends*/
   l_task_in_rec.task_description    :=  p_task_description;
   l_task_in_rec.task_start_date    :=  p_task_start_date;
   l_task_in_rec.task_completion_date    :=  p_task_completion_date;
   l_task_in_rec.pa_parent_task_id              :=      p_pa_parent_task_id; -- Added for Bug2316713
   l_task_in_rec.pm_parent_task_reference  :=  p_pm_parent_task_reference;
   l_task_in_rec.address_id      :=  p_address_id;
   l_task_in_rec.carrying_out_organization_id  :=  p_carrying_out_organization_id;
   l_task_in_rec.service_type_code    :=  p_service_type_code;
   l_task_in_rec.task_manager_person_id    :=  p_task_manager_person_id;
   l_task_in_rec.billable_flag      :=  p_billable_flag;
   l_task_in_rec.chargeable_flag    :=  p_chargeable_flag;
   l_task_in_rec.ready_to_bill_flag    :=  p_ready_to_bill_flag;
   l_task_in_rec.ready_to_distribute_flag  :=  p_ready_to_distribute_flag;
   l_task_in_rec.limit_to_txn_controls_flag  :=  p_limit_to_txn_controls_flag;
   l_task_in_rec.labor_bill_rate_org_id    :=  p_labor_bill_rate_org_id;
   l_task_in_rec.labor_std_bill_rate_schdl  :=  p_labor_std_bill_rate_schdl;
   l_task_in_rec.labor_schedule_fixed_date  :=  p_labor_schedule_fixed_date;
   l_task_in_rec.labor_schedule_discount  :=  p_labor_schedule_discount;
   l_task_in_rec.non_labor_bill_rate_org_id  :=  p_nl_bill_rate_org_id;
   l_task_in_rec.non_labor_std_bill_rate_schdl  :=  p_nl_std_bill_rate_schdl;
   l_task_in_rec.non_labor_schedule_fixed_date  :=  p_nl_schedule_fixed_date;
   l_task_in_rec.non_labor_schedule_discount  :=  p_nl_schedule_discount;
   l_task_in_rec.labor_cost_multiplier_name  :=  p_labor_cost_multiplier_name;
   l_task_in_rec.cost_ind_rate_sch_id    :=  p_cost_ind_rate_sch_id;
   l_task_in_rec.rev_ind_rate_sch_id    :=  p_rev_ind_rate_sch_id;
   l_task_in_rec.inv_ind_rate_sch_id    :=  p_inv_ind_rate_sch_id;
   l_task_in_rec.cost_ind_sch_fixed_date  :=  p_cost_ind_sch_fixed_date;
   l_task_in_rec.rev_ind_sch_fixed_date    :=  p_rev_ind_sch_fixed_date;
   l_task_in_rec.inv_ind_sch_fixed_date    :=  p_inv_ind_sch_fixed_date;
   l_task_in_rec.labor_sch_type      :=  p_labor_sch_type;
   l_task_in_rec.non_labor_sch_type    :=  p_nl_sch_type;
   l_task_in_rec.actual_start_date              :=      p_actual_start_date;
   l_task_in_rec.actual_finish_date             :=      p_actual_finish_date;
   l_task_in_rec.early_start_date               :=      p_early_start_date;
   l_task_in_rec.early_finish_date              :=      p_early_finish_date;
   l_task_in_rec.late_start_date                :=      p_late_start_date;
   l_task_in_rec.late_finish_date               :=      p_late_finish_date;
   l_task_in_rec.scheduled_start_date           :=      p_scheduled_start_date;
   l_task_in_rec.scheduled_finish_date          :=      p_scheduled_finish_date;
   l_task_in_rec.tasks_dff                      :=      p_tasks_dff; --bug 6153503
   l_task_in_rec.attribute_category             :=      p_attribute_category;
   l_task_in_rec.attribute1            :=      p_attribute1;
   l_task_in_rec.attribute2            :=      p_attribute2;
   l_task_in_rec.attribute3            :=      p_attribute3;
   l_task_in_rec.attribute4            :=      p_attribute4;
   l_task_in_rec.attribute5            :=      p_attribute5;
   l_task_in_rec.attribute6            :=      p_attribute6;
   l_task_in_rec.attribute7            :=      p_attribute7;
   l_task_in_rec.attribute8            :=      p_attribute8;
   l_task_in_rec.attribute9            :=      p_attribute9;
   l_task_in_rec.attribute10           :=      p_attribute10;
   --bug 6153503
   l_task_in_rec.attribute11           :=      p_attribute11;
   l_task_in_rec.attribute12           :=      p_attribute12;
   l_task_in_rec.attribute13           :=      p_attribute13;
   l_task_in_rec.attribute14           :=      p_attribute14;
   l_task_in_rec.attribute15           :=      p_attribute15;

   IF l_task_in_rec.tasks_dff = 'Y' THEN
            l_validate_dff          := 'N';
            l_attribute_category     := null;
            l_attribute1             := null;
            l_attribute2             := null;
            l_attribute3             := null;
            l_attribute4             := null;
            l_attribute5             := null;
            l_attribute6             := null;
            l_attribute7             := null;
            l_attribute8             := null;
            l_attribute9             := null;
            l_attribute10            := null;
            l_attribute11            := null;
            l_attribute12            := null;
            l_attribute13            := null;
            l_attribute14            := null;
            l_attribute15            := null;

   ELSIF l_task_in_rec.tasks_dff = 'N' THEN

            l_validate_dff           := 'Y';
            l_attribute_category     := l_task_in_rec.attribute_category;
            l_attribute1             := l_task_in_rec.attribute1;
            l_attribute2             := l_task_in_rec.attribute2;
            l_attribute3             := l_task_in_rec.attribute3;
            l_attribute4             := l_task_in_rec.attribute4;
            l_attribute5             := l_task_in_rec.attribute5;
            l_attribute6             := l_task_in_rec.attribute6;
            l_attribute7             := l_task_in_rec.attribute7;
            l_attribute8             := l_task_in_rec.attribute8;
            l_attribute9             := l_task_in_rec.attribute9;
            l_attribute10            := l_task_in_rec.attribute10;
            l_attribute11            := l_task_in_rec.attribute11;
            l_attribute12            := l_task_in_rec.attribute12;
            l_attribute13            := l_task_in_rec.attribute13;
            l_attribute14            := l_task_in_rec.attribute14;
            l_attribute15            := l_task_in_rec.attribute15;
   END IF;
   --end bug 6153503

   l_task_in_rec.task_type             :=      p_task_type;   -- Added for bug 3086001

  --bug 3281110
  l_task_in_rec.retirement_cost_flag  :=      p_retirement_cost_flag;
  l_task_in_rec.cint_eligible_flag    :=      p_cint_eligible_flag;
  l_task_in_rec.cint_stop_date        :=      p_cint_stop_date;
  --bug 3281110

 -- FP-M Bug # 3301192
 l_task_in_rec.pred_string       :=      p_pred_string;
 l_task_in_rec.pred_delimiter    :=  p_pred_delimiter;

--Added for Bug 6026370
IF p_pa_parent_task_id IS NOT NULL AND p_pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
        OPEN l_default_parent_task_csr( p_pa_parent_task_id );
          FETCH l_default_parent_task_csr
            INTO l_allow_cross_charge_flag,
                 l_cc_process_labor_flag,
                 l_labor_tp_schedule_id,
                 l_labor_tp_fixed_date,
                 l_cc_process_nl_flag,
                 l_nl_tp_schedule_id,
                 l_nl_tp_fixed_date;
           CLOSE l_default_parent_task_csr;
END IF;
-- Changes End for Bug 6026370

-- IC AND  Multi National Currency Changes Starts Here ...
     IF p_allow_cross_charge_flag IS NULL THEN --Added null condition for Bug 6026370

        l_task_in_rec.allow_cross_charge_flag  :=  'N';

     ELSIF p_allow_cross_charge_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
--      l_task_in_rec.allow_cross_charge_flag  :=  'N'; -- Bug 6026370
        l_task_in_rec.allow_cross_charge_flag  :=  l_allow_cross_charge_flag;  -- Bug 6026370

     ELSE
        l_task_in_rec.allow_cross_charge_flag  :=  p_allow_cross_charge_flag;
     END IF;

     l_task_in_rec.project_rate_type  :=  p_project_rate_type;
     l_task_in_rec.project_rate_date  :=  p_project_rate_date;

/*   Commented for Bug 6026370
     IF p_cc_process_labor_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
        l_task_in_rec.cc_process_labor_flag  :=  'N';
     ELSE
        l_task_in_rec.cc_process_labor_flag  :=  p_cc_process_labor_flag;
     END IF;

     IF p_cc_process_nl_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     THEN
        l_task_in_rec.cc_process_nl_flag  :=  'N';
     ELSE
        l_task_in_rec.cc_process_nl_flag  :=  p_cc_process_nl_flag;
     END IF;
*/

-- Added for Bug 6026370
     IF p_cc_process_labor_flag IS NULL THEN
        l_task_in_rec.cc_process_labor_flag := 'N';
        l_labor_tp_schedule_id := NULL;
        l_labor_tp_fixed_date := NULL;
     ELSIF p_cc_process_labor_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
--        l_task_in_rec.cc_process_labor_flag  :=  'N';  -- Bug 6026370
        l_task_in_rec.cc_process_labor_flag  := l_cc_process_labor_flag;  -- Bug 6026370
             ELSE
        l_task_in_rec.cc_process_labor_flag  :=  p_cc_process_labor_flag;
        IF p_cc_process_labor_flag = 'Y' THEN
                IF (p_labor_tp_schedule_id IS NULL OR p_labor_tp_schedule_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN
                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                           pa_interface_utils_pub.map_new_amg_msg
                             ( p_old_message_code => 'PA_TASK_LAB_TP_SCH_MAND'
                              ,p_msg_attribute    => 'CHANGE'
                              ,p_resize_flag      => 'N'
                              ,p_msg_context      => 'TASK'
                              ,p_attribute1       => ''
                              ,p_attribute2       => ''
                              ,p_attribute3       => ''
                              ,p_attribute4       => ''
                              ,p_attribute5       => '');
                        END IF;
                        RAISE  FND_API.G_EXC_ERROR;
                ELSE
                        /*As of now we are not doing the basic validation check for p_labor_tp_schedule_id */
                        l_labor_tp_schedule_id := p_labor_tp_schedule_id;
                        IF p_labor_tp_fixed_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                                l_labor_tp_fixed_date := NULL;
                        ELSE
                                l_labor_tp_fixed_date := p_labor_tp_fixed_date;
                        END IF;
                END IF;
        ELSE
                --- If we pass p_cc_process_labor_flag = 'N' then we will not honor the values passed in
                --  p_labor_tp_schedule_id and p_labor_tp_fixed_date
                l_labor_tp_schedule_id := NULL;
                l_labor_tp_fixed_date := NULL;
        END IF;
     END IF;

-- End Bug 6026370

-- Added for Bug 6026370
     IF p_cc_process_nl_flag IS NULL THEN
        l_task_in_rec.cc_process_nl_flag := 'N';
        l_nl_tp_schedule_id := NULL;
        l_nl_tp_fixed_date := NULL;
     ELSIF p_cc_process_nl_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
--        l_task_in_rec.cc_process_labor_flag  :=  'N';  -- Bug 6026370
        l_task_in_rec.cc_process_nl_flag  := l_cc_process_nl_flag;  -- Bug 6026370
     ELSE
        l_task_in_rec.cc_process_nl_flag  :=  p_cc_process_nl_flag;
        IF p_cc_process_nl_flag = 'Y' THEN
                IF p_nl_tp_schedule_id IS NULL OR p_nl_tp_schedule_id =  PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                           pa_interface_utils_pub.map_new_amg_msg
                             ( p_old_message_code => 'PA_TASK_NL_TP_SCH_MAND'
                              ,p_msg_attribute    => 'CHANGE'
                              ,p_resize_flag      => 'N'
                              ,p_msg_context      => 'TASK'
                              ,p_attribute1       => ''
                              ,p_attribute2       => ''
                              ,p_attribute3       => ''
                              ,p_attribute4       => ''
                              ,p_attribute5       => '');
                        END IF;
                        RAISE  FND_API.G_EXC_ERROR;
                ELSE
                        /*As of now we are not doing the basic validation check for p_nl_tp_schedule_id */
                        l_nl_tp_schedule_id := p_nl_tp_schedule_id;
                        IF p_nl_tp_fixed_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                                l_nl_tp_fixed_date := NULL;
                        ELSE
                                l_nl_tp_fixed_date := p_nl_tp_fixed_date;
                        END IF;
                END IF;
        ELSE
                --- If we pass p_cc_process_nl_flag = 'N' then we will not honor the values passed in
                --  p_nl_tp_schedule_id and p_nl_tp_fixed_date
                l_nl_tp_schedule_id := NULL;
                l_nl_tp_fixed_date := NULL;
        END IF;
     END IF;
-- End Bug 6026370

  --Project Structures
     IF p_ref_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
        l_ref_task_id :=  null;
     ELSE
        l_ref_task_id :=  p_ref_task_id;
     END IF;
  --Project Structures
-- For bug 3280610 Commented the below code and added code for
-- if l_ref_task_id is not passed then we pass parent Task id instead of throwing an error message
--      Bug 3075623 : Added following condition to throw error if no ref task id
--    IF (( (p_pa_parent_task_id IS NOT NULL AND p_pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) OR
--         (p_pm_parent_task_reference IS NOT NULL AND p_pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
--   AND l_ref_task_id is null ) THEN
--       PA_UTILS.ADD_MESSAGE
--         (p_app_short_name => 'PA',
--              p_msg_name       => 'PA_PS_INV_REF_TASK_ID');
--
--       RAISE FND_API.G_EXC_ERROR;
--     END IF;
       IF l_ref_task_id is null THEN

          IF (p_pa_parent_task_id IS NOT NULL AND p_pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN

          l_ref_task_id :=  p_pa_parent_task_id;

          ELSIF (p_pm_parent_task_reference IS NOT NULL AND p_pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN

            --Begin change by rtarway for BUG 3661788, use Convert_pm_taskref_to_id_all  to get task id instead of using l_task_ref_to_id_csr
            --OPEN l_task_ref_to_id_csr(l_project_id,p_pm_parent_task_reference);
            --FETCH l_task_ref_to_id_csr INTO l_ref_task_id;
            PA_PROJECT_PVT.Convert_pm_taskref_to_id_all
            (
                p_pa_project_id        => l_project_id    ,
                p_structure_type       => l_structure_type,
                p_pm_task_reference    => p_pm_parent_task_reference ,
                p_out_task_id          => l_ref_task_id,
                p_return_status        => l_return_status
            );

            --changed by rtarway for BUG 3661788
            --IF l_task_ref_to_id_csr%NOTFOUND
            IF (l_return_status <> 'S')
            THEN
                --rtarway , 3661788, comment close command
                --CLOSE l_task_ref_to_id_csr;
                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN
                 l_amg_task_number := pa_interface_utils_pub.get_task_number_amg
                                          (p_task_number=> p_task_name
                                          ,p_task_reference => p_pm_task_reference
                                          ,p_task_id => '');

                         pa_interface_utils_pub.map_new_amg_msg
                          ( p_old_message_code => 'PA_PARENT_TASK_MISSING'
                           ,p_msg_attribute    => 'CHANGE'
                           ,p_resize_flag      => 'N'
                           ,p_msg_context      => 'TASK'
                           ,p_attribute1       => l_amg_segment1
                           ,p_attribute2       => l_amg_task_number
                           ,p_attribute3       => ''
                           ,p_attribute4       => ''
                           ,p_attribute5       => '');
                END IF;
                RAISE  FND_API.G_EXC_ERROR;
             END IF;
            --rtarway , 3661788, comment close command
            --CLOSE l_task_ref_to_id_csr;
           END IF;
       END IF;
-- End for changes done for bug 3280610

/*Commented for Bug 6026370
  l_task_in_rec.labor_tp_schedule_id  :=  p_labor_tp_schedule_id;
  l_task_in_rec.labor_tp_fixed_date  :=  p_labor_tp_fixed_date;
  l_task_in_rec.nl_tp_schedule_id  :=  p_labor_tp_schedule_id;
  l_task_in_rec.nl_tp_fixed_date  :=  p_labor_tp_fixed_date;*/

--Added for Bug 6026370
  l_task_in_rec.labor_tp_schedule_id  :=  l_labor_tp_schedule_id;
  l_task_in_rec.labor_tp_fixed_date  :=  l_labor_tp_fixed_date;
  l_task_in_rec.nl_tp_schedule_id  :=  l_nl_tp_schedule_id;
  l_task_in_rec.nl_tp_fixed_date  :=  l_nl_tp_fixed_date;
  l_task_in_rec.receive_project_invoice_flag  :=  p_receive_project_invoice_flag;
  l_task_in_rec.work_type_id  :=  p_work_type_id;
  l_task_in_rec.emp_bill_rate_schedule_id  :=  p_emp_bill_rate_schedule_id;
  l_task_in_rec.job_bill_rate_schedule_id  :=  p_job_bill_rate_schedule_id;

-- IC AND  Multi National Currency Changes Ends Here ...

--Sakthi MCB

  l_task_in_rec.non_lab_std_bill_rt_sch_id  :=  p_non_lab_std_bill_rt_sch_id;
  l_task_in_rec.taskfunc_cost_rate_type     :=  p_taskfunc_cost_rate_type;
  l_task_in_rec.taskfunc_cost_rate_date     :=  p_taskfunc_cost_rate_date;

--Sakthi MCB

  l_task_in_rec.labor_disc_reason_code  :=  p_labor_disc_reason_code;
  l_task_in_rec.non_labor_disc_reason_code     :=  p_non_labor_disc_reason_code;

-- (begin venkat) new params for bug #3450684 ------------------------
  l_task_in_rec.ext_act_duration    := p_ext_act_duration;
  l_task_in_rec.ext_remain_duration := p_ext_remain_duration;
  l_task_in_rec.ext_sch_duration    := p_ext_sch_duration;
-- (end venkat) new params for bug #3450684 ---------------------------

-- set the new params - bug #3654243 ----------------------------------------------
      G_tasks_in_tbl(G_tasks_tbl_count).base_percent_comp_deriv_code := p_base_percent_comp_deriv_code;
      G_tasks_in_tbl(G_tasks_tbl_count).sch_tool_tsk_type_code       := p_sch_tool_tsk_type_code;
      G_tasks_in_tbl(G_tasks_tbl_count).constraint_type_code         := p_constraint_type_code;
      G_tasks_in_tbl(G_tasks_tbl_count).constraint_date              := p_constraint_date;
      G_tasks_in_tbl(G_tasks_tbl_count).free_slack                   := p_free_slack;
      G_tasks_in_tbl(G_tasks_tbl_count).total_slack                  := p_total_slack;
      G_tasks_in_tbl(G_tasks_tbl_count).effort_driven_flag           := p_effort_driven_flag;
      G_tasks_in_tbl(G_tasks_tbl_count).level_assignments_flag       := p_level_assignments_flag;
      G_tasks_in_tbl(G_tasks_tbl_count).invoice_method               := p_invoice_method;
      G_tasks_in_tbl(G_tasks_tbl_count).customer_id                  := p_customer_id;
      G_tasks_in_tbl(G_tasks_tbl_count).gen_etc_source_code          := p_gen_etc_source_code;
-- set the new params - bug #3654243 -------------------------------------------------

--Bug 6410745 Changes done to set default value for financial task flag.
    l_shared      := PA_PROJECT_STRUCTURE_UTILS.Check_Sharing_Enabled(l_project_id);
    l_Share_Code  := PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(l_project_id);

    IF l_shared = 'Y'
    THEN
        If l_Share_Code = 'SHARE_PARTIAL' then
           l_financial_task_flag  := NVL(p_financial_task_flag,'N');
        Else
           l_financial_task_flag  := 'Y';
        End If;
    ELSE
        If l_structure_type = 'WORKPLAN' THEN
           l_financial_task_flag := 'N';
        Else
           l_financial_task_flag := 'Y';
        End If;
    End IF;

    IF  l_financial_task_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR   THEN
        PA_UTILS.ADD_MESSAGE('PA', 'PA_AMG_RES_INV_PARAMS',
                              'INVALID_PARAMS', 'FINANCIAL_TASK_FLAG');
        RAISE FND_API.G_EXC_ERROR;
    End If;
--Bug 6410745 End Changes

--Begin Add by rtarway for FP.M Set Financial Task and Mapping
   l_task_in_rec.financial_task_flag := l_financial_task_flag; --Bug 6410745
   l_task_in_rec.mapped_task_id      := p_mapped_task_id;
   l_task_in_rec.mapped_task_reference := p_mapped_task_reference;
--End Add by rtarway For FP.M set financial task and Mapping
--project structure
--FINANCIAL structrues

IF l_structure_type = 'FINANCIAL'    --bug 2738747
THEN
--project structure


   --Inserting a task will be done in 2 steps
   --1> an INSERT step to get a task_id linked to task_reference
   --2> and then an UPDATE step to get the appropriate parent id and toptask id.
   --This second step will also be used to default data from parents to children.

    --get the values associated to the project
    OPEN l_project_csr(l_project_id);
    FETCH l_project_csr INTO l_project_rec;
    CLOSE l_project_csr;

   --get the project_type_class_code and service_code associated to the project_type

   OPEN l_project_type_csr(l_project_rec.project_type);
   FETCH l_project_type_csr INTO l_project_type_rec;
   CLOSE l_project_type_csr;


   --ROUND TRIP 1


  pa_project_pvt.add_task_round_one(p_return_status    => l_return_status
              ,p_project_rec      => l_project_rec
              ,p_task_rec      => l_task_in_rec
              ,p_project_type_class_code  => l_project_type_rec.project_type_class_code
              ,p_service_type_code    => l_project_type_rec.service_type_code
              ,p_task_id      => l_task_id);

  -- assign the return_status to the out parameter
  p_return_status := l_return_status;

--ISSUE
--return the related task Reference as well?


     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
      RAISE FND_API.G_EXC_ERROR;
      END IF;

  --we need to update to pm_product_code because it will be inherited
  --from the project in add_task_round_one

  UPDATE pa_tasks
  SET    pm_product_code   = p_pm_product_code
  WHERE  task_id     = l_task_id;


     --ROUND TRIP 2

  pa_project_pvt.add_task_round_two(p_return_status    => l_return_status
              ,p_project_rec      => l_project_rec
              ,p_task_id      => l_task_id
              ,p_task_rec      => l_task_in_rec
                                         --Project structures
                                         ,p_ref_task_id                 => l_ref_task_id
                                         ,p_tasks_in                    => l_tasks_in
                                         ,p_tasks_out                   => l_tasks_out
                                         ,p_task_version_id             => l_task_version_id
                                         --Project structures
                                         );

  -- assign the return_status to the out parameter
  p_return_status := l_return_status;

     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
      RAISE FND_API.G_EXC_ERROR;
      END IF;
--ELSIF p_structure_type = 'WORKPLAN'
ELSIF l_structure_type = 'WORKPLAN'    --bug 2738747
THEN

    IF G_WP_STR_EXISTS = 'N'
    THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PS_WP_NOT_SEP_FN'
                  ,p_msg_attribute    => 'CHANGE'
                  ,p_resize_flag      => 'N'
                  ,p_msg_context      => 'GENERAL'
                  ,p_attribute1       => ''
                  ,p_attribute2       => ''
                  ,p_attribute3       => ''
                  ,p_attribute4       => ''
                  ,p_attribute5       => '');
        END IF;
        RAISE FND_API.G_EXC_ERROR;
    END IF;

       IF ( p_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
            p_structure_version_id IS NULL  )
       THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
               pa_interface_utils_pub.map_new_amg_msg
                    ( p_old_message_code => 'PA_PS_STRUC_VER_REQ'
                     ,p_msg_attribute    => 'CHANGE'
                     ,p_resize_flag      => 'N'
                     ,p_msg_context      => 'GENERAL'
                     ,p_attribute1       => ''
                     ,p_attribute2       => ''
                     ,p_attribute3       => ''
                     ,p_attribute4       => ''
                     ,p_attribute5       => '');
            END IF;
            RAISE FND_API.G_EXC_ERROR;
        --bug 3098668
        ELSE
            l_str_ver_type := PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(p_structure_version_id,l_structure_type);
            struct_ver_updatable := PA_PROJECT_STRUCTURE_UTILS.is_structure_version_updatable(p_structure_version_id);
            IF (struct_ver_updatable IS NULL OR
                struct_ver_updatable = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR
                struct_ver_updatable = 'N' OR
                NVL( l_str_ver_type, 'N' ) = 'N' )
            THEN
                -- add error message to stack and throw exception
                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN
                    pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_STRUCT_VER_NO_UPDATE'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'GENERAL'
                      ,p_attribute1       => ''
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                END IF;
                RAISE FND_API.G_EXC_ERROR;
            END IF;
            --bug 3098668
        END IF;

-- FP-M Bug # 3301192  --add_task
/*
      PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID(p_pa_project_id => p_pa_project_id
                                              ,p_pm_task_reference => l_task_in_rec.pm_task_reference
                                              ,p_out_task_id => l_d_task_id
                                              ,p_return_status => l_return_status);
*/

      IF (PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS(p_pa_project_id) = 'Y') THEN

        IF l_d_task_id IS NULL AND l_task_in_rec.pm_task_reference IS NOT NULL AND
           l_task_in_rec.pm_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
        THEN

      /* Start commenting out the following code for issue in bug # 3663166.

          PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_all(p_pa_project_id => p_pa_project_id
                                              ,p_pm_task_reference => l_task_in_rec.pm_task_reference
                                              ,p_out_task_id => l_d_task_id
                                              ,p_return_status => l_return_status);

         End commenting out the following code for issue in bug # 3663166.*/


      /* Start adding code for issue in bug # 3663166. */

        l_d_task_id := l_task_id;

      /* End adding code for issue in bug # 3663166.  */

            IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
            THEN
                        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

            ELSIF l_return_status = FND_API.G_RET_STS_ERROR
            THEN
                        RAISE FND_API.G_EXC_ERROR;
            END IF;

        END IF;

        IF p_structure_version_id IS NULL OR p_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
          IF (PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(p_pa_project_id) = 'Y') THEN
                l_d_struct_ver_id := PA_PROJECT_STRUCTURE_UTILS.get_current_working_ver_id(p_pa_project_id);
          ELSE
             l_d_struct_ver_id :=  PA_PROJ_ELEMENTS_UTILS.LATEST_PUBLISHED_VER_ID(p_pa_project_id, 'WORKPLAN');
          END IF;
        ELSE
          l_d_struct_ver_id := p_structure_version_id;
        END IF;

      l_d_task_ver_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID(p_structure_version_id => l_d_struct_ver_id
                                          ,p_task_id => l_d_task_id);

      pa_proj_task_struc_pub.parse_predecessor_import(p_string => l_task_in_rec.pred_string
                                                     ,p_delimeter => l_task_in_rec.pred_delimiter
                                                     ,p_task_version_Id => l_d_task_ver_id
                                                     ,x_return_status => l_return_status
                                                     ,x_msg_count => l_msg_count
                                                     ,x_msg_data  => l_msg_data);

           IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
            THEN
                        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

            ELSIF l_return_status = FND_API.G_RET_STS_ERROR
            THEN
                        RAISE FND_API.G_EXC_ERROR;
            END IF;
            l_d_task_id := null;

     END IF;

             l_task_in_rec.OBLIGATION_START_DATE      := p_OBLIGATION_START_DATE;
             l_task_in_rec.OBLIGATION_FINISH_DATE     := p_OBLIGATION_FINISH_DATE;
             l_task_in_rec.ESTIMATED_START_DATE       := p_ESTIMATED_START_DATE;
             l_task_in_rec.ESTIMATED_FINISH_DATE      := p_ESTIMATED_FINISH_DATE;
             l_task_in_rec.BASELINE_START_DATE        := p_BASELINE_START_DATE;
             l_task_in_rec.BASELINE_FINISH_DATE       := p_BASELINE_FINISH_DATE;
             l_task_in_rec.CLOSED_DATE                := p_CLOSED_DATE;
             l_task_in_rec.WQ_UOM_CODE                := p_WQ_UOM_CODE;
             l_task_in_rec.WQ_ITEM_CODE               := p_WQ_ITEM_CODE;
             l_task_in_rec.STATUS_CODE                := p_STATUS_CODE;
             l_task_in_rec.WF_STATUS_CODE             := p_WF_STATUS_CODE;
             l_task_in_rec.PM_SOURCE_CODE             := p_pm_product_code;
             l_task_in_rec.PRIORITY_CODE              := p_PRIORITY_CODE;
             l_task_in_rec.MILESTONE_FLAG             := p_MILESTONE_FLAG;
             l_task_in_rec.CRITICAL_FLAG              := p_CRITICAL_FLAG;
             l_task_in_rec.INC_PROJ_PROGRESS_FLAG     := p_INC_PROJ_PROGRESS_FLAG;
             l_task_in_rec.LINK_TASK_FLAG             := p_LINK_TASK_FLAG;
             l_task_in_rec.CALENDAR_ID                := p_CALENDAR_ID;
         --Bug No 3802240
             IF ( p_PLANNED_EFFORT = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND p_PLANNED_EFFORT IS NOT NULL )
             THEN
                l_task_in_rec.PLANNED_EFFORT := null;
             ELSE
                l_task_in_rec.PLANNED_EFFORT := p_PLANNED_EFFORT;
             END IF;
       --      l_task_in_rec.PLANNED_EFFORT             := p_PLANNED_EFFORT;    --Bug No 3802240
             l_task_in_rec.DURATION                   := p_DURATION;
             l_task_in_rec.PLANNED_WORK_QUANTITY      := p_PLANNED_WORK_QUANTITY;
             l_task_in_rec.TASK_TYPE                  := p_TASK_TYPE;
             l_task_in_rec.actual_start_date          := p_actual_start_date;
             l_task_in_rec.actual_finish_date         := p_actual_finish_date;
             l_task_in_rec.early_start_date           := p_early_start_date;
             l_task_in_rec.early_finish_date          := p_early_finish_date;
             l_task_in_rec.late_start_date            := p_late_start_date;
             l_task_in_rec.late_finish_date           := p_late_finish_date;
             l_task_in_rec.scheduled_start_date       := p_scheduled_start_date;
             l_task_in_rec.scheduled_finish_date      := p_scheduled_finish_date;
             l_task_in_rec.PM_task_reference        := p_pm_task_reference;

     PA_PROJ_TASK_STRUC_PUB.CREATE_TASK_STRUCTURE(
              p_project_id                   => l_project_id
             ,p_task_id                      => l_task_in_rec.pa_task_id
             ,p_parent_task_id               => l_task_in_rec.pa_parent_task_id
             ,p_ref_task_id                  => l_ref_task_id    --proj conn
             ,p_task_number                  => l_task_in_rec.pa_task_number
             ,p_task_name                    => l_task_in_rec.long_task_name     --bug 2833194
             ,p_task_description             => l_task_in_rec.task_description
             ,p_carrying_out_organization_id => l_task_in_rec.carrying_out_organization_id
             ,p_calling_module               => 'AMG'
             ,p_structure_type               => l_structure_type             --bug 2738747
             ,p_OBLIGATION_START_DATE        => l_task_in_rec.OBLIGATION_START_DATE
             ,p_OBLIGATION_FINISH_DATE       => l_task_in_rec.OBLIGATION_FINISH_DATE
             ,p_ESTIMATED_START_DATE         => l_task_in_rec.ESTIMATED_START_DATE
             ,p_ESTIMATED_FINISH_DATE        => l_task_in_rec.ESTIMATED_FINISH_DATE
             ,p_BASELINE_START_DATE          => l_task_in_rec.BASELINE_START_DATE
             ,p_BASELINE_FINISH_DATE         => l_task_in_rec.BASELINE_FINISH_DATE
             ,p_CLOSED_DATE                  => l_task_in_rec.CLOSED_DATE
             ,p_WQ_UOM_CODE                  => l_task_in_rec.WQ_UOM_CODE
             ,p_WQ_ITEM_CODE                 => l_task_in_rec.WQ_ITEM_CODE
             ,p_STATUS_CODE                  => l_task_in_rec.STATUS_CODE
             ,p_WF_STATUS_CODE               => l_task_in_rec.WF_STATUS_CODE
             ,p_PM_SOURCE_CODE               => l_task_in_rec.PM_source_CODE
             ,p_PRIORITY_CODE                => l_task_in_rec.PRIORITY_CODE
             ,p_MILESTONE_FLAG               => l_task_in_rec.MILESTONE_FLAG
             ,p_CRITICAL_FLAG                => l_task_in_rec.CRITICAL_FLAG
             ,p_INC_PROJ_PROGRESS_FLAG       => l_task_in_rec.INC_PROJ_PROGRESS_FLAG
             ,p_LINK_TASK_FLAG               => l_task_in_rec.LINK_TASK_FLAG
             ,p_CALENDAR_ID                  => l_task_in_rec.CALENDAR_ID
             ,p_PLANNED_EFFORT               => l_task_in_rec.PLANNED_EFFORT
             ,p_DURATION                     => l_task_in_rec.DURATION
             ,p_PLANNED_WORK_QUANTITY        => l_task_in_rec.PLANNED_WORK_QUANTITY
             ,p_TASK_TYPE                    => l_task_in_rec.TASK_TYPE
             ,p_actual_start_date                  => l_task_in_rec.actual_start_date
             ,p_actual_finish_date                 => l_task_in_rec.actual_finish_date
             ,p_early_start_date                   => l_task_in_rec.early_start_date
             ,p_early_finish_date                  => l_task_in_rec.early_finish_date
             ,p_late_start_date                    => l_task_in_rec.late_start_date
             ,p_late_finish_date                   => l_task_in_rec.late_finish_date
             ,p_scheduled_start_date               => l_task_in_rec.scheduled_start_date
             ,p_scheduled_finish_date              => l_task_in_rec.scheduled_finish_date
             ,P_PM_SOURCE_reference                => l_task_in_rec.pm_task_reference
             ,p_location_id                        => l_task_in_rec.address_id
             ,p_manager_person_id                  => l_task_in_rec.task_manager_person_id
             , p_structure_version_id              => p_structure_version_id  --Bug 3098668
-- (Begin venkat) new params for bug #3450684 ----------------------------------------------
             ,p_ext_act_duration                   => l_task_in_rec.ext_act_duration
             ,p_ext_remain_duration                => l_task_in_rec.ext_remain_duration
             ,p_ext_sch_duration                   => l_task_in_rec.ext_sch_duration
-- (End venkat) new params for bug #3450684 -------------------------------------------------
             ,p_financial_task_flag                => l_task_in_rec.financial_task_flag --Bug 4482903
             --bug 6153503
             ,p_validate_dff                       => l_validate_dff
             ,p_attribute_category                 => l_attribute_category
             ,p_attribute1                         => l_attribute1
             ,p_attribute2                         => l_attribute2
             ,p_attribute3                         => l_attribute3
             ,p_attribute4                         => l_attribute4
             ,p_attribute5                         => l_attribute5
             ,p_attribute6                         => l_attribute6
             ,p_attribute7                         => l_attribute7
             ,p_attribute8                         => l_attribute8
             ,p_attribute9                         => l_attribute9
             ,p_attribute10                        => l_attribute10
             ,p_attribute11                        => l_attribute11
             ,p_attribute12                        => l_attribute12
             ,p_attribute13                        => l_attribute13
             ,p_attribute14                        => l_attribute14
             ,p_attribute15                        => l_attribute15
             --end bug 6153503
             ,x_task_version_id                    => l_task_version_id
             ,x_task_id                            => l_task_id
             ,x_msg_count                    => l_msg_count
             ,x_msg_data                     => l_msg_data
             ,x_return_status                => l_return_status
                     );

        p_return_status := l_return_status;

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
                        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
                        RAISE FND_API.G_EXC_ERROR;
        END IF;

END IF; --<< n_structure_type >>

p_task_id      := l_task_id;
p_pa_project_id_out    := l_project_rec.project_id;
p_pa_project_number_out    := l_project_rec.segment1;   --this is the project_number field in PA_PROJECTS

--Begin Add by rtarway FP.M Development
G_PROJECT_SHARING_TYPE := PA_PROJ_TASK_STRUC_PUB.GET_SHARE_TYPE(l_project_id);
IF (G_PROJECT_SHARING_TYPE='SPLIT_MAPPING' AND l_structure_type = 'WORKPLAN' ) THEN
     IF (
         ( l_task_in_rec.mapped_task_id IS NOT NULL AND l_task_in_rec.mapped_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
         OR
         ( l_task_in_rec.mapped_task_reference IS NOT NULL AND l_task_in_rec.mapped_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        )
     THEN

          pa_project_pub.create_mapping
          (
              p_api_version             => p_api_version_number
            , p_init_msg_list           => FND_API.G_FALSE
            , p_commit                  => FND_API.G_FALSE--bug 3766967
            , p_debug_mode              => FND_API.G_TRUE
            , p_project_id              => l_project_id
            , p_proj_source_reference   => null
            , p_wkp_structure_version_id   => p_structure_version_id
            , p_wkp_task_id            => l_task_id--Since the tasks are already created , this will have task Ids
            , px_mapped_task_id        => l_task_in_rec.mapped_task_id
            , p_mapped_task_reference  => l_task_in_rec.mapped_task_reference
            , x_return_status          => l_return_status
            , x_msg_count              => l_msg_count
            , x_msg_data               => l_msg_data

          );
           IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
           THEN
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

           ELSIF l_return_status = FND_API.G_RET_STS_ERROR
           THEN
               RAISE FND_API.G_EXC_ERROR;
           END IF;
     END IF;
END IF;
IF (G_PROJECT_SHARING_TYPE = 'SHARE_PARTIAL' and l_structure_type /*p_structure_type 3746912*/= 'FINANCIAL') THEN
    --Get the task Version Id
    --l_task_version_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID(p_structure_version_id, l_task_id);
    OPEN  c_get_pa_record_version_number ( l_task_version_id  , l_project_id);
    FETCH c_get_pa_record_version_number INTO l_patask_record_version_number;
    CLOSE c_get_pa_record_version_number;
   IF
   (p_financial_task_flag IS NOT NULL AND p_financial_task_flag <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
   THEN
        PA_TASKS_MAINT_PUB.SET_FINANCIAL_FLAG_WRAPPER
         (
            p_api_version               => p_api_version_number
          , p_init_msg_list             => FND_API.G_FALSE
          , p_commit                    => FND_API.G_FALSE--bug 3766967
          , p_calling_module            => 'AMG'
          , p_debug_mode                => FND_API.G_TRUE
          , p_task_version_id           => l_task_version_id
          , p_checked_flag              => p_financial_task_flag
          , p_record_version_number     => l_patask_record_version_number
          , p_project_id                => l_project_id
          , p_published_version_exists  => G_Published_version_exists
          , x_return_status             => l_return_status
          , x_msg_count                 => l_msg_count
          , x_msg_data                  => l_msg_data
        );
           -- Added for 4537865 : Check for Return Status after API call
           IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
           THEN
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

           ELSIF l_return_status = FND_API.G_RET_STS_ERROR
           THEN
               RAISE FND_API.G_EXC_ERROR;
           END IF;
   END IF;
END IF;
--End Add by rtarway FP.M Development

--bug 2732895   --Add_Task

IF ( G_WP_STR_EXISTS = 'Y' AND G_IS_WP_SEPARATE_FROM_FN = 'N' ) OR
   ( G_WP_STR_EXISTS = 'Y' AND G_IS_WP_SEPARATE_FROM_FN = 'Y'
     AND  l_structure_type /*p_structure_type 3746912*/ = 'WORKPLAN' )  --should not call if new task is added to FINANCIAL structure version
THEN

 --bug 2856033

 -- The rollup of dates must be completed before we do
 -- the task weightage calculation.

  PA_PROJ_TASK_STRUC_PUB.rollup_dates(
             p_tasks_in             => l_tasks_out           --null if called for one task
            ,p_task_version_id      => l_task_version_id
            ,p_project_id           => l_project_id
            ,P_structure_version_id => null
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            ,x_return_status        => l_return_status
       );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          RAISE FND_API.G_EXC_ERROR;
        END IF;
   --bug 2856033

  l_task_weight_basis_code := PA_PROGRESS_UTILS.GET_TASK_WEIGHTING_BASIS(p_project_id => p_pa_project_id) ;

  -- PA L Changes 3010538
  -- In new model PA_PROJ_TASK_STRUC_PUB.recalc_task_weightings
  -- needs to be called only when task weight basis code is
  -- MANUAL.
  IF nvl(l_task_weight_basis_code,'-1') = 'MANUAL' THEN

       PA_PROJ_TASK_STRUC_PUB.recalc_task_weightings(
                  p_tasks_in             => l_tasks_out            --null if called for one task
                 ,p_task_version_id      => l_task_version_id
                 ,x_msg_count            => l_msg_count
                 ,x_msg_data             => l_msg_data
                 ,x_return_status        => l_return_status
            );

             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
             THEN
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
             THEN
               RAISE FND_API.G_EXC_ERROR;
             END IF;
  END IF ;
  -- PA L Changes 3010538
END IF;
--bug 2732895

-- This block has been added for the bug 3106457 to derive the structure version id.
declare
cursor cur_str_ver(c_task_version_id pa_proj_element_versions.element_version_id%TYPE)
is
select parent_structure_version_id
  from pa_proj_element_versions
 where element_version_id = c_task_version_id;
begin
     open cur_str_ver(l_task_version_id);
     fetch cur_str_ver into l_structure_version_id;
     close cur_str_ver;
end;

-- PA L Changes 3010538

   IF  ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'N' ) OR
       ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
         PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'  AND
         PA_PROJECT_PUB.G_Published_version_exists = 'N')
   THEN

   /* Starts added for Bug# 7264422 */
   IF (nvl(p_structure_updates_flag, 'Y') = 'N') THEN
      PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG
                      (  p_calling_context       => 'AMG'
                        ,p_project_id            => l_project_id
                        ,p_structure_version_id  => l_structure_version_id
                        ,p_update_wbs_flag       => 'Y'
                        ,x_return_status         => l_return_status
                        ,x_msg_count             => l_msg_count
                        ,x_msg_data              => l_msg_data);

       if l_return_status <> FND_API.G_RET_STS_SUCCESS then
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
       end if;

   ELSE
   /* Ends added for Bug# 7264422 */

   l_update_wbs_flag := PA_PROJECT_STRUCTURE_UTILS.GET_UPDATE_WBS_FLAG(p_project_id => l_project_id -- bug 3106457 p_pa_project_id
                                                                       ,p_structure_version_id => l_structure_version_id); -- bug 3106457 p_structure_version_id ) ;

   IF nvl(l_update_wbs_flag,'N') = 'Y' THEN
        IF p_process_mode = 'ONLINE' THEN

        PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES(p_calling_context      => 'ONLINE_UPDATE'
                                                  ,p_project_id           => l_project_id -- bug 3106457 p_pa_project_id
                                                  ,p_structure_version_id => l_structure_version_id -- bug 3106457 p_structure_version_id
                                                  ,x_return_status        => l_return_status
                                                  ,x_msg_count            => l_msg_count
                                                  ,x_msg_data             => l_msg_data ) ;

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
             THEN
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
             THEN
               RAISE FND_API.G_EXC_ERROR;
        END IF;
        ELSIF p_process_mode = 'CONCURRENT' THEN

        PA_PROJ_TASK_STRUC_PUB. PROCESS_WBS_UPDATES_CONC_WRP(p_calling_context       => 'CONC_UPDATE' -- Bug 6842218 'CON_UPDATE'
                                                            ,p_project_id            => l_project_id -- bug 3106457 p_pa_project_id
                                                            ,p_structure_version_id  => l_structure_version_id -- bug 3106457 p_structure_version_id
                                                            ,x_return_status         => l_return_status
                                                            ,x_msg_count             => l_msg_count
                                                            ,x_msg_data              => l_msg_data ) ;

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
             THEN
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
             THEN
               RAISE FND_API.G_EXC_ERROR;
        END IF;


        END IF ;
     END IF ;
    END IF; /* Added for Bug# 7264422 */
   END IF ;

-- PA L Changes 3010538
  --  Commented by rtarway, for BUG 3661788 and 3665745, Changed If Condition
  --  IF (p_deliverable IS NOT NULL OR p_Deliverable <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN

      -- 3661788 If deliverable id or deliverable reference is passed , validate it and convert deliverable reference
      -- to deliverable id, if required

      IF ( ( p_deliverable_id IS NOT NULL AND p_deliverable_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) OR
           ( p_deliverable IS NOT NULL AND p_deliverable <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) )  THEN

          Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
            ( p_deliverable_reference => p_deliverable
            , p_deliverable_id        => p_deliverable_id
            , p_project_id            => l_project_id
            , p_out_deliverable_id    => l_deliverable_id
            , p_return_status         => l_return_status
          );

          IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR    THEN
             RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_ERROR       THEN
             RAISE FND_API.G_EXC_ERROR;
          END IF;

          -- 3661788 pass validated deliverable id to association api

          pa_project_pub.ASSOCIATE_DLV_TO_TASK (
            p_api_version            => p_api_version_number
          , p_init_msg_list          => p_init_msg_list
          -- 3735792, passing p_commit as false to next level api calls
          , p_commit                 => FND_API.G_FALSE
          , p_debug_mode             => 'Y'
          , p_pm_source_code         => p_pm_product_code
          , p_project_id             => l_project_id
          , p_task_id                => l_task_id
          , p_deliverable_id         => l_deliverable_id -- 3661788 changed from p_deliverable to l_deliverable_id
          , x_return_status          => l_return_status
          , x_msg_count              => l_msg_count
          , x_msg_data               => l_msg_data
          );

          IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR             THEN
                  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_ERROR             THEN
                 RAISE FND_API.G_EXC_ERROR;
          END IF;
      END IF;

IF FND_API.to_boolean( p_commit )
THEN
  COMMIT;
END IF;
--Unset this gloabl variable upon sucessfull completion
G_OP_VALIDATE_FLAG := null;--added by rtarway for bug 4218977

EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO add_task_pub;
  G_OP_VALIDATE_FLAG := null;--added by rtarway for bug 4218977
  p_return_status := FND_API.G_RET_STS_ERROR;

  -- Added for 4537865
  p_pa_project_id_out := NULL ;
  p_pa_project_number_out := NULL ;
  p_task_id := NULL ;
 -- End : 4537865

  FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO add_task_pub;
  G_OP_VALIDATE_FLAG := null;--added by rtarway for bug 4218977
  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  -- Added for 4537865
  p_pa_project_id_out := NULL ;
  p_pa_project_number_out := NULL ;
  p_task_id := NULL ;
 -- End : 4537865

  FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

  WHEN OTHERS THEN
  ROLLBACK TO add_task_pub;
  G_OP_VALIDATE_FLAG := null;--added by rtarway for bug 4218977
  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  -- Added for 4537865
  p_pa_project_id_out := NULL ;
  p_pa_project_number_out := NULL ;
  p_task_id := NULL ;
 -- End : 4537865

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

  FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

END add_task;


-----------------------------------------------------------------------------------------
--Name:               delete_task
--Type:               Procedure
--Description:        This procedure delete a task from a project when this is allowed.
--          It either deletes only this task, and moves the children up, OR
--          it deletes this tasks and all his children, depending on
--          the cascaded_delete_flag.
--
--
--Called subprograms: check_delete_task_ok
--
--
--
--History:
--    21-AUG-1996        L. de Werker    Created
--    06-DEC-1996   L. de Werker   Added locking mechanism.
--
--
PROCEDURE delete_task ( p_api_version_number    IN  NUMBER     := 1.0  -- for bug# 3802319
                       ,p_commit                IN  VARCHAR2   := FND_API.G_FALSE
                       ,p_init_msg_list         IN   VARCHAR2  := FND_API.G_FALSE
                       ,p_msg_count             OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
                       ,p_msg_data              OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
                       ,p_return_status         OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
                       ,p_pm_product_code       IN   VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                       ,p_pm_project_reference  IN   VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                       ,p_pa_project_id         IN   NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                       ,p_pm_task_reference     IN   VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                       ,p_pa_task_id            IN   NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                       ,p_cascaded_delete_flag  IN   VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                       ,p_project_id            OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
                       ,p_task_id               OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
                       ,p_task_version_id       IN   NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                       ,p_structure_type        IN   VARCHAR2   := 'FINANCIAL'
                       ,p_process_mode          IN   VARCHAR2   := 'ONLINE'
		       ,p_structure_updates_flag IN  VARCHAR2   := 'Y'
 )
IS

l_return_status                        VARCHAR2(1); --bug 2471668
l_project_id                           NUMBER;      --bug 2471668
l_structure_type    VARCHAR2(25) := p_structure_type; -- <Bug#2886014/>
l_update_wbs_flag   VARCHAR2(1) ;
l_structure_version_id NUMBER ;

-- Bug 3010538
l_process_code      pa_lookups.lookup_code%TYPE;

l_request_id        pa_proj_elem_ver_structure.conc_request_id%TYPE;

-- Bug 3106457. Obtain the structure version id give the task version id.
cursor cur_str_ver(c_task_version_id pa_proj_element_versions.element_version_id%TYPE)
is
select parent_structure_version_id
  from pa_proj_element_versions
 where element_version_id = c_task_version_id;

-- Begin fix for Bug # 4373055.

l_str_ver_id            NUMBER:= null;
l_conc_request_id       NUMBER := null;
l_message_name  VARCHAR2(30) := null;
l_message_type  VARCHAR2(30) := null;

-- End fix for Bug # 4373055.

BEGIN

          p_return_status := FND_API.G_RET_STS_SUCCESS ; -- 4537865 (Initialize p_return_status to Success)
        --bug 2471668.
        --We need to call this API here toget the corrct project id. This is also
        --called from the private API. But I discussed with Sakthi and he is ok to ca ll this
        --twice once here and second time in private API. The idea is to make the adv anced security changes
        --only in public APIs.

      PA_PROJECT_PVT.Convert_pm_projref_to_id
        (        p_pm_project_reference =>      p_pm_project_reference
                 ,  p_pa_project_id     =>      p_pa_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      l_return_status
        );


      IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN

              RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN
              RAISE  FND_API.G_EXC_ERROR;
      END IF;

     PA_INTERFACE_UTILS_PUB.G_PROJECT_ID := l_project_id;  --bug 2471668 ( in the project context )
     --end of bug 24771668

     IF p_structure_type = 'WORKPLAN'
     THEN
         IF PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( l_project_id ) = 'N'  OR
            PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id ) = 'N'    -- 2876703   --delete_task
         THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
                pa_interface_utils_pub.map_new_amg_msg
                    ( p_old_message_code => 'PA_PS_WP_NOT_SEP_FN'
                  ,p_msg_attribute    => 'CHANGE'
                  ,p_resize_flag      => 'N'
                  ,p_msg_context      => 'GENERAL'
                  ,p_attribute1       => ''
                  ,p_attribute2       => ''
                  ,p_attribute3       => ''
                  ,p_attribute4       => ''
                  ,p_attribute5       => '');
            END IF;
        RAISE FND_API.G_EXC_ERROR;
         END IF;

         IF p_task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
            OR p_task_version_id IS NULL
         THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
                pa_interface_utils_pub.map_new_amg_msg
                    ( p_old_message_code => 'PA_PS_TSK_VER_REQ_WP'
                  ,p_msg_attribute    => 'CHANGE'
                  ,p_resize_flag      => 'N'
                  ,p_msg_context      => 'GENERAL'
                  ,p_attribute1       => ''
                  ,p_attribute2       => ''
                  ,p_attribute3       => ''
                  ,p_attribute4       => ''
                  ,p_attribute5       => '');
            END IF;
            RAISE FND_API.G_EXC_ERROR;
         END IF;

         -- Bug 3106457. Derive the structure version id from the task version id.
         open cur_str_ver(p_task_version_id);
         fetch cur_str_ver into l_structure_version_id;
         close cur_str_ver;

     ELSIF p_structure_type = 'FINANCIAL' THEN -- Obtain the structure version id. Bug 3106457.
          IF p_task_version_id IS NULL
             OR p_task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --bug 3174639
          THEN
              l_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.GET_FIN_STRUC_VER_ID(l_project_id);
          ELSE
              open cur_str_ver(p_task_version_id);
              fetch cur_str_ver into l_structure_version_id;
              close cur_str_ver;
          END IF;
     END IF; --<< p_structure_type >>

   -- <Bug#2886014>
   -- If the following criteria is satisfied,
   -- switch flow to WORKPLAN
   -- i) Workplan is enabled;
   -- ii) Structure is SHARED;
   -- iii) Published version exists;
   G_Published_version_exists := PA_PROJ_TASK_STRUC_PUB.Published_version_exists( l_project_id );
   G_IS_WP_SEPARATE_FROM_FN   := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id );
   G_IS_WP_VERSIONING_ENABLED := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED( l_project_id );

   IF PA_PROJECT_PUB.G_Published_version_exists = 'Y'
      AND PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'
      AND PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y'
      AND p_structure_type = 'FINANCIAL'
   THEN
       --Change the flow to WORKPLAN
       l_structure_type := 'WORKPLAN';
   END IF;
   -- </Bug#2886014>


-- Check for the status of the process before deleting the task.
-- PA L Changes 3010538

IF p_structure_type is not NULL THEN

-- Begin fix for Bug # 4373055.

/*

     l_process_code :=
                       PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_CODE(p_project_id => l_project_id  --Bug 3091798.
                                                                         ,p_structure_type => p_structure_type );

      IF nvl(l_process_code,'-1') = 'WUP' THEN
           l_request_id := PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_ID(p_project_id => l_project_id  -- Bug 3091798
                                                                         ,p_structure_type => p_structure_type );

           PA_UTILS.ADD_MESSAGE
                 (p_app_short_name => 'PA',
--                  p_msg_name       => 'PA_PS_VD_UPDWBS_PRC_INPROC');
                  p_msg_name       => 'PA_PS_UPDWBS_PRC_INPROC_AMG',  -- Bug 3091798. Message includes the request id.
                  p_token1         => 'REQUESTID',
                  p_value1         => l_request_id);

           RAISE FND_API.G_EXC_ERROR;

      ELSIF nvl(l_process_code,'-1') = 'WUE' THEN
           l_request_id := PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_ID(p_project_id => l_project_id  --Bug 3091798
                                                                         ,p_structure_type => p_structure_type );

           PA_UTILS.ADD_MESSAGE
                 (p_app_short_name => 'PA',
--                  p_msg_name       => 'PA_PS_VD_UPD_WBS_PRC_ERR');
                  p_msg_name       => 'PA_PS_UPDWBS_PRC_ERR_AMG',  -- Bug 3091798. Message includes the request id.
                  p_token1         => 'REQUESTID',
                  p_value1         => l_request_id);

          RAISE FND_API.G_EXC_ERROR;

      END IF;

*/

        PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_MSG(
        p_project_id              => l_project_id
        , p_structure_type        => p_structure_type
        , p_structure_version_id  => null
        , p_context               => 'UPDATE_AMG'
        , x_message_name          => l_message_name
        , x_message_type          => l_message_type
        , x_structure_version_id  => l_str_ver_id
        , x_conc_request_id       => l_conc_request_id);


        if l_message_name is not null then

                     PA_UTILS.ADD_MESSAGE(
                     p_app_short_name => 'PA'
                     , p_msg_name       => l_message_name
                     , p_token1         => 'REQUESTID'
                     , p_value1         => l_conc_request_id);

                      RAISE FND_API.G_EXC_ERROR;
        end if;

-- End fix for Bug # 4373055.


END IF ;

/* This is buggy.... Bug 3106457
-- Obtain the structure version id before deleting the task.
-- Bug 3010538
BEGIN
     SELECT parent_structure_version_id
       INTO l_structure_version_id
       FROM pa_proj_element_versions
      WHERE element_version_id = p_task_version_id ;
EXCEPTION
     WHEN NO_DATA_FOUND THEN
     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
END ;
*/

pa_project_pvt.delete_task1
( p_api_version_number => p_api_version_number
 ,p_commit             => FND_API.G_FALSE--bug 3766967
 ,p_init_msg_list      => p_init_msg_list
 ,p_msg_count          => p_msg_count
 ,p_msg_data           => p_msg_data
 ,p_return_status      => p_return_status
 ,p_pm_product_code    => p_pm_product_code
 ,p_pm_project_reference => p_pm_project_reference
 ,p_pa_project_id        => p_pa_project_id
 ,p_pm_task_reference    => p_pm_task_reference
 ,p_pa_task_id           => p_pa_task_id
 ,p_cascaded_delete_flag => p_cascaded_delete_flag
 ,p_project_id           => p_project_id
 ,p_task_id              => p_task_id
 ,p_task_version_id      => p_task_version_id
 ,p_structure_type       => l_structure_type     -- </Bug#2886014>
);

-- PA L Changes 3010538

   IF  ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'N' ) OR
       ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
         PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'  AND
         PA_PROJECT_PUB.G_Published_version_exists = 'N')
   THEN

   -- Fetch the structure version id for the task version id.

   -- PA L Changes 3010538

      -- Bug 7390781
      IF (nvl(p_structure_updates_flag, 'Y') = 'Y') THEN

        l_update_wbs_flag := PA_PROJECT_STRUCTURE_UTILS.GET_UPDATE_WBS_FLAG(p_project_id => l_project_id --Bug 3106457 p_pa_project_id
                                                                     ,p_structure_version_id => l_structure_version_id ) ;

        IF nvl(l_update_wbs_flag,'N') = 'Y' THEN
             IF p_process_mode = 'ONLINE' THEN

             PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES(p_calling_context      => 'ONLINE_UPDATE'
                                                       ,p_project_id           => l_project_id --Bug 3106457 p_pa_project_id
                                                       ,p_structure_version_id => l_structure_version_id
                                                       ,x_return_status        => p_return_status
                                                       ,x_msg_count            => p_msg_count
                                                       ,x_msg_data             => p_msg_data ) ;

             IF p_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF p_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
             END IF;
             ELSIF p_process_mode = 'CONCURRENT' THEN

             PA_PROJ_TASK_STRUC_PUB. PROCESS_WBS_UPDATES_CONC_WRP(p_calling_context => 'CONC_UPDATE'
                                                       ,p_project_id                => l_project_id -- Bug 3106457 p_pa_project_id
                                                       ,p_structure_version_id      => l_structure_version_id
                                                       ,x_return_status             => p_return_status
                                                       ,x_msg_count                 => p_msg_count
                                                       ,x_msg_data                  => p_msg_data ) ;

             IF p_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF p_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
             END IF;


             END IF ;
        END IF ;
      END IF;
   END IF ;

-- PA L Changes 3010538

EXCEPTION
        WHEN FND_API.G_EXC_ERROR
        THEN
        p_return_status := FND_API.G_RET_STS_ERROR;
    p_msg_count := FND_MSG_PUB.count_msg; -- For Bug 4033410

        p_project_id := NULL ; -- 4537865
        p_task_id := NULL; -- 4537865

        WHEN FND_API.G_EXC_UNEXPECTED_ERROR
        THEN

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
    p_msg_count := FND_MSG_PUB.count_msg; -- For Bug 4033410

        p_project_id := NULL ; -- 4537865
        p_task_id := NULL; -- 4537865

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
    p_msg_count := FND_MSG_PUB.count_msg; -- For Bug 4033410

        p_project_id := NULL ; -- 4537865
        p_task_id := NULL; -- 4537865

END delete_task;


--------------------------------------------------------------------------------
--Name:               init_project
--Type:               Procedure
--Description:        This procedure can be used to initialize the global PL/SQL
--          tables that are used by a LOAD/EXECUTE/FETCH cycle.
--
--
--Called subprograms:
--
--
--
--History:
--    16-AUG-1996        L. de Werker    Created
--    30-AUG-1996   L. de Werker   Parameterlist removed.
--    10-JAN-1997   L. de Werker   Changed name from INIT_CREATE_PROJECT to INIT_PROJECT
--
PROCEDURE init_project

IS

BEGIN

    FND_MSG_PUB.Initialize;

--  Initialize global table and record types

    G_project_in_rec       := G_project_in_null_rec;
    G_key_members_in_tbl.delete;
    G_deliverables_in_tbl.delete;
    G_deliverable_actions_in_tbl.delete; --bug 343590
    G_class_categories_in_tbl.delete;     --bug 343590
    G_tasks_in_tbl.delete;
-- anlee org role changes
    G_org_roles_in_tbl.delete;

    G_key_members_tbl_count     := 0;
    G_deliverables_in_tbl_count := 0; --bug 343590
    G_dlvr_actions_in_tbl_count := 0;  --bug 343590
    G_class_categories_tbl_count   := 0;
    G_tasks_tbl_count       := 0;
-- anlee org role changes
    G_org_roles_tbl_count     := 0;

    G_project_out_rec       := G_project_out_null_rec;
    G_tasks_out_tbl.delete;
    --Project Connect 4.0
    G_struc_out_tbl.delete;
    --Project Connect 4.0

-- <EA Extensible Attributes changes>
    G_ext_attr_in_tbl.delete;
    G_ext_attr_tbl_count     := 0;
-- </EA Extensible Attributes changes>
--Bug#3646465. Clear the Task assignment tables.
   PA_TASK_ASSIGNMENTS_PUB.init_task_assignments;
END init_project;


--------------------------------------------------------------------------------
--Name:               load_project
--Type:               Procedure
--Description:        This procedure can be used to move the project related
--          parameters from the client side to a record on the server side
--                    , where it will be used by a LOAD/EXECUTE/FETCH cycle.
--
--Called subprograms:
--
--
--
--History:
--    19-AUG-1996        L. de Werker    Created

--    25-OCT-1996   L. de Werker   p_msg_count and p_msg_data removed from parameterlist
--    28-NOV-1996   L. de Werker   Added 11 parameters for descriptive flexfields
--
--

PROCEDURE load_project
( p_api_version_number    IN  NUMBER
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_return_status    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_pa_project_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pa_project_number    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_project_name    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_long_name      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_created_from_project_id  IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_carrying_out_organization_id IN  NUMBER    :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_public_sector_flag    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_project_status_code    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_description      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_start_date      IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_completion_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_distribution_rule    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_customer_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_relationship_code  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_actual_start_date           IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_actual_finish_date          IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_early_start_date            IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_early_finish_date           IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_late_start_date             IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_late_finish_date            IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_scheduled_start_date        IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_scheduled_finish_date       IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_attribute_category    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute1      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute2      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute3      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute4      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute5      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute6      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute7      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute8      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute9      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_attribute10      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_output_tax_code IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_retention_tax_code IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_project_currency_code IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_allow_cross_charge_flag   IN VARCHAR2 :=
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_project_rate_date  IN  DATE  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_project_rate_type   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cc_process_labor_flag   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_labor_tp_schedule_id    IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_labor_tp_fixed_date     IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_cc_process_nl_flag   IN VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_nl_tp_schedule_id    IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_nl_tp_fixed_date     IN DATE        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_cc_tax_task_id       IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_role_list_id       IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_work_type_id       IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_calendar_id        IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_location_id        IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_probability_member_id   IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_value            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_expected_approval_date       IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_cost_job_group_id  IN NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_bill_job_group_id  IN NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_emp_bill_rate_schedule_id  IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_job_bill_rate_schedule_id  IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
--Sakthi MCB
 ,p_invproc_currency_type   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_revproc_currency_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_project_bil_rate_date_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_project_bil_rate_type        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_project_bil_rate_date        IN DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_project_bil_exchange_rate    IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_projfunc_currency_code      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_projfunc_bil_rate_date_code  IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_projfunc_bil_rate_type       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_projfunc_bil_rate_date       IN DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_projfunc_bil_exchange_rate   IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_funding_rate_date_code  IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_funding_rate_type       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_funding_rate_date       IN DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_funding_exchange_rate   IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_baseline_funding_flag        IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_multi_currency_billing_flag  IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_competence_match_wt          IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_availability_match_wt        IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_job_level_match_wt           IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_enable_automated_search      IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_search_min_availability      IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_search_org_hier_id           IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_search_starting_org_id       IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_search_country_id            IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_min_cand_score_reqd_for_nom  IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_max_num_of_sys_nom_cand      IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_non_lab_std_bill_rt_sch_id   IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_search_country_code          IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_inv_by_bill_trans_curr_flag  IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_projfunc_cost_rate_type      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_projfunc_cost_rate_date      IN DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
--Sakthi MCB
--Sakthi Structure
 ,p_assign_precedes_task            IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_split_cost_from_wokplan_flag   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_split_cost_from_bill_flag       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--Sakthi Structure
--Advertisement
 ,p_adv_action_set_id              IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_start_adv_action_set_flag      IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--Advertisement
--Project Setup
 ,p_priority_code                  IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--Project Setup
--Retention
 ,p_retn_billing_inv_format_id     IN NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_retn_accounting_flag           IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--Retention
-- anlee opportunity changes
 ,p_opp_value_currency_code        VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- anlee
-- patchset K changes
 ,p_revaluate_funding_flag         VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_include_gains_losses_flag    VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- msundare
 ,p_security_level               IN NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_labor_disc_reason_code       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_non_labor_disc_reason_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- End of changes
--PA L changes -- bug 2872708   --load_project
 ,p_asset_allocation_method       VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_capital_event_processing      VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cint_rate_sch_id              NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_cint_eligible_flag            VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cint_stop_date                DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
--end PA L changes -- bug 2872708
-- car changes
 ,p_bill_To_Customer_id          NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug 3728734
 ,p_ship_To_Customer_id          NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug 3728734
-- car changes
-- PA L Changes 3010538
 ,p_process_mode                 VARCHAR2  :='ONLINE'
 -- FP M changes begin (venkat)
 ,p_sys_program_flag            IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 , p_allow_multi_program_rollup	IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR -- Bug # 5072032.
 ,p_enable_top_task_cust_flag        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_enable_top_task_inv_mth_flag    IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_projfunc_attr_for_ar_flag       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes end (venkat)
 ,p_ar_rec_notify_flag              IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR  -- 7508661 : EnC
 ,p_auto_release_pwp_inv            IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR  -- 7508661 : EnC
)

IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_project';


BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_project_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

-- assign incoming parameters to the fields of global project record

    G_project_in_rec.pa_project_id      := p_pa_project_id;
    G_project_in_rec.pa_project_number      := p_pa_project_number;
    --    G_project_in_rec.pm_project_reference     := p_pm_project_reference;
    G_project_in_rec.pm_project_reference     := substrb(p_pm_project_reference,1,25); -- modified for bug 4998328
    G_project_in_rec.project_name      := p_project_name;
    G_project_in_rec.long_name        := p_long_name;
    G_project_in_rec.created_from_project_id    := p_created_from_project_id;
    G_project_in_rec.carrying_out_organization_id   := p_carrying_out_organization_id;
    G_project_in_rec.public_sector_flag      := p_public_sector_flag;
    G_project_in_rec.project_status_code    := p_project_status_code;
    G_project_in_rec.description      := p_description;
    G_project_in_rec.start_date        := p_start_date;
    G_project_in_rec.completion_date      := p_completion_date;
    G_project_in_rec.distribution_rule      := p_distribution_rule;
    G_project_in_rec.customer_id      := p_customer_id;
    G_project_in_rec.project_relationship_code     := p_project_relationship_code;
    G_project_in_rec.actual_start_date                  := p_actual_start_date;
    G_project_in_rec.actual_finish_date                 := p_actual_finish_date;
    G_project_in_rec.early_start_date                   := p_early_start_date;
    G_project_in_rec.early_finish_date                  := p_early_finish_date;
    G_project_in_rec.late_start_date                    := p_late_start_date;
    G_project_in_rec.late_finish_date                   := p_late_finish_date;
    G_project_in_rec.scheduled_start_date               :=
                     p_scheduled_start_date;
    G_project_in_rec.scheduled_finish_date              :=
                   p_scheduled_finish_date;
    G_project_in_rec.attribute_category                 := p_attribute_category;
    G_project_in_rec.attribute1              := p_attribute1;
    G_project_in_rec.attribute2              := p_attribute2;
    G_project_in_rec.attribute3              := p_attribute3;
    G_project_in_rec.attribute4              := p_attribute4;
    G_project_in_rec.attribute5              := p_attribute5;
    G_project_in_rec.attribute6              := p_attribute6;
    G_project_in_rec.attribute7              := p_attribute7;
    G_project_in_rec.attribute8              := p_attribute8;
    G_project_in_rec.attribute9              := p_attribute9;
    G_project_in_rec.attribute10      := p_attribute10;

-- Tax Code Changes starts ...

    G_project_in_rec.output_tax_code   := p_output_tax_code;
    G_project_in_rec.output_tax_code   := p_retention_tax_code;

-- IC and Multi National Currency changes Starts ...

    G_project_in_rec.project_currency_code   := p_project_currency_code;
    G_project_in_rec.allow_cross_charge_flag := p_allow_cross_charge_flag;
    G_project_in_rec.project_rate_date := p_project_rate_date;
    G_project_in_rec.project_rate_type := p_project_rate_type;

    G_project_in_rec.cc_process_labor_flag := p_cc_process_labor_flag;
    G_project_in_rec.labor_tp_schedule_id := p_labor_tp_schedule_id;
    G_project_in_rec.labor_tp_fixed_date := p_labor_tp_fixed_date;
    G_project_in_rec.cc_process_nl_flag := p_cc_process_nl_flag;
    G_project_in_rec.nl_tp_schedule_id := p_nl_tp_schedule_id;
    G_project_in_rec.nl_tp_fixed_date := p_nl_tp_fixed_date;
    G_project_in_rec.cc_tax_task_id := p_cc_tax_task_id;

-- IC and Multi National Currency changes Ends ...

-- ORM Code change starts here ...

    G_project_in_rec.role_list_id   := p_role_list_id;
    G_project_in_rec.work_type_id   := p_work_type_id;
    G_project_in_rec.calendar_id    := p_calendar_id;
    G_project_in_rec.probability_member_id    := p_probability_member_id;
    G_project_in_rec.project_value            := p_project_value;
    G_project_in_rec.expected_approval_date   := p_expected_approval_date;
    G_project_in_rec.cost_job_group_id   := p_cost_job_group_id;
    G_project_in_rec.bill_job_group_id   := p_bill_job_group_id;

-- ORM Code change ends here ...

    G_project_in_rec.emp_bill_rate_schedule_id   := p_emp_bill_rate_schedule_id;
    G_project_in_rec.job_bill_rate_schedule_id   := p_job_bill_rate_schedule_id;

--Sakthi MCB
    G_project_in_rec.competence_match_wt   := p_competence_match_wt;
    G_project_in_rec.availability_match_wt   := p_availability_match_wt;
    G_project_in_rec.job_level_match_wt   := p_job_level_match_wt;
    G_project_in_rec.enable_automated_search   := p_enable_automated_search;
    G_project_in_rec.search_min_availability   := p_search_min_availability;
    G_project_in_rec.search_org_hier_id   := p_search_org_hier_id;
    G_project_in_rec.search_starting_org_id   := p_search_starting_org_id;
    G_project_in_rec.search_country_code   := p_search_country_code;
    G_project_in_rec.min_cand_score_reqd_for_nom   := p_min_cand_score_reqd_for_nom;
    G_project_in_rec.non_lab_std_bill_rt_sch_id   := p_non_lab_std_bill_rt_sch_id;
    G_project_in_rec.invproc_currency_type   := p_invproc_currency_type;
    G_project_in_rec.revproc_currency_code   := p_revproc_currency_code;
    G_project_in_rec.project_bil_rate_date_code   := p_project_bil_rate_date_code;
    G_project_in_rec.project_bil_rate_type   := p_project_bil_rate_type;
    G_project_in_rec.project_bil_rate_date   := p_project_bil_rate_date;
    G_project_in_rec.project_bil_exchange_rate   := p_project_bil_exchange_rate;
    G_project_in_rec.projfunc_currency_code   := p_projfunc_currency_code;
    G_project_in_rec.projfunc_bil_rate_date_code   := p_projfunc_bil_rate_date_code;
    G_project_in_rec.projfunc_bil_rate_type   := p_projfunc_bil_rate_type;
    G_project_in_rec.projfunc_bil_rate_date   := p_projfunc_bil_rate_date;
    G_project_in_rec.projfunc_bil_exchange_rate   := p_projfunc_bil_exchange_rate;
    G_project_in_rec.funding_rate_date_code   := p_funding_rate_date_code;
    G_project_in_rec.funding_rate_type   := p_funding_rate_type;
    G_project_in_rec.funding_rate_date   := p_funding_rate_date;
    G_project_in_rec.funding_exchange_rate   := p_funding_exchange_rate;
    G_project_in_rec.baseline_funding_flag   := p_baseline_funding_flag;
    G_project_in_rec.projfunc_cost_rate_type   := p_projfunc_cost_rate_type;
    G_project_in_rec.projfunc_cost_rate_date   := p_projfunc_cost_rate_date;
    G_project_in_rec.inv_by_bill_trans_curr_flag   := p_inv_by_bill_trans_curr_flag;
    G_project_in_rec.multi_currency_billing_flag   := p_multi_currency_billing_flag;
--Sakthi MCB
--Sakthi Structure
   G_project_in_rec.assign_precedes_task            := p_assign_precedes_task;
   G_project_in_rec.split_cost_from_workplan_flag   := p_split_cost_from_wokplan_flag;
   G_project_in_rec.split_cost_from_bill_flag       := p_split_cost_from_bill_flag;
--Sakthi Structure
--Advertisement
  G_project_in_rec.adv_action_set_id            := p_adv_action_set_id;
  G_project_in_rec.start_adv_action_set_flag    := p_start_adv_action_set_flag;
--Advertisement
--Project Setup
  G_project_in_rec.priority_code                := p_priority_code;
--Project Setup
--Retention
  G_project_in_rec.retn_billing_inv_format_id   := p_retn_billing_inv_format_id;
  G_project_in_rec.retn_accounting_flag         := p_retn_accounting_flag;
--Retention

-- anlee opportunity changes
  G_project_in_rec.opp_value_currency_code      := p_opp_value_currency_code;

-- anlee
-- patchset K changes
  G_project_in_rec.revaluate_funding_flag       := p_revaluate_funding_flag;
  G_project_in_rec.include_gains_losses_flag  := p_include_gains_losses_flag;
-- msundare
  G_project_in_rec.security_level := p_security_level;
  G_project_in_rec.labor_disc_reason_code := p_labor_disc_reason_code;
  G_project_in_rec.non_labor_disc_reason_code := p_non_labor_disc_reason_code;
-- End of changes

--PA L Changes 2872708
  G_project_in_rec.asset_allocation_method := p_asset_allocation_method;
  G_project_in_rec.capital_event_processing := p_capital_event_processing;
  G_project_in_rec.cint_rate_sch_id := p_cint_rate_sch_id;
  G_project_in_rec.cint_eligible_flag := p_cint_eligible_flag;
  G_project_in_rec.cint_stop_date := p_cint_stop_date;
--PA L Changes 2872708

--CAR changes: bug 2943284
  G_project_in_rec.Bill_to_customer_id :=P_bill_to_customer_id;
  G_project_in_rec.Ship_to_customer_id :=P_Ship_To_customer_id;

-- PA L Changes 3010538
G_project_in_rec.process_mode :=p_process_mode ;

-- FP_M changes begin (venkat)
  G_project_in_rec.sys_program_flag  := p_sys_program_flag;
  G_project_in_rec.allow_multi_program_rollup := p_allow_multi_program_rollup; -- Bug # 5072032.

-- FP_M changes end (venkat)
     --Bug 3279981. FP_M Project setup changes
     G_project_in_rec.enable_top_task_customer_flag := p_enable_top_task_cust_flag ;
     G_project_in_rec.enable_top_task_inv_mth_flag  := p_enable_top_task_inv_mth_flag ;
     --Bug 3279981. FP_M Project setup changes
     G_project_in_rec.ar_rec_notify_flag    := p_ar_rec_notify_flag ;
     G_project_in_rec.auto_release_pwp_inv  := p_auto_release_pwp_inv ;

EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO load_project_pub;

  p_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO load_project_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
  ROLLBACK TO load_project_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;


END load_project;


--------------------------------------------------------------------------------
--Name:               load_key_member
--Type:               Procedure
--Description:        This procedure can be used to move a key member
--           from the client side to a PL/SQL table on the server side
--                    , where it will be used by a LOAD/EXECUTE/FETCH cycle.
--
--Called subprograms:
--
--
--
--History:
--    19-AUG-1996        L. de Werker    Created
--    25-OCT-1996   L. de Werker   p_msg_count and p_msg_data removed from parameterlist
--

PROCEDURE load_key_member
( p_api_version_number    IN  NUMBER
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_return_status    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_person_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_role_type    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_project_role_meaning IN VARCHAR2:= PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR -- Added for Bug 6408593
 ,p_start_date      IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_end_date      IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE  )

IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_key_member';
   i            NUMBER;


BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_key_member_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME       )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

-- Load the table only if a valid person id is passed

 IF (p_person_id <>  PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) AND
      (p_person_id IS NOT NULL) THEN

-- assign a value to the global counter for this table
    G_key_members_tbl_count  := G_key_members_tbl_count + 1;
-- assign incoming parameters to the global table fields
    G_key_members_in_tbl(G_key_members_tbl_count).person_id  := p_person_id;
    G_key_members_in_tbl(G_key_members_tbl_count).project_role_type
             := p_project_role_type;
    G_key_members_in_tbl(G_key_members_tbl_count).project_role_meaning
             := p_project_role_meaning;   --Added for bug 6408593
    G_key_members_in_tbl(G_key_members_tbl_count).start_date  := p_start_date;
    G_key_members_in_tbl(G_key_members_tbl_count).end_date    := p_end_date;

END IF;


EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO load_key_member_pub;

  p_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO load_key_member_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
  ROLLBACK TO load_key_member_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;


END load_key_member;


-- anlee org role changes
--------------------------------------------------------------------------------
--Name:               load_org_role
--Type:               Procedure
--Description:        This procedure can be used to move an org role
--           from the client side to a PL/SQL table on the server side
--                    , where it will be used by a LOAD/EXECUTE/FETCH cycle.
--
--Called subprograms:
--
--
--
--History:
--    20-MAR-2002        anlee    Created

PROCEDURE load_org_role
( p_api_version_number    IN  NUMBER
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_return_status    OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_resource_source_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_role_type    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_start_date      IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_end_date      IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE  )

IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_org_role';
   i            NUMBER;


BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_org_role_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME       )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

-- Load the table only if a valid resource source id is passed

 IF (p_resource_source_id <>  PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) AND
      (p_resource_source_id IS NOT NULL) THEN

-- assign a value to the global counter for this table
    G_org_roles_tbl_count  := G_org_roles_tbl_count + 1;
-- assign incoming parameters to the global table fields
    G_org_roles_in_tbl(G_org_roles_tbl_count).person_id  := p_resource_source_id;
    G_org_roles_in_tbl(G_org_roles_tbl_count).project_role_type
             := p_project_role_type;
    G_org_roles_in_tbl(G_org_roles_tbl_count).start_date  := p_start_date;
    G_org_roles_in_tbl(G_org_roles_tbl_count).end_date    := p_end_date;

END IF;


EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO load_org_role_pub;

  p_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO load_org_role_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
  ROLLBACK TO load_org_role_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;


END load_org_role;



--------------------------------------------------------------------------------
--Name:               load_class_category
--Type:               Procedure
--Description:        This procedure can be used to move a class category
--           from the client side to a PL/SQL table on the server side
--                    , where it will be used by a LOAD/EXECUTE/FETCH cycle.
--
--Called subprograms:
--
--
--
--History:
--    19-AUG-1996        L. de Werker    Created
--    25-OCT-1996   L. de Werker   p_msg_count and p_msg_data removed from parameterlist
--

PROCEDURE load_class_category
( p_api_version_number    IN  NUMBER
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_return_status    OUT  NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_class_category    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_class_code      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_new_class_code  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR   -- Added for Bug 7028230
 ,p_code_percentage             IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  )

IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_class_categories';
   i            NUMBER;
   l_code_percentage           NUMBER;
   l_new_class_code          VARCHAR2(30); -- Added for Bug 7028230

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_class_category_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

-- Load the table only if a valid class category id is passed

IF (p_class_category <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) AND
   (p_class_category IS NOT NULL )
AND (p_class_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) AND
    (p_class_code IS NOT NULL ) THEN

--  assign a value to the global counter for this table
    G_class_categories_tbl_count  := G_class_categories_tbl_count + 1;

    if p_code_percentage = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_code_percentage := NULL;
    else
      l_code_percentage := p_code_percentage;
    end if;

    /* Added for Bug 7028230 */
    if p_new_class_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_code_percentage := NULL;
    else
      l_new_class_code := p_new_class_code;
    end if;

--  assign incoming parameters to the global table fields
    G_class_categories_in_tbl(G_class_categories_tbl_count).class_category
    := p_class_category;
    G_class_categories_in_tbl(G_class_categories_tbl_count).class_code
    := p_class_code;
    G_class_categories_in_tbl(G_class_categories_tbl_count).code_percentage
    := l_code_percentage;
    /* Added for Bug 7028230 */
    G_class_categories_in_tbl(G_class_categories_tbl_count).new_class_code := l_new_class_code;

END IF;


EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO load_class_category_pub;

  p_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO load_class_category_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
  ROLLBACK TO load_class_category_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

END load_class_category;

--------------------------------------------------------------------------------
--Name:               load_task
--Type:               Procedure
--Description:        This procedure can be used to move a task
--           from the client side to a PL/SQL table on the server side
--                    , where it will be used by a LOAD/EXECUTE/FETCH cycle.
--
--Called subprograms:
--
--
--
--History:
--    19-AUG-1996        L. de Werker    Created
--    25-OCT-1996   L. de Werker   p_msg_count and p_msg_data removed from parameterlist
--    28-NOV-1996   L. de Werker   Added 11 parameters for descriptive flexfields
--    10-DEC-1996   L. de Werker    Added parameter p_pa_parent_task_id
--           Added parameter p_address_id
--     15-JUL-2003  sramesh       Commented a code for bug 2982057
--          22-JAN-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to add parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days to tasks and create dependencies.
--          10-FEB-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to replace parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days with parameters: pred_string and pred_delimiter.
--    19-FEB-2004 Rakesh Raghavan      Modifications for Bug # 3379677 to fix: PA_PROJECT_PUB.LOAD_TASK.
--    05-APR-2004 Rakesh Raghavan      Progress Management Changes. Bug # 3420093.

PROCEDURE load_task
(  p_api_version_number      IN  NUMBER
  ,p_init_msg_list      IN  VARCHAR2  := FND_API.G_FALSE
  ,p_return_status      OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
  ,p_pm_task_reference      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_pa_task_id                         IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_task_name        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_long_task_name      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_pa_task_number           IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_task_description      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_task_start_date      IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_task_completion_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_pm_parent_task_reference    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_pa_parent_task_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_address_id        IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_carrying_out_organization_id  IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_service_type_code      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_task_manager_person_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_billable_flag      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_chargeable_flag      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_ready_to_bill_flag      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_ready_to_distribute_flag    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_limit_to_txn_controls_flag    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_labor_bill_rate_org_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_labor_std_bill_rate_schdl    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_labor_schedule_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_labor_schedule_discount    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_nl_bill_rate_org_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_nl_std_bill_rate_schdl    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_nl_schedule_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_nl_schedule_discount    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_labor_cost_multiplier_name    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_cost_ind_rate_sch_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_rev_ind_rate_sch_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_inv_ind_rate_sch_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_cost_ind_sch_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_rev_ind_sch_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_inv_ind_sch_fixed_date    IN  DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_labor_sch_type      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_nl_sch_type      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 , p_actual_start_date                  IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 , p_actual_finish_date                 IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 , p_early_start_date                   IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 , p_early_finish_date                  IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 , p_late_start_date                    IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 , p_late_finish_date                   IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 , p_scheduled_start_date               IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 , p_scheduled_finish_date              IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_tasks_dff                    IN VARCHAR2    := 'N' --bug 6153503
  ,p_attribute_category      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute1        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute2        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute3        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute4        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute5        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute6        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute7        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute8        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute9        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute10      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  --bug 6153503
  ,p_attribute11             IN  VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute12             IN  VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute13             IN  VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute14             IN  VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_attribute15             IN  VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  --end bug 6153503
  ,p_allow_cross_charge_flag        IN VARCHAR2 :=
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_project_rate_date        IN DATE  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_project_rate_type        IN VARCHAR2 :=
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cc_process_labor_flag   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_labor_tp_schedule_id    IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_labor_tp_fixed_date     IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_cc_process_nl_flag   IN VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_nl_tp_schedule_id    IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_nl_tp_fixed_date     IN DATE        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_receive_project_invoice_flag IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_work_type_id    IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_emp_bill_rate_schedule_id  IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_job_bill_rate_schedule_id  IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
--Sakthi  MCB
 ,p_non_lab_std_bill_rt_sch_id  IN NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_taskfunc_cost_rate_type     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_taskfunc_cost_rate_date     IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
--Sakthi  MCB
 ,p_display_sequence    IN NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_wbs_level            IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
--Project Structure
 ,P_OBLIGATION_START_DATE              IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_OBLIGATION_FINISH_DATE             IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_ESTIMATED_START_DATE               IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_ESTIMATED_FINISH_DATE              IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_BASELINE_START_DATE                IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_BASELINE_FINISH_DATE               IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_CLOSED_DATE                        IN DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_WQ_UOM_CODE                        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_WQ_ITEM_CODE                       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_STATUS_CODE                        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_WF_STATUS_CODE                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_PM_SOURCE_CODE                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_PRIORITY_CODE                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_MILESTONE_FLAG                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_CRITICAL_FLAG                      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_INC_PROJ_PROGRESS_FLAG             IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_LINK_TASK_FLAG                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_CALENDAR_ID                        IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_PLANNED_EFFORT                     IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_DURATION                           IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_PLANNED_WORK_QUANTITY              IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_TASK_TYPE                          IN NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
--Project Structure
 ,p_labor_disc_reason_code       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_non_labor_disc_reason_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--PA L changes -- bug 2872708
 ,p_retirement_cost_flag          VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cint_eligible_flag            VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_cint_stop_date                DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
--end PA L changes -- bug 2872708
-- FP-M Bug # 3301192
 ,p_pred_string                   VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- ,p_pred_delimiter                     VARCHAR2    DEFAULT ','
 ,p_pred_delimiter                IN VARCHAR2   :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes begin (venkat)
  ,p_base_percent_comp_deriv_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_sch_tool_tsk_type_code     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_type_code       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_date            IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_free_slack             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_total_slack            IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_effort_driven_flag         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_level_assignments_flag     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_invoice_method         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_customer_id            IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_gen_etc_source_code        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes end (venkat)
-- FP M changes start (Mapping )
  ,p_financial_task_flag        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_mapped_task_id             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_mapped_task_reference      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes end (Mapping )
  ,p_deliverable                IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_deliverable_id             IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- 3661788 Added IN parameter
-- (begin venkat) new params for bug #3450684 --------------------------------------
  ,p_ext_act_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
  ,p_ext_remain_duration         IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
  ,p_ext_sch_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
-- (end venkat) new params for bug #3450684 ----------------------------------------

-- Progress Management Changes. Bug # 3420093.
  ,p_etc_effort                 IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_percent_complete           IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
-- Progress Management Changes. Bug # 3420093.

)
IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_task';
   i            NUMBER;


BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_task_pub;

--  Standard call to check for call compatibility.

     IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;


--  assign a value to the global counter for this table
    G_tasks_tbl_count  := G_tasks_tbl_count + 1;


--  assign incoming parameters to the global table fields
--!!not needed G_tasks_in_tbl(G_tasks_tbl_count).pm_project_reference  :=  p_pm_project_reference;
    G_tasks_in_tbl(G_tasks_tbl_count).pm_task_reference      :=  p_pm_task_reference;
--  Modifications for Bug # 3379677 to fix: PA_PROJECT_PUB.LOAD_TASK.
    G_tasks_in_tbl(G_tasks_tbl_count).task_name        :=  substrb(p_task_name,1,240); --Bug 6193314
--bug 2874207
/*  Commented the code for bug 2982057 and handling it in create_project and update_project
    IF p_long_task_name IS NULL OR p_long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
        G_tasks_in_tbl(G_tasks_tbl_count).long_task_name            := p_task_name;
    ELSE
*/
--As part of bug 2982057, there were changes done in create_proejct, update project apis which
--copies the long task name from this global variable. If user passes long_task_name
--then we need the following line be uncommented.

    G_tasks_in_tbl(G_tasks_tbl_count).long_task_name            := p_long_task_name;

--    END IF;
--bug 2874207
--  Modifications for Bug # 3379677 to fix: PA_PROJECT_PUB.LOAD_TASK

   G_tasks_in_tbl(G_tasks_tbl_count).pa_task_number      := substrb(p_pa_task_number,1,100); --Bug 6193314



    G_tasks_in_tbl(G_tasks_tbl_count).task_description      :=  substrb(p_task_description,1,250); -- Fix for Bug # 4513291.
    G_tasks_in_tbl(G_tasks_tbl_count).task_start_date      :=  p_task_start_date;
    G_tasks_in_tbl(G_tasks_tbl_count).task_completion_date    :=  p_task_completion_date;
    G_tasks_in_tbl(G_tasks_tbl_count).pm_parent_task_reference    :=  p_pm_parent_task_reference;
    G_tasks_in_tbl(G_tasks_tbl_count).pa_parent_task_id      :=   p_pa_parent_task_id;
    G_tasks_in_tbl(G_tasks_tbl_count).address_id      :=  p_address_id;
    G_tasks_in_tbl(G_tasks_tbl_count).carrying_out_organization_id  :=  p_carrying_out_organization_id;
    G_tasks_in_tbl(G_tasks_tbl_count).service_type_code      :=  p_service_type_code;
    G_tasks_in_tbl(G_tasks_tbl_count).task_manager_person_id    :=  p_task_manager_person_id;
    G_tasks_in_tbl(G_tasks_tbl_count).billable_flag      :=  p_billable_flag;
    G_tasks_in_tbl(G_tasks_tbl_count).chargeable_flag      :=  p_chargeable_flag;
    G_tasks_in_tbl(G_tasks_tbl_count).ready_to_bill_flag    :=  p_ready_to_bill_flag;
    G_tasks_in_tbl(G_tasks_tbl_count).ready_to_distribute_flag    :=  p_ready_to_distribute_flag;
    G_tasks_in_tbl(G_tasks_tbl_count).limit_to_txn_controls_flag  :=  p_limit_to_txn_controls_flag;
    G_tasks_in_tbl(G_tasks_tbl_count).labor_bill_rate_org_id    :=  p_labor_bill_rate_org_id;
    G_tasks_in_tbl(G_tasks_tbl_count).labor_std_bill_rate_schdl    :=  p_labor_std_bill_rate_schdl;
    G_tasks_in_tbl(G_tasks_tbl_count).labor_schedule_fixed_date    :=  p_labor_schedule_fixed_date;
    G_tasks_in_tbl(G_tasks_tbl_count).labor_schedule_discount    :=  p_labor_schedule_discount;
    G_tasks_in_tbl(G_tasks_tbl_count).non_labor_bill_rate_org_id  :=  p_nl_bill_rate_org_id;
    G_tasks_in_tbl(G_tasks_tbl_count).non_labor_std_bill_rate_schdl  :=  p_nl_std_bill_rate_schdl;
    G_tasks_in_tbl(G_tasks_tbl_count).non_labor_schedule_fixed_date  :=  p_nl_schedule_fixed_date;
    G_tasks_in_tbl(G_tasks_tbl_count).non_labor_schedule_discount  :=  p_nl_schedule_discount;
    G_tasks_in_tbl(G_tasks_tbl_count).labor_cost_multiplier_name  :=  p_labor_cost_multiplier_name;
    G_tasks_in_tbl(G_tasks_tbl_count).cost_ind_rate_sch_id    :=  p_cost_ind_rate_sch_id;
    G_tasks_in_tbl(G_tasks_tbl_count).rev_ind_rate_sch_id    :=  p_rev_ind_rate_sch_id;
    G_tasks_in_tbl(G_tasks_tbl_count).inv_ind_rate_sch_id    :=  p_inv_ind_rate_sch_id;
    G_tasks_in_tbl(G_tasks_tbl_count).cost_ind_sch_fixed_date    :=  p_cost_ind_sch_fixed_date;
    G_tasks_in_tbl(G_tasks_tbl_count).rev_ind_sch_fixed_date    :=  p_rev_ind_sch_fixed_date;
    G_tasks_in_tbl(G_tasks_tbl_count).inv_ind_sch_fixed_date    :=  p_inv_ind_sch_fixed_date;
    G_tasks_in_tbl(G_tasks_tbl_count).labor_sch_type      :=  p_labor_sch_type;
    G_tasks_in_tbl(G_tasks_tbl_count).non_labor_sch_type    :=  p_nl_sch_type;
    G_tasks_in_tbl(G_tasks_tbl_count).pa_task_id      :=      p_pa_task_id;
    G_tasks_in_tbl(G_tasks_tbl_count).actual_start_date                 :=
    p_actual_start_date;
    G_tasks_in_tbl(G_tasks_tbl_count).actual_finish_date                :=
    p_actual_finish_date;
    G_tasks_in_tbl(G_tasks_tbl_count).early_start_date                  :=
    p_early_start_date;
    G_tasks_in_tbl(G_tasks_tbl_count).early_finish_date                 :=
    p_early_finish_date;
    G_tasks_in_tbl(G_tasks_tbl_count).late_start_date                   :=
    p_late_start_date;
    G_tasks_in_tbl(G_tasks_tbl_count).late_finish_date                  :=
    p_late_finish_date;
    G_tasks_in_tbl(G_tasks_tbl_count).scheduled_start_date              :=
    p_scheduled_start_date;
    G_tasks_in_tbl(G_tasks_tbl_count).scheduled_finish_date             :=
    p_scheduled_finish_date;
    G_tasks_in_tbl(G_tasks_tbl_count).tasks_dff             :=p_tasks_dff; --bug 6153503
    G_tasks_in_tbl(G_tasks_tbl_count).attribute_category    :=
    p_attribute_category;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute1            :=
    p_attribute1;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute2            :=
    p_attribute2;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute3            :=
    p_attribute3;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute4            :=
    p_attribute4;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute5            :=
    p_attribute5;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute6            :=
    p_attribute6;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute7            :=
    p_attribute7;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute8            :=
    p_attribute8;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute9            :=
    p_attribute9;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute10            :=
    p_attribute10;
    --bug 6153503
    G_tasks_in_tbl(G_tasks_tbl_count).attribute11            :=
    p_attribute11;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute12            :=
    p_attribute12;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute13            :=
    p_attribute13;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute14            :=
    p_attribute14;
    G_tasks_in_tbl(G_tasks_tbl_count).attribute15            :=
    p_attribute15;
    --end bug 6153503

-- IC and Multi National Currency changes Starts ...

    G_tasks_in_tbl(G_tasks_tbl_count).allow_cross_charge_flag             :=
    p_allow_cross_charge_flag;
    G_tasks_in_tbl(G_tasks_tbl_count).project_rate_type  :=
    p_project_rate_type;
    G_tasks_in_tbl(G_tasks_tbl_count).project_rate_date  :=
    p_project_rate_date;
    G_tasks_in_tbl(G_tasks_tbl_count).cc_process_labor_flag  :=
    p_cc_process_labor_flag;
    G_tasks_in_tbl(G_tasks_tbl_count).labor_tp_schedule_id  :=
    p_labor_tp_schedule_id;
    G_tasks_in_tbl(G_tasks_tbl_count).labor_tp_fixed_date  :=
    p_labor_tp_fixed_date;
    G_tasks_in_tbl(G_tasks_tbl_count).cc_process_nl_flag  :=
    p_cc_process_nl_flag;
    G_tasks_in_tbl(G_tasks_tbl_count).nl_tp_schedule_id  :=
    p_nl_tp_schedule_id;
    G_tasks_in_tbl(G_tasks_tbl_count).nl_tp_fixed_date  :=
    p_nl_tp_fixed_date;
    G_tasks_in_tbl(G_tasks_tbl_count).receive_project_invoice_flag  :=
    p_receive_project_invoice_flag;
    G_tasks_in_tbl(G_tasks_tbl_count).work_type_id  :=
    p_work_type_id;
    G_tasks_in_tbl(G_tasks_tbl_count).emp_bill_rate_schedule_id  :=
    p_emp_bill_rate_schedule_id;
    G_tasks_in_tbl(G_tasks_tbl_count).job_bill_rate_schedule_id  :=
    p_job_bill_rate_schedule_id;

-- IC and Multi National Currency changes Ends ...

--Sakthi MCB

    G_tasks_in_tbl(G_tasks_tbl_count).non_lab_std_bill_rt_sch_id  :=
    p_non_lab_std_bill_rt_sch_id;
    G_tasks_in_tbl(G_tasks_tbl_count).taskfunc_cost_rate_type  :=
    p_taskfunc_cost_rate_type;
    G_tasks_in_tbl(G_tasks_tbl_count).taskfunc_cost_rate_date  :=
    p_taskfunc_cost_rate_date;

--Sakthi MCB
    G_tasks_in_tbl(G_tasks_tbl_count).display_sequence    :=
    p_display_sequence;
    G_tasks_in_tbl(G_tasks_tbl_count).wbs_level    :=
    p_wbs_level;

--Project Structures
    G_tasks_in_tbl(G_tasks_tbl_count).OBLIGATION_START_DATE       := P_OBLIGATION_START_DATE;
    G_tasks_in_tbl(G_tasks_tbl_count).OBLIGATION_FINISH_DATE      := P_OBLIGATION_FINISH_DATE;
    G_tasks_in_tbl(G_tasks_tbl_count).ESTIMATED_START_DATE        := P_ESTIMATED_START_DATE;
    G_tasks_in_tbl(G_tasks_tbl_count).ESTIMATED_FINISH_DATE       := P_ESTIMATED_FINISH_DATE;
    G_tasks_in_tbl(G_tasks_tbl_count).BASELINE_START_DATE         := P_BASELINE_START_DATE;
    G_tasks_in_tbl(G_tasks_tbl_count).BASELINE_FINISH_DATE        := P_BASELINE_FINISH_DATE;
    G_tasks_in_tbl(G_tasks_tbl_count).CLOSED_DATE                 := P_CLOSED_DATE;
    G_tasks_in_tbl(G_tasks_tbl_count).WQ_UOM_CODE                 := P_WQ_UOM_CODE;
    G_tasks_in_tbl(G_tasks_tbl_count).WQ_ITEM_CODE                := P_WQ_ITEM_CODE;
    G_tasks_in_tbl(G_tasks_tbl_count).STATUS_CODE                 := P_STATUS_CODE;
    G_tasks_in_tbl(G_tasks_tbl_count).WF_STATUS_CODE              := P_WF_STATUS_CODE;
    G_tasks_in_tbl(G_tasks_tbl_count).PM_SOURCE_CODE              := P_PM_SOURCE_CODE;
    G_tasks_in_tbl(G_tasks_tbl_count).PRIORITY_CODE               := P_PRIORITY_CODE;
    G_tasks_in_tbl(G_tasks_tbl_count).MILESTONE_FLAG              := P_MILESTONE_FLAG;
    G_tasks_in_tbl(G_tasks_tbl_count).CRITICAL_FLAG               := P_CRITICAL_FLAG;
    G_tasks_in_tbl(G_tasks_tbl_count).INC_PROJ_PROGRESS_FLAG      := P_INC_PROJ_PROGRESS_FLAG;
    G_tasks_in_tbl(G_tasks_tbl_count).LINK_TASK_FLAG              := P_LINK_TASK_FLAG;
    G_tasks_in_tbl(G_tasks_tbl_count).CALENDAR_ID                 := P_CALENDAR_ID;
    G_tasks_in_tbl(G_tasks_tbl_count).PLANNED_EFFORT              := P_PLANNED_EFFORT;
    G_tasks_in_tbl(G_tasks_tbl_count).DURATION                    := P_DURATION;
    G_tasks_in_tbl(G_tasks_tbl_count).PLANNED_WORK_QUANTITY       := P_PLANNED_WORK_QUANTITY;
    G_tasks_in_tbl(G_tasks_tbl_count).TASK_TYPE                   := P_TASK_TYPE;
--Project Structures
     G_tasks_in_tbl(G_tasks_tbl_count).labor_disc_reason_code := p_labor_disc_reason_code;
     G_tasks_in_tbl(G_tasks_tbl_count).non_labor_disc_reason_code := p_non_labor_disc_reason_code;

--PA L changes bug 2872708
     G_tasks_in_tbl(G_tasks_tbl_count).retirement_cost_flag := p_retirement_cost_flag;
     G_tasks_in_tbl(G_tasks_tbl_count).cint_eligible_flag := p_cint_eligible_flag;
     G_tasks_in_tbl(G_tasks_tbl_count).cint_stop_date := p_cint_stop_date;

-- FP-M Bug # 3301192
      G_tasks_in_tbl(G_tasks_tbl_count).pred_string    := p_pred_string;
      G_tasks_in_tbl(G_tasks_tbl_count).pred_delimiter := p_pred_delimiter;
--Bug 3279981 FP_M customer and invoice method at top task
      G_tasks_in_tbl(G_tasks_tbl_count).invoice_method := p_invoice_method;
      G_tasks_in_tbl(G_tasks_tbl_count).customer_id    := p_customer_id;
--SMukka
      G_tasks_in_tbl(G_tasks_tbl_count).financial_task_flag  :=p_financial_task_flag;
      G_tasks_in_tbl(G_tasks_tbl_count).mapped_task_id       :=p_mapped_task_id;
      G_tasks_in_tbl(G_tasks_tbl_count).mapped_task_reference:=p_mapped_task_reference;
      G_tasks_in_tbl(G_tasks_tbl_count).deliverable          :=p_deliverable;
      -- 3661788 Assinging deliverable id
      G_tasks_in_tbl(G_tasks_tbl_count).deliverable_id       :=p_deliverable_id;
-- (begin venkat) new params for bug #3450684 ----------------------------------------------
      G_tasks_in_tbl(G_tasks_tbl_count).ext_act_duration := p_ext_act_duration;
      G_tasks_in_tbl(G_tasks_tbl_count).ext_remain_duration := p_ext_remain_duration;
      G_tasks_in_tbl(G_tasks_tbl_count).ext_sch_duration := p_ext_sch_duration;
-- (end venkat) new params for bug #3450684 -------------------------------------------------

-- set the new params - bug #3654243 ----------------------------------------------
      G_tasks_in_tbl(G_tasks_tbl_count).base_percent_comp_deriv_code := p_base_percent_comp_deriv_code;
      G_tasks_in_tbl(G_tasks_tbl_count).sch_tool_tsk_type_code       := p_sch_tool_tsk_type_code;
      G_tasks_in_tbl(G_tasks_tbl_count).constraint_type_code         := p_constraint_type_code;
      G_tasks_in_tbl(G_tasks_tbl_count).constraint_date              := p_constraint_date;
      G_tasks_in_tbl(G_tasks_tbl_count).free_slack                   := p_free_slack;
      G_tasks_in_tbl(G_tasks_tbl_count).total_slack                  := p_total_slack;
      G_tasks_in_tbl(G_tasks_tbl_count).effort_driven_flag           := p_effort_driven_flag;
      G_tasks_in_tbl(G_tasks_tbl_count).level_assignments_flag       := p_level_assignments_flag;
      G_tasks_in_tbl(G_tasks_tbl_count).invoice_method               := p_invoice_method;
      G_tasks_in_tbl(G_tasks_tbl_count).customer_id                  := p_customer_id;
      G_tasks_in_tbl(G_tasks_tbl_count).gen_etc_source_code          := p_gen_etc_source_code;
-- set the new params - bug #3654243 -------------------------------------------------

pa_debug.write('load_tasks','p_etc_effort'||p_etc_effort,3);
pa_debug.write('load_tasks','p_percent_complete'||p_percent_complete,3);

-- Progress Management Changes. Bug # 3420093.
   G_tasks_in_tbl(G_tasks_tbl_count).etc_effort := p_etc_effort;
   G_tasks_in_tbl(G_tasks_tbl_count).percent_complete := p_percent_complete;
-- Progress Management Changes. Bug # 3420093.

EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO load_task_pub;

  p_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO load_task_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
  ROLLBACK TO load_task_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

END load_task;


--------------------------------------------------------------------------------
--Name:               execute_create_project
--Type:               Procedure
--Description:        This procedure can be used to create a project
--                    using global PL/SQL tables.
--
--Called subprograms:
--
--
--
--History:
--      19-AUG-1996        L. de Werker    Created
--  22-DEC-97  jwhite    - Added OUT-parameter p_workflow_started
--             for workflow.
--

PROCEDURE execute_create_project
( p_api_version_number      IN  NUMBER
 ,p_commit        IN  VARCHAR2  := FND_API.G_FALSE
 ,p_init_msg_list                    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_msg_count        OUT NOCOPY  NUMBER /*Added the nocopy check for 4537865 */
 ,p_msg_data        OUT  NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_return_status                    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_workflow_started                  OUT  NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_pm_product_code      IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_op_validate_flag     IN  VARCHAR2  := 'Y'--added by rtarway, 4218977
 ,p_pa_project_id      OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
 ,p_pa_project_number      OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
      )

IS

   l_api_name        CONSTANT  VARCHAR2(30)     := 'execute_create_project';

   i              NUMBER;
   l_return_status          VARCHAR2(1);
   l_err_stage            VARCHAR2(120);

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT execute_create_project_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;


--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

    create_project( p_api_version_number                 => p_api_version_number
           ,p_commit      => FND_API.G_FALSE
           ,p_init_msg_list    => FND_API.G_FALSE
       ,p_msg_count      => p_msg_count
       ,p_msg_data      => p_msg_data
       ,p_return_status                  => l_return_status
       ,p_workflow_started    => p_workflow_started
       ,p_pm_product_code    => p_pm_product_code
       ,p_op_validate_flag   => p_op_validate_flag--added by rtarway 4218977
       ,p_project_in                  => g_project_in_rec
       ,p_project_out                  => g_project_out_rec
       ,p_key_members    => g_key_members_in_tbl
       ,p_class_categories    => g_class_categories_in_tbl
       ,p_tasks_in      => g_tasks_in_tbl
       ,p_tasks_out      => g_tasks_out_tbl
-- anlee org role changes
                   ,p_org_roles                 => g_org_roles_in_tbl
                   ,p_structure_in              => G_structure_in_rec
      --bug 3096203
       ,p_ext_attr_tbl_in      => G_ext_attr_in_tbl
      --bug 3096203
--FP M : deliverables
      ,p_deliverables_in          => G_deliverables_in_tbl
--      ,p_deliverables_out         => G_deliverables_out_tbl
      ,p_deliverable_actions_in   => G_deliverable_actions_in_tbl
--      ,p_deliverable_actions_out  => G_deliverable_actions_out_tbl
--FP M : deliverables
    );


     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN

      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN

      RAISE FND_API.G_EXC_ERROR;
      END IF;

  --assign appropriate values to outgoing parameters
        IF g_project_out_rec.pa_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
     p_pa_project_id   := NULL;
        ELSE
     p_pa_project_id   := g_project_out_rec.pa_project_id;
        END IF;
        IF g_project_out_rec.pa_project_number = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
     p_pa_project_number   := NULL;
        ELSE
     p_pa_project_number   := g_project_out_rec.pa_project_number;
        END IF;

  IF FND_API.to_boolean( p_commit )
  THEN
    COMMIT;
  END IF;


EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO execute_create_project_pub;

  p_return_status := FND_API.G_RET_STS_ERROR;

  -- 4537865
  p_workflow_started    := NULL ;
  p_pa_project_id    := NULL ;
  p_pa_project_number  := NULL ;
  -- 4537865

  FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO execute_create_project_pub;

  -- 4537865
  p_workflow_started    := NULL ;
  p_pa_project_id    := NULL ;
  p_pa_project_number  := NULL ;
  -- 4537865

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

  WHEN OTHERS THEN
  ROLLBACK TO execute_create_project_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  -- 4537865
  p_workflow_started    := NULL ;
  p_pa_project_id    := NULL ;
  p_pa_project_number  := NULL ;
  -- 4537865

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

  FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

END execute_create_project;

--------------------------------------------------------------------------------
--Name:               fetch_task
--Type:               Procedure
--Description:        This procedure can be used to get the task related output data
--           to the client side as part part of the LOAD/EXECUTE/FETCH cycle.
--
--Called subprograms:
--
--
--
--History:
--    19-AUG-1996        L. de Werker    Created
--    25-OCT-1996   L. de Werker   p_msg_count and p_msg_data removed from parameterlist
--

PROCEDURE fetch_task
( p_api_version_number    IN  NUMBER
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_return_status    OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_task_index      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pa_task_id      OUT  NOCOPY NUMBER  /*Added the nocopy check for 4537865 */
 ,p_pm_task_reference    OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_task_return_status    OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
    )
IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'fetch_task';
   l_index          NUMBER;
   i            NUMBER;

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT fetch_task_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

--  Check Task index value, when they don't provide an index we will error out
    IF p_task_index = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    OR p_task_index IS NULL
    THEN
  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_INDEX_NOT_PROVIDED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;

  p_return_status := FND_API.G_RET_STS_ERROR;
  RAISE FND_API.G_EXC_ERROR;
    ELSE
  l_index := p_task_index;
    END IF;
  If G_Tasks_out_tbl.exists(l_index) THEN
--  assign global table fields to the outgoing parameter
--  we don't want to return the big number G_PA_MISS_NUM

    IF G_tasks_out_tbl(l_index).pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  THEN
    p_pa_task_id := NULL;
  ELSE

       p_pa_task_id         := G_tasks_out_tbl(l_index).pa_task_id;

  END IF;

     p_pm_task_reference    := G_tasks_out_tbl(l_index).pm_task_reference;
     p_task_return_status    := G_tasks_out_tbl(l_index).return_status;

END IF;

EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO fetch_task_pub;

  p_return_status := FND_API.G_RET_STS_ERROR;

  -- 4537865
  p_pa_task_id  := NULL ;
  p_pm_task_reference := NULL ;
  p_task_return_status := FND_API.G_RET_STS_ERROR ;
  -- 4537865


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO fetch_task_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  -- 4537865
  p_pa_task_id  := NULL ;
  p_pm_task_reference := NULL ;
  p_task_return_status := FND_API.G_RET_STS_ERROR ;
  -- 4537865


  WHEN OTHERS THEN
  ROLLBACK TO fetch_task_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  -- 4537865
  p_pa_task_id  := NULL ;
  p_pm_task_reference := NULL ;
  p_task_return_status := FND_API.G_RET_STS_ERROR ;
  -- 4537865

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;


END fetch_task;

--------------------------------------------------------------------------------
--Name:               clear_project
--Type:               Procedure
--Description:        This procedure can be used to clear the global PL/SQL
--          tables that are used by a LOAD/EXECUTE/FETCH cycle.
--
--
--Called subprograms: init_project
--
--
--
--History:
--    20-AUG-1996        L. de Werker    Created
--    30-AUG-1996   L. de Werker   Parameterlist removed.
--    10-JAN-1997   L. de Werker   Changed name from CLEAR_CREATE_PROJECT to CLEAR_PROJECT
--
PROCEDURE clear_project

IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'clear_project';

BEGIN


   init_project;


END clear_project;

--------------------------------------------------------------------------------
--Name:               Update_Project
--Type:                 Procedure
--Description:   This procedure can be used to update a project
--
--
--Called subprograms: PA_PROJECT_STUS_UTILS.Check_Wf_Enabled
--
--
--
--History:
--    31-JUL-1996       R. Krishnamurthy      - Created
--    03-DEC-1996  L. de Werker  - Debugged errors + added checking of NULL values.
--    05-DEC-1996  L. de Werker  - Added WHO columns update in dynamic SQL string
--    06-DEC-1996  L. de Werker  - Added locking mechanism
--    30-SEP-97    jwhite    - Workflow had been added in XX-AUG-97. I made
--            fixes as per unit testing.
--    22-DEC-97    jwhite    - Added OUT-parameter p_workflow_started
--             for workflow.
--    03-MAY-2000       Rakesh Raghavan - Fixed Bug # 1289156.
-- 12-JUL-2000 Mohnish
--             added code for ROLE BASED SECURITY:
--             added the call to PA_PROJECT_PARTIES_PUB.UPDATE_PROJECT_PARTY
--  19-JUL-2000 Mohnish incorporated PA_PROJECT_PARTIES_PUB API changes
--  23-MAY-2002 MAansari Added call to create_default_task_structure
--  15-MAR-2003 SRAMESH   - Added an OR condition for the bug 2846478
--                          in the before the update_project_party call in
--                          the procedure CHECK_FOR_ONE_MANAGER_PVT.
--  26-MAR-2003 SRAMESH  - Added calls for the the procedures Check_Schedule_type and Validate_Schedule_Values.
--                         the procedure update_project
--                       - Also added the update statements for the columns
--                       LABOR_SCHEDULE_FIXED_DATE , LABOR_SCHEDULE_DISCOUNT, NON_LABOR_STD_BILL_RATE_SCHDL
--                       NON_LABOR_BILL_RATE_ORG_ID, NON_LABOR_SCHEDULE_FIXED_DATE, NON_LABOR_SCHEDULE_DISCOUNT
--                       REV_IND_RATE_SCH_ID, INV_IND_RATE_SCH_ID, REV_IND_SCH_FIXED_DATE, INV_IND_SCH_FIXED_DATE
-- Default value for p_structure_type is financial
--Logic used to derive the struture version id
-- If p_structure_type is financial then
--      If Split case then
--           Get the version id of the published structure
--           If no published structure Then
--                Get the version id of the Working Structure
--      IF Shared case and Versioning disabled then
--           Get the version id of the published structure
--           If no published structure Then
--                Get the version id of the Working Structure
--      IF Shared case and versioning enabled but no published version exists then
--           Get the version id of the Working Structure
--      IF Shared case and versioning enabled and published version exists then
--           populate the l_structure_type as 'WORKPLAN'
--Else IF p_structure_type is WORKPLAN then
--     IF Shared case Then
--           Throw an error PA_PS_WP_NOT_SEP_FN
--     IF Split Case and Versioning disabled then
--           Get the version id of the published structure
--     IF Split Case and Versioning Enabled then
--           IF No working versions then
--                create a working version
--           Else
--                get the version id of the last updated working version
--     IF Unable to get version Id
--        Throw an error PA_PS_STRUC_VER_REQ
--End if
--      19-may-2003     sramesh         -Fixed the bug 2910972.Defaulting of the key member start
--                                       date
--      10-jun-2003     sramesh        -Fixed the bug 2891513.Added the conditions before the update statement
--                                      of revaluate_funding_flag and include_gains_losses_flag in the
--                                      update_project API.
--    15-jul-2003      sramesh        -- Added the code for bug 2982057.
--                                       Changed the logic to populate the long_task_name
--                                       with task_name when the long_task_name is null.
--          22-JAN-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to add parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days to tasks and create dependencies.
--          10-FEB-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to replace parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days with parameters: pred_string and pred_delimiter.
--          17-Mar-2006 sunkalya        - Bug#5210872.Modified the update logic for
--                                        the parameter 'probability_member_id'.Change tagged with Bug#5210872.
--          18-May-2006  vkadimes       - Bug 5188246 Added validation for output_tax_code and retention_tax_code .
--                                        Changes are tagged with Bug No.
PROCEDURE Update_Project
( p_api_version_number    IN  NUMBER
 ,p_commit      IN  VARCHAR2  := FND_API.G_FALSE
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_msg_count      OUT NOCOPY NUMBER  /*Added the nocopy check for 4537865 */
 ,p_msg_data      OUT  NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_return_status    OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_workflow_started    OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_pm_product_code    IN  VARCHAR2
 ,p_op_validate_flag   IN varchar2 := 'Y'
 ,p_project_in      IN  pa_project_pub.project_in_rec_type
 ,p_project_out      OUT NOCOPY  pa_project_pub.project_out_rec_type /*added the nocopy check for the 2674619*/
 /* Added for tracking bug - add customers */
 ,p_customers_in     IN  pa_project_pub.customer_tbl_type := G_customers_in_tbl
/* Added Default Value for p_key_members and p_class_categories*/
 ,p_key_members      IN  pa_project_pub.project_role_tbl_type := G_key_members_in_tbl
 ,p_class_categories    IN  pa_project_pub.class_category_tbl_type := G_class_categories_in_tbl
 ,p_tasks_in      IN  pa_project_pub.task_in_tbl_type
 ,p_tasks_out      OUT NOCOPY  pa_project_pub.task_out_tbl_type /*added the nocopy check for the bug 2674619*/
-- anlee org role changes
 ,p_org_roles                   IN      pa_project_pub.project_role_tbl_type := G_org_roles_in_tbl
--project structures
 ,p_structure_in                IN      structure_in_rec_type := G_structure_in_rec
 ,p_ext_attr_tbl_in             IN   PA_EXT_ATTR_TABLE_TYPE := G_ext_attr_in_tbl
-- ,p_structure_out               OUT     structure_out_rec_type
 ,p_pass_entire_structure       IN      VARCHAR2 := 'N'  -- Added for bug 3548473  : Bug 3627124
 -- If user passes entire strucutre in p_structure_in rec type, p_pass_entire_structure should be set to 'Y'.
--project structures
--FP M : deliverables
 ,p_deliverables_in           IN  deliverable_in_tbl_type := G_deliverables_in_tbl -- 3435905 passing default
-- ,p_deliverables_out          OUT NOCOPY  deliverable_out_tbl_type -- 3435905 removed out parameter
 ,p_deliverable_actions_in    IN  action_in_tbl_type := G_deliverable_actions_in_tbl -- 3435905 passing default
-- ,p_deliverable_actions_out   OUT NOCOPY  action_out_tbl_type -- 3435905 removed out parameter
--FP M : deliverables
 ,p_update_mode               IN VARCHAR2 := 'PA_UPD_WBS_ATTR' --rtarway, for DHI ER, BUG 4413568  --bug 4534919
) IS

 -- Added for bug 5222506
 CURSOR l_cur_calendar_id(l_calendar_id NUMBER) IS
 SELECT 'Y' FROM  jtf_calendars_vl  WHERE
 trunc(nvl(end_date_active, sysdate)) >= trunc(sysdate)
 AND calendar_id= l_calendar_id;

-- Added for Bug 5225146
  CURSOR l_cur_project_rate_type (l_project_rate_type VARCHAR )IS
  SELECT 'Y' FROM  pa_conversion_types_v
  WHERE  conversion_type <> 'User' AND  user_conversion_type = l_project_rate_type;

  -- Added for Bug 5188246
   CURSOR l_cur_retention_tax_code (l_retention_tax_code VARCHAR ) IS
   SELECT 'Y' FROM pa_output_tax_code_setup_v
   WHERE tax_code = l_retention_tax_code;
   --needed to get default data of a project using it's ID
   CURSOR  l_project_csr
    (l_pa_project_id NUMBER)
   IS
   SELECT   *
   FROM    pa_projects p
   WHERE  p.project_id = l_pa_project_id;

/**************************************
**  The following cursor l_get_org_csr is not used anywhere in this
    package. So commenting this cursor for changes made for
    Non-mergable to Mergable View .      ***
***************************************

   CURSOR l_get_org_csr (l_org_id NUMBER )

   IS
   SELECT organization_id
   FROM   pa_organizations_project_v
   WHERE organization_id = l_org_id
   AND   active_flag = 'N';

****************************************/

   CURSOR l_get_dist_rule_csr (l_dist_rule VARCHAR2, l_project_type VARCHAR2)
   IS
   SELECT 'x'
   FROM   pa_project_type_distributions d
   WHERE d.project_type = l_project_type
   AND   d.distribution_rule = l_dist_rule;

   CURSOR l_min_task_start_date_csr (l_project_id NUMBER) IS
   SELECT MIN(start_date)
   FROM pa_tasks
   WHERE project_id = l_project_id
   AND   start_date IS NOT NULL;

   CURSOR l_max_task_end_date_csr (l_project_id NUMBER) IS
   SELECT MAX(completion_date)
   FROM pa_tasks
   WHERE  project_id = l_project_id
   AND    completion_date IS NOT NULL;

   --needed to get the project_type_class_code and service_type_code associated
   --with the project_type

   CURSOR       l_project_type_csr
                (p_pa_project_id NUMBER)
   IS
   SELECT       pt.project_type_class_code
   ,            pt.service_type_code
   ,            pt.revaluate_funding_flag  /*Bug 2891513 : selecting the columns revaluate_funding_flag and include_gains_losses_flag*/
   ,            pt.include_gains_losses_flag
   FROM         pa_project_types pt
   ,            pa_projects p
   WHERE        p.project_type = pt.project_type
   AND          p.project_id = p_pa_project_id;

   --needed to check whether given project number is unique
   CURSOR   l_project_number_unique_csr( p_project_number VARCHAR2)
   IS
   SELECT   'x'
   FROM     pa_projects_all
   WHERE    segment1 = p_project_number;

   --needed to check whether given project name is unique
   CURSOR   l_project_name_unique_csr( p_project_name VARCHAR2)
   IS
   SELECT   'x'
   FROM     pa_projects_all
   WHERE    name = p_project_name;

   --needed to check whether given long name is unique
   CURSOR   l_long_name_unique_csr( p_long_name VARCHAR2)
   IS
   SELECT   'x'
   FROM     pa_projects_all
   WHERE    long_name = p_long_name;

   /* Modidified the cursor l_key_member_csr to add start_date_active as logical
     primary key */
   CURSOR l_key_member_csr (l_project_id NUMBER,l_person_id NUMBER,
                            l_role_type  VARCHAR2 ,
                l_start_date_active DATE)
   IS
   SELECT  pa_project_players.*  --,rowid   /*rowid id commented for bug 1939295 */
   FROM    pa_project_players
   WHERE   project_id        = l_project_id
   AND     person_id         = l_person_id
   AND     project_role_type = l_role_type
   AND     start_date_active = l_start_date_active;

/*Customer Account Relationships -CAR changes*/

  Cursor Cur_Customer(x_project_id NUMBER,l_customer_id in number) IS
  Select pa_project_customers.*
  From pa_project_customers
  where project_id=x_project_id
  and customer_id=l_customer_id;

/*CAR changes end*/


   CURSOR l_class_categories_csr (l_project_id NUMBER,
                                  l_class_category VARCHAR2 )
   IS
   SELECT class_code
   FROM pa_project_classes
   WHERE project_id     = l_project_id
   AND   class_category = l_class_category;

   CURSOR l_get_task_csr (l_project_id NUMBER,l_pm_task_reference VARCHAR2) IS
   SELECT task_id FROM
   pa_tasks
   WHERE project_id  = l_project_id
   AND pm_task_reference = l_pm_task_reference;

   --needed to get the data of the project manager that might conflict with this new project manager

   CURSOR l_project_man_current_csr (p_project_id NUMBER, p_start_date DATE )
   IS
   SELECT person_id,
          start_date_active,
          end_date_active
   FROM   pa_project_players
   WHERE  project_id = p_project_id
   AND    project_role_type = 'PROJECT MANAGER'
   AND    nvl(end_date_active,p_start_date) >= p_start_date;


/* bug 4541103
   CURSOR l_lock_rows_csr( p_project_id NUMBER)
   IS
   SELECT 'x'
   FROM    pa_projects p
   WHERE  p.project_id = p_project_id
   FOR UPDATE OF p.project_id NOWAIT;
*/

-- anlee org role changes

-- 3693229 start
-- for peformance fix changed the below cursor definition
-- earlier select was quering on view
-- now, select is directly retrieving the data from the tables
-- for more detail please refer bug
/*
CURSOR l_org_role_csr (l_project_id NUMBER,l_resource_source_id NUMBER,
                            l_role_type  VARCHAR2 )
   IS
   SELECT  *
   FROM    pa_project_parties_v
   WHERE   project_id                 = l_project_id
   AND     resource_source_id         = l_resource_source_id
   AND     project_role_type          = l_role_type
   AND     party_type                 = 'ORGANIZATION';
*/

-- 4656866 commented below cursor

/*
CURSOR l_org_role_csr (l_project_id NUMBER,l_resource_source_id NUMBER,
                            l_role_type  VARCHAR2 )
   IS
   SELECT
     ppp.project_party_id PROJECT_PARTY_ID,
     ppp.object_id OBJECT_ID,
     ppp.object_type OBJECT_TYPE,
     ppp.project_id PROJECT_ID,
     ppp.resource_id RESOURCE_ID,
     ppp.resource_type_id RESOURCE_TYPE_ID,
     ppp.resource_source_id RESOURCE_SOURCE_ID,
     hzo.party_name RESOURCE_SOURCE_NAME,
     ppp.project_role_id PROJECT_ROLE_ID,
     pprt.project_role_type PROJECT_ROLE_TYPE,
     pprt.meaning PROJECT_ROLE_MEANING,
     pprt.role_party_class ROLE_PARTY_CLASS,
     ppp.start_date_active START_DATE_ACTIVE,
     ppp.end_date_active END_DATE_ACTIVE,
     ppp.scheduled_flag SCHEDULED_FLAG,
     ppp.record_version_number RECORD_VERSION_NUMBER,
     ppa.start_date PROJECT_START_DATE,
     ppa.completion_date PROJECT_END_DATE,
     ppp.grant_id GRANT_ID,
     -999 ASSIGNMENT_ID,
     -999 ASSIGN_RECORD_VERSION_NUMBER,
     'N' PENDING_APPROVAL,
     -999 ORGANIZATION_ID,
     NULL ORGANIZATION_NAME,
     hzcp.phone_area_code || decode(hzcp.phone_number,NULL,NULL,decode(hzcp.phone_area_code,NULL,hzcp.phone_number,'-' || hzcp.phone_number) )  || decode(hzcp.phone_extension,NULL,NULL,'+' || hzcp.phone_extension) PHONE_NUMBER,
     hzo.email_address EMAIL_ADDRESS,
     NULL JOB_TITLE,
     'ORGANIZATION' PARTY_TYPE,
     PA_PROJECT_PARTIES_UTILS.ACTIVE_PARTY(PPP.START_DATE_ACTIVE,PPP.END_DATE_ACTIVE) ACTIVE,
     NULL USER_NAME,
     -999 USER_ID,
     ppp.resource_source_id RESOURCE_PARTY_ID
    FROM pa_project_parties ppp,
         pa_projects_all ppa,
         pa_project_role_types_vl pprt,
         hz_parties hzo,
         hz_contact_points hzcp
    WHERE ppp.resource_type_id = 112
     AND ppp.project_id = ppa.project_id
     AND ppp.project_role_id = pprt.project_role_id
     AND ppp.resource_source_id = hzo.party_id
     AND hzo.party_type = 'ORGANIZATION'
     AND hzcp.owner_table_name (+)= 'HZ_PARTIES'
     AND hzcp.owner_table_id (+)= hzo.party_id
     AND hzcp.contact_point_type (+)= 'PHONE'
     AND hzcp.phone_line_type (+)= 'GEN'
     AND hzcp.primary_flag (+)= 'Y'
     and PPA.project_id                = l_project_id
     AND PPP.resource_source_id        = l_resource_source_id
     AND PPRT.project_role_type        = l_role_type;
*/

-- Added same cursor with changed select query , removed hz_contact_points references
-- using hz_parties columns for primary phone number details
-- ( like primary_phone_area_code , primary_phone_number , primary_phone_extension )
-- for more refer bug description

CURSOR l_org_role_csr (l_project_id NUMBER,l_resource_source_id NUMBER,
                            l_role_type  VARCHAR2 )
   IS
   SELECT
     ppp.project_party_id PROJECT_PARTY_ID,
     ppp.object_id OBJECT_ID,
     ppp.object_type OBJECT_TYPE,
     ppp.project_id PROJECT_ID,
     ppp.resource_id RESOURCE_ID,
     ppp.resource_type_id RESOURCE_TYPE_ID,
     ppp.resource_source_id RESOURCE_SOURCE_ID,
     hzo.party_name RESOURCE_SOURCE_NAME,
     ppp.project_role_id PROJECT_ROLE_ID,
     pprt.project_role_type PROJECT_ROLE_TYPE,
     pprt.meaning PROJECT_ROLE_MEANING,
     pprt.role_party_class ROLE_PARTY_CLASS,
     ppp.start_date_active START_DATE_ACTIVE,
     ppp.end_date_active END_DATE_ACTIVE,
     ppp.scheduled_flag SCHEDULED_FLAG,
     ppp.record_version_number RECORD_VERSION_NUMBER,
     ppa.start_date PROJECT_START_DATE,
     ppa.completion_date PROJECT_END_DATE,
     ppp.grant_id GRANT_ID,
     -999 ASSIGNMENT_ID,
     -999 ASSIGN_RECORD_VERSION_NUMBER,
     'N' PENDING_APPROVAL,
     -999 ORGANIZATION_ID,
     NULL ORGANIZATION_NAME,
     hzo.primary_phone_area_code || decode(hzo.primary_phone_number,NULL,NULL,decode(hzo.primary_phone_area_code,NULL,hzo.primary_phone_number,'-' || hzo.primary_phone_number) )
        || decode(hzo.primary_phone_extension,NULL,NULL,'+' || hzo.primary_phone_extension) PHONE_NUMBER,
     hzo.email_address EMAIL_ADDRESS,
     NULL JOB_TITLE,
     'ORGANIZATION' PARTY_TYPE,
     PA_PROJECT_PARTIES_UTILS.ACTIVE_PARTY(PPP.START_DATE_ACTIVE,PPP.END_DATE_ACTIVE) ACTIVE,
     NULL USER_NAME,
     -999 USER_ID,
     ppp.resource_source_id RESOURCE_PARTY_ID
    FROM pa_project_parties ppp,
         pa_projects_all ppa,
         pa_project_role_types_vl pprt,
         hz_parties hzo
    WHERE ppp.resource_type_id = 112
     AND ppp.project_id = ppa.project_id
     AND ppp.project_role_id = pprt.project_role_id
     AND ppp.resource_source_id = hzo.party_id
     AND hzo.party_type = 'ORGANIZATION'
     and PPA.project_id                = l_project_id
     AND PPP.resource_source_id        = l_resource_source_id
     AND PPRT.project_role_type        = l_role_type;

-- 4656866 end

-- 3693229 end

--Cursor to get the current published version when structure type and project id is known
CURSOR cur_struc_ver_fin(c_project_id pa_projects_all.project_id%TYPE, c_structure_type pa_structure_types.structure_type%TYPE)
   IS
    SELECT c.element_version_id
       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
            ,pa_proj_elem_ver_structure d
      WHERE c.project_id = c_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = c_structure_type
     AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND d.status_code = 'STRUCTURE_PUBLISHED'
        AND d.latest_eff_published_flag = 'Y';

--Cursor to get the working version when structure type and project id is known
CURSOR cur_struc_ver_wp(c_project_id pa_projects_all.project_id%TYPE, c_structure_type pa_structure_types.structure_type%TYPE)
   IS
     SELECT c.element_version_id
       FROM pa_proj_element_versions c, pa_structure_types a, pa_proj_structure_types b
            ,pa_proj_elem_ver_structure d
      WHERE c.project_id = c_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = c_structure_type
        AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND d.status_code = 'STRUCTURE_WORKING';

-- Cursor to get the Project's System Status Code Bug 3611598
 CURSOR c_project_sys_status_code IS
       SELECT project_system_status_code
       FROM PA_PROJECT_STATUSES sta,PA_PROJECTS_ALL pa
       WHERE pa.project_id = p_project_in.pa_project_id
         AND sta.project_status_code = pa.project_status_code;

TYPE deferred_tasks_rec IS RECORD
(task_index  NUMBER);

TYPE deferred_tasks_tbl_typ IS TABLE OF deferred_tasks_rec
        INDEX BY BINARY_INTEGER;

l_dummy_calendar_id   VARCHAR2(1) := 'N' ; -- Added for bug 5222506
l_dummy_project_rate_type VARCHAR2(1) :='N'; -- Added For bug 5225146
l_dummy_cur_retention_tax_code VARCHAR2(1) :='N';
l_dummy_cur_output_tax_code VARCHAR2(1) :='N'; -- Added For Bug 5188246.
l_status_code         PA_PROJECT_STATUSES.project_system_status_code%TYPE; -- Bug 3611598
l_deferred_tasks_index_tbl  deferred_tasks_tbl_typ;

l_project_rec          pa_projects%ROWTYPE;
l_project_in_rec        pa_project_pub.project_in_rec_type;
l_temp_org_id                       NUMBER;
l_temp                              VARCHAR2(1);

l_api_name              CONSTANT    VARCHAR2(30):=  'update_project';
j            NUMBER;
i            NUMBER;

l_tasks_out          pa_project_pub.task_out_tbl_type;
l_return_status                     VARCHAR2(1);

l_err_code                          NUMBER := 0;
l_err_stage                         VARCHAR2(2000);
l_err_stack                         VARCHAR2(2000);
l_dummy            VARCHAR2(1);

l_project_id          NUMBER ;
l_task_id          NUMBER ;
l_cursor                            INTEGER;
--l_statement                         VARCHAR2(2000);  --bug 2955326
l_statement                         VARCHAR2(30000); --bug 2955326
l_rows                              INTEGER;
l_project_start_date                DATE;
l_project_completion_date           DATE;
l_max_task_date                     DATE;
l_min_task_date          DATE;

l_deferred_new_tasks_tbl            pa_project_pub.task_in_tbl_type;
l_deferred_tasks_count              NUMBER := 0;
l_added_task_tbl                    pa_project_pub.task_in_tbl_type;
l_task_id_tbl                       pa_project_pub.task_out_tbl_type;
l_count                             NUMBER;
l_task_rec                          pa_project_pub.task_in_rec_type;
l_project_type_class_code           pa_project_types.project_type_class_code%type;
l_service_type_code                 pa_project_types.service_type_code%type;

l_key_members_tbl              pa_project_pub.project_role_tbl_type;
l_key_members_in_rec        pa_project_pub.project_role_rec_type;
l_key_members_current_rec           l_key_member_csr%ROWTYPE;
l_key_members_rec                   l_key_member_csr%ROWTYPE;
l_project_man_current_rec      l_project_man_current_csr%ROWTYPE;

/*Customer account relationships */

Cur_Customer_rec                   Cur_Customer%ROWTYPE;
l_bill_to_customer_id              Number;
l_ship_to_customer_id              Number;
l_bill_to_address_id                         NUMBER := NULL; --Initialized to NULL for Bug 3911782
l_ship_to_address_id                         NUMBER := NULL; --Initialized to NULL for Bug 3911782
l_bill_to_contact_id                         NUMBER := NULL; --Initialized to NULL for tracking bug AMG API Gap Analysis : BUg 4153629
l_ship_to_contact_id                         NUMBER := NULL; --Initialized to NULL for tracking bug AMG API Gap Analysis : BUg 4153629
/* Variables sadded for tracking bug */
l_project_relationship_code           PA_PROJECT_CUSTOMERS.PROJECT_RELATIONSHIP_CODE%TYPE;
l_customer_bill_split                 PA_PROJECT_CUSTOMERS.CUSTOMER_BILL_SPLIT%TYPE;
l_customer_id        NUMBER;
 l_msg_index_out              NUMBER;
 tot_contribution     NUMBER;
 /* Variables sadded for tracking bug */
/* Variables added for tracking bug 4153629*/
 l_bill_another_project_flag VARCHAR2(1);
 l_receiver_task_id NUMBER;
/* Variables added for tracking bug 4153629*/
/*CAR changes ends*/


-- anlee org role changes
l_org_roles_tbl                      pa_project_pub.project_role_tbl_type;
l_org_roles_in_rec        pa_project_pub.project_role_rec_type;
l_org_roles_current_rec             l_org_role_csr%ROWTYPE;
l_org_roles_rec                     l_org_role_csr%ROWTYPE;

l_class_categories_tbl              pa_project_pub.class_category_tbl_type ;
l_temp_start_date                   DATE;
l_temp_end_date                     DATE;
l_update_yes_flag                   VARCHAR2(1) := 'N';
l_out_pa_task_id                    NUMBER;
l_out_pm_task_reference             VARCHAR2(30);
l_update_start_date_flag      VARCHAR2(1);
l_update_end_date_flag        VARCHAR2(1);
l_class_code          VARCHAR2(30);
l_msg_count          NUMBER ;
l_msg_data          VARCHAR2(2000);
l_function_allowed        VARCHAR2(1);
l_resp_id          NUMBER := 0;
l_user_id                NUMBER := 0;
l_module_name                       VARCHAR2(80) := 'PA_PM_UPDATE_PROJECT';
l_proceed_with_update_flag          VARCHAR2(1);
l_array_index                       NUMBER := 0;
l_temp_i          NUMBER := 0;
l_orig_index          NUMBER := 0;
l_text                  VARCHAR2(500);
l_verify_ok_flag                    VARCHAR2(1);
l_wf_enabled_flag                   VARCHAR2(1);
l_err_msg_count                     NUMBER := 0;
l_warnings_only_flag                VARCHAR2(1);
l_project_status_changed            VARCHAR2(1) := 'N';
l_closing_project                   VARCHAR2(1) := 'N';
l_reopening_project                 VARCHAR2(1) := 'N';
l_wf_status_code                    VARCHAR2(30) := 'IN_ROUTE';
l_proj_num_numeric                  NUMBER;
l_wf_type                           VARCHAR2(250);
l_wf_item_type                           VARCHAR2(250);
l_wf_process                             VARCHAR2(250);
l_assignment_id                    NUMBER;
l_task_id_out              NUMBER   := 0;
l_amg_task_number       VARCHAR2(50);
l_org_func_security     VARCHAR2(1);  /* Bug#1968394  */

-- FP-M Bug # 3301192
l_d_task_id NUMBER;
l_d_task_ver_id NUMBER;
l_d_struct_ver_id NUMBER;
l_d_loop_count NUMBER;
l_task_in_rec        task_in_rec_type;

/*Variables added for bug 2802984*/

l_out_labor_sch_type     VARCHAR2(1);
l_out_nl_labor_sch_type   VARCHAR2(1);
l_rev_rate_sch_type        VARCHAR2(1);
l_inv_rate_sch_type       VARCHAR2(1);
l_std_bill_rate_schedule   VARCHAR2(40);

/*Bug# 2891513    : Added the local variables*/
l_revaluate_funding  VARCHAR2(1);
l_include_gains_and_losses VARCHAR2(1);
/*Variables added for bug 2802984 ends*/

--added  by rtarway FP.M Devlopment
l_patask_record_version_number NUMBER;
--added  by rtarway FP.M Devlopment
--needed to get the field values associated to a AMG message

   CURSOR   l_amg_project_csr
      (p_pa_project_id pa_projects.project_id%type)
   IS
   SELECT   segment1
   FROM     pa_projects p
   WHERE p.project_id = p_pa_project_id;

   l_amg_segment1       VARCHAR2(25);

p_multiple_task_msg        VARCHAR2(1) := 'T';
x_return_status    VARCHAR2(255);
x_msg_count        NUMBER;
x_msg_data         VARCHAR2(2000);
V_COMPLETION_DATE  DATE;
v_null_char        VARCHAR2(1):=to_char(NULL);

--Project Structures
v_first_index      NUMBER;
v_last_index       NUMBER;
v_ref_task_id      NUMBER;
v_parent_task_id      NUMBER;
v_task_id             NUMBER;
l_structure_version_id   NUMBER;
l_structure_id   NUMBER;
l_task_version_id        NUMBER;
--Project Structures

-- anlee
-- Added for intermedia search
l_ctx_proj_name VARCHAR2(30);
l_ctx_proj_number VARCHAR2(25);
l_ctx_long_name VARCHAR2(240);
l_ctx_desc VARCHAR2(250);
l_ctx_update_flag VARCHAR2(1);
-- End of changes

--bug 2738747
l_structure_type          VARCHAR2(25);
--bug 2738747

--<Bug#2881768/>
struct_ver_updatable    VARCHAR(1);

 --For Bug 2931183
l_update_structure_version_id          pa_proj_element_versions.element_version_id%TYPE;
l_debug_mode               varchar2(1);

 -- <EA>
 l_failed_row_id_list VARCHAR2(32767);
 l_errorcode      VARCHAR2(150);
 -- </EA>

--bug 2955326
l_b_segment1_flag            VARCHAR2(1) := 'N';
l_b_proj_name_flag           VARCHAR2(1) := 'N';
l_b_long_name_flag           VARCHAR2(1) := 'N';
l_b_pm_proj_ref_flag         VARCHAR2(1) := 'N';
l_b_co_org_id_flag           VARCHAR2(1) := 'N';
l_b_pub_sec_flag             VARCHAR2(1) := 'N';
l_b_dist_rule_flag           VARCHAR2(1) := 'N';
l_b_desc_flag                VARCHAR2(1) := 'N';
l_b_start_date_flag          VARCHAR2(1) := 'N';
l_b_comp_date_flag           VARCHAR2(1) := 'N';
l_b_early_sd_flag            VARCHAR2(1) := 'N';
l_b_early_fd_flag            VARCHAR2(1) := 'N';
l_b_late_sd_flag             VARCHAR2(1) := 'N';
l_b_late_fd_flag             VARCHAR2(1) := 'N';
l_b_sch_sd_flag              VARCHAR2(1) := 'N';
l_b_sch_fd_flag              VARCHAR2(1) := 'N';
l_b_attr_cat_flag            VARCHAR2(1) := 'N';
l_b_attr1_flag               VARCHAR2(1) := 'N';
l_b_attr2_flag               VARCHAR2(1) := 'N';
l_b_attr3_flag               VARCHAR2(1) := 'N';
l_b_attr4_flag               VARCHAR2(1) := 'N';
l_b_attr5_flag               VARCHAR2(1) := 'N';
l_b_attr6_flag               VARCHAR2(1) := 'N';
l_b_attr7_flag               VARCHAR2(1) := 'N';
l_b_attr8_flag               VARCHAR2(1) := 'N';
l_b_attr9_flag               VARCHAR2(1) := 'N';
l_b_attr10_flag              VARCHAR2(1) := 'N';
l_b_output_tx_code_flag      VARCHAR2(1) := 'N';
l_b_ret_tx_code_flag         VARCHAR2(1) := 'N';
l_b_proj_cur_code_flag       VARCHAR2(1) := 'N';
l_b_allow_x_chg_flag         VARCHAR2(1) := 'N';
l_b_proj_rt_date_flag        VARCHAR2(1) := 'N';
l_b_proj_rt_tp_flag          VARCHAR2(1) := 'N';
l_cc_proc_lb_flag            VARCHAR2(1) := 'N';
l_b_lb_tp_sch_id_flag        VARCHAR2(1) := 'N';
l_b_lb_tp_fixed_dt_flag      VARCHAR2(1) := 'N';
l_b_cc_proc_nl_flag          VARCHAR2(1) := 'N';
l_b_nl_tp_sch_id_flag        VARCHAR2(1) := 'N';
l_b_nl_tp_fx_dt_flag         VARCHAR2(1) := 'N';
l_b_role_list_id_flag        VARCHAR2(1) := 'N';
l_b_work_type_id_flag        VARCHAR2(1) := 'N';
l_b_cal_id_flag              VARCHAR2(1) := 'N';
l_b_loc_id_flag              VARCHAR2(1) := 'N';
l_b_prob_memb_id_flag        VARCHAR2(1) := 'N';
l_b_proj_value_flag          VARCHAR2(1) := 'N';
l_b_exp_apprv_dt_flag        VARCHAR2(1) := 'N';
l_b_cst_jb_gp_id_flag        VARCHAR2(1) := 'N';
l_b_bill_jb_gp_id_flag       VARCHAR2(1) := 'N';
l_b_emp_bill_rt_sch_id_flag  VARCHAR2(1) := 'N';
l_b_jb_bill_rt_sch_id_flag   VARCHAR2(1) := 'N';
l_b_comp_mtch_wt_flag        VARCHAR2(1) := 'N';
l_b_avail_mtch_wt_flag       VARCHAR2(1) := 'N';
l_b_jb_lvl_mt_wt_flag        VARCHAR2(1) := 'N';
l_b_search_min_avail_flag    VARCHAR2(1) := 'N';
l_b_srch_org_hier_id_flag    VARCHAR2(1) := 'N';
l_b_srch_st_org_id_flag      VARCHAR2(1) := 'N';
l_b_min_can_sc_req_for_nom   VARCHAR2(1) := 'N';
/* l_b_nn_lb_std_bl_rt_sch_id_f VARCHAR2(1) := 'N'; Commented for bug #4630836 */
l_b_proj_bil_xch_rt_flag     VARCHAR2(1) := 'N';
l_b_pjfnc_bil_xch_rt_flag    VARCHAR2(1) := 'N';
l_b_fnding_xch_rt_flag       VARCHAR2(1) := 'N';
l_b_enable_auto_srch_flag    VARCHAR2(1) := 'N';
l_b_srch_cntry_code_flag     VARCHAR2(1) := 'N';
l_b_invproc_crncy_tp_flag    VARCHAR2(1) := 'N';
l_b_revproc_crncy_cd_flag    VARCHAR2(1) := 'N';
l_b_prj_bil_rt_dt_code_flag  VARCHAR2(1) := 'N';
l_b_proj_bil_rt_tp_flag      VARCHAR2(1) := 'N';
l_b_prjfnc_crncy_code_flag   VARCHAR2(1) := 'N';
l_b_prjfnc_bil_rt_dt_cd_f    VARCHAR2(1) := 'N';
l_b_prjfnc_bil_rt_tp_flag    VARCHAR2(1) := 'N';
l_b_fndng_rt_dt_cd_flag      VARCHAR2(1) := 'N';
l_b_fnding_rt_type_flag      VARCHAR2(1) := 'N';
l_b_bsln_fnding_flag         VARCHAR2(1) := 'N';
l_b_prjfnc_cst_rt_tp_flag    VARCHAR2(1) := 'N';
l_b_inv_bill_txn_cur_flag    VARCHAR2(1) := 'N';
l_b_multi_crncy_bil_flag     VARCHAR2(1) := 'N';
l_b_prj_bil_rt_dt_flag       VARCHAR2(1) := 'N';
l_b_prjfnc_bil_rt_dt_flag    VARCHAR2(1) := 'N';
l_b_fnding_rt_dt_flag        VARCHAR2(1) := 'N';
l_b_prjfnc_cst_rt_dt_flag    VARCHAR2(1) := 'N';
l_b_asgn_prec_tsk_flag       VARCHAR2(1) := 'N';
l_b_splt_cst_fm_wp_flag      VARCHAR2(1) := 'N';
l_b_splt_cst_fm_bill_flag    VARCHAR2(1) := 'N';
l_b_adv_act_set_id_flag      VARCHAR2(1) := 'N';
l_b_st_adv_act_set_flag      VARCHAR2(1) := 'N';
l_b_pri_code_flag            VARCHAR2(1) := 'N';
l_b_retn_bil_inv_fmt_id_flg  VARCHAR2(1) := 'N';
l_b_retn_acnt_flag           VARCHAR2(1) := 'N';
l_b_reval_fndng_flag         VARCHAR2(1) := 'N';
l_b_sec_lvl_flag             VARCHAR2(1) := 'N';
l_b_lbr_disc_rsn_code_flg    VARCHAR2(1) := 'N';
l_b_nn_lbr_disc_rsn_cd_flg   VARCHAR2(1) := 'N';
l_b_inc_gn_los_flag          VARCHAR2(1) := 'N';

l_b_lb_sch_tp_fg             VARCHAR2(1) := 'N';
l_b_nn_lb_sch_tp_fg          VARCHAR2(1) := 'N';
l_b_emp_bill_rt_sch_id_fg2   VARCHAR2(1) := 'N';
l_b_jb_bill_rt_sch_id_fg2    VARCHAR2(1) := 'N';
l_b_lb_sch_fx_dt_fg          VARCHAR2(1) := 'N';
l_b_lb_sch_dsct_fg           VARCHAR2(1) := 'N';
l_b_lb_disc_rn_cd_fg2        VARCHAR2(1) := 'N';
l_b_rv_ind_rt_sch_id_fg      VARCHAR2(1) := 'N';
l_b_inv_ind_rt_sch_id_fg     VARCHAR2(1) := 'N';
l_b_ind_sch_fx_dt_fg         VARCHAR2(1) := 'N';
l_b_inv_ind_sch_fx_dt_fg     VARCHAR2(1) := 'N';
l_b_nn_lb_bill_rt_org_id_fg  VARCHAR2(1) := 'N';
l_b_n_lb_st_bl_rt_sc_id_fg2  VARCHAR2(1) := 'N';
l_b_nn_lb_sch_fx_dt_fg       VARCHAR2(1) := 'N';
l_b_nn_lb_sch_dst_fg         VARCHAR2(1) := 'N';
l_b_n_lb_disc_rsn_cd_fg2     VARCHAR2(1) := 'N';
l_b_as_alloc_mth_fg          VARCHAR2(1) := 'N';
l_b_cp_evt_proc_fg           VARCHAR2(1) := 'N';
l_b_cint_rt_sch_id_fg        VARCHAR2(1) := 'N';
l_b_cint_elg_fg              VARCHAR2(1) := 'N';
l_b_cint_stp_dt_fg           VARCHAR2(1) := 'N';
--end bug 2955326
l_update_task_structure      VARCHAR2(1) := 'N'; -- Added for Bug 3548473 : 3627124
l_ref_task_id       NUMBER := null; -- aditi added for Bug 3801314 : 3627124
l_update_wbs_flag            VARCHAR2(1) := 'N'; -- Added for Bug #3931805
-- Bug 3075609. In update project context it is possible
-- that we can create a new structure version when already some
-- working versions exist. This is true in split workplan context.
-- This info will be passed to the process_task_structure_bulk api
-- through this variable.
l_create_task_versions_only  VARCHAR2(1) := 'N';
-- Bug 6248841
l_b_cc_tax_task_id          VARCHAR2(1) := 'N';
l_cc_tax_task_numb          PA_TASKS.TASK_NUMBER%TYPE;

  /* Bug 3077676 */
   l_cust_acc_rel_code pa_implementations.cust_acc_rel_code%TYPE;
   CURSOR get_cust_acc_rel_code IS
   Select cust_acc_rel_code
   From pa_implementations;

   l_deliverable_id NUMBER; -- 3435905
   -- 3773373 removed below local variable usage
--   i_dlvr           NUMBER := 0; -- 3435905
   i_actn           NUMBER := 0; -- 3435905
   l_dlvr_dml_action VARCHAR2(30) := null ; -- 3435905
   l_unique_flag     VARCHAR2(1) := null ; -- 3435905
   l_is_wp_seperate_from_fn     VARCHAR2(1) := 'N';  -- Added for Bug#3451073

---------------------- FP_M changes begin (venkat) 1 ---------------------------

----Comment ---- l_sys_program_flag VARCHAR2(1) := 'N'; --------------------
l_b_sys_program_flag_fg		 VARCHAR2(1) := 'N'; -- Bug # 5072032.
l_b_allow_multi_prog_rollup_fg	 VARCHAR2(1) := 'N'; -- Bug # 5072032.

l_enable_top_task_cust_flag  VARCHAR2(1)    := 'N';
l_enable_top_task_inv_mth_flag VARCHAR2(1)  := 'N';
l_projfunc_attr_for_ar_flag  VARCHAR2(1)    :='N';

--------------------- FP_M changes end (venkat) ---------------------------------

/* Start of code for bug #2111806 */
-- Start of Bug fix 4878696
-- Commented this cursor for Performance Bug 4878696
-- CURSOR c_prj(c_project_id IN NUMBER ) IS
-- select project_system_status_code
--      ,project_type_class_code
-- from pa_projects_v
-- where project_id = c_project_id;

-- Added the following cursor instead of the commented one as above for Performance Bug 4878696
CURSOR c_prj(c_project_id IN NUMBER ) IS
select PROJECT_SYSTEM_STATUS_CODE , PROJECT_TYPE_CLASS_CODE
       from pa_projects_all ppa,pa_project_statuses pps,pa_project_types ppt
where ppa.project_id = c_project_id
  and ppa.PROJECT_STATUS_CODE = pps.PROJECT_STATUS_CODE
  and ppa.PROJECT_TYPE = ppt.PROJECT_TYPE
  and pps.STATUS_TYPE = 'PROJECT'
  and ppt.ORG_ID= ppa.ORG_ID ;

-- End of Bug fix 4878696

CURSOR c_prj_count(c_project_id IN NUMBER ) IS
select count(*)
  from pa_project_players
 where project_id = c_project_id
   and project_role_type='PROJECT MANAGER';

l_proj_status       pa_projects_all.project_status_code%TYPE;
l_proj_type_class       pa_project_types_all.project_type_class_code%TYPE;
l_prj_mgr_count         NUMBER;
/* End of code for bug #2111806. */

l_old_cust_top_task_flag varchar2(1); -- 4188765 Added local variable
l_old_date_eff_funds_flag varchar2(1); -- sunkalya federal Bug#5511353

-- Start of Addition for bug 4191009.
   CURSOR l_code_percentage_csr (l_project_id NUMBER,
                                 l_class_category VARCHAR2,
                 l_class_code VARCHAR2 )
   IS
   SELECT code_percentage
   FROM pa_project_classes
   WHERE project_id     = l_project_id
   AND   class_category = l_class_category
   AND   class_code     = l_class_code;

   TYPE class_code_tbl_type IS TABLE OF pa_project_classes.class_code%type
    INDEX BY BINARY_INTEGER;

  class_code_tbl class_code_tbl_type;
  l_code_percentage pa_project_classes.code_percentage%type;

-- END of Addition for bug 4191009.

-- 5348726 :: Start of Addition for bug#5294891.
        CURSOR c_get_class_code_id(l_class_category VARCHAR2,
                                   l_class_code VARCHAR2 )
        IS
        SELECT class_code_id
        FROM PA_CLASS_CODES
        WHERE class_category = l_class_category
        AND class_code = l_class_code;

        l_old_class_code_id pa_class_codes.class_code_id%type;
        l_new_class_code_id pa_class_codes.class_code_id%type;
-- END of Addition for bug# 5294891.

-- for opportunity value changes
-- adarora --Changes BEGIN for Bug 4473105
l_expected_approval_date  DATE;
l_projfunc_currency_code  VARCHAR2(15);
l_project_currency_code   VARCHAR2(15);
l_opportunity_value       NUMBER;
l_opp_value_currency_code VARCHAR2(15);


CURSOR l_get_details_for_opp_csr (c_project_id IN NUMBER) IS
SELECT expected_approval_date, projfunc_currency_code, project_currency_code
FROM   pa_projects
WHERE  project_id = c_project_id;

CURSOR l_get_details_for_opp_csr2 (c_project_id IN NUMBER) IS
SELECT opportunity_value, opp_value_currency_code
FROM   pa_project_opp_attrs
WHERE  project_id = c_project_id;

--Changes END for Bug 4473105

-- Begin Bug # 4582750.

l_x_return_status    VARCHAR2(255);
l_x_msg_count        NUMBER;
l_x_msg_data         VARCHAR2(2000);
l_prev_locked_status VARCHAR2(1) := null;

-- End Bug # 4582750.
l_valid_proj_flag BOOLEAN := false; --tracking
l_error_msg_code  VARCHAR2(200);

-- Bug # 4329284.

cursor cur_proj_name (c_project_id NUMBER) is
select ppa.name
from pa_projects_all ppa
where ppa.project_id = c_project_id;

cursor cur_prog_name (c_project_id NUMBER) is
select ppa.name
from pa_projects_all ppa, pa_object_relationships por
where ppa.project_id = por.object_id_to2
and por.object_id_to2 = c_project_id
and por.relationship_type in ('LW','LF')
union all
select ppa.name
from pa_projects_all ppa, pa_object_relationships por
where ppa.project_id = por.object_id_from2
and por.object_id_from2 = c_project_id
and por.relationship_type in ('LW','LF');

l_proj_name VARCHAR2(30);
l_prog_name VARCHAR2(30);

-- Bug # 4329284.

--Bug#5131471. Added the following cursors and the local variables --Sunkalya

CURSOR cur_customer_status(l_customer_id number)
IS
        SELECT  Nvl(cust_acct.status,'A')
        FROM    hz_parties party,
                hz_cust_accounts cust_acct
        WHERE
                cust_acct.party_id              = party.party_id AND
                cust_acct.cust_account_id       = l_customer_id;

l_cust_status                   VARCHAR2(1) :=  null;
--End of code change for Bug#5131471.

-- 5191417 Added below cursor to validate priority_code

l_valid_prio_code VARCHAR2(1) := 'N';

CURSOR priority_code_csr(p_priority_code IN VARCHAR2) IS
Select
        'Y'
from
        pa_lookups
where
        lookup_type = 'PA_PROJECT_PRIORITY_CODE'
   and  lookup_code = p_priority_code ;

-- 5191417 end

-- Bug#5191699. Added the cursor and the local variable below for validating
--              project security level.This can be either 'Enterprise' or 'Secured'.

l_check_sec_level       VARCHAR2(1) := 'N';

CURSOR cur_check_sec_level(p_proj_sec_level IN VARCHAR2 ) IS
SELECT 'Y'  FROM
dual
WHERE EXISTS
        (SELECT NULL FROM pa_lookups
         WHERE
                lookup_type     =       'PA_PROJECT_ACCESS_LEVEL' AND
                lookup_code     =       p_proj_sec_level
        );
-- End of code changes for Bug#5191699 in declare section


--Bug#5191521.  Added the cursor and the local variable below for validating
--              probability member id.

l_check_prob_id VARCHAR2(1) := 'N';

CURSOR  cur_validate_prob_member( p_project_id IN NUMBER ,p_probability_member_id IN NUMBER )
IS
SELECT 'Y' FROM dual
WHERE  EXISTS
        (
                SELECT
                NULL
                FROM
                        pa_probability_members ppm,
                        pa_projects pp,
                        pa_project_types ppt
                WHERE
                        pp.project_type                 =       ppt.project_type AND
                        pp.org_id                       =       ppt.org_id AND
                        ppt.probability_list_id         =       ppm.probability_list_id AND
                        pp.project_id                   =       p_project_id AND
                        ppm.probability_member_id       =       p_probability_member_id AND
                        trunc(sysdate) BETWEEN ppm.start_date_active AND nvl(ppm.end_date_active,trunc(sysdate))
        );
--End of code changes for Bug#5191521 in declare section

--Bug#5222248. The following cursor and local vairable are added for validating the work type id passed

CURSOR cur_check_work_type(p_project_id IN NUMBER ,p_work_type_id IN NUMBER ) IS
SELECT
'Y'
FROM
pa_work_types_vl pwt,
pa_projects      pp,
pa_project_types  ppt
WHERE
trunc(sysdate) BETWEEN  pwt.start_date_active AND  nvl(pwt.end_date_active,trunc(SYSDATE)) AND
pp.project_type                 =       ppt.project_type AND
pp.org_id                       =       ppt.org_id AND
pwt.billable_capitalizable_flag =       Decode(ppt.project_type_class_code,'INDIRECT', 'N', pwt.billable_capitalizable_flag) AND
pp.project_id                   =       p_project_id AND
pwt.work_type_id                =       p_work_type_id;

l_check_work_type VARCHAR2(1) := 'N';

--Bug#5222248.

--Bug#5188931. Added the following cursors and local variables for validating project currency code

CURSOR cur_check_cur_code(p_currency_code IN VARCHAR2 )
IS
SELECT
'Y'
FROM
fnd_currencies_vl
WHERE
        NVL(enabled_flag, 'Y')  =       'Y'                     AND
        SYSDATE  BETWEEN  NVL(start_date_active,SYSDATE)        AND
                          NVL(end_date_active,  SYSDATE)        AND
        currency_code           =       p_currency_code;

CURSOR cur_check_prvdr_flag(p_project_id IN NUMBER )
IS
SELECT
ppt.cc_prvdr_flag
FROM
pa_projects pp,
pa_project_types ppt
WHERE
pp.project_type         =       ppt.project_type AND
pp.org_id               =       ppt.org_id       AND --this condition is not mandatory
pp.project_id           =       p_project_id;

l_check_cur_code_flag VARCHAR2(1) :=    'N';
l_allow_update_flag   VARCHAR2(1) :=    'Y';
l_prvdr_flag          VARCHAR2(1);

--Bug#5188931.

--This cursor is introduced for Bug#5196996 to validate the role type passed thru key member record

CURSOR l_project_role_types_csr (p_role_type IN VARCHAR2,p_project_id IN number)
   IS
select 'x'
from pa_project_role_types_v roles,
     pa_role_controls controls,
     pa_projects_all proj
 where proj.project_id=p_project_id
 and proj.ROLE_LIST_ID is null
 and roles.project_role_id=controls.project_role_id
 and roles.PROJECT_ROLE_TYPE=p_role_type
 and controls.role_control_code='ALLOW_AS_PROJ_MEMBER'
 and trunc(sysdate) between start_date_active and nvl(end_date_active,sysdate)
 union all
select 'x'
 from pa_project_role_types_v roles,
             pa_role_controls controls,
     pa_projects_all proj,
     pa_role_list_members prlm
 where proj.project_id=p_project_id
 and proj.ROLE_LIST_ID =prlm.role_list_id
 and prlm.project_role_id = roles.project_role_id
 and roles.project_role_id=controls.project_role_id
 and roles.PROJECT_ROLE_TYPE=p_role_type
 and controls.role_control_code='ALLOW_AS_PROJ_MEMBER'
 and trunc(sysdate) between start_date_active and nvl(end_date_active,sysdate);

 --Bug#5196996

l_cc_process_labor_flag  varchar2(1) ; /* Added for Bug 5395048 */
l_cc_process_nl_flag  varchar2(1) ; /* Added for Bug 5395048 */

--sunkalya federal bug#5511353

CURSOR cur_enable_funds_flag(p_project_id IN VARCHAR2)
IS
SELECT 'Y'
FROM
pa_projects_all p,
pa_project_types_all pt
WHERE
p.project_id			=	p_project_id	AND
pt.project_type_class_code	=	'CONTRACT'	AND
p.project_type			=	pt.project_type AND
pt.CC_PRVDR_FLAG		=	'N'		AND
pt.org_id			=	p.org_id;

l_enable_funds_flag	VARCHAR2(1);
l_date_eff_funds_flag   VARCHAR2(1) :=	NULL;

l_ar_rec_notify_flag   VARCHAR2(1) :=   NULL;  -- 7508661 : EnC
l_auto_release_pwp_inv VARCHAR2(1) :=   NULL;  -- 7508661 : EnC

CURSOR cur_rev_inv(p_project_id IN VARCHAR2)
	IS
	SELECT 'Y'
	FROM dual
	WHERE EXISTS
		(SELECT  NULL
		 FROM
		 pa_draft_revenues r
		 WHERE
		 r.project_id		=	p_project_id
		)
	OR EXISTS
		(SELECT  NULL
		 FROM
		 pa_draft_invoices i
		 WHERE
		 i.project_id		=	p_project_id
		);
	l_chk_rev_inv_flag	VARCHAR2(1) := NULL;


CURSOR chk_task_level_funding(p_project_id IN VARCHAR2)
	IS
	SELECT 'Y'
	FROM dual
	WHERE exists
		(	select 1
			from  pa_summary_project_fundings
			where project_id = p_project_id
			and task_id is not null
		);

	l_chk_task_level_funding VARCHAR2(1) := NULL;

	CURSOR count_cust(p_project_id IN VARCHAR2)
	IS
	SELECT count(*)
	FROM pa_project_customers
	WHERE project_id =  p_project_id;

	l_count_cust	VARCHAR2(1) := NULL;

--sunkalya federal bug#5511353


--bug#5554475

 CURSOR cur_pa_impl
 IS
      SELECT default_rate_type
      FROM pa_implementations;

l_ALLOW_INV_USER_RATE_FLAG  VARCHAR2(1)  ;
l_INV_RATE_DATE        DATE;
l_INV_RATE_TYPE        VARCHAR2 (256) ;
l_USER_INV_RATE_TYPE   VARCHAR2 (256) ;
l_INV_CURRENCY_CODE    VARCHAR (15) ;
l_INV_EXCHANGE_RATE    NUMBER ;
l_mcb_flag             varchar2(1);
l_cc_prvdr_flag        varchar2(1);

--bug#5554475

l_default_top_task_cust_flag varchar2(1); --bug 5554578

--Bug#9110781
l_rowid                 VARCHAR2(255);
l_obj_status_change_id  NUMBER;
l_old_sys_status        VARCHAR2(30);
l_new_sys_status        VARCHAR2(30);

CURSOR cur_get_system_status(c_status_code IN VARCHAR2) IS
SELECT pps.project_system_status_code
FROM   pa_project_statuses pps
WHERE  pps.project_status_code = nvl(c_status_code,' ');

BEGIN

    SAVEPOINT   Update_project_pub;

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN
       FND_MSG_PUB.Initialize;
    END IF;

    --4218977, rtarway
    --we need to set this parameter only when called in AMG/MSP and not in publish flow
    --dbms_output.put_line('p_project_in.project_relationship_code'||p_project_in.project_relationship_code);
    if (p_pm_product_code <> 'WORKPLAN') then
         G_OP_VALIDATE_FLAG := p_op_validate_flag ;
     G_TASK_STR_UPDATE_MODE      := p_update_mode ; -- DHI ER , rtarway BUG 4413568
    end if;

    --  Standard call to check for call compatibility.
    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN
       RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

    p_return_status :=  FND_API.G_RET_STS_SUCCESS;

    l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

   -- <Bug#2881768>
   -- If structure_version_id has been provided
   -- check to see if this version is updatable
   -- if not, then throw error and return

   l_structure_version_id := p_structure_in.structure_version_id;

   --3703440, rtarway
    G_structure_in_rec.pa_project_id                  := p_structure_in.pa_project_id;
    G_structure_in_rec.structure_type                 := p_structure_in.structure_type;
    G_structure_in_rec.structure_version_name         := p_structure_in.structure_version_name;
    G_structure_in_rec.structure_version_id           := p_structure_in.structure_version_id;
    G_structure_in_rec.DESCRIPTION                    := p_structure_in.DESCRIPTION;


   --bug 4619824
   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'Checking if the project is a program project';
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;

    IF p_pm_product_code IS NOT NULL
       AND p_pm_product_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       AND p_pm_product_code <> 'WORKPLAN'   --bug 4621311
       AND PA_RELATIONSHIP_UTILS.Check_subproject_link_exists( p_project_in.pa_project_id ) = 'Y'
       AND p_structure_in.structure_version_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR -- Added the condition for Bug 7248969
       AND p_tasks_in.count > 0 -- Added the condition for Bug 7248969
    THEN
        PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                             p_msg_name => 'PA_PS_CANT_UPDATE_PROG_PRJ');
        RAISE FND_API.G_EXC_ERROR;
    END IF;
   --end bug 4619824

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'Calling PA_PROJECT_STRUCTURE_UTILS.is_structure_version_updatable' || p_structure_in.structure_version_id;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;

   IF ( l_structure_version_id IS NOT NULL AND l_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
   THEN

      --bug 4538849

      -- Begin Bug # 4582750.

      l_prev_locked_status := PA_PROJECT_STRUCTURE_UTILS.IS_STRUC_VER_LOCKED_BY_USER(FND_GLOBAL.USER_ID,l_structure_version_id);

      if ( l_prev_locked_status = 'O' ) then

      -- End Bug # 4582750.

           --if yes, raise error.
           PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
           p_msg_name => 'PA_STR_LOCKED_BY_OTHER');
           RAISE FND_API.G_EXC_ERROR;

       -- Begin Bug # 4582750.

       elsif ( l_prev_locked_status = 'N' ) then

            if (p_update_mode = 'PA_UPD_WBS_ATTR') and (p_pm_product_code <> 'WORKPLAN') then -- Bug # 4758888.

                      IF l_debug_mode = 'Y' THEN
                          pa_debug.g_err_stage := 'Before calling pa_project_structure_utils.lock_unlock_wp_str_autonomous for LOCKING'||
                                'p_project_in.pa_project_id='||p_project_in.pa_project_id||
                                '-l_structure_version_id='||l_structure_version_id;
                                pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
                      END IF;

                pa_project_structure_utils.lock_unlock_wp_str_autonomous
                (p_project_id                   => p_project_in.pa_project_id
                ,p_structure_version_id         => p_structure_in.structure_version_id
                ,p_lock_status_code             => 'LOCKED'
                ,p_calling_module               => 'PA_UPD_WBS_ATTR_UN' /*Bug#6414944*/
                ,x_return_status                => l_x_return_status
                ,x_msg_count                    => l_x_msg_count
                ,x_msg_data                     => l_x_msg_data);

                        IF l_debug_mode = 'Y' THEN
                           pa_debug.g_err_stage := 'After  calling pa_project_structure_utils.lock_unlock_wp_str_autonomous  for LOCKING'||
                                'l_x_return_status='||l_x_return_status;
                           pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
                        END IF;

                       IF l_x_return_status =  FND_API.G_RET_STS_UNEXP_ERROR
                       THEN
                           p_project_out.return_status := l_x_return_status;
                           RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

                       ELSIF l_x_return_status = FND_API.G_RET_STS_ERROR
                       THEN
                          p_project_out.return_status := l_x_return_status;
                          RAISE  FND_API.G_EXC_ERROR;
                       END IF;

        end if;

    -- End Bug # 4582750.

      end if;
      --end bug 4538849

      struct_ver_updatable := PA_PROJECT_STRUCTURE_UTILS.is_structure_version_updatable(l_structure_version_id);

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'struct_ver_updatable='||struct_ver_updatable;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;

      IF (struct_ver_updatable IS NULL OR struct_ver_updatable = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
         OR struct_ver_updatable = 'N')
      THEN
         -- add error message to stack and throw exception
         IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
         THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_STRUCT_VER_NO_UPDATE'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'N'
               ,p_msg_context      => 'GENERAL'
               ,p_attribute1       => ''
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
         END IF;
         p_project_out.return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
      /*  bug 4538849
      --bug 4413568, DHI ER, rtarway
      ELSIF (struct_ver_updatable = 'Y') THEN
          -- structure version is locked by another user check must be done in both update modes. bug 4519809
          --IF (p_update_mode = 'PA_UPD_TASK_ATTR') THEN  --bug 4534919
              --Check if str version is locked by another user
               if ( PA_PROJECT_STRUCTURE_UTILS.IS_STRUC_VER_LOCKED_BY_USER(FND_GLOBAL.USER_ID,l_structure_version_id) = 'O' ) then
               --if yes, raise error.
               PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
               p_msg_name => 'PA_STR_LOCKED_BY_OTHER');
               RAISE FND_API.G_EXC_ERROR;
           end if;
          --END IF;
       */
      END IF;
   END IF;
   l_structure_version_id := null;
   -- </Bug#2881768>

--Organization Forecasting.
--Do not allow updating an org project
        IF PA_FP_ORG_FCST_UTILS.check_org_project(
              p_project_id        => p_project_in.pa_project_id
             ,x_return_status     => l_return_status
             ,x_err_code          => l_err_code
            ) = 'Y'
        THEN
           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
           THEN
               pa_interface_utils_pub.map_new_amg_msg
               ( p_old_message_code => 'PA_CANT_UPD_ORG_PRJ'
                  ,p_msg_attribute    => 'CHANGE'
                  ,p_resize_flag      => 'N'
                  ,p_msg_context      => 'GENERAL'
                  ,p_attribute1       => ''
                  ,p_attribute2       => ''
                  ,p_attribute3       => ''
                  ,p_attribute4       => ''
                  ,p_attribute5       => '');
           END IF;

--           PA_UTILS.ADD_MESSAGE('PA', 'PA_ORG_FC_CANT_UPD_ORG_PRJ');
           p_project_out.return_status := FND_API.G_RET_STS_ERROR;
           RAISE FND_API.G_EXC_ERROR;
        END IF;
--Organization Forecasting.
--Do not allow updating an org project

-- 22-DEC-97, jwhite:
--  Initialize New OUT-parameter to indicate workflow status

-- Set Worflow Started Status -------------------------------------------------

    p_workflow_started    := 'N';
-- ------------------------------------------------------------------------------------


--  pm_product_code is mandatory

--bug 2841158
--    IF ( p_pm_product_code IS NULL
--    OR p_pm_product_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
    IF ( p_pm_product_code IS NOT NULL
    AND p_pm_product_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
--bug 284115
       AND p_pm_product_code <> 'WORKPLAN'    --bug 2665656
    THEN

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PRODUCT_CODE_IS_MISSING'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;
  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
  RAISE FND_API.G_EXC_ERROR;
    END IF;

--bug 2841158
    IF p_pm_product_code <> 'WORKPLAN'
       AND p_pm_product_code IS NOT NULL
       AND p_pm_product_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
--bug 2841158

          /*added for bug no :2413400*/
        OPEN p_product_code_csr (p_pm_product_code);
        FETCH p_product_code_csr INTO l_pm_product_code;
        CLOSE p_product_code_csr;

        IF l_pm_product_code <> 'X'
           AND p_pm_product_code <> 'WORKPLAN'    --bug 2665656
        THEN

        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PRODUCT_CODE_IS_INVALID'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
        END IF;
        p_project_out.return_status := FND_API.G_RET_STS_ERROR;
        p_return_status             := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;
        END IF;
   END IF;   --bug 2841158

    l_resp_id := FND_GLOBAL.Resp_id;
    l_user_id := FND_GLOBAL.User_id;
    --l_module_name := p_pm_product_code||'.'||'PA_PM_UPDATE_PROJECT';
    l_module_name := 'PA_PM_UPDATE_PROJECT';

    --bug 2665656
    IF NVL( p_pm_product_code, 'WORKPLAN' ) = 'WORKPLAN'
    THEN
       l_pm_product_code := null;
    END IF;
    --bug 2665656


--Moved this code here before calling security check to get project id in l_project_i d
--bug 2471668
 -- convert pm_project_reference to id

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'Performing ref to id conversion...';
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


    Pa_project_pvt.Convert_pm_projref_to_id (
         p_pm_project_reference  => p_project_in.pm_project_reference,
         p_pa_project_id         => p_project_in.pa_project_id,
         p_out_project_id        => l_project_id,
         p_return_status         => l_return_status );


      IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR
      THEN
         p_project_out.return_status := l_return_status;
         RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
         p_project_out.return_status := l_return_status;
         RAISE  FND_API.G_EXC_ERROR;
      END IF;
--bug 2471668


   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'Performing security check...';
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;

    -- As part of enforcing project security, which would determine
    -- whether the user has the necessary privileges to update the project
    -- need to call the pa_security package

    pa_security.initialize (X_user_id        => l_user_id,
                            X_calling_module => l_module_name);

    -- Actions performed using the APIs would be subject to
    -- function security. If the responsibility does not allow
    -- such functions to be executed, the API should not proceed further
    -- since the user does not have access to such functions

    PA_INTERFACE_UTILS_PUB.G_PROJECt_ID := l_project_id;  --bug 2471668 ( in the project context )

    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version_number,
       p_responsibility_id  => l_resp_id,
       p_function_name      => 'PA_PM_UPDATE_PROJECT',
       p_msg_count      => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed );


     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
      RAISE FND_API.G_EXC_ERROR;
      END IF;
        IF l_function_allowed = 'N' THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
     p_return_status := FND_API.G_RET_STS_ERROR;
     RAISE FND_API.G_EXC_ERROR;
        END IF;


/* Moving this code before doing security check for bug 2471668
 -- convert pm_project_reference to id

    Pa_project_pvt.Convert_pm_projref_to_id (
         p_pm_project_reference  => p_project_in.pm_project_reference,
         p_pa_project_id         => p_project_in.pa_project_id,
         p_out_project_id        => l_project_id,
         p_return_status         => l_return_status );


      IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR
      THEN
         p_project_out.return_status := l_return_status;
         RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
         p_project_out.return_status := l_return_status;
         RAISE  FND_API.G_EXC_ERROR;
      END IF;
*/ --bug 2471668

-- Get segment1 for AMG messages

   OPEN l_amg_project_csr( l_project_id );
   FETCH l_amg_project_csr INTO l_amg_segment1;
   CLOSE l_amg_project_csr;


      -- Now verify whether project security allows the user to update
      -- project

      IF pa_security.allow_query (x_project_id => l_project_id ) = 'N' THEN

         -- The user does not have query privileges on this project
         -- Hence, cannot update the project.Raise error
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PROJECT_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
     p_return_status := FND_API.G_RET_STS_ERROR;
     RAISE FND_API.G_EXC_ERROR;
      ELSE
            -- If the user has query privileges, then check whether
            -- update privileges are also available
         IF pa_security.allow_update (x_project_id => l_project_id ) = 'N' THEN

            -- The user does not have update privileges on this project
            -- Hence , raise error
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PROJECT_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
     p_return_status := FND_API.G_RET_STS_ERROR;
     RAISE FND_API.G_EXC_ERROR;
        END IF;
     END IF;

-- Lock this project and it's tasks for update
--  bug 4541103  OPEN l_lock_rows_csr( l_project_id );

-- Need to get the current project data

    OPEN l_project_csr (l_project_id);
    FETCH l_project_csr INTO l_project_rec;
    CLOSE l_project_csr;

    -- 4188765 , setting customer top task flag db value in local variable
    l_old_cust_top_task_flag := l_project_rec.enable_top_task_customer_flag;
    l_old_date_eff_funds_flag := l_project_rec.date_eff_funds_consumption; --sunkalya federal Bug#5511353

   -- anlee
   -- Added for intermedia search
   l_ctx_proj_name := l_project_rec.name;
   l_ctx_proj_number := l_project_rec.segment1;
   l_ctx_long_name := l_project_rec.long_name;
   l_ctx_desc := l_project_rec.description;
   l_ctx_update_flag := 'N';
   -- End of changes

   --bug 2738747      --update project
   G_Published_version_exists := PA_PROJ_TASK_STRUC_PUB.Published_version_exists( l_project_id );
   G_IS_WP_SEPARATE_FROM_FN   := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id );
   G_IS_WP_VERSIONING_ENABLED := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED( l_project_id );
   --bug 2738747
   G_WP_STR_EXISTS := PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( l_project_id );

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'G_Published_version_exists='||G_Published_version_exists;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
        pa_debug.g_err_stage := 'G_IS_WP_SEPARATE_FROM_FN='||G_IS_WP_SEPARATE_FROM_FN;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
        pa_debug.g_err_stage := 'G_IS_WP_VERSIONING_ENABLED='||G_IS_WP_VERSIONING_ENABLED;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
        pa_debug.g_err_stage := 'G_WP_STR_EXISTS='||G_WP_STR_EXISTS;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


--bug 2876703   --update_project
   IF G_IS_WP_SEPARATE_FROM_FN = 'N' AND
      p_structure_in.structure_type = 'WORKPLAN'
   THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PS_WP_NOT_SEP_FN'
                  ,p_msg_attribute    => 'CHANGE'
                  ,p_resize_flag      => 'N'
                  ,p_msg_context      => 'GENERAL'
                  ,p_attribute1       => ''
                  ,p_attribute2       => ''
                  ,p_attribute3       => ''
                  ,p_attribute4       => ''
                  ,p_attribute5       => '');
        END IF;
        RAISE FND_API.G_EXC_ERROR;
   END IF;
--bug 2876703

   -- "Change Project Currency" changes By avaithia for Bug 3912783
   --  << Start >>
   --  Functionality :-
   --  If Project Currency is changed ,then we should check whether this Project has any subprojects
   --  (or) whether this Project is a subproject of some other project
   --  If any of the above two is true ,then the Project Currency Change should not be allowed .

   --  Note : In the following "IF" statement ,it may look like "the case where project_currency_code is passed as NULL
   --         is not taken care of" . But existing code already takes care of this scenario (l_b_proj_cur_code value logic)

   --  This flag is set as 'Y' Only if the passed value is not null
   --  And dbms bind will happen for this project currency code ,Only if the l_b_proj_cur_code value is 'Y'

       IF ( p_project_in.project_currency_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
          AND ( p_project_in.project_currency_code IS NOT NULL)
       THEN
             IF nvl(p_project_in.project_currency_code,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                      <>  nvl(l_project_rec.project_currency_code,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
         THEN
           IF  PA_RELATIONSHIP_UTILS.Check_link_exists(l_project_id) = 'Y'
                   THEN
            -- Throw Error Message
                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                        THEN

                -- Bug # 4329284.

                /*
                pa_interface_utils_pub.map_new_amg_msg
                (p_old_message_code => 'PA_PS_PRJ_CURR_LNK_ERR'
                ,p_msg_attribute    => 'CHANGE'
                ,p_resize_flag      => 'N'
                ,p_msg_context      => 'GENERAL'
                                ,p_attribute1       => ''
                ,p_attribute2       => ''
                ,p_attribute3       => ''
                        ,p_attribute4       => ''
                    ,p_attribute5       => '');
                */

                open cur_proj_name(l_project_id);
                fetch cur_proj_name into l_proj_name;
                close cur_proj_name;

                open cur_prog_name(l_project_id);
                fetch cur_prog_name into l_prog_name;
                close cur_prog_name;

                PA_UTILS.ADD_MESSAGE('PA','PA_PS_PRJ_CURR_LNK_ERR','PROJ',l_proj_name,'PROG',l_prog_name); -- Bug # 4329284.

                -- Bug # 4329284.

            END IF ;
                        p_return_status :=  FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
                   END IF ;
             END IF ;
       END IF ;
   --  << End >>
   --  "Change Project Currency" changes By avaithia

   --bug 2738747
  ----dbms_output.put_line('PA_PROJECT_PUB.G_Published_version_exists'||PA_PROJECT_PUB.G_Published_version_exists);
   ----dbms_output.put_line('PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN'||PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN);
   ----dbms_output.put_line('PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED'||PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED);
   ----dbms_output.put_line('p_structure_in.structure_type'||p_structure_in.structure_type);
   ----dbms_output.put_line('p_pm_product_code'||p_pm_product_code);
   IF PA_PROJECT_PUB.G_Published_version_exists = 'Y'
      AND PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'
      AND PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y'
      AND p_structure_in.structure_type = 'FINANCIAL'
      AND p_pm_product_code <> 'WORKPLAN'    --This parameter should be checked bcoz for publishing we want it to syn up with pa_tasks . For publishing  p_pm_product_code  will have 'WORKPLAN'
   THEN
       --Change the flow to WORKPLAN
       l_structure_type := 'WORKPLAN';


   ELSE
       l_structure_type := p_structure_in.structure_type;
   END IF;
   --bug 2738747

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'l_structure_type='||l_structure_type;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


-- Need to fetch information from pa_project_types

/* Bug# 2891513- Added the variables for l_revaluate_funding and l_include_gains_and_losses */

    OPEN  l_project_type_csr(l_project_id);
    FETCH l_project_type_csr INTO  l_project_type_class_code,
                   l_service_type_code, l_revaluate_funding,l_include_gains_and_losses;
    CLOSE l_project_type_csr;

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'Preparing to update project level data...';
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;



     l_update_yes_flag := 'N';
     l_statement := 'UPDATE PA_PROJECTS SET ';

--PROJECT NUMBER
-- Check for implementation defined Project number generation mode
-- If project number generation is automatic then ignore the input
-- project number ,since it cannot be modified.Hence,the following
-- checks will be done only if the mode was 'MANUAL'

  IF G_PROJECT_NUMBER_GEN_MODE = 'MANUAL' THEN
     IF p_project_in.pa_project_number  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND p_project_in.pa_project_number IS NOT NULL
     THEN
        IF  p_project_in.pa_project_number <> l_project_rec.segment1
        THEN
            pa_project_utils.change_proj_num_ok
                (l_project_id,
                 l_err_code,
                 l_err_stage,
                 l_err_stack );
            IF l_err_code > 0
            THEN

    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
                   IF NOT pa_project_pvt.check_valid_message (l_err_stage)
                   THEN
                        pa_interface_utils_pub.map_new_amg_msg
                          ( p_old_message_code => 'PA_CANT_CHANGE_PROJ_NUM'
                           ,p_msg_attribute    => 'CHANGE'
                           ,p_resize_flag      => 'N'
                           ,p_msg_context      => 'PROJ'
                           ,p_attribute1       => l_project_rec.segment1
                           ,p_attribute2       => ''
                           ,p_attribute3       => ''
                           ,p_attribute4       => ''
                           ,p_attribute5       => '');
                     ELSE
                        pa_interface_utils_pub.map_new_amg_msg
                          ( p_old_message_code => l_err_stage
                           ,p_msg_attribute    => 'CHANGE'
                           ,p_resize_flag      => 'N'
                           ,p_msg_context      => 'PROJ'
                           ,p_attribute1       => l_project_rec.segment1
                           ,p_attribute2       => ''
                           ,p_attribute3       => ''
                           ,p_attribute4       => ''
                           ,p_attribute5       => '');
                   END IF;
                 END IF;

           p_project_out.return_status := FND_API.G_RET_STS_ERROR;

                 RAISE  FND_API.G_EXC_ERROR;

            ELSIF l_err_code < 0
            THEN

    p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;

                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
            END IF;
     -- BEGIN MSP interface patch

            -- Check for project number being numeric if project number type is
            -- defined as numeric

               BEGIN
                IF G_PROJECT_NUMBER_TYPE = 'NUMERIC' THEN
                   l_proj_num_numeric  :=
                     TO_NUMBER(p_project_in.pa_project_number);
                END IF;
               EXCEPTION
                 WHEN VALUE_ERROR THEN
                  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                    THEN
                        pa_interface_utils_pub.map_new_amg_msg
                          ( p_old_message_code => 'PA_PR_NUMERIC_NUM_REQ'
                           ,p_msg_attribute    => 'CHANGE'
                           ,p_resize_flag      => 'N'
                           ,p_msg_context      => 'PROJ'
                           ,p_attribute1       => l_project_rec.segment1
                           ,p_attribute2       => ''
                           ,p_attribute3       => ''
                           ,p_attribute4       => ''
                           ,p_attribute5       => '');
                  END IF;
                  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                  p_return_status             := FND_API.G_RET_STS_ERROR;
                  RAISE FND_API.G_EXC_ERROR;
               END ;

        -- END MSP interface patch -- Ensure that l_proj_num_numeric is defined

            OPEN l_project_number_unique_csr( p_project_in.pa_project_number );
            FETCH l_project_number_unique_csr INTO l_DUMMY;

            IF l_project_number_unique_csr%FOUND
            THEN
                CLOSE l_project_number_unique_csr;

    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_PR_EPR_PROJ_NUM_NOT_UNIQUE'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'MODP'
            ,p_attribute1       => l_project_rec.segment1
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
       END IF;

           p_project_out.return_status := FND_API.G_RET_STS_ERROR;

                 RAISE  FND_API.G_EXC_ERROR;
            END IF;

            CLOSE l_project_number_unique_csr;

--bug 2955326
/*
            l_statement := l_statement ||
                     ' SEGMENT1 = '||''''||
                           RTRIM(p_project_in.pa_project_number)||''''||',';
*/
            l_statement := l_statement ||
                       ' SEGMENT1 = :segment1,';
            l_b_segment1_flag := 'Y';
--end bug 2955326
            l_update_yes_flag := 'Y';

            -- anlee
            -- added for intermedia search
            l_ctx_proj_number := RTRIM(p_project_in.pa_project_number);
            l_ctx_update_flag := 'Y';
            -- End of changes

         END IF;
     END IF;
 END IF;

--PROJECT NAME

     IF p_project_in.project_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND p_project_in.project_name IS NOT NULL
     THEN
          IF p_project_in.project_name <> l_project_rec.name
          THEN

    OPEN l_project_name_unique_csr( p_project_in.project_name );
    FETCH l_project_name_unique_csr INTO l_dummy;

    IF l_project_name_unique_csr%FOUND
    THEN
      CLOSE l_project_name_unique_csr;

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PR_EPR_PROJ_NAME_NOT_UNIQUE'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'MODP'
               ,p_attribute1       => l_project_rec.segment1
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
         END IF;

             p_project_out.return_status := FND_API.G_RET_STS_ERROR;

                   RAISE  FND_API.G_EXC_ERROR;
              END IF;

              CLOSE l_project_name_unique_csr;

--bug 2955326
/*
               l_statement := l_statement ||
                          ' NAME = '||''''||
                               RTRIM(p_project_in.project_name)||''''||',' ;
*/
               l_statement := l_statement ||
                           ' NAME = :project_name, ';
               l_b_proj_name_flag := 'Y';
--end bug 2955326
               l_update_yes_flag := 'Y';

                -- anlee
                -- Added for intermedia search
                l_ctx_proj_name := RTRIM(p_project_in.project_name);
                l_ctx_update_flag := 'Y';
                -- End of changes
          END IF;
     END IF;

--LONG NAME

     IF p_project_in.long_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND p_project_in.long_name IS NOT NULL
     THEN
          IF p_project_in.long_name <> l_project_rec.long_name
          THEN

    OPEN l_long_name_unique_csr( p_project_in.long_name );
    FETCH l_long_name_unique_csr INTO l_dummy;

    IF l_long_name_unique_csr%FOUND
    THEN
      CLOSE l_long_name_unique_csr;

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PR_EPR_LONG_NAME_NOT_UNIQUE'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'MODP'
               ,p_attribute1       => l_project_rec.segment1
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
         END IF;

             p_project_out.return_status := FND_API.G_RET_STS_ERROR;

                   RAISE  FND_API.G_EXC_ERROR;
              END IF;

              CLOSE l_long_name_unique_csr;

--bug 2955326
/*
               l_statement := l_statement ||
                          ' LONG_NAME = '||''''||
                               RTRIM(p_project_in.long_name)||''''||',' ;
*/
                l_statement := l_statement ||
                           ' LONG_NAME = :long_name,';
                l_b_long_name_flag := 'Y';
--end bug 2955326
               l_update_yes_flag := 'Y';

                -- anlee
                -- Added for intermedia search
                l_ctx_long_name := RTRIM(p_project_in.long_name);
                l_ctx_update_flag := 'Y';
                -- End of changes
          END IF;
     END IF;


   IF p_project_in.pm_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       AND nvl(p_project_in.pm_project_reference,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
       <>  nvl(l_project_rec.pm_project_reference,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
       AND p_project_in.pm_project_reference IS NOT NULL THEN
--bug 2955326
/*
            l_statement := l_statement ||
                          ' PM_PROJECT_REFERENCE = '||''''||
                         RTRIM(p_project_in.pm_project_reference)||''''||',';
*/
            l_statement := l_statement ||
                          ' PM_PROJECT_REFERENCE = :pm_project_reference ,';
            l_b_pm_proj_ref_flag := 'Y';
--end bug 2955326
            l_update_yes_flag := 'Y';

   END IF;

--CARRYING_OUT_ORGANIZATION_ID
   IF p_project_in.carrying_out_organization_id
      <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
   AND p_project_in.carrying_out_organization_id IS NOT NULL THEN
       IF p_project_in.carrying_out_organization_id <>
             l_project_rec.carrying_out_organization_id THEN
          -- check whether this is a valid organization
             IF pa_project_pvt.check_valid_org
                (p_project_in.carrying_out_organization_id) = 'N' THEN
    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_INVALID_ORG'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_rec.segment1
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
    END IF;
    p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                RAISE  FND_API.G_EXC_ERROR;
             END IF;

        --  Code Added for the bug#1968394
        -- Test the function security for Org changes
        --
           IF (fnd_function.test('PA_PAXPREPR_UPDATE_ORG') = TRUE) THEN
             l_org_func_security := 'Y';
           ELSE
             l_org_func_security := 'N';
           END IF;


           pa_project_utils2.validate_attribute_change(
           X_Context                => 'ORGANIZATION_VALIDATION'
          ,X_insert_update_mode     => NULL
          ,X_calling_module         => 'UPDATE_PROJECT'
          ,X_project_id             => l_project_id
          ,X_task_id                => NULL
          ,X_old_value              =>
                    To_char(l_project_rec.carrying_out_organization_id)
          ,X_new_value              =>
                    To_char(p_project_in.carrying_out_organization_id)
          ,X_project_type           => l_project_rec.project_type
          ,X_project_start_date     => l_project_rec.start_date
          ,X_project_end_date       => l_project_rec.completion_date
          ,X_public_sector_flag     => l_project_rec.public_sector_flag
          ,X_task_manager_person_id => NULL
          ,X_Service_type           => NULL
          ,X_task_start_date        => NULL
          ,X_task_end_date          => NULL
          ,X_entered_by_user_id     => FND_GLOBAL.USER_ID
          ,X_attribute_category     => l_project_rec.attribute_category
          ,X_attribute1             => l_project_rec.attribute1
          ,X_attribute2             => l_project_rec.attribute2
          ,X_attribute3             => l_project_rec.attribute3
          ,X_attribute4             => l_project_rec.attribute4
          ,X_attribute5             => l_project_rec.attribute5
          ,X_attribute6             => l_project_rec.attribute6
          ,X_attribute7             => l_project_rec.attribute7
          ,X_attribute8             => l_project_rec.attribute8
          ,X_attribute9             => l_project_rec.attribute9
          ,X_attribute10            => l_project_rec.attribute10
          ,X_pm_product_code        => l_project_rec.pm_product_code
          ,X_pm_project_reference   => l_project_rec.pm_project_reference
          ,X_pm_task_reference      => NULL
--          ,X_functional_security_flag => NULL /*bug#1968394  */
          ,X_functional_security_flag => l_org_func_security /*bug#1968394  */
          ,x_warnings_only_flag     => l_warnings_only_flag --bug3134205
          ,X_err_code               => l_err_code
          ,X_err_stage              => l_err_stage
          ,X_err_stack              => l_err_stack );

           IF l_err_code > 0 THEN
         IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                   IF NOT pa_project_pvt.check_valid_message (l_err_stage) THEN
                     pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_PR_CANT_CHG_PROJ_TYPE'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'PROJ'
                      ,p_attribute1       => l_project_rec.segment1
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                  ELSE
                     pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => l_err_stage
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'PROJ'
                      ,p_attribute1       => l_project_rec.segment1
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                   END IF;
               END IF;
               p_project_out.return_status := FND_API.G_RET_STS_ERROR;
               RAISE  FND_API.G_EXC_ERROR;
           ELSIF l_err_code < 0 THEN
    p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
           END IF;

--bug 2955326
/*
           l_statement := l_statement || ' CARRYING_OUT_ORGANIZATION_ID = ' ||
                 TO_CHAR(p_project_in.carrying_out_organization_id)||',';
*/
           l_statement := l_statement || ' CARRYING_OUT_ORGANIZATION_ID = :carrying_out_org_id ,';
           l_b_co_org_id_flag := 'Y';
--end bug 2955326
           l_update_yes_flag := 'Y';

        END IF; -- IF p_project_in.carrying_out_organization_id <>
                -- PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     END IF; -- IF p_project_in.carrying_out_organization_id <>
             -- l_project_rec.carrying_out_organization_id

--PUBLIC_SECTOR_FLAG

       IF p_project_in.public_sector_flag <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       AND p_project_in.public_sector_flag IS NOT NULL      --NULL will be ignored
       THEN
          IF  p_project_in.public_sector_flag <>   l_project_rec.public_sector_flag
          THEN

        IF p_project_in.public_sector_flag NOT IN ('Y','N')
        THEN
          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN
            pa_interface_utils_pub.map_new_amg_msg
             ( p_old_message_code => 'PA_PUBLIC_SECTOR_INVALID'
              ,p_msg_attribute    => 'CHANGE'
              ,p_resize_flag      => 'N'
              ,p_msg_context      => 'PROJ'
              ,p_attribute1       => l_project_rec.segment1
              ,p_attribute2       => ''
              ,p_attribute3       => ''
              ,p_attribute4       => ''
              ,p_attribute5       => '');
          END IF;

              p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                  RAISE  FND_API.G_EXC_ERROR;
                END IF;

--bug 2955326
/*
                l_statement :=    l_statement ||
                      ' PUBLIC_SECTOR_FLAG = '||''''||
                      p_project_in.public_sector_flag||''''||',';

*/
                l_statement :=      l_statement ||
                            ' PUBLIC_SECTOR_FLAG = :public_sector_flag ,';
                l_b_pub_sec_flag := 'Y';
--end bug 2955326
                l_update_yes_flag := 'Y';
          END IF;
       END IF;

--DISTRIBUTION_RULE

       IF p_project_in.distribution_rule <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       OR p_project_in.distribution_rule IS NULL
       THEN

          IF p_project_in.distribution_rule IS NULL
          AND l_project_type_class_code = 'CONTRACT'
          THEN

    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
    THEN
            pa_interface_utils_pub.map_new_amg_msg
             ( p_old_message_code => 'PA_CONTRACT_DIST_RULE_NULL'
              ,p_msg_attribute    => 'CHANGE'
              ,p_resize_flag      => 'N'
              ,p_msg_context      => 'PROJ'
              ,p_attribute1       => l_project_rec.segment1
              ,p_attribute2       => ''
              ,p_attribute3       => ''
              ,p_attribute4       => ''
              ,p_attribute5       => '');
      END IF;

                p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                RAISE  FND_API.G_EXC_ERROR;
    ELSE

            IF  nvl(p_project_in.distribution_rule,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              <> nvl(l_project_rec.distribution_rule, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)

            THEN

               -- Verify whether the dist rule is a valid one
               IF pa_project_pvt.check_valid_dist_rule
                   (l_project_rec.project_type,
                  p_project_in.distribution_rule,
                  p_project_in.enable_top_task_inv_mth_flag ) = 'N'  --Bug 3279981
               THEN
      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN
            pa_interface_utils_pub.map_new_amg_msg
             ( p_old_message_code => 'PA_INVALID_DIST_RULE'
              ,p_msg_attribute    => 'CHANGE'
              ,p_resize_flag      => 'N'
              ,p_msg_context      => 'PROJ'
              ,p_attribute1       => l_project_rec.segment1
              ,p_attribute2       => ''
              ,p_attribute3       => ''
              ,p_attribute4       => ''
              ,p_attribute5       => '');
        END IF;

                  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                  RAISE  FND_API.G_EXC_ERROR;
               END IF;

               pa_project_utils.check_dist_rule_chg_ok (  l_project_id,
                           l_project_rec.distribution_rule,
                           p_project_in.distribution_rule,
                           l_err_code,
                           l_err_stage,
                           l_err_stack );

               IF l_err_code > 0
               THEN

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN
                    IF NOT pa_project_pvt.check_valid_message (l_err_stage)
                    THEN
                        pa_interface_utils_pub.map_new_amg_msg
                        ( p_old_message_code => 'PA_CANT_CHANGE_DIST_RULE'
                        ,p_msg_attribute    => 'CHANGE'
                        ,p_resize_flag      => 'N'
                        ,p_msg_context      => 'PROJ'
                        ,p_attribute1       => l_project_rec.segment1
                        ,p_attribute2       => ''
                        ,p_attribute3       => ''
                        ,p_attribute4       => ''
                        ,p_attribute5       => '');
                     ELSE
                        pa_interface_utils_pub.map_new_amg_msg
                        ( p_old_message_code => l_err_stage
                        ,p_msg_attribute    => 'CHANGE'
                        ,p_resize_flag      => 'N'
                        ,p_msg_context      => 'PROJ'
                        ,p_attribute1       => l_project_rec.segment1
                        ,p_attribute2       => ''
                        ,p_attribute3       => ''
                        ,p_attribute4       => ''
                        ,p_attribute5       => '');
                    END IF;
                  END IF;

                  p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                  RAISE  FND_API.G_EXC_ERROR;

               ELSIF l_err_code < 0
               THEN

      p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                  RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
               END IF;

--bug 2955326
/*
               l_statement :=   l_statement ||
                     ' DISTRIBUTION_RULE = '||''''||
                     p_project_in.distribution_rule||''''||',';
*/
                l_statement :=  l_statement ||
                        ' DISTRIBUTION_RULE = :dist_rule ,';
               --Bug 3279981 Review
               l_statement := l_statement ||' REVENUE_ACCRUAL_METHOD = :rev_acc_mth ,';
               l_statement := l_statement ||' INVOICE_METHOD = :inv_mth ,';

                l_b_dist_rule_flag := 'Y';
--end bug 2955326
               l_update_yes_flag := 'Y';
            END IF;
          END IF;
       END IF;

--DESCRIPTION

       IF p_project_in.description <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       OR p_project_in.description IS NULL
       THEN
          IF nvl(p_project_in.description,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
       <> nvl(l_project_rec.description, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           THEN
--bug 2955326
/*
             l_statement :=    l_statement ||
                  ' DESCRIPTION =  '||''''||
                    RTRIM(p_project_in.description)||''''||',';
*/
             l_statement :=    l_statement ||
                        ' DESCRIPTION = :descrp ,';
             l_b_desc_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';

             -- anlee
             -- Added for intermedia search
             l_ctx_desc := RTRIM(p_project_in.description);
             l_ctx_update_flag := 'Y';
             -- End of changes
          END IF;
       END IF;

--PROJECT_STATUS_CODE

       IF p_project_in.project_status_code <>
          PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       AND p_project_in.project_status_code IS NOT NULL  --NULL will be ignored
       THEN
          IF p_project_in.project_status_code <>
             l_project_rec.project_status_code THEN
       IF pa_project_pvt.check_valid_project_status
        (p_project_status => p_project_in.project_status_code ) = 'N'
    THEN
    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
            pa_interface_utils_pub.map_new_amg_msg
             ( p_old_message_code => 'PA_PROJECT_STATUS_INVALID'
              ,p_msg_attribute    => 'CHANGE'
              ,p_resize_flag      => 'N'
              ,p_msg_context      => 'PROJ'
              ,p_attribute1       => l_project_rec.segment1
              ,p_attribute2       => ''
              ,p_attribute3       => ''
              ,p_attribute4       => ''
              ,p_attribute5       => '');
      END IF;
    p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                RAISE  FND_API.G_EXC_ERROR;
       END IF;

            -- special case for update to and from 'CLOSED'
            IF  Pa_project_stus_utils.is_project_status_closed
                (p_project_in.project_status_code) = 'Y' THEN
                 l_closing_project := 'Y';
                 l_project_status_changed := 'Y';
            ELSIF  Pa_project_stus_utils.is_project_status_closed
                 (l_project_rec.project_status_code) = 'Y' THEN
                 l_reopening_project := 'Y';
                 l_project_status_changed := 'Y';
            ELSE
                l_project_status_changed := 'Y';
            END IF;
          END IF;
       END IF;

--PROJECT_START_DATE and PROJECT_COMPLETION_DATE

       l_project_start_date      := p_project_in.start_date;
       l_project_completion_date := p_project_in.completion_date;

       -- Bug 7520570: Do not update project dates when the flow is from MSP for the workplan structure
       IF p_pm_product_code = 'MSPROJECT' AND p_structure_in.structure_type = 'WORKPLAN' THEN
         l_project_start_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
         l_project_completion_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
       END IF;

 -- Bug 503976 Project Completion is set to default g_miss_date ... Starts

   IF l_project_in_rec.completion_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
   THEN l_project_in_rec.completion_date := NULL;
   END IF;

 -- Bug 503976 Project Completion is set to default g_miss_date ... Ends

pa_project_pvt.check_start_end_date
(p_old_start_date    => l_project_rec.start_date
,p_new_start_date    => l_project_start_date
,p_old_end_date      => l_project_rec.completion_date
,p_new_end_date      => l_project_completion_date
,p_update_start_date_flag  => l_update_start_date_flag
,p_update_end_date_flag    => l_update_end_date_flag
,p_return_status    => l_return_status );

/*--Bug 6511907 PJR Date Validation Enhancement ----- Start--*/
/*-- Validating Project Start and Completion Date against
  Resource Request/Assignments Min Start and Max End dates --*/

Declare
  l_validate           VARCHAR2(10);
  l_start_date_status  VARCHAR2(10);
  l_end_date_status    VARCHAR2(10);
Begin
 If l_project_start_date is not null or l_project_completion_date is not null then

   PA_PROJECT_DATES_UTILS.Validate_Project_Dates
               (l_project_id, l_project_start_date, l_project_completion_date,
                           l_validate, l_start_date_status, l_end_date_status);

   If l_validate = 'Y' and l_start_date_status = 'I' Then

      pa_utils.add_message
	   ( p_app_short_name  => 'PA'
	    ,p_msg_name	    => 'PA_PROJ_DATE_START_ERROR'
	    ,p_token1          => ''
	    ,p_value1          => ''
	    ,p_token2          => ''
	    ,p_value2          => ''
	    ,p_token3          => ''
	    ,p_value3          => ''
	   );

      RAISE  FND_API.G_EXC_ERROR;
   End If;

   If l_validate = 'Y' and l_end_date_status = 'I' Then

      pa_utils.add_message
	   ( p_app_short_name  => 'PA'
	    ,p_msg_name	    => 'PA_PROJ_DATE_FINISH_ERROR'
	    ,p_token1          => ''
	    ,p_value1          => ''
	    ,p_token2          => ''
	    ,p_value2          => ''
	    ,p_token3          => ''
	    ,p_value3          => ''
	   );

      RAISE  FND_API.G_EXC_ERROR;
   End If;
 End If;
End;

/*--Bug 6511907 PJR Date Validation Enhancement ----- End--*/
     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
         p_project_out.return_status := FND_API.G_RET_STS_ERROR;
     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
         p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     RAISE FND_API.G_EXC_ERROR;
      END IF;

-- Checking of valid project start and end date is done after adding and updating the tasks,
-- since dates of tasks might change to be within the project begin and end date.


       IF l_update_start_date_flag = 'Y'
       THEN
--bug 2955326
/*
             l_statement :=   l_statement ||
                     ' START_DATE = to_date('''||
                          to_char(l_project_start_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement :=   l_statement ||
                     ' START_DATE = :start_date ,';
             l_b_start_date_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
       END IF;

       IF l_update_end_date_flag = 'Y'
       THEN
--bug 2955326
/*
             l_statement :=   l_statement ||
                     ' COMPLETION_DATE = to_date('''||
                          to_char(l_project_completion_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement :=   l_statement ||
                     ' COMPLETION_DATE = :comp_date ,';
             l_b_comp_date_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
       END IF;

-- Update other date fields which are maintained only  in the external system

-- update Actual start date and actual finish date

/*  Task progress changes  : Actual start date should be updated from task progress and ignored from AMG
       IF (p_project_in.actual_start_date IS NOT NULL AND
           p_project_in.actual_start_date <>
           PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) AND
           NVL(l_project_rec.actual_start_date,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) <>
               p_project_in.actual_start_date THEN

             l_statement :=   l_statement ||
                     ' ACTUAL_START_DATE = to_date('''||
                          to_char(p_project_in.actual_start_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';


             l_update_yes_flag := 'Y';
       END IF;


       IF (p_project_in.actual_finish_date IS NOT NULL AND
           p_project_in.actual_finish_date <>
           PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) AND
           NVL(l_project_rec.actual_finish_date,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) <>
               p_project_in.actual_finish_date THEN

             l_statement :=   l_statement ||
                     ' ACTUAL_FINISH_DATE = to_date('''||
                         to_char(p_project_in.actual_finish_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
          l_update_yes_flag := 'Y';
       END IF;
*/

-- update early start date and early finish date
       IF (p_project_in.early_start_date IS NOT NULL AND
           p_project_in.early_start_date <>
           PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) AND
           NVL(l_project_rec.early_start_date,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) <>
               p_project_in.early_start_date THEN
--bug 2955326
/*
             l_statement :=   l_statement ||
                     ' EARLY_START_DATE = to_date('''||
                          to_char(p_project_in.early_start_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement :=   l_statement ||
                     ' EARLY_START_DATE = :early_start_date ,';
             l_b_early_sd_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
       END IF;

       IF (p_project_in.early_finish_date IS NOT NULL AND
           p_project_in.early_finish_date <>
           PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) AND
           NVL(l_project_rec.early_finish_date,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) <>
               p_project_in.early_finish_date THEN
--bug 2955326
/*
             l_statement :=   l_statement ||
                     ' EARLY_FINISH_DATE = to_date('''||
                          to_char(p_project_in.early_finish_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
                --Added the following error message to check whether the finish date is earlier than the start date.Bug#5185673
                IF p_project_in.early_start_date  IS NOT NULL AND p_project_in.early_start_date <>PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN

                           IF  p_project_in.early_finish_date < p_project_in.early_start_date THEN

                                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                                         pa_utils.add_message
                                         (
                                           p_app_short_name   => 'PA'
                                          ,p_msg_name         => 'PA_SU_INVALID_DATES'
                                         );

                                END IF;

                                RAISE  FND_API.G_EXC_ERROR;
                           END IF;
                           l_statement :=   l_statement ||
                           ' EARLY_FINISH_DATE = :early_finish_date ,';
                           l_b_early_fd_flag := 'Y';
                           l_update_yes_flag := 'Y';

                ELSIF  l_project_rec.early_start_date  IS NOT NULL THEN

                          IF p_project_in.early_finish_date < l_project_rec.early_start_date  THEN

                                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                                         pa_utils.add_message
                                         (
                                           p_app_short_name   => 'PA'
                                          ,p_msg_name         => 'PA_SU_INVALID_DATES'
                                         );

                                END IF;

                                RAISE  FND_API.G_EXC_ERROR;
                          END IF;
                          l_statement :=   l_statement ||
                          ' EARLY_FINISH_DATE = :early_finish_date ,';
                          l_b_early_fd_flag := 'Y';
                          l_update_yes_flag := 'Y';
                ELSE

                         l_statement :=   l_statement ||
                         ' EARLY_FINISH_DATE = :early_finish_date ,';
                         l_b_early_fd_flag := 'Y';
                         --end bug 2955326
                         l_update_yes_flag := 'Y';

                END IF; --End of Logic added for Bug#5185673
       END IF;

-- update Late start date and Late finish date

       IF (p_project_in.late_start_date IS NOT NULL AND
           p_project_in.late_start_date <>
           PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) AND
           NVL(l_project_rec.late_start_date,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) <>
               p_project_in.late_start_date THEN
--bug 2955326
/*
             l_statement :=   l_statement ||
                     ' LATE_START_DATE = to_date('''||
                          to_char(p_project_in.late_start_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/

             l_statement :=   l_statement ||
                     ' LATE_START_DATE = :late_start_date ,';
             l_b_late_sd_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
       END IF;


       IF (p_project_in.late_finish_date IS NOT NULL AND
           p_project_in.late_finish_date <>
           PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) AND
           NVL(l_project_rec.late_finish_date,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) <>
               p_project_in.late_finish_date THEN
--bug 2955326
/*
             l_statement :=   l_statement ||
                     ' LATE_FINISH_DATE = to_date('''||
                          to_char(p_project_in.late_finish_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
                --Added the following error message to check whether the finish date is earlier than the start date.Bug#5185673
                IF p_project_in.late_start_date  IS NOT NULL AND p_project_in.late_start_date <>PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN

                           IF  p_project_in.late_finish_date < p_project_in.late_start_date THEN

                                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                                         pa_utils.add_message
                                         (
                                           p_app_short_name   => 'PA'
                                          ,p_msg_name         => 'PA_SU_INVALID_DATES'
                                         );

                                END IF;

                                RAISE  FND_API.G_EXC_ERROR;
                           END IF;
                          l_statement :=   l_statement ||
                          ' LATE_FINISH_DATE = :late_finish_date ,';
                          l_b_late_fd_flag := 'Y';
                          l_update_yes_flag := 'Y';
                ELSIF  l_project_rec.late_start_date  IS NOT NULL THEN
                          IF p_project_in.late_finish_date < l_project_rec.late_start_date  THEN

                                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                                         pa_utils.add_message
                                         (
                                           p_app_short_name   => 'PA'
                                          ,p_msg_name         => 'PA_SU_INVALID_DATES'
                                         );

                                END IF;

                                RAISE  FND_API.G_EXC_ERROR;
                          END IF;
                          l_statement :=   l_statement ||
                          ' LATE_FINISH_DATE = :late_finish_date ,';
                          l_b_late_fd_flag := 'Y';
                          l_update_yes_flag := 'Y';
                ELSE
                          l_statement :=   l_statement ||
                          ' LATE_FINISH_DATE = :late_finish_date ,';
                          l_b_late_fd_flag := 'Y';
                          --end bug 2955326
                          l_update_yes_flag := 'Y';

                END IF; --End of Logic added for Bug#5185673.
        END IF;


-- update scheduled start date and scheduled finish date

       IF (p_project_in.scheduled_start_date IS NOT NULL AND
           p_project_in.scheduled_start_date <>
           PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) AND
           NVL(l_project_rec.scheduled_start_date,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) <>
               p_project_in.scheduled_start_date THEN
--bug 2955326
/*
             l_statement :=   l_statement ||
                     ' SCHEDULED_START_DATE = to_date('''||
                      to_char(p_project_in.scheduled_start_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';

*/
             l_statement :=   l_statement ||
                     ' SCHEDULED_START_DATE = :sch_start_date ,';
             l_b_sch_sd_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
       END IF;


       IF (p_project_in.scheduled_finish_date IS NOT NULL AND
           p_project_in.scheduled_finish_date <>
           PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) AND
           NVL(l_project_rec.scheduled_finish_date,
               PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) <>
               p_project_in.scheduled_finish_date THEN
--bug 2955326
/*
             l_statement :=   l_statement ||
                     ' SCHEDULED_FINISH_DATE = to_date('''||
                     to_char(p_project_in.scheduled_finish_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement :=   l_statement ||
                     ' SCHEDULED_FINISH_DATE = :sch_finish_date ,';
             l_b_sch_fd_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
       END IF;

  -- Check if any of the df columns have changed (attribute1 to attribute10)
  -- 04/11/97
  -- Bug 7277032

       IF p_project_in.attribute_category  <>
          PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute_category IS NULL  THEN
          IF NVL(p_project_in.attribute_category,
                 PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute_category,
                 PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                     ' ATTRIBUTE_CATEGORY =  '||''''||
                       RTRIM(p_project_in.attribute_category)||''''||',';
*/
             l_statement  := l_statement ||
                         ' ATTRIBUTE_CATEGORY = :attr_cat ,';
             l_b_attr_cat_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute1  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute1 IS NULL  THEN
          IF NVL(p_project_in.attribute1,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute1,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                ' ATTRIBUTE1 =  '||''''||
                  RTRIM(p_project_in.attribute1)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE1 = :attr1 ,';
             l_b_attr1_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute2  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute2 IS NULL  THEN
          IF NVL(p_project_in.attribute2,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute2,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                     ' ATTRIBUTE2 =  '||''''||
                       RTRIM(p_project_in.attribute2)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE2 = :attr2 ,';
             l_b_attr2_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute3  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute3 IS NULL  THEN
          IF NVL(p_project_in.attribute3,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute3,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                     ' ATTRIBUTE3 =  '||''''||
                       RTRIM(p_project_in.attribute3)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE3 = :attr3 ,';
             l_b_attr3_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute4  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute4 IS NULL  THEN
          IF NVL(p_project_in.attribute4,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute4,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                ' ATTRIBUTE4 =  '||''''||
                  RTRIM(p_project_in.attribute4)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE4 = :attr4 ,';
             l_b_attr4_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute5  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute5 IS NULL  THEN
          IF NVL(p_project_in.attribute5,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute5,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                     ' ATTRIBUTE5 =  '||''''||
                       RTRIM(p_project_in.attribute5)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE5 = :attr5 ,';
             l_b_attr5_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute6  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute6 IS NULL  THEN
          IF NVL(p_project_in.attribute6,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute6,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                     ' ATTRIBUTE6 =  '||''''||
                       RTRIM(p_project_in.attribute6)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE6 = :attr6 ,';
             l_b_attr6_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute7  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute7 IS NULL  THEN
          IF NVL(p_project_in.attribute7,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute7,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                     ' ATTRIBUTE7 =  '||''''||
                       RTRIM(p_project_in.attribute7)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE7 = :attr7 ,';
             l_b_attr7_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute8  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute8 IS NULL  THEN
          IF NVL(p_project_in.attribute8,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute8,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                     ' ATTRIBUTE8 =  '||''''||
                       RTRIM(p_project_in.attribute8)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE8 = :attr8 ,';
             l_b_attr8_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute9  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute9 IS NULL  THEN
          IF NVL(p_project_in.attribute9,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute9,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                     ' ATTRIBUTE9 =  '||''''||
                       RTRIM(p_project_in.attribute9)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE9 = :attr9 ,';
             l_b_attr9_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  -- Bug 7277032
       IF p_project_in.attribute10  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          OR p_project_in.attribute10 IS NULL  THEN
          IF NVL(p_project_in.attribute10,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.attribute10,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                     ' ATTRIBUTE10 =  '||''''||
                       RTRIM(p_project_in.attribute10)||''''||',';
*/
             l_statement  := l_statement ||
                    ' ATTRIBUTE10 = :attr10 ,';
             l_b_attr10_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

-- Tax Code Changes Starts here ...

--Bug 4606925: Modified below condition so that output_tax_code can be updated to null
IF ((p_project_in.output_tax_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND p_project_in.output_tax_code IS NOT NULL) OR (p_project_in.output_tax_code IS NULL))  THEN
     IF NVL(p_project_in.output_tax_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.output_tax_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' OUTPUT_TAX_CODE =  '||''''||
                       RTRIM(p_project_in.output_tax_code)||''''||',';
*/              -- Added for 5188246
                IF p_project_in.output_tax_code IS NOT NULL THEN

                   OPEN l_cur_retention_tax_code(p_project_in.output_tax_code);
                   FETCH l_cur_retention_tax_code INTO l_dummy_cur_output_tax_code;
                   CLOSE l_cur_retention_tax_code;

                   IF  l_dummy_cur_output_tax_code <> 'Y' THEN
                        PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA',
                                               p_msg_name       => 'PA_INVLD_OUTPUT_TAX_CODE');

                        p_return_status :=  FND_API.G_RET_STS_ERROR;
                        RAISE FND_API.G_EXC_ERROR;

                   END IF;


                END IF ;
                -- End of 5188246
             l_statement  := l_statement ||
                       ' OUTPUT_TAX_CODE = :output_tx_code ,';
             l_b_output_tx_code_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

--Bug 4606925: Modified below condition so that retention_tax_code can be updated to null
IF ((p_project_in.retention_tax_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND p_project_in.retention_tax_code IS NOT NULL) OR (p_project_in.retention_tax_code IS NULL))  THEN
     IF NVL(p_project_in.retention_tax_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.retention_tax_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' RETENTION_TAX_CODE =  '||''''||
                       RTRIM(p_project_in.retention_tax_code)||''''||',';
*/              -- Added for Bug 5188246
                IF p_project_in.retention_tax_code IS NOT NULL THEN

                   OPEN l_cur_retention_tax_code(p_project_in.retention_tax_code);
                   FETCH l_cur_retention_tax_code INTO l_dummy_cur_retention_tax_code;
                    CLOSE l_cur_retention_tax_code;

                   IF  l_dummy_cur_retention_tax_code <> 'Y'  THEN
                        PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA',
                                               p_msg_name       => 'PA_INVLD_RETENTION_TAX_CODE');

                        p_return_status :=  FND_API.G_RET_STS_ERROR;
                        RAISE FND_API.G_EXC_ERROR;

                   END IF;


                END IF ;
                -- End of Bug 5188246.
             l_statement  := l_statement ||
                       ' RETENTION_TAX_CODE = :ret_tx_code ,';
             l_b_ret_tx_code_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

--  IC and Multi National Currency changes Starts ...
--  Bug#5188931
IF (p_project_in.project_currency_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR  OR p_project_in.project_currency_code IS NULL) THEN

   IF     NVL(p_project_in.project_currency_code,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <> NVL(l_project_rec.project_currency_code,
          PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN

          -- Added the following Logic here to validate passed currency code.Bug#5188931
          -- Checking whether passed currency code is a valid value and not a junk value
          OPEN  cur_check_cur_code( p_project_in.project_currency_code );
          FETCH cur_check_cur_code INTO l_check_cur_code_flag;
          CLOSE cur_check_cur_code;

          IF (l_check_cur_code_flag = 'Y') THEN

                --This means the currency code passed is not null and valid. Hence validate whether update is allowed.

                --1. Check whether bill intercompany invoices flag is checked at the project type level
                OPEN  cur_check_prvdr_flag(p_project_in.pa_project_id);
                FETCH cur_check_prvdr_flag INTO l_prvdr_flag;
                CLOSE cur_check_prvdr_flag;

                IF l_prvdr_flag ='Y' THEN
                        l_allow_update_flag :=  'N';


                --2. Check whether project value ,funding ,event,expenditure item, budget transaction exist
                --If any one of these exist, then the update should not be allowed. The check for existence of
                --sub projects is not done here as this has been already done above thru Bug#3912783.

                ELSIF (    NVL( pa_multi_currency_billing.check_mcb_trans_exist ( p_project_in.pa_project_id ), 'N' ) = 'Y' OR
                           l_project_rec.project_value IS NOT NULL                                                          OR
                           PA_IMPL_OPTIONS_PUB.check_budget_trans_exists( p_project_in.pa_project_id )                = 'Y'
                   ) THEN

                        l_allow_update_flag :=  'N';
                END IF;

                IF l_allow_update_flag = 'N' THEN

                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                                         pa_utils.add_message
                                         (
                                           p_app_short_name   => 'PA'
                                          ,p_msg_name         => 'PA_CURR_CODE_NOT_UPDATBL'
                                         );

                        END IF;

                        RAISE  FND_API.G_EXC_ERROR;
                ELSE

                                --bug 2955326
                                /*
                                             l_statement  := l_statement ||
                                                       ' PROJECT_CURRENCY_CODE =  '||''''||
                                                       RTRIM(p_project_in.project_currency_code)||''''||',';
                                */
                                             l_statement  := l_statement ||
                                             ' PROJECT_CURRENCY_CODE = :proj_cur_code ,';
                                             l_b_proj_cur_code_flag := 'Y';
                                --end bud 2955326
                                             l_update_yes_flag := 'Y';
                END IF;

          ELSE

                --invalid currency code has been passed hence throw error
                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                                         pa_utils.add_message
                                         (
                                           p_app_short_name   => 'PA'
                                          ,p_msg_name         => 'PA_INVALID_PROJ_CURR_CODE'
                                         );

                END IF;

                RAISE  FND_API.G_EXC_ERROR;
          END IF;

   END IF;

END IF; --End of changes Bug#5188931

       IF p_project_in.allow_cross_charge_flag  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.allow_cross_charge_flag IS NOT NULL  THEN
          IF NVL(p_project_in.allow_cross_charge_flag,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.allow_cross_charge_flag,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' ALLOW_CROSS_CHARGE_FLAG =  '||''''||
                     RTRIM(p_project_in.allow_cross_charge_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' ALLOW_CROSS_CHARGE_FLAG = :allow_x_chg_flag ,';
             l_b_allow_x_chg_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.project_rate_date  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          AND p_project_in.project_rate_date IS NOT NULL  THEN
          IF NVL(p_project_in.project_rate_date,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
           <> NVL(l_project_rec.project_rate_date,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' PROJECT_RATE_DATE =  to_date('''||
                     to_char(p_project_in.project_rate_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement  := l_statement ||
                       ' PROJECT_RATE_DATE = :proj_rt_date ,';
             l_b_proj_rt_date_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

--dbms_output.put_line('p_project_in.project_rate_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ' || p_project_in.project_rate_type <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR);
       IF ((p_project_in.project_rate_type  <>PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       AND p_project_in.project_rate_type IS NOT NULL )
       OR p_project_in.project_rate_type IS NULL  ) THEN-- changed this if condition for bug no 5225146

          IF NVL(p_project_in.project_rate_type,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.project_rate_type,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' PROJECT_RATE_TYPE =  '||''''||
             RTRIM(p_project_in.project_rate_type)||''''||',';
*/
                -- Added for bug 5225146
                IF p_project_in.project_rate_type IS NOT NULL THEN

                     OPEN l_cur_project_rate_type(p_project_in.project_rate_type);
                     FETCH l_cur_project_rate_type INTO l_dummy_project_rate_type;
                     CLOSE l_cur_project_rate_type;

                     IF l_dummy_project_rate_type <> 'Y' THEN

                             PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA',
                                                  p_msg_name       => 'PA_INVLD_PROJ_RATE_TYPE');
                             p_return_status :=  FND_API.G_RET_STS_ERROR;
                             RAISE FND_API.G_EXC_ERROR;
                     END IF ;
                 END IF ;

             l_statement  := l_statement ||
                       ' PROJECT_RATE_TYPE = :proj_rt_tp ,';
             l_b_proj_rt_tp_flag := 'Y';
--bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.cc_process_labor_flag  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.cc_process_labor_flag IS NOT NULL  THEN
          IF NVL(p_project_in.cc_process_labor_flag,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.cc_process_labor_flag,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' CC_PROCESS_LABOR_FLAG =  '||''''||
             RTRIM(p_project_in.cc_process_labor_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' CC_PROCESS_LABOR_FLAG = :cc_proc_lb_flag ,';
             l_cc_proc_lb_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

 -- 5402979 for pqe bug 5395048 :: added p_project_in.labor_tp_schedule_id IS NULL condition
 IF ( (p_project_in.labor_tp_schedule_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        AND p_project_in.labor_tp_schedule_id IS NOT NULL) OR
      (p_project_in.labor_tp_schedule_id IS NULL) )
   THEN
     -- 5402979 for pqe bug 5395048 :: added p_project_in.labor_tp_schedule_id IS NULL condition
     IF ( (p_project_in.labor_tp_schedule_id <> NVL(l_project_rec.labor_tp_schedule_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))
          OR (p_project_in.labor_tp_schedule_id IS NULL) )
          THEN
--bug 2955326
/*
             l_statement := l_statement || ' LABOR_TP_SCHEDULE_ID = ' ||
                  TO_CHAR(p_project_in.labor_tp_schedule_id)||',';
*/

             l_cc_process_labor_flag  := p_project_in.cc_process_labor_flag; /* Added for Bug 5395048 */
             l_statement := l_statement || ' LABOR_TP_SCHEDULE_ID = :lb_tp_sch_id ,';
             l_b_lb_tp_sch_id_flag := 'Y'; -- added for Bug 5395048
             l_update_yes_flag := 'Y';

             -- 5402979 :: Added the code below for Bug 5395048. If labor schedule id is being NULLed out, then
             -- we need to set the project cross charge process labor flag to 'N'
             IF p_project_in.labor_tp_schedule_id IS NULL THEN
                 l_cc_process_labor_flag := 'N';

                 IF l_cc_proc_lb_flag = 'N' THEN
                      l_statement  := l_statement ||
                           ' CC_PROCESS_LABOR_FLAG = :cc_proc_lb_flag ,';
                 END IF;

                 l_cc_proc_lb_flag := 'Y';
                 l_update_yes_flag := 'Y';
             END IF;
             -- code changes end for Bug 5395048

          END IF;
       END IF;

       IF p_project_in.labor_tp_fixed_date  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          AND p_project_in.labor_tp_fixed_date IS NOT NULL  THEN
          IF NVL(p_project_in.labor_tp_fixed_date,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
           <> NVL(l_project_rec.labor_tp_fixed_date,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' LABOR_TP_FIXED_DATE =  to_date('''||
                     to_char(p_project_in.labor_tp_fixed_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement  := l_statement ||
                       ' LABOR_TP_FIXED_DATE = :lb_tp_fixed_dt ,';
             l_b_lb_tp_fixed_dt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.cc_process_nl_flag  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.cc_process_nl_flag IS NOT NULL  THEN
          IF NVL(p_project_in.cc_process_nl_flag,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.cc_process_nl_flag,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' CC_PROCESS_NL_FLAG =  '||''''||
             RTRIM(p_project_in.cc_process_nl_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' CC_PROCESS_NL_FLAG = :cc_proc_nl_flag ,';
             l_b_cc_proc_nl_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

 IF ( (p_project_in.nl_tp_schedule_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        AND p_project_in.nl_tp_schedule_id IS NOT NULL)
     OR (p_project_in.nl_tp_schedule_id IS NULL) )
   THEN
     IF ((p_project_in.nl_tp_schedule_id <> NVL(l_project_rec.nl_tp_schedule_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))
      OR (p_project_in.nl_tp_schedule_id IS NULL))
          THEN
--bug 2955326
/*
             l_statement := l_statement || ' NL_TP_SCHEDULE_ID = ' ||
                  TO_CHAR(p_project_in.nl_tp_schedule_id)||',';
*/
             l_cc_process_nl_flag  := p_project_in.cc_process_nl_flag; /* Added for Bug 5395048 */
             l_statement := l_statement || ' NL_TP_SCHEDULE_ID = :nl_tp_sch_id ,';
             l_b_nl_tp_sch_id_flag := 'Y';
--bug 2955326
             l_update_yes_flag := 'Y';

             -- Added the code below for Bug 5395048. If labor schedule id is being NULLed out, then
             -- we need to set the project cross charge process labor flag to 'N'
             IF p_project_in.nl_tp_schedule_id IS NULL THEN
                 l_cc_process_nl_flag := 'N';

                 IF l_b_cc_proc_nl_flag = 'N' THEN
                      l_statement  := l_statement ||
                           ' CC_PROCESS_NL_FLAG = :cc_proc_nl_flag ,';
                 END IF;

                 l_b_cc_proc_nl_flag := 'Y';
                 l_update_yes_flag := 'Y';
             END IF;
             -- Code changes end for Bug 5395048
          END IF;
       END IF;

       IF p_project_in.nl_tp_fixed_date  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          AND p_project_in.nl_tp_fixed_date IS NOT NULL  THEN
          IF NVL(p_project_in.nl_tp_fixed_date,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
           <> NVL(l_project_rec.nl_tp_fixed_date,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' NL_TP_FIXED_DATE =  to_date('''||
                     to_char(p_project_in.nl_tp_fixed_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement  := l_statement ||
                       ' NL_TP_FIXED_DATE = :nl_tp_fx_dt ,';
             l_b_nl_tp_fx_dt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

-- IC and Multi National Currency changes Ends ...

-- ORM Code change starts here ...

       IF p_project_in.role_list_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.role_list_id IS NOT NULL  THEN
          IF p_project_in.role_list_id <> l_project_rec.role_list_id
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' ROLE_LIST_ID = ' ||
                  TO_CHAR(p_project_in.role_list_id)||',';
*/
             l_statement := l_statement || ' ROLE_LIST_ID = :role_list_id ,';
             l_b_role_list_id_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

--Added for bug 5745545
IF nvl(p_project_in.work_type_id,-999) <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN

	IF (nvl(fnd_profile.value('PA_EN_NEW_WORK_TYPE_PROCESS'),'N') = 'Y') OR (nvl(pa_install.is_prm_licensed(),'N') = 'Y' ) THEN

		IF p_project_in.work_type_id IS NULL AND (NOT (PA_GMS_API.vert_install)) THEN

			IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
				    pa_interface_utils_pub.map_new_amg_msg
				      ( p_old_message_code => 'PA_PR_WORK_TYPE_MANDATORY'
				       ,p_msg_attribute    => 'CHANGE'
				       ,p_resize_flag      => 'Y'
				       ,p_msg_context      => 'PROJ'
				       ,p_attribute1       => l_project_rec.segment1
				       ,p_attribute2       => ''
				       ,p_attribute3       => ''
				       ,p_attribute4       => ''
				       ,p_attribute5       => '');
			END IF;
			p_project_out.return_status := FND_API.G_RET_STS_ERROR;
		        RAISE  FND_API.G_EXC_ERROR;
		ELSE
			IF nvl(p_project_in.work_type_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) <> nvl(l_project_rec.work_type_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN

				--Added the following logic to update the work type id.Bug#5222248
				OPEN  cur_check_work_type(p_project_in.pa_project_id,p_project_in.work_type_id);
				FETCH cur_check_work_type INTO l_check_work_type;
				CLOSE cur_check_work_type;

				IF  l_check_work_type = 'Y' THEN

					l_statement := l_statement || ' WORK_TYPE_ID = :work_type_id ,';
					l_b_work_type_id_flag := 'Y';
					l_update_yes_flag := 'Y';
				END IF;
				--End of code change for Bug#5222248.
			END IF;
		END IF;

	ELSE -- Null work_type_id is allowed
		IF nvl(p_project_in.work_type_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) <> nvl(l_project_rec.work_type_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN

			l_statement := l_statement || ' WORK_TYPE_ID = :work_type_id ,';
			l_b_work_type_id_flag := 'Y';
			l_update_yes_flag := 'Y';
		END IF;
	END IF;
END IF;
--End of addition for bug 5745545

       IF p_project_in.calendar_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.calendar_id IS NOT NULL  THEN
          /* IF p_project_in.calendar_id <> l_project_rec.calendar_id Commented for bug 5620624*/
	  IF p_project_in.calendar_id <> nvl(l_project_rec.calendar_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) --Bug#5620624
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' CALENDAR_ID = ' ||
                  TO_CHAR(p_project_in.calendar_id)||',';
*/
             OPEN l_cur_calendar_id(p_project_in.calendar_id);
             FETCH l_cur_calendar_id INTO l_dummy_calendar_id;
             CLOSE l_cur_calendar_id ;
             -- Added this if condition for 5222506
             IF l_dummy_calendar_id =  'Y' THEN
                     l_statement := l_statement || ' CALENDAR_ID = :cal_id ,';
                     l_b_cal_id_flag := 'Y';
                     --end bug 2955326
                     l_update_yes_flag := 'Y';
            END IF ;
            -- End of bug 5222506
          END IF;
       END IF;

       IF p_project_in.location_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.location_id IS NOT NULL  THEN
          IF p_project_in.location_id <> l_project_rec.location_id
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' LOCATION_ID = ' ||
                  TO_CHAR(p_project_in.location_id)||',';
*/
             l_statement := l_statement || ' LOCATION_ID = :loc_id ,';
             l_b_loc_id_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.probability_member_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.probability_member_id IS NOT NULL  THEN
          --Modified the if condition below for Bug#5210872.

          IF (p_project_in.probability_member_id <> nvl(l_project_rec.probability_member_id,-99)) THEN

          --End of code change for Bug#5210872.
                --bug 2955326
                /*
                             l_statement := l_statement || ' PROBABILITY_MEMBER_ID = ' ||
                                  TO_CHAR(p_project_in.probability_member_id)||',';
                */

                --Bug#5191521.Included validation for probability_member_id below.

                        OPEN  cur_validate_prob_member( p_project_in.pa_project_id,p_project_in.probability_member_id);
                        FETCH cur_validate_prob_member INTO l_check_prob_id;
                        CLOSE cur_validate_prob_member;

                        IF l_check_prob_id ='Y' THEN  --only if a valid probability id is passed
                                                      --update will be done.Otherwise old value will remain.

                                l_statement := l_statement || ' PROBABILITY_MEMBER_ID = :prob_memb_id ,';
                                l_b_prob_memb_id_flag := 'Y';
                                l_update_yes_flag := 'Y';
                        ELSE

                                l_b_prob_memb_id_flag :='N';
                        END IF;
                --End of code change for Bug#5191521.

                --end bug 2955326



          END IF;
       END IF;

       IF ((p_project_in.project_value <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.project_value IS NOT NULL ) OR p_project_in.project_value IS NULL) THEN
          IF p_project_in.project_value <> l_project_rec.project_value
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' PROJECT_VALUE = ' ||
                  TO_CHAR(p_project_in.project_value)||',';
*/--Added for bug 5214431
            -- changed from l_project_in_rec.project_value to p_project_in.project_value
            IF p_project_in.project_value IS NOT NULL AND p_project_in.project_value < 0 THEN
                PA_UTILS.ADD_MESSAGE
                 ( p_app_short_name   => 'PA'
                  ,p_msg_name         => 'PA_INVLD_OPPORTUNITY_VALUE');
                   RAISE FND_API.G_EXC_ERROR;
            END IF;
            -- end of bug 5214431.
             l_statement := l_statement || ' PROJECT_VALUE = :proj_value ,';
             l_b_proj_value_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.expected_approval_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          AND p_project_in.expected_approval_date IS NOT NULL  THEN
          IF NVL(p_project_in.expected_approval_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
           <> NVL(l_project_rec.expected_approval_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
              THEN
--bug 2955326
/*
             l_statement  := l_statement || ' EXPECTED_APPROVAL_DATE =  to_date('''||
                     to_char(p_project_in.expected_approval_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement  := l_statement || ' EXPECTED_APPROVAL_DATE = :exp_apprv_date ,';
             l_b_exp_apprv_dt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.cost_job_group_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.cost_job_group_id IS NOT NULL  THEN
          IF p_project_in.cost_job_group_id <> l_project_rec.cost_job_group_id
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' COST_JOB_BILL_ID = ' ||
                  TO_CHAR(p_project_in.cost_job_group_id)||',';
*/
            l_statement := l_statement || ' COST_JOB_GROUP_ID = :cst_jb_gp_id ,';  -- Bug 8831203  : Changed COST_JOB_BILL_ID to COST_JOB_GROUP_ID
             l_b_cst_jb_gp_id_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.bill_job_group_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.bill_job_group_id IS NOT NULL  THEN
          IF p_project_in.bill_job_group_id <> l_project_rec.bill_job_group_id
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' BILL_JOB_BILL_ID = ' ||
                  TO_CHAR(p_project_in.bill_job_group_id)||',';
*/
             l_statement := l_statement || ' BILL_JOB_GROUP_ID = :bill_jb_gp_id ,';  --Bug 5739298 Changed BILL_JOB_BILL_ID to BILL_JOB_GROUP_ID
             l_b_bill_jb_gp_id_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

-- ORM Code change ends here ...
/*Commented the below code for bug 2802984*/
       /*IF p_project_in.emp_bill_rate_schedule_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.emp_bill_rate_schedule_id IS NOT NULL  THEN
          IF p_project_in.emp_bill_rate_schedule_id <> l_project_rec.emp_bill_rate_schedule_id
              THEN
             l_statement := l_statement || ' EMP_BILL_RATE_SCHEDULE_ID = ' ||
                  TO_CHAR(p_project_in.emp_bill_rate_schedule_id)||',';
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.job_bill_rate_schedule_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.job_bill_rate_schedule_id IS NOT NULL  THEN
          IF p_project_in.job_bill_rate_schedule_id <> l_project_rec.job_bill_rate_schedule_id
              THEN
             l_statement := l_statement || ' JOB_BILL_RATE_SCHEDULE_ID = ' ||
                  TO_CHAR(p_project_in.job_bill_rate_schedule_id)||',';
             l_update_yes_flag := 'Y';
          END IF;
       END IF;*/
/*Commenting till here for bug 2802984 */

  /* Code for the bug 2802984 starts*/

       pa_project_pvt.Check_Schedule_type
     (p_pa_task_id              => '',
      p_pa_project_id          => l_project_id,
      p_in_labor_sch_type      => p_project_in.labor_sch_type,
      p_in_nl_sch_type         => p_project_in.non_labor_sch_type,
      p_task_name              => '',
      p_pm_task_reference      => '',
      p_out_labor_sch_type     => l_out_labor_sch_type,
      p_out_nl_labor_sch_type  => l_out_nl_labor_sch_type,
      p_return_status          => l_return_status
      );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
      RAISE FND_API.G_EXC_ERROR;
      END IF;


pa_project_pvt.validate_schedule_values
   (p_pa_project_id                  => l_project_id,
    p_pa_task_id                     => '',
    p_task_name                      => '',
    p_pm_task_reference              => '',
    p_lab_db_sch_type                => l_project_rec.labor_sch_type,
    p_nl_db_sch_type                 => l_project_rec.non_labor_sch_type,
    p_labor_sch_type                 => l_out_labor_sch_type,
    p_nl_sch_type               => l_out_nl_labor_sch_type,
    p_emp_bill_rate_schedule_id      => p_project_in.EMP_BILL_RATE_SCHEDULE_ID,
    p_job_bill_rate_schedule_id      => p_project_in.JOB_BILL_RATE_SCHEDULE_ID,
    p_labor_schedule_fixed_date      =>  p_project_in.LABOR_SCHEDULE_FIXED_DATE,
    p_labor_schedule_discount        =>  p_project_in.LABOR_SCHEDULE_DISCOUNT,
    p_labor_disc_reason_code         => p_project_in.LABOR_DISC_REASON_CODE,
    p_nl_bill_rate_org_id            =>  p_project_in.NON_LABOR_BILL_RATE_ORG_ID,
    p_non_lab_std_bill_rt_sch_id     => p_project_in.NON_LAB_STD_BILL_RT_SCH_ID,
    p_nl_schedule_fixed_date         =>  p_project_in.NON_LABOR_SCHEDULE_FIXED_DATE,
    p_nl_schedule_discount           =>  p_project_in.NON_LABOR_SCHEDULE_DISCOUNT,
    p_non_labor_disc_reason_code     => p_project_in.NON_LABOR_DISC_REASON_CODE,
    p_rev_ind_rate_sch_id            =>  p_project_in.REV_IND_RATE_SCH_ID,
    p_inv_ind_rate_sch_id            =>  p_project_in.INV_IND_RATE_SCH_ID,
    p_rev_ind_sch_fixed_date         =>  p_project_in.REV_IND_SCH_FIXED_DATE,
    p_inv_ind_sch_fixed_date         =>  p_project_in.INV_IND_SCH_FIXED_DATE,
    p_return_status                  => l_return_status
    );


       IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN

      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN

      RAISE FND_API.G_EXC_ERROR;
      END IF;

 IF p_project_in.labor_sch_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.labor_sch_type IS NOT NULL
  THEN
          IF p_project_in.labor_sch_type <> NVL(l_task_rec.LABOR_SCH_TYPE,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
       l_statement  := l_statement ||' LABOR_SCH_TYPE =  '||''''||
             RTRIM(p_project_in.labor_sch_type)||''''||',';
*/
       l_statement  := l_statement ||' LABOR_SCH_TYPE = :lb_sch_type ,';
       l_b_lb_sch_tp_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  IF p_project_in.non_labor_sch_type  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.non_labor_sch_type IS NOT NULL
  THEN
   IF p_project_in.non_labor_sch_type
           <> NVL(l_task_rec.NON_LABOR_SCH_TYPE,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
       l_statement  := l_statement ||
                       ' NON_LABOR_SCH_TYPE =  '||''''||
             RTRIM(p_project_in.non_labor_sch_type)||''''||',';
*/
       l_statement  := l_statement ||
                       ' NON_LABOR_SCH_TYPE = :nn_lb_sch_tp ,';
       l_b_nn_lb_sch_tp_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

   IF l_out_labor_sch_type = 'B' THEN

   /* Should be able to update null since this is not mandatory*/

 IF ((p_project_in.emp_bill_rate_schedule_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
AND p_project_in.emp_bill_rate_schedule_id IS NOT NULL) OR (p_project_in.emp_bill_rate_schedule_id IS NULL))
   THEN
     IF ((p_project_in.emp_bill_rate_schedule_id <>
        NVL(l_project_rec.emp_bill_rate_schedule_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))
      OR (p_project_in.emp_bill_rate_schedule_id IS NULL))
          THEN
--bug 2955326
/*
             l_statement := l_statement || ' EMP_BILL_RATE_SCHEDULE_ID = ' ||
                  TO_CHAR(p_project_in.emp_bill_rate_schedule_id)||',';
*/
             l_statement := l_statement || ' EMP_BILL_RATE_SCHEDULE_ID = :emp_bill_rt_sch_id2 ,';
             l_b_emp_bill_rt_sch_id_fg2 := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       /*
       1)Should be able to update null when prm is not licensed.
       2) When prm is licensed then it is mandatory.
       */

IF ((p_project_in.job_bill_rate_schedule_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 AND p_project_in.job_bill_rate_schedule_id IS NOT NULL)
 OR (p_project_in.job_bill_rate_schedule_id is NULL and pa_install.is_prm_licensed = 'N'))
  THEN
  IF (p_project_in.job_bill_rate_schedule_id <> NVL(l_project_rec.job_bill_rate_schedule_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  OR (p_project_in.job_bill_rate_schedule_id IS NULL))
              THEN
--bug 2955326
/*
       l_statement := l_statement || ' JOB_BILL_RATE_SCHEDULE_ID = ' ||
                  TO_CHAR(p_project_in.job_bill_rate_schedule_id)||',';
*/
       l_statement := l_statement || ' JOB_BILL_RATE_SCHEDULE_ID = :jb_bill_rt_sch_id2,';
       l_b_jb_bill_rt_sch_id_fg2 := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       /* Should be able to update null*/

 IF ((p_project_in.labor_schedule_fixed_date  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 AND p_project_in.labor_schedule_fixed_date IS NOT NULL) OR (p_project_in.labor_schedule_fixed_date IS NULL))
   THEN
    IF (p_project_in.labor_schedule_fixed_date <>
    NVL(l_project_rec.labor_schedule_fixed_date,PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
     OR (l_project_rec.labor_schedule_fixed_date IS NULL))
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' LABOR_SCHEDULE_FIXED_DATE =  to_date('''||
                          to_char(p_project_in.labor_schedule_fixed_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement  := l_statement ||
                       ' LABOR_SCHEDULE_FIXED_DATE = :lb_sch_fx_dt ,';
             l_b_lb_sch_fx_dt_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

 /* Should be able to update null*/
  IF ((p_project_in.labor_schedule_discount <>PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
   AND p_project_in.labor_schedule_discount IS NOT NULL)
      OR (p_project_in.labor_schedule_discount IS NULL)) THEN
          IF ((p_project_in.labor_schedule_discount
           <> NVL(l_project_rec.labor_schedule_discount,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) OR (p_project_in.labor_schedule_discount IS NULL))
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' LABOR_SCHEDULE_DISCOUNT =  '||''''||
             TO_NUMBER(p_project_in.labor_schedule_discount)||''''||',';
*/
             l_statement := l_statement ||
                       ' LABOR_SCHEDULE_DISCOUNT = :lb_sch_dsct ,';
             l_b_lb_sch_dsct_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

 IF  p_project_in.labor_schedule_discount IS NULL THEN
   l_statement  := l_statement ||
                       ' LABOR_DISC_REASON_CODE =  '''''||',';
   l_update_yes_flag := 'Y';
ELSE
 IF p_project_in.labor_disc_reason_code  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.labor_disc_reason_code IS NOT NULL
      THEN
          IF (p_project_in.labor_disc_reason_code
           <> NVL(l_project_rec.labor_disc_reason_code,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' LABOR_DISC_REASON_CODE =  '||''''||
             RTRIM(p_project_in.labor_disc_reason_code)||''''||',';
*/
             l_statement  := l_statement ||
                       ' LABOR_DISC_REASON_CODE = :lb_disc_rn_cd ,';
             l_b_lb_disc_rn_cd_fg2 := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
  END IF;

  ELSE

   l_statement  := l_statement ||
                       ' LABOR_SCHEDULE_FIXED_DATE =  '''''||',';

      l_statement  := l_statement ||
                       ' LABOR_SCHEDULE_DISCOUNT =  '''''||',';

      l_statement  := l_statement ||
                       ' LABOR_DISC_REASON_CODE =  '''''||',';

      l_statement  := l_statement ||
                       ' EMP_BILL_RATE_SCHEDULE_ID =  '''''||',';

      l_statement  := l_statement ||
                       ' JOB_BILL_RATE_SCHEDULE_ID =  '''''||',';


     l_update_yes_flag := 'Y';
END IF;

 IF l_out_labor_sch_type = 'I' OR l_out_nl_labor_sch_type = 'I' THEN

      IF p_project_in.REV_IND_RATE_SCH_ID  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.REV_IND_RATE_SCH_ID IS NOT NULL  THEN
          IF NVL(p_project_in.REV_IND_RATE_SCH_ID,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
           <> NVL(l_project_rec.REV_IND_RATE_SCH_ID,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' REV_IND_RATE_SCH_ID =  '||''''||
             TO_CHAR(p_project_in.REV_IND_RATE_SCH_ID)||''''||',';
*/
             l_statement  := l_statement ||
                       ' REV_IND_RATE_SCH_ID = :rv_ind_rt_sch_id ,';
             l_b_rv_ind_rt_sch_id_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;


        IF p_project_in.INV_IND_RATE_SCH_ID  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.INV_IND_RATE_SCH_ID IS NOT NULL  THEN
          IF NVL(p_project_in.INV_IND_RATE_SCH_ID,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
           <> NVL(l_project_rec.INV_IND_RATE_SCH_ID,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' INV_IND_RATE_SCH_ID =  '||''''||
             TO_CHAR(p_project_in.INV_IND_RATE_SCH_ID)||''''||',';
*/
             l_statement  := l_statement ||
                       ' INV_IND_RATE_SCH_ID = :inv_ind_rt_sch_id,';
             l_b_inv_ind_rt_sch_id_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

IF p_project_in.REV_IND_RATE_SCH_ID  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.REV_IND_RATE_SCH_ID IS NOT NULL  THEN

BEGIN

SELECT       ind_rate_schedule_type INTO l_rev_rate_sch_type
FROM         pa_ind_rate_schedules
WHERE        ind_rate_sch_id = p_project_in.REV_IND_RATE_SCH_ID
AND          trunc(sysdate) between trunc(start_date_active) and nvl(end_date_active,trunc(sysdate));


EXCEPTION
    WHEN NO_DATA_FOUND THEN
  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN
                     pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_INVALID_REV_SCH_ID'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'Y'
                      ,p_msg_context      => 'PROJ'
                      ,p_attribute1       => l_project_rec.segment1
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                END IF;
                RAISE  FND_API.G_EXC_ERROR;
  END;

ELSE

IF l_project_rec.REV_IND_RATE_SCH_ID IS NOT NULL
THEN

SELECT       ind_rate_schedule_type INTO l_rev_rate_sch_type
FROM         pa_ind_rate_schedules
WHERE        ind_rate_sch_id = l_project_rec.REV_IND_RATE_SCH_ID;
-- Bug 3657709
/* AND          trunc(sysdate) between trunc(start_date_active) and nvl(end_date_active,trunc(sysdate)); */

END IF;

END IF;

IF p_project_in.INV_IND_RATE_SCH_ID  <>
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.INV_IND_RATE_SCH_ID IS NOT NULL  THEN

BEGIN

SELECT       ind_rate_schedule_type INTO l_inv_rate_sch_type
FROM         pa_ind_rate_schedules
WHERE        ind_rate_sch_id = p_project_in.INV_IND_RATE_SCH_ID
AND          trunc(sysdate) between trunc(start_date_active) and nvl(end_date_active,trunc(sysdate));


EXCEPTION
    WHEN NO_DATA_FOUND THEN
  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN
                     pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_INVALID_INV_SCH_ID'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'Y'
                      ,p_msg_context      => 'PROJ'
                      ,p_attribute1       => l_project_rec.segment1
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                END IF;
                RAISE  FND_API.G_EXC_ERROR;
  END;

ELSE
IF l_project_rec.INV_IND_RATE_SCH_ID IS NOT NULL
THEN

SELECT       ind_rate_schedule_type INTO l_inv_rate_sch_type
FROM         pa_ind_rate_schedules
WHERE        ind_rate_sch_id = l_project_rec.INV_IND_RATE_SCH_ID;
-- Bug 3657709
/* AND          trunc(sysdate) between trunc(start_date_active) and nvl(end_date_active,trunc(sysdate)); */

END IF;

END IF;


IF l_rev_rate_sch_type = 'P' AND l_project_rec.REV_IND_SCH_FIXED_DATE IS NOT NULL THEN
     l_statement  := l_statement ||
                       ' REV_IND_SCH_FIXED_DATE =  '''''||',';
     l_update_yes_flag := 'Y';
ELSE
  IF ((p_project_in.rev_ind_sch_fixed_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
   AND p_project_in.rev_ind_sch_fixed_date IS NOT NULL) OR (p_project_in.rev_ind_sch_fixed_date IS NULL))
     THEN
        IF (p_project_in.rev_ind_sch_fixed_date
         <> NVL(l_project_rec.rev_ind_sch_fixed_date,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) OR (l_project_rec.rev_ind_sch_fixed_date IS NULL))
        THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' rev_ind_sch_fixed_date =  to_date('''||
                          to_char(p_project_in.rev_ind_sch_fixed_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement  := l_statement ||
                       ' rev_ind_sch_fixed_date = :rev_ind_sch_fx_dt ,';
             l_b_ind_sch_fx_dt_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
 END IF;

 IF l_inv_rate_sch_type = 'P'  AND l_project_rec.INV_IND_SCH_FIXED_DATE IS NOT NULL
  THEN
    l_statement  := l_statement ||
                       ' INV_IND_SCH_FIXED_DATE =  '''''||',';
    l_update_yes_flag := 'Y';
ELSE
  IF ((p_project_in.inv_ind_sch_fixed_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
   AND p_project_in.inv_ind_sch_fixed_date IS NOT NULL) OR (p_project_in.inv_ind_sch_fixed_date IS NULL))
   THEN
          IF (p_project_in.inv_ind_sch_fixed_date
    <> NVL(l_project_rec.inv_ind_sch_fixed_date,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) OR (p_project_in.inv_ind_sch_fixed_date IS NULL))
       THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' inv_ind_sch_fixed_date =  to_date('''||
                          to_char(p_project_in.inv_ind_sch_fixed_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement  := l_statement ||
                       ' inv_ind_sch_fixed_date = :inv_ind_sch_fx_dt,';
             l_b_inv_ind_sch_fx_dt_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
  END IF;

   ELSE
      l_statement  := l_statement ||
                       ' REV_IND_RATE_SCH_ID =  '''''||',';


     l_statement  := l_statement ||
                       ' INV_IND_RATE_SCH_ID =  '''''||',';


     l_statement  := l_statement ||
                       ' REV_IND_SCH_FIXED_DATE =  '''''||',';

     l_statement  := l_statement ||
                       ' INV_IND_SCH_FIXED_DATE =  '''''||',';
     l_update_yes_flag := 'Y';
END IF;

    IF l_out_nl_labor_sch_type = 'B' THEN

    IF (p_project_in.non_labor_bill_rate_org_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
      AND p_project_in.non_labor_bill_rate_org_id IS NOT NULL)
        THEN
          IF p_project_in.non_labor_bill_rate_org_id <>
        NVL(l_project_rec.non_labor_bill_rate_org_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' NON_LABOR_BILL_RATE_ORG_ID = ' ||
                  TO_CHAR(p_project_in.non_labor_bill_rate_org_id)||',';
*/
             l_statement := l_statement || ' NON_LABOR_BILL_RATE_ORG_ID = :nn_lb_bill_rt_org_id,';
             l_b_nn_lb_bill_rt_org_id_fg := 'Y';
--bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

  IF (p_project_in.non_lab_std_bill_rt_sch_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  AND p_project_in.non_lab_std_bill_rt_sch_id IS NOT NULL)
     THEN
    IF NVL(p_project_in.non_lab_std_bill_rt_sch_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      <> NVL(l_project_rec.non_lab_std_bill_rt_sch_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
       THEN


BEGIN
         SELECT std_bill_rate_schedule INTO l_std_bill_rate_schedule
   FROM pa_std_bill_rate_schedules_all
   WHERE bill_rate_sch_id = p_project_in.non_lab_std_bill_rt_sch_id;

--bug 2955326
/*
             l_statement := l_statement || ' NON_LAB_STD_BILL_RT_SCH_ID = ' ||''''||
                  TO_CHAR(p_project_in.non_lab_std_bill_rt_sch_id)||''''||',';
*/
/*
             l_statement := l_statement || ' NON_LABOR_STD_BILL_RATE_SCHDL = ' ||''''||
                  RTRIM(l_std_bill_rate_schedule)||''''||',';
*/
             l_statement := l_statement || ' NON_LAB_STD_BILL_RT_SCH_ID = :nn_lab_std_bill_rt_sch_id,';
             l_statement := l_statement || ' NON_LABOR_STD_BILL_RATE_SCHDL = :nn_lb_std_bill_rt_sch,';
             l_b_n_lb_st_bl_rt_sc_id_fg2 := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
EXCEPTION
   WHEN NO_DATA_FOUND THEN
     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN
                     pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_PRJ_NL_SCHEDULE_ID'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'Y'
                      ,p_msg_context      => 'TASK'
                      ,p_attribute1       => l_amg_segment1
                      ,p_attribute2       => l_amg_task_number
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                END IF;
                RAISE  FND_API.G_EXC_ERROR;
     END;

  END IF;
 END IF;

 /* Should be able to update null*/
IF ((p_project_in.non_labor_schedule_fixed_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 AND p_project_in.non_labor_schedule_fixed_date IS NOT NULL) OR (p_project_in.non_labor_schedule_fixed_date IS NULL))
   THEN
     IF ((p_project_in.non_labor_schedule_fixed_date
       <> NVL(l_project_rec.non_labor_schedule_fixed_date,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)) OR (p_project_in.non_labor_schedule_fixed_date IS NULL))
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' NON_LABOR_SCHEDULE_FIXED_DATE =  to_date('''||
                          to_char(p_project_in.non_labor_schedule_fixed_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement  := l_statement ||
                       ' NON_LABOR_SCHEDULE_FIXED_DATE = :nn_lb_sch_fx_dt,';
             l_b_nn_lb_sch_fx_dt_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

/* Should be able to update null*/
IF ((p_project_in.non_labor_schedule_discount <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 AND p_project_in.non_labor_schedule_discount IS NOT NULL) OR (p_project_in.non_labor_schedule_discount IS NULL))
   THEN
   -- bug 8975097
       IF (p_project_in.non_labor_schedule_discount <> NVL(l_project_rec.non_labor_schedule_discount,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) OR (p_project_in.non_labor_schedule_discount IS NULL))
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       '  NON_LABOR_SCHEDULE_DISCOUNT   =  '||''''||
             TO_CHAR(p_project_in.non_labor_schedule_discount)||''''||',';
*/
             l_statement  := l_statement ||
                       '  NON_LABOR_SCHEDULE_DISCOUNT = :nn_lb_sch_dst ,';
             l_b_nn_lb_sch_dst_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

IF p_project_in.non_labor_schedule_discount IS NULL
 THEN
   l_statement := l_statement || ' NON_LABOR_DISC_REASON_CODE = ''''' ||',';
   l_update_yes_flag := 'Y';
ELSE
    IF (p_project_in.non_labor_disc_reason_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
      AND p_project_in.non_labor_disc_reason_code IS NOT NULL)
      THEN
          IF NVL(p_project_in.non_labor_disc_reason_code,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.non_labor_disc_reason_code,
PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' NON_LABOR_DISC_REASON_CODE =  '||''''||
             RTRIM(p_project_in.non_labor_disc_reason_code)||''''||',';
*/
             l_statement  := l_statement ||
                       ' NON_LABOR_DISC_REASON_CODE =  :n_lb_dis_rn_cd,';
             l_b_n_lb_disc_rsn_cd_fg2 := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
  END IF;

  ELSE

    l_statement := l_statement || ' NON_LAB_STD_BILL_RT_SCH_ID = '''''||',';

      l_statement := l_statement || ' NON_LABOR_SCHEDULE_FIXED_DATE = ''''' ||',';

      l_statement := l_statement || ' NON_LABOR_SCHEDULE_DISCOUNT = '''''||',';

      l_statement := l_statement || ' NON_LABOR_DISC_REASON_CODE = ''''' ||',';

      l_statement := l_statement || ' NON_LABOR_STD_BILL_RATE_SCHDL = ''''' ||',';

      l_statement := l_statement || ' NON_LABOR_BILL_RATE_ORG_ID = ''''' ||',';
     l_update_yes_flag := 'Y';
END IF;

 /* Code for the bug 2802984 ends*/

--Sakthi MCB

       IF p_project_in.competence_match_wt <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.competence_match_wt IS NOT NULL  THEN
          IF p_project_in.competence_match_wt <> l_project_rec.competence_match_wt
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' COMPETENCE_MATCH_WT = ' ||
                  TO_CHAR(p_project_in.competence_match_wt)||',';
*/
             l_statement := l_statement || ' COMPETENCE_MATCH_WT = :comp_match_wt ,';
             l_b_comp_mtch_wt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.availability_match_wt <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.availability_match_wt IS NOT NULL  THEN
          IF p_project_in.availability_match_wt <> l_project_rec.availability_match_wt
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' AVAILABILITY_MATCH_WT = ' ||
                  TO_CHAR(p_project_in.availability_match_wt)||',';
*/
             l_statement := l_statement || ' AVAILABILITY_MATCH_WT = :avail_mtch_wt ,';
             l_b_avail_mtch_wt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.job_level_match_wt <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.job_level_match_wt IS NOT NULL  THEN
          IF p_project_in.job_level_match_wt <> l_project_rec.job_level_match_wt
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' JOB_LEVEL_MATCH_WT = ' ||
                  TO_CHAR(p_project_in.job_level_match_wt)||',';
*/
             l_statement := l_statement || ' JOB_LEVEL_MATCH_WT = :jb_lvl_mt_wt ,';
             l_b_jb_lvl_mt_wt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.search_min_availability <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.search_min_availability IS NOT NULL  THEN
          IF p_project_in.search_min_availability <> l_project_rec.search_min_availability
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' SEARCH_MIN_AVAILABILITY = ' ||
                  TO_CHAR(p_project_in.search_min_availability)||',';
*/
             l_statement := l_statement || ' SEARCH_MIN_AVAILABILITY = :srch_min_avail ,';
             l_b_search_min_avail_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.search_org_hier_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.search_org_hier_id IS NOT NULL  THEN
          IF p_project_in.search_org_hier_id <> l_project_rec.search_org_hier_id
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' SEARCH_ORG_HIER_ID = ' ||
                  TO_CHAR(p_project_in.search_org_hier_id)||',';
*/
             l_statement := l_statement || ' SEARCH_ORG_HIER_ID = :srch_org_hier_id ,';
             l_b_srch_org_hier_id_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.search_starting_org_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.search_starting_org_id IS NOT NULL  THEN
          IF p_project_in.search_starting_org_id <> l_project_rec.search_starting_org_id
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' SEARCH_ORG_HIER_ID = ' ||
                  TO_CHAR(p_project_in.search_starting_org_id)||',';
*/
             l_statement := l_statement || ' SEARCH_ORG_HIER_ID = :srch_org_hier_id ,';
             l_b_srch_st_org_id_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.min_cand_score_reqd_for_nom <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.min_cand_score_reqd_for_nom IS NOT NULL  THEN
          IF p_project_in.min_cand_score_reqd_for_nom <> l_project_rec.min_cand_score_reqd_for_nom
              THEN
--bug 2955326
/*
             l_statement := l_statement || ' MIN_CAND_SCORE_REQD_FOR_NOM = ' ||
                  TO_CHAR(p_project_in.min_cand_score_reqd_for_nom)||',';
*/
             l_statement := l_statement || ' MIN_CAND_SCORE_REQD_FOR_NOM = :min_can_sc_req_for_nom ,';
             l_b_min_can_sc_req_for_nom := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

-- Bug 6144566: Changes start
-- Bug 6144566: Introduced MCB related validations

       IF p_project_in.multi_currency_billing_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.multi_currency_billing_flag IS NOT NULL  THEN
          IF NVL(p_project_in.multi_currency_billing_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.multi_currency_billing_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
            -- if attempting to change MCB flag; check if it can be allowed
            IF NVL(pa_multi_currency_billing.check_mcb_trans_exist(p_project_in.pa_project_id),'N') = 'Y'
               OR NVL(pa_multi_currency_billing.check_mcb_setup_exists(p_project_in.pa_project_id),'N') = 'Y' THEN
               IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
	          FND_MESSAGE.SET_NAME('PA','PA_MCB_ALLOW_NO_CHG_AMG');  -- Cannot change MCB flag
	          FND_MSG_PUB.ADD;
	          RAISE  FND_API.G_EXC_ERROR;
               END IF;

            END IF;

            l_statement  := l_statement || ' MULTI_CURRENCY_BILLING_FLAG = :multi_crncy_bil_flag ,';
            l_b_multi_crncy_bil_flag := 'Y';
            l_update_yes_flag := 'Y';

          END IF;

          -- do MCB related validations, if MCB flag is 'Y'
               IF p_project_in.multi_currency_billing_flag = 'Y' THEN -- do MCB related validations

                  -- Project Currency related attributes
                  IF p_project_in.PROJECT_BIL_RATE_TYPE is NULL
                     OR p_project_in.PROJECT_BIL_RATE_TYPE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN -- PA_PROJ_RATE_TYPE_INV_AMG:The project exchage rate type is invalid
                     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
	                FND_MESSAGE.SET_NAME('PA','PA_PROJ_RATE_TYPE_INV_AMG');
	                FND_MESSAGE.SET_TOKEN('PROJECT', l_project_rec.segment1);
	                FND_MSG_PUB.ADD;
	                RAISE  FND_API.G_EXC_ERROR;
                     END IF;
                  ELSE
                     IF p_project_in.PROJECT_BIL_RATE_TYPE = 'User' THEN
                        IF p_project_in.PROJECT_BIL_EXCHANGE_RATE is NULL
                           OR p_project_in.PROJECT_BIL_EXCHANGE_RATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN -- PA_EXCH_RATE_NULL_PC_AMG:Project Exchange Rate cannot be null when project rate type is User.
	                      FND_MESSAGE.SET_NAME('PA','PA_EXCH_RATE_NULL_PC_AMG');
	                      FND_MSG_PUB.ADD;
	                      RAISE  FND_API.G_EXC_ERROR;
                           END IF;
                        END IF;

                        l_statement := l_statement || ' PROJECT_BIL_EXCHANGE_RATE = :proj_bil_xch_rt ,';
	        	l_b_proj_bil_xch_rt_flag := 'Y';
                        l_update_yes_flag := 'Y';

                     ELSE  -- non-User type
                        IF p_project_in.PROJECT_BIL_RATE_DATE_CODE is NULL
                           OR p_project_in.PROJECT_BIL_RATE_DATE_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN

                           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                              FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_TYPE_INVALID_AMG');
                              FND_MESSAGE.SET_TOKEN('CURR_TYPE','Project Currency');
                              FND_MSG_PUB.ADD;
                              RAISE  FND_API.G_EXC_ERROR;
                           END IF;
                        ELSE
                           IF p_project_in.PROJECT_BIL_RATE_DATE_CODE = 'FIXED_DATE' THEN  --Modified for bug 6332591
                              IF p_project_in.PROJECT_BIL_RATE_DATE is NULL
                                 OR p_project_in.PROJECT_BIL_RATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                                 IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
	        	            FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_INVALID_AMG');
                                    FND_MESSAGE.SET_TOKEN('CURR_TYPE','Project Currency');
	        	            FND_MSG_PUB.ADD;
	        	            RAISE  FND_API.G_EXC_ERROR;
                                 END IF;
                              END IF;
                           END IF;
                           l_statement  := l_statement || ' PROJECT_BIL_RATE_DATE = :prj_bil_rt_date ,';
	        	   l_b_prj_bil_rt_dt_flag := 'Y';
                           l_update_yes_flag := 'Y';
                        END IF;

                        l_statement  := l_statement || ' PROJECT_BIL_RATE_DATE_CODE = :proj_bil_rate_date_code ,';
	        	l_b_prj_bil_rt_dt_code_flag := 'Y';
                        l_update_yes_flag := 'Y';

                     END IF;

                     l_statement  := l_statement || ' PROJECT_BIL_RATE_TYPE = :proj_bil_rt_type ,';
                     l_b_proj_bil_rt_tp_flag := 'Y';
                     l_update_yes_flag := 'Y';

                  END IF;


                  -- Project Functional Currency related attributes
                  IF p_project_in.PROJFUNC_BIL_RATE_TYPE is NULL
                     OR p_project_in.PROJFUNC_BIL_RATE_TYPE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN -- PA_PFC_RATE_TYPE_INV_AMG:The project functional exchage rate type is invalid
                     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
        	        FND_MESSAGE.SET_NAME('PA','PA_PFC_RATE_TYPE_INV_AMG');
        	        FND_MSG_PUB.ADD;
        	        RAISE  FND_API.G_EXC_ERROR;
                     END IF;
                  ELSE
                     IF p_project_in.PROJFUNC_BIL_RATE_TYPE = 'User' THEN
                        IF p_project_in.PROJFUNC_BIL_EXCHANGE_RATE is NULL
                           OR p_project_in.PROJFUNC_BIL_EXCHANGE_RATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN  -- PA_EXCH_RATE_NULL_PF_AMG:Project Functional Exchange Rate cannot be null when  project functional rate type is User.
        	              FND_MESSAGE.SET_NAME('PA','PA_EXCH_RATE_NULL_PF_AMG');
        	              FND_MSG_PUB.ADD;
        	              RAISE  FND_API.G_EXC_ERROR;
                           END IF;
                        END IF;

                        l_statement := l_statement || ' PROJFUNC_BIL_EXCHANGE_RATE = :pjfnc_bil_xch_rt ,';
        		l_b_pjfnc_bil_xch_rt_flag := 'Y';
                        l_update_yes_flag := 'Y';

                     ELSE  -- non-User type
                        IF p_project_in.PROJFUNC_BIL_RATE_DATE_CODE is NULL
                           OR p_project_in.PROJFUNC_BIL_RATE_DATE_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN

                           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                              FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_TYPE_INVALID_AMG');
                              FND_MESSAGE.SET_TOKEN('CURR_TYPE','Project Functional Currency');
                              FND_MSG_PUB.ADD;
                              RAISE  FND_API.G_EXC_ERROR;
                           END IF;
                        ELSE
                           IF p_project_in.PROJFUNC_BIL_RATE_DATE_CODE = 'FIXED_DATE' THEN  --Modified for bug 6332591
                              IF p_project_in.PROJFUNC_BIL_RATE_DATE is NULL
                                 OR p_project_in.PROJFUNC_BIL_RATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                                 IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
	        	            FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_INVALID_AMG');
                                    FND_MESSAGE.SET_TOKEN('CURR_TYPE','Project Functional Currency');
        		            FND_MSG_PUB.ADD;
        		            RAISE  FND_API.G_EXC_ERROR;
                                 END IF;
                              END IF;
                           END IF;
                           l_statement  := l_statement || ' PROJFUNC_BIL_RATE_DATE = :prjfnc_bil_rt_date , ';
        		   l_b_prjfnc_bil_rt_dt_flag := 'Y';
                           l_update_yes_flag := 'Y';
                        END IF;
                        l_statement  := l_statement || ' PROJFUNC_BIL_RATE_DATE_CODE = :prjfnc_bil_rt_dt_code ,';
        		l_b_prjfnc_bil_rt_dt_cd_f := 'Y';
                        l_update_yes_flag := 'Y';
                     END IF;

                     l_statement  := l_statement || ' PROJFUNC_BIL_RATE_TYPE = :prjfnc_bil_rate_type ,';
        	     l_b_prjfnc_bil_rt_tp_flag := 'Y';
                     l_update_yes_flag := 'Y';

                  END IF;


                  -- Funding Currency related attributes
                  IF p_project_in.FUNDING_RATE_TYPE is NULL
                     OR p_project_in.FUNDING_RATE_TYPE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN -- PA_FUND_RATE_TYPE_INV_AMG:The funding exchage rate type is invalid
                     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
        	        FND_MESSAGE.SET_NAME('PA','PA_FUND_RATE_TYPE_INV_AMG');
        	        FND_MSG_PUB.ADD;
        	        RAISE  FND_API.G_EXC_ERROR;
                     END IF;
                  ELSE
                     IF p_project_in.FUNDING_RATE_TYPE = 'User' THEN
                        IF p_project_in.FUNDING_EXCHANGE_RATE is NULL
                           OR p_project_in.FUNDING_EXCHANGE_RATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
                           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN  -- PA_EXCHANGE_RATE_NULL:Exchange rate cannot be null when rate type is User.
        	              FND_MESSAGE.SET_NAME('PA','PA_EXCHANGE_RATE_NULL');
        	              FND_MSG_PUB.ADD;
        	              RAISE  FND_API.G_EXC_ERROR;
                           END IF;
                        END IF;
                        l_statement := l_statement || ' FUNDING_EXCHANGE_RATE = :fnding_xch_rt,';
        		l_b_fnding_xch_rt_flag := 'Y';
                        l_update_yes_flag := 'Y';

                     ELSE  -- non-User type
                        IF p_project_in.FUNDING_RATE_DATE_CODE is NULL
                           OR p_project_in.FUNDING_RATE_DATE_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN

                           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                              FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_TYPE_INVALID_AMG');
                              FND_MESSAGE.SET_TOKEN('CURR_TYPE','Funding Currency');
                              FND_MSG_PUB.ADD;
                              RAISE  FND_API.G_EXC_ERROR;
                           END IF;
                        ELSE
                           IF p_project_in.FUNDING_RATE_DATE_CODE = 'FIXED_DATE' THEN  --Modified for bug 6332591
                              IF p_project_in.FUNDING_RATE_DATE is NULL
                                 OR p_project_in.FUNDING_RATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                                 IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
	        	            FND_MESSAGE.SET_NAME('PA','PA_RATE_DATE_INVALID_AMG');
                                    FND_MESSAGE.SET_TOKEN('CURR_TYPE','Funding Currency');
        		            FND_MSG_PUB.ADD;
        		            RAISE  FND_API.G_EXC_ERROR;
                                 END IF;
                              END IF;
                           END IF;
                           l_statement  := l_statement || ' FUNDING_RATE_DATE = :fnding_rt_date ,';
        		   l_b_fnding_rt_dt_flag := 'Y';
                           l_update_yes_flag := 'Y';
                        END IF;
                        l_statement  := l_statement || ' FUNDING_RATE_DATE_CODE = :fnding_rate_date_code ,';
        		l_b_fndng_rt_dt_cd_flag := 'Y';
                        l_update_yes_flag := 'Y';
                     END IF;

                     l_statement  := l_statement || ' FUNDING_RATE_TYPE = :fnding_rate_type ,';
        	     l_b_fnding_rt_type_flag := 'Y';
                     l_update_yes_flag := 'Y';

                  END IF;

               ELSE  -- do no MCB related validations

                 IF ((p_project_in.project_bil_exchange_rate <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
	            AND p_project_in.project_bil_exchange_rate IS NOT NULL)
	            OR  p_project_in.project_bil_exchange_rate IS NULL) THEN
	            IF NVL(p_project_in.project_bil_exchange_rate,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
	            <> NVL(l_project_rec.project_bil_exchange_rate,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN
	         	l_statement := l_statement || ' PROJECT_BIL_EXCHANGE_RATE = :proj_bil_xch_rt ,';
	        	l_b_proj_bil_xch_rt_flag := 'Y';
	        	l_update_yes_flag := 'Y';
	            END IF;
	         END IF;

                 IF ((p_project_in.project_bil_rate_date_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
		    AND p_project_in.project_bil_rate_date_code IS NOT NULL)
		    OR p_project_in.project_bil_rate_date_code IS NULL) THEN
		    IF NVL(p_project_in.project_bil_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
		       <> NVL(l_project_rec.project_bil_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
		       l_statement  := l_statement || ' PROJECT_BIL_RATE_DATE_CODE = :proj_bil_rate_date_code ,';
		       l_b_prj_bil_rt_dt_code_flag := 'Y';
		       l_update_yes_flag := 'Y';
		    END IF;
		 END IF;

		 IF ((p_project_in.project_bil_rate_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
		    AND p_project_in.project_bil_rate_type IS NOT NULL)
		    OR p_project_in.project_bil_rate_type IS NULL) THEN
		    IF NVL(p_project_in.project_bil_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
		       <> NVL(l_project_rec.project_bil_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
		       l_statement  := l_statement || ' PROJECT_BIL_RATE_TYPE = :proj_bil_rt_type ,';
		       l_b_proj_bil_rt_tp_flag := 'Y';
		       l_update_yes_flag := 'Y';
		    END IF;
		 END IF;

		 IF ((p_project_in.project_bil_rate_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
		    AND p_project_in.project_bil_rate_date IS NOT NULL)
		    OR p_project_in.project_bil_rate_date IS NULL) THEN
		    IF NVL(p_project_in.project_bil_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
		       <> NVL(l_project_rec.project_bil_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) THEN
		       l_statement  := l_statement || ' PROJECT_BIL_RATE_DATE = :prj_bil_rt_date ,';
		       l_b_prj_bil_rt_dt_flag := 'Y';
		       l_update_yes_flag := 'Y';
		    END IF;
		 END IF;

	         IF ((p_project_in.projfunc_bil_exchange_rate <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
	            AND p_project_in.projfunc_bil_exchange_rate IS NOT NULL)
	            OR  p_project_in.projfunc_bil_exchange_rate IS NULL) THEN
	            IF NVL(p_project_in.projfunc_bil_exchange_rate,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
	            <> NVL(l_project_rec.projfunc_bil_exchange_rate,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN
	        	l_statement := l_statement || ' PROJFUNC_BIL_EXCHANGE_RATE = :pjfnc_bil_xch_rt ,';
	        	l_b_pjfnc_bil_xch_rt_flag := 'Y';
	        	l_update_yes_flag := 'Y';
	            END IF;
	         END IF;

		 IF ((p_project_in.projfunc_bil_rate_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
		    AND p_project_in.projfunc_bil_rate_date IS NOT NULL)
		    OR p_project_in.projfunc_bil_rate_date IS NULL) THEN
		    IF NVL(p_project_in.projfunc_bil_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
		       <> NVL(l_project_rec.projfunc_bil_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) THEN
		       l_statement  := l_statement || ' PROJFUNC_BIL_RATE_DATE = :prjfnc_bil_rt_date , ';
		       l_b_prjfnc_bil_rt_dt_flag := 'Y';
		       l_update_yes_flag := 'Y';
		    END IF;
		 END IF;

                 IF ((p_project_in.projfunc_bil_rate_date_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
		    AND p_project_in.projfunc_bil_rate_date_code IS NOT NULL)
		    OR p_project_in.projfunc_bil_rate_date_code IS NULL) THEN
		    IF NVL(p_project_in.projfunc_bil_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
		       <> NVL(l_project_rec.projfunc_bil_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
		       l_statement  := l_statement || ' PROJFUNC_BIL_RATE_DATE_CODE = :prjfnc_bil_rt_dt_code ,';
		       l_b_prjfnc_bil_rt_dt_cd_f := 'Y';
		       l_update_yes_flag := 'Y';
		    END IF;
		 END IF;

		 IF ((p_project_in.projfunc_bil_rate_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
		    AND p_project_in.projfunc_bil_rate_type IS NOT NULL)
		    OR p_project_in.projfunc_bil_rate_type IS NULL) THEN
		    IF NVL(p_project_in.projfunc_bil_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
		       <> NVL(l_project_rec.projfunc_bil_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
		       l_statement  := l_statement || ' PROJFUNC_BIL_RATE_TYPE = :prjfnc_bil_rate_type ,';
		       l_b_prjfnc_bil_rt_tp_flag := 'Y';
		       l_update_yes_flag := 'Y';
		    END IF;
		 END IF;

	         IF ((p_project_in.funding_exchange_rate <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
	            AND p_project_in.funding_exchange_rate IS NOT NULL)
	            OR  p_project_in.funding_exchange_rate IS NULL) THEN
	            IF NVL(p_project_in.funding_exchange_rate,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) <>
	        	NVL(l_project_rec.funding_exchange_rate,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN
	        	l_statement := l_statement || ' FUNDING_EXCHANGE_RATE = :fnding_xch_rt,';
	        	l_b_fnding_xch_rt_flag := 'Y';
	        	l_update_yes_flag := 'Y';
	            END IF;
                 END IF;

		 IF ((p_project_in.funding_rate_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
		    AND p_project_in.funding_rate_date IS NOT NULL)
		    OR p_project_in.funding_rate_date IS NULL) THEN
		    IF NVL(p_project_in.funding_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
		       <> NVL(l_project_rec.funding_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) THEN
		       l_statement  := l_statement || ' FUNDING_RATE_DATE = :fnding_rt_date ,';
		       l_b_fnding_rt_dt_flag := 'Y';
		       l_update_yes_flag := 'Y';
		    END IF;
                 END IF;

		 IF ((p_project_in.funding_rate_date_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
		    AND p_project_in.funding_rate_date_code IS NOT NULL)
		    OR p_project_in.funding_rate_date_code IS NULL) THEN
		    IF NVL(p_project_in.funding_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
		       <> NVL(l_project_rec.funding_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
		       l_statement  := l_statement || ' FUNDING_RATE_DATE_CODE = :fnding_rate_date_code ,';
		       l_b_fndng_rt_dt_cd_flag := 'Y';
		       l_update_yes_flag := 'Y';
		    END IF;
		 END IF;

		 IF ((p_project_in.funding_rate_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
		    AND p_project_in.funding_rate_type IS NOT NULL)
		    OR p_project_in.funding_rate_type IS NULL) THEN
		    IF NVL(p_project_in.funding_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
		       <> NVL(l_project_rec.funding_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN
		       l_statement  := l_statement || ' FUNDING_RATE_TYPE = :fnding_rate_type ,';
		       l_b_fnding_rt_type_flag := 'Y';
		       l_update_yes_flag := 'Y';
		    END IF;
                 END IF;

               END IF;

       END IF;

-- Bug 6144566: Changes end

/* Commenting the below code for bug #4630836 as the 'non_lab_std_bill_rt_sch_id' column
   is getting updated in the code added as part of the fix for the bug 2802984 and the below
   code is causing duplicate column updation error.

       IF p_project_in.non_lab_std_bill_rt_sch_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.non_lab_std_bill_rt_sch_id IS NOT NULL  THEN
          IF p_project_in.non_lab_std_bill_rt_sch_id <> l_project_rec.non_lab_std_bill_rt_sch_id
              THEN
--bug 2955326
--
--             l_statement := l_statement || ' NON_LAB_STD_BILL_RT_SCH_ID = ' ||
--                  TO_CHAR(p_project_in.non_lab_std_bill_rt_sch_id)||',';
--
             l_statement := l_statement || ' NON_LAB_STD_BILL_RT_SCH_ID = :n_lb_std_bill_rt_sch_id ,';
             l_b_nn_lb_std_bl_rt_sch_id_f := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF; */

-- Bug 6144566: Changes start
/*
       IF p_project_in.project_bil_exchange_rate <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.project_bil_exchange_rate IS NOT NULL  THEN
          IF p_project_in.project_bil_exchange_rate <> l_project_rec.project_bil_exchange_rate
              THEN
--bug 2955326

             l_statement := l_statement || ' PROJECT_BIL_EXCHANGE_RATE = ' ||
                  TO_CHAR(p_project_in.project_bil_exchange_rate)||',';

             l_statement := l_statement || ' PROJECT_BIL_EXCHANGE_RATE = :proj_bil_xch_rt ,';
             l_b_proj_bil_xch_rt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.projfunc_bil_exchange_rate <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.projfunc_bil_exchange_rate IS NOT NULL  THEN
          IF p_project_in.projfunc_bil_exchange_rate <> l_project_rec.projfunc_bil_exchange_rate
              THEN
--bug 2955326

             l_statement := l_statement || ' PROJFUNC_BIL_EXCHANGE_RATE = ' ||
                  TO_CHAR(p_project_in.projfunc_bil_exchange_rate)||',';

             l_statement := l_statement || ' PROJFUNC_BIL_EXCHANGE_RATE = :pjfnc_bil_xch_rt ,';
             l_b_pjfnc_bil_xch_rt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.funding_exchange_rate <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.funding_exchange_rate IS NOT NULL  THEN
          IF p_project_in.funding_exchange_rate <> l_project_rec.funding_exchange_rate
              THEN
--bug 2955326

             l_statement := l_statement || ' FUNDING_EXCHANGE_RATE = ' ||
                  TO_CHAR(p_project_in.funding_exchange_rate)||',';

             l_statement := l_statement || ' FUNDING_EXCHANGE_RATE = :fnding_xch_rt,';
             l_b_fnding_xch_rt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
*/
-- Bug 6144566: Changes end

       IF p_project_in.enable_automated_search  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.enable_automated_search IS NOT NULL  THEN
          IF NVL(p_project_in.enable_automated_search, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.enable_automated_search, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' ENABLE_AUTOMATED_SEARCH =  '||''''||
             RTRIM(p_project_in.enable_automated_search)||''''||',';
*/
             l_statement  := l_statement ||
                       ' ENABLE_AUTOMATED_SEARCH = :enable_auto_srch ,';
             l_b_enable_auto_srch_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.search_country_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.search_country_code IS NOT NULL  THEN
          IF NVL(p_project_in.search_country_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.search_country_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' SEARCH_COUNTRY_CODE =  '||''''||
             RTRIM(p_project_in.search_country_code)||''''||',';
*/
             l_statement  := l_statement ||
                       ' SEARCH_COUNTRY_CODE = :srch_cntry_code ,';
             l_b_srch_cntry_code_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.invproc_currency_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.invproc_currency_type IS NOT NULL  THEN
          IF NVL(p_project_in.invproc_currency_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.invproc_currency_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' INVPROC_CURRENCY_TYPE =  '||''''||
             RTRIM(p_project_in.invproc_currency_type)||''''||',';
*/
             l_statement  := l_statement ||
                       ' INVPROC_CURRENCY_TYPE = :invproc_currency_type ,';
             l_b_invproc_crncy_tp_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.revproc_currency_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.revproc_currency_code IS NOT NULL  THEN
          IF NVL(p_project_in.revproc_currency_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.revproc_currency_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' REVPROC_CURRENCY_CODE =  '||''''||
             RTRIM(p_project_in.revproc_currency_code)||''''||',';
*/
             l_statement  := l_statement ||
                       ' REVPROC_CURRENCY_CODE = :revproc_currency_code ,';
             l_b_revproc_crncy_cd_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

-- Bug 6144566: Changes start
/*
       IF p_project_in.project_bil_rate_date_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.project_bil_rate_date_code IS NOT NULL  THEN
          IF NVL(p_project_in.project_bil_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.project_bil_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326

             l_statement  := l_statement ||
                       ' PROJECT_BIL_RATE_DATE_CODE =  '||''''||
             RTRIM(p_project_in.project_bil_rate_date_code)||''''||',';

             l_statement  := l_statement ||
                       ' PROJECT_BIL_RATE_DATE_CODE = :proj_bil_rate_date_code ,';
             l_b_prj_bil_rt_dt_code_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.project_bil_rate_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.project_bil_rate_type IS NOT NULL  THEN
          IF NVL(p_project_in.project_bil_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.project_bil_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326

             l_statement  := l_statement ||
                       ' PROJECT_BIL_RATE_TYPE =  '||''''||
             RTRIM(p_project_in.project_bil_rate_type)||''''||',';

             l_statement  := l_statement ||
                       ' PROJECT_BIL_RATE_TYPE = :proj_bil_rt_type ,';
             l_b_proj_bil_rt_tp_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
*/
-- Bug 6144566: Changes end

       IF p_project_in.projfunc_currency_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.projfunc_currency_code IS NOT NULL  THEN
          IF NVL(p_project_in.projfunc_currency_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.projfunc_currency_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' PROJFUNC_CURRENCY_CODE =  '||''''||
             RTRIM(p_project_in.projfunc_currency_code)||''''||',';
*/
             l_statement  := l_statement ||
                       ' PROJFUNC_CURRENCY_CODE = :prjfnc_currency_code ,';
             l_b_prjfnc_crncy_code_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

-- Bug 6144566: Changes start
/*
       IF p_project_in.projfunc_bil_rate_date_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.projfunc_bil_rate_date_code IS NOT NULL  THEN
          IF NVL(p_project_in.projfunc_bil_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.projfunc_bil_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326

             l_statement  := l_statement ||
                       ' PROJFUNC_BIL_RATE_DATE_CODE =  '||''''||
             RTRIM(p_project_in.projfunc_bil_rate_date_code)||''''||',';

             l_statement  := l_statement ||
                       ' PROJFUNC_BIL_RATE_DATE_CODE = :prjfnc_bil_rt_dt_code ,';
             l_b_prjfnc_bil_rt_dt_cd_f := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.projfunc_bil_rate_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.projfunc_bil_rate_type IS NOT NULL  THEN
          IF NVL(p_project_in.projfunc_bil_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.projfunc_bil_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326

             l_statement  := l_statement ||
                       ' PROJFUNC_BIL_RATE_TYPE =  '||''''||
             RTRIM(p_project_in.projfunc_bil_rate_type)||''''||',';

             l_statement  := l_statement ||
                       ' PROJFUNC_BIL_RATE_TYPE = :prjfnc_bil_rate_type ,';
             l_b_prjfnc_bil_rt_tp_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.funding_rate_date_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.funding_rate_date_code IS NOT NULL  THEN
          IF NVL(p_project_in.funding_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.funding_rate_date_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326

             l_statement  := l_statement ||
                       ' FUNDING_RATE_DATE_CODE =  '||''''||
             RTRIM(p_project_in.funding_rate_date_code)||''''||',';

             l_statement  := l_statement ||
                       ' FUNDING_RATE_DATE_CODE = :fnding_rate_date_code ,';
             l_b_fndng_rt_dt_cd_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.funding_rate_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.funding_rate_type IS NOT NULL  THEN
          IF NVL(p_project_in.funding_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.funding_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326

             l_statement  := l_statement ||
                       ' FUNDING_RATE_TYPE =  '||''''||
             RTRIM(p_project_in.funding_rate_type)||''''||',';

             l_statement  := l_statement ||
                       ' FUNDING_RATE_TYPE = :fnding_rate_type ,';
             l_b_fnding_rt_type_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
*/
-- Bug 6144566: Changes end

       IF p_project_in.baseline_funding_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.baseline_funding_flag IS NOT NULL  THEN
          IF NVL(p_project_in.baseline_funding_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.baseline_funding_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' BASELINE_FUNDING_FLAG =  '||''''||
             RTRIM(p_project_in.baseline_funding_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' BASELINE_FUNDING_FLAG = :bsln_fnding_flag ,';
             l_b_bsln_fnding_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.projfunc_cost_rate_type  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.projfunc_cost_rate_type IS NOT NULL  THEN
          IF NVL(p_project_in.projfunc_cost_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.projfunc_cost_rate_type, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' PROJFUNC_COST_RATE_TYPE =  '||''''||
             RTRIM(p_project_in.projfunc_cost_rate_type)||''''||',';
*/
             l_statement  := l_statement ||
                       ' PROJFUNC_COST_RATE_TYPE = :projfnc_cost_rate_type ,';
             l_b_prjfnc_cst_rt_tp_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.inv_by_bill_trans_curr_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.inv_by_bill_trans_curr_flag IS NOT NULL  THEN
          IF NVL(p_project_in.inv_by_bill_trans_curr_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.inv_by_bill_trans_curr_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' INV_BY_BILL_TRANS_CURR_FLAG =  '||''''||
             RTRIM(p_project_in.inv_by_bill_trans_curr_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' INV_BY_BILL_TRANS_CURR_FLAG = :inv_by_bil_txn_cur_flag ,';
             l_b_inv_bill_txn_cur_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

-- Bug 6144566: Changes start
/*
       IF p_project_in.multi_currency_billing_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.multi_currency_billing_flag IS NOT NULL  THEN
          IF NVL(p_project_in.multi_currency_billing_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.multi_currency_billing_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326

             l_statement  := l_statement ||
                       ' MULTI_CURRENCY_BILLING_FLAG =  '||''''||
             RTRIM(p_project_in.multi_currency_billing_flag)||''''||',';

             l_statement  := l_statement ||
                       ' MULTI_CURRENCY_BILLING_FLAG = :multi_crncy_bil_flag ,';
             l_b_multi_crncy_bil_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.project_bil_rate_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          AND p_project_in.project_bil_rate_date IS NOT NULL  THEN
          IF NVL(p_project_in.project_bil_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
           <> NVL(l_project_rec.project_bil_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
              THEN
--bug 2955326

             l_statement  := l_statement || ' PROJECT_BIL_RATE_DATE =  to_date('''||
                     to_char(p_project_in.project_bil_rate_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';

             l_statement  := l_statement || ' PROJECT_BIL_RATE_DATE = :prj_bil_rt_date ,';
             l_b_prj_bil_rt_dt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.projfunc_bil_rate_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          AND p_project_in.projfunc_bil_rate_date IS NOT NULL  THEN
          IF NVL(p_project_in.projfunc_bil_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
           <> NVL(l_project_rec.projfunc_bil_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
              THEN
--bug 2955326

             l_statement  := l_statement || ' PROJFUNC_BIL_RATE_DATE =  to_date('''||
                     to_char(p_project_in.projfunc_bil_rate_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';

             l_statement  := l_statement || ' PROJFUNC_BIL_RATE_DATE = :prjfnc_bil_rt_date , ';
             l_b_prjfnc_bil_rt_dt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.funding_rate_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          AND p_project_in.funding_rate_date IS NOT NULL  THEN
          IF NVL(p_project_in.funding_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
           <> NVL(l_project_rec.funding_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
              THEN
--bug 2955326

             l_statement  := l_statement || ' FUNDING_RATE_DATE =  to_date('''||
                     to_char(p_project_in.funding_rate_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';

             l_statement  := l_statement || ' FUNDING_RATE_DATE = :fnding_rt_date ,';
             l_b_fnding_rt_dt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
*/
-- Bug 6144566: Changes end

       IF p_project_in.projfunc_cost_rate_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          AND p_project_in.projfunc_cost_rate_date IS NOT NULL  THEN
          IF NVL(p_project_in.projfunc_cost_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
           <> NVL(l_project_rec.projfunc_cost_rate_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
              THEN
--bug 2955326
/*
             l_statement  := l_statement || ' PROJFUNC_COST_RATE_DATE =  to_date('''||
                     to_char(p_project_in.projfunc_cost_rate_date,'YYYY/MM/DD')||
                             ''', ''YYYY/MM/DD''),';
*/
             l_statement  := l_statement || ' PROJFUNC_COST_RATE_DATE = :prjfnc_cst_rt_date ,';
             l_b_prjfnc_cst_rt_dt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

--Sakthi MCB
--Sakthi Structure
       IF p_project_in.assign_precedes_task  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.assign_precedes_task IS NOT NULL  THEN
          IF NVL(p_project_in.assign_precedes_task, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.assign_precedes_task, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' ASSIGN_PRECEDES_TASK =  '||''''||
             RTRIM(p_project_in.assign_precedes_task)||''''||',';
*/
             l_statement  := l_statement ||
                       ' ASSIGN_PRECEDES_TASK = :asgn_prec_tsk_flg ,';
             l_b_asgn_prec_tsk_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.split_cost_from_workplan_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.split_cost_from_workplan_flag IS NOT NULL  THEN
          IF NVL(p_project_in.split_cost_from_workplan_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.split_cost_from_workplan_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' SPLIT_COST_FROM_WORKPLAN_FLAG =  '||''''||
             RTRIM(p_project_in.split_cost_from_workplan_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' SPLIT_COST_FROM_WORKPLAN_FLAG = :splt_cst_fm_wp_flag ,';
             l_b_splt_cst_fm_wp_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.split_cost_from_bill_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.split_cost_from_bill_flag IS NOT NULL  THEN
          IF NVL(p_project_in.split_cost_from_bill_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.split_cost_from_bill_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' SPLIT_COST_FROM_BILL_FLAG =  '||''''||
             RTRIM(p_project_in.split_cost_from_bill_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' SPLIT_COST_FROM_BILL_FLAG = :splt_cst_fm_bill_flag ,';
             l_b_splt_cst_fm_bill_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

--Sakthi Structure
--Advertisement

       IF p_project_in.adv_action_set_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.adv_action_set_id IS NOT NULL  THEN
          IF NVL(p_project_in.adv_action_set_id, PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
           <> NVL(l_project_rec.adv_action_set_id, PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
              THEN
--bug 2955326
/*
             l_statement  := l_statement || ' ADV_ACTION_SET_ID =  '||
                  TO_CHAR(p_project_in.adv_action_set_id)||',';
*/
             l_statement  := l_statement || ' ADV_ACTION_SET_ID = :adv_act_set_id ,';
             l_b_adv_act_set_id_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.start_adv_action_set_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.start_adv_action_set_flag IS NOT NULL  THEN
          IF NVL(p_project_in.start_adv_action_set_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.start_adv_action_set_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' START_ADV_ACTION_SET_FLAG =  '||''''||
             RTRIM(p_project_in.start_adv_action_set_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' START_ADV_ACTION_SET_FLAG = :st_adv_act_set_flag ,';
             l_b_st_adv_act_set_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

--Advertisement

--Project Setup

         IF p_project_in.priority_code  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.priority_code IS NOT NULL  THEN
          IF NVL(p_project_in.priority_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.priority_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' PRIORITY_CODE =  '||''''||
             RTRIM(p_project_in.priority_code)||''''||',';
*/

             -- 5191417 validate passed priority_code value

             OPEN priority_code_csr(p_project_in.priority_code);
             FETCH priority_code_csr into l_valid_prio_code;
             CLOSE priority_code_csr;

             -- if not valid, throw error message

             IF l_valid_prio_code = 'N' THEN

                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN

                  PA_UTILS.ADD_MESSAGE(p_app_short_name  => 'PA'
                        ,p_msg_name         => 'PA_INVALID_PRIORITY_CODE');

                  l_return_status := FND_API.G_RET_STS_ERROR;

                  RAISE  FND_API.G_EXC_ERROR;

                END IF;

             END IF;

             -- 5191417 end

             l_statement  := l_statement ||
                       ' PRIORITY_CODE = :pri_code ,';
             l_b_pri_code_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

--Project Setup

--Retention
       IF p_project_in.retn_billing_inv_format_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.retn_billing_inv_format_id IS NOT NULL  THEN
          IF NVL(p_project_in.retn_billing_inv_format_id, PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
           <> NVL(l_project_rec.retn_billing_inv_format_id, PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
              THEN
--bug 2955326
/*
             l_statement  := l_statement || ' RETN_BILLING_INV_FORMAT_ID =  '||
                  TO_CHAR(p_project_in.retn_billing_inv_format_id)||',';
*/
             l_statement  := l_statement || ' RETN_BILLING_INV_FORMAT_ID = :retn_bil_inv_fmt_id ,';
             l_b_retn_bil_inv_fmt_id_flg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

       IF p_project_in.retn_accounting_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.retn_accounting_flag IS NOT NULL  THEN
          IF NVL(p_project_in.retn_accounting_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.retn_accounting_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' RETN_ACCOUNTING_FLAG =  '||''''||
             RTRIM(p_project_in.retn_accounting_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' RETN_ACCOUNTING_FLAG = :retn_acnt_flag ,';
             l_b_retn_acnt_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
--Retention

-- anlee
-- patchset K changes
         IF p_project_in.revaluate_funding_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.revaluate_funding_flag IS NOT NULL  THEN
          IF NVL(p_project_in.revaluate_funding_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.revaluate_funding_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
            /*Bug #2891513 Added the below code for bug 2891513*/
        IF p_project_in.include_gains_losses_flag = 'N'
        THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' revaluate_funding_flag =  '||''''||
             RTRIM(p_project_in.revaluate_funding_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' revaluate_funding_flag = :reval_fndng_flg ,';
             l_b_reval_fndng_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
        ELSE

          IF ((p_project_in.include_gains_losses_flag = 'Y' OR l_project_rec.include_gains_losses_flag ='Y')
            AND  (p_project_in.revaluate_funding_flag = 'N'))
          THEN
                 IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                   THEN
                        pa_interface_utils_pub.map_new_amg_msg
                        ( p_old_message_code => 'PA_CANT_UPDATE_REV_FUN'
                         ,p_msg_attribute    => 'CHANGE'
                         ,p_resize_flag      => 'Y'
                         ,p_msg_context      => 'PROJ'
                         ,p_attribute1       => l_project_rec.segment1
                         ,p_attribute2       => ''
                         ,p_attribute3       => ''
                         ,p_attribute4       => ''
                         ,p_attribute5       => '');
                  END IF;
                  RAISE  FND_API.G_EXC_ERROR;
              /*bug 2891513 -Code ends*/
           ELSE
             l_statement  := l_statement ||
                       ' revaluate_funding_flag = :reval_fndng_flg ,';
             l_b_reval_fndng_flag := 'Y';
             l_update_yes_flag := 'Y';
          END IF;
         END IF;
        END IF;
       END IF;

-- msundare
    IF p_project_in.security_level <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.security_level IS NOT NULL  THEN
          IF NVL(p_project_in.security_level, PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
           <> NVL(l_project_rec.security_level, PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                THEN
                        --bug 2955326
                        /*
                                     l_statement  := l_statement ||
                                               ' security_level =  '||''''||
                                     RTRIM(p_project_in.security_level)||''''||',';
                         */

                             --Included logic here to validate the Project Security Level
                             --For Bug#5191699.
                             --If the user passes an invalid value ,we need to handle that as,
                             --security level can take values only
                             --from the lookup.Hence we dont update and the existing value will remain.

                                OPEN  cur_check_sec_level(p_project_in.security_level);
                                FETCH cur_check_sec_level INTO l_check_sec_level;
                                CLOSE cur_check_sec_level;

                                IF l_check_sec_level = 'Y' THEN
                                        -- A Valid value has been passed hecne update

                                        l_statement  := l_statement ||
                                               ' security_level = :sec_lvl ,';
                                        l_b_sec_lvl_flag := 'Y';
                        --end bug 2955326
                                        l_update_yes_flag := 'Y';
                                ELSE
                                        l_b_sec_lvl_flag  := 'N';
                                END IF; -- End of changes Bug#5191699.
                END IF;
     END IF;

    /* Bug 8840472 : Commenting out the below code as the labor_disc_reason_code and
       non_labor_disc_reason_code should be populated only for 'Bill Rate' schedule type
    */

    /* -- Bug 8840472 .. start
    IF p_project_in.labor_disc_reason_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.labor_disc_reason_code IS NOT NULL  THEN
          IF NVL(p_project_in.labor_disc_reason_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <> NVL(l_project_rec.labor_disc_reason_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326

             l_statement  := l_statement ||
                       ' labor_disc_reason_code =  '||''''||
             RTRIM(p_project_in.labor_disc_reason_code)||''''||',';

             l_statement  := l_statement ||
                       ' labor_disc_reason_code = :lbr_disc_rsn_code ,';
             l_b_lbr_disc_rsn_code_flg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

    IF p_project_in.non_labor_disc_reason_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.labor_disc_reason_code IS NOT NULL  THEN
          IF NVL(p_project_in.non_labor_disc_reason_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <> NVL(l_project_rec.non_labor_disc_reason_code, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326

             l_statement  := l_statement ||
                       ' non_labor_disc_reason_code =  '||''''||
             RTRIM(p_project_in.non_labor_disc_reason_code)||''''||',';

             l_statement  := l_statement ||
                       ' non_labor_disc_reason_code = :nn_lbr_disc_rsn_cd ,';
             l_b_nn_lbr_disc_rsn_cd_flg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
*/ -- Bug 8840472 End.
-- End msundare

         IF p_project_in.include_gains_losses_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.include_gains_losses_flag IS NOT NULL  THEN
          IF NVL(p_project_in.include_gains_losses_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.include_gains_losses_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
        /*Added the below condition for bug 2891513*/
        IF (l_include_gains_and_losses = 'Y'  AND
           (p_project_in.revaluate_funding_flag = 'Y' OR l_project_rec.revaluate_funding_flag ='Y'))
          THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' include_gains_losses_flag =  '||''''||
             RTRIM(p_project_in.include_gains_losses_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' include_gains_losses_flag = :inc_gn_los_flg ,';
             l_b_inc_gn_los_flag := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
         /*Added the else part of the code for bug 2891513*/
         ELSE
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
               THEN
                     pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_CANT_UPDATE_GAIN_LOSSES'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'Y'
                      ,p_msg_context      => 'PROJ'
                      ,p_attribute1       => l_project_rec.segment1
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
             END IF;
               RAISE  FND_API.G_EXC_ERROR;
          END IF;
         END IF;
       END IF;

-- End of changes

--PA L Changes bug 2872708
         IF p_project_in.asset_allocation_method  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.asset_allocation_method IS NOT NULL  THEN
          IF NVL(p_project_in.asset_allocation_method, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.asset_allocation_method, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' asset_allocation_method =  '||''''||
             RTRIM(p_project_in.asset_allocation_method)||''''||',';
*/

             --From patchset L we need to perform vlaidation for all new columns added in AMG also.
             --Call validation API here
             PA_IMPL_OPTIONS_PUB.check_asset_alloc_method(
                            p_asset_allocation_method  => RTRIM(p_project_in.asset_allocation_method)
                           ,p_amg_segment1             => l_amg_segment1
                           ,x_msg_count                => l_msg_count
                           ,x_msg_data                 => l_msg_data
                           ,x_return_status            => l_return_status
                          );
             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
             THEN
                 RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
             THEN
                 p_multiple_task_msg := 'F';
                 RAISE FND_API.G_EXC_ERROR;
             END IF;

             l_statement  := l_statement ||
                       ' asset_allocation_method = :as_alloc_mth ,';
             l_b_as_alloc_mth_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

         IF p_project_in.capital_event_processing  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.capital_event_processing IS NOT NULL  THEN
          IF NVL(p_project_in.capital_event_processing, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.capital_event_processing, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' capital_event_processing =  '||''''||
             RTRIM(p_project_in.capital_event_processing)||''''||',';
*/
             --Call validation API here
             PA_IMPL_OPTIONS_PUB.check_cap_event_method(
                            p_capital_event_processing  => RTRIM(p_project_in.capital_event_processing)
                           ,p_amg_segment1             => l_amg_segment1
                           ,x_msg_count                => l_msg_count
                           ,x_msg_data                 => l_msg_data
                           ,x_return_status            => l_return_status
                          );
             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
             THEN
                 RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
             THEN
                 p_multiple_task_msg := 'F';
                 RAISE FND_API.G_EXC_ERROR;
             END IF;

             l_statement  := l_statement ||
                       ' capital_event_processing =  :cp_evt_proc,';
             l_b_cp_evt_proc_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

         IF p_project_in.cint_rate_sch_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
          AND p_project_in.cint_rate_sch_id IS NOT NULL  THEN
          IF NVL(p_project_in.cint_rate_sch_id, PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
           <> NVL(l_project_rec.cint_rate_sch_id, PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' cint_rate_sch_id =  '||''''||
             RTRIM(p_project_in.cint_rate_sch_id)||''''||',';
*/
             --Call validation API here
             PA_IMPL_OPTIONS_PUB.check_cint_schedule(
                            p_cint_rate_sch_id         => p_project_in.cint_rate_sch_id
                           ,p_amg_segment1             => l_amg_segment1
                           ,x_msg_count                => l_msg_count
                           ,x_msg_data                 => l_msg_data
                           ,x_return_status            => l_return_status
                          );
             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
             THEN
                 RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
             THEN
                 p_multiple_task_msg := 'F';
                 RAISE FND_API.G_EXC_ERROR;
             END IF;

             l_statement  := l_statement ||
                       ' cint_rate_sch_id = :cint_rt_sch ,';
             l_b_cint_rt_sch_id_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

         IF p_project_in.cint_eligible_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          AND p_project_in.cint_eligible_flag IS NOT NULL  THEN
          IF NVL(p_project_in.cint_eligible_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
           <> NVL(l_project_rec.cint_eligible_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' cint_eligible_flag =  '||''''||
             RTRIM(p_project_in.cint_eligible_flag)||''''||',';
*/
             l_statement  := l_statement ||
                       ' cint_eligible_flag = :cint_elg_fg ,';
             l_b_cint_elg_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;

         IF p_project_in.cint_stop_date  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
          AND p_project_in.cint_stop_date IS NOT NULL  THEN
          IF NVL(p_project_in.cint_stop_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
           <> NVL(l_project_rec.cint_stop_date, PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
              THEN
--bug 2955326
/*
             l_statement  := l_statement ||
                       ' cint_stop_date =  '||''''||
             RTRIM(p_project_in.cint_stop_date)||''''||',';
*/
             l_statement  := l_statement ||
                       ' cint_stop_date = :cint_stp_dt ,';
             l_b_cint_stp_dt_fg := 'Y';
--end bug 2955326
             l_update_yes_flag := 'Y';
          END IF;
       END IF;
--End PA L changes

------------------- FP_M changes begin (venkat) 2 -----------------------------------------------

/* ------ Begin Commented for now as the column sys_program_flag not exist in the pa_projects -----

    IF (p_project_in.sys_program_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
       (p_project_in.sys_program_flag IS NOT NULL)
    THEN
        IF NVL(p_project_in.sys_program_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <>
           NVL(l_project_rec.sys_program_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        THEN
            l_statement  := l_statement || ' sys_program_flag = :sys_program_flg ,';
            l_sys_program_flag := 'Y';
            l_update_yes_flag := 'Y';
        END IF;
    END IF;
---------------------------------End Comment----------------------------------------------------- */

-- Bug # 5072032.

    IF (p_project_in.sys_program_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
       (p_project_in.sys_program_flag IS NOT NULL)
    THEN
        IF NVL(p_project_in.sys_program_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <>
           NVL(l_project_rec.sys_program_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        THEN
            l_statement  := l_statement || ' sys_program_flag = :sys_program_flag ,';
            l_b_sys_program_flag_fg := 'Y';
            l_update_yes_flag := 'Y';
        END IF;
    END IF;

    IF (p_project_in.allow_multi_program_rollup <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
       (p_project_in.allow_multi_program_rollup IS NOT NULL)
    THEN
        IF NVL(p_project_in.allow_multi_program_rollup, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <>
           NVL(l_project_rec.allow_multi_program_rollup, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        THEN
            l_statement  := l_statement || ' allow_multi_program_rollup = :allow_multi_program_rollup ,';
            l_b_allow_multi_prog_rollup_fg := 'Y';
            l_update_yes_flag := 'Y';
        END IF;
    END IF;

   IF l_debug_mode = 'Y' THEN
        pa_debug.write(l_module_name,'l_b_sys_program_flag_fg=' || l_b_sys_program_flag_fg,3);
        pa_debug.write(l_module_name,'l_b_allow_multi_prog_rollup_fg='||l_b_allow_multi_prog_rollup_fg,3);
    END IF;

    IF l_b_sys_program_flag_fg = 'Y' OR
       l_b_allow_multi_prog_rollup_fg = 'Y'
    THEN

        IF l_debug_mode = 'Y' THEN
              pa_debug.write(l_module_name,'Before Calling SETUP_PROJECT_AS_PROGRAM in Update_Project flow' ,3);
              pa_debug.write(l_module_name,'l_project_id='||l_project_id,3);
              pa_debug.write(l_module_name,'p_project_in.sys_program_flag='||p_project_in.sys_program_flag,3);
              pa_debug.write(l_module_name,'p_project_in.allow_multi_program_rollup='||p_project_in.allow_multi_program_rollup,3);
        END IF;

        PA_PROJECT_PUB.SETUP_PROJECT_AS_PROGRAM(
             p_api_version                      => p_api_version_number
           , p_init_msg_list            => p_init_msg_list
           , p_commit                       => p_commit
           , p_max_msg_count            => p_msg_count
           , p_project_id                       => l_project_id   -- Project Id is already derived/converted therfore no need to pass project reference to this API.
           , p_sys_program_flag         => p_project_in.sys_program_flag
           , p_allow_multi_program_rollup       => p_project_in.allow_multi_program_rollup
           , x_msg_count                => l_msg_count
           , x_msg_data                 => l_msg_data
           , x_return_status            => l_return_status
                           );

        IF l_debug_mode = 'Y' THEN
              pa_debug.write(l_module_name,'After Calling SETUP_PROJECT_AS_PROGRAM in Update_Project flow' ,3);
              pa_debug.write(l_module_name,'l_project_id='||l_project_id,3);
              pa_debug.write(l_module_name,'l_return_status='||l_return_status,3);
        END IF;

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
            RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
            p_multiple_task_msg := 'F';
            RAISE FND_API.G_EXC_ERROR;
        END IF;

    END IF;

-- End of Bug # 5072032.

    IF (p_project_in.enable_top_task_customer_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
       (p_project_in.enable_top_task_customer_flag IS NOT NULL)
    THEN
        IF NVL(p_project_in.enable_top_task_customer_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <>
           NVL(l_project_rec.enable_top_task_customer_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        THEN
               --Bug 3279981 Review
               IF p_project_in.enable_top_task_customer_flag IN ('Y','N') THEN
                    -- Function Security Check
                    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
                    ( p_api_version_number => p_api_version_number,
                      p_responsibility_id  => l_resp_id,
                      p_function_name      => 'PA_PAXPREPR_CUST_TOP_TASK',
                      p_msg_count          => l_msg_count,
                      p_msg_data           => l_msg_data,
                      p_return_status      => l_return_status,
                      p_function_allowed   => l_function_allowed);
                    IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                    ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
                         RAISE FND_API.G_EXC_ERROR;
                    END IF;

                    IF l_function_allowed = 'N' THEN
                         pa_interface_utils_pub.map_new_amg_msg
                          ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
                           ,p_msg_attribute    => 'CHANGE'
                           ,p_resize_flag      => 'Y'
                           ,p_msg_context      => 'GENERAL'
                           ,p_attribute1       => ''
                           ,p_attribute2       => ''
                           ,p_attribute3       => ''
                           ,p_attribute4       => ''
                           ,p_attribute5       => '');
                         p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                         RAISE FND_API.G_EXC_ERROR;
                    END IF;
               ELSE
                    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                         pa_interface_utils_pub.map_new_amg_msg
                         ( p_old_message_code => 'PA_TOP_TASK_CUST_FLAG_INVALID'
                          ,p_msg_attribute    => 'NOCHANGE'--Changed to NOCHANGE for Bug- 4762153
                          ,p_resize_flag      => 'N'
                          ,p_msg_context      => 'PROJ'
                          ,p_attribute1       => l_project_rec.segment1
                          ,p_attribute2       => ''
                          ,p_attribute3       => ''
                          ,p_attribute4       => ''
                          ,p_attribute5       => '');
                    END IF;
                    RAISE  FND_API.G_EXC_ERROR;
               END IF;

               IF ( PA_BILLING_CORE.Update_Top_Task_Cust_Flag( l_project_id ) = 'Y' ) THEN
                    l_statement  := l_statement || ' enable_top_task_customer_flag = :enable_top_task_cust_flg ,';
                    l_enable_top_task_cust_flag := 'Y';
                    l_update_yes_flag := 'Y';
               ELSE--Added by rtarway for BUG 4168069
               --Add the error message in the pl/sql stack and raise exception
                      PA_UTILS.ADD_MESSAGE(
                      p_app_short_name => 'PA',
                      p_msg_name       =>'PA_NO_TOP_TASK_CUST_ALLOWED'
                      );
                    p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                    RAISE FND_API.G_EXC_ERROR;
               END IF;
               --Bug 3279981 Review
        END IF;
    END IF;

    IF (p_project_in.enable_top_task_inv_mth_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
       (p_project_in.enable_top_task_inv_mth_flag IS NOT NULL)
    THEN
        IF NVL(p_project_in.enable_top_task_inv_mth_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <>
           NVL(l_project_rec.enable_top_task_inv_mth_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        THEN
               --Bug 3279981 Review
               IF p_project_in.enable_top_task_inv_mth_flag IN ('Y','N') THEN
                    -- Function Security Check
                    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
                    ( p_api_version_number => p_api_version_number,
                      p_responsibility_id  => l_resp_id,
                      p_function_name      => 'PA_PAXPREPR_INV_MTH_TOP_TASK',
                      p_msg_count          => l_msg_count,
                      p_msg_data           => l_msg_data,
                      p_return_status      => l_return_status,
                      p_function_allowed   => l_function_allowed);
                    IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                    ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
                         RAISE FND_API.G_EXC_ERROR;
                    END IF;

                    IF l_function_allowed = 'N' THEN
                         pa_interface_utils_pub.map_new_amg_msg
                          ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
                           ,p_msg_attribute    => 'CHANGE'
                           ,p_resize_flag      => 'Y'
                           ,p_msg_context      => 'GENERAL'
                           ,p_attribute1       => ''
                           ,p_attribute2       => ''
                           ,p_attribute3       => ''
                           ,p_attribute4       => ''
                           ,p_attribute5       => '');
                         p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                         RAISE FND_API.G_EXC_ERROR;
                    END IF;
               ELSE
                    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                         pa_interface_utils_pub.map_new_amg_msg
                         ( p_old_message_code => 'PA_TT_INV_MTH_FLAG_INVALID'
                          ,p_msg_attribute    => 'CHANGE'
                          ,p_resize_flag      => 'N'
                          ,p_msg_context      => 'PROJ'
                          ,p_attribute1       => l_project_rec.segment1
                          ,p_attribute2       => ''
                          ,p_attribute3       => ''
                          ,p_attribute4       => ''
                          ,p_attribute5       => '');
                    END IF;
                    RAISE  FND_API.G_EXC_ERROR;
               END IF;

               IF ( PA_BILLING_CORE.Update_Top_Task_Inv_Mthd_Flag( l_project_id ) = 'Y'
               AND  l_project_rec.invoice_method <> 'COST' ) THEN
                    l_statement  := l_statement || ' enable_top_task_inv_mth_flag = :enable_top_task_inv_mth_flg ,';
                    l_enable_top_task_inv_mth_flag := 'Y';
                    l_update_yes_flag := 'Y';
               ELSE --Added for Bug 4193730
                      PA_UTILS.ADD_MESSAGE(
                      p_app_short_name => 'PA',
                      p_msg_name       => 'PA_INV_MTH_TT_NOT_SET'
                      );
                    p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                    RAISE FND_API.G_EXC_ERROR;
               END IF;
               --Bug 3279981 Review
        END IF;
    END IF;

    IF (p_project_in.projfunc_attr_for_ar_flag  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
       (p_project_in.projfunc_attr_for_ar_flag IS NOT NULL)
    THEN
        IF NVL(p_project_in.projfunc_attr_for_ar_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <>
           NVL(l_project_rec.projfunc_attr_for_ar_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        THEN
            l_statement  := l_statement || ' projfunc_attr_for_ar_flag = :projfunc_attr_for_ar_flg ,';
            l_projfunc_attr_for_ar_flag := 'Y';
            l_update_yes_flag := 'Y';
        END IF;
    END IF;

/* Added the following code for Bug 6248841 to update the cc_tax_task_id */

    IF (p_project_in.cc_tax_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND p_project_in.cc_tax_task_id IS NOT NULL)
    THEN

      BEGIN
        SELECT task_number INTO l_cc_tax_task_numb
          FROM pa_tasks
         WHERE project_id = l_project_id
           AND task_id = p_project_in.cc_tax_task_id;

             l_statement := l_statement || ' CC_TAX_TASK_ID = :prj_cc_tax_task_id,';
             l_b_cc_tax_task_id := 'Y';
             l_update_yes_flag := 'Y';
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
              IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                 THEN
                      pa_interface_utils_pub.map_new_amg_msg
                      ( p_old_message_code => 'PA_INVALID_TAX_TASK_ID'
                       ,p_msg_attribute    => 'CHANGE'
                       ,p_resize_flag      => 'Y'
                       ,p_msg_context      => 'PROJ'
                       ,p_attribute1       => l_project_rec.segment1
                       ,p_attribute2       => ''
                       ,p_attribute3       => ''
                       ,p_attribute4       => ''
                       ,p_attribute5       => '');
               END IF;
               RAISE  FND_API.G_EXC_ERROR;
      END;

    END IF;

-------------------- FP_M changes end (venkat) ----------------------------------------------

--Sunkalya federal changes bug#5511353


IF (p_project_in.date_eff_funds_flag <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
   (p_project_in.date_eff_funds_flag IS NOT NULL)
THEN
        IF NVL(p_project_in.date_eff_funds_flag, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <>
           NVL(l_project_rec.date_eff_funds_consumption, PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        THEN

			OPEN  cur_enable_funds_flag(l_project_id);
			FETCH cur_enable_funds_flag INTO l_enable_funds_flag;
			CLOSE cur_enable_funds_flag;

			OPEN  cur_rev_inv(l_project_id);
			FETCH cur_rev_inv INTO l_chk_rev_inv_flag;
			CLOSE cur_rev_inv;

			IF nvl(l_enable_funds_flag,'N')='N' AND p_project_in.date_eff_funds_flag ='Y' THEN

				PA_UTILS.ADD_MESSAGE(
							p_app_short_name => 'PA',
							p_msg_name       => 'PA_FUNDS_FLAG_CANT_ENABLED'
						    );
				p_project_out.return_status := FND_API.G_RET_STS_ERROR;
				RAISE FND_API.G_EXC_ERROR;
			END IF;

			IF nvl(l_chk_rev_inv_flag,'N')= 'Y' THEN

				PA_UTILS.ADD_MESSAGE(
							p_app_short_name => 'PA',
							p_msg_name       => 'PA_FUNDS_FLAG_NOT_UPDATBL'
						    );
				p_project_out.return_status := FND_API.G_RET_STS_ERROR;
				RAISE FND_API.G_EXC_ERROR;
			END IF;

			l_statement  := l_statement || ' date_eff_funds_consumption = :date_eff_funds_consumption ,';
			l_date_eff_funds_flag := 'Y';
			l_update_yes_flag := 'Y';
	END IF;
END IF;

--Sunkalya federal changes bug#5511353

/* 7508661 : EnC : Start */

IF (p_project_in.ar_rec_notify_flag <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
   (p_project_in.ar_rec_notify_flag IS NOT NULL)
THEN
    l_statement  := l_statement || ' ar_rec_notify_flag = :ar_rec_notify_flag ,';
    l_ar_rec_notify_flag := 'Y';
End If;

IF (p_project_in.auto_release_pwp_inv <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
   (p_project_in.auto_release_pwp_inv IS NOT NULL)
THEN
    l_statement  := l_statement || ' auto_release_pwp_inv = :auto_release_pwp_inv ,';
    l_auto_release_pwp_inv := 'Y';
End If;

/* 7508661 : EnC : End */

       IF l_update_yes_flag = 'Y'
       THEN
/* Code commented and added for the bug#1752494, starts here */
/*
                l_statement :=  l_statement ||
                                ' LAST_UPDATE_DATE = '||''''||
                                SYSDATE||''''||',';
*/
                l_statement := l_statement ||
                               ' LAST_UPDATE_DATE = SYSDATE'||',';

/* Code commented and added for the bug#1752494, ends here */
              l_statement :=   l_statement ||
--                             ' LAST_UPDATED_BY = '||G_USER_ID||','; --bug 2955326
                               ' LAST_UPDATED_BY = :g_usr_id ,';  --bug 2955326

              l_statement :=   l_statement ||
--                               ' LAST_UPDATE_LOGIN = '||G_LOGIN_ID; --2955326
                               ' LAST_UPDATE_LOGIN = :g_login_id'; --bug 2955326

            l_statement :=   l_statement ||
--                      ' WHERE PROJECT_ID = '|| TO_CHAR(l_project_id);
                        ' WHERE PROJECT_ID = :prj_id'; --bug 2955326

            l_cursor := dbms_sql.open_cursor;
            dbms_sql.parse(l_cursor, l_statement, dbms_sql.native);

--bug 2955326
                IF l_b_segment1_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':segment1', RTRIM(p_project_in.pa_project_number));
                END IF;

                IF l_b_proj_name_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':project_name', RTRIM(p_project_in.project_name));
                END IF;

                IF l_b_long_name_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':long_name', RTRIM(p_project_in.long_name));
                END IF;

                IF l_b_pm_proj_ref_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':pm_project_reference', RTRIM(p_project_in.pm_project_reference));
                END IF;

                IF l_b_co_org_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':carrying_out_org_id', TO_CHAR(p_project_in.carrying_out_organization_id));
                END IF;

                IF l_b_pub_sec_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':public_sector_flag', p_project_in.public_sector_flag);
                END IF;

                IF l_b_dist_rule_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':dist_rule', p_project_in.distribution_rule);
                --Bug 3279981 Review. Added two bind variables below
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':rev_acc_mth',
                                         substr(p_project_in.distribution_rule, 1, instr(p_project_in.distribution_rule,'/')-1)  );
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':inv_mth',
                                         substr(p_project_in.distribution_rule, instr(p_project_in.distribution_rule,'/')+1)  );
                END IF;

                IF l_b_desc_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':descrp', RTRIM(p_project_in.description));
                END IF;

                IF l_b_start_date_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':start_date', l_project_start_date);
                END IF;

                IF l_b_comp_date_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':comp_date', l_project_completion_date);
                END IF;

                IF l_b_early_sd_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':early_start_date', p_project_in.early_start_date);
                END IF;

                IF l_b_early_fd_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':early_finish_date', p_project_in.early_finish_date);
                END IF;

                IF l_b_late_sd_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':late_start_date', p_project_in.late_start_date);
                END IF;

                IF l_b_late_sd_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':late_start_date', p_project_in.late_start_date);
                END IF;

                IF l_b_late_fd_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':late_finish_date', p_project_in.late_finish_date);
                END IF;

                IF l_b_sch_sd_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':sch_start_date', p_project_in.scheduled_start_date);
                END IF;

                IF l_b_sch_fd_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':sch_finish_date', p_project_in.scheduled_finish_date);
                END IF;

                IF l_b_attr_cat_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr_cat', RTRIM(p_project_in.attribute_category));
                END IF;

                IF l_b_attr1_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr1', RTRIM(p_project_in.attribute1));
                END IF;

                IF l_b_attr2_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr2', RTRIM(p_project_in.attribute2));
                END IF;

                IF l_b_attr3_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr3', RTRIM(p_project_in.attribute3));
                END IF;

                IF l_b_attr4_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr4', RTRIM(p_project_in.attribute4));
                END IF;

                IF l_b_attr5_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr5', RTRIM(p_project_in.attribute5));
                END IF;

                IF l_b_attr6_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr6', RTRIM(p_project_in.attribute6));
                END IF;

                IF l_b_attr7_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr7', RTRIM(p_project_in.attribute7));
                END IF;

                IF l_b_attr8_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr8', RTRIM(p_project_in.attribute8));
                END IF;

                IF l_b_attr9_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr9', RTRIM(p_project_in.attribute9));
                END IF;

                IF l_b_attr10_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':attr10', RTRIM(p_project_in.attribute10));
                END IF;

                IF l_b_output_tx_code_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':output_tx_code', RTRIM(p_project_in.output_tax_code));
                END IF;

                IF l_b_ret_tx_code_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':ret_tx_code', RTRIM(p_project_in.retention_tax_code));
                END IF;

                IF l_b_proj_cur_code_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':proj_cur_code', RTRIM(p_project_in.project_currency_code));
                END IF;

                IF l_b_allow_x_chg_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':allow_x_chg_flag', RTRIM(p_project_in.allow_cross_charge_flag));
                END IF;

                IF l_b_proj_rt_date_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':proj_rt_date', p_project_in.project_rate_date);
                END IF;

                IF l_b_proj_rt_tp_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':proj_rt_tp', RTRIM(p_project_in.project_rate_type));
                END IF;

                IF l_cc_proc_lb_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':cc_proc_lb_flag', RTRIM(l_cc_process_labor_flag)); -- Changed to local variable for Bug 5395048
                END IF;

                IF l_b_lb_tp_sch_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':lb_tp_sch_id', p_project_in.labor_tp_schedule_id );
                END IF;

                IF l_b_lb_tp_fixed_dt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':lb_tp_fixed_dt', p_project_in.labor_tp_fixed_date);
                END IF;

                IF l_b_cc_proc_nl_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':cc_proc_nl_flag', RTRIM(l_cc_process_nl_flag)); -- Changed to local variable for Bug 5395048
                END IF;

                IF l_b_nl_tp_sch_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':nl_tp_sch_id', p_project_in.nl_tp_schedule_id);
                END IF;

                IF l_b_nl_tp_fx_dt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':nl_tp_fx_dt', p_project_in.nl_tp_fixed_date);
                END IF;

                IF l_b_role_list_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':role_list_id', p_project_in.role_list_id);
                END IF;

                IF l_b_work_type_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':work_type_id', p_project_in.work_type_id);
                END IF;

                IF l_b_cal_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':cal_id', p_project_in.calendar_id);
                END IF;

                IF l_b_loc_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':loc_id', p_project_in.location_id);
                END IF;

                IF l_b_prob_memb_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':prob_memb_id', p_project_in.probability_member_id);
                END IF;

                IF l_b_proj_value_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':proj_value', p_project_in.project_value);
                END IF;

                IF l_b_exp_apprv_dt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':exp_apprv_date', p_project_in.expected_approval_date);
                END IF;

                IF l_b_cst_jb_gp_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':cst_jb_gp_id', p_project_in.cost_job_group_id);
                END IF;

                IF l_b_bill_jb_gp_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':bill_jb_gp_id', p_project_in.bill_job_group_id);
                END IF;

                IF l_b_emp_bill_rt_sch_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':emp_bill_rt_sch_id', p_project_in.emp_bill_rate_schedule_id);
                END IF;

                IF l_b_jb_bill_rt_sch_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':jb_bill_rt_sch_id', p_project_in.job_bill_rate_schedule_id);
                END IF;

                IF l_b_comp_mtch_wt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':comp_match_wt', p_project_in.competence_match_wt);
                END IF;

                IF l_b_avail_mtch_wt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':avail_mtch_wt', p_project_in.availability_match_wt);
                END IF;

                IF l_b_jb_lvl_mt_wt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':jb_lvl_mt_wt', p_project_in.job_level_match_wt);
                END IF;

                IF l_b_search_min_avail_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':srch_min_avail', p_project_in.search_min_availability);
                END IF;

                IF l_b_srch_org_hier_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':srch_org_hier_id', p_project_in.search_org_hier_id);
                END IF;

                IF l_b_srch_st_org_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':srch_org_hier_id', p_project_in.search_starting_org_id);
                END IF;

                IF l_b_min_can_sc_req_for_nom = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':min_can_sc_req_for_nom', p_project_in.min_cand_score_reqd_for_nom);
                END IF;

/* Commented the code for bug 4630836:
                IF l_b_nn_lb_std_bl_rt_sch_id_f = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':n_lb_std_bill_rt_sch_id', p_project_in.non_lab_std_bill_rt_sch_id);
                END IF; */

                IF l_b_proj_bil_xch_rt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':proj_bil_xch_rt', p_project_in.project_bil_exchange_rate);
                END IF;

                IF l_b_pjfnc_bil_xch_rt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':pjfnc_bil_xch_rt', p_project_in.projfunc_bil_exchange_rate);
                END IF;

                IF l_b_fnding_xch_rt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':fnding_xch_rt', p_project_in.funding_exchange_rate);
                END IF;

                IF l_b_enable_auto_srch_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':enable_auto_srch', p_project_in.enable_automated_search);
                END IF;

                IF l_b_srch_cntry_code_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':srch_cntry_code', RTRIM(p_project_in.search_country_code));
                END IF;

                IF l_b_invproc_crncy_tp_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':invproc_currency_type', RTRIM(p_project_in.invproc_currency_type));
                END IF;

                IF l_b_revproc_crncy_cd_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':revproc_currency_code', RTRIM(p_project_in.revproc_currency_code));
                END IF;

                IF l_b_prj_bil_rt_dt_code_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':proj_bil_rate_date_code', RTRIM(p_project_in.project_bil_rate_date_code));
                END IF;

                IF l_b_proj_bil_rt_tp_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':proj_bil_rt_type', RTRIM(p_project_in.project_bil_rate_type));
                END IF;

                IF l_b_prjfnc_crncy_code_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':prjfnc_currency_code', RTRIM(p_project_in.projfunc_currency_code));
                END IF;

                IF l_b_prjfnc_bil_rt_dt_cd_f = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':prjfnc_bil_rt_dt_code', RTRIM(p_project_in.projfunc_bil_rate_date_code));
                END IF;

                IF l_b_prjfnc_bil_rt_tp_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':prjfnc_bil_rate_type', RTRIM(p_project_in.projfunc_bil_rate_type));
                END IF;

                IF l_b_fndng_rt_dt_cd_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':fnding_rate_date_code', RTRIM(p_project_in.funding_rate_date_code));
                END IF;

                IF l_b_fnding_rt_type_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':fnding_rate_type', RTRIM(p_project_in.funding_rate_type));
                END IF;

                IF l_b_bsln_fnding_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':bsln_fnding_flag', RTRIM(p_project_in.baseline_funding_flag));
                END IF;

                IF l_b_prjfnc_cst_rt_tp_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':projfnc_cost_rate_type', RTRIM(p_project_in.projfunc_cost_rate_type));
                END IF;

                IF l_b_inv_bill_txn_cur_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':inv_by_bil_txn_cur_flag', RTRIM(p_project_in.inv_by_bill_trans_curr_flag));
                END IF;

                IF l_b_multi_crncy_bil_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':multi_crncy_bil_flag', RTRIM(p_project_in.multi_currency_billing_flag));
                END IF;

                IF l_b_prj_bil_rt_dt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':prj_bil_rt_date', p_project_in.project_bil_rate_date);
                END IF;

                IF l_b_prjfnc_bil_rt_dt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':prjfnc_bil_rt_date', p_project_in.projfunc_bil_rate_date);
                END IF;

                IF l_b_fnding_rt_dt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':fnding_rt_date', p_project_in.funding_rate_date);
                END IF;

                IF l_b_prjfnc_cst_rt_dt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':prjfnc_cst_rt_date', p_project_in.projfunc_cost_rate_date);
                END IF;

                IF l_b_asgn_prec_tsk_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':asgn_prec_tsk_flg', RTRIM(p_project_in.assign_precedes_task));
                END IF;

                IF l_b_splt_cst_fm_wp_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':splt_cst_fm_wp_flag', RTRIM(p_project_in.split_cost_from_workplan_flag));
                END IF;

                IF l_b_splt_cst_fm_bill_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':splt_cst_fm_bill_flag', RTRIM(p_project_in.split_cost_from_bill_flag));
                END IF;

                IF l_b_adv_act_set_id_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':adv_act_set_id', p_project_in.adv_action_set_id);
                END IF;

                IF l_b_st_adv_act_set_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':st_adv_act_set_flag', RTRIM(p_project_in.start_adv_action_set_flag));
                END IF;

                IF l_b_pri_code_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':pri_code', RTRIM(p_project_in.priority_code));
                END IF;

                IF l_b_retn_bil_inv_fmt_id_flg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':retn_bil_inv_fmt_id', TO_CHAR(p_project_in.retn_billing_inv_format_id));
                END IF;

                IF l_b_retn_acnt_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':retn_acnt_flag', RTRIM(p_project_in.retn_accounting_flag));
                END IF;

                IF l_b_reval_fndng_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':reval_fndng_flg', RTRIM(p_project_in.revaluate_funding_flag));
                END IF;

                IF l_b_sec_lvl_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':sec_lvl', RTRIM(p_project_in.security_level));
                END IF;

                IF l_b_lbr_disc_rsn_code_flg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':lbr_disc_rsn_code', RTRIM(p_project_in.labor_disc_reason_code));
                END IF;

                IF l_b_nn_lbr_disc_rsn_cd_flg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':nn_lbr_disc_rsn_cd', RTRIM(p_project_in.non_labor_disc_reason_code));
                END IF;

                IF l_b_inc_gn_los_flag = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':inc_gn_los_flg', RTRIM(p_project_in.include_gains_losses_flag));
                END IF;


                IF l_b_lb_sch_tp_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':lb_sch_type', RTRIM(p_project_in.labor_sch_type));
                END IF;

                IF l_b_nn_lb_sch_tp_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':nn_lb_sch_tp', RTRIM(p_project_in.non_labor_sch_type));
                END IF;

                IF l_b_emp_bill_rt_sch_id_fg2 = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':emp_bill_rt_sch_id2', p_project_in.emp_bill_rate_schedule_id);
                END IF;

                IF l_b_jb_bill_rt_sch_id_fg2 = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':jb_bill_rt_sch_id2', p_project_in.job_bill_rate_schedule_id);
                END IF;

                IF l_b_lb_sch_fx_dt_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':lb_sch_fx_dt', p_project_in.labor_schedule_fixed_date);
                END IF;

                IF l_b_lb_sch_dsct_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':lb_sch_dsct', p_project_in.labor_schedule_discount);
                END IF;

                IF l_b_lb_disc_rn_cd_fg2 = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':lb_disc_rn_cd', RTRIM(p_project_in.labor_disc_reason_code));
                END IF;

                IF l_b_rv_ind_rt_sch_id_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':rv_ind_rt_sch_id', p_project_in.REV_IND_RATE_SCH_ID);
                END IF;

                IF l_b_inv_ind_rt_sch_id_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':inv_ind_rt_sch_id', p_project_in.INV_IND_RATE_SCH_ID);
                END IF;

                IF l_b_ind_sch_fx_dt_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':rev_ind_sch_fx_dt', p_project_in.rev_ind_sch_fixed_date);
                END IF;

                IF l_b_inv_ind_sch_fx_dt_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':inv_ind_sch_fx_dt', p_project_in.inv_ind_sch_fixed_date);
                END IF;

                IF l_b_nn_lb_bill_rt_org_id_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':nn_lb_bill_rt_org_id', p_project_in.non_labor_bill_rate_org_id);
                END IF;

                IF l_b_n_lb_st_bl_rt_sc_id_fg2 = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':nn_lab_std_bill_rt_sch_id', p_project_in.non_lab_std_bill_rt_sch_id);
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':nn_lb_std_bill_rt_sch', RTRIM(l_std_bill_rate_schedule));
                END IF;

                IF l_b_nn_lb_sch_fx_dt_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':nn_lb_sch_fx_dt', p_project_in.non_labor_schedule_fixed_date);
                END IF;

                IF l_b_nn_lb_sch_dst_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':nn_lb_sch_dst', p_project_in.non_labor_schedule_discount);
                END IF;

                IF l_b_n_lb_disc_rsn_cd_fg2  = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':n_lb_dis_rn_cd', RTRIM(p_project_in.non_labor_disc_reason_code));
                END IF;

                IF l_b_as_alloc_mth_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':as_alloc_mth', RTRIM(p_project_in.asset_allocation_method));
                END IF;

                IF l_b_cp_evt_proc_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':cp_evt_proc', RTRIM(p_project_in.capital_event_processing));
                END IF;

                IF l_b_cint_rt_sch_id_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':cint_rt_sch', p_project_in.cint_rate_sch_id);
                END IF;

                IF l_b_cint_elg_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':cint_elg_fg', RTRIM(p_project_in.cint_eligible_flag));
                END IF;

                IF l_b_cint_stp_dt_fg = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':cint_stp_dt', p_project_in.cint_stop_date);
                END IF;

                /* Added for bug 6248841 */
                IF l_b_cc_tax_task_id  = 'Y' THEN
                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':prj_cc_tax_task_id', p_project_in.cc_tax_task_id);
                END IF;

                DBMS_SQL.BIND_VARIABLE(l_cursor, ':g_usr_id', G_USER_ID);
                DBMS_SQL.BIND_VARIABLE(l_cursor, ':g_login_id', G_LOGIN_ID);
                DBMS_SQL.BIND_VARIABLE(l_cursor, ':prj_id', l_project_id);

--end bug 2955326

-- FP_M changes begin (venkat) 3

-- COMMENT BEGIN --
-------------- Begin Comment : Diable for now as the col sys_program_flag not in pa_projects -------
--                IF l_sys_program_flag = 'Y' THEN
--                  DBMS_SQL.BIND_VARIABLE(l_cursor, ':sys_program_flg', RTRIM(p_project_in.sys_program_flag));
--                END IF;
-------------- end Comment : Diable for now as the col sys_program_flag not in pa_projects ---------
-- COMMENT END --

	-- Bug # 5072032.

        IF l_b_sys_program_flag_fg = 'Y' THEN
        	DBMS_SQL.BIND_VARIABLE(l_cursor, ':sys_program_flag', RTRIM(p_project_in.sys_program_flag));
        END IF;

        IF l_b_allow_multi_prog_rollup_fg = 'Y' THEN
        	DBMS_SQL.BIND_VARIABLE(l_cursor, ':allow_multi_program_rollup', RTRIM(p_project_in.allow_multi_program_rollup));
        END IF;

	-- End of Bug # 5072032.


        IF l_enable_top_task_cust_flag = 'Y' THEN
          DBMS_SQL.BIND_VARIABLE(l_cursor, ':enable_top_task_cust_flg', RTRIM(p_project_in.enable_top_task_customer_flag));
        END IF;

        IF l_enable_top_task_inv_mth_flag = 'Y' THEN
          DBMS_SQL.BIND_VARIABLE(l_cursor, ':enable_top_task_inv_mth_flg', RTRIM(p_project_in.enable_top_task_inv_mth_flag));
        END IF;

        IF l_projfunc_attr_for_ar_flag = 'Y' THEN
          DBMS_SQL.BIND_VARIABLE(l_cursor, ':projfunc_attr_for_ar_flg', RTRIM(p_project_in.projfunc_attr_for_ar_flag));
        END IF;

-- FP_M changes end (venkat)

--sunkalya federal bug#5511353
	IF l_date_eff_funds_flag = 'Y' THEN
          DBMS_SQL.BIND_VARIABLE(l_cursor, ':date_eff_funds_consumption', RTRIM(p_project_in.date_eff_funds_flag));
        END IF;

--sunkalya federal bug#5511353

    /* 7508661 : EnC : Start */
    IF l_ar_rec_notify_flag = 'Y' THEN
          DBMS_SQL.BIND_VARIABLE(l_cursor, ':ar_rec_notify_flag', RTRIM(p_project_in.ar_rec_notify_flag));
    END IF;

    IF l_auto_release_pwp_inv = 'Y' THEN
          DBMS_SQL.BIND_VARIABLE(l_cursor, ':auto_release_pwp_inv', RTRIM(p_project_in.auto_release_pwp_inv));
    END IF;
    /* 7508661 : EnC : End */

            l_rows   := dbms_sql.execute(l_cursor);

            IF dbms_sql.is_open (l_cursor)
            THEN
                 dbms_sql.close_cursor (l_cursor);
            END IF;

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'Done with updating project level data...';
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;

                -- anlee
                -- Added for intermedia search
                if l_ctx_update_flag = 'Y' then
                  PA_PROJECT_CTX_SEARCH_PVT.UPDATE_ROW (
                   p_project_id           => l_project_id
                  ,p_template_flag        => l_project_rec.template_flag
                  ,p_project_name         => l_ctx_proj_name
                  ,p_project_number       => l_ctx_proj_number
                  ,p_project_long_name    => l_ctx_long_name
                  ,p_project_description  => l_ctx_desc
                  ,x_return_status        => l_return_status );

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After calling PA_PROJECT_CTX_SEARCH_PVT.UPDATE_ROW l_return_status='||l_return_status;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


                  IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

                  ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
                  END IF;

                end if;
                -- End of changes
       END IF;
-- Modify opportunity value attributes with values entered in quick entry
--Added By Aditi For Bug 4473105

   OPEN l_get_details_for_opp_csr(l_project_id);
   FETCH l_get_details_for_opp_csr INTO l_expected_approval_date, l_projfunc_currency_code, l_project_currency_code;
   CLOSE l_get_details_for_opp_csr;

   OPEN l_get_details_for_opp_csr2(l_project_id);
   FETCH l_get_details_for_opp_csr2 INTO l_opportunity_value, l_opp_value_currency_code;
   CLOSE l_get_details_for_opp_csr2;

If (p_project_in.project_value IS NOT NULL) AND (p_project_in.project_value <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
Then
l_opportunity_value := p_project_in.project_value;
End if;
If (p_project_in.opp_value_currency_code) IS NOT NULL AND (p_project_in.opp_value_currency_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
Then
l_opp_value_currency_code := p_project_in.opp_value_currency_code;
End if;
If (p_project_in.expected_approval_date IS NOT NULL) AND (p_project_in.expected_approval_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
Then
l_expected_approval_date := p_project_in.expected_approval_date;
End if;

  PA_OPPORTUNITY_MGT_PVT.MODIFY_PROJECT_ATTRIBUTES
     ( p_project_id              => l_project_id
      ,p_opportunity_value       => l_opportunity_value
      ,p_opp_value_currency_code => l_opp_value_currency_code
      ,p_expected_approval_date  => l_expected_approval_date
      ,x_return_status           => l_return_status
      ,x_msg_count               => l_msg_count
      ,x_msg_data                => l_msg_data);

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After calling PA_OPPORTUNITY_MGT_PVT.MODIFY_PROJECT_ATTRIBUTES l_return_status='||l_return_status;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


     if l_return_status <> 'S' then
          PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA',
                                p_msg_name => 'PA_ERR_MOD_PROJ_OPP_ATTR');
           RAISE FND_API.G_EXC_ERROR;
     end if;
-- End of code changes for bug  4473105


--Bug 3279981 Review :
--Perform the various updates for change of revenue accrual method, invoice method, top task invoice method flag
--and also for populating distribution rule's invoice method as 'WORK' internally when top task invoice method flag
--is enabled
DECLARE
     --The foll. three variables will hold the valid values for revenue accrual method , invoice method
     --and invoice method at top task flag of the project. They will be refreshed with the new values in
     --case new values have been passed
     l_proj_rev_acc_method        VARCHAR2(30) := l_project_rec.revenue_accrual_method;
     l_proj_invoice_method        VARCHAR2(30) := l_project_rec.invoice_method;
     l_proj_top_task_inv_mth_flag VARCHAR2(1)  := l_project_rec.enable_top_task_inv_mth_flag;
     l_return_status              VARCHAR2(10);
     l_msg_count                  NUMBER := 0;
     l_msg_data                   VARCHAR2(2000);
BEGIN
     IF  p_project_in.enable_top_task_inv_mth_flag <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND p_project_in.enable_top_task_inv_mth_flag IS NOT NULL
     AND p_project_in.enable_top_task_inv_mth_flag <> l_project_rec.enable_top_task_inv_mth_flag THEN
          l_proj_top_task_inv_mth_flag := p_project_in.enable_top_task_inv_mth_flag;
     END IF;

     --The revenue accrual method for the project has changed. Therefore, call the api to default the new revenue accrual
     --method to the tasks
     IF  nvl(p_project_in.distribution_rule,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND upper( substr(p_project_in.distribution_rule, 1, instr(p_project_in.distribution_rule,'/')-1) )
      <> upper( l_project_rec.revenue_accrual_method ) THEN

          l_proj_rev_acc_method := upper( substr(p_project_in.distribution_rule, 1, instr(p_project_in.distribution_rule,'/')-1) );
          pa_top_task_cust_invoice_pvt.Set_Rev_Acc_At_Top_Task( P_API_VERSION            => 1.0
                                                              , P_INIT_MSG_LIST          => 'T'
                                                              , P_COMMIT                 => 'F'
                                                              , P_VALIDATE_ONLY          => 'F'
                                                              , P_VALIDATION_LEVEL       => 100
                                                              , P_DEBUG_MODE             => 'N'
                                                              , p_calling_module         => 'AMG'
                                                              , p_project_id             => l_project_id
                                                              , p_rev_acc                => l_proj_rev_acc_method
                                                              , x_return_status          => l_return_status
                                                              , x_msg_count              => l_msg_count
                                                              , x_msg_data               => l_msg_data );
     END IF;

     --The invoice method for the project has changed. Call the api to update the invoice method for the tasks only if
     --invoice method at top task is unchecked
     IF  nvl(p_project_in.distribution_rule,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     AND upper( substr(p_project_in.distribution_rule,instr(p_project_in.distribution_rule,'/')+1) )
      <> upper( l_project_rec.invoice_method ) THEN

          l_proj_invoice_method := upper( substr(p_project_in.distribution_rule,instr(p_project_in.distribution_rule,'/')+1) );
          IF 'N' = l_proj_top_task_inv_mth_flag THEN
               pa_top_task_cust_invoice_pvt.Set_Inv_Mth_At_Top_Task( P_API_VERSION            => 1.0
                                                                   , P_INIT_MSG_LIST          => 'T'
                                                                   , P_COMMIT                 => 'F'
                                                                   , P_VALIDATE_ONLY          => 'F'
                                                                   , P_VALIDATION_LEVEL       => 100
                                                                   , P_DEBUG_MODE             => 'N'
                                                                   , p_calling_module         => 'AMG'
                                                                   , p_project_id             => l_project_id
                                                                   , p_inv_mth                => l_proj_invoice_method
                                                                   , x_return_status          => l_return_status
                                                                   , x_msg_count              => l_msg_count
                                                                   , x_msg_data               => l_msg_data );
          END IF;

     END IF;

     --IF the invoice method at top task flag has changed from 'Y' to 'N' :
     --Update the distribution rule with the correct invoice method, if no distribution rule has been passed
     --Call the api to default the invoice method to the tasks
     IF 'Y' = l_enable_top_task_inv_mth_flag AND 'N' = p_project_in.enable_top_task_inv_mth_flag THEN
          IF nvl(p_project_in.distribution_rule,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
               UPDATE pa_projects_all
               SET    distribution_rule =
               substr(distribution_rule,1,instr(distribution_rule,'/')-1)||'/'||l_proj_invoice_method
               WHERE  project_id = l_project_id;
          END IF;
          pa_top_task_cust_invoice_pvt.Set_Inv_Mth_At_Top_Task( P_API_VERSION            => 1.0
                                                              , P_INIT_MSG_LIST          => 'T'
                                                              , P_COMMIT                 => 'F'
                                                              , P_VALIDATE_ONLY          => 'F'
                                                              , P_VALIDATION_LEVEL       => 100
                                                              , P_DEBUG_MODE             => 'N'
                                                              , p_calling_module         => 'AMG'
                                                              , p_project_id             => l_project_id
                                                              , p_inv_mth                => l_proj_invoice_method
                                                              , x_return_status          => l_return_status
                                                              , x_msg_count              => l_msg_count
                                                              , x_msg_data               => l_msg_data );
     --IF the invoice method at top task flag has changed from 'N' to 'Y' :
     --Call the api to set the top task funding level
     ELSIF 'Y' = l_enable_top_task_inv_mth_flag AND 'Y' = p_project_in.enable_top_task_inv_mth_flag THEN
          pa_top_task_cust_invoice_pvt.set_top_task_funding_level(  P_API_VERSION            => 1.0
                                                                  , P_INIT_MSG_LIST          => 'T'
                                                                  , P_COMMIT                 => 'F'
                                                                  , P_VALIDATE_ONLY          => 'F'
                                                                  , P_VALIDATION_LEVEL       => 100
                                                                  , P_DEBUG_MODE             => 'N'
                                                                  , p_calling_module         => 'AMG'
                                                                  , p_project_id             => l_project_id
                                                                  , x_return_status          => l_return_status
                                                                  , x_msg_count              => l_msg_count
                                                                  , x_msg_data               => l_msg_data );

     END IF;

     --IF the invoice method at top task flag is checked,
     --invoice method of the distribution rule must internally be populated as WORK
     IF 'Y' = l_proj_top_task_inv_mth_flag THEN
          UPDATE pa_projects_all
          SET    distribution_rule =
          substr(distribution_rule,1,instr(distribution_rule,'/')-1)||'/'||'WORK'
          WHERE  project_id = l_project_id;
     END IF;
END;
--Bug 3279981 Review

--Project Structures
--dbms_output.put_line ('After executing dynamic sql for updating project ');
--Project Structures
-- Bug 3548473 : 3627124 If the parameter p_pass_entire_structure = 'N' and
-- structure_type = 'WORKPLAN' throw an error. For workplan structure, user
-- needs to pass the all tasks in the structure in proper order.
-- Same holds true for SHARED structure also.

--dbms_output.put_line ('p_pass_entire_structure : ' || p_pass_entire_structure);
--dbms_output.put_line ('l_structure_type : ' || l_structure_type);
--dbms_output.put_line ('G_IS_WP_SEPARATE_FROM_FN : ' || G_IS_WP_SEPARATE_FROM_FN);

-- Bug # 5077599.

if (p_update_mode = 'PA_UPD_TASK_ATTR'
    and p_pass_entire_structure = 'N'
    and (( G_WP_STR_EXISTS = 'Y' AND G_IS_WP_SEPARATE_FROM_FN = 'N' )
          OR ( G_WP_STR_EXISTS = 'Y' AND G_IS_WP_SEPARATE_FROM_FN = 'Y' AND  p_structure_in.structure_type = 'WORKPLAN' ))) then

	i:= p_tasks_in.first;

	while i is not null
	loop

	if (p_tasks_in(i).pa_task_id is null or p_tasks_in(i).pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) then

        	IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        	THEN
            		pa_interface_utils_pub.map_new_amg_msg
            		(p_old_message_code => 'PA_TASK_ID_IS_MISS'-- new message for bug 3548473: 3627124
            		,p_msg_attribute    => 'CHANGE'
            		,p_resize_flag      => 'N'
            		,p_msg_context      => 'PROJ'
            		,p_attribute1       => l_project_rec.segment1
            		,p_attribute2       => ''
            		,p_attribute3       => ''
            		,p_attribute4       => ''
            		,p_attribute5       => '');
        	END IF;

		p_multiple_task_msg := 'F';
        	RAISE FND_API.G_EXC_ERROR;
    	end if;

	i := p_tasks_in.next(i);
	end loop;

end if;

-- End of Bug # 5077599.

-- 3858251 Added code to check, whether tasks are passed or not

i:= p_tasks_in.first;

IF p_tasks_in.exists(i) THEN
    -- 3858251 if tasks are passed to update_project api , then and then only below
    -- validation should get called
    -- Bug # 5077599.
    /*
    IF  (p_pass_entire_structure = 'N' AND l_structure_type = 'WORKPLAN') OR  -- bhaskar
        (p_pass_entire_structure = 'N' AND G_IS_WP_SEPARATE_FROM_FN = 'N') THEN
    */

    IF  -- Bug # 5077599.
	(p_pass_entire_structure = 'N' AND l_structure_type = 'WORKPLAN' and p_update_mode <> 'PA_UPD_TASK_ATTR') OR  -- bhaskar
        (p_pass_entire_structure = 'N' AND G_IS_WP_SEPARATE_FROM_FN = 'N' and p_update_mode <> 'PA_UPD_TASK_ATTR') THEN
	-- Bug # 5077599.
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_TASK_STRUCT_NOT_ORDRD'-- new message for bug 3548473: 3627124
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'PROJ'
            ,p_attribute1       => l_project_rec.segment1
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
        END IF;

        p_multiple_task_msg := 'F';
        RAISE FND_API.G_EXC_ERROR;
    END IF; -- bug 3548473 : 3627124
END IF;

-- 3858251 end

IF p_pass_entire_structure = 'N' THEN
  l_update_task_structure := 'Y';
ELSE
  l_update_task_structure := 'N';
END IF; -- bug 3548473 : 3627124

--dbms_output.put_line ('l_update_task_structure : ' || l_update_task_structure);
--dbms_output.put_line ('before calling  PA_PROJ_TASK_STRUC_PUB.create_structure ');
--Creating a WORKPLAN structure
  IF p_structure_in.structure_type = 'WORKPLAN'      --This should only be done for a WORKPLAN structure
  THEN
     PA_PROJ_TASK_STRUC_PUB.create_structure(
           p_project_id             => l_project_id
          ,p_structure_type         =>l_structure_type --BUg 3548473 3627124 aditi
          ,p_structure_version_name => p_structure_in.structure_version_name
          ,p_description            => p_structure_in.description
          ,x_structure_id           => l_structure_id
          ,x_structure_version_id   => l_structure_version_id
          ,x_msg_count              => l_msg_count
          ,x_msg_data               => l_msg_data
          ,x_return_status          => l_return_status
        );

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After calling PA_PROJ_TASK_STRUC_PUB.create_structure l_return_status='||l_return_status;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          RAISE FND_API.G_EXC_ERROR;
        END IF;

  END IF; -- p_structure_in.structure_type = 'WORKPLAN'

  IF ( ( ( p_structure_in.structure_version_name IS NOT NULL AND
           p_structure_in.structure_version_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) OR
         ( p_structure_in.description IS NOT NULL AND
           p_structure_in.description <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) ) AND
       ( p_structure_in.structure_version_id IS NOT NULL AND
         p_structure_in.structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) ) OR
             --updating structure version
     ( ( p_structure_in.structure_version_name IS NOT NULL AND
         p_structure_in.structure_version_name <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) AND
       ( p_structure_in.structure_version_id IS NULL OR
         p_structure_in.structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) )
             --creating structure version
  THEN
      IF l_structure_version_id IS NULL
         AND NVL( l_project_rec.template_flag,'N') = 'N'
         AND NVL( PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED(l_project_id), 'N' ) = 'Y'
         AND p_pm_product_code <> 'WORKPLAN'          -- Bug 2871353
      THEN
          PA_PROJ_TASK_STRUC_PUB.create_update_struct_ver(
             p_project_id             => l_project_id
            ,p_structure_type         => p_structure_in.structure_type     --no need to change this actual parameter for bug 2738747. The API takes care of financial stuff.
            ,p_structure_version_name => p_structure_in.structure_version_name
            ,p_structure_version_id   => p_structure_in.structure_version_id
            ,p_description            => p_structure_in.description
            ,x_structure_version_id   => l_structure_version_id
            ,x_msg_count              => l_msg_count
            ,x_msg_data               => l_msg_data
            ,x_return_status          => l_return_status
          );

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After calling  PA_PROJ_TASK_STRUC_PUB.create_update_struct_ver l_return_status='||l_return_status;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          RAISE FND_API.G_EXC_ERROR;
        END IF;
       END IF; --<<structure_version_id is null >>

   END IF;
   --Project Connect 4.0
   IF l_structure_version_id IS NOT NULL
   AND p_pm_product_code <> 'WORKPLAN'       -- Bug 2871353
   THEN
   g_struc_out_tbl(1).structure_type := p_structure_in.structure_type; --<Bug#2862350>
       --g_struc_out_tbl(1).structure_type := 'WORKPLAN';
       g_struc_out_tbl(1).structure_version_id := l_structure_version_id;

       -- Bug 3075609.
       l_create_task_versions_only := 'Y';

       --Call create_tasks_versions_only api to create new task versions for the
       --existing tasks and add them to the new structure version.
       PA_PROJ_TASK_STRUC_PUB.create_tasks_versions_only(
              p_calling_module       => 'AMG'
             --,p_structure_type       => p_structure_in.structure_type   --bug 2738747
             ,p_structure_type       => l_structure_type     --bug 2738747
             ,p_project_id           => l_project_id
             ,p_structure_version_id => l_structure_version_id
             ,p_pm_product_code      => l_pm_product_code
             ,p_tasks_in       => p_tasks_in
             ,x_msg_count            => l_msg_count
             ,x_msg_data             => l_msg_data
             ,x_return_status        => l_return_status );

  IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After calling  PA_PROJ_TASK_STRUC_PUB.create_tasks_versions_only l_return_status='||l_return_status;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          RAISE FND_API.G_EXC_ERROR;
        END IF;
   END IF;
   --Project Connect 4.0


   -- For bug2931183 Adding to keep a track of structure version id to be updated
  IF l_debug_mode = 'Y' THEN
             pa_debug.g_err_stage := ' the value of l_structure_type' || l_structure_type;
             pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
   END IF;

   IF l_structure_version_id IS NULL
   THEN
        IF (p_structure_in.structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                  p_structure_in.structure_version_id IS NULL)  AND (l_structure_type <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_structure_type IS NOT NULL)
         THEN
              IF l_structure_type = 'FINANCIAL'
              THEN
                      OPEN cur_struc_ver_fin(l_project_id,'FINANCIAL');
                      FETCH cur_struc_ver_fin INTO l_update_structure_version_id;
                      IF cur_struc_ver_fin%NOTFOUND
                       THEN
                            OPEN cur_struc_ver_wp(l_project_id,'FINANCIAL');
                            FETCH cur_struc_ver_wp INTO l_update_structure_version_id;
                            CLOSE cur_struc_ver_wp;
                      END IF;
                      CLOSE cur_struc_ver_fin;
              END IF;

        ELSE
             l_update_structure_version_id := p_structure_in.structure_version_id;
        END IF;
   ELSE
        l_update_structure_version_id := l_structure_version_id;
   END IF;

  IF l_debug_mode = 'Y' THEN
             pa_debug.g_err_stage := ' the value of l_update_structure_version_id' || l_update_structure_version_id;
             pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
  END IF;


--Project Structures

-- Since we maybe adding new tasks, need to pass the project record to
-- the Add_task_round_one api. Project may have been updated in the previous lines.
-- Hence need to fetch the updated record once again

    OPEN l_project_csr (l_project_id);
    FETCH l_project_csr INTO l_project_rec;
    CLOSE l_project_csr;


pa_project_check_pvt.G_task_num_updated_index_tbl.delete;
pa_project_check_pvt.G_index_counter                := 0;
l_deferred_new_tasks_tbl.delete;
l_deferred_tasks_count := 0;
i := p_tasks_in.first;
   --project structure
--IF  p_structure_in.structure_type = 'FINANCIAL'   --bug 2738747
IF  l_structure_type = 'FINANCIAL'                  --bug 2738747
   --project structure
THEN

IF p_tasks_in.exists(i)
THEN
   G_ParChildTsk_chks_deferred := 'Y';
 -- initialize the special global tables and counter set up
 -- to handle task number changes

     l_is_wp_seperate_from_fn := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id ); -- Added for Bug#3451073
     WHILE i IS NOT NULL LOOP

        l_task_id := NULL;

        l_tasks_out(i).return_status    := FND_API.G_RET_STS_SUCCESS;

        IF (p_tasks_in(i).pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
             OR  p_tasks_in(i).pa_task_id IS NULL )
        THEN
            IF  p_tasks_in(i).pm_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
               OR p_tasks_in(i).pm_task_reference IS NULL
            THEN
                 IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                 THEN
                    pa_interface_utils_pub.map_new_amg_msg
                      ( p_old_message_code => 'PA_TASK_REF_AND_ID_MISSING'
                       ,p_msg_attribute    => 'CHANGE'
                       ,p_resize_flag      => 'N'
                       ,p_msg_context      => 'PROJ'
                       ,p_attribute1       => l_project_rec.segment1
                       ,p_attribute2       => ''
                       ,p_attribute3       => ''
                       ,p_attribute4       => ''
                       ,p_attribute5       => '');
                END IF;

                l_tasks_out(i).return_status :=  FND_API.G_RET_STS_ERROR ;
                p_multiple_task_msg := 'F';
--              RAISE FND_API.G_EXC_ERROR;
           ELSE
               OPEN l_get_task_csr
                    (l_project_id,p_tasks_in(i).pm_task_reference);
               FETCH l_get_task_csr INTO l_task_id;
               CLOSE l_get_task_csr;
            END IF;

        ELSE  --if task_id is given, check it's validity
                --pambu1('Check Task ID validity');
                -- Bug 5262740 Changed pa_project_pvt.convert_pm_taskref_to_id call to
                -- pa_project_pvt.convert_pm_taskref_to_id_all
              pa_project_pvt.convert_pm_taskref_to_id_all
            (p_pa_project_id   => l_project_id
          ,p_structure_type => l_structure_type
          ,p_pa_task_id    => p_tasks_in(i).pa_task_id
          ,p_pm_task_reference  => NULL
          ,p_out_task_id    => l_task_id
          ,p_return_status  => l_return_status );
       IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
          l_tasks_out(i).return_status    := l_return_status;
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          l_tasks_out(i).return_status    := l_return_status;
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
        END IF;
        END IF;

   l_amg_task_number := pa_interface_utils_pub.get_task_number_amg
    (p_task_number=> p_tasks_in(i).task_name
    ,p_task_reference => p_tasks_in(i).pm_task_reference
    ,p_task_id => l_task_id);
        IF l_task_id IS NULL
        THEN

    -- Actions performed using the APIs would be subject to
    -- function security. If the responsibility does not allow
    -- such functions to be executed, the API should not proceed further
    -- since the user does not have access to such functions

    -- Function security procedure check whether user have the
    -- privilege to add task or not

        --Bug 2471668: we do not need to assign project id to the global variable as it is already done
        --above before checking for update_project function.

    --BUG 4413568 DHI ER , rtarway, if p_update_mode is PA_UPD_TASK_ATTR, WBS/FBS hierarchy can not be changed.
       --if l_task_id is null, means this is a new task, so we should be raising an error at this point itself
        IF ( p_update_mode = 'PA_UPD_TASK_ATTR') THEN
          PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                               p_msg_name => 'PA_WBS_CANT_CHANGE');
          RAISE FND_API.G_EXC_ERROR;
        END IF;

        PA_PM_FUNCTION_SECURITY_PUB.check_function_security
        (p_api_version_number => p_api_version_number,
         p_responsibility_id  => l_resp_id,
         p_function_name      => 'PA_PM_ADD_TASK',
         p_msg_count          => l_msg_count,
         p_msg_data           => l_msg_data,
         p_return_status      => l_return_status,
         p_function_allowed   => l_function_allowed);

         IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
         THEN
            RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

         ELSIF l_return_status = FND_API.G_RET_STS_ERROR
         THEN
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
         END IF;

         IF l_function_allowed = 'N' THEN
           pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
            p_return_status := FND_API.G_RET_STS_ERROR;
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
         END IF;

         -- check whether the input task number is unique
          IF pa_task_utils.check_unique_task_number
              (l_project_id, p_tasks_in(i).pa_task_number,NULL) = 0 THEN
         -- this means that the task number will not be unique
         -- however,the existing task with that task number may get
         -- changed during the update process. Hence,we need to process this
         -- task only after all tasks have been processed
              l_deferred_tasks_count := l_deferred_tasks_count +1;
              l_deferred_new_tasks_tbl(l_deferred_tasks_count) := p_tasks_in(i);
              l_deferred_tasks_index_tbl(l_deferred_tasks_count).task_index
                       := i;
--              l_deferred_tasks_index_tbl(l_deferred_tasks_count).task_index );
          ELSE
              --l_count := i;
              IF l_added_task_tbl.exists(1) THEN
                 l_count := l_added_task_tbl.COUNT + 1;
              ELSE
                 l_count := 1;
              END IF;
              l_added_task_tbl(l_count) := p_tasks_in(i);
              l_task_rec     := l_added_task_tbl(l_count);

        --    Check whether the Parent_Task_Reference is not null
        --    Following checking will allow you to create only sub_tasks
        --    under parent task.
  --     *O
  IF (p_tasks_in(i).pa_parent_task_id IS NOT NULL AND p_tasks_in(i).pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) OR
        (p_tasks_in(i).pm_parent_task_reference IS NOT NULL
        AND p_tasks_in(i).pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        THEN
                -- Bug 5262740 Changed pa_project_pvt.convert_pm_taskref_to_id call to
                -- pa_project_pvt.convert_pm_taskref_to_id_all
              PA_PROJECT_PVT.Convert_pm_taskref_to_id_all
              ( p_pa_project_id => l_project_id
              , p_structure_type => l_structure_type
              , p_pa_task_id    => p_tasks_in(i).pa_parent_task_id
              , p_pm_task_reference  => p_tasks_in(i).pm_parent_task_reference
              , p_out_task_id      => l_task_id_out
              , p_return_status => l_return_status    );
                l_ref_task_id :=  l_task_id_out; --aditi Added for Bug 3801314 : Bug 3627124
              IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR)
              THEN

                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

              ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR)
              THEN
                  p_multiple_task_msg := 'F';
--               RAISE FND_API.G_EXC_ERROR;
              END IF;

              PA_TASK_UTILS.Check_Create_Subtask_Ok
              ( x_task_id => l_task_id_out
--bug 3010538               , x_validation_mode    => 'R'     --bug 2947492
              , x_err_code   => l_err_code
              , x_err_stage  => l_err_stage
              , x_err_stack  => l_err_stack );

              IF l_err_code <> 0
              THEN
                 IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
                  IF NOT pa_project_pvt.check_valid_message(l_err_stage)
                  THEN
                     pa_interface_utils_pub.map_new_amg_msg
                      ( p_old_message_code => 'PA_CHECK_ADD_SUBTASK_FAILED'
                       ,p_msg_attribute    => 'CHANGE'
                       ,p_resize_flag      => 'Y'
                       ,p_msg_context      => 'ADDT'
                       ,p_attribute1       => l_project_rec.segment1
                       ,p_attribute2       => l_amg_task_number
                       ,p_attribute3       => ''
                       ,p_attribute4       => ''
                       ,p_attribute5       => '');
                  ELSE
                     pa_interface_utils_pub.map_new_amg_msg
                      ( p_old_message_code => l_err_stage
                       ,p_msg_attribute    => 'SPLIT'
                       ,p_resize_flag      => 'Y'
                       ,p_msg_context      => 'ADDST'
                       ,p_attribute1       => l_project_rec.segment1
                       ,p_attribute2       => l_amg_task_number
                       ,p_attribute3       => ''
                       ,p_attribute4       => ''
                       ,p_attribute5       => '');
                  END IF;
                END IF;
                  l_tasks_out(i).return_status    := FND_API.G_RET_STS_ERROR;
                  p_multiple_task_msg := 'F';
--                RAISE FND_API.G_EXC_ERROR;

              END IF;
           END IF;

          /* Code addition for bug 2982057 starts */
       IF l_task_rec.long_task_name IS NULL OR l_task_rec.long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       then
         l_task_rec.long_task_name := l_task_rec.task_name;
           else
         l_task_rec.long_task_name :=l_task_rec.long_task_name;
           end if;
           /* Code addition for bug 2982057 ends */
              PA_PROJECT_PVT.add_task_round_one
                      (p_return_status            => l_return_status,
                       p_project_rec              => l_project_rec,
                       p_task_rec                 => l_task_rec,
                       p_project_type_class_code  => l_project_type_class_code,
                       p_service_type_code        => l_service_type_code,
                       p_task_id                  => l_task_id);
              IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR
              THEN

                 l_tasks_out(i).return_status    := l_return_status;
                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

              ELSIF l_return_status = FND_API.G_RET_STS_ERROR
              THEN
                    l_tasks_out(i).return_status    := l_return_status;
                    p_multiple_task_msg := 'F';
--                  RAISE FND_API.G_EXC_ERROR;

              END IF;
              l_tasks_out(i).pa_task_id         := l_task_id;

        --used to pass task_id to add_task_round_two API
              l_task_id_tbl(l_count).pa_task_id := l_task_id;
          END IF;

        ELSE   -- (if l_task_id is not null, that means this is an
                      --  existing task. so need to update the task )
-- ---------------------------------------------------------------------------

  --  * SPECIAL HANDLING FOR TASK NUMBER CHANGES. THIS IS TO TAKE CARE
  --  * OF TASK NUMBER INTERCHANGES . Eg: Task 2.1 being updated to
  --  * 2.3 and Task 2.3 being updated to 2.1

  -- 1. Get the existing task number  -
  -- 2. compare existing task number and the incoming task number
  --    required inputs task id and task number from the input array
  -- 3. If same, proceed with update_task
  --  else
  --    check whether the new number would be unique
  --  If yes, then proceed with the update
  --  else, get the task_id and pm_task reference of the
  --  original task - the one whose task number is = to the
  --  current task's new task number
  --  scan the input array to check whether this task's number
  --  is also being changed   - required input - task array
  --  If no, then raise error,since cannot change the number
  --  of the current task
  --  If yes, then store the index of the current task
  --  in a different array and increment a counter  - global array
  --  Let us call this array Task_Number_Updated_Array
  --  Update the task number of the current task as G_PA_MISS_CHAR || counter
  --  in the database
  --  process the next task in the array

--------------------------------------------------------------------------------
        l_proceed_with_update_flag := 'Y';
        ----dbms_output.put_line('calling pa_project_pvt.handle_task_number_changes l_task_id'||l_task_id);
        ----dbms_output.put_line('value of p_tasks_in(i).pa_task_number'||p_tasks_in(i).pa_task_number);

        pa_project_pvt.handle_task_number_change
          (p_project_id                    => l_project_id,
           p_task_id                       => l_task_id,
           p_array_cell_number             => i,
           p_in_task_number                => p_tasks_in(i).pa_task_number,
           p_in_task_tbl                   => p_tasks_in,
           p_proceed_with_update_flag      => l_proceed_with_update_flag,
           p_return_status                 => l_return_status);

        IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR THEN
           RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
           p_multiple_task_msg := 'F';
--         RAISE FND_API.G_EXC_ERROR;
        END IF;
    ----dbms_output.put_line('value of l_proceed_with_update_flag'||l_proceed_with_update_flag);
        IF l_proceed_with_update_flag = 'Y' THEN

--Project Structures
          /** COMMENTED FOR BUG 3841742 :3832333 : This code was assuming that the tasks will
          be passed in the correct heirarchy and that the reference task id of the new task being
          created was set to the task_id of the most recently created task. This was leading to
          the error while updating tasks if the new task had a different top task than the one just
          created */
             /**   v_first_index := p_tasks_in.first;
              v_last_index := p_tasks_in.last;

              IF i > v_first_index AND
                 l_tasks_out(i-1).pa_task_id IS NOT NULL AND
                 l_tasks_out(i-1).pa_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
              THEN
                 v_ref_task_id := l_tasks_out(i-1).pa_task_id;
              ELSIF i > v_first_index AND
                 p_tasks_in(i-1).pa_task_id IS NOT NULL AND
                 p_tasks_in(i-1).pa_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
              THEN
                 v_ref_task_id := p_tasks_in(i-1).pa_task_id;
              ELSE
                 v_ref_task_id := null;
              END IF;        END OF COMMENTED PART FOR BUG 3841742 :3832333**/
          /** ADDED FOR BUG 3841742 : 3832333 :This code will assign parent_task_id to v_ref_task_id
          , if parent is not null.Else v_ref_task_id wil be set to null for top tasks.**/
       IF ((p_tasks_in(i).pa_parent_task_id IS NOT NULL AND p_tasks_in(i).pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          OR
              (p_tasks_in(i).pm_parent_task_reference IS NOT NULL AND p_tasks_in(i).pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
          AND  p_structure_in.structure_type = 'FINANCIAL'

             THEN

                -- Bug 5262740 Changed pa_project_pvt.convert_pm_taskref_to_id call to
                -- pa_project_pvt.convert_pm_taskref_to_id_all
              PA_PROJECT_PVT.Convert_pm_taskref_to_id_all
              ( p_pa_project_id => l_project_id
              , p_structure_type => l_structure_type
              , p_pa_task_id    => p_tasks_in(i).pa_parent_task_id
              , p_pm_task_reference  => p_tasks_in(i).pm_parent_task_reference
              , p_out_task_id      => l_task_id_out
              , p_return_status => l_return_status    );
               v_ref_task_id :=  l_task_id_out; --aditi Added for Bug 3798429: Bug 3801314
              IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR)
              THEN

                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

              ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR)
              THEN
                  p_multiple_task_msg := 'F';
--               RAISE FND_API.G_EXC_ERROR;
              END IF;
          ELSE
          v_ref_task_id := null;
          END IF;
      /*** CHANGES END FOR BUG 3841742 : 3832333 **/
--      --dbms_output.put_line('value of v_ref_task_id passed : '||v_ref_task_id||' AND for task_id :'||p_tasks_in(i).pa_task_number);
  --    --dbms_output.put_line('task etc Effort :'||p_tasks_in(i).etc_effort);
    --  --dbms_output.put_line('% complete'||p_tasks_in(i).percent_complete);
--Project Structures
          IF l_debug_mode = 'Y' THEN
               pa_debug.write(l_module_name,'Calling update Task',3);
               pa_debug.write(l_module_name,'Calling update Task'||p_tasks_in(i).etc_effort,3);
               pa_debug.write(l_module_name,'Calling update Task'||p_tasks_in(i).percent_complete,3);
          END IF;
      ----dbms_output.put_line('value of p_tasks_in(i).pa_task_number before calling update_task'||p_tasks_in(i).pa_task_number);

                  Update_Task (
                  p_api_version_number            => p_api_version_number,
                  p_commit        => FND_API.G_FALSE,
                  p_msg_count                     => p_msg_count,
                  p_msg_data                      => p_msg_data,
                  p_return_status      => l_return_status,
                  p_pm_product_code            => p_pm_product_code,
                  p_pa_project_id                 => l_project_id,
                  p_pa_task_id                    => l_task_id,
--Project Structures
                  p_ref_task_id                   => v_ref_task_id,
--Project Structures
                  p_pm_task_reference             => p_tasks_in(i).pm_task_reference,
                  p_task_number                   => p_tasks_in(i).pa_task_number,
                  p_task_name                     => p_tasks_in(i).task_name,
                  p_long_task_name                => p_tasks_in(i).long_task_name,
                  p_task_description              => p_tasks_in(i).task_description,
                  p_task_start_date               => p_tasks_in(i).task_start_date,
                  p_task_completion_date          => p_tasks_in(i).task_completion_date,
-- Start Fix for Bug # 1289156
                  p_early_start_date              => p_tasks_in(i).early_start_date,
                  p_early_finish_date             => p_tasks_in(i).early_finish_date,
                  p_late_start_date               => p_tasks_in(i).late_start_date,
                  p_late_finish_date              => p_tasks_in(i).late_finish_date,
                  p_actual_start_date             => p_tasks_in(i).actual_start_date,
                  p_actual_finish_date            => p_tasks_in(i).actual_finish_date,
-- End Fix for Bug # 1289156
                  p_pm_parent_task_reference      => p_tasks_in(i).pm_parent_task_reference,
                  p_pa_parent_task_id      => p_tasks_in(i).pa_parent_task_id,
                  p_address_id        => p_tasks_in(i).address_id,
                  p_carrying_out_organization_id  => p_tasks_in(i).carrying_out_organization_id,
                  p_service_type_code             => p_tasks_in(i).service_type_code,
                  p_task_manager_person_id        => p_tasks_in(i).task_manager_person_id,
                  p_billable_flag                 => p_tasks_in(i).billable_flag,
                  p_chargeable_flag               => p_tasks_in(i).chargeable_flag,
                  p_ready_to_bill_flag            => p_tasks_in(i).ready_to_bill_flag,
                  p_ready_to_distribute_flag      => p_tasks_in(i).ready_to_distribute_flag,
                  p_limit_to_txn_controls_flag    => p_tasks_in(i).limit_to_txn_controls_flag,
                  p_labor_bill_rate_org_id        => p_tasks_in(i).labor_bill_rate_org_id,
                  p_labor_std_bill_rate_schdl     => p_tasks_in(i).labor_std_bill_rate_schdl,
                  p_labor_schedule_fixed_date     => p_tasks_in(i).labor_schedule_fixed_date,
                  p_labor_schedule_discount       => p_tasks_in(i).labor_schedule_discount,
                  p_nl_bill_rate_org_id           => p_tasks_in(i).non_labor_bill_rate_org_id,
                  p_nl_std_bill_rate_schdl       =>  p_tasks_in(i).non_labor_std_bill_rate_schdl,
                  p_nl_schedule_fixed_date       =>  p_tasks_in(i).non_labor_schedule_fixed_date,
                  p_nl_schedule_discount         =>  p_tasks_in(i).non_labor_schedule_discount,
                  p_labor_cost_multiplier_name   =>  p_tasks_in(i).labor_cost_multiplier_name,
                  p_cost_ind_rate_sch_id          => p_tasks_in(i).cost_ind_rate_sch_id,
                  p_rev_ind_rate_sch_id           => p_tasks_in(i).rev_ind_rate_sch_id,
                  p_inv_ind_rate_sch_id           => p_tasks_in(i).inv_ind_rate_sch_id,
                  p_cost_ind_sch_fixed_date       => p_tasks_in(i).cost_ind_sch_fixed_date,
                  p_rev_ind_sch_fixed_date        => p_tasks_in(i).rev_ind_sch_fixed_date,
                  p_inv_ind_sch_fixed_date        => p_tasks_in(i).inv_ind_sch_fixed_date,
                  p_labor_sch_type                => p_tasks_in(i).labor_sch_type,
                  p_nl_sch_type                   => p_tasks_in(i).non_labor_sch_type,
                  p_tasks_dff                     => p_tasks_in(i).tasks_dff, --bug 6153503
                  p_attribute_category            => p_tasks_in(i).attribute_category,
                  p_attribute1                   => p_tasks_in(i).attribute1,
                  p_attribute2                   => p_tasks_in(i).attribute2,
                  p_attribute3                   => p_tasks_in(i).attribute3,
                  p_attribute4                   => p_tasks_in(i).attribute4,
                  p_attribute5                   => p_tasks_in(i).attribute5,
                  p_attribute6                   => p_tasks_in(i).attribute6,
                  p_attribute7                   => p_tasks_in(i).attribute7,
                  p_attribute8                   => p_tasks_in(i).attribute8,
                  p_attribute9                   => p_tasks_in(i).attribute9,
                  p_attribute10                  => p_tasks_in(i).attribute10,
                  --bug 6153503
                  p_attribute11                   => p_tasks_in(i).attribute11,
                  p_attribute12                   => p_tasks_in(i).attribute12,
                  p_attribute13                   => p_tasks_in(i).attribute13,
                  p_attribute14                   => p_tasks_in(i).attribute14,
                  p_attribute15                   => p_tasks_in(i).attribute15,
                  p_allow_cross_charge_flag      =>
p_tasks_in(i).allow_cross_charge_flag,
                  p_project_rate_type  => p_tasks_in(i).project_rate_type,
                  p_project_rate_date  => p_tasks_in(i).project_rate_date,
                  p_cc_process_labor_flag  => p_tasks_in(i).cc_process_labor_flag,
                  p_labor_tp_schedule_id  => p_tasks_in(i).labor_tp_schedule_id,
                  p_labor_tp_fixed_date  => p_tasks_in(i).labor_tp_fixed_date,
                  p_cc_process_nl_flag  => p_tasks_in(i).cc_process_nl_flag,
                  p_nl_tp_schedule_id  => p_tasks_in(i).nl_tp_schedule_id,
                  p_nl_tp_fixed_date  => p_tasks_in(i).nl_tp_fixed_date,
                  p_receive_project_invoice_flag  =>
p_tasks_in(i).receive_project_invoice_flag,
                  p_work_type_id  => p_tasks_in(i).work_type_id,
                  p_emp_bill_rate_schedule_id  => p_tasks_in(i).emp_bill_rate_schedule_id,
                  p_job_bill_rate_schedule_id  => p_tasks_in(i).job_bill_rate_schedule_id,
--Sakthi MCB
                  p_non_lab_std_bill_rt_sch_id  => p_tasks_in(i).non_lab_std_bill_rt_sch_id,
                  p_taskfunc_cost_rate_type  => p_tasks_in(i).taskfunc_cost_rate_type,
                  p_taskfunc_cost_rate_date  => p_tasks_in(i).taskfunc_cost_rate_date,
--Sakthi MCB
                  p_labor_disc_reason_code  => p_tasks_in(i).labor_disc_reason_code,
                  p_non_labor_disc_reason_code  => p_tasks_in(i).non_labor_disc_reason_code,
--project structures
--bug 2744729, 2740565
                  p_structure_type                     => l_structure_type,
                  p_structure_version_id               => p_structure_in.structure_version_id,
                  P_OBLIGATION_START_DATE              => p_tasks_in(i).OBLIGATION_START_DATE,
                  P_OBLIGATION_FINISH_DATE             => p_tasks_in(i).OBLIGATION_FINISH_DATE,
                  P_ESTIMATED_START_DATE               => p_tasks_in(i).ESTIMATED_START_DATE,
                  P_ESTIMATED_FINISH_DATE              => p_tasks_in(i).ESTIMATED_FINISH_DATE,
                  P_BASELINE_START_DATE                => p_tasks_in(i).BASELINE_START_DATE,
                  P_BASELINE_FINISH_DATE               => p_tasks_in(i).BASELINE_FINISH_DATE,
                  P_CLOSED_DATE                        => p_tasks_in(i).CLOSED_DATE,
                  P_WQ_UOM_CODE                        => p_tasks_in(i).WQ_UOM_CODE,
                  P_WQ_ITEM_CODE                       => p_tasks_in(i).WQ_ITEM_CODE,
                  P_STATUS_CODE                        => p_tasks_in(i).STATUS_CODE,
                  P_WF_STATUS_CODE                     => p_tasks_in(i).WF_STATUS_CODE,
                  P_PM_SOURCE_CODE                     => p_tasks_in(i).PM_SOURCE_CODE,
                  P_PRIORITY_CODE                      => p_tasks_in(i).PRIORITY_CODE,
                  P_MILESTONE_FLAG                     => p_tasks_in(i).MILESTONE_FLAG,
                  P_CRITICAL_FLAG                      => p_tasks_in(i).CRITICAL_FLAG,
                  P_INC_PROJ_PROGRESS_FLAG             => p_tasks_in(i).INC_PROJ_PROGRESS_FLAG,
                  P_LINK_TASK_FLAG                     => p_tasks_in(i).LINK_TASK_FLAG,
                  P_CALENDAR_ID                        => p_tasks_in(i).CALENDAR_ID,
                  P_PLANNED_EFFORT                     => p_tasks_in(i).PLANNED_EFFORT,
                  P_DURATION                           => p_tasks_in(i).DURATION,
                  P_PLANNED_WORK_QUANTITY              => p_tasks_in(i).PLANNED_WORK_QUANTITY,
                  P_TASK_TYPE                          => p_tasks_in(i).TASK_TYPE,
--bug 2856033
                  p_scheduled_start_date               => p_tasks_in(i).scheduled_start_date,
                  p_scheduled_finish_date               => p_tasks_in(i).scheduled_finish_date,
--bug 2744729, 2740565
--Project Structures
--PA L Changes 2872708
                  p_retirement_cost_flag               => p_tasks_in(i).retirement_cost_flag,
                  p_cint_eligible_flag                 => p_tasks_in(i).cint_eligible_flag,
                  p_cint_stop_date                     => p_tasks_in(i).cint_stop_date,
--End PA L changes 2872708
                  p_out_pa_task_id                => l_out_pa_task_id,
                  p_out_pm_task_reference         => l_out_pm_task_reference,
                  p_update_task_structure         => l_update_task_structure  -- for bug 2931183 to indicate bulk structure processing
          -- modified p_update_task_structure value for bug 3548473 : Bug 3627124
-- (Begin venkat) new params for bug #3450684 ----------------------------------------------
                  ,p_ext_act_duration              => p_tasks_in(i).ext_act_duration
                  ,p_ext_remain_duration           => p_tasks_in(i).ext_remain_duration
                  ,p_ext_sch_duration              => p_tasks_in(i).ext_sch_duration
-- (End venkat) new params for bug #3450684 -------------------------------------------------

-- set the new params - bug #3654243 ----------------------------------------------
        ,p_base_percent_comp_deriv_code => p_tasks_in(i).base_percent_comp_deriv_code
        ,p_sch_tool_tsk_type_code       => p_tasks_in(i).sch_tool_tsk_type_code
        ,p_constraint_type_code         => p_tasks_in(i).constraint_type_code
        ,p_constraint_date              => p_tasks_in(i).constraint_date
        ,p_free_slack                   => p_tasks_in(i).free_slack
        ,p_total_slack                  => p_tasks_in(i).total_slack
        ,p_effort_driven_flag           => p_tasks_in(i).effort_driven_flag
        ,p_level_assignments_flag       => p_tasks_in(i).level_assignments_flag
        ,p_gen_etc_source_code          => p_tasks_in(i).gen_etc_source_code
-- set the new params - bug #3654243 -------------------------------------------------


-- For bug 3279981 Review
                  ,p_invoice_method            => p_tasks_in(i).invoice_method
                  ,p_customer_id                    => p_tasks_in(i).customer_id
          ,p_is_wp_seperate_from_fn        => l_is_wp_seperate_from_fn  -- Added for bug#3451073
          --Added by rtarway, for BUG 3919800
                 , p_etc_effort                    => p_tasks_in(i).etc_effort
                 , p_percent_complete              => p_tasks_in(i).percent_complete
                  --Added by rtarway, for BUG 3919800
                 ,p_calling_api      => 'UPDATE_PROJECT'  --Bug # 4199694
                  );

    IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After update_task first call...l_return_status=||l_return_status';
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


              ----dbms_output.put_line('Value of return status of update_task'    ||l_return_status);

                  IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR
                  THEN

                       l_tasks_out(i).return_status := l_return_status;
                       RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

                  ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                        l_tasks_out(i).return_status := l_return_status;
                        p_multiple_task_msg := 'F';
--                      RAISE FND_API.G_EXC_ERROR;

                  END IF;

                  l_tasks_out(i).pa_task_id       := l_task_id;
           l_tasks_out(i).pm_task_reference       := l_out_pm_task_reference;
            END IF;  -- If l_proceed_with_update_flag = 'Y'
        END IF;  -- If l_task_id IS NULL

        i := p_tasks_in.next(i);

     END LOOP;

END IF;
 --   Scan the Task_Number_Updated_Array
 --   If there are any records in this array,
 --   get the index that is already stored and
 --   call update_task for that task
 --   For eg: If the 8th and 14th task records had been
 --   marked for this special Task number update
 --   then call Update_task API for these two task records

--Project Structures
      v_first_index := p_tasks_in.first;
      v_last_index := p_tasks_in.last;
--Project Structures

  IF pa_project_check_pvt.G_index_counter > 0 THEN
     IF pa_project_check_pvt.G_task_num_updated_index_tbl.EXISTS (1) THEN
        FOR i in 1..pa_project_check_pvt.G_task_num_updated_index_tbl.COUNT LOOP
        l_array_index :=
        pa_project_check_pvt.G_task_num_updated_index_tbl(i).task_index;

--Project Structures
        for j in v_first_index..v_last_index loop
            IF pa_project_check_pvt.G_task_num_updated_index_tbl(i).task_id = p_tasks_in(j).pa_task_id AND
               j > v_first_index
            THEN
                v_ref_task_id := p_tasks_in(j-1).pa_task_id;
            ELSE
                v_ref_task_id := null;
            END IF;
        end loop;
--Project Structures

IF l_debug_mode = 'Y' THEN
     pa_debug.write(l_module_name,'Calling update Task',3);
     pa_debug.write(l_module_name,'Calling update Task'||p_tasks_in(l_array_index).etc_effort,3);
     pa_debug.write(l_module_name,'Calling update Task'||p_tasks_in(l_array_index).percent_complete,3);
END IF;
        Update_Task (
         p_api_version_number            => p_api_version_number,
         p_commit        => FND_API.G_FALSE,
         p_msg_count                      => p_msg_count,
         p_msg_data                       => p_msg_data,
         p_return_status      => l_return_status,
         p_pm_product_code            => p_pm_product_code,
         p_pa_project_id                  => l_project_id,
         p_pa_task_id                     =>
           pa_project_check_pvt.G_task_num_updated_index_tbl(i).task_id,
--Project Structures
         p_ref_task_id                    => v_ref_task_id,
--Project STRUCTUres
         p_pm_task_reference              =>
         p_tasks_in(l_array_index).pm_task_reference,
         p_task_number                   =>
           p_tasks_in(l_array_index).pa_task_number,
         p_task_name                     =>
           p_tasks_in(l_array_index).task_name,
         p_long_task_name                =>
           p_tasks_in(l_array_index).long_task_name,
         p_task_description              =>
           p_tasks_in(l_array_index).task_description,
         p_task_start_date               =>
           p_tasks_in(l_array_index).task_start_date,
         p_task_completion_date          =>
           p_tasks_in(l_array_index).task_completion_date,
-- Start Fix for Bug # 1289156
         p_early_start_date              =>
           p_tasks_in(l_array_index).early_start_date,
         p_early_finish_date             =>
           p_tasks_in(l_array_index).early_finish_date,
         p_late_start_date               =>
           p_tasks_in(l_array_index).late_start_date,
         p_late_finish_date              =>
           p_tasks_in(l_array_index).late_finish_date,
         p_actual_start_date             =>
           p_tasks_in(l_array_index).actual_start_date,
         p_actual_finish_date            =>
           p_tasks_in(l_array_index).actual_finish_date,
-- End Fix for Bug # 1289156
         p_pm_parent_task_reference      =>
           p_tasks_in(l_array_index).pm_parent_task_reference,
         p_pa_parent_task_id      =>
           p_tasks_in(l_array_index).pa_parent_task_id,
         p_address_id        =>
           p_tasks_in(l_array_index).address_id,
         p_carrying_out_organization_id  =>
           p_tasks_in(l_array_index).carrying_out_organization_id,
         p_service_type_code             =>
           p_tasks_in(l_array_index).service_type_code,
         p_task_manager_person_id        =>
           p_tasks_in(l_array_index).task_manager_person_id,
         p_billable_flag                 =>
           p_tasks_in(l_array_index).billable_flag,
         p_chargeable_flag               =>
           p_tasks_in(l_array_index).chargeable_flag,
         p_ready_to_bill_flag            =>
           p_tasks_in(l_array_index).ready_to_bill_flag,
         p_ready_to_distribute_flag      =>
           p_tasks_in(l_array_index).ready_to_distribute_flag,
         p_limit_to_txn_controls_flag    =>
           p_tasks_in(l_array_index).limit_to_txn_controls_flag,
         p_labor_bill_rate_org_id        =>
           p_tasks_in(l_array_index).labor_bill_rate_org_id,
         p_labor_std_bill_rate_schdl     =>
           p_tasks_in(l_array_index).labor_std_bill_rate_schdl,
         p_labor_schedule_fixed_date     =>
           p_tasks_in(l_array_index).labor_schedule_fixed_date,
         p_labor_schedule_discount       =>
           p_tasks_in(l_array_index).labor_schedule_discount,
         p_nl_bill_rate_org_id           =>
           p_tasks_in(l_array_index).non_labor_bill_rate_org_id,
         p_nl_std_bill_rate_schdl       =>
           p_tasks_in(l_array_index).non_labor_std_bill_rate_schdl,
         p_nl_schedule_fixed_date       =>
           p_tasks_in(l_array_index).non_labor_schedule_fixed_date,
         p_nl_schedule_discount         =>
           p_tasks_in(l_array_index).non_labor_schedule_discount,
         p_labor_cost_multiplier_name   =>
           p_tasks_in(l_array_index).labor_cost_multiplier_name,
         p_cost_ind_rate_sch_id          =>
           p_tasks_in(l_array_index).cost_ind_rate_sch_id,
         p_rev_ind_rate_sch_id           =>
           p_tasks_in(l_array_index).rev_ind_rate_sch_id,
         p_inv_ind_rate_sch_id           =>
           p_tasks_in(l_array_index).inv_ind_rate_sch_id,
         p_cost_ind_sch_fixed_date       =>
           p_tasks_in(l_array_index).cost_ind_sch_fixed_date,
         p_rev_ind_sch_fixed_date        =>
           p_tasks_in(l_array_index).rev_ind_sch_fixed_date,
         p_inv_ind_sch_fixed_date        =>
           p_tasks_in(l_array_index).inv_ind_sch_fixed_date,
         p_labor_sch_type                =>
           p_tasks_in(l_array_index).labor_sch_type,
         p_nl_sch_type                   =>
           p_tasks_in(l_array_index).non_labor_sch_type,
         p_tasks_dff                     => p_tasks_in(l_array_index).tasks_dff, --bug 6153503
         p_attribute_category            =>
           p_tasks_in(l_array_index).attribute_category,
         p_attribute1                   => p_tasks_in(l_array_index).attribute1,
         p_attribute2                   => p_tasks_in(l_array_index).attribute2,
         p_attribute3                   => p_tasks_in(l_array_index).attribute3,
         p_attribute4                   => p_tasks_in(l_array_index).attribute4,
         p_attribute5                   => p_tasks_in(l_array_index).attribute5,
         p_attribute6                   => p_tasks_in(l_array_index).attribute6,
         p_attribute7                   => p_tasks_in(l_array_index).attribute7,
         p_attribute8                   => p_tasks_in(l_array_index).attribute8,
         p_attribute9                   => p_tasks_in(l_array_index).attribute9,
         p_attribute10                  => p_tasks_in(l_array_index).attribute10,
         --bug 6153503
         p_attribute11                   => p_tasks_in(l_array_index).attribute11,
         p_attribute12                   => p_tasks_in(l_array_index).attribute12,
         p_attribute13                   => p_tasks_in(l_array_index).attribute13,
         p_attribute14                   => p_tasks_in(l_array_index).attribute14,
         p_attribute15                   => p_tasks_in(l_array_index).attribute15,
         --Chnaged the index from i to l_array_index for BUG 4016583, rtarway
         p_allow_cross_charge_flag      => p_tasks_in(l_array_index).allow_cross_charge_flag,
         p_project_rate_type            => p_tasks_in(l_array_index).project_rate_type,
         p_project_rate_date            => p_tasks_in(l_array_index).project_rate_date,
         p_cc_process_labor_flag        => p_tasks_in(l_array_index).cc_process_labor_flag,
         p_labor_tp_schedule_id         => p_tasks_in(l_array_index).labor_tp_schedule_id,
         p_labor_tp_fixed_date          => p_tasks_in(l_array_index).labor_tp_fixed_date,
         p_cc_process_nl_flag           => p_tasks_in(l_array_index).cc_process_labor_flag,
         p_nl_tp_schedule_id            => p_tasks_in(l_array_index).nl_tp_schedule_id,
         p_nl_tp_fixed_date             => p_tasks_in(l_array_index).nl_tp_fixed_date,
         p_receive_project_invoice_flag => p_tasks_in(l_array_index).receive_project_invoice_flag,
         p_work_type_id                 => p_tasks_in(l_array_index).work_type_id,
         p_emp_bill_rate_schedule_id    => p_tasks_in(l_array_index).emp_bill_rate_schedule_id,
/* Bug#2802918 - Changed the passing parameter from emp_bill_rate_schedule_id to
job_bill_rate_schedule_id below */
         p_job_bill_rate_schedule_id    => p_tasks_in(l_array_index).job_bill_rate_schedule_id,
--Sakthi MCB
         p_non_lab_std_bill_rt_sch_id   => p_tasks_in(l_array_index).non_lab_std_bill_rt_sch_id,
         p_taskfunc_cost_rate_type      => p_tasks_in(l_array_index).taskfunc_cost_rate_type,
         p_taskfunc_cost_rate_date      => p_tasks_in(l_array_index).taskfunc_cost_rate_date,
        --End Changes for BUG 4016583, rtarway
--Sakthi MCB
         p_labor_disc_reason_code       => p_tasks_in(l_array_index).labor_disc_reason_code,
         p_non_labor_disc_reason_code   => p_tasks_in(l_array_index).non_labor_disc_reason_code,
--project structures
--bug 2744729, 2740565
                  p_structure_type                     => l_structure_type,
                  p_structure_version_id               => p_structure_in.structure_version_id,
                  P_OBLIGATION_START_DATE              => p_tasks_in(l_array_index).OBLIGATION_START_DATE,
                  P_OBLIGATION_FINISH_DATE             => p_tasks_in(l_array_index).OBLIGATION_FINISH_DATE,
                  P_ESTIMATED_START_DATE               => p_tasks_in(l_array_index).ESTIMATED_START_DATE,

                  P_ESTIMATED_FINISH_DATE              => p_tasks_in(l_array_index).ESTIMATED_FINISH_DATE,
                  P_BASELINE_START_DATE                => p_tasks_in(l_array_index).BASELINE_START_DATE,
                  P_BASELINE_FINISH_DATE               => p_tasks_in(l_array_index).BASELINE_FINISH_DATE,
                  P_CLOSED_DATE                        => p_tasks_in(l_array_index).CLOSED_DATE,
                  P_WQ_UOM_CODE                        => p_tasks_in(l_array_index).WQ_UOM_CODE,
                  P_WQ_ITEM_CODE                       => p_tasks_in(l_array_index).WQ_ITEM_CODE,
                  P_STATUS_CODE                        => p_tasks_in(l_array_index).STATUS_CODE,
                  P_WF_STATUS_CODE                     => p_tasks_in(l_array_index).WF_STATUS_CODE,
                  P_PM_SOURCE_CODE                     => p_tasks_in(l_array_index).PM_SOURCE_CODE,
                  P_PRIORITY_CODE                      => p_tasks_in(l_array_index).PRIORITY_CODE,
                  P_MILESTONE_FLAG                     => p_tasks_in(l_array_index).MILESTONE_FLAG,
                  P_CRITICAL_FLAG                      => p_tasks_in(l_array_index).CRITICAL_FLAG,
                  P_INC_PROJ_PROGRESS_FLAG             => p_tasks_in(l_array_index).INC_PROJ_PROGRESS_FLAG,
                  P_LINK_TASK_FLAG                     => p_tasks_in(l_array_index).LINK_TASK_FLAG,
                  P_CALENDAR_ID                        => p_tasks_in(l_array_index).CALENDAR_ID,
                  P_PLANNED_EFFORT                     => p_tasks_in(l_array_index).PLANNED_EFFORT,
                  P_DURATION                           => p_tasks_in(l_array_index).DURATION,
                  P_PLANNED_WORK_QUANTITY              => p_tasks_in(l_array_index).PLANNED_WORK_QUANTITY,
                  P_TASK_TYPE                          => p_tasks_in(l_array_index).TASK_TYPE,
--bug 2856033
                  p_scheduled_start_date               => p_tasks_in(l_array_index).scheduled_start_date,
                  p_scheduled_finish_date               => p_tasks_in(l_array_index).scheduled_finish_date,
--bug 2744729, 2740565
--project structures
--Bug 3018061
--PA L Changes 2872708
                  p_retirement_cost_flag               => p_tasks_in(l_array_index).retirement_cost_flag,
                  p_cint_eligible_flag                 => p_tasks_in(l_array_index).cint_eligible_flag,
                  p_cint_stop_date                     => p_tasks_in(l_array_index).cint_stop_date,
--End PA L changes 2872708
--end Bug 3018061

-- (Begin venkat) new params for bug #3450684 ----------------------------------------------
                  p_ext_act_duration     => p_tasks_in(l_array_index).ext_act_duration,
                  p_ext_remain_duration  => p_tasks_in(l_array_index).ext_remain_duration,
                  p_ext_sch_duration     => p_tasks_in(l_array_index).ext_sch_duration,
-- (End venkat) new params for bug #3450684 -------------------------------------------------

-- set the new params - bug #3654243 ----------------------------------------------
         p_base_percent_comp_deriv_code => p_tasks_in(l_array_index).base_percent_comp_deriv_code
        ,p_sch_tool_tsk_type_code       => p_tasks_in(l_array_index).sch_tool_tsk_type_code
        ,p_constraint_type_code         => p_tasks_in(l_array_index).constraint_type_code
        ,p_constraint_date              => p_tasks_in(l_array_index).constraint_date
        ,p_free_slack                   => p_tasks_in(l_array_index).free_slack
        ,p_total_slack                  => p_tasks_in(l_array_index).total_slack
        ,p_effort_driven_flag           => p_tasks_in(l_array_index).effort_driven_flag
        ,p_level_assignments_flag       => p_tasks_in(l_array_index).level_assignments_flag
        ,p_gen_etc_source_code          => p_tasks_in(l_array_index).gen_etc_source_code
        ,p_invoice_method       => p_tasks_in(l_array_index).invoice_method
                ,p_customer_id                  => p_tasks_in(l_array_index).customer_id,
-- set the new params - bug #3654243 -------------------------------------------------


                  p_out_pa_task_id                => l_out_pa_task_id,
                  p_out_pm_task_reference         => l_out_pm_task_reference,
                  p_update_task_structure         => l_update_task_structure,   -- for bug 2931183 to indicate bulk structure processing
                  --Added by rtarway, for BUG 3919800
                  p_etc_effort                    => p_tasks_in(l_array_index).etc_effort,
                  p_percent_complete              => p_tasks_in(l_array_index).percent_complete
                  --Added by rtarway, for BUG 3919800
                  ,p_calling_api      => 'UPDATE_PROJECT'  --Bug # 4199694
                  ); -- modified p_update_task_structure value for bug 3548473 : Bug 3627124

    IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After update_task second call...l_return_status=||l_return_status';
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


         IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR THEN
            l_tasks_out(l_array_index).return_status := l_return_status;
            RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
         ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
            l_tasks_out(l_array_index).return_status := l_return_status;
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
         END IF;
         l_tasks_out(l_array_index).pa_task_id       := l_out_pa_task_id;
     l_tasks_out(l_array_index).pm_task_reference  := l_out_pm_task_reference;
       END LOOP;
     END IF; -- IF pa_project_check_pvt.G_task_num_updated_index_tbl.EXISTS (1)
   END IF;  -- IF pa_project_check_pvt.G_index_counter > 0

/** Code change begin by aditi for Bug  4120380 **/
/** The code below will update the task_numbers of the tasks passed via update_project script
back to their original value viz. it'll crop the '-' added to aviod the constraint check in
PA_TASKS and PA_PROJ_ELEMENTS. **/

/* bug #5243018: Reverting the fix in bug 4120380.
i := 1;
IF p_tasks_in.exists(i)
THEN
WHILE i IS NOT NULL LOOP
UPDATE pa_tasks
SET task_number = p_tasks_in(i).pa_task_number
WHERE task_number = '-'||p_tasks_in(i).pa_task_number
AND project_id = l_project_id; -- BUG 4174041, rtarway
----dbms_output.put_line('value of sql%rowcount'||sql%rowcount);
UPDATE pa_proj_elements
SET element_number = p_tasks_in(i).pa_task_number
WHERE element_number = '-'||p_tasks_in(i).pa_task_number
AND project_id = l_project_id; -- BUG 4174041, rtarway
----dbms_output.put_line('value of recod updates in pa_proj_elements'||sql%rowcount);
i := p_tasks_in.next(i);
END LOOP;
End if;
Revert end bug #5243018 */

/* Code change end by aditi for Bug 4120380 **/

-- Now process the deferred new tasks, since all tasks have been processed

   IF l_deferred_tasks_count > 0 THEN
      FOR i in 1..l_deferred_new_tasks_tbl.COUNT LOOP
          IF l_added_task_tbl.exists(1) THEN
             l_count := l_added_task_tbl.COUNT + 1;
          ELSE
             l_count := 1;
          END IF;
          l_added_task_tbl(l_count):= l_deferred_new_tasks_tbl(i);
          l_task_rec        := l_deferred_new_tasks_tbl(i);
          l_orig_index             := l_deferred_tasks_index_tbl(i).task_index;

    -- Actions performed using the APIs would be subject to
    -- function security. If the responsibility does not allow
    -- such functions to be executed, the API should not proceed further
    -- since the user does not have access to such functions

    -- Function security procedure check whether user have the
    -- privilege to add task or not

        --Bug 2471668: we do not need to assign project id to the global variable as it is already done
        --above before checking for update_project function.

    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version_number,
       p_responsibility_id  => l_resp_id,
       p_function_name      => 'PA_PM_ADD_TASK',
       p_msg_count       => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed);

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
            p_multiple_task_msg := 'F';
--          RAISE FND_API.G_EXC_ERROR;
        END IF;

        IF l_function_allowed = 'N' THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
           p_return_status := FND_API.G_RET_STS_ERROR;
             p_multiple_task_msg := 'F';
--           RAISE FND_API.G_EXC_ERROR;
        END IF;

     /* Code addition for bug 2982057 starts */
       IF l_task_rec.long_task_name IS NULL OR l_task_rec.long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
       then
         l_task_rec.long_task_name := l_task_rec.task_name;
           else
         l_task_rec.long_task_name :=l_task_rec.long_task_name;
           end if;
           /* Code addition for bug 2982057 ends */
          --DHI ER, bug 4413568
      IF ( p_update_mode = 'PA_UPD_TASK_ATTR' ) THEN   --bug 4534919
           PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                    p_msg_name => 'PA_WBS_CANT_CHANGE');
              RAISE FND_API.G_EXC_ERROR;
      END IF;
           PA_PROJECT_PVT.add_task_round_one
                    (p_return_status            => l_return_status,
                     p_project_rec              => l_project_rec,
                     p_task_rec                 => l_task_rec,
                     p_project_type_class_code  => l_project_type_class_code,
                     p_service_type_code        => l_service_type_code,
                     p_task_id                  => l_task_id);

    IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After PA_PROJECT_PVT.add_task_round_one...l_return_status=||l_return_status';
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


           IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR THEN

                 l_tasks_out(l_orig_index).return_status  := l_return_status;
                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

           ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    l_tasks_out(l_orig_index).return_status := l_return_status;
                    p_multiple_task_msg := 'F';
--                  RAISE FND_API.G_EXC_ERROR;
           END IF;
           l_tasks_out(l_orig_index).pa_task_id         := l_task_id;
        --used to pass task_id to add_task_round_two API
           l_task_id_tbl(l_count).pa_task_id   := l_task_id;
      END LOOP;

   END IF;

-- For all the tasks which were inserted by calling add_task_round_one,
-- need to call add_task_round_two,which would update the parent task
-- information. such tasks are stored in the l_added_task_tbl

   i:= l_added_task_tbl.first;

   IF l_added_task_tbl.exists(i)
   THEN

       WHILE i IS NOT NULL LOOP

            l_task_rec := l_added_task_tbl(i);

-- Change required here for bug 3548473 : 3627124 (modifying the changes done for bug 2931183) :
/*
1. Check if the user wants to pass the entire struct or single tasks.
2. If pass_entire_struct param is 'Y', let the prog flow be as it is now.
3. If the pass_entire_struct param is 'N', then call PA_PROJECT_PVT.add_task_round_two with
   p_create_task_structure => 'Y' parameter.
*/
/* The code below was added for Bug 3841742 : 3857419 .This is to ensure that add_task_round_two is called
   for all the tasks that have inserted through add_task_round_one for updating wbs_level, top_task_id and
    parent_task_id. The code below will default l_ref_task_id to parent_task_id, if the latter is not null
    .Else l_ref_task_id will be null*/
 /* CHANGES start FOR Bug 3841742 : 3857419  ADITI*/
    IF (l_task_rec.pa_parent_task_id IS NOT NULL AND l_task_rec.pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) OR
        (l_task_rec.pm_parent_task_reference IS NOT NULL
        AND l_task_rec.pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        THEN
                -- Bug 5262740 Changed pa_project_pvt.convert_pm_taskref_to_id call to
                -- pa_project_pvt.convert_pm_taskref_to_id_all
              PA_PROJECT_PVT.Convert_pm_taskref_to_id_all
              ( p_pa_project_id => l_project_id
              , p_structure_type => l_structure_type
              , p_pa_task_id    => l_task_rec.pa_parent_task_id
              , p_pm_task_reference  => l_task_rec.pm_parent_task_reference
              , p_out_task_id      => l_task_id_out
              , p_return_status => l_return_status    );
       --  --dbms_output.put_line('Value of out task'||l_task_id_out);
          l_ref_task_id :=  l_task_id_out; --aditi Added for Bug 3548473

          IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR)
              THEN

                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

              ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR)
              THEN
                  p_multiple_task_msg := 'F';
--               RAISE FND_API.G_EXC_ERROR;
              END IF;
       ELSE
          l_ref_task_id := null;

          END IF;
/* CHANGES end FOR Bug 3841742 : 3857419  ADITI */

          -- Bug 7277840 : Update PM_PROJECT_CODE
	  IF p_pm_product_code <> 'WORKPLAN' AND p_pm_product_code IS NOT NULL
	     AND p_pm_product_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
	  THEN
	      UPDATE pa_tasks
	      SET    pm_product_code = p_pm_product_code
	      WHERE  task_id = l_task_id_tbl(i).pa_task_id;
	  END IF;


            PA_PROJECT_PVT.add_task_round_two
                (p_return_status    => l_return_status,
                  p_project_rec      => l_project_rec,
                  p_task_id          => l_task_id_tbl(i).pa_task_id,
                  p_task_rec         => l_task_rec,
                         --project structure
                         p_ref_task_id      => l_ref_task_id,-- aditi changed from null to l_ref_task_id for bug 3801314 : Bug 3627124
                         p_tasks_in         => p_tasks_in,
                         p_tasks_out        => l_tasks_out,
                         p_task_version_id  => l_task_version_id,
                         p_create_task_structure => l_update_task_structure  -- Bug 2931183 distinguishes bulk calling context
                         --project structure
                         ); -- modified p_update_task_structure value for bug 3548473 : 3627124

    IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After calling PA_PROJECT_PVT.add_task_round_two l_return_status='||l_return_status;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


            IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR
            THEN

    l_tasks_out(i).return_status := l_return_status;
                RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

            ELSIF l_return_status = FND_API.G_RET_STS_ERROR
            THEN

    l_tasks_out(i).return_status := l_return_status;
    l_tasks_out(i).task_version_id := l_task_version_id;
               p_multiple_task_msg := 'F';
--             RAISE FND_API.G_EXC_ERROR;


            END IF;

  i := l_added_task_tbl.next(i);

       END LOOP;
--Commenting the complete code and moving it below to resolve bug 6016529
-- PROCESS_WBS_UPDATES should get called after all the updation related to task and project is done.
-- so it is moved after call for PROCESS_TASK_STRUCTURE_BULK is done.
/* Bug 6163090

-- Changes start for Bug# 3931805
IF NVL( p_pm_product_code, 'WORKPLAN' ) <> 'WORKPLAN' -- We should not be calling the task weightage apis when it is the
THEN                                                  -- publishing flow.
   PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED( l_project_id );
   PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN   := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id );
   PA_PROJECT_PUB.G_Published_version_exists := PA_PROJ_TASK_STRUC_PUB.Published_version_exists( l_project_id );

IF  ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'N' ) OR
       ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
         PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'  AND
         PA_PROJECT_PUB.G_Published_version_exists = 'N')
THEN
   l_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.GET_FIN_STRUC_VER_ID(l_project_id);
   l_update_wbs_flag := PA_PROJECT_STRUCTURE_UTILS.GET_UPDATE_WBS_FLAG(p_project_id => l_project_id
                                         ,p_structure_version_id => l_structure_version_id ) ;
     IF nvl(l_update_wbs_flag,'N') = 'Y' THEN
          IF p_project_in.process_mode = 'ONLINE' THEN
             PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES(p_calling_context      => 'ONLINE_UPDATE'
                                                       ,p_project_id           => l_project_id
                                                       ,p_structure_version_id => l_structure_version_id
                                                       ,x_return_status        => l_return_status
                                                       ,x_msg_count            => l_msg_count
                                                       ,x_msg_data             => l_msg_data ) ;
             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
             END IF;
          ELSIF p_project_in.process_mode = 'CONCURRENT' THEN

             PA_PROJ_TASK_STRUC_PUB. PROCESS_WBS_UPDATES_CONC_WRP(p_calling_context      => 'CONC_UPDATE'
                                                                 ,p_project_id           => l_project_id
                                                                 ,p_structure_version_id => l_structure_version_id
                                                                 ,x_return_status        => l_return_status
                                                                 ,x_msg_count            => l_msg_count
                                                                 ,x_msg_data             => l_msg_data ) ;
             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
             END IF;
          END IF ;
     END IF ;
   END IF ;
END IF;
-- Changes end for Bug# 3931805
*/--Bug 6163090

       --bug 3010538 and 3035902
       --The following code should be executed when a new task is added
       --to a working version( with already existing a published ver ) and
       --then its published.
       --In other words the code is executed while publishing to sync up with
       --pa_tasks. In regular flow for adding new tasks we call this api
       --from the wrapper process_task_structure_bulk api.
       --
       IF l_structure_type = 'FINANCIAL' AND
          p_pm_product_code = 'WORKPLAN'
       THEN
          pa_fp_refresh_elements_pub.set_process_flag_proj(
              p_project_id               => l_project_id
             ,p_request_id               => null
             ,p_process_code             => null
             ,p_refresh_required_flag    => 'Y'
             ,x_return_status            => l_return_status
             ,x_msg_count                => l_msg_count
             ,x_msg_data                 => l_msg_data );

          if l_return_status <> FND_API.G_RET_STS_SUCCESS then
             RAISE FND_API.G_EXC_ERROR;
          end if;
       END IF;
       --bug 3010538 and 3035902

   END IF;   --tasks table not empty

--project structure
ELSIF p_tasks_in.exists(i)
      --AND p_structure_in.structure_type = 'WORKPLAN'  --bug 2738747
      AND l_structure_type = 'WORKPLAN'                 --bug 2738747
THEN

    IF G_WP_STR_EXISTS = 'N'
    THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PS_WP_NOT_SEP_FN'
                  ,p_msg_attribute    => 'CHANGE'
                  ,p_resize_flag      => 'N'
                  ,p_msg_context      => 'GENERAL'
                  ,p_attribute1       => ''
                  ,p_attribute2       => ''
                  ,p_attribute3       => ''
                  ,p_attribute4       => ''
                  ,p_attribute5       => '');
        END IF;
        RAISE FND_API.G_EXC_ERROR;
    END IF;

       v_first_index := i;

       IF ( p_structure_in.structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
            p_structure_in.structure_version_id IS NULL  ) AND l_structure_version_id IS NULL
       THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
               pa_interface_utils_pub.map_new_amg_msg
                    ( p_old_message_code => 'PA_PS_STRUC_VER_REQ'
                     ,p_msg_attribute    => 'CHANGE'
                     ,p_resize_flag      => 'N'
                     ,p_msg_context      => 'GENERAL'
                     ,p_attribute1       => ''
                     ,p_attribute2       => ''
                     ,p_attribute3       => ''
                     ,p_attribute4       => ''
                     ,p_attribute5       => '');
            END IF;
            RAISE FND_API.G_EXC_ERROR;
            l_tasks_out(i).return_status    := FND_API.G_RET_STS_SUCCESS;
       ELSIF ( p_structure_in.structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND
            p_structure_in.structure_version_id IS NOT NULL  )
       THEN
          l_structure_version_id := p_structure_in.structure_version_id;
       END IF;

--Commented The below loop for bug 2931183 so to do the below done processing in bulk

/*       WHILE i IS NOT NULL LOOP

           l_task_id := NULL;

           l_tasks_out(i).return_status    := FND_API.G_RET_STS_SUCCESS;

           --get the previous task
           IF i = v_first_index
           THEN
               v_ref_task_id := null;
           ELSIF (l_tasks_out(i-1).pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
               l_tasks_out(i-1).pa_task_id IS NULL )
           THEN
               v_ref_task_id := p_tasks_in(i-1).pa_task_id;
           ELSE
               v_ref_task_id := l_tasks_out(i-1).pa_task_id;
           END IF;

           IF (p_tasks_in(i).pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
               OR  p_tasks_in(i).pa_task_id IS NULL )
           THEN
               IF  p_tasks_in(i).pm_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                   OR p_tasks_in(i).pm_task_reference IS NULL
               THEN
                   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
             THEN
                          pa_interface_utils_pub.map_new_amg_msg
                             ( p_old_message_code => 'PA_TASK_REF_AND_ID_MISSING'
                              ,p_msg_attribute    => 'CHANGE'
                              ,p_resize_flag      => 'N'
                              ,p_msg_context      => 'PROJ'
                              ,p_attribute1       => l_project_rec.segment1
                              ,p_attribute2       => ''
                              ,p_attribute3       => ''
                              ,p_attribute4       => ''
                             ,p_attribute5       => '');
                   END IF;
                   l_tasks_out(i).return_status :=  FND_API.G_RET_STS_ERROR ;
                   RAISE FND_API.G_EXC_ERROR;
               ELSE
                   --If pm_task_reference is provided and task id is null then its a create
                   --create task
/*                   --get the previous task
                   IF i = v_first_index
                   THEN
                       v_ref_task_id := null;
                   ELSIF (l_tasks_out(i-1).pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
                       l_tasks_out(i-1).pa_task_id IS NULL )
                   THEN
                       v_ref_task_id := p_tasks_in(i-1).pa_task_id;
                   ELSE
                       v_ref_task_id := l_tasks_out(i-1).pa_task_id;
                   END IF;

*/

                   -- Actions performed using the APIs would be subject to
                   -- function security. If the responsibility does not allow
                   -- such functions to be executed, the API should not proceed further
                   -- since the user does not have access to such functions

                   -- Function security procedure check whether user have the
                   -- privilege to add task or not

                   --Bug 2471668: we do not need to assign project id to the global variable as it is already done
                   --above before checking for update_project function.

/*                   PA_PM_FUNCTION_SECURITY_PUB.check_function_security
                      (p_api_version_number => p_api_version_number,
                       p_responsibility_id  => l_resp_id,
                       p_function_name      => 'PA_PM_ADD_TASK',
                       p_msg_count       => l_msg_count,
                       p_msg_data           => l_msg_data,
                       p_return_status      => l_return_status,
                       p_function_allowed   => l_function_allowed);

                   IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                   THEN
                       RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                   ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                   THEN
                       p_multiple_task_msg := 'F';
                       --          RAISE FND_API.G_EXC_ERROR;
                   END IF;

                   IF l_function_allowed = 'N' THEN
                      pa_interface_utils_pub.map_new_amg_msg
                       ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
                        ,p_msg_attribute    => 'CHANGE'
                        ,p_resize_flag      => 'Y'
                        ,p_msg_context      => 'GENERAL'
                        ,p_attribute1       => ''
                        ,p_attribute2       => ''
                        ,p_attribute3       => ''
                        ,p_attribute4       => ''
                        ,p_attribute5       => '');
                       p_return_status := FND_API.G_RET_STS_ERROR;
                       p_multiple_task_msg := 'F';
                       --           RAISE FND_API.G_EXC_ERROR;
                  END IF;

                   IF (p_tasks_in(i).pa_parent_task_id IS NOT NULL
                       AND p_tasks_in(i).pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                   THEN
                       v_parent_task_id := p_tasks_in(i).pa_parent_task_id;
                   ELSIF (p_tasks_in(i).pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                          AND p_tasks_in(i).pm_parent_task_reference IS NOT NULL)
                   THEN
                   --convert pm_parent_task_reference to parent_task_id.
                   --All the parent tasks are created first then child tasks are created. See TRM for AMG load_task api.
                   PA_PROJ_TASK_STRUC_PUB.convert_pm_parent_task_ref(
                       p_pm_parent_task_reference      =>  p_tasks_in(i).pm_parent_task_reference
                      ,p_project_id                    =>  l_project_id
                      ,x_parent_task_id                =>  v_parent_task_id
                      ,x_return_status                 =>  l_return_status
                    );

                    IF l_return_status <> FND_API.G_RET_STS_SUCCESS
                    THEN
                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                        THEN
                            pa_interface_utils_pub.map_new_amg_msg
                               ( p_old_message_code => 'PA_PARENT_TASK_MISSING'
                                   ,p_msg_attribute    => 'CHANGE'
                                   ,p_resize_flag      => 'N'
                                   ,p_msg_context      => 'TASK'
                                   ,p_attribute1       => l_amg_segment1
                                   ,p_attribute2       => l_amg_task_number
                                   ,p_attribute3       => ''
                                   ,p_attribute4       => ''
                                   ,p_attribute5       => '');
                       END IF;
                       RAISE  FND_API.G_EXC_ERROR;
                   END IF;

                   ELSE
                       v_parent_task_id := null;
                   END IF;

                   PA_PROJ_TASK_STRUC_PUB.CREATE_TASK_STRUCTURE(
                         p_project_id                   => l_project_id
                        ,p_task_id                      => p_tasks_in(i).pa_task_id
                        ,p_parent_task_id               => v_parent_task_id
                        ,p_ref_task_id                  => v_ref_task_id
                        ,p_task_number                  => p_tasks_in(i).pa_task_number
                        ,p_task_name                    => p_tasks_in(i).long_task_name     --bug 2833194
                        ,p_task_description             => p_tasks_in(i).task_description
                        ,p_carrying_out_organization_id => p_tasks_in(i).carrying_out_organization_id
                        ,p_calling_module               => 'AMG'
                        --,p_structure_type               => p_structure_in.structure_type  --bug 2738747
                        ,p_structure_type               => l_structure_type    --bug 2738747
                        ,p_OBLIGATION_START_DATE        => p_tasks_in(i).OBLIGATION_START_DATE
                        ,p_OBLIGATION_FINISH_DATE       => p_tasks_in(i).OBLIGATION_FINISH_DATE
                        ,p_ESTIMATED_START_DATE         => p_tasks_in(i).ESTIMATED_START_DATE
                        ,p_ESTIMATED_FINISH_DATE        => p_tasks_in(i).ESTIMATED_FINISH_DATE
                        ,p_BASELINE_START_DATE          => p_tasks_in(i).BASELINE_START_DATE
                        ,p_BASELINE_FINISH_DATE         => p_tasks_in(i).BASELINE_FINISH_DATE
                        ,p_CLOSED_DATE                  => p_tasks_in(i).CLOSED_DATE
                        ,p_WQ_UOM_CODE                  => p_tasks_in(i).WQ_UOM_CODE
                        ,p_WQ_ITEM_CODE                 => p_tasks_in(i).WQ_ITEM_CODE
                        ,p_STATUS_CODE                  => p_tasks_in(i).STATUS_CODE
                        ,p_WF_STATUS_CODE               => p_tasks_in(i).WF_STATUS_CODE
                        ,p_PM_SOURCE_CODE               => l_pm_product_code        --bug 2665656
                        ,p_PRIORITY_CODE                => p_tasks_in(i).PRIORITY_CODE
                        ,p_MILESTONE_FLAG               => p_tasks_in(i).MILESTONE_FLAG
                        ,p_CRITICAL_FLAG                => p_tasks_in(i).CRITICAL_FLAG
                        ,p_INC_PROJ_PROGRESS_FLAG       => p_tasks_in(i).INC_PROJ_PROGRESS_FLAG
                        ,p_LINK_TASK_FLAG               => p_tasks_in(i).LINK_TASK_FLAG
                        ,p_CALENDAR_ID                  => p_tasks_in(i).CALENDAR_ID
                        ,p_PLANNED_EFFORT               => p_tasks_in(i).PLANNED_EFFORT
                        ,p_DURATION                     => p_tasks_in(i).DURATION
                        ,p_PLANNED_WORK_QUANTITY        => p_tasks_in(i).PLANNED_WORK_QUANTITY
                        ,p_TASK_TYPE                    => p_tasks_in(i).TASK_TYPE
                        ,p_actual_start_date                  => p_tasks_in(i).actual_start_date
                        ,p_actual_finish_date                 => p_tasks_in(i).actual_finish_date
                        ,p_early_start_date                   => p_tasks_in(i).early_start_date
                        ,p_early_finish_date                  => p_tasks_in(i).early_finish_date
                        ,p_late_start_date                    => p_tasks_in(i).late_start_date
                        ,p_late_finish_date                   => p_tasks_in(i).late_finish_date
                        ,p_scheduled_start_date               => p_tasks_in(i).scheduled_start_date
                        ,p_scheduled_finish_date              => p_tasks_in(i).scheduled_finish_date
                        ,P_PM_SOURCE_reference                => p_tasks_in(i).pm_task_reference
                        ,p_location_id                        => p_tasks_in(i).address_id
                        ,p_manager_person_id                  => p_tasks_in(i).task_manager_person_id
                        ,p_structure_version_id               => l_structure_version_id
                        ,x_task_version_id                    => l_task_version_id
                        ,x_task_id                            => v_task_id
                        ,x_msg_count                    => l_msg_count
                        ,x_msg_data                     => l_msg_data
                        ,x_return_status                => l_return_status
                     );

                     -- assign the appropriate values to the task out record
                     l_tasks_out(i).return_status     := l_return_status;
                     l_tasks_out(i).pa_task_id        := v_task_id;
                     l_tasks_out(i).task_version_id   := l_task_version_id;
                     l_tasks_out(i).pm_task_reference := p_tasks_in(i).pm_task_reference;

                     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                     THEN
                         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

                     ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                     THEN
                         p_multiple_task_msg := 'F';
                         RAISE FND_API.G_EXC_ERROR;
                     END IF;

                     i := p_tasks_in.next(i);

               END IF; --<<p_tasks_in(i).pm_task_reference>>
           ELSE
               --For update, task_id should be provided. See TRM for AMG
               --update task

    -- Actions performed using the APIs would be subject to
    -- function security. If the responsibility does not allow
    -- such functions to be executed, the API should not proceed further
    -- since the user does not have access to such functions


    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version_number,
       p_responsibility_id  => l_resp_id,
       p_function_name      => 'PA_PM_UPDATE_TASK',
       p_msg_count          => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
                        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
                        RAISE FND_API.G_EXC_ERROR;
        END IF;
        IF l_function_allowed = 'N' THEN
          pa_interface_utils_pub.map_new_amg_msg
          ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
           ,p_msg_attribute    => 'CHANGE'
           ,p_resize_flag      => 'Y'
           ,p_msg_context      => 'GENERAL'
           ,p_attribute1       => ''
           ,p_attribute2       => ''
           ,p_attribute3       => ''
           ,p_attribute4       => ''
           ,p_attribute5       => '');
           p_return_status := FND_API.G_RET_STS_ERROR;
           RAISE FND_API.G_EXC_ERROR;
        END IF;

                 PA_PROJ_TASK_STRUC_PUB.UPDATE_TASK_STRUCTURE(
                         p_project_id                   => l_project_id
                        ,p_task_id                      => p_tasks_in(i).pa_task_id
                        ,p_ref_task_id                  => v_ref_task_id
                        ,p_task_number                  => p_tasks_in(i).pa_task_number
                        ,p_task_name                    => p_tasks_in(i).long_task_name     --bug 2833194
                        ,p_task_description             => p_tasks_in(i).task_description
                        ,p_carrying_out_organization_id => p_tasks_in(i).carrying_out_organization_id
                        ,p_calling_module               => 'AMG'
                        --,p_structure_type               => p_structure_in.structure_type     --bug 2738747
                        ,p_structure_type               => l_structure_type                    --bug 2738747
                        ,p_pm_product_code              => p_tasks_in(i).PM_SOURCE_CODE
                        ,p_pm_task_reference            => p_tasks_in(i).pm_task_reference
                        ,p_OBLIGATION_START_DATE        => p_tasks_in(i).OBLIGATION_START_DATE
                        ,p_OBLIGATION_FINISH_DATE       => p_tasks_in(i).OBLIGATION_FINISH_DATE
                        ,p_ESTIMATED_START_DATE         => p_tasks_in(i).ESTIMATED_START_DATE
                        ,p_ESTIMATED_FINISH_DATE        => p_tasks_in(i).ESTIMATED_FINISH_DATE
                        ,p_BASELINE_START_DATE          => p_tasks_in(i).BASELINE_START_DATE
                        ,p_BASELINE_FINISH_DATE         => p_tasks_in(i).BASELINE_FINISH_DATE
                        ,p_CLOSED_DATE                  => p_tasks_in(i).CLOSED_DATE
                        ,p_WQ_UOM_CODE                  => p_tasks_in(i).WQ_UOM_CODE
                        ,p_WQ_ITEM_CODE                 => p_tasks_in(i).WQ_ITEM_CODE
                        ,p_STATUS_CODE                  => p_tasks_in(i).STATUS_CODE
                        ,p_WF_STATUS_CODE               => p_tasks_in(i).WF_STATUS_CODE
                        ,p_PRIORITY_CODE                => p_tasks_in(i).PRIORITY_CODE
                        ,p_MILESTONE_FLAG               => p_tasks_in(i).MILESTONE_FLAG
                        ,p_CRITICAL_FLAG                => p_tasks_in(i).CRITICAL_FLAG
                        ,p_INC_PROJ_PROGRESS_FLAG       => p_tasks_in(i).INC_PROJ_PROGRESS_FLAG
                        ,p_LINK_TASK_FLAG               => p_tasks_in(i).LINK_TASK_FLAG
                        ,p_CALENDAR_ID                  => p_tasks_in(i).CALENDAR_ID
                        ,p_PLANNED_EFFORT               => p_tasks_in(i).PLANNED_EFFORT
                        ,p_DURATION                     => p_tasks_in(i).DURATION
                        ,p_PLANNED_WORK_QUANTITY        => p_tasks_in(i).PLANNED_WORK_QUANTITY
                        ,p_TASK_TYPE                    => p_tasks_in(i).TASK_TYPE
                        ,p_actual_start_date                  => p_tasks_in(i).actual_start_date
                        ,p_actual_finish_date                 => p_tasks_in(i).actual_finish_date
                        ,p_early_start_date                   => p_tasks_in(i).early_start_date
                        ,p_early_finish_date                  => p_tasks_in(i).early_finish_date
                        ,p_late_start_date                    => p_tasks_in(i).late_start_date
                        ,p_late_finish_date                   => p_tasks_in(i).late_finish_date
                        ,p_scheduled_start_date               => p_tasks_in(i).scheduled_start_date
                        ,p_scheduled_finish_date              => p_tasks_in(i).scheduled_finish_date
                        ,p_location_id                        => p_tasks_in(i).address_id
                        ,p_task_manager_id                  => p_tasks_in(i).task_manager_person_id
                        ,p_structure_version_id               => l_structure_version_id
-- (begin venkat) new params for bug #3450684 ----------------------------------------------
                        ,p_ext_act_duration => p_tasks_in(i).ext_act_duration
                        ,p_ext_remain_duration  => p_tasks_in(i).ext_remain_duration
                        ,p_ext_sch_duration => p_tasks_in(i).ext_sch_duration
-- (end venkat) new params for bug #3450684 -------------------------------------------------
                        ,x_msg_count                    => l_msg_count
                        ,x_msg_data                     => l_msg_data
                        ,x_return_status                => l_return_status
                     );
                     -- assign the appropriate values to the task out record
                     l_tasks_out(i).return_status     := l_return_status;
                     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                     THEN
                         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

                     ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                     THEN
                         p_multiple_task_msg := 'F';
                         RAISE FND_API.G_EXC_ERROR;
                     END IF;
                     l_tasks_out(i).pa_task_id        := p_tasks_in(i).pa_task_id;
                     l_tasks_out(i).pm_task_reference := p_tasks_in(i).pm_task_reference;
                     i := p_tasks_in.next(i);

           END IF;

        END LOOP; --<< end WHILE >>
        */
END IF;
   --project structure

IF p_multiple_task_msg = 'F'
THEN
    RAISE FND_API.G_EXC_ERROR;
END IF;

--Added for bug 2931183
IF nvl(p_pm_product_code,'WORKPLAN') <> 'WORKPLAN' AND p_pass_entire_structure = 'Y'  -- bug 3548473 : 3627124
THEN
    IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'Calling PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK ' ;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;

    PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK(
            p_api_version_number              => p_api_version_number
            ,p_commit                          => FND_API.G_FALSE--bug 3766967
            ,p_project_id                      => l_project_id
            ,p_source_project_id               => l_project_in_rec.created_from_project_id --ADUT. Included this new param.
            ,p_pm_product_code                 => p_pm_product_code
            ,p_structure_type                  => l_structure_type  --for bug 3005458
            ,p_tasks_in_tbl                    => p_tasks_in
            ,p_wp_str_exists                   => G_WP_STR_EXISTS
            ,p_is_wp_separate_from_fn          => G_IS_WP_SEPARATE_FROM_FN
            ,p_is_wp_versioning_enabled        => G_IS_WP_VERSIONING_ENABLED
            ,p_structure_version_id            => l_update_structure_version_id
            ,p_process_mode                    => p_project_in.process_mode -- PA L Changes 3010538
            ,p_create_task_versions_only       => l_create_task_versions_only -- Bug 3075609
            ,px_tasks_out_tbl                  => l_tasks_out
            ,x_return_status                   => p_return_status
            ,x_msg_count                       => p_msg_count
            ,x_msg_data                        => p_msg_data
            );

   IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'After PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK...p_return_status=||p_return_status';
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;


    IF p_return_status <> FND_API.G_RET_STS_SUCCESS THEN
         IF l_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'Errors in PROCESS_TASK_STRUCTURE_BULK ' ;
            pa_debug.write(l_module_name,pa_debug.g_err_stage,4);
        END IF;
        p_multiple_task_msg := 'F';
        RAISE FND_API.G_EXC_ERROR;
    END IF;

    IF l_debug_mode = 'Y' THEN
        pa_debug.g_err_stage := 'Returned from PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK ' ;
        pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
    END IF;
END IF; --for p_pm_product_code is not workplan

-- Bug 6163090 Moved the code here from above
IF  l_structure_type = 'FINANCIAL'
THEN
  IF NVL( p_pm_product_code, 'WORKPLAN' ) <> 'WORKPLAN' -- We should not be calling the task weightage apis when it is the
  THEN                                                  -- publishing flow.
    PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED( l_project_id );
    PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN   := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id );
    PA_PROJECT_PUB.G_Published_version_exists := PA_PROJ_TASK_STRUC_PUB.Published_version_exists( l_project_id );

    IF  ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'N' ) OR
    ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
    PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'  AND
    PA_PROJECT_PUB.G_Published_version_exists = 'N')
    THEN
      l_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.GET_FIN_STRUC_VER_ID(l_project_id);
      l_update_wbs_flag := PA_PROJECT_STRUCTURE_UTILS.GET_UPDATE_WBS_FLAG(p_project_id => l_project_id
                                 ,p_structure_version_id => l_structure_version_id ) ;
      IF nvl(l_update_wbs_flag,'N') = 'Y' THEN
        IF p_project_in.process_mode = 'ONLINE' THEN
          PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES(p_calling_context      => 'ONLINE_UPDATE'
                                                   ,p_project_id           => l_project_id
                                                   ,p_structure_version_id => l_structure_version_id
                                                   ,x_return_status        => l_return_status
                                                   ,x_msg_count            => l_msg_count
                                                   ,x_msg_data             => l_msg_data ) ;
            IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
            THEN
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
            ELSIF l_return_status = FND_API.G_RET_STS_ERROR
            THEN
                  RAISE FND_API.G_EXC_ERROR;
            END IF;
          ELSIF p_project_in.process_mode = 'CONCURRENT' THEN

            PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_CONC_WRP(p_calling_context      => 'CONC_UPDATE'
                                                               ,p_project_id           => l_project_id
                                                               ,p_structure_version_id => l_structure_version_id
                                                               ,x_return_status        => l_return_status
                                                               ,x_msg_count            => l_msg_count
                                                               ,x_msg_data             => l_msg_data ) ;
            IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
            THEN
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
            ELSIF l_return_status = FND_API.G_RET_STS_ERROR
            THEN
                  RAISE FND_API.G_EXC_ERROR;
            END IF;
        END IF ;
      END IF ;
    END IF ;
  END IF;
END IF;--l_structure_type
--Bug 6163090



----Commented The below code for bug 2931183 as the processing will be done in PA_PROJ_TASK_STRUC_PUB.PROCESS_TASK_STRUCTURE_BULK

-- Bug # 5077599.

-- Uncommented the code below.

if (p_update_mode = 'PA_UPD_TASK_ATTR' and p_pass_entire_structure = 'N') then
--bug 2732895   --update_project
IF (( G_WP_STR_EXISTS = 'Y' AND G_IS_WP_SEPARATE_FROM_FN = 'N' ) OR
   ( G_WP_STR_EXISTS = 'Y' AND G_IS_WP_SEPARATE_FROM_FN = 'Y' AND  p_structure_in.structure_type = 'WORKPLAN' ))
   AND (p_pm_product_code <> 'WORKPLAN')
 --bug 2871308: added condition to by-pass when calling from publish api
--should not call if new task is added to FINANCIAL structure version
THEN
  PA_PROJ_TASK_STRUC_PUB.recalc_task_weightings(
             p_tasks_in             => l_tasks_out
            ,p_task_version_id      => null
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            ,x_return_status        => l_return_status
       );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          p_multiple_task_msg := 'F';
          RAISE FND_API.G_EXC_ERROR;
        END IF;

  --bug 2856033

  IF l_structure_version_id IS NULL OR l_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  THEN

      PA_PROJECT_PVT.get_structure_version(
               p_project_id             => l_project_id
              ,p_structure_versions_out => g_struc_out_tbl
            );

      fetch_structure_version(
          p_return_status                 => l_return_status
         ,p_api_version_number            => p_api_version_number
         ,p_structure_type                => p_structure_in.structure_type
         ,p_pa_structure_version_id       => l_structure_version_id
         ,p_struc_return_status           => l_return_status
       );
  END IF;
  PA_PROJ_TASK_STRUC_PUB.rollup_dates(
             p_tasks_in             => l_tasks_out           --null if called for one task
            ,p_task_version_id      => null
            ,p_project_id           => l_project_id
            ,P_structure_version_id => l_structure_version_id
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            ,x_return_status        => l_return_status
       );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          p_multiple_task_msg := 'F';
          RAISE FND_API.G_EXC_ERROR;
        END IF;
  --bug 2856033

END IF;

--bug 2732895
end if;

-- End of Bug # 5077599.


   IF p_multiple_task_msg = 'F'
   THEN
      RAISE FND_API.G_EXC_ERROR;
   END IF;

     p_tasks_out := l_tasks_out;


      -- new project start date should be < min(task_start_date)

  IF l_update_start_date_flag = 'Y'
           --AND p_structure_in.structure_type = 'FINANCIAL'    --bug 2729851   --bug 2738747
           AND l_structure_type = 'FINANCIAL'    --bug 2729851                  --bug 2738747
  THEN

           OPEN l_min_task_start_date_csr (l_project_id);
           FETCH l_min_task_start_date_csr INTO l_min_task_date;

           IF l_min_task_start_date_csr%FOUND
           THEN

               IF l_project_start_date IS NOT NULL
               AND l_min_task_date IS NOT NULL
               THEN

        IF l_min_task_date < l_project_start_date
        THEN

                       CLOSE l_min_task_start_date_csr;

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PR_INVALID_START_DATE'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'N'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_rec.segment1
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                  END IF;
                  RAISE  FND_API.G_EXC_ERROR;

                    END IF;
               END IF;
     END IF;

           CLOSE l_min_task_start_date_csr;

        END IF;

      -- new project completion date should be > max(task_start_date)

       IF l_update_end_date_flag = 'Y'
          --AND p_structure_in.structure_type = 'FINANCIAL'    --bug 2729851    --bug 2738747
          AND l_structure_type = 'FINANCIAL'    --bug 2729851                   --bug 2738747
       THEN

          OPEN l_max_task_end_date_csr (l_project_id);
          FETCH l_max_task_end_date_csr INTO l_max_task_date;

          IF l_max_task_end_date_csr%FOUND
          THEN

               IF l_project_completion_date IS NOT NULL
               AND l_max_task_date IS NOT NULL
               THEN

                   IF l_max_task_date > l_project_completion_date
                   THEN

                  CLOSE l_max_task_end_date_csr;
      p_project_out.return_status := FND_API.G_RET_STS_ERROR;

                  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN
/*  The FND_AS_UNEXPECTED_ERROR message is being reported from UPDATE_PROJECT API and modified
    the following. Replaced the message name from PA_PR_INVALID_COMPLETION_DATE with
    PA_PR_INVALID_COMP_DATE (this is limited to 30 characters after appended with '_AMG') and
    p_resize flag from 'Y' in the procedure call pa_interface_utils_pub.map_new_amg_msg to 'N'.
    Bug#1916735.
*/
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_PR_INVALID_COMP_DATE'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'N'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_rec.segment1
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                  END IF;
                  RAISE  FND_API.G_EXC_ERROR;

                    END IF;
               END IF;
    END IF;

          CLOSE l_max_task_end_date_csr;

       END IF;

-- Call the api to check the task dates
--9839807 - added clause to skip check for MSP since MSP already validates dates
If G_ParChildTsk_chks_deferred = 'Y' and p_pm_product_code <> 'MSPROJECT' THEN
    Pa_project_pvt.check_parent_child_task_dates
          (p_project_id        => l_project_id,
           p_return_status    =>  l_return_status );

        IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR THEN
           RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
           RAISE  FND_API.G_EXC_ERROR;
        END IF;
    G_ParchildTsk_chks_deferred := 'N';
END IF;

--UPDATE key_members

     l_count := 0;
 j := p_key_members.first;
 IF p_key_members.exists(j) THEN

     FOR i in 1..p_key_members.COUNT LOOP

      /* Code below is added for Bug 3326468. Start_date of key members is now a mandatory field to
         Update_project */
           IF p_key_members(i).start_date IS NULL OR
        p_key_members(i).start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
               pa_utils.add_message
                ( p_app_short_name   => 'PA'-- new message for bug 3326468
                 ,p_msg_name    => 'PA_KEYMBR_NO_START_DATE'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_rec.segment1
                 ,p_token2           => 'PERSON_ID'
                 ,p_value2           => p_key_members(i).person_id
                 ,p_token3           => 'ROLE_TYPE'
                 ,p_value3           => p_key_members(i).project_role_type
                );
             END IF;
             p_multiple_task_msg := 'F';
             RAISE FND_API.G_EXC_ERROR;
           END IF;
     -- validate the role type introduced for Bug#5196996
     OPEN l_project_role_types_csr (p_key_members(i).project_role_type,l_project_id);
     FETCH l_project_role_types_csr INTO l_dummy;

     IF l_project_role_types_csr%NOTFOUND THEN

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
                 pa_interface_utils_pub.map_new_amg_msg
                   ( p_old_message_code => 'PA_INVALID_ROLE_TYPE'
                    ,p_msg_attribute    => 'CHANGE'
                    ,p_resize_flag      => 'N'
                    ,p_msg_context      => 'PROJ'
                    ,p_attribute1       => l_amg_segment1
                    ,p_attribute2       => ''
                    ,p_attribute3       => ''
                    ,p_attribute4       => ''
                    ,p_attribute5       => '');
            END IF;
        CLOSE l_project_role_types_csr;
        RAISE  FND_API.G_EXC_ERROR;
     ELSE
        CLOSE l_project_role_types_csr;
     END IF;
     -- end of changes for Bug#5196996



       /* End of Code changes for Bug 3326468 */
          OPEN l_key_member_csr(l_project_id,p_key_members(i).person_id,
                                p_key_members(i).project_role_type ,
                p_key_members(i).start_date); --Added for Bug 3326468
          FETCH l_key_member_csr INTO l_key_members_rec;
          IF l_key_member_csr%NOTFOUND THEN
             CLOSE l_key_member_csr;
             -- This means this is a new key member
             -- add this to the temp table which will be passed
             -- to add_key_members
            IF p_key_members(i).project_role_type = 'PROJECT MANAGER' THEN
              IF (p_key_members(i).end_date <>
                  PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE AND
                   p_key_members(i).start_date <>
                  PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) THEN
                 IF p_key_members(i).start_date >
                    p_key_members(i).end_date THEN
                    IF FND_MSG_PUB.Check_Msg_Level
                      (FND_MSG_PUB.G_MSG_LVL_SUCCESS) THEN
                      pa_interface_utils_pub.map_new_amg_msg
                       ( p_old_message_code => 'PA_PR_INVALID_KM_DATES'
                        ,p_msg_attribute    => 'CHANGE'
                        ,p_resize_flag      => 'N'
                        ,p_msg_context      => 'PROJ'
                        ,p_attribute1       => l_project_rec.segment1
                        ,p_attribute2       => ''
                        ,p_attribute3       => ''
                        ,p_attribute4       => ''
                        ,p_attribute5       => '');
                         p_multiple_task_msg   := 'F';
--                       RAISE  FND_API.G_EXC_ERROR;
                    END IF;
                 END IF;
              END IF;

              pa_project_pvt.check_for_one_manager
                   (l_project_id,
                    p_key_members(i).person_id,
                    p_key_members,
                    p_key_members(i).start_date,
                    p_key_members(i).end_date,
                    l_return_status );

                IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR  THEN
                   p_return_status             := l_return_status;
                   p_project_out.return_status := l_return_status;
                   RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
                END IF;
             END IF;
             IF l_key_members_tbl.EXISTS(1) THEN
                l_count := l_key_members_tbl.COUNT + 1;
             ELSE
                l_count := 1;
             END IF;
             l_key_members_tbl(l_count) := p_key_members(i);

             /*Commented the below code for the bug 2910972 since the null
             value for the start date is handled in the pa_project_parties_pub.create_project_party*/

             /*IF l_key_members_tbl(l_count).start_date =
                PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE OR
                l_key_members_tbl(l_count).start_date IS NULL THEN
                l_key_members_tbl(l_count).start_date := TRUNC(SYSDATE);
             END IF;*/

             /*Bug#2910972-Adding the below code*/

              IF l_key_members_tbl(l_count).start_date =
                   PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                   l_key_members_tbl(l_count).start_date := NULL;
                END IF;

             /*Bug#2910972-End of addition*/

             IF l_key_members_tbl(l_count).end_date =
                PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                l_key_members_tbl(l_count).end_date := NULL;
             END IF;
          ELSE
               CLOSE l_key_member_csr;
                IF p_key_members(i).start_date <>
                   PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE AND
                   p_key_members(i).start_date IS NOT NULL THEN
                   IF p_key_members(i).start_date <>
                      NVL(l_key_members_rec.start_date_active,
                          PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) THEN
                      l_temp_start_date := p_key_members(i).start_date;
                   ELSE
                      l_temp_start_date := l_key_members_rec.start_date_active;
                   END IF;
                ELSE
                   l_temp_start_date := l_key_members_rec.start_date_active;
                END IF;
                IF p_key_members(i).end_date <>
                   PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE AND
                   p_key_members(i).end_date IS NOT NULL THEN
                   IF p_key_members(i).end_date <>
                      NVL(l_key_members_rec.end_date_active,
                          PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) THEN
                      l_temp_end_date := p_key_members(i).end_date;
                   ELSE
                      l_temp_end_date := l_key_members_rec.end_date_active;
                   END IF;
                ELSE
           /* Below if condition Added for bug 3234496 */
                   IF p_key_members(i).project_role_type = 'PROJECT MANAGER' THEN
                       l_temp_end_date := l_key_members_rec.end_date_active;
           ELSE
           /* Added code to null out the end date if not proj manager : for bug 3234496 */
               If p_key_members(i).end_date is null then
              l_temp_end_date := null;
               else
                  l_temp_end_date := l_key_members_rec.end_date_active;
               end if;
           END IF;
                END IF;
                IF l_temp_end_date < l_temp_start_date THEN
                   p_return_status := FND_API.G_RET_STS_ERROR;
                   IF FND_MSG_PUB.Check_Msg_Level
                     (FND_MSG_PUB.G_MSG_LVL_SUCCESS) THEN
                      pa_interface_utils_pub.map_new_amg_msg
                       ( p_old_message_code => 'PA_PR_INVALID_KM_DATES'
                        ,p_msg_attribute    => 'CHANGE'
                        ,p_resize_flag      => 'N'
                        ,p_msg_context      => 'PROJ'
                        ,p_attribute1       => l_project_rec.segment1
                        ,p_attribute2       => ''
                        ,p_attribute3       => ''
                        ,p_attribute4       => ''
                        ,p_attribute5       => '');
                         p_multiple_task_msg   := 'F';
                  END IF;
                END IF;
                IF (l_temp_start_date <>
                          NVL(l_key_members_rec.start_date_active,
                          PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE))
                      OR
                   (l_temp_end_date <>
                          NVL(l_key_members_rec.end_date_active,
                          PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE))
                     /* Added the below OR condition for bug 3234496 */
              OR
            (l_temp_end_date IS NULL AND l_key_members_rec.end_date_active IS NOT NULL)
          THEN
                   if p_multiple_task_msg <> 'F' then
/*
-- begin OLD code before changes for ROLE BASED SECURITY
                   UPDATE PA_PROJECT_PLAYERS SET
                          START_DATE_ACTIVE = l_temp_start_date,
                          END_DATE_ACTIVE   = l_temp_end_date
                   WHERE  ROWID             = l_key_members_rec.rowid;
-- end OLD code before changes for ROLE BASED SECURITY
*/
-- begin NEW code for ROLE BASED SECURITY
-- updating START_DATE_ACTIVE and END_DATE_ACTIVE of
-- PA_PROJECT_PLAYERS for the rowid in the cursor
   SELECT   COMPLETION_DATE
   INTO     v_completion_date
   FROM     pa_projects p
   WHERE    p.project_id = l_key_members_rec.project_id;
   /*Added the OR condition in the below statement for the bug 2846478*/
   if l_key_members_rec.scheduled_flag = 'N' OR l_key_members_rec.scheduled_flag IS NULL
   then
       PA_PROJECT_PARTIES_PUB.UPDATE_PROJECT_PARTY(
          p_api_version => 1.0                  -- p_api_version
          , p_init_msg_list => FND_API.G_TRUE   -- p_init_msg_list
          , p_commit => FND_API.G_FALSE          -- p_commit
          , p_validate_only => FND_API.G_FALSE  -- p_validate_only
          , p_validation_level => FND_API.G_VALID_LEVEL_FULL   -- p_validation_level
          , p_debug_mode => 'N'                 -- p_debug_mode
          , p_object_id => l_key_members_rec.project_id  -- p_object_id
          , p_OBJECT_TYPE => 'PA_PROJECTS'         -- p_OBJECT_TYPE
          , p_project_role_id => NULL  -------Bug 2100142l_key_members_rec.project_id   -- p_project_role_id
          , p_project_role_type => l_key_members_rec.project_role_type -- p_project_role_type
          , p_resource_type_id => l_key_members_rec.resource_type_id   -- p_resource_type_id
          , p_resource_source_id => l_key_members_rec.person_id   -- p_resource_source_id
          , p_resource_name => v_null_char      -- p_resource_name
          , p_start_date_active => l_temp_start_date   -- p_start_date_active
          , p_scheduled_flag => 'N'             -- p_scheduled_flag
          , p_record_version_number => l_key_members_rec.record_version_number --  p_record_version_number
          , p_calling_module => 'FORM'          -- p_calling_module
          , p_project_id => l_key_members_rec.project_id   -- p_project_id
          , p_project_end_date => v_completion_date   -- p_project_end_date
          , p_project_party_id => l_key_members_rec.project_party_id  -- p_project_party_id
          , p_end_date_active => l_temp_end_date      -- p_end_date_active
          , x_wf_type         => l_wf_type
          , x_wf_item_type    => l_wf_item_type
          , x_wf_process      => l_wf_process
          , x_assignment_id   => l_assignment_id
          , x_return_status => x_return_status  -- x_return_status
          , x_msg_count => x_msg_count          -- x_msg_count
          , x_msg_data => x_msg_data            -- x_msg_data
          );
      IF    (x_return_status <> FND_API.G_RET_STS_SUCCESS) Then
        p_return_status := x_return_status;
        p_msg_count     := x_msg_count;
        p_msg_data      := SUBSTR(p_msg_data||x_msg_data,1,2000);
                if    (x_return_status = FND_API.G_RET_STS_ERROR) then
                      raise  FND_API.G_EXC_UNEXPECTED_ERROR;
                else  -- (x_return_status =  FND_API.G_RET_STS_UNEXP_ERROR) then
                      raise  FND_API.G_EXC_ERROR;
                end if;
         END IF;
      end if;
-- end NEW code for ROLE BASED SECURITY

                   end if;
                END IF;
          END IF;
        END LOOP;

      IF p_multiple_task_msg = 'F'
      THEN
         RAISE  FND_API.G_EXC_ERROR;
      END IF;

       IF l_key_members_tbl.COUNT > 0 THEN
           PA_PROJECT_PVT.add_key_members (
              p_return_status         =>l_return_status,
              p_pa_source_template_id =>l_project_rec.created_from_project_id,
              p_project_id            =>l_project_id,
              p_key_members           =>l_key_members_tbl );
              IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR  THEN
                 p_return_status             := l_return_status;
                 p_project_out.return_status := l_return_status;
                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
              ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
                 p_return_status             := l_return_status;
                 p_project_out.return_status := l_return_status;
                RAISE  FND_API.G_EXC_ERROR;
              END IF;
       END IF;

      /* Start of code for bug #2111806
         Call the check_manager_date_range to check if the Project
     Manager exists for the complete duration of the Project. */
      pa_project_check_pvt.check_manager_date_range(p_project_id    =>  l_project_id
                               ,p_return_status =>  l_return_status);

      IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
        p_project_out.return_status := l_return_status;
    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN

    p_project_out.return_status := l_return_status;
        RAISE FND_API.G_EXC_ERROR;
      END IF;
      /* End of code for bug #2111806 */

 END IF;

 /* Start of code for bug #2111806
    Throw an error if there are no Project Managers assigned.
    This has to be thrown irrespective of whether there are any Key Member records
    being passed or not. So, it cannot be done in the above IF condition. */
 IF l_project_id IS NOT NULL THEN
 OPEN  c_prj(l_project_id);
 FETCH c_prj INTO l_proj_status, l_proj_type_class;
 CLOSE c_prj;
 END IF;

 /* The check has to be done only for an Approved Contract Type project. */
 IF (nvl(l_proj_type_class,'NONE') = 'CONTRACT' AND
     nvl(l_proj_status,'UNAPPROVED') = 'APPROVED') THEN
    OPEN c_prj_count(l_project_id);
    FETCH c_prj_count INTO l_prj_mgr_count;
    CLOSE c_prj_count;
    IF l_prj_mgr_count = 0 THEN
       IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
          pa_utils.add_message
        ( p_app_short_name   => 'PA'
         ,p_msg_name         => 'PA_PR_INSUF_PROJ_MGR'
        );
          RAISE FND_API.G_EXC_ERROR;
       END IF;
    END IF;
 END IF;
/* End of code for bug #2111806 */

--   ----------------------------------------

-- anlee org role changes
-- UPDATE org roles

   l_count := 0;
   j := p_org_roles.first;
   IF p_org_roles.exists(j) THEN

     FOR i in 1..p_org_roles.COUNT LOOP
          OPEN l_org_role_csr(l_project_id, p_org_roles(i).person_id,
                                p_org_roles(i).project_role_type );
          FETCH l_org_role_csr INTO l_org_roles_rec;
          IF l_org_role_csr%NOTFOUND THEN
             CLOSE l_org_role_csr;
             -- This means this is a new org role
             -- add this to the temp table which will be passed
             -- to add_org_roles

             IF l_org_roles_tbl.EXISTS(1) THEN
                l_count := l_org_roles_tbl.COUNT + 1;
             ELSE
                l_count := 1;
             END IF;
             l_org_roles_tbl(l_count) := p_org_roles(i);
             IF l_org_roles_tbl(l_count).start_date =
                PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE OR
                l_org_roles_tbl(l_count).start_date IS NULL THEN
                l_org_roles_tbl(l_count).start_date := TRUNC(SYSDATE);
             END IF;
             IF l_org_roles_tbl(l_count).end_date =
                PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
                l_org_roles_tbl(l_count).end_date := NULL;
             END IF;
          ELSE
               CLOSE l_org_role_csr;
                IF p_org_roles(i).start_date <>
                   PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE AND
                   p_org_roles(i).start_date IS NOT NULL THEN
                   IF p_org_roles(i).start_date <>
                      NVL(l_org_roles_rec.start_date_active,
                          PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) THEN
                      l_temp_start_date := p_org_roles(i).start_date;
                   ELSE

                      l_temp_start_date := l_org_roles_rec.start_date_active;
                   END IF;
                ELSE
                   l_temp_start_date := l_org_roles_rec.start_date_active;
                END IF;
                IF p_org_roles(i).end_date <>
                   PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE AND
                   p_org_roles(i).end_date IS NOT NULL THEN
                   IF p_org_roles(i).end_date <>
                      NVL(l_org_roles_rec.end_date_active,
                          PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) THEN
                      l_temp_end_date := p_org_roles(i).end_date;
                   ELSE
                      l_temp_end_date := l_org_roles_rec.end_date_active;
                   END IF;
                ELSE
                   l_temp_end_date := l_org_roles_rec.end_date_active;
                END IF;
                IF l_temp_end_date < l_temp_start_date THEN
                   p_return_status := FND_API.G_RET_STS_ERROR;
                   IF FND_MSG_PUB.Check_Msg_Level
                     (FND_MSG_PUB.G_MSG_LVL_SUCCESS) THEN
                      pa_interface_utils_pub.map_new_amg_msg
                       ( p_old_message_code => 'PA_PR_INVALID_OR_DATES'
                        ,p_msg_attribute    => 'CHANGE'
                        ,p_resize_flag      => 'N'
                        ,p_msg_context      => 'PROJ'
                        ,p_attribute1       => l_project_rec.segment1
                        ,p_attribute2       => ''
                        ,p_attribute3       => ''
                        ,p_attribute4       => ''
                        ,p_attribute5       => '');
                         p_multiple_task_msg   := 'F';
                  END IF;
                END IF;
                IF (l_temp_start_date <>
                          NVL(l_org_roles_rec.start_date_active,
                          PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE))
                      OR
                   (l_temp_end_date <>
                          NVL(l_org_roles_rec.end_date_active,
                          PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)) THEN
                   if p_multiple_task_msg <> 'F' then


   SELECT   COMPLETION_DATE
   INTO     v_completion_date
   FROM     pa_projects p
   WHERE    p.project_id = l_org_roles_rec.project_id;
   if l_org_roles_rec.scheduled_flag = 'N'
   then
       PA_PROJECT_PARTIES_PUB.UPDATE_PROJECT_PARTY(
          p_api_version => 1.0                  -- p_api_version
          , p_init_msg_list => FND_API.G_TRUE   -- p_init_msg_list
          , p_commit => FND_API.G_FALSE          -- p_commit
          , p_validate_only => FND_API.G_FALSE  -- p_validate_only
          , p_validation_level => FND_API.G_VALID_LEVEL_FULL   -- p_validation_level
          , p_debug_mode => 'N'                 -- p_debug_mode
          , p_object_id => l_org_roles_rec.project_id  -- p_object_id
          , p_OBJECT_TYPE => 'PA_PROJECTS'         -- p_OBJECT_TYPE
          , p_project_role_id => NULL  -------Bug 2100142l_key_members_rec.project_id   -- p_project_role_id
          , p_project_role_type => l_org_roles_rec.project_role_type -- p_project_role_type
          , p_resource_type_id => l_org_roles_rec.resource_type_id   -- p_resource_type_id
          , p_resource_source_id => l_org_roles_rec.resource_source_id   -- p_resource_source_id
          , p_resource_name => v_null_char      -- p_resource_name
          , p_start_date_active => l_temp_start_date   -- p_start_date_active
          , p_scheduled_flag => 'N'             -- p_scheduled_flag
          , p_record_version_number => l_org_roles_rec.record_version_number --  p_record_version_number
          , p_calling_module => 'FORM'          -- p_calling_module
          , p_project_id => l_org_roles_rec.project_id   -- p_project_id
          , p_project_end_date => v_completion_date   -- p_project_end_date
          , p_project_party_id => l_org_roles_rec.project_party_id  -- p_project_party_id
          , p_end_date_active => l_temp_end_date      -- p_end_date_active
          , x_wf_type         => l_wf_type
          , x_wf_item_type    => l_wf_item_type
          , x_wf_process      => l_wf_process
          , x_assignment_id   => l_assignment_id
          , x_return_status => x_return_status  -- x_return_status
          , x_msg_count => x_msg_count          -- x_msg_count
          , x_msg_data => x_msg_data            -- x_msg_data
          );
      IF    (x_return_status <> FND_API.G_RET_STS_SUCCESS) Then
        p_return_status := x_return_status;
        p_msg_count     := x_msg_count;
        p_msg_data      := SUBSTR(p_msg_data||x_msg_data,1,2000);
                if    (x_return_status = FND_API.G_RET_STS_ERROR) then
                      raise  FND_API.G_EXC_UNEXPECTED_ERROR;
                else  -- (x_return_status =  FND_API.G_RET_STS_UNEXP_ERROR) then
                      raise  FND_API.G_EXC_ERROR;
                end if;
         END IF;
      end if;

                   end if;
                END IF;
          END IF;
        END LOOP;

      IF p_multiple_task_msg = 'F'
      THEN
         RAISE  FND_API.G_EXC_ERROR;
      END IF;

       IF l_org_roles_tbl.COUNT > 0 THEN
           PA_PROJECT_PVT.add_org_roles (
              p_return_status         =>l_return_status,
              p_pa_source_template_id =>l_project_rec.created_from_project_id,
              p_project_id            =>l_project_id,
              p_org_roles           =>l_org_roles_tbl );
              IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR  THEN
                 p_return_status             := l_return_status;
                 p_project_out.return_status := l_return_status;
                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
              ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
                 p_return_status             := l_return_status;
                 p_project_out.return_status := l_return_status;
                RAISE  FND_API.G_EXC_ERROR;
              END IF;
       END IF;

 END IF;


--UPDATE class_categories

  i := p_class_categories.first;

  IF p_class_categories.exists(i) THEN

     WHILE i IS NOT NULL LOOP

       IF (p_class_categories(i).class_category <>
          PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) AND
          (p_class_categories(i).class_category IS NOT NULL )
       AND (p_class_categories(i).class_code <>
          PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) AND
          (p_class_categories(i).class_code IS NOT NULL ) THEN

           -- Start of Addition for bug 4191009
           class_code_tbl.delete();
           l_class_code := NULL;
           l_code_percentage := NULL;
           OPEN l_class_categories_csr (l_project_id,
                                        p_class_categories(i).class_category);
           FETCH l_class_categories_csr BULK COLLECT INTO class_code_tbl;

           If class_code_tbl.count<1 Then
                l_class_categories_tbl(i) := p_class_categories(i);
           Else
                for j in class_code_tbl.first..class_code_tbl.last Loop
                If class_code_tbl.exists(j) then
                      if class_code_tbl(j) = p_class_categories(i).class_code then
                         if (p_class_categories(i).new_class_code <>
                           PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) AND
                           (p_class_categories(i).new_class_code IS NOT NULL ) THEN -- 5348726 Added for bug#5294891
                             --remove the old class_code
                             DELETE FROM pa_project_classes
                              WHERE project_id   = l_project_id
                              AND   class_category   = p_class_categories(i).class_category
                              AND   class_code  = p_class_categories(i).class_code;

                             OPEN c_get_class_code_id(p_class_categories(i).class_category,
                                                     p_class_categories(i).class_code);
                             fetch c_get_class_code_id into l_old_class_code_id;
                             close c_get_class_code_id;

                             OPEN c_get_class_code_id(p_class_categories(i).class_category,
                                                     p_class_categories(i).new_class_code);
                             fetch c_get_class_code_id into l_new_class_code_id;
                             if c_get_class_code_id%notfound then
                                 IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                                 THEN
                                          pa_interface_utils_pub.map_new_amg_msg
                                           ( p_old_message_code => 'PA_INVALID_CLASS_CATEGORY'
                                           ,p_msg_attribute    => 'CHANGE'
                                           ,p_resize_flag      => 'N'
                                           ,p_msg_context      => 'PROJ'
                                           ,p_attribute1       => l_project_rec.segment1
                                           ,p_attribute2       => ''
                                           ,p_attribute3       => ''
                                           ,p_attribute4       => ''
                                           ,p_attribute5       => '');
                                 END IF;
                                 close c_get_class_code_id;
                                 RAISE FND_API.G_EXC_ERROR;
                             end if;
                             close c_get_class_code_id;

                             PA_USER_ATTR_PUB.DELETE_USER_ATTRS_DATA (
                                    p_validate_only             => FND_API.G_FALSE
                                    ,p_project_id                => l_project_id
                                    ,p_old_classification_id     => l_old_class_code_id
                                    ,p_new_classification_id     => l_new_class_code_id
                                    ,p_classification_type       => 'CLASS_CODE'
                                    ,x_return_status             => l_return_status
                                    ,x_msg_count                 => l_msg_count
                                    ,x_msg_data                  => l_msg_data );
                             l_msg_count := FND_MSG_PUB.count_msg;
                             IF l_msg_count > 0 THEN
                                 x_msg_count := l_msg_count;
                                 x_return_status := 'E';
                                 RAISE  FND_API.G_EXC_ERROR;
                             END IF;
                              --Add the new class code values to the temp table
                             l_class_categories_tbl(i) := p_class_categories(i);
                             l_class_categories_tbl(i).class_code := p_class_categories(i).new_class_code;
                         else -- 5348726 Added for bug#5294891
                            OPEN l_code_percentage_csr (l_project_id,
                                                p_class_categories(i).class_category,
                                                p_class_categories(i).class_code);
                            fetch l_code_percentage_csr into l_code_percentage;
                            If l_code_percentage = p_class_categories(i).code_percentage then
                              Null;
                            Else
                                --remove the old class_code
                                 DELETE FROM pa_project_classes
                                      WHERE project_id   = l_project_id
                                      AND   class_category   = p_class_categories(i).class_category
                                      AND   class_code  = p_class_categories(i).class_code;
                                    --and add the new values  to the temp table
                                     l_class_categories_tbl(i) := p_class_categories(i);
                            End if;
                            CLOSE l_code_percentage_csr;
                         end if;  -- 5348726 Added for bug#5294891
                         l_class_code := class_code_tbl(j);
                         exit;
                 end if;
        end if;
        end loop;
        if l_class_code is null then
            l_class_categories_tbl(i) := p_class_categories(i);
        end if;
      end if;
      CLOSE l_class_categories_csr;
    -- End of addition for bug 4191009

    /* Commented and altered as above for bug 4191009
       OPEN l_class_categories_csr (l_project_id,
                                        p_class_categories(i).class_category);
           FETCH l_class_categories_csr INTO l_class_code;

           IF l_class_categories_csr%NOTFOUND THEN
              l_class_categories_tbl(i) := p_class_categories(i);
           ELSE
                IF l_class_code = p_class_categories(i).class_code THEN
                --if new value for class_code is same as old do nothing
        NULL;
    ELSE
       --remove the old class_code
      DELETE FROM pa_project_classes
      WHERE project_id   = l_project_id
      AND   class_category   = p_class_categories(i).class_category
      AND   class_code  = l_class_code;
    --and add the new value for class_code to the temp table
    l_class_categories_tbl(i) := p_class_categories(i);
               END IF;
           END IF;

        CLOSE l_class_categories_csr;

  l_class_code := NULL;    Commented till here and altered as above for bug 4191009    */

     END IF;  --  IF (p_class_categories(i).class_category <>
                 --  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     i := p_class_categories.next(i);

  END LOOP;

 END IF; --  IF p_class_categories.exists(i)

   i := l_class_categories_tbl.first;

         IF l_class_categories_tbl.exists(i)
         THEN

            PA_PROJECT_PVT.add_class_categories ( p_return_status         =>l_return_status
                      , p_pa_source_template_id =>l_project_rec.created_from_project_id
                      , p_project_id            =>l_project_id
                      , p_class_categories      =>l_class_categories_tbl );

              IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR
              THEN

                 p_project_out.return_status := l_return_status;
                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

              ELSIF l_return_status = FND_API.G_RET_STS_ERROR
              THEN

                 p_project_out.return_status := l_return_status;
                 RAISE  FND_API.G_EXC_ERROR;

              END IF;
          END IF;

-- bug 4541103        CLOSE l_lock_rows_csr;  --FYI: doesn't remove locks
/*Customer Account Relationship Changes update bill to and Ship to customer ID*/

--bug 3716805
----dbms_output.put_line('Value OF p_project_in.bill_to_customer_id'||p_project_in.bill_to_customer_id);
----dbms_output.put_line('Value OF p_project_in.ship_to_customer_id'||p_project_in.ship_to_customer_id);
----dbms_output.put_line('Value OF p_project_in.customer_id'||p_project_in.customer_id);
----dbms_output.put_line('Value OF p_project_in.bill_to_address_id'||p_project_in.bill_to_address_id);
----dbms_output.put_line('Value OF p_project_in.ship_to_address_id'||p_project_in.ship_to_address_id);
------dbms_output.put_line('Value OF p_project_in.bill_to_customer_id'||p_project_in.bill_to_customer_id);

-- Added the following logic for updating the Project Relationship code. Bug#5131471
--Opened the following cursor because thru project record we can update only the attributes of an exsiting customer. We cannot add a new customer
--or over write the existing customer with a totally new customer.

IF ( p_project_in.customer_id IS NOT NULL AND p_project_in.customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) THEN -- check if the customer passed is not null and not mis num
   Open Cur_Customer(l_project_id,p_project_in.customer_id);
   Fetch Cur_Customer into Cur_Customer_rec;

   IF (Cur_Customer%FOUND) THEN

        If (p_project_in.project_relationship_code IS NOT NULL AND p_project_in.project_relationship_code <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN

                --dbms_output.put_line('three'||l_check_relationship_flag);
                OPEN  cur_customer_status(p_project_in.customer_id);
                FETCH cur_customer_status INTO l_cust_status;

                        IF (  cur_customer_status%NOTFOUND ) THEN
                                --dbms_output.put_line('five'||l_check_relationship_flag);
                                --passed customer does not exist
                                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                                            --Changed the error message from PA_CUSTOMER_NOT_EXIST to PA_CUSTOMER_ID_INVALID for Bug#5183150
                                            pa_utils.add_message
                                                        ( p_app_short_name   => 'PA'
                                                         ,p_msg_name         => 'PA_CUSTOMER_ID_INVALID'
                                                        );
                                END IF;
                                p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                                p_return_status             := FND_API.G_RET_STS_ERROR;
                                RAISE FND_API.G_EXC_ERROR;

                        ELSIF ( cur_customer_status%FOUND ) THEN
                                --dbms_output.put_line('four'||l_check_relationship_flag);
                                IF ( l_cust_status = 'I' ) THEN
                                        --customer is not active
                                        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                                           pa_utils.add_message
                                                        ( p_app_short_name   => 'PA'
                                                         ,p_msg_name         => 'PA_CUSTOMER_NOT_ACTIVE'
                                                         ,p_token1           => 'PROJECT_NAME'
                                                         ,p_value1           => l_project_rec.segment1
                                                         ,p_token2           => 'CUSTOMER_ID'
                                                         ,p_value2           => p_project_in.customer_id
                                                        );
                                        END IF;
                                        p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                                        p_return_status             := FND_API.G_RET_STS_ERROR;
                                        RAISE FND_API.G_EXC_ERROR;

                                ELSE  --customer id is not null and it is valid


                                                UPDATE pa_project_customers
                                                SET
                                                project_relationship_code = p_project_in.project_relationship_code
                                                WHERE
                                                customer_id     =       p_project_in.customer_id        AND
                                                project_id      =       l_project_id;

                                END IF;
                        END IF; -- if cur_customer_status%NOTFOUND
                CLOSE cur_customer_status;

        END IF; --Project relationship code is not null and not mis num

   END IF; --Cur_Customer%FOUND
   Close Cur_Customer;

END IF; --customer id is not passed as null or mis num

-- End of logic added for Bug#5131471 for updating the Project Relationship code.

    If (p_project_in.bill_to_customer_id IS NOT NULL AND p_project_in.bill_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
       OR (p_project_in.ship_to_customer_id IS NOT NULL AND p_project_in.ship_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
--bug 3716805
    THEN
     If p_project_in.customer_id IS NULL OR p_project_in.customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_CUSTOMER_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
    end if;

     Open Cur_Customer(l_project_id,p_project_in.customer_id);
     Fetch Cur_Customer into Cur_Customer_rec;
     Close Cur_Customer;

   l_bill_to_customer_id:=p_project_in.bill_to_customer_id;
   l_ship_to_customer_id:=p_project_in.ship_to_customer_id;
 --added for bug 3911782
   l_bill_to_address_id :=p_project_in.bill_to_address_id;
   l_ship_to_address_id :=p_project_in.ship_to_address_id;
   --changes end for Bug 3911782

/* Bug 3077676 Begin */

 -- Not adding this error message in get_customer_info as that is called from lot of other places too
 -- and it would be a risk changing that.

   OPEN get_cust_acc_rel_code;
   FETCH get_cust_acc_rel_code INTO l_cust_acc_rel_code;
   CLOSE get_cust_acc_rel_code;
/* Bug 3123361. Commenting the following validation as the complete validation of the below is done below before
   calling get_customer_info api.
   IF NVL(l_cust_acc_rel_code,'N') ='N'
           AND p_project_in.customer_id IS NOT NULL AND p_project_in.customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND p_project_in.bill_to_customer_id IS NOT NULL AND p_project_in.bill_to_customer_id   <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND p_project_in.ship_to_customer_id  IS NOT NULL AND p_project_in.ship_to_customer_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND p_project_in.customer_id <> p_project_in.bill_to_customer_id
       AND p_project_in.customer_id <> p_project_in.ship_to_customer_id
   THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_BILL_SHIP_CUST_INV'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => p_project_in.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
           RAISE FND_API.G_EXC_ERROR;
   END IF;
   */
/* Bug 3077676 End */

/* added OR condition so that PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM is taken care of for bug 3000293 */
   If (p_project_in.bill_to_customer_id is null or p_project_in.bill_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      and  Cur_Customer_rec.bill_to_customer_id is not null  Then
       l_bill_to_customer_id:= Cur_Customer_rec.bill_to_customer_id;
        --changes for bug 3911782
      If (p_project_in.bill_to_address_id is null or p_project_in.bill_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.bill_to_address_id is not null  Then
          l_bill_to_address_id:= Cur_Customer_rec.bill_to_address_id;
      End if;
    Else
      If (p_project_in.bill_to_address_id is null or p_project_in.bill_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.bill_to_address_id is not null  Then
          l_bill_to_address_id:= Cur_Customer_rec.bill_to_address_id;
       End if;
      --changes end for bug 3911782
   end if;

    If (p_project_in.ship_to_customer_id is null or p_project_in.ship_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      and  Cur_Customer_rec.ship_to_customer_id is not null  Then
       l_ship_to_customer_id:= Cur_Customer_rec.ship_to_customer_id;
        --changes for bug 3911782
      If (p_project_in.ship_to_address_id is null or p_project_in.ship_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.ship_to_address_id is not null  Then
          l_ship_to_address_id:= Cur_Customer_rec.ship_to_address_id;
      End if;
     Else
      If (p_project_in.ship_to_address_id is null or p_project_in.ship_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.ship_to_address_id is not null  Then
          l_ship_to_address_id:= Cur_Customer_rec.ship_to_address_id;
      End if;
       --changes end for bug 3911782
   end if;

 -- Bug 3123361. Bill to customer and ship to customer should be same as customer when passed and
   -- relations ship code is N.
----dbms_output.put_line('Value OF p_project_in.bill_to_address_id'||p_project_in.bill_to_address_id);
----dbms_output.put_line('Value OF p_project_in.ship_to_address_id'||p_project_in.ship_to_address_id);

    IF(NVL(l_cust_acc_rel_code,'N') ='N' and
      p_project_in.customer_id IS NOT NULL AND p_project_in.customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) and
    ((l_bill_to_customer_id IS NOT NULL AND l_bill_to_customer_id   <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      p_project_in.customer_id <> l_bill_to_customer_id
     ) or
     (
      l_ship_to_customer_id  IS NOT NULL AND l_ship_to_customer_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      p_project_in.customer_id <> l_ship_to_customer_id
    ))
   THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_BILL_SHIP_CUST_INV'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
           RAISE FND_API.G_EXC_ERROR;
   END IF;

     pa_customer_info.get_customer_info( X_project_ID                   => l_project_id,
                                         X_Customer_Id                  => p_project_in.customer_id
                                        ,X_Bill_To_Customer_Id          => l_bill_to_customer_id
                                        ,X_Ship_To_Customer_Id          => l_ship_to_customer_id
                                        ,X_Bill_To_Address_Id           => l_bill_to_address_id
                                        ,X_Ship_To_Address_Id           => l_ship_to_address_id
                                        ,X_Bill_To_Contact_Id           => l_bill_to_contact_id
                                        ,X_Ship_To_Contact_Id           => l_ship_to_contact_id
                                        ,X_Err_Code                     => l_err_code
                                        ,X_Err_Stage                    => l_err_stage
                                        ,X_Err_Stack                    => l_err_stack
                                        ,p_calling_module               => 'AMG' --added for bug#4770535
                                       );

--dbms_output.put_line('Value OF l_bill_to_customer_id'||l_bill_to_customer_id);
--dbms_output.put_line('Value OF l_ship_to_customer_id'||l_ship_to_customer_id);
--dbms_output.put_line('Value OF l_bill_to_address_id'||l_bill_to_address_id);
--dbms_output.put_line('Value OF l_ship_to_address_id'||l_ship_to_address_id);
--dbms_output.put_line('Value OF l_bill_to_contact_id'||l_bill_to_contact_id);
--dbms_output.put_line('Value OF l_ship_to_contact_id'||l_ship_to_contact_id);
    -- For this API,error code 10 is a warning.Anything above 10 is an error
        IF l_err_code > 10
        THEN

                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN

                        IF NOT pa_project_pvt.check_valid_message(l_err_stage)
                        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_GET_CUSTOMER_INFO_FAILED'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
         ELSE
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => l_err_stage
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                        END IF;

                END IF;

                p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                RAISE FND_API.G_EXC_ERROR;

          ELSIF l_err_code < 0
        THEN

                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
                THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_GET_CUSTOMER_INFO_FAILED'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                END IF;

                p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

/* Update the project customer information */
----dbms_output.put_line('before update ');
             Update Pa_project_customers
             Set bill_to_customer_id=l_bill_to_customer_id,
                 ship_to_customer_id=l_ship_to_customer_id,
                 Bill_To_Address_Id =l_bill_to_address_id,
                 Ship_to_address_id =l_ship_to_address_id
             where project_id=l_project_id
             and customer_id=p_project_in.customer_id;

 If p_project_in.bill_to_customer_id is not null and  p_project_in.bill_to_customer_id <> cur_customer_rec.bill_to_customer_id THEN
        Delete pa_project_contacts
        where Project_Id=l_project_id
        and customer_id=p_project_in.customer_id
        and Project_Contact_Type_Code='BILLING';

end if;

If p_project_in.ship_to_customer_id is not null and  p_project_in.ship_to_customer_id <> cur_customer_rec.bill_to_customer_id THEN
        Delete pa_project_contacts
        where Project_Id=l_project_id
        and customer_id=p_project_in.customer_id
        and Project_Contact_Type_Code='SHIPPING';

  end if;


 end if;

-- 4188765 l_project_rec.enable_top_task_customer_flag cursor value is a pointer so it reflects the updated value
-- using the local variable instead of cursor variable

/** Below code added for bug 3279981. Customer at Top Task in FP_M  */
--IF 'Y' = p_project_in.enable_top_task_customer_flag AND 'N' = l_project_rec.enable_top_task_customer_flag THEN -- 4188765 commented
IF 'Y' = p_project_in.enable_top_task_customer_flag AND 'N' = l_old_cust_top_task_flag THEN -- 4188765 added
--Enabling the customer at top task flag. Thus, we need to set the default top task customer
     DECLARE
          hghst_ctr_cust_id NUMBER;
          hghst_ctr_cust_name hz_parties.party_name%TYPE;   --VARCHAR2(50); Bug 5622539
          hghst_ctr_cust_num  hz_parties.party_number%TYPE; --VARCHAR2(30); Bug 5622539

          l_return_status VARCHAR2(10);
          l_msg_count     NUMBER := 0;
          l_msg_data      VARCHAR2(2000);
          l_exclude_cust_id_tbl   PA_PLSQL_DATATYPES.NumTabTyp;
     BEGIN
          -- l_exclude_cust_id_tbl(1) := 0; Bug 5622539
          --Retrieve the customer to be set as the default top task customer
          pa_top_task_cust_invoice_pvt.Get_Highest_Contr_Cust(
                                           P_API_VERSION            => 1.0
                                         , P_INIT_MSG_LIST          => 'T'
                                         , P_COMMIT                 => 'F'
                                         , P_VALIDATE_ONLY          => 'F'
                                         , P_VALIDATION_LEVEL       => FND_API.G_VALID_LEVEL_FULL -- 100 Bug 5622539
                                         , P_DEBUG_MODE             => 'N'
                                         , p_calling_module         => 'AMG'
                                         , p_project_id             => l_project_id
                                         , p_exclude_cust_id_tbl    => l_exclude_cust_id_tbl
                                         , x_highst_contr_cust_id   => hghst_ctr_cust_id
                                         , x_highst_contr_cust_name => hghst_ctr_cust_name
                                         , x_highst_contr_cust_num  => hghst_ctr_cust_num
                                         , x_return_status          => l_return_status
                                         , x_msg_count              => l_msg_count
                                         , x_msg_data               => l_msg_data );

	  -- Bug 5622539
          if l_return_status <> FND_API.G_RET_STS_SUCCESS then
            l_msg_count := FND_MSG_PUB.count_msg;
            if l_msg_count = 1 then
                PA_INTERFACE_UTILS_PUB.get_messages
                  (p_encoded        => FND_API.G_FALSE,
                   p_msg_index      => 1,
                   p_msg_count      => l_msg_count,
                   p_msg_data       => l_msg_data,
                   p_data           => l_msg_data,
                   p_msg_index_out  => l_msg_index_out);

            end if;
            If l_return_status = FND_API.G_RET_STS_ERROR THEN
                   p_project_out.return_status := l_return_status;
                   RAISE FND_API.G_EXC_ERROR;
            else
                   p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
            END if;
          end if;
         -- Bug 5622539

          IF hghst_ctr_cust_id IS NOT null THEN
                --This API call will update pa_project_customers and pa_tasks
                 pa_top_task_cust_invoice_pvt.enbl_disbl_cust_at_top_task(
                                                      P_API_VERSION            => 1.0
                                                    , P_INIT_MSG_LIST          => 'T'
                                                    , P_COMMIT                 => 'F'
                                                    , P_VALIDATE_ONLY          => 'F'
                                                    , P_VALIDATION_LEVEL       => FND_API.G_VALID_LEVEL_FULL -- 100 Bug 5622539
                                                    , P_DEBUG_MODE             => 'N'
                                                    , p_calling_module         => 'AMG'
                                                    , p_mode                   => 'ENABLE'
                                                    , p_project_id             => l_project_id
                                                    , p_def_top_task_cust      => hghst_ctr_cust_id
                                                    , p_contr_update_cust      => null
                                                    , x_return_status          => l_return_status
                                                    , x_msg_count              => l_msg_count
                                                    , x_msg_data               => l_msg_data );

		-- Bug 5622539
                if l_return_status <> FND_API.G_RET_STS_SUCCESS then
                    l_msg_count := FND_MSG_PUB.count_msg;
                    if l_msg_count = 1 then
                        PA_INTERFACE_UTILS_PUB.get_messages
                        (p_encoded        => FND_API.G_FALSE,
                        p_msg_index      => 1,
                        p_msg_count      => l_msg_count,
                        p_msg_data       => l_msg_data,
                        p_data           => l_msg_data,
                        p_msg_index_out  => l_msg_index_out);

                    end if;
                    If l_return_status = FND_API.G_RET_STS_ERROR THEN
                        p_project_out.return_status := l_return_status;
                        RAISE FND_API.G_EXC_ERROR;
                    else
                        p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                    END if;
                end if;
                -- Bug 5622539

          END IF;
     END ;
END IF;

--IF 'N' = p_project_in.enable_top_task_customer_flag AND 'Y' = l_project_rec.enable_top_task_customer_flag THEN -- 4188765 Commented
IF 'N' = p_project_in.enable_top_task_customer_flag AND 'Y' = l_old_cust_top_task_flag THEN -- 4188765 Added
--Disabling the customer at top task flag. Thus, we need to set the customer bill split for the project customers
     DECLARE
          cust_id                PA_PROJECT_CUSTOMERS.customer_id%TYPE;
          hghst_ctr_cust_id      NUMBER;
           hghst_ctr_cust_name hz_parties.party_name%TYPE;  --VARCHAR2(50); Bug 5622539
          hghst_ctr_cust_num  hz_parties.party_number%TYPE; --VARCHAR2(30); Bug 5622539
         -- num_customers          NUMBER := 0; bug 5622539
          l_exclude_cust_id_tbl   PA_PLSQL_DATATYPES.NumTabTyp;

          l_return_status VARCHAR2(10);
          l_msg_count     NUMBER := 0;
          l_msg_data      VARCHAR2(2000);
          CURSOR cur_get_def_top_task_cust IS
          SELECT customer_id
          FROM   pa_project_customers
          WHERE  project_id = l_project_id
          AND    default_top_task_cust_flag = 'Y' ;
     BEGIN
        -- l_exclude_cust_id_tbl(1) := 0; Bug 5622539
         --Retrieve the customer to be updated with 100% contribution
         pa_top_task_cust_invoice_pvt.Get_Highest_Contr_Cust(
                                           P_API_VERSION            => 1.0
                                         , P_INIT_MSG_LIST          => 'T'
                                         , P_COMMIT                 => 'F'
                                         , P_VALIDATE_ONLY          => 'F'
                                         , P_VALIDATION_LEVEL       => FND_API.G_VALID_LEVEL_FULL --100 bug 5622539
                                         , P_DEBUG_MODE             => 'N'
                                         , p_calling_module         => 'AMG'
                                         , p_project_id             => l_project_id
                                         , p_exclude_cust_id_tbl    => l_exclude_cust_id_tbl
                                         , x_highst_contr_cust_id   => hghst_ctr_cust_id
                                         , x_highst_contr_cust_name => hghst_ctr_cust_name
                                         , x_highst_contr_cust_num  => hghst_ctr_cust_num
                                         , x_return_status          => l_return_status
                                         , x_msg_count              => l_msg_count
                                         , x_msg_data               => l_msg_data );

          -- Bug 5622539
            if l_return_status <> FND_API.G_RET_STS_SUCCESS then
                l_msg_count := FND_MSG_PUB.count_msg;
                if l_msg_count = 1 then
                    PA_INTERFACE_UTILS_PUB.get_messages
                    (p_encoded        => FND_API.G_FALSE,
                    p_msg_index      => 1,
                    p_msg_count      => l_msg_count,
                    p_msg_data       => l_msg_data,
                    p_data           => l_msg_data,
                    p_msg_index_out  => l_msg_index_out);

                end if;
                If l_return_status = FND_API.G_RET_STS_ERROR THEN
                    p_project_out.return_status := l_return_status;
                    RAISE FND_API.G_EXC_ERROR;
                else
                    p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                END if;
            end if;
          -- Bug 5622539
          OPEN  cur_get_def_top_task_cust;
          FETCH cur_get_def_top_task_cust INTO cust_id;
          CLOSE cur_get_def_top_task_cust;

          IF hghst_ctr_cust_id IS NOT NULL THEN
                --This API call will update pa_project_customers and pa_tasks
                 pa_top_task_cust_invoice_pvt.enbl_disbl_cust_at_top_task(
                                                      P_API_VERSION            => 1.0
                                                    , P_INIT_MSG_LIST          => 'T'
                                                    , P_COMMIT                 => 'F'
                                                    , P_VALIDATE_ONLY          => 'F'
                                                    , P_VALIDATION_LEVEL       => FND_API.G_VALID_LEVEL_FULL -- 100 Bug 5622539
                                                    , P_DEBUG_MODE             => 'N'
                                                    , p_calling_module         => 'AMG'
                                                    , p_mode                   => 'DISABLE'
                                                    , p_project_id             => l_project_id
                                                    , p_def_top_task_cust      => cust_id
                                                    , p_contr_update_cust      => hghst_ctr_cust_id
                                                    , x_return_status          => l_return_status
                                                    , x_msg_count              => l_msg_count
                                                    , x_msg_data               => l_msg_data );

                      -- Bug 5622539
                 if l_return_status <> FND_API.G_RET_STS_SUCCESS then
                    l_msg_count := FND_MSG_PUB.count_msg;
                    if l_msg_count = 1 then
                        PA_INTERFACE_UTILS_PUB.get_messages
                        (p_encoded        => FND_API.G_FALSE,
                        p_msg_index      => 1,
                        p_msg_count      => l_msg_count,
                        p_msg_data       => l_msg_data,
                        p_data           => l_msg_data,
                        p_msg_index_out  => l_msg_index_out);

                    end if;
                    If l_return_status = FND_API.G_RET_STS_ERROR THEN
                        p_project_out.return_status := l_return_status;
                        RAISE FND_API.G_EXC_ERROR;
                    else
                        p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                    END if;
                 end if;
              -- Bug 5622539
          END IF;
     END;
END IF;

------------------------------------------------------------------------------------------------------------
/* This code is newly added.It has few checks that were present in the initial code for p_project_in_rec_type.
customer_id and few new validation of code.  The above code is left untouched as it would have caused regression otherwise.
We continue to support updation of single customer record via p_project_in_rec_type.customer_id. */
-----------------------------------------------------------------------------------------------------------
----dbms_output.put_line('The control comes till this point');
/* Tracking bug ..customer code added in a loop */
i := p_customers_in.first;
IF p_customers_in.exists(i) THEN
   WHILE i IS NOT NULL LOOP
      --dbms_output.put_line('if CUSTOMER ARE PASSED TO UPDATE_PROJECT ');
      --dbms_output.put_line('p_customers_in(i).PROJECT_RELATIONSHIP_CODE'||p_customers_in(i).PROJECT_RELATIONSHIP_CODE);
-- All this should be done in a loop **/ ADITI_START

/*Customer Account Relationship Changes update bill to and Ship to customer ID*/

--bug 3716805
   /* Commented for tracking Bug
   If (p_project_in.bill_to_customer_id IS NOT NULL AND p_project_in.bill_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
       OR (p_project_in.ship_to_customer_id IS NOT NULL AND p_project_in.ship_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
--bug 3716805
    THEN
     If p_project_in.customer_id IS NULL OR p_project_in.customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_CUSTOMER_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
    end if;*/

 /** changed FROM p_project_in.customer_id to p_customers_in(i).custmer_id in all places **/
    If (p_customers_in(i).bill_to_customer_id IS NOT NULL AND p_customers_in(i).bill_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
       OR (p_customers_in(i).ship_to_customer_id IS NOT NULL AND p_customers_in(i).ship_to_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
        OR (p_customers_in(i).CONTACT_ID IS NOT NULL AND p_customers_in(i).CONTACT_ID <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)--added for tracking bug by aditi
--bug 3716805
    THEN
     --dbms_output.put_line('comes into karthiks 0th else');
      If p_customers_in(i).customer_id IS NULL OR p_customers_in(i).customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
            pa_interface_utils_pub.map_new_amg_msg
            ( p_old_message_code => 'PA_CUSTOMER_ID_IS_NULL'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => l_project_in_rec.pm_project_reference
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => '');
            END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
    end if;
--dbms_output.put_line('comes into karthiks 0th end if');
End if; --added by aditi for tracking bug -- FOR CUSTOMER ISSUE

   /* Bug 3077676 Begin */

 -- Not adding this error message in get_customer_info as that is called from lot of other places too
 -- and it would be a risk changing that.
   OPEN get_cust_acc_rel_code;
   FETCH get_cust_acc_rel_code INTO l_cust_acc_rel_code;
   CLOSE get_cust_acc_rel_code;

   /* Moved cursor get_cust_acc_rel_code from below to above for tracking bug */



   --Open Cur_Customer(l_project_id,p_project_in.customer_id); --Commented for tracking bug
     Open Cur_Customer(l_project_id,p_customers_in(i).customer_id); --Added for tracking Bug
     Fetch Cur_Customer into Cur_Customer_rec;
     If Cur_Customer%NOTFOUND THEN --added for tracking
     Close Cur_Customer;
   -- This means this is a new customer
     -- add this to the temp table which will be
--dbms_output.put_line('comes into free portion');
--dbms_output.put_line('p_customers_in(i).customer_id'||p_customers_in(i).customer_id);
IF p_customers_in(i).customer_id IS NOT NULL AND p_customers_in(i).customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
    --dbms_output.put_line('comes into karthiks 1st else');
       IF p_customers_in(i).project_relationship_code IS NULL OR
        p_customers_in(i).project_relationship_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN
                       pa_utils.add_message
                        ( p_app_short_name   => 'PA'-- using existing message for AA TRACKING
                         ,p_msg_name    => 'PA_RELATIONSHIP_CODE_REQD'
                         ,p_token1           => 'PROJECT_NAME'
                         ,p_value1           => l_project_rec.segment1
                         ,p_token2           => 'CUSTOMER_ID'
                         ,p_value2           => p_customers_in(i).customer_id
                        );
                END IF;
                p_multiple_task_msg := 'F';
                RAISE FND_API.G_EXC_ERROR;
       END IF;

      -- below if condition is added Bug 5622539
      IF ((l_enable_top_task_cust_flag='Y' and p_project_in.enable_top_task_customer_flag <> 'Y') or
            (l_enable_top_task_cust_flag='N' and NVL(l_old_cust_top_task_flag, 'N') <> 'Y')) then
      IF p_customers_in(i).CUSTOMER_BILL_SPLIT IS NULL OR
        p_customers_in(i).CUSTOMER_BILL_SPLIT = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
          IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
               pa_utils.add_message
                ( p_app_short_name   => 'PA'-- new message for AA TRACKING
                 ,p_msg_name    => 'PA_CUST_BILL_SPLIT_REQD'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_rec.segment1
                 ,p_token2           => 'CUSTOMER_ID'
                 ,p_value2           => p_customers_in(i).customer_id
                );
             END IF;
             p_multiple_task_msg := 'F';
             RAISE FND_API.G_EXC_ERROR;
       ELSE
        PA_CUSTOMERS_CONTACTS_UTILS.CHECK_CONTRIBUTION_PERCENTAGE
         ( p_customer_bill_split => p_customers_in(i).CUSTOMER_BILL_SPLIT
          ,x_return_status       => l_return_status
          ,x_error_msg_code      => l_error_msg_code);
          If l_return_status <> FND_API.G_RET_STS_SUCCESS then
           pa_utils.add_message
                ( p_app_short_name   => 'PA' --TRACKING
                 ,p_msg_name    => 'PA_CUST_BILL_SPLIT_INVALID'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_rec.segment1
                 ,p_token2           => 'CUSTOMER_ID'
                 ,p_value2           => p_customers_in(i).customer_id
                );
             /* Fix for bug 4604087 */
             p_multiple_task_msg := 'F';
             RAISE FND_API.G_EXC_ERROR;
           END IF;

      END IF;
END IF;
    -- added by aditi for tracking bug -- FOR CUSTOMER ISSUE
    ----dbms_output.put_line('Value of p_project_in.customer_id'||p_customers_in(i).customer_id);
    /* OLD code be4 tracking again */
/* Coomented the code below and added new code for tracking bug
   l_bill_to_customer_id:=p_project_in.bill_to_customer_id;
   l_ship_to_customer_id:=p_project_in.ship_to_customer_id;
 --added for bug 3911782
   l_bill_to_address_id :=p_project_in.bill_to_address_id;
   l_ship_to_address_id :=p_project_in.ship_to_address_id;
   --changes end for Bug 3911782*/
    l_bill_to_customer_id:=p_customers_in(i).bill_to_customer_id;
   l_ship_to_customer_id:=p_customers_in(i).ship_to_customer_id;
 --added for bug 3911782
   l_bill_to_address_id :=p_customers_in(i).bill_to_address_id;
   l_ship_to_address_id :=p_customers_in(i).ship_to_address_id;
   l_project_relationship_code := p_customers_in(i).PROJECT_RELATIONSHIP_CODE;
   l_customer_bill_split := p_customers_in(i).Customer_Bill_Split;
   -- Added for Bug 5622539
   If (l_customer_bill_split is null or
        l_customer_bill_split = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
   then
        l_customer_bill_split:=0;
   end if;

   ----dbms_output.put_line('Value of l_bill_to_customer_id'||l_bill_to_customer_id);
   ----dbms_output.put_line('Value of l_ship_to_customer_id'||l_ship_to_customer_id);
   ----dbms_output.put_line('Value of l_bill_to_address_id'||l_bill_to_address_id);
   ----dbms_output.put_line('Value of l_ship_to_address_id'||l_ship_to_address_id);




/* Bug 3123361. Commenting the following validation as the complete validation of the below is done below before
   calling get_customer_info api.
   IF NVL(l_cust_acc_rel_code,'N') ='N'
           AND p_project_in.customer_id IS NOT NULL AND p_project_in.customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND p_project_in.bill_to_customer_id IS NOT NULL AND p_project_in.bill_to_customer_id   <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND p_project_in.ship_to_customer_id  IS NOT NULL AND p_project_in.ship_to_customer_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
       AND p_project_in.customer_id <> p_project_in.bill_to_customer_id
       AND p_project_in.customer_id <> p_project_in.ship_to_customer_id
   THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_BILL_SHIP_CUST_INV'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => p_project_in.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
           RAISE FND_API.G_EXC_ERROR;
   END IF;
   */
/* Bug 3077676 End */

/* added OR condition so that PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM is taken care of for bug 3000293 */
/* For a New RECORD this code IS redundant by aditi for tracking
   If (p_project_in.bill_to_customer_id is null or p_project_in.bill_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      and  Cur_Customer_rec.bill_to_customer_id is not null  Then
       l_bill_to_customer_id:= Cur_Customer_rec.bill_to_customer_id;
        --changes for bug 3911782
      If (p_project_in.bill_to_address_id is null or p_project_in.bill_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.bill_to_address_id is not null  Then
          l_bill_to_address_id:= Cur_Customer_rec.bill_to_address_id;
      End if;
    Else
      If (p_project_in.bill_to_address_id is null or p_project_in.bill_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.bill_to_address_id is not null  Then
          l_bill_to_address_id:= Cur_Customer_rec.bill_to_address_id;
       End if;
      --changes end for bug 3911782
   end if;

    If (p_project_in.ship_to_customer_id is null or p_project_in.ship_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      and  Cur_Customer_rec.ship_to_customer_id is not null  Then
       l_ship_to_customer_id:= Cur_Customer_rec.ship_to_customer_id;
        --changes for bug 3911782
      If (p_project_in.ship_to_address_id is null or p_project_in.ship_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.ship_to_address_id is not null  Then
          l_ship_to_address_id:= Cur_Customer_rec.ship_to_address_id;
      End if;
     Else
      If (p_project_in.ship_to_address_id is null or p_project_in.ship_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.ship_to_address_id is not null  Then
          l_ship_to_address_id:= Cur_Customer_rec.ship_to_address_id;
      End if;
       --changes end for bug 3911782
   end if;
/* THIS WHOLE CODE IS COMMENTED FOR TRACKING BUG */
 -- Bug 3123361. Bill to customer and ship to customer should be same as customer when passed and
   -- relations ship code is N.
----dbms_output.put_line('Value of p_customers_in(i).customer_id'||p_customers_in(i).customer_id);
----dbms_output.put_line('Value of l_bill_to_customer_id'||l_bill_to_customer_id);
----dbms_output.put_line('Value of l_ship_to_customer_id'||l_ship_to_customer_id);

   /* IF(NVL(l_cust_acc_rel_code,'N') ='N' and
      p_project_in.customer_id IS NOT NULL AND p_project_in.customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) and
    ((l_bill_to_customer_id IS NOT NULL AND l_bill_to_customer_id   <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      p_project_in.customer_id <> l_bill_to_customer_id
     ) or
     (
      l_ship_to_customer_id  IS NOT NULL AND l_ship_to_customer_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      p_project_in.customer_id <> l_ship_to_customer_id
    )) This coce is commented as the code is being called in loop for tracking issue*/

    IF(NVL(l_cust_acc_rel_code,'N') ='N' and
      p_customers_in(i).customer_id IS NOT NULL AND p_customers_in(i).customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) and
    ((l_bill_to_customer_id IS NOT NULL AND l_bill_to_customer_id   <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      p_customers_in(i).customer_id <> l_bill_to_customer_id
     ) or
     (
      l_ship_to_customer_id  IS NOT NULL AND l_ship_to_customer_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      p_customers_in(i).customer_id <> l_ship_to_customer_id
    ))

   THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_BILL_SHIP_CUST_INV'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
           RAISE FND_API.G_EXC_ERROR;
   END IF;
  /** changes begin for tracking bug by aditi **/

   ----dbms_output.put_line('value of p_project_in.CONTACT_ID '||p_customers_in(i).CONTACT_ID);
   If (p_customers_in(i).CONTACT_ID IS NOT NULL) AND (p_customers_in(i).CONTACT_ID <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      then


         IF (p_customers_in(i).PROJECT_CONTACT_TYPE_CODE IS NULL) OR (p_customers_in(i).PROJECT_CONTACT_TYPE_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )THEN
           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
               pa_utils.add_message
              ( p_app_short_name   => 'PA'-- existing message for tracking bug
                 ,p_msg_name    => 'PA_CONTACT_TYPE_REQD'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_in_rec.pm_project_reference
                 ,p_token2           => 'CUSTOMER_ID'
                 ,p_value2           => p_customers_in(i).customer_id
                 ,p_token3           => 'CONTACT_ID'
                 ,p_value3           => p_customers_in(i).CONTACT_ID
              );
           END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
         END IF;
     end if;
      If  p_customers_in(i).PROJECT_CONTACT_TYPE_CODE = 'BILLING' then
        l_bill_to_contact_id := p_customers_in(i).CONTACT_ID;
	l_ship_to_contact_id := NULL; -- Bug 5622539
      ElsIf p_customers_in(i).PROJECT_CONTACT_TYPE_CODE = 'SHIPPING' then
        l_ship_to_contact_id := p_customers_in(i).CONTACT_ID;
	l_bill_to_contact_id := NULL; -- Bug 5622539
      Else
        l_bill_to_contact_id := NULL;
        l_ship_to_contact_id := NULL;
      End If;
      /** end of chnages for tracking bug by aditi **/
----dbms_output.put_line('Before calling pa_customer_info.get_customer_info');
----dbms_output.put_line('Value of l_bill_to_contact_id '||l_bill_to_contact_id);
----dbms_output.put_line('Value of l_ship_to_contact_id '||l_ship_to_contact_id);

/* Start of changes for bug 5482997 */

      IF l_bill_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
         l_bill_to_customer_id := NULL;
      END IF;

      IF l_ship_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
         l_ship_to_customer_id := NULL;
      END IF;

/* End of changes for bug 5482997 */


     pa_customer_info.get_customer_info( X_project_ID           => l_project_id,
                                         X_Customer_Id          => p_customers_in(i).customer_id -- p_project_in.customer_id tracking
                                        ,X_Bill_To_Customer_Id  => l_bill_to_customer_id
                                        ,X_Ship_To_Customer_Id  => l_ship_to_customer_id
                                        ,X_Bill_To_Address_Id   => l_bill_to_address_id
                                        ,X_Ship_To_Address_Id   => l_ship_to_address_id
                                        ,X_Bill_To_Contact_Id   => l_bill_to_contact_id
                                        ,X_Ship_To_Contact_Id   => l_ship_to_contact_id
                                        ,X_Err_Code             => l_err_code
                                        ,X_Err_Stage            => l_err_stage
                                        ,X_Err_Stack            => l_err_stack
                                        ,p_calling_module       => 'AMG' --Added for Bug#4770535
                                       );

----dbms_output.put_line('After calling pa_customer_info.get_customer_info'||l_err_code);
--dbms_output.put_line('Value of l_bill_to_address_id '||l_bill_to_address_id);
--dbms_output.put_line('Value of l_ship_to_address_id '||l_ship_to_address_id);

    -- For this API,error code 10 is a warning.Anything above 10 is an error
        IF l_err_code > 10
        THEN

                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN

                        IF NOT pa_project_pvt.check_valid_message(l_err_stage)
                        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_GET_CUSTOMER_INFO_FAILED'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
         ELSE
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => l_err_stage
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                        END IF;

                END IF;

                p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                RAISE FND_API.G_EXC_ERROR;

          ELSIF l_err_code < 0
        THEN

                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
                THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_GET_CUSTOMER_INFO_FAILED'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                END IF;

                p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

/* Update the project customer information */
/* The code below is also redundant for a new customer
             Update Pa_project_customers
             Set bill_to_customer_id=l_bill_to_customer_id,
                 ship_to_customer_id=l_ship_to_customer_id,
                 Bill_To_Address_Id =l_bill_to_address_id,
                 Ship_to_address_id =l_ship_to_address_id
             where project_id=l_project_id
             and customer_id=p_project_in.customer_id;

 If p_project_in.bill_to_customer_id is not null and  p_project_in.bill_to_customer_id <> cur_customer_rec.bill_to_customer_id THEN
        Delete pa_project_contacts
        where Project_Id=l_project_id
        and customer_id=p_project_in.customer_id
        and Project_Contact_Type_Code='BILLING';

end if;

If p_project_in.ship_to_customer_id is not null and  p_project_in.ship_to_customer_id <> cur_customer_rec.bill_to_customer_id THEN
        Delete pa_project_contacts
        where Project_Id=l_project_id
        and customer_id=p_project_in.customer_id
        and Project_Contact_Type_Code='SHIPPING';

  end if; END of COmmented Code for tracking */
/* Added the call to PA_CUSTOMERS_CONTACTS_PUB.CREATE_PROJECT_CUSTOMER so that
the validations done at form level are also done when customer is created via AMG API */
----dbms_output.put_line('Before calling CREATE_PROJECT_CUSTOMER');
----dbms_output.put_line('Value of l_bill_to_customer_id'||l_bill_to_customer_id);
----dbms_output.put_line('Value of l_ship_to_customer_id'||l_ship_to_customer_id);



-- bug 5554475

   l_ALLOW_INV_USER_RATE_FLAG   := p_customers_in(i).ALLOW_INV_USER_RATE_TYPE_FLAG  ;
   l_INV_RATE_DATE		:= p_customers_in(i).INV_RATE_DATE   ;
   l_INV_RATE_TYPE		:= p_customers_in(i).INV_RATE_TYPE;
   l_INV_CURRENCY_CODE		:= p_customers_in(i).INV_CURRENCY_CODE ;
   l_INV_EXCHANGE_RATE		:= p_customers_in(i).INV_EXCHANGE_RATE ;



   If l_ALLOW_INV_USER_RATE_FLAG = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR or l_ALLOW_INV_USER_RATE_FLAG IS NULL then
           l_ALLOW_INV_USER_RATE_FLAG := 'N';
   end if;



   if l_INV_RATE_TYPE is not null and l_INV_RATE_TYPE <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then

           begin
           l_USER_INV_RATE_TYPE:=l_INV_RATE_TYPE;
           select conversion_type into l_INV_RATE_TYPE
           from pa_conversion_types_v
           where user_conversion_type=l_USER_INV_RATE_TYPE;
           exception when no_data_found then
                   l_INV_RATE_TYPE :=null;
           end;
   end if;

   Select pt.CC_PRVDR_FLAG,pa.multi_currency_billing_flag
   into l_cc_prvdr_flag,l_mcb_flag
   From pa_project_types pt, pa_projects pa
   where pa.project_type=pt.project_type AND
         pt.org_id = pa.org_id and
	 pa.project_id=l_project_id;

   If l_INV_RATE_TYPE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
       if l_mcb_flag = 'Y' or l_cc_prvdr_flag ='Y' then
               OPEN cur_pa_impl;
               FETCH cur_pa_impl INTO l_inv_rate_type;
               CLOSE cur_pa_impl;
       end if;
   END if;

   if l_mcb_flag = 'N' and l_cc_prvdr_flag ='N' then
        l_inv_rate_type := null;
        l_ALLOW_INV_USER_RATE_FLAG := 'N';
        l_INV_EXCHANGE_RATE :=null;
        l_INV_RATE_DATE :=null;
   end if;

   If l_INV_CURRENCY_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
           l_INV_CURRENCY_CODE :=l_project_rec.PROJECT_CURRENCY_CODE;
   END if;


   If l_INV_EXCHANGE_RATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
           l_INV_EXCHANGE_RATE := FND_API.G_MISS_NUM;
   END if;

   If l_INV_RATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
           l_INV_RATE_DATE := FND_API.G_MISS_DATE;
   END if;

--bug#5554475

-- Bug 5622539
   l_default_top_task_cust_flag := p_customers_in(i).enable_top_task_cust_flag;

/*
   If l_default_top_task_cust_flag is null or
      l_default_top_task_cust_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_default_top_task_cust_flag := 'N';
   end if;
*/
   -- Bug 5622539
   If l_default_top_task_cust_flag <> 'Y' then
      l_default_top_task_cust_flag := 'N';
   end if;

   IF ((l_enable_top_task_cust_flag='Y' and p_project_in.enable_top_task_customer_flag <> 'Y') or
       (nvl(l_enable_top_task_cust_flag,'N')='N' and NVL(l_old_cust_top_task_flag, 'N') <> 'Y')) then
            l_default_top_task_cust_flag:='N';
   else
            l_CUSTOMER_BILL_SPLIT:=null;
   end if;
-- Bug 5622539

 PA_CUSTOMERS_CONTACTS_PUB.CREATE_PROJECT_CUSTOMER(
  P_API_VERSION              => 1.0
, P_INIT_MSG_LIST            => 'T'
, P_COMMIT                   => 'F'
, P_VALIDATE_ONLY            => 'F'
, P_VALIDATION_LEVEL         => 100
, P_CALLING_MODULE           => 'AMG'
, P_DEBUG_MODE               => 'N'
, P_MAX_MSG_COUNT            => 100
, P_PROJECT_ID               => l_project_id
, P_CUSTOMER_ID              => p_customers_in(i).customer_id
, P_CUSTOMER_NAME            => NULL
, P_CUSTOMER_NUMBER          => NULL
, P_PROJECT_RELATIONSHIP_CODE=> p_customers_in(i).PROJECT_RELATIONSHIP_CODE
, P_CUSTOMER_BILL_SPLIT      => l_CUSTOMER_BILL_SPLIT -- p_customers_in(i).CUSTOMER_BILL_SPLIT: Bug 5622539
, P_BILL_TO_CUSTOMER_ID      => l_bill_to_customer_id
, P_SHIP_TO_CUSTOMER_ID      => l_ship_to_customer_id
, P_BILL_TO_ADDRESS_ID       => l_bill_to_address_id
, P_SHIP_TO_ADDRESS_ID       => l_ship_to_address_id
,p_bill_to_customer_name => null
,p_bill_to_customer_number => null
,p_ship_to_customer_name => null
,p_ship_to_customer_number  => null
, P_BILL_SITE_NAME           => NULL
, P_WORK_SITE_NAME           => NULL
, P_INV_CURRENCY_CODE        => l_INV_CURRENCY_CODE		--bug 5554475 l_project_rec.PROJECT_CURRENCY_CODE
, P_INV_RATE_TYPE            => l_INV_RATE_TYPE			--bug 5554475
, P_INV_RATE_DATE            => l_INV_RATE_DATE			--bug 5554475
, P_INV_EXCHANGE_RATE        => l_INV_EXCHANGE_RATE		--bug 5554475
, P_ALLOW_USER_RATE_TYPE_FLAG=> l_ALLOW_INV_USER_RATE_FLAG	--bug 5554475
, P_RECEIVER_TASK_ID         => null
, X_CUSTOMER_ID             => l_customer_id
, X_RETURN_STATUS          => x_return_status
, X_MSG_COUNT              => x_msg_count
, X_MSG_DATA               => x_msg_data
--Added for FP.M changes to project billing setup. Tracking bug 3279981
, p_default_top_task_cust_flag => l_default_top_task_cust_flag
--, p_en_top_task_cust_flag      => 'N'   This flag is mandatory only if calling context id forms
);

--uncommented and modified the below for Bug#5554475

if x_return_status <> FND_API.G_RET_STS_SUCCESS then
      x_msg_count := FND_MSG_PUB.count_msg;
      if x_msg_count = 1 then
         PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => x_msg_data,
                p_data           => x_msg_data,
                p_msg_index_out  => l_msg_index_out);

      end if;
     If x_return_status = FND_API.G_RET_STS_ERROR THEN
	p_project_out.return_status := x_return_status;
        RAISE FND_API.G_EXC_ERROR;
     ELSE
	p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     END if;

end if;

--Bug#5554475

----dbms_output.put_line('After calling CREATE_PROJECT_CUSTOMER x_return_status X_MSG_DATA'||x_return_status||'e'||X_MSG_DATA);

  /* call to create_customer_contacts added for tracking bug  by aditi */
pa_customer_info.Create_Customer_Contacts
                       ( X_Project_Id                  => l_project_id,
                         X_Customer_Id                 => p_customers_in(i).customer_id,
                         X_Project_Relation_Code       => p_customers_in(i).project_relationship_code,
                         X_Customer_Bill_Split         => p_customers_in(i).customer_bill_split,
                         X_Bill_To_Customer_Id         => l_bill_to_customer_id,
                         X_Ship_To_Customer_Id         => l_ship_to_customer_id,
                         X_Bill_To_Address_Id          => l_bill_to_address_id,
                         X_Ship_To_Address_Id          => l_ship_to_address_id,
                         X_Bill_To_Contact_Id          => l_bill_to_contact_id,
                         X_Ship_To_Contact_Id          => l_ship_to_contact_id,
                         X_Inv_Currency_Code           => l_INV_CURRENCY_CODE,  --bug 5554475 l_project_rec.PROJECT_CURRENCY_CODE,
                         X_Inv_Rate_Type               => l_INV_RATE_TYPE,	--bug 5554475
                         X_Inv_Rate_Date               => l_INV_RATE_DATE,	--bug 5554475
                         X_Inv_Exchange_Rate           => l_INV_EXCHANGE_RATE,	--bug 5554475
                         X_Allow_Inv_Rate_Type_Fg      => l_ALLOW_INV_USER_RATE_FLAG,	--bug 5554475
                         X_Bill_Another_Project_Fg     => l_bill_another_project_flag, -- Added for 4153629
                         X_Receiver_Task_Id            => l_receiver_task_id , -- Added for 4153629
                         X_User                        => FND_GLOBAL.USER_ID,
                         X_Login                       => FND_GLOBAL.LOGIN_ID,
                         X_Err_Code                    => l_err_code,
                         X_Err_Stage                   => l_err_stage,
                         X_Err_Stack                   => l_err_stack
                       );
----dbms_output.put_line('value of l_err_code'||l_err_code);
  /* call to create_customer_contacts added for tracking bug  by aditi */
IF l_err_code > 0
   THEN

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN

        IF NOT pa_project_pvt.check_valid_message(l_err_stage)
        THEN
                                    pa_interface_utils_pub.map_new_amg_msg
                                       ( p_old_message_code => 'PA_CREATE_CONTACTS_FAILED'
                                        ,p_msg_attribute    => 'CHANGE'
                                        ,p_resize_flag      => 'N'
                                        ,p_msg_context      => 'PROJ'
                                        ,p_attribute1       => l_project_in_rec.pm_project_reference
                                        ,p_attribute2       => ''
                                        ,p_attribute3       => ''
                                        ,p_attribute4       => ''
                                        ,p_attribute5       => '');
                                ELSE
                                     pa_interface_utils_pub.map_new_amg_msg
                                        ( p_old_message_code => l_err_stage
                                         ,p_msg_attribute    => 'CHANGE'
                                         ,p_resize_flag      => 'N'
                                         ,p_msg_context      => 'PROJ'
                                         ,p_attribute1       => l_project_in_rec.pm_project_reference
                                         ,p_attribute2       => ''
                                         ,p_attribute3       => ''
                                         ,p_attribute4       => ''
                                         ,p_attribute5       => '');
        END IF;

      END IF;

      p_project_out.return_status := FND_API.G_RET_STS_ERROR;
      RAISE FND_API.G_EXC_ERROR;

        ELSIF l_err_code < 0
        THEN

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
      THEN
                            pa_interface_utils_pub.map_new_amg_msg
                             ( p_old_message_code => 'PA_CREATE_CONTACTS_FAILED'
                              ,p_msg_attribute    => 'CHANGE'
                              ,p_resize_flag      => 'N'
                              ,p_msg_context      => 'PROJ'
                              ,p_attribute1       => l_project_in_rec.pm_project_reference
                              ,p_attribute2       => ''
                              ,p_attribute3       => ''
                              ,p_attribute4       => ''
                              ,p_attribute5       => '');
      END IF;

      p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

 END IF ; --IF p_customers_in(i).customer_id IS NOT NULL
Else --If Cur_Customer%NOTFOUND
  /* Its its an existing customer */
                 CLOSE Cur_Customer;
                 /* Code copied and pasted below */

--dbms_output.put_line('Customer is existing in the databse ');
   l_bill_to_customer_id:=p_customers_in(i).bill_to_customer_id;
   l_ship_to_customer_id:=p_customers_in(i).ship_to_customer_id;
 --added for bug 3911782
   l_bill_to_address_id :=p_customers_in(i).bill_to_address_id;
   l_ship_to_address_id :=p_customers_in(i).ship_to_address_id;
   /* added these two assignments */
   l_project_relationship_code := p_customers_in(i).PROJECT_RELATIONSHIP_CODE;
   l_customer_bill_split := p_customers_in(i).Customer_Bill_Split;
   l_bill_another_project_flag := p_customers_in(i).bill_another_project_flag;
   l_receiver_task_id := p_customers_in(i).receiver_task_id;
 /* added OR condition so that PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM is taken care of for bug 3000293 */
   If (p_customers_in(i).bill_to_customer_id is null or p_customers_in(i).bill_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      and  Cur_Customer_rec.bill_to_customer_id is not null  Then
       l_bill_to_customer_id:= Cur_Customer_rec.bill_to_customer_id;
        --changes for bug 3911782
      If (p_customers_in(i).bill_to_address_id is null or p_customers_in(i).bill_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.bill_to_address_id is not null  Then
          l_bill_to_address_id:= Cur_Customer_rec.bill_to_address_id;
      End if;
    Else
      If (p_customers_in(i).bill_to_address_id is null or p_customers_in(i).bill_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.bill_to_address_id is not null  Then
          l_bill_to_address_id:= Cur_Customer_rec.bill_to_address_id;
       End if;
      --changes end for bug 3911782
   end if;

    If (p_customers_in(i).ship_to_customer_id is null or p_customers_in(i).ship_to_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      and  Cur_Customer_rec.ship_to_customer_id is not null  Then
       l_ship_to_customer_id:= Cur_Customer_rec.ship_to_customer_id;
        --changes for bug 3911782
      If (p_customers_in(i).ship_to_address_id is null or p_customers_in(i).ship_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.ship_to_address_id is not null  Then
          l_ship_to_address_id:= Cur_Customer_rec.ship_to_address_id;
      End if;
     Else
      If (p_customers_in(i).ship_to_address_id is null or p_customers_in(i).ship_to_address_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          and  Cur_Customer_rec.ship_to_address_id is not null  Then
          l_ship_to_address_id:= Cur_Customer_rec.ship_to_address_id;
      End if;
       --changes end for bug 3911782
   end if;
   /* New code added FOR tracking bug */
   If (p_customers_in(i).PROJECT_RELATIONSHIP_CODE is null or p_customers_in(i).PROJECT_RELATIONSHIP_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
      and  Cur_Customer_rec.PROJECT_RELATIONSHIP_CODE is not null  Then
       l_project_relationship_code := Cur_Customer_rec.PROJECT_RELATIONSHIP_CODE;
  end if;

    -- Bug 7255015
    If (p_customers_in(i).Customer_Bill_Split is null or p_customers_in(i).Customer_Bill_Split = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) Then
      IF Cur_Customer_rec.Customer_Bill_Split is not null  THEN
       l_customer_bill_split := Cur_Customer_rec.Customer_Bill_Split;
      END IF;
   Else
    If (pa_customer_info.revenue_accrued_or_billed(l_project_id)) then
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
               pa_utils.add_message
                ( p_app_short_name   => 'PA'-- new message for bug 3326468
                 ,p_msg_name    => 'PA_UPD_CUST_NOT_ALLOWED'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_id
                 ,p_token2           => 'CUSTOMER_ID'
                 ,p_value2           => p_customers_in(i).customer_id
               );
             END IF;
            RAISE FND_API.G_EXC_ERROR;
   END IF;
  end if;
  --dbms_output..put_line('Value of p_customers_in(i).bill_another_project_flag'||p_customers_in(i).bill_another_project_flag);
  --dbms_output..put_line('Value of p_customers_in(i).receiver_task_id'||p_customers_in(i).receiver_task_id);
/* Code added for tracking bug 4153629*/
  If (p_customers_in(i).bill_another_project_flag is null or p_customers_in(i).bill_another_project_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
      and  Cur_Customer_rec.bill_another_project_flag is not null  Then
       l_bill_another_project_flag := Cur_Customer_rec.bill_another_project_flag;
    If (p_customers_in(i).receiver_task_id is null or p_customers_in(i).receiver_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN
      --Bug#5554578
          IF Cur_Customer_rec.receiver_task_id is not null  Then

		 l_receiver_task_id := Cur_Customer_rec.receiver_task_id;
	  END IF;
    Else /* Some value of passed for receiver_task_id */
      If l_bill_another_project_flag = 'N' Then
         IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
               pa_utils.add_message
                ( p_app_short_name   => 'PA'-- new message for bug 4153629
                 ,p_msg_name    => 'PA_UPD_RCVR_TSK_NOT_ALLOWED'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_id
                 ,p_token2           => 'CUSTOMER_ID'
                 ,p_value2           => p_customers_in(i).customer_id
               );
           END IF;
            RAISE FND_API.G_EXC_ERROR;
       ELSE /* l_bill_another_project_flag = 'Y' */
           l_receiver_task_id := p_customers_in(i).receiver_task_id;
        PA_CUSTOMER_INFO.CHECK_RECEIVER_PROJ_ENTERABLE
         (p_project_id         => l_project_id
         ,p_customer_id        => p_customers_in(i).customer_id
         ,p_receiver_task_id     => l_receiver_task_id
         ,x_bill_another_project_flag   => l_bill_another_project_flag
         ,x_return_status              => x_return_status
         ,x_error_msg_code            => l_error_msg_code
         );
         --dbms_output..put_line('value of l_bill_another_project_flag'||l_bill_another_project_flag);
        if l_return_status <> FND_API.G_RET_STS_SUCCESS then
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name       => l_error_msg_code
                              ,p_token1           => 'PROJECT_NAME'
                              ,p_value1           => l_project_id
                             ,p_token2           => 'CUSTOMER_ID'
                             ,p_value2           => p_customers_in(i).customer_id
                 );
         RAISE FND_API.G_EXC_ERROR;
         END if; -- <l_return_status <> FND_API.G_RET_STS_SUCCESS>
      end if; -- l_bill_another_project_flag = 'N'
     End If; --p_customers_in(i).receiver_task_id is null
  Else /* Some value is passed for p_customers_in(i).bill_another_project_flag*/
    /* This means that the status is being flipped */
     If (p_customers_in(i).receiver_task_id is null or p_customers_in(i).receiver_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN
      --Bug#5554578
          IF Cur_Customer_rec.receiver_task_id is not null  Then

		 l_receiver_task_id := Cur_Customer_rec.receiver_task_id;
	  END IF;
     Else /* Some value of passed for receiver_task_id */
       If l_bill_another_project_flag = 'N' Then
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
               pa_utils.add_message
                ( p_app_short_name   => 'PA'-- new message for bug 4153629
                 ,p_msg_name    => 'PA_UPD_RCVR_TSK_NOT_ALLOWED'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_id
                 ,p_token2           => 'CUSTOMER_ID'
                 ,p_value2           => p_customers_in(i).customer_id
               );
             END IF;
            RAISE FND_API.G_EXC_ERROR;
       ELSE /* l_bill_another_project_flag = 'Y' */
           l_receiver_task_id := p_customers_in(i).receiver_task_id;
       PA_CUSTOMER_INFO.CHECK_RECEIVER_PROJ_ENTERABLE
         (p_project_id         => l_project_id
         ,p_customer_id        => p_customers_in(i).customer_id
         ,p_receiver_task_id     => l_receiver_task_id
         ,x_bill_another_project_flag   => l_bill_another_project_flag
         ,x_return_status              => x_return_status
         ,x_error_msg_code            => l_error_msg_code
         );
         --dbms_output..put_line('value of l_bill_another_project_flag'||l_bill_another_project_flag);

        if l_return_status <> FND_API.G_RET_STS_SUCCESS then
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name       => l_error_msg_code
                              ,p_token1           => 'PROJECT_NAME'
                              ,p_value1           => l_project_id
                             ,p_token2           => 'CUSTOMER_ID'
                             ,p_value2           => p_customers_in(i).customer_id
                 );
         RAISE FND_API.G_EXC_ERROR;
         END if; -- <l_return_status <> FND_API.G_RET_STS_SUCCESS>
     END IF;/* l_bill_another_project_flag = 'N' */
   End If;
   End if;

 /* Changed end for tracking bug by aditi */
  /* End of Code changesfor tracking bug 4153629*/

  IF(NVL(l_cust_acc_rel_code,'N') ='N' and
      p_customers_in(i).customer_id IS NOT NULL AND p_customers_in(i).customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) and
    ((l_bill_to_customer_id IS NOT NULL AND l_bill_to_customer_id   <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      p_customers_in(i).customer_id <> l_bill_to_customer_id
     ) or
     (
      l_ship_to_customer_id  IS NOT NULL AND l_ship_to_customer_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM and
      p_customers_in(i).customer_id <> l_ship_to_customer_id
    ))
   THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_BILL_SHIP_CUST_INV'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
           RAISE FND_API.G_EXC_ERROR;
   END IF;
/** changes begin for tracking bug by aditi **/

   ----dbms_output.put_line('value of p_project_in.CONTACT_ID '||p_customers_in(i).CONTACT_ID);
   If (p_customers_in(i).CONTACT_ID IS NOT NULL) AND (p_customers_in(i).CONTACT_ID <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
      then


         IF (p_customers_in(i).PROJECT_CONTACT_TYPE_CODE IS NULL) OR (p_customers_in(i).PROJECT_CONTACT_TYPE_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )THEN
           IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
              THEN
               pa_utils.add_message
              ( p_app_short_name   => 'PA'-- existing message for tracking bug
                 ,p_msg_name    => 'PA_CONTACT_TYPE_REQD'
                 ,p_token1           => 'PROJECT_NAME'
                 ,p_value1           => l_project_in_rec.pm_project_reference
                 ,p_token2           => 'CUSTOMER_ID'
                 ,p_value2           => p_customers_in(i).customer_id
                 ,p_token3           => 'CONTACT_ID'
                 ,p_value3           => p_customers_in(i).CONTACT_ID
              );
           END IF;
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
         END IF;
     end if;

      If  p_customers_in(i).PROJECT_CONTACT_TYPE_CODE = 'BILLING' then
        l_bill_to_contact_id := p_customers_in(i).CONTACT_ID;
	l_ship_to_contact_id := NULL; -- Bug 5622539
      ElsIf p_customers_in(i).PROJECT_CONTACT_TYPE_CODE = 'SHIPPING' then
        l_ship_to_contact_id := p_customers_in(i).CONTACT_ID;
	l_bill_to_contact_id := NULL; -- Bug 5622539
      Else
      --null;
       l_bill_to_contact_id := NULL;
       l_ship_to_contact_id := NULL;
      End If;

      /** end of chnages for tracking bug by aditi **/

----dbms_output.put_line('Before calling pa_customer_info.get_customer_info');
----dbms_output.put_line('Value of l_bill_to_contact_id '||l_bill_to_contact_id);
----dbms_output.put_line('Value of l_ship_to_contact_id '||l_ship_to_contact_id);

     pa_customer_info.get_customer_info( X_project_ID           => l_project_id
                                        ,X_Customer_Id          => p_customers_in(i).customer_id
                                        ,X_Bill_To_Customer_Id  => l_bill_to_customer_id
                                        ,X_Ship_To_Customer_Id  => l_ship_to_customer_id
                                        ,X_Bill_To_Address_Id   => l_bill_to_address_id
                                        ,X_Ship_To_Address_Id   => l_ship_to_address_id
                                        ,X_Bill_To_Contact_Id   => l_bill_to_contact_id
                                        ,X_Ship_To_Contact_Id   => l_ship_to_contact_id
                                        ,X_Err_Code             => l_err_code
                                        ,X_Err_Stage            => l_err_stage
                                        ,X_Err_Stack            => l_err_stack
                                        ,p_calling_module       => 'AMG' --added for bug#4770535
                                       );

----dbms_output.put_line('After calling pa_customer_info.get_customer_info'||l_err_code);


    -- For this API,error code 10 is a warning.Anything above 10 is an error
        IF l_err_code > 10
        THEN

                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN

                        IF NOT pa_project_pvt.check_valid_message(l_err_stage)
                        THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_GET_CUSTOMER_INFO_FAILED'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
         ELSE
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => l_err_stage
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                        END IF;

                END IF;

                p_project_out.return_status := FND_API.G_RET_STS_ERROR;
                RAISE FND_API.G_EXC_ERROR;

          ELSIF l_err_code < 0
        THEN

                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
                THEN
            pa_interface_utils_pub.map_new_amg_msg
              ( p_old_message_code => 'PA_GET_CUSTOMER_INFO_FAILED'
               ,p_msg_attribute    => 'CHANGE'
               ,p_resize_flag      => 'Y'
               ,p_msg_context      => 'PROJ'
               ,p_attribute1       => l_project_in_rec.pm_project_reference
               ,p_attribute2       => ''
               ,p_attribute3       => ''
               ,p_attribute4       => ''
               ,p_attribute5       => '');
                END IF;

                p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

/* Update the project customer information */

             Update Pa_project_customers
             Set bill_to_customer_id=l_bill_to_customer_id,
                 ship_to_customer_id=l_ship_to_customer_id,
                 Bill_To_Address_Id =l_bill_to_address_id,
                 Ship_to_address_id =l_ship_to_address_id
             where project_id=l_project_id
             and customer_id=p_customers_in(i).customer_id;

If p_customers_in(i).bill_to_customer_id is not null and  p_customers_in(i).bill_to_customer_id <> cur_customer_rec.bill_to_customer_id THEN
        Delete pa_project_contacts
        where Project_Id=l_project_id
        and customer_id=p_customers_in(i).customer_id
        and Project_Contact_Type_Code='BILLING';

end if;

If p_customers_in(i).ship_to_customer_id is not null and  p_customers_in(i).ship_to_customer_id <> cur_customer_rec.bill_to_customer_id THEN
        Delete pa_project_contacts
        where Project_Id=l_project_id
        and customer_id=p_customers_in(i).customer_id
        and Project_Contact_Type_Code='SHIPPING';

end if;
----dbms_output.put_line('before calling UPDATE_PROJECT_CUSTOMER');
----dbms_output.put_line('Value of p_customers_in(i).PROJECT_RELATIONSHIP_CODE'||p_customers_in(i).PROJECT_RELATIONSHIP_CODE);
 ----dbms_output.put_line('Value of l_bill_to_customer_id after '||l_bill_to_customer_id);
----dbms_output.put_line('Value of l_bill_to_address_id after '||l_bill_to_address_id);
 ----dbms_output.put_line('Value of l_ship_to_address_id after '||l_ship_to_address_id);
----dbms_output.put_line('Value of l_ship_to_customer_id after '||l_ship_to_customer_id);



-- Start of addition for bug 5554475
   l_ALLOW_INV_USER_RATE_FLAG	:= p_customers_in(i).ALLOW_INV_USER_RATE_TYPE_FLAG  ;
   l_INV_RATE_DATE		:= p_customers_in(i).INV_RATE_DATE   ;
   l_INV_RATE_TYPE		:= p_customers_in(i).INV_RATE_TYPE;
   l_INV_CURRENCY_CODE		:= p_customers_in(i).INV_CURRENCY_CODE ;
   l_INV_EXCHANGE_RATE		:= p_customers_in(i).INV_EXCHANGE_RATE ;

   If l_ALLOW_INV_USER_RATE_FLAG = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then

              l_ALLOW_INV_USER_RATE_FLAG := cur_customer_rec.ALLOW_INV_USER_RATE_TYPE_FLAG;
   END if;

   If l_ALLOW_INV_USER_RATE_FLAG IS NULL then
           l_ALLOW_INV_USER_RATE_FLAG := 'N';
   end if;

    if l_INV_RATE_TYPE is not null and l_INV_RATE_TYPE <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
           begin
           l_USER_INV_RATE_TYPE:=l_INV_RATE_TYPE;
           select conversion_type into l_INV_RATE_TYPE
           from pa_conversion_types_v
           where user_conversion_type=l_USER_INV_RATE_TYPE;
           exception when no_data_found then
                   l_INV_RATE_TYPE:=null;
           end;
   end if;

   If l_INV_RATE_TYPE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
           l_INV_RATE_TYPE := cur_customer_rec.INV_RATE_TYPE;
   END if;

   Select pt.CC_PRVDR_FLAG,pa.multi_currency_billing_flag
   into l_cc_prvdr_flag,l_mcb_flag
   From pa_project_types pt, pa_projects pa
   where pa.project_type=pt.project_type
   AND pa.org_id = pt.org_id
   and pa.project_id=l_project_id;

   if l_mcb_flag = 'N' and l_cc_prvdr_flag ='N' then
        l_inv_rate_type := null;
        l_ALLOW_INV_USER_RATE_FLAG := 'N';
        l_INV_EXCHANGE_RATE :=null;
        l_INV_RATE_DATE :=null;
   end if;

   If l_INV_CURRENCY_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
           l_INV_CURRENCY_CODE := cur_customer_rec.INV_CURRENCY_CODE;
   END if;

   If l_INV_EXCHANGE_RATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
           l_INV_EXCHANGE_RATE := cur_customer_rec.INV_EXCHANGE_RATE;
   END if;

   If l_INV_RATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
           l_INV_RATE_DATE := cur_customer_rec.INV_RATE_DATE;
   END if;
 -- End of addition for bug 5554475


   --bug 5554578

      l_default_top_task_cust_flag := cur_customer_rec.default_top_task_cust_flag;

   --bug 5554578

   --bug# 5554475
   IF l_bill_another_project_flag = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR l_bill_another_project_flag IS NULL  THEN
	l_bill_another_project_flag := cur_customer_rec.bill_another_project_flag;
   END IF;

   IF l_receiver_task_id= PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR l_receiver_task_id IS NULL THEN
	l_receiver_task_id := cur_customer_rec.receiver_task_id;
   END IF;

   --bug# 5554475

   -- Bug 5622539
   If l_default_top_task_cust_flag <> 'Y' then
      l_default_top_task_cust_flag := 'N';
   end if;

   -- Bug 5622539
   IF ((l_enable_top_task_cust_flag='Y' and p_project_in.enable_top_task_customer_flag <> 'Y') or
       (nvl(l_enable_top_task_cust_flag,'N')='N' and NVL(l_old_cust_top_task_flag, 'N') <> 'Y')) then
            l_default_top_task_cust_flag:='N';
   else
            l_CUSTOMER_BILL_SPLIT:=null;
   end if;
   -- Bug 5622539


/* adding call to PA_CUSTOMERS_CONTACTS_PUB.UPDATE_PROJECT_CUSTOMER */
PA_CUSTOMERS_CONTACTS_PUB.UPDATE_PROJECT_CUSTOMER(
P_API_VERSION              => 1.0
, P_INIT_MSG_LIST            => 'T'
, P_COMMIT                   => 'F'
, P_VALIDATE_ONLY            => 'F'
, P_VALIDATION_LEVEL         => 100
, P_CALLING_MODULE           => 'AMG'
, P_DEBUG_MODE               => 'N'
, P_MAX_MSG_COUNT            => 100
, P_PROJECT_ID               => l_project_id
 , P_CUSTOMER_ID              => p_customers_in(i).customer_id
/* , P_PROJECT_RELATIONSHIP_CODE=> p_customers_in(i).PROJECT_RELATIONSHIP_CODE
, P_CUSTOMER_BILL_SPLIT      => p_customers_in(i).CUSTOMER_BILL_SPLIT */
, P_PROJECT_RELATIONSHIP_CODE => l_PROJECT_RELATIONSHIP_CODE
 , P_CUSTOMER_BILL_SPLIT         => l_CUSTOMER_BILL_SPLIT
, P_BILL_TO_CUSTOMER_ID      => l_bill_to_customer_id
, P_SHIP_TO_CUSTOMER_ID      => l_ship_to_customer_id
, P_BILL_TO_ADDRESS_ID       => l_bill_to_address_id
, P_SHIP_TO_ADDRESS_ID       => l_ship_to_address_id
,p_bill_to_customer_name => NULL
,p_bill_to_customer_number => NULL
,p_ship_to_customer_name => NULL
,p_ship_to_customer_number  => NULL
, P_BILL_SITE_NAME           => NULL
, P_WORK_SITE_NAME           => NULL
, P_INV_CURRENCY_CODE        => l_INV_CURRENCY_CODE		--bug  5554475 l_project_rec.PROJECT_CURRENCY_CODE
, P_INV_RATE_TYPE            => l_INV_RATE_TYPE			--bug  5554475
, P_INV_RATE_DATE            => l_INV_RATE_DATE			--bug  5554475
, P_INV_EXCHANGE_RATE        => l_INV_EXCHANGE_RATE		--bug  5554475
, P_ALLOW_USER_RATE_TYPE_FLAG=> l_ALLOW_INV_USER_RATE_FLAG      --bug  5554475
, P_RECEIVER_TASK_ID          => l_receiver_task_id  -- Added for 4153629
, P_BILL_ANOTHER_PROJECT_FLAG  => l_bill_another_project_flag -- Added for 4153629
, P_RECORD_VERSION_NUMBER    => Cur_Customer_rec.RECORD_VERSION_NUMBER
, X_RETURN_STATUS          => x_return_status
, X_MSG_COUNT              => x_msg_count
, X_MSG_DATA               => x_msg_data
--Added for FP.M changes to project billing setup. Tracking bug 3279981
, p_default_top_task_cust_flag => l_default_top_task_cust_flag --'N' bug 5554578
--, p_en_top_task_cust_flag      => 'N'  This flag is mandatory only if calling context id forms
);


-- Start of addition for bug  5554475

   if x_return_status <> FND_API.G_RET_STS_SUCCESS then
         x_msg_count := FND_MSG_PUB.count_msg;
         if x_msg_count = 1 then
            PA_INTERFACE_UTILS_PUB.get_messages
                  (p_encoded        => FND_API.G_FALSE,
                   p_msg_index      => 1,
                   p_msg_count      => x_msg_count,
                   p_msg_data       => x_msg_data,
                   p_data           => x_msg_data,
                   p_msg_index_out  => l_msg_index_out);

         end if;
         If x_return_status = FND_API.G_RET_STS_ERROR THEN
                   p_project_out.return_status := x_return_status;
                   RAISE FND_API.G_EXC_ERROR;
         else
                   p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
         END if;
   end if;

-- End of addition for bug 5554475

/* Added Call to pa_customer_info.Create_Customer_Contacts. We only will be adding new contacts.
 There are no attrbutes that can be updated in a contact. Hence, the call below will suffice.
 It will check if the customer already exists, then Insert into pa_project_customers will
 be skipped and data will only be inserted into pa_project_contacts */

  pa_customer_info.Create_Customer_Contacts
                       ( X_Project_Id                  => l_project_id,
                         X_Customer_Id                 => p_customers_in(i).customer_id,
                         X_Project_Relation_Code       => p_customers_in(i).project_relationship_code,
                         X_Customer_Bill_Split         => p_customers_in(i).customer_bill_split,
                         X_Bill_To_Customer_Id         => l_bill_to_customer_id,
                         X_Ship_To_Customer_Id         => l_ship_to_customer_id,
                         X_Bill_To_Address_Id          => l_bill_to_address_id,
                         X_Ship_To_Address_Id          => l_ship_to_address_id,
                         X_Bill_To_Contact_Id          => l_bill_to_contact_id,
                         X_Ship_To_Contact_Id          => l_ship_to_contact_id,
                         X_Inv_Currency_Code           => l_INV_CURRENCY_CODE,	-- l_project_rec.PROJECT_CURRENCY_CODE bug 5554475
                         X_Inv_Rate_Type               => l_INV_RATE_TYPE,	--bug 5554475
                         X_Inv_Rate_Date               => l_INV_RATE_DATE,	--bug 5554475
                         X_Inv_Exchange_Rate           => l_INV_EXCHANGE_RATE,	--bug 5554475
                         X_Allow_Inv_Rate_Type_Fg      => l_ALLOW_INV_USER_RATE_FLAG, --bug 5554475
                         X_Bill_Another_Project_Fg     => l_bill_another_project_flag ,-- Added for 4153629,
                         X_Receiver_Task_Id            => l_receiver_task_id, --Added for 4153629
                         X_User                        => FND_GLOBAL.USER_ID,
                         X_Login                       => FND_GLOBAL.LOGIN_ID,
                         X_Err_Code                    => l_err_code,
                         X_Err_Stage                   => l_err_stage,
                         X_Err_Stack                   => l_err_stack
                       );
IF l_err_code > 0
   THEN

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
      THEN

        IF NOT pa_project_pvt.check_valid_message(l_err_stage)
        THEN
                                    pa_interface_utils_pub.map_new_amg_msg
                                       ( p_old_message_code => 'PA_CREATE_CONTACTS_FAILED'
                                        ,p_msg_attribute    => 'CHANGE'
                                        ,p_resize_flag      => 'N'
                                        ,p_msg_context      => 'PROJ'
                                        ,p_attribute1       => l_project_in_rec.pm_project_reference
                                        ,p_attribute2       => ''
                                        ,p_attribute3       => ''
                                        ,p_attribute4       => ''
                                        ,p_attribute5       => '');
                                ELSE
                                     pa_interface_utils_pub.map_new_amg_msg
                                        ( p_old_message_code => l_err_stage
                                         ,p_msg_attribute    => 'CHANGE'
                                         ,p_resize_flag      => 'N'
                                         ,p_msg_context      => 'PROJ'
                                         ,p_attribute1       => l_project_in_rec.pm_project_reference
                                         ,p_attribute2       => ''
                                         ,p_attribute3       => ''
                                         ,p_attribute4       => ''
                                         ,p_attribute5       => '');
        END IF;

      END IF;

      p_project_out.return_status := FND_API.G_RET_STS_ERROR;
      RAISE FND_API.G_EXC_ERROR;

        ELSIF l_err_code < 0
        THEN

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
      THEN
                            pa_interface_utils_pub.map_new_amg_msg
                             ( p_old_message_code => 'PA_CREATE_CONTACTS_FAILED'
                              ,p_msg_attribute    => 'CHANGE'
                              ,p_resize_flag      => 'N'
                              ,p_msg_context      => 'PROJ'
                              ,p_attribute1       => l_project_in_rec.pm_project_reference
                              ,p_attribute2       => ''
                              ,p_attribute3       => ''
                              ,p_attribute4       => ''
                              ,p_attribute5       => '');
      END IF;

      p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

END if;  /* is cur_customer%notfound */
i := p_customers_in.next(i);
----dbms_output.put_line('After processing the customer first record');
END LOOP;
END IF; --  IF p_customers_in.exists(i)
----dbms_output.put_line('After processing the customer first record OUT OF THE LOOP');

-- Bug 5622539
IF ((l_enable_top_task_cust_flag='Y' and p_project_in.enable_top_task_customer_flag <> 'Y') or
       (nvl(l_enable_top_task_cust_flag,'N')='N' and NVL(l_old_cust_top_task_flag, 'N') <> 'Y')) then
 i := p_customers_in.first;

IF p_customers_in.exists(i)
         THEN
        tot_contribution := pa_customer_info.check_proj_tot_contribution(l_project_id,l_valid_proj_flag);
        IF l_valid_proj_flag THEN
        ----dbms_output.put_line('Value of tot_contribution'||tot_contribution);
        IF (tot_contribution <> 0  AND  tot_contribution <> 100) OR
        (tot_contribution <> 100) OR
        (tot_contribution > 100 )
        theN
           /* pa_interface_utils_pub.map_new_amg_msg
             ( p_old_message_code => 'PA_TOT_CUST_BILL_SPLIT_INVLD'
             ,p_msg_attribute    => 'CHANGE'
             ,p_resize_flag      => 'N'
             ,p_msg_context      => 'PROJ'
             ,p_attribute1       => ''
             ,p_attribute2       => ''
             ,p_attribute3       => ''
             ,p_attribute4       => ''
             ,p_attribute5       => ''); */
            PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                               ,p_msg_name       => 'PA_TOT_CUST_BILL_SPLIT_INVLD');
            p_project_out.return_status := FND_API.G_RET_STS_ERROR;
            p_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
         END IF;
        END IF;
END IF;
END IF;

-- Bug 5622539
   pa_project_pvt.validate_data(
        p_calling_context  => 'UPDATE_PROJECT',
        p_project_id       => l_project_id,
        x_msg_count        => x_msg_count,
        x_msg_data         => x_msg_data,
        x_return_status    => x_return_status
   );

   if x_return_status <> FND_API.G_RET_STS_SUCCESS then
         x_msg_count := FND_MSG_PUB.count_msg;
         if x_msg_count = 1 then
            PA_INTERFACE_UTILS_PUB.get_messages
                  (p_encoded        => FND_API.G_FALSE,
                   p_msg_index      => 1,
                   p_msg_count      => x_msg_count,
                   p_msg_data       => x_msg_data,
                   p_data           => x_msg_data,
                   p_msg_index_out  => l_msg_index_out);

         end if;
         If x_return_status = FND_API.G_RET_STS_ERROR THEN
                   p_project_out.return_status := x_return_status;
                   RAISE FND_API.G_EXC_ERROR;
         else
                   p_project_out.return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
         END if;
   end if;

 /* End of changes by aditi for tracking */

-- 4188765 l_project_rec.enable_top_task_customer_flag cursor value is a pointer so it reflects the updated value
-- using the local variable instead of cursor variable

/** Commented out for bug 5116772
Below code added for bug 3279981. Customer at Top Task in FP_M
/*
--IF 'Y' = p_project_in.enable_top_task_customer_flag AND 'N' = l_project_rec.enable_top_task_customer_flag THEN -- 4188765 commented
IF 'Y' = p_project_in.enable_top_task_customer_flag AND 'N' = l_old_cust_top_task_flag THEN -- 4188765 added
--Enabling the customer at top task flag. Thus, we need to set the default top task customer
     DECLARE
          hghst_ctr_cust_id NUMBER;
          hghst_ctr_cust_name VARCHAR2(50);
          hghst_ctr_cust_num  VARCHAR2(30);

          l_return_status VARCHAR2(10);
          l_msg_count     NUMBER := 0;
          l_msg_data      VARCHAR2(2000);
          l_exclude_cust_id_tbl   PA_PLSQL_DATATYPES.NumTabTyp;
     BEGIN
          l_exclude_cust_id_tbl(1) := 0;
          --Retrieve the customer to be set as the default top task customer
          pa_top_task_cust_invoice_pvt.Get_Highest_Contr_Cust(
                                           P_API_VERSION            => 1.0
                                         , P_INIT_MSG_LIST          => 'T'
                                         , P_COMMIT                 => 'F'
                                         , P_VALIDATE_ONLY          => 'F'
                                         , P_VALIDATION_LEVEL       => 100
                                         , P_DEBUG_MODE             => 'N'
                                         , p_calling_module         => 'AMG'
                                         , p_project_id             => l_project_id
                                         , p_exclude_cust_id_tbl    => l_exclude_cust_id_tbl
                                         , x_highst_contr_cust_id   => hghst_ctr_cust_id
                                         , x_highst_contr_cust_name => hghst_ctr_cust_name
                                         , x_highst_contr_cust_num  => hghst_ctr_cust_num
                                         , x_return_status          => l_return_status
                                         , x_msg_count              => l_msg_count
                                         , x_msg_data               => l_msg_data );

          IF hghst_ctr_cust_id IS NOT null THEN
                --This API call will update pa_project_customers and pa_tasks
                 pa_top_task_cust_invoice_pvt.enbl_disbl_cust_at_top_task(
                                                      P_API_VERSION            => 1.0
                                                    , P_INIT_MSG_LIST          => 'T'
                                                    , P_COMMIT                 => 'F'
                                                    , P_VALIDATE_ONLY          => 'F'
                                                    , P_VALIDATION_LEVEL       => 100
                                                    , P_DEBUG_MODE             => 'N'
                                                    , p_calling_module         => 'AMG'
                                                    , p_mode                   => 'ENABLE'
                                                    , p_project_id             => l_project_id
                                                    , p_def_top_task_cust      => hghst_ctr_cust_id
                                                    , p_contr_update_cust      => null
                                                    , x_return_status          => l_return_status
                                                    , x_msg_count              => l_msg_count
                                                    , x_msg_data               => l_msg_data );
          END IF;
     END ;
END IF;
End Commented out for bug 5116772 **/

-- 4188765 l_project_rec.enable_top_task_customer_flag cursor value is a pointer so it reflects the updated value in the above code
-- using the local variable instead of cursor variable

--IF 'N' = p_project_in.enable_top_task_customer_flag AND 'Y' = l_project_rec.enable_top_task_customer_flag THEN -- 4188765 Commented
/* Commented the Below code for Bug 5622539
IF 'N' = p_project_in.enable_top_task_customer_flag AND 'Y' = l_old_cust_top_task_flag THEN -- 4188765 Added
--Disabling the customer at top task flag. Thus, we need to set the customer bill split for the project customers
     DECLARE
          cust_id                PA_PROJECT_CUSTOMERS.customer_id%TYPE;
          hghst_ctr_cust_id      NUMBER;
          hghst_ctr_cust_name    VARCHAR2(50);
          hghst_ctr_cust_num     VARCHAR2(30);
          num_customers          NUMBER := 0;
          l_exclude_cust_id_tbl   PA_PLSQL_DATATYPES.NumTabTyp;

          l_return_status VARCHAR2(10);
          l_msg_count     NUMBER := 0;
          l_msg_data      VARCHAR2(2000);
          CURSOR cur_get_def_top_task_cust IS
          SELECT customer_id
          FROM   pa_project_customers
          WHERE  project_id = l_project_id
          AND    default_top_task_cust_flag = 'Y' ;
     BEGIN
         l_exclude_cust_id_tbl(1) := 0;
         --Retrieve the customer to be updated with 100% contribution
         pa_top_task_cust_invoice_pvt.Get_Highest_Contr_Cust(
                                           P_API_VERSION            => 1.0
                                         , P_INIT_MSG_LIST          => 'T'
                                         , P_COMMIT                 => 'F'
                                         , P_VALIDATE_ONLY          => 'F'
                                         , P_VALIDATION_LEVEL       => 100
                                         , P_DEBUG_MODE             => 'N'
                                         , p_calling_module         => 'AMG'
                                         , p_project_id             => l_project_id
                                         , p_exclude_cust_id_tbl    => l_exclude_cust_id_tbl
                                         , x_highst_contr_cust_id   => hghst_ctr_cust_id
                                         , x_highst_contr_cust_name => hghst_ctr_cust_name
                                         , x_highst_contr_cust_num  => hghst_ctr_cust_num
                                         , x_return_status          => l_return_status
                                         , x_msg_count              => l_msg_count
                                         , x_msg_data               => l_msg_data );
          OPEN  cur_get_def_top_task_cust;
          FETCH cur_get_def_top_task_cust INTO cust_id;
          CLOSE cur_get_def_top_task_cust;

          IF hghst_ctr_cust_id IS NOT NULL THEN
                --This API call will update pa_project_customers and pa_tasks
                 pa_top_task_cust_invoice_pvt.enbl_disbl_cust_at_top_task(
                                                      P_API_VERSION            => 1.0
                                                    , P_INIT_MSG_LIST          => 'T'
                                                    , P_COMMIT                 => 'F'
                                                    , P_VALIDATE_ONLY          => 'F'
                                                    , P_VALIDATION_LEVEL       => 100
                                                    , P_DEBUG_MODE             => 'N'
                                                    , p_calling_module         => 'AMG'
                                                    , p_mode                   => 'DISABLE'
                                                    , p_project_id             => l_project_id
                                                    , p_def_top_task_cust      => cust_id
                                                    , p_contr_update_cust      => hghst_ctr_cust_id
                                                    , x_return_status          => l_return_status
                                                    , x_msg_count              => l_msg_count
                                                    , x_msg_data               => l_msg_data );
          END IF;
     END;
END IF;
--Changes end for Bug 3279981
Changes end for Customer Account Relationships
End of commented code for Bug 5622539 */


--Added the following logic for the date effectve funds consumption flag. This is done for federal changes.
--sunkalya:federal changes bug#5511353

DECLARE
	  hghst_ctr_cust_id      NUMBER;
          l_exclude_cust_id_tbl   PA_PLSQL_DATATYPES.NumTabTyp;
	  l_return_status VARCHAR2(10);
          l_msg_count     NUMBER := 0;
          l_msg_data      VARCHAR2(2000);

BEGIN



IF (p_project_in.date_eff_funds_flag  ='Y' AND nvl(l_old_date_eff_funds_flag,'N') = 'N') OR
   (p_project_in.date_eff_funds_flag  ='N' AND nvl(l_old_date_eff_funds_flag,'N') = 'Y')

THEN

	IF p_project_in.date_eff_funds_flag = 'N' THEN  --disabling the federal flag

		        IF ( 'N' = p_project_in.enable_top_task_customer_flag )  OR
			   ( 'N' = nvl(l_old_cust_top_task_flag,'N') AND nvl(p_project_in.enable_top_task_customer_flag,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
			THEN

				--This api will determine which customer to be made as 100% contributor.

				PA_CUSTOMERS_CONTACTS_UTILS.Get_Highest_Contr_Fed_Cust(
						   P_API_VERSION            => 1.0
						 , P_INIT_MSG_LIST          => 'T'
						 , P_COMMIT                 => 'F'
						 , P_VALIDATE_ONLY          => 'F'
						 , P_VALIDATION_LEVEL       => 100
						 , P_DEBUG_MODE             => 'N'
						 , p_calling_module         => 'AMG'
						 , p_project_id             => l_project_id
						 , x_highst_contr_cust_id   => hghst_ctr_cust_id
						 , x_return_status          => l_return_status
						 , x_msg_count              => l_msg_count
						 , x_msg_data               => l_msg_data );


				IF hghst_ctr_cust_id IS NOT NULL THEN

					UPDATE pa_project_customers SET customer_bill_split = 100
					WHERE customer_id = hghst_ctr_cust_id AND project_id = l_project_id;

					UPDATE pa_project_customers SET customer_bill_split = 0
					WHERE customer_id <> hghst_ctr_cust_id AND project_id = l_project_id;
				END IF;
			END IF;


	ELSE --enabling the federal flag

		UPDATE pa_project_customers SET customer_bill_split = null
		WHERE project_id = l_project_id;


	END IF;

END IF;
--End sunkalya:federal changes bug#5511353
END;

--Sunkalya federal: bug#5511353. This piece of code is added to take care of cases not
--handled by the logic above for bill split manipulations.
--The following will simply null out the bill split if either of the two flags are null.

IF p_project_in.date_eff_funds_flag ='Y' OR p_project_in.enable_top_task_customer_flag = 'Y' THEN

		UPDATE pa_project_customers SET customer_bill_split = null
		WHERE project_id = l_project_id;
END IF;
--Sunkalya federal: bug#5511353.

--Sunkalya federal. Bug#5511353
    OPEN  count_cust(l_project_id);
    FETCH count_cust INTO l_count_cust;
    CLOSE count_cust;

    OPEN  chk_task_level_funding(l_project_id);
    FETCH chk_task_level_funding INTO l_chk_task_level_funding;
    CLOSE chk_task_level_funding;


    IF l_count_cust > 1										AND
       l_chk_task_level_funding = 'Y'								AND
       p_project_in.date_eff_funds_flag = 'N'							AND
       l_old_date_eff_funds_flag= 'Y'								AND
       (
		p_project_in.enable_top_task_customer_flag = 'N' OR
			(
				nvl(p_project_in.enable_top_task_customer_flag,
				PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR AND
				l_old_cust_top_task_flag = 'N'
			)
       )
THEN
		PA_UTILS.ADD_MESSAGE(	 p_app_short_name  =>  'PA'
					,p_msg_name         => 'PA_TASK_FUNDING_EXIST'
				    );
		p_project_out.return_status := FND_API.G_RET_STS_ERROR;
		RAISE  FND_API.G_EXC_ERROR;

END IF;
--Sunkalya federal. Bug#5511353


-- Reset the global variable

   G_ParChildTsk_chks_deferred := 'N';

-- Need to handle project status changes in a special way
-- We would have updated the project with all the other required
-- information and new check whether it is ok to change to the
-- new status. If not ok, we will rollback all the other changes
-- The reason we are doing all the other updates is because
-- the Handle_project_status_change API and all the other
-- APIs that it uses,fetch the information about the project
-- from the database. Some of the information it would be looking for
-- may well be an input to this API itself (Update_project)
-- Hence,it would be prudent to first insert/update the project/task/
-- key members/class categories and then do the checking for status
-- change. If there is a failure in the status change APIs
-- then we will rollback all the changes

   IF l_project_status_changed = 'Y' THEN
             Pa_project_stus_utils.Handle_Project_Status_Change
                (x_calling_module          => 'UPDATE_PROJECT'
                 ,X_project_id             => l_project_rec.project_id
                 ,X_old_proj_status_code   => l_project_rec.project_status_code
                 ,X_new_proj_status_code   => p_project_in.project_status_code
                 ,X_project_type           => l_project_rec.project_type
                 ,X_project_start_date     => l_project_rec.start_date
                 ,X_project_end_date       => l_project_rec.completion_date
                 ,X_public_sector_flag     => l_project_rec.public_sector_flag
                 ,X_attribute_category     => l_project_rec.attribute_category
                 ,X_attribute1             => l_project_rec.attribute1
                 ,X_attribute2             => l_project_rec.attribute2
                 ,X_attribute3             => l_project_rec.attribute3
                 ,X_attribute4             => l_project_rec.attribute4
                 ,X_attribute5             => l_project_rec.attribute5
                 ,X_attribute6             => l_project_rec.attribute6
                 ,X_attribute7             => l_project_rec.attribute7
                 ,X_attribute8             => l_project_rec.attribute8
                 ,X_attribute9             => l_project_rec.attribute9
                 ,X_attribute10            => l_project_rec.attribute10
                 ,X_pm_product_code        => l_project_rec.pm_product_code
                 ,x_init_msg               => 'N'
                 ,x_verify_ok_flag         => l_verify_ok_flag
                 ,x_wf_enabled_flag        => l_wf_enabled_flag
                 ,X_err_stage              => l_err_stage
                 ,X_err_stack              => l_err_stack
                 ,x_err_msg_count          => l_err_msg_count
                 ,x_warnings_only_flag     => l_warnings_only_flag );

          -- If verify not ok then raise error
             IF  l_verify_ok_flag = 'N' THEN
                 p_project_out.return_status := l_return_status;
                 RAISE  FND_API.G_EXC_ERROR;
             --Fix for bug#9110781 Starts
             ELSIF l_verify_ok_flag = 'Y' THEN
             SELECT pa_obj_status_changes_s.NEXTVAL INTO l_obj_status_change_id FROM dual;

               IF (l_debug_mode = 'Y') THEN
                    pa_debug.debug('Calling PA_OBJ_STATUS_CHANGES_PKG.INSERT_ROW');
                    pa_debug.debug('Project_id '|| l_project_rec.project_id);
                    pa_debug.debug('Old project_status_code '|| l_project_rec.project_status_code);
                    pa_debug.debug('New project_status_code'|| p_project_in.project_status_code);
               END IF;

               OPEN  cur_get_system_status(l_project_rec.project_status_code);
               FETCH cur_get_system_status INTO l_old_sys_status;
               CLOSE cur_get_system_status;

               OPEN  cur_get_system_status(p_project_in.project_status_code);
               FETCH cur_get_system_status INTO l_new_sys_status;
               CLOSE cur_get_system_status;

               IF (l_debug_mode = 'Y') THEN
                     pa_debug.debug('Old project_sys_status_code '|| l_old_sys_status);
                     pa_debug.debug('New project_sys_status_code '|| l_new_sys_status);
               END IF;

                --For inserting status change comment into the status history table
                PA_OBJ_STATUS_CHANGES_PKG.INSERT_ROW
                ( X_ROWID                        => l_rowid,
                  X_OBJ_STATUS_CHANGE_ID         => l_obj_status_change_id,
                  X_OBJECT_TYPE                  => 'PA_PROJECTS',
                  X_OBJECT_ID                    => l_project_rec.project_id,
                  X_STATUS_TYPE                  => 'PROJECT',
                  X_NEW_PROJECT_STATUS_CODE      => p_project_in.project_status_code,
                  X_NEW_PROJECT_SYSTEM_STATUS_CO => l_new_sys_status,
                  X_OLD_PROJECT_STATUS_CODE      => l_project_rec.project_status_code,
                  X_OLD_PROJECT_SYSTEM_STATUS_CO => l_old_sys_status,
                  X_CHANGE_COMMENT               => p_project_in.status_change_comment,
                  X_LAST_UPDATED_BY              => fnd_global.user_id,
                  X_CREATED_BY                   => fnd_global.user_id,
                  X_CREATION_DATE                => sysdate,
                  X_LAST_UPDATE_DATE             => sysdate,
                  X_LAST_UPDATE_LOGIN            => fnd_global.user_id );

                  IF (l_debug_mode = 'Y') THEN
                     pa_debug.debug(' Updated PA_PROJECTS_ALL for status history');
                  END IF;

                  --Fix for bug#9110781 Ends

             END IF;
             l_statement := 'UPDATE PA_PROJECTS SET ';
                -- special case for update to and from 'CLOSED'
             IF l_closing_project = 'Y' THEN
                 l_statement := l_statement ||
                 ' PROJECT_STATUS_CODE = ' ||
                  ''''||p_project_in.project_status_code||''''||','||
                 ' CLOSED_DATE = SYSDATE,';
             ELSIF  l_reopening_project = 'Y' THEN
                 l_statement := l_statement ||
       ' PROJECT_STATUS_CODE = ' ||
                 ''''||p_project_in.project_status_code||''''||','||
               ' CLOSED_DATE = NULL,';
             ELSE
    l_statement :=   l_statement ||
          ' PROJECT_STATUS_CODE = ' ||
       ''''||p_project_in.project_status_code||''''||',';
             END IF;
             IF l_wf_enabled_flag = 'Y' THEN
                l_statement := l_statement ||
                ' WF_STATUS_CODE = '||
                ''''||l_wf_status_code||''''||',';
             END IF;
/* Code commented and added for bug#1752494 starts here */
/*
             l_statement :=     l_statement ||
                                ' LAST_UPDATE_DATE = '||''''||
                                SYSDATE||''''||',';
*/
             l_statement :=     l_statement ||
                                ' LAST_UPDATE_DATE = SYSDATE'||',';
/* Code commented and added for bug#1752494 ends here */
             l_statement :=   l_statement ||
                             ' LAST_UPDATED_BY = '||G_USER_ID||',';

             l_statement :=   l_statement ||
                             ' LAST_UPDATE_LOGIN = '||G_LOGIN_ID;

             l_statement :=   l_statement ||
                  ' WHERE PROJECT_ID = '|| TO_CHAR(l_project_id);

             l_cursor := dbms_sql.open_cursor;
             dbms_sql.parse(l_cursor, l_statement, dbms_sql.native);
             l_rows   := dbms_sql.execute(l_cursor);
             IF dbms_sql.is_open (l_cursor) THEN
               dbms_sql.close_cursor (l_cursor);
             END IF;

             /*Stubbed Out Auto Initiate Demand on Project Approval functionality
               Bug 3819086

             -- Bug 3611598 If Workflow is not enabled then call the wrapper API
             -- which in turn will invoke the concurrent program to Initiate Demand
             --If the Project Status is Approved
             OPEN c_project_sys_status_code ;
             FETCH c_project_sys_status_code INTO l_status_code ;
         CLOSE c_project_sys_status_code;

             IF nvl(l_status_code,'-99') = 'APPROVED' THEN

             IF nvl(l_wf_enabled_flag,'N') <> 'Y' THEN
                 PA_Actions_Pub.RUN_ACTION_CONC_PROCESS_WRP
                    (
                       p_project_id => l_project_id
                       ,p_project_number => p_project_in.pa_project_number -- 3671408 Added IN Parameter and passing project_number
                       ,x_msg_count => l_msg_count
                       ,x_msg_data  => l_msg_data
                       ,x_return_status  => l_return_status
                    );
                 IF (l_return_status <>  FND_API.G_RET_STS_SUCCESS) THEN
                      RAISE   FND_API.G_EXC_ERROR;
                 END IF;
             END IF;

             END IF;

             End of Commenting for Bug 3819086*/

             IF l_wf_enabled_flag = 'Y' THEN   -- start the project workflow
                Pa_project_wf.Start_Project_Wf
                           (p_project_id    => l_project_id,
                            p_err_stack     => l_err_stack,
                            p_err_stage     => l_err_stage,
                            p_err_code      => l_err_code
     );
                IF l_err_code <> 0 THEN
       p_project_out.return_status := l_return_status;
                   RAISE  FND_API.G_EXC_ERROR;
                END IF;
             END IF;
       END IF;


-- FP-M Bug # 3301192  --update project
   --maansari5/18 Delete all the dependency before creating new ones.
   --CAUTION: THIS WILL DELETE ALL THE INTRA-DEPENDENCIES IN THE PROJECT EVEN IF THE USER DOES NOT INTEND TO DELETE.
        --This has been discussed today may 18 with Sakthi and Hubert. The reason is performance.
IF nvl(p_pm_product_code,'WORKPLAN') <> 'WORKPLAN'    --Should not run in publishing flow.
THEN
--bug 3845240: use l_project_id instead of p_project_out.pa_project_id
    IF (PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS(l_project_id) = 'Y') AND
       l_update_structure_version_id IS NOT NULL AND
       l_update_structure_version_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN
        pa_proj_task_struc_pub.delete_intra_dependency(
                  p_element_version_id    => l_update_structure_version_id
                  ,x_return_status         => l_return_status );

           IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
           THEN
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
           ELSIF l_return_status = FND_API.G_RET_STS_ERROR
           THEN
               RAISE FND_API.G_EXC_ERROR;
           END IF;
    END IF;

   l_d_loop_count := p_tasks_in.first;
   WHILE l_d_loop_count IS NOT NULL LOOP
      l_task_in_rec := p_tasks_in(l_d_loop_count);

      --Commented by rtarway during FP.M Developement Mapping and Set Financial Changes.
      --Since the task Id is available, this function is not needed. This call fails in case of Spilt_mapping structure
      --Added by rtarway during FP.M Developement Mapping and Set Financial Changes.
      l_d_task_id :=  p_tasks_out(l_d_loop_count).pa_task_id;

--bug 3845240: use l_project_id instead of p_project_out.pa_project_id
      IF (PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS(l_project_id) = 'Y') THEN

--maansari5/18 replaced api call CONVERT_PM_TASKREF_TO_ID to CONVERT_PM_TASKREF_TO_ID_all
        IF l_d_task_id IS NULL AND l_task_in_rec.pm_task_reference IS NOT NULL AND
           l_task_in_rec.pm_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
        THEN
           PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_all(p_pa_project_id => l_project_id
                                              ,p_pm_task_reference => l_task_in_rec.pm_task_reference
                                              ,p_structure_type => l_structure_type
                                              ,p_out_task_id => l_d_task_id
                                              ,p_return_status => l_return_status);

           IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
           THEN
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
           ELSIF l_return_status = FND_API.G_RET_STS_ERROR
           THEN
               RAISE FND_API.G_EXC_ERROR;
           END IF;
        END IF;
--maansari5/18

      l_d_task_ver_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID(p_structure_version_id => l_update_structure_version_id
                                          ,p_task_id => l_d_task_id);

      pa_proj_task_struc_pub.parse_predecessor_import(p_string => l_task_in_rec.pred_string
                                                     ,p_delimeter => l_task_in_rec.pred_delimiter
                                                     ,p_task_version_Id => l_d_task_ver_id
                                                     ,x_return_status => l_return_status
                                                     ,x_msg_count => l_msg_count
                                                     ,x_msg_data  => l_msg_data);

          --maansari5/18
           IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
           THEN
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
           ELSIF l_return_status = FND_API.G_RET_STS_ERROR
           THEN
               RAISE FND_API.G_EXC_ERROR;
           END IF;
          --maansari5/18

          l_d_task_id := null;
    END IF;
   l_d_loop_count := p_tasks_in.next(l_d_loop_count);
  END LOOP;
END IF; --should not run in publishing flow.
-- 22-DEC-97, jwhite ----------------------------------------------------------
-- Added new OUT-paramter p_workflow_started

IF (l_wf_enabled_flag = 'Y' )
 THEN
  p_workflow_started    := 'Y';
END IF;
-- -----------------------------------------------------------------------------------


-- ZAKHAN Extensible Attribute Changes
--<Add Project/Task level Extensible Attributes>

    i := p_ext_attr_tbl_in.first;

    IF p_ext_attr_tbl_in.exists(i)
    THEN

      -- get the correct structure type
      l_structure_type := p_structure_in.structure_type;
      IF (l_structure_type IS NULL or l_structure_type = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) THEN
        l_structure_type := 'FINANCIAL';
      END IF;

      PA_USER_ATTR_PUB.Process_User_Attrs_Data(
         p_ext_attr_data_table   => p_ext_attr_tbl_in,
         p_project_id            => l_project_id,
         p_structure_type        => l_structure_type,
         x_failed_row_id_list    => l_failed_row_id_list,
         x_errorcode             => l_errorcode,
         x_msg_count             => l_msg_count,
         x_msg_data              => l_msg_data,
         x_return_status         => l_return_status      );

      IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
      THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF l_return_status = FND_API.G_RET_STS_ERROR
      THEN
         RAISE FND_API.G_EXC_ERROR;
      END IF;
   END IF;
--</Add Project/Task level Extensible Attributes>

--Begin Add by rtarway FP.M changes for Mapping
G_PROJECT_SHARING_TYPE := PA_PROJ_TASK_STRUC_PUB.GET_SHARE_TYPE(l_project_id);
IF (G_PROJECT_SHARING_TYPE = 'SPLIT_MAPPING' AND p_structure_in.structure_type = 'WORKPLAN')
THEN
     l_d_loop_count := p_tasks_in.first;
     WHILE l_d_loop_count IS NOT NULL LOOP
          l_task_in_rec := p_tasks_in(l_d_loop_count);
          --No Function Security Check required
          IF (
               (l_task_in_rec.mapped_task_reference  IS NULL OR l_task_in_rec.mapped_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
               OR
               (l_task_in_rec.mapped_task_id  IS NULL OR l_task_in_rec.mapped_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
             )
          THEN
               pa_project_pub.update_mapping
               (
                   p_api_version            => p_api_version_number
                 , p_init_msg_list          => FND_API.G_FALSE
                 , p_commit                 => FND_API.G_FALSE--bug 3766967
                 , p_debug_mode             => FND_API.G_TRUE
                 , p_project_id             => l_project_id
                 , p_proj_source_reference  => null
                 , p_wkp_structure_version_id => l_structure_version_id --bug#9456024
                 --, p_wkp_task_id            => l_tasks_out(i).pa_task_id--Since the tasks are already created , this will have task Ids
                 , p_wkp_task_reference     => l_task_in_rec.pm_task_reference
                 , px_mapped_task_id        => l_task_in_rec.mapped_task_id------------|One of theses two should be passed
                 , p_mapped_task_reference  => l_task_in_rec.mapped_task_reference ----|
                 , x_return_status          => l_return_status
                 , x_msg_count              => l_msg_count
                 , x_msg_data               => l_msg_data
               );
               IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
               ELSIF l_return_status = FND_API.G_RET_STS_ERROR        THEN
                     RAISE FND_API.G_EXC_ERROR;
               END IF;
          END IF;
          l_d_loop_count := p_tasks_in.next(l_d_loop_count);
     END LOOP;
END IF;
--Set Financial Task Flag --FP.M Changes
IF (G_PROJECT_SHARING_TYPE='SHARE_PARTIAL' AND p_structure_in.structure_type = 'FINANCIAL' )
THEN
     i := p_tasks_in.first();
     WHILE i IS NOT NULL LOOP
          --Initialize the return status to success
          p_tasks_out(i).return_status := FND_API.G_RET_STS_SUCCESS;
          l_task_in_rec := p_tasks_in(i);
          --No Function Security Check required
          --Get record version number from pa_tasks table
          OPEN  c_get_pa_record_version_number ( p_tasks_out(i).task_version_id  , l_project_id);
          FETCH c_get_pa_record_version_number INTO l_patask_record_version_number;
          CLOSE c_get_pa_record_version_number;

          IF
          (
            l_task_in_rec.financial_task_flag IS NOT NULL
            AND
            l_task_in_rec.financial_task_flag <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          )
          THEN
               PA_TASKS_MAINT_PUB.SET_FINANCIAL_FLAG_WRAPPER
               (
                      p_api_version               => p_api_version_number
                    , p_init_msg_list             => FND_API.G_FALSE
                    , p_commit                    => FND_API.G_FALSE--bug 3766967
                    , p_calling_module            => 'AMG'
                    , p_debug_mode                => FND_API.G_TRUE
                    , p_task_version_id           => p_tasks_out(i).task_version_id
                    , p_checked_flag              => l_task_in_rec.financial_task_flag
                    , p_record_version_number     => l_patask_record_version_number
                    , p_project_id                => l_project_id -- 4969319 p_project_out.pa_project_id
                    , p_published_version_exists  => G_Published_version_exists
                    , x_return_status             => l_return_status
                    , x_msg_count                 => l_msg_count
                    , x_msg_data                  => l_msg_data
               );
               -- Populating the appropriate values in task out records
               p_tasks_out(i).return_status    := l_return_status;

               IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
               ELSIF l_return_status = FND_API.G_RET_STS_ERROR        THEN
                     RAISE FND_API.G_EXC_ERROR;
               END IF;
          END IF;
          i := p_tasks_in.next(i);
     END LOOP;
END IF;
--End Add by rtarway  FP.M chages for Mapping and Set Financial task
------ 3435905 : FP M : Deliverables Changes For AMG Start-----------

    -- While updating a project, user can create new deliverables or
    -- update existing deliverables. If deliverable_reference exists
    -- then update_deliverable will be called else create_deliverables
    -- will be called.
    -- For actions there is same api for both create and update. Thus
    -- same wrapper api will be called for actions in both the cases

    -- 3773373 commented below code, here deliveable security check is done
    -- unconditionally, also, local variable usage is wrong
    -- if i is not null, assign first deliverable's return status as success
    -- and call create_deliverable or update_deliverable api
    -- here, create_deliverable and update_deliverable apis are doing deliverable security check
    -- so no need to it here .

    /*

       --initialize return status to success
       i:=1;
      -- 3435905 changed from p_deliverable_out to G_deliverables_out_tbl

       G_deliverables_out_tbl(i).return_status   := FND_API.G_RET_STS_SUCCESS;

       -- Function Security Check
       PA_PM_FUNCTION_SECURITY_PUB.check_function_security
       (p_api_version_number => p_api_version_number,
        p_responsibility_id  => l_resp_id,
        p_function_name      => 'PA_DELIVERABLE_EDIT',
        p_msg_count          => l_msg_count,
        p_msg_data           => l_msg_data,
        p_return_status      => l_return_status,
        p_function_allowed   => l_function_allowed);


        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
            RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
            RAISE FND_API.G_EXC_ERROR;
        END IF;

        IF l_function_allowed = 'N' THEN
           pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'Y'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');

        p_return_status := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
      END IF;
    */
    -- 3773373 changed local variable usage from i_dlvr to i
    -- if i is not null, set return status to success
    i := p_deliverables_in.first();

    IF i IS NOT NULL THEN
       -- 3435905 changed from p_deliverable_out to G_deliverables_out_tbl
       G_deliverables_out_tbl(i).return_status   := FND_API.G_RET_STS_SUCCESS;
    END IF;

    WHILE i IS NOT NULL LOOP

     -- Validate Deliverable reference / id- not null, unique
     -- 3858251 Added if condition to check, if user had passed dlvr ref and id ,
     --         then call below api to validate reference and id

      IF p_deliverables_in(i).deliverable_id IS NOT NULL AND p_deliverables_in(i).deliverable_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  THEN

          Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
            ( p_deliverable_reference => p_deliverables_in(i).pm_deliverable_reference
            , p_deliverable_id        => p_deliverables_in(i).deliverable_id
            , p_project_id            => l_project_id
            , p_out_deliverable_id    => l_deliverable_id
            , p_return_status         => x_return_status
          );

        IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR    THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF x_return_status = FND_API.G_RET_STS_ERROR       THEN
                RAISE FND_API.G_EXC_ERROR;
        END IF;

      END IF;

      -- 3858251 end

  --  Call Update_Deliverable in following cases
  --      1. If deliverable_id is passed.
  --      2. If deliverable_id is not passed and deliverable_reference  is not unique
  --  Otherwise call Create_Deliverables


      IF ( nvl( p_deliverables_in(i).deliverable_id, PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) THEN
        -- call Update_deliverables
           l_dlvr_dml_action := G_UPDATE_MODE;
      ELSE
         -- Bug 3651538 Moved the call of api from outside IF condition to inside else part
         -- as need to check for reference uniqueness only if ID is not passed.
         pa_deliverable_utils.is_dlvr_reference_unique (
            p_deliverable_reference  =>  p_deliverables_in(i).pm_deliverable_reference
          , p_project_id             =>  l_project_id
          , x_unique_flag            =>  l_unique_flag
          , x_return_status          =>  x_return_status );

         IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR    THEN
            RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
         ELSIF x_return_status = FND_API.G_RET_STS_ERROR       THEN
            RAISE FND_API.G_EXC_ERROR;
         END IF;

          IF ( l_unique_flag = 'N' )THEN
       -- call Update_deliverables
              l_dlvr_dml_action := G_UPDATE_MODE;
          ELSE
       -- call Create_Deliverables
              l_dlvr_dml_action := G_CREATE_MODE;
          END IF; -- deliverable_reference is unique

      END IF; -- non null deliverable_id is passed

      IF (l_dlvr_dml_action = G_CREATE_MODE) THEN

      -- Invoking the Create Deliverable API
            Pa_Project_Pub.create_deliverable
                (
                    p_api_version            => p_api_version_number
                  , p_init_msg_list          => p_init_msg_list
                  -- 3735792, passing p_commit as false to next level api calls
                  , p_commit                 => FND_API.G_FALSE
                  , p_debug_mode             => FND_API.G_TRUE
                  , x_return_status          => l_return_status
                  , p_deliverable_name       => p_deliverables_in(i).deliverable_name
                  , p_deliverable_short_name => p_deliverables_in(i).deliverable_short_name
                  , p_deliverable_type_id    => p_deliverables_in(i).deliverable_type_id
                  , p_deliverable_owner_id   => p_deliverables_in(i).deliverable_owner_id
                  , p_description            => p_deliverables_in(i).description
                  , p_status_code            => p_deliverables_in(i).status_code
                  , p_due_date               => p_deliverables_in(i).due_date
                  , p_completion_date        => p_deliverables_in(i).completion_date
                  , p_progress_weight        => p_deliverables_in(i).progress_weight
                  , px_deliverable_id        => l_deliverable_id
                  , p_pm_deliverable_reference=> p_deliverables_in(i).pm_deliverable_reference
                  -- for bug# 3729250
                  --  , p_carrying_out_org_id    => p_deliverables_in(i).carrying_out_org_id
                  , p_task_id                => p_deliverables_in(i).task_id
                  , p_task_source_reference  => p_deliverables_in(i).task_source_reference
                  , p_project_id             => l_project_id
                  , p_proj_source_reference  => null
                  , p_action_in_tbl          => p_deliverable_actions_in
                  -- 3435905 changed from p_deliverable_actions_out to G_deliverable_actions_out_tbl
                  , x_action_out_tbl         => G_deliverable_actions_out_tbl
              --  , x_action_out_tbl         => p_deliverable_actions_out
                  , p_item_id                => p_deliverables_in(i).item_id            -- 3630378 added parameter
                  , p_inventory_org_id       => p_deliverables_in(i).inventory_org_id
                  , p_quantity               => p_deliverables_in(i).quantity
                  , p_uom_code               => p_deliverables_in(i).uom_code
                  -- for bug# 3729250
                  --  , p_item_description       => p_deliverables_in(i).item_description
                  , p_unit_price         => p_deliverables_in(i).unit_price
                  , p_unit_number        => p_deliverables_in(i).unit_number
                  , p_currency_code      => p_deliverables_in(i).currency_code
                  , p_pm_source_code         =>  p_pm_product_code                       /* Bug no. 3651113 */
                  , x_msg_count              => l_msg_count
                  , x_msg_data               => l_msg_data
              );

      ELSE  --  l_dlvr_dml_action = G_UPDATE_MODE

      update_deliverable
      (
            p_api_version            => p_api_version_number
          , p_init_msg_list          => p_init_msg_list
          -- 3735792, passing p_commit as false to next level api calls
          , p_commit                 => FND_API.G_FALSE
          , p_debug_mode             => FND_API.G_TRUE
          , x_return_status          => l_return_status
          , p_deliverable_name       => p_deliverables_in(i).deliverable_name
          , p_deliverable_short_name => p_deliverables_in(i).deliverable_short_name
          , p_deliverable_type_id    => p_deliverables_in(i).deliverable_type_id
          , p_deliverable_owner_id   => p_deliverables_in(i).deliverable_owner_id
          , p_description            => p_deliverables_in(i).description
          , p_status_code            => p_deliverables_in(i).status_code
          , p_due_date               => p_deliverables_in(i).due_date
          , p_completion_date        => p_deliverables_in(i).completion_date
          , p_progress_weight        => p_deliverables_in(i).progress_weight
          , px_deliverable_id        => l_deliverable_id
          , p_pm_deliverable_reference=> p_deliverables_in(i).pm_deliverable_reference
          -- for bug# 3729250
          --  , p_carrying_out_org_id    => p_deliverables_in(i).carrying_out_org_id
          , p_task_id                => p_deliverables_in(i).task_id
          , p_task_source_reference  => p_deliverables_in(i).task_source_reference
          , p_project_id             => l_project_id
          , p_proj_source_reference  => null
         -- 3435905 changed from p_deliverable_actions_out to G_deliverable_actions_out_tbl
          , p_action_in_tbl          => p_deliverable_actions_in
      --  , x_action_out_tbl         => p_deliverable_actions_out
          , x_action_out_tbl         => G_deliverable_actions_out_tbl
          , p_item_id                => p_deliverables_in(i).item_id                -- 3630378 added parameter
          , p_inventory_org_id       => p_deliverables_in(i).inventory_org_id
          , p_quantity               => p_deliverables_in(i).quantity
          , p_uom_code               => p_deliverables_in(i).uom_code
          -- for bug# 3729250
          --  , p_item_description       => p_deliverables_in(i).item_description
          , p_unit_price             => p_deliverables_in(i).unit_price
          , p_unit_number            => p_deliverables_in(i).unit_number
          , p_currency_code          => p_deliverables_in(i).currency_code
          , p_pm_source_code         =>  p_pm_product_code                       /* Bug no. 3651113 */
          , x_msg_count              => l_msg_count
          , x_msg_data               => l_msg_data
      );
      END IF;

   -- Populating the appropriate values in deliverables out records

      -- 3435905 return status and deliverable id is directly assigned to
      -- global deliverable table
      -- removed the p_deliverables_out parameter and added global table

--      p_deliverables_out(i).return_status    := l_return_status;
--      p_deliverables_out(i).deliverable_id   := l_deliverable_id;

      G_deliverables_out_tbl(i).return_status := l_return_status;
      G_deliverables_out_tbl(i).deliverable_id := l_deliverable_id;

      IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
            RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF l_return_status = FND_API.G_RET_STS_ERROR        THEN
            RAISE FND_API.G_EXC_ERROR;
      END IF;

      -- 3773373 changed local variable usage from i_dlvr to i
      i := p_deliverables_in.next(i);

    END LOOP;

   ------ 3435905 : FP M : Deliverables Changes For AMG END-----------


        -- Bug # 4582750.
--Note that API  pa_project_structure_utils.lock_unlock_wp_str IS NOT autonomosu transaction.

    IF p_update_mode = 'PA_UPD_WBS_ATTR' AND l_prev_locked_status IS NOT NULL AND l_prev_locked_status = 'N'
       and (p_pm_product_code <> 'WORKPLAN') -- Bug # 4758888.
       AND p_structure_in.structure_version_id IS NOT NULL
       AND p_structure_in.structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN

          IF l_debug_mode = 'Y' THEN
             pa_debug.g_err_stage := 'Before calling pa_project_structure_utils.lock_unlock_wp_str for UNLOCKING'||
             'p_project_in.pa_project_id='||p_project_in.pa_project_id||
              '-l_structure_version_id='||l_structure_version_id;
              pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
          END IF;

          pa_project_structure_utils.lock_unlock_wp_str
                  (p_project_id                   => p_project_in.pa_project_id
                  ,p_structure_version_id         => p_structure_in.structure_version_id
                  ,p_lock_status_code             => 'UNLOCKED'
                  ,p_calling_module               => 'PA_UPD_WBS_ATTR'
                  ,x_return_status                => l_x_return_status
                  ,x_msg_count                    => l_x_msg_count
                 ,x_msg_data                     => l_x_msg_data);

         IF l_debug_mode = 'Y' THEN
              pa_debug.g_err_stage := 'After  calling pa_project_structure_utils.lock_unlock_wp_str for UNLOCKING'||
             'l_x_return_status='||l_x_return_status;
              pa_debug.write(l_module_name,pa_debug.g_err_stage,3);
         END IF;

         IF l_x_return_status =  FND_API.G_RET_STS_UNEXP_ERROR
         THEN
             p_project_out.return_status := l_x_return_status;
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

         ELSIF l_x_return_status = FND_API.G_RET_STS_ERROR
         THEN
             p_project_out.return_status := l_x_return_status;
           RAISE  FND_API.G_EXC_ERROR;
         END IF;

    END IF;

    -- End Bug # 4582750.



   IF (FND_API.to_boolean( p_commit )) OR
           l_wf_enabled_flag = 'Y'
   THEN
      COMMIT WORK;
   END IF;
   --4218977, rtarway, unset this global variable
   if (p_pm_product_code <> 'WORKPLAN') then
         G_OP_VALIDATE_FLAG := null;
     G_TASK_STR_UPDATE_MODE := null;
   end if;

EXCEPTION

    WHEN FND_API.G_EXC_ERROR THEN
pa_project_check_pvt.G_task_num_updated_index_tbl.delete;
        pa_project_check_pvt.G_index_counter                := 0;

        p_return_status := FND_API.G_RET_STS_ERROR ;
        G_ParChildTsk_chks_deferred := 'N';

        ROLLBACK TO Update_project_pub;

        -- Begin Bug # 4582750.

        if ((p_update_mode = 'PA_UPD_WBS_ATTR') and (l_prev_locked_status = 'N') and (p_pm_product_code <> 'WORKPLAN')) -- Bug # 4758888.
           AND p_structure_in.structure_version_id IS NOT NULL
           AND p_structure_in.structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        then

                pa_project_structure_utils.lock_unlock_wp_str_autonomous
                (p_project_id                   => p_project_in.pa_project_id
                , p_structure_version_id        => p_structure_in.structure_version_id
                , p_lock_status_code            => 'UNLOCKED'
                ,p_calling_module               => 'PA_UPD_WBS_ATTR_UN' /*Bug#6414944*/
                ,x_return_status                => l_x_return_status
                ,x_msg_count                    => l_x_msg_count
                ,x_msg_data                     => l_x_msg_data);

            if (l_x_return_status <> FND_API.G_RET_STS_SUCCESS) then
                    raise;
            end if;

        end if;

        -- End Bug # 4582750.

       --4218977, rtarway, unset this global variable
       if (p_pm_product_code <> 'WORKPLAN') then
         G_OP_VALIDATE_FLAG := null;
     G_TASK_STR_UPDATE_MODE := null;
       end if;

         -- 4537865
         p_workflow_started := NULL ;

        FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );


    WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        pa_project_check_pvt.G_task_num_updated_index_tbl.delete;
        pa_project_check_pvt.G_index_counter                := 0;
        G_ParChildTsk_chks_deferred := 'N';
        ROLLBACK TO Update_project_pub;

    -- Begin Bug # 4582750.
        if ((p_update_mode = 'PA_UPD_WBS_ATTR') and (l_prev_locked_status = 'N') and (p_pm_product_code <> 'WORKPLAN')) -- Bug # 4758888.
           AND p_structure_in.structure_version_id IS NOT NULL
           AND p_structure_in.structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        then


            pa_project_structure_utils.lock_unlock_wp_str_autonomous
            (p_project_id                   => p_project_in.pa_project_id
            , p_structure_version_id        => p_structure_in.structure_version_id
            , p_lock_status_code            => 'UNLOCKED'
                ,p_calling_module               => 'PA_UPD_WBS_ATTR'
            ,x_return_status                => l_x_return_status
            ,x_msg_count                    => l_x_msg_count
            ,x_msg_data                     => l_x_msg_data);

            if (l_x_return_status <> FND_API.G_RET_STS_SUCCESS) then
                    raise;
            end if;

    end if;

    -- End Bug # 4582750.

       --4218977, rtarway, unset this global variable
       if (p_pm_product_code <> 'WORKPLAN') then
         G_OP_VALIDATE_FLAG := null;
     G_TASK_STR_UPDATE_MODE := null;
       end if;

        -- 4537865
        p_workflow_started := NULL ;

        FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

     WHEN NO_DATA_FOUND THEN
      -- code fix for bug 3579257 : Bug 3627124 starts
         --dbms_output.put_line ('in no data found');
     p_return_status := FND_API.G_RET_STS_ERROR;
     ROLLBACK TO update_project_pub;


        -- Begin Bug # 4582750.

        if ((p_update_mode = 'PA_UPD_WBS_ATTR') and (l_prev_locked_status = 'N') and (p_pm_product_code <> 'WORKPLAN')) -- Bug # 4758888.
           AND p_structure_in.structure_version_id IS NOT NULL
           AND p_structure_in.structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        then


                pa_project_structure_utils.lock_unlock_wp_str_autonomous
                (p_project_id                   => p_project_in.pa_project_id
                , p_structure_version_id        => p_structure_in.structure_version_id
                , p_lock_status_code            => 'UNLOCKED'
                ,p_calling_module               => 'PA_UPD_WBS_ATTR_UN' /*Bug#6414944*/
                ,x_return_status                => l_x_return_status
                ,x_msg_count                    => l_x_msg_count
                ,x_msg_data                     => l_x_msg_data);

            if (l_x_return_status <> FND_API.G_RET_STS_SUCCESS) then
                    raise;
            end if;

        end if;

        -- End Bug # 4582750.

         pa_project_check_pvt.G_task_num_updated_index_tbl.delete;
         pa_project_check_pvt.G_index_counter                := 0;
         G_ParChildTsk_chks_deferred := 'N';
       --4218977, rtarway, unset this global variable
       if (p_pm_product_code <> 'WORKPLAN') then
         G_OP_VALIDATE_FLAG := null;
     G_TASK_STR_UPDATE_MODE := null;
       end if;

        -- 4537865
        p_workflow_started := NULL ;

         -- code fix for bug 3579257 : Bug 3627124 ends
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_NO_DATA_FOUND'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');

    WHEN ROW_ALREADY_LOCKED THEN
  ROLLBACK TO update_project_pub;

        -- Begin Bug # 4582750.

        if ((p_update_mode = 'PA_UPD_WBS_ATTR') and (l_prev_locked_status = 'N') and (p_pm_product_code <> 'WORKPLAN')) -- Bug # 4758888.
           AND p_structure_in.structure_version_id IS NOT NULL
           AND p_structure_in.structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        then


                pa_project_structure_utils.lock_unlock_wp_str_autonomous
                (p_project_id                   => p_project_in.pa_project_id
                , p_structure_version_id        => p_structure_in.structure_version_id
                , p_lock_status_code            => 'UNLOCKED'
                ,p_calling_module               => 'PA_UPD_WBS_ATTR_UN' /*Bug#6414944*/
                ,x_return_status                => l_x_return_status
                ,x_msg_count                    => l_x_msg_count
                ,x_msg_data                     => l_x_msg_data);

            if (l_x_return_status <> FND_API.G_RET_STS_SUCCESS) then
                    raise;
            end if;

        end if;

        -- End Bug # 4582750.

        pa_project_check_pvt.G_task_num_updated_index_tbl.delete;
        pa_project_check_pvt.G_index_counter                := 0;
        G_ParChildTsk_chks_deferred := 'N';

        -- 4537865
        p_workflow_started := NULL ;

  p_return_status := FND_API.G_RET_STS_ERROR;
      --4218977, rtarway, unset this global variable
       if (p_pm_product_code <> 'WORKPLAN') then
         G_OP_VALIDATE_FLAG := null;
     G_TASK_STR_UPDATE_MODE := null;
       end if;
  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
      FND_MESSAGE.SET_NAME('PA','PA_ROW_ALREADY_LOCKED_P_AMG');
      FND_MESSAGE.SET_TOKEN('PROJECT', l_project_rec.segment1);
      FND_MESSAGE.SET_TOKEN('ENTITY', G_PROJECT_CODE);
      FND_MSG_PUB.ADD;
  END IF;

  FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );


    WHEN OTHERS THEN

        ROLLBACK TO Update_project_pub;

        -- Begin Bug # 4582750.

        if ((p_update_mode = 'PA_UPD_WBS_ATTR') and (l_prev_locked_status = 'N') and (p_pm_product_code <> 'WORKPLAN'))  -- Bug # 4758888.
           AND p_structure_in.structure_version_id IS NOT NULL
           AND p_structure_in.structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        then


                pa_project_structure_utils.lock_unlock_wp_str_autonomous
                (p_project_id                   => p_project_in.pa_project_id
                , p_structure_version_id        => p_structure_in.structure_version_id
                , p_lock_status_code            => 'UNLOCKED'
                ,p_calling_module               => 'PA_UPD_WBS_ATTR_UN' /*Bug#6414944*/
                ,x_return_status                => l_x_return_status
                ,x_msg_count                    => l_x_msg_count
                ,x_msg_data                     => l_x_msg_data);

            if (l_x_return_status <> FND_API.G_RET_STS_SUCCESS) then
                    raise;
            end if;

        end if;

        -- End Bug # 4582750.

        G_ParChildTsk_chks_deferred := 'N';
        pa_project_check_pvt.G_task_num_updated_index_tbl.delete;
        pa_project_check_pvt.G_index_counter                := 0;
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       --4218977, rtarway, unset this global variable
       if (p_pm_product_code <> 'WORKPLAN') then
         G_OP_VALIDATE_FLAG := null;
       end if;
        IF FND_MSG_PUB.Check_Msg_Level (FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
            FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );
        END IF;

        -- 4537865
        p_workflow_started := NULL ;

        FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );


END Update_project;

--------------------------------------------------------------------------------
--Name:               update_task
--Type:               Procedure
--Description:        This procedure can be used to update a task
--
--
--Called subprograms:
--
--
--
--History:
--    31-JUL-1996        R. Krishnamurthy      Created
--    28-NOV-1996   L. de Werker     Added 11 parameters for descriptive flexfields
--    04-DEC-1996   L. de Werker    Debugged errors + added checking of NULL values.
--    05-DEC-1996   L. de Werker    Added validation of service_type_code
--            Fixed error that occurred when a parent was changed,
--            added change of WBS_level, if appropriate.
--            Added checking for task_completion_date
--            Added WHO columns update in dynamic SQL string
--    06-DEC-1996  L. de Werker    Added locking mechanism
--    10-DEC-1996  L. de Werker    Added parameter p_pa_parent_task_id
--            Added parameter p_address_id
--    03-MAY-2000       Rakesh Raghavan         Fixed Bug # 1289156.
--    15-jul-2003      sramesh        -- Added the code for bug 2982057.
--                                       Changed the logic to populate the long_task_name
--                                       with task_name when the long_task_name is null.
--          22-JAN-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to add parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days to tasks and create dependencies.
--          10-FEB-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to replace parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days with parameters: pred_string and pred_delimiter.
--          05-APR-2004 Rakesh Raghavan      Progress Management Changes. Bug # 3420093.
--          29-Dec-2005 vkadimes     Bug Number 4689326 and 4689888 Changes are tagged with Bug Numbers.
PROCEDURE update_task
( p_api_version_number               IN  NUMBER,
  p_commit                           IN  VARCHAR2  := FND_API.G_FALSE,
  p_init_msg_list                    IN  VARCHAR2  := FND_API.G_FALSE,
  p_msg_count                        OUT NOCOPY NUMBER,  /*Added the nocopy check for 4537865 */
  p_msg_data                         OUT NOCOPY VARCHAR2,  /*Added the nocopy check for 4537865 */
  p_return_status                    OUT NOCOPY VARCHAR2,  /*Added the nocopy check for 4537865 */
--Project Structures
  p_ref_task_id                      IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
--Project Structures
  p_pm_product_code                  IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_pm_project_reference             IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_pa_project_id                    IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_pm_task_reference                IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_task_number                      IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_pa_task_id                       IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_task_name                        IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_long_task_name                   IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_task_description                 IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_task_start_date                  IN  DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_task_completion_date             IN  DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_pm_parent_task_reference         IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_pa_parent_task_id                IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_address_id                       IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_carrying_out_organization_id     IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_service_type_code                IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_task_manager_person_id           IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_billable_flag                    IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_chargeable_flag                  IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_ready_to_bill_flag               IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_ready_to_distribute_flag         IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_limit_to_txn_controls_flag       IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_labor_bill_rate_org_id           IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_labor_std_bill_rate_schdl        IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_labor_schedule_fixed_date        IN  DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_labor_schedule_discount          IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_nl_bill_rate_org_id              IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_nl_std_bill_rate_schdl           IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_nl_schedule_fixed_date           IN  DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_nl_schedule_discount             IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_labor_cost_multiplier_name       IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_cost_ind_rate_sch_id             IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_rev_ind_rate_sch_id              IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_inv_ind_rate_sch_id              IN  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_cost_ind_sch_fixed_date          IN  DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_rev_ind_sch_fixed_date           IN  DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_inv_ind_sch_fixed_date           IN  DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_labor_sch_type                   IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_nl_sch_type                      IN  VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_actual_start_date                IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_actual_finish_date               IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_early_start_date                 IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_early_finish_date                IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_late_start_date                  IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_late_finish_date                 IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_scheduled_start_date             IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_scheduled_finish_date            IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_tasks_dff                        IN  VARCHAR2    := 'N', --bug 6153503
  p_attribute_category               IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute1                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute2                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute3                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute4                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute5                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute6                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute7                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute8                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute9                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute10                      IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  --bug 6153503
  p_attribute11                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute12                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute13                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute14                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_attribute15                       IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_allow_cross_charge_flag          IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_project_rate_date                IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_project_rate_type                IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_cc_process_labor_flag            IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_labor_tp_schedule_id             IN  NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_labor_tp_fixed_date              IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_cc_process_nl_flag               IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_nl_tp_schedule_id                IN  NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_nl_tp_fixed_date                 IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
  p_receive_project_invoice_flag     IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_work_type_id                     IN  NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_emp_bill_rate_schedule_id        IN  NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_job_bill_rate_schedule_id        IN  NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
--Sakthi  MCB
  p_non_lab_std_bill_rt_sch_id       IN  NUMBER       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
  p_taskfunc_cost_rate_type          IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
  p_taskfunc_cost_rate_date          IN  DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
--Sakthi  MCB
--Project Structures
 p_structure_type                    IN VARCHAR2      := 'FINANCIAL',
 p_structure_version_id              IN NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 P_OBLIGATION_START_DATE             IN DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 P_OBLIGATION_FINISH_DATE            IN DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 P_ESTIMATED_START_DATE              IN DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 P_ESTIMATED_FINISH_DATE             IN DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 P_BASELINE_START_DATE               IN DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 P_BASELINE_FINISH_DATE              IN DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 P_CLOSED_DATE                       IN DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 P_WQ_UOM_CODE                       IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_WQ_ITEM_CODE                      IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_STATUS_CODE                       IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_WF_STATUS_CODE                    IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_PM_SOURCE_CODE                    IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_PRIORITY_CODE                     IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_MILESTONE_FLAG                    IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_CRITICAL_FLAG                     IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_INC_PROJ_PROGRESS_FLAG            IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_LINK_TASK_FLAG                    IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 P_CALENDAR_ID                       IN NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 P_PLANNED_EFFORT                    IN NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 P_DURATION                          IN NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 P_PLANNED_WORK_QUANTITY             IN NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 P_TASK_TYPE                         IN NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
--Project Structures
 p_labor_disc_reason_code            IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 p_non_labor_disc_reason_code        IN VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
--PA L changes -- bug 2872708  --update_task
 p_retirement_cost_flag              VARCHAR2         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 p_cint_eligible_flag                VARCHAR2         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 p_cint_stop_date                    DATE             := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
--end PA L changes -- bug 2872708
  p_out_pa_task_id                   OUT NOCOPY NUMBER,  /*Added the nocopy check for 4537865 */
 p_out_pm_task_reference              OUT NOCOPY  VARCHAR2,  /*Added the nocopy check for 4537865 */
 p_update_task_structure             IN   VARCHAR2,
-- PA L Changes 3010538
 p_process_mode                      IN   VARCHAR2 := 'ONLINE'
-- FP-M Bug # 3301192
 ,p_pred_string                   VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- ,p_pred_delimiter                     VARCHAR2    DEFAULT ','
 ,p_pred_delimiter               VARCHAR2   :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes begin (venkat)
  ,p_base_percent_comp_deriv_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_sch_tool_tsk_type_code     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_type_code       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_constraint_date            IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  ,p_free_slack             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_total_slack            IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_effort_driven_flag         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_level_assignments_flag     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_invoice_method         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_customer_id            IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_gen_etc_source_code        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes end (venkat)
-- FP M changes start (Mapping )
  ,p_financial_task_flag           IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_mapped_task_id                IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_mapped_task_reference         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes end (Mapping )
 ,p_deliverable                 IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- (Begin venkat) Bug #3450684 --------------------------------------------------------------------
 ,p_ext_act_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
 ,p_ext_remain_duration         IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
 ,p_ext_sch_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
-- (End venkat) Bug #3450684 --------------------------------------------------------------------

-- Progress Management Changes. Bug # 3420093.
  ,p_etc_effort                 IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_percent_complete           IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
-- Progress Management Changes. Bug # 3420093.
  ,p_is_wp_seperate_from_fn     IN   VARCHAR2 := 'X'  -- Added for bug#3451073
  ,p_calling_api      IN VARCHAR2 := 'UPDATE_TASK'   -- Added for Bug # 4199694
  ,p_op_validate_flag  IN VARCHAR2 := 'Y'
)

IS

l_return_status         VARCHAR2(1);
l_msg_count             NUMBER;
l_msg_data              VARCHAR2(2000);
l_out_pa_task_id        NUMBER;
l_out_pm_task_reference VARCHAR2(25);

l_api_name              CONSTANT      VARCHAR2(30):=  'update_task';

l_project_id            NUMBER;   --bug 2471668

--project structures
l_function_allowed      VARCHAR2(1);
l_resp_id               NUMBER := 0;
--project structures

--Bug 2665656
--l_pm_product_code                      VARCHAR2(30);
--Bug 2665656

l_update_wbs_flag      VARCHAR2(1);
l_long_task_name    VARCHAR2(240);  /*Added for bug 2982057 */

--Bug 3106457
--l_structure_version_id   pa_proj_element_versions.element_version_id%TYPE;
--Changed by rtarway for BUG 3919800, the type gives error when assigned a value containg miss num
l_structure_version_id     NUMBER;

-- FP-M Bug # 3301192
   l_d_task_id NUMBER;
   l_d_task_ver_id NUMBER;
   l_d_struct_ver_id NUMBER;
   l_ref_task_id       NUMBER; -- Bug 3705333
l_amg_task_number       VARCHAR2(50);  --bug 3705333
 l_amg_segment1       VARCHAR2(25);  --bug 3705333

--Added by rtarway in FP.M Development
l_task_version_id NUMBER;
l_patask_record_version_number NUMBER;
--Added by rtarway in FP.M Development

--Bug 3279981. Fetch project information
CURSOR cur_get_proj_billing_info(c_project_id IN NUMBER) IS
SELECT enable_top_task_customer_flag, enable_top_task_inv_mth_flag,
       revenue_accrual_method, invoice_method, project_type
FROM   pa_projects_all
WHERE  project_id = c_project_id;

CURSOR cur_check_proj_cust_exist (c_project_id IN NUMBER , c_customer_id IN NUMBER ) IS
SELECT 'Y'
FROM  pa_project_customers
WHERE project_id = c_project_id
AND   customer_id = c_customer_id ;

CURSOR cur_get_def_top_task_cust(c_project_id IN NUMBER) IS
SELECT customer_id
FROM  pa_project_customers
WHERE project_id = c_project_id
AND   default_top_task_cust_flag = 'Y';
-- Added This cursor for Bug No 4689326
CURSOR l_cur_customer_name(l_customer_id NUMBER)
 IS
  SELECT customer_name from PA_CUSTOMERS_V
  WHERE customer_id = l_customer_id;
-- Added for bug 5242015
CURSOR cur_top_task_customer_id (l_task_id NUMBER ) IS
SELECT customer_id FROM pa_tasks
WHERE task_id=l_task_id;

l_proj_top_task_customer_flag VARCHAR2(1);
l_proj_top_task_inv_mth_flag  VARCHAR2(1);
l_proj_revenue_acc_method     VARCHAR2(30);
l_proj_invoice_method         VARCHAR2(30);
l_proj_type                   VARCHAR2(20);
l_invoice_method              VARCHAR2(30) := p_invoice_method;
l_customer_id                 NUMBER       := p_customer_id;
l_dummy                       VARCHAR2(1);
l_published_version_exists    VARCHAR2(1);
l_is_wp_separate_from_fn      VARCHAR2(1);
l_is_wp_versioning_enabled    VARCHAR2(1);
l_structure_type              VARCHAR2(30) ;
l_customer_name		      VARCHAR2(360); -- Added for bug 4689888  -- Modified to VARCHAR2(360) for bug 5856469
l_top_task_customer_id       NUMBER; -- Added for Bug 5242015
/* Added for bug 3705333 */
 CURSOR   l_amg_project_csr
      (p_pa_project_id pa_projects.project_id%type)
   IS
   SELECT   segment1
   FROM     pa_projects p
   WHERE p.project_id = l_project_id ;  --Bug#3747312 p_pa_project_id;
   /* changes end  for bug 3705333 */
--Bug 3279981
--rtarway, BUG 3908013
l_attribute_category  VARCHAR2(150);
l_attribute1         VARCHAR2(150);
l_attribute2         VARCHAR2(150);
l_attribute3         VARCHAR2(150);
l_attribute4         VARCHAR2(150);
l_attribute5         VARCHAR2(150);
l_attribute6         VARCHAR2(150);
l_attribute7         VARCHAR2(150);
l_attribute8         VARCHAR2(150);
l_attribute9         VARCHAR2(150);
l_attribute10        VARCHAR2(150);
--rtarway, BUG 3908013
--Added by rtarway for BUG 3919800

--bug 6153503
l_wp_attribute_category  VARCHAR2(150);
l_wp_attribute1          VARCHAR2(150);
l_wp_attribute2          VARCHAR2(150);
l_wp_attribute3          VARCHAR2(150);
l_wp_attribute4          VARCHAR2(150);
l_wp_attribute5          VARCHAR2(150);
l_wp_attribute6          VARCHAR2(150);
l_wp_attribute7          VARCHAR2(150);
l_wp_attribute8          VARCHAR2(150);
l_wp_attribute9          VARCHAR2(150);
l_wp_attribute10         VARCHAR2(150);
l_wp_attribute11         VARCHAR2(150);
l_wp_attribute12         VARCHAR2(150);
l_wp_attribute13         VARCHAR2(150);
l_wp_attribute14         VARCHAR2(150);
l_wp_attribute15         VARCHAR2(150);

l_project_sharing_type VARCHAR2(250);
l_pa_task_id           NUMBER;
l_fin_task_flag        VARCHAR2(1);

--Used to get current_working_version in case of VE case
 CURSOR cur_get_working_struc_ver (l_project_id NUMBER,l_structure_type VARCHAR2)
   IS
     SELECT c.element_version_id
       FROM  pa_proj_element_versions c
           , pa_structure_types a
           , pa_proj_structure_types b
           , pa_proj_elem_ver_structure d
      WHERE c.project_id = l_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = l_structure_type
        AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id
        AND d.status_code = 'STRUCTURE_WORKING';

--Used to get structure version in VD case
 CURSOR cursor_get_struc_ver (l_project_id NUMBER,l_structure_type VARCHAR2)
   IS
     SELECT c.element_version_id
       FROM  pa_proj_element_versions c
           , pa_structure_types a
           , pa_proj_structure_types b
           , pa_proj_elem_ver_structure d
      WHERE c.project_id = l_project_id
        AND a.structure_type_id = b.structure_type_id
        AND b.proj_element_id = c.proj_element_id
        AND a.structure_type = l_structure_type
        AND d.project_id = c.project_id
        AND d.element_version_id = c.element_version_id;


CURSOR CUR_GET_FINANCIAL_FLAG (l_project_id NUMBER, l_proj_element_id NUMBER , l_parent_str_ver_id NUMBER)
IS
SELECT FINANCIAL_TASK_FLAG
from pa_proj_element_versions
where project_id = l_project_id
and   proj_element_id = l_proj_element_id
and   parent_structure_version_id = l_parent_str_ver_id;

--BUG 4106154, rtarway
l_update_pa_tasks VARCHAR2(1);

l_tasks_out          pa_project_pub.task_out_tbl_type;  --bug 4199694

--BUG 4081329, rtarway
     cursor cur_get_child_task_dates (l_project_id NUMBER, l_task_id NUMBER)
     IS   select task_id, start_date, completion_date, parent_task_id from pa_tasks  --Fix for 7427388
          where project_id = l_project_id
          and   completion_date is null
               start with parent_task_id = l_task_id
               connect by parent_task_id = prior task_id
               and  project_id = l_project_id;

    --Bug#7015228
     cursor cur_get_child_task_start_dates (l_project_id NUMBER, l_task_id NUMBER)
     IS   select task_id, start_date, completion_date from pa_tasks
          where project_id = l_project_id
          and   start_date is null
               start with parent_task_id = l_task_id
               connect by parent_task_id = prior task_id
               and  project_id = l_project_id;

     type l_task_id_tbl_type is table of pa_tasks.task_id%type index by binary_integer;
     type l_start_date_tbl_type is table of pa_tasks.start_date%type index by binary_integer;
     type l_completion_date_tbl_type is table of pa_tasks.completion_date%type index by binary_integer;

     l_task_id_tbl             l_task_id_tbl_type;
     l_start_date_tbl          l_start_date_tbl_type;
     l_completion_date_tbl     l_completion_date_tbl_type;

     -- Fix for 7427388
     type l_parent_task_id_tbl_type is table of pa_tasks.parent_task_id%type index by binary_integer;
     l_parent_task_id_tbl      l_parent_task_id_tbl_type;
     l_parent_task_date        DATE;

--BUG 4081329, rtarway

BEGIN
   ----dbms_output.put_line('value of p_task_number in update_task'||p_task_number);

  SAVEPOINT update_task_pub;
    -- Begin Bug # 4630058.
    -- Initialize the message table if requested.
    if FND_API.TO_BOOLEAN(p_init_msg_list) then
        FND_MSG_PUB.initialize;
    end if;
    -- End Bug # 4630058.

  -- 4537865 : Initialize return status to success
  p_return_status    := FND_API.G_RET_STS_SUCCESS;

  --BUG 4218977, we need to initialize this variable,
  --keeping in mind that it might be set by update_project
  --we can use the parameter p_calling_api,
  --set this parameter only if p_calling_api is 'UPDATE_TASK'
  --this will be passed as UPDATE_PROJECT from update_project API
  if p_calling_api <> 'UPDATE_PROJECT' then
     G_OP_VALIDATE_FLAG := p_op_validate_flag;
  end if;

  --bug 3880482
      PA_PROJECT_PVT.Convert_pm_projref_to_id
        (        p_pm_project_reference =>      p_pm_project_reference
                 ,  p_pa_project_id     =>      p_pa_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      l_return_status
        );


      IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN

              RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN
              RAISE  FND_API.G_EXC_ERROR;
      END IF;

     PA_INTERFACE_UTILS_PUB.G_PROJECt_ID := l_project_id;  --bug 2471668 ( in the project context )
  --end bug 3880482
     --Added by rtarway for BUG 3919800
     l_structure_type := p_structure_type;
     --Get task id
     --Added by rtarway, for BUG 3919800, this is done as we require to do validation in share_partial case beforehand
     -- storing p_pa_task_id in local variable will make it consistent for other structures also.
      if (p_pa_task_id is not null and p_pa_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
         then l_pa_task_id := p_pa_task_id;
      end if;
      --Also Validate task id
      PA_PROJECT_PVT.Convert_pm_taskref_to_id_all
      (
           p_pa_project_id        => l_project_id    ,
           p_structure_type       => l_structure_type,
           p_pa_task_id           => p_pa_task_id ,
           p_pm_task_reference    => p_pm_task_reference ,
           p_out_task_id          => l_pa_task_id,
           p_return_status        => l_return_status
      );
      IF l_return_status <> 'S'
      THEN
          RAISE FND_API.G_EXC_ERROR;
      END IF;

       --bug 2471668.
       --We need to call this API here toget the corrct project id. This is also
       --called from the private API. But I discussed with Sakthi and he is ok to call this
       --twice once here and second time in private API. The idea is to make the advanced security changes
       --only in public APIs.

 -- Initialize local variables
 -- Bug#3747312
 l_published_version_exists := PA_PROJ_TASK_STRUC_PUB.Published_version_exists( l_project_id );
 l_is_wp_separate_from_fn   := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id );
 l_is_wp_versioning_enabled := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED( l_project_id );

  -- In case of shared structure p_structure_type should be passed as
  -- FINANCIAL and this should be the first validation.
  IF (p_structure_type is null OR p_structure_type = 'WORKPLAN') THEN
       IF PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( l_project_id ) = 'N' OR
            NVL( l_is_wp_separate_from_fn,'N') = 'N'  --bug 2876703 update_task
       THEN
             IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
             THEN
                 pa_interface_utils_pub.map_new_amg_msg
                   ( p_old_message_code => 'PA_PS_WP_NOT_SEP_FN'
                       ,p_msg_attribute    => 'CHANGE'
                       ,p_resize_flag      => 'N'
                       ,p_msg_context      => 'GENERAL'
                       ,p_attribute1       => ''
                       ,p_attribute2       => ''
                       ,p_attribute3       => ''
                       ,p_attribute4       => ''
                       ,p_attribute5       => '');
             END IF;
             RAISE FND_API.G_EXC_ERROR;
       END IF;
  END IF ;
   -- Bug#3747312

     --end of bug 2471668

/*    --bug 2665656
    IF NVL( p_pm_product_code, 'WORKPLAN' ) = 'WORKPLAN'
    THEN
       l_pm_product_code := null;
    END IF;
    --bug 2665656
*/

  -- Bug#3747312
  -- Derive the structure type based on whether its shared case
  -- and WP versioning is enabled or not and whether published
  -- version exists.

  -- BUG 3919800, rtarway, Assign l_structure_version_id value of p_structure_version_id
     l_structure_version_id := p_structure_version_id;


  IF nvl(l_published_version_exists,'N') = 'Y'
      AND nvl(l_is_wp_separate_from_fn,'N') = 'N'
      AND nvl(l_is_wp_versioning_enabled,'N') = 'Y'
      AND p_structure_type = 'FINANCIAL'
      AND p_pm_product_code <> 'WORKPLAN'
   THEN
       --Change the flow to WORKPLAN
       l_structure_type := 'WORKPLAN';
       l_update_pa_tasks := 'Y'; --BUG 4106154, rtarway

      --BUG 3919800, in case of workplan, we must derive structure version id and pass it further.
      OPEN  cur_get_working_struc_ver(l_project_id, l_structure_type);
      FETCH cur_get_working_struc_ver into l_structure_version_id;
      CLOSE cur_get_working_struc_ver ;
   ELSE
       l_structure_type := p_structure_type;
   END IF;
   -- Bug#3747312

 --Added by rtarway for BUG 3919800
 --Validate for task and change the structure type, if structure type is shared partial and workplan task is being updated.
  --1. get the structure sharing code
  l_project_sharing_type := PA_PROJ_TASK_STRUC_PUB.GET_SHARE_TYPE(l_project_id);
  IF (l_project_sharing_type='SHARE_PARTIAL' )
  THEN
          --3. get the structure version id
               IF (l_structure_version_id is null or l_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
               THEN
                   --1.VE case, there will be only one working workplan version, get the structure version id for that version
                     IF l_is_wp_versioning_enabled = 'Y'
                     THEN
                         OPEN  cur_get_working_struc_ver(l_project_id, l_structure_type);
                         FETCH cur_get_working_struc_ver into l_structure_version_id;
                         CLOSE cur_get_working_struc_ver ;

                   --2.VD case, there will be only one version, get that version
                     ELSE
                         OPEN  cursor_get_struc_ver(l_project_id, l_structure_type);
                         FETCH cursor_get_struc_ver into l_structure_version_id;
                         CLOSE cursor_get_struc_ver;
                     END IF;
               END IF;
          --4. Get the existing financial_task_flag
          OPEN  CUR_GET_FINANCIAL_FLAG (l_project_id, l_pa_task_id,l_structure_version_id);
          FETCH CUR_GET_FINANCIAL_FLAG into l_fin_task_flag;
          CLOSE CUR_GET_FINANCIAL_FLAG;
          --5. if existing financial task flag is 'N', change the structure type to 'WORKPLAN'
          IF l_fin_task_flag = 'N'
          THEN
               l_structure_type := 'WORKPLAN';
          END IF;
  END IF;
--End Added by rtarway for BUG 3919800

/* Code added for the bug 2982057 starts */
 IF p_long_task_name IS NULL OR p_long_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
   l_long_task_name := p_task_name;
 ELSE
   l_long_task_name := p_long_task_name;
 END IF;

 /* Code addition for bug 2982057 ends */
 /* CHANGES START FOR BUG 3705333*/

 OPEN l_amg_project_csr(l_project_id ); --Bug#3747312
 FETCH l_amg_project_csr INTO l_amg_segment1;
 CLOSE l_amg_project_csr;

 --Project Structures
     IF p_ref_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
        l_ref_task_id :=  null;
     ELSE
        l_ref_task_id :=  p_ref_task_id;
     END IF;
  --Project Structures

 IF l_ref_task_id is null THEN

          IF (p_pa_parent_task_id IS NOT NULL AND p_pa_parent_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) THEN

          l_ref_task_id :=  p_pa_parent_task_id;
    --  --dbms_output.put_line('Value of p_ref_task_id :='||l_ref_task_id);

          ELSIF (p_pm_parent_task_reference IS NOT NULL AND p_pm_parent_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN

            --Begin change by rtarway for BUG 3661788, use Convert_pm_taskref_to_id_all  to get task id instead of using l_task_ref_to_id_csr
            --OPEN l_task_ref_to_id_csr(l_project_id,p_pm_parent_task_reference);
            --FETCH l_task_ref_to_id_csr INTO l_ref_task_id;
            PA_PROJECT_PVT.Convert_pm_taskref_to_id_all
            (
                p_pa_project_id        => l_project_id    ,
                p_structure_type       => l_structure_type, --Bug#3747312 p_structure_type,
                p_pm_task_reference    => p_pm_parent_task_reference ,
                p_out_task_id          => l_ref_task_id,
                p_return_status        => l_return_status
            );

            --changed by rtarway for BUG 3661788
            --IF l_task_ref_to_id_csr%NOTFOUND
            IF (l_return_status <> 'S')
            THEN
                --rtarway , 3661788, comment close command
                --CLOSE l_task_ref_to_id_csr;
                IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
                THEN
                 l_amg_task_number := pa_interface_utils_pub.get_task_number_amg
                                          (p_task_number => p_task_name
                                          ,p_task_reference => p_pm_task_reference
                                          ,p_task_id => '');

                         pa_interface_utils_pub.map_new_amg_msg
                          ( p_old_message_code => 'PA_PARENT_TASK_MISSING'
                           ,p_msg_attribute    => 'CHANGE'
                           ,p_resize_flag      => 'N'
                           ,p_msg_context      => 'TASK'
                           ,p_attribute1       => l_amg_segment1
                           ,p_attribute2       => l_amg_task_number
                           ,p_attribute3       => ''
                           ,p_attribute4       => ''
                           ,p_attribute5       => '');
                END IF;
                RAISE  FND_API.G_EXC_ERROR;
             END IF;
            --rtarway , 3661788, comment close command
            --CLOSE l_task_ref_to_id_csr;
           END IF;
       END IF;
 -- -- --dbms_output.put_line('Value of p_ref_task_id :='||l_ref_task_id);
/* END OF CHANGES FOR BUG 3705333 */
--Bug 3279981 Review : Shifted this code before the update_one_task call
OPEN  cur_get_proj_billing_info(l_project_id);
FETCH cur_get_proj_billing_info INTO l_proj_top_task_customer_flag, l_proj_top_task_inv_mth_flag,
                                     l_proj_revenue_acc_method, l_proj_invoice_method, l_proj_type;
CLOSE cur_get_proj_billing_info;

IF 'Y' = l_proj_top_task_inv_mth_flag THEN
     IF ( p_invoice_method IS NOT NULL AND p_invoice_method <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
     --changed p_pa_task_id to l_pa_task_id, 3919800, rtarway
     AND  PA_BILLING_CORE.Update_Top_Task_Invoice_Method( l_project_id, l_pa_task_id ) = 'Y' THEN
          IF pa_project_pvt.check_valid_dist_rule
                  ( l_proj_type,
                    l_proj_revenue_acc_method||'/'||p_invoice_method,
                    l_proj_top_task_inv_mth_flag ) = 'N'   THEN
                    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
                        pa_interface_utils_pub.map_new_amg_msg
                          ( p_old_message_code => 'PA_INV_TASK_INVOICE_METHOD' -- for bug# 4156036
                           ,p_msg_attribute    => 'CHANGE'
                           ,p_resize_flag      => 'N'
                           ,p_msg_context      => 'TASK'
                           ,p_attribute1       => p_invoice_method
                           ,p_attribute2       => ''
                           ,p_attribute3       => ''
                           ,p_attribute4       => ''
                           ,p_attribute5       => '');
                    END IF;
                    RAISE  FND_API.G_EXC_ERROR;
          END IF;

          -- Function Security Check
          PA_PM_FUNCTION_SECURITY_PUB.check_function_security
          ( p_api_version_number => p_api_version_number,
            p_responsibility_id  => l_resp_id,
            p_function_name      => 'PA_PAXPREPR_TASK_INV_MTH',
            p_msg_count          => l_msg_count,
            p_msg_data           => l_msg_data,
            p_return_status      => l_return_status,
            p_function_allowed   => l_function_allowed);
          IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
               RAISE FND_API.G_EXC_ERROR;
          END IF;

          IF l_function_allowed = 'N' THEN
               pa_interface_utils_pub.map_new_amg_msg
                ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
                 ,p_msg_attribute    => 'CHANGE'
                 ,p_resize_flag      => 'Y'
                 ,p_msg_context      => 'GENERAL'
                 ,p_attribute1       => ''
                 ,p_attribute2       => ''
                 ,p_attribute3       => ''
                 ,p_attribute4       => ''
                 ,p_attribute5       => '');
               RAISE FND_API.G_EXC_ERROR;
          END IF;

          l_invoice_method := p_invoice_method;
     ELSE
          --IF p_invoice_method IS NULL

           --l_invoice_method := l_proj_invoice_method  commented for bug#5583147 ;

	   /* Start of Addition for bug#5583147 */
           --If p_invoice_method passed is null then
           --Check if the task has already an invoice method if so keep the same
           --Else get it from project invoice method.
           BEGIN
                     SELECT invoice_method
                     INTO   l_invoice_method
                     FROM   pa_tasks
                     WHERE project_id = l_project_id
                     and task_id = l_pa_task_id
                     and l_invoice_method is not null;

          EXCEPTION WHEN NO_DATA_FOUND THEN
		l_invoice_method := l_proj_invoice_method;
          END;
         /* End of Addition for bug#5583147 */

     END IF;
ELSE
     --IF 'N' = l_proj_top_task_inv_mth_flag
     l_invoice_method := NULL;
END IF;

-- Added for bug 5242015
OPEN cur_top_task_customer_id(l_pa_task_id);
FETCH cur_top_task_customer_id INTO l_top_task_customer_id;
CLOSE cur_top_task_customer_id;

IF 'Y' = l_proj_top_task_customer_flag THEN
  IF (p_customer_id IS NOT NULL AND p_customer_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) AND
      l_top_task_customer_id <> p_customer_id THEN -- Added for bug 5242015
          -- Changes are Done for Bug 4689888
          --changed p_pa_task_id to l_pa_task_id, 3919800, rtarway
    IF PA_BILLING_CORE.Update_Top_Task_Customer( l_project_id, l_pa_task_id ) = 'Y' THEN -- If condition to check Funding exits for task or not
          OPEN  cur_check_proj_cust_exist(l_project_id,p_customer_id);
          FETCH cur_check_proj_cust_exist INTO l_dummy;
      IF cur_check_proj_cust_exist%NOTFOUND THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR) THEN
          /* Commented  This code For Bug 4689326
              pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_INVALID_TASK_CUSTOMER'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'TASK'
                      ,p_attribute1       => p_customer_id
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');*/
        -- Added this code For Bug no 4689326
          OPEN l_cur_customer_name(p_customer_id);
          FETCH l_cur_customer_name INTO l_customer_name;
          CLOSE l_cur_customer_name;
          IF (l_customer_name IS NULL OR l_customer_name =  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) THEN -- Checking whether the specified customer exits or not
                  pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_CUSTOMER_NOT_EXIST'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'GENERAL'
                      ,p_attribute1       => ''
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
          ELSE
                        PA_UTILS.ADD_MESSAGE
                              (p_app_short_name => 'PA',
                                p_msg_name       => 'PA_INVALID_PROJECT_CUSTOMER',
                                p_token1         => 'CUSTOMER_NAME',
                                p_value1         =>  l_customer_name
                                );
          END IF;
        -- End of Bug 4689326
        END IF;
               CLOSE cur_check_proj_cust_exist;
               RAISE  FND_API.G_EXC_ERROR;
      ELSE
               CLOSE cur_check_proj_cust_exist;

               -- Function Security Check
               PA_PM_FUNCTION_SECURITY_PUB.check_function_security
               ( p_api_version_number => p_api_version_number,
                 p_responsibility_id  => l_resp_id,
                 p_function_name      => 'PA_PAXPREPR_TASK_CUST',
                 p_msg_count          => l_msg_count,
                 p_msg_data           => l_msg_data,
                 p_return_status      => l_return_status,
                 p_function_allowed   => l_function_allowed);
               IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
               ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    RAISE FND_API.G_EXC_ERROR;
               END IF;

               IF l_function_allowed = 'N' THEN
                    pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'Y'
                      ,p_msg_context      => 'GENERAL'
                      ,p_attribute1       => ''
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                    RAISE FND_API.G_EXC_ERROR;
               END IF;

               l_customer_id := p_customer_id;
      END IF; --IF cur_check_proj_cust_exist%NOTFOUND
    ELSE
         pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_NO_CHNG_CUST_ALLOWED'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'Y'
                      ,p_msg_context      => 'GENERAL'
                      ,p_attribute1       => ''
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                    RAISE FND_API.G_EXC_ERROR;
    END IF;-- If condition to check Funding exits for task or not --End of Bug 4689888
  ELSE          --IF p_customer_id IS NULL
     IF p_customer_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
     l_customer_id:=NULL; -- NULL is passed for customer_id so that in Update_one_task it will not be Defaulted.
     ELSIF  l_top_task_customer_id = p_customer_id THEN -- added for Bug 5242015
            l_customer_id:= p_customer_id;
     ELSE
     pa_interface_utils_pub.map_new_amg_msg
                     ( p_old_message_code => 'PA_INVALID_CUST'
                      ,p_msg_attribute    => 'CHANGE'
                      ,p_resize_flag      => 'N'
                      ,p_msg_context      => 'GENERAL'
                      ,p_attribute1       => ''
                      ,p_attribute2       => ''
                      ,p_attribute3       => ''
                      ,p_attribute4       => ''
                      ,p_attribute5       => '');
                    RAISE FND_API.G_EXC_ERROR;
     END IF;
  END IF;
ELSE
     --IF 'N' = l_proj_top_task_customer_flag
     l_customer_id := NULL;
END IF;

/*UPDATE PA_TASKS
SET  invoice_method = l_invoice_method
    ,customer_id    = l_customer_id
WHERE project_id = l_project_id
AND   task_id = p_pa_task_id;*/
--Bug 3279981 Review


-- rtarway, BUG 3908013, replace dff attributes
/*
Bug 6153503
There is no need to do delow validation here it will be done in update_one_task
if (p_attribute_category is null or p_attribute_category = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute_category :=  null;
else
      l_attribute_category :=  p_attribute_category;
end if;



if (p_attribute1 is null or p_attribute1 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute1  :=  null;
else
     l_attribute1  :=  p_attribute1;
end if;



if (p_attribute2 is null or p_attribute2 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute2  :=  null;
else
     l_attribute2  :=  p_attribute2;
end if;


if (p_attribute3 is null or p_attribute3 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute3 :=  null;
else
      l_attribute3 :=  p_attribute3;
end if;

if (p_attribute4 is null or p_attribute4 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute4 :=  null;
else
      l_attribute4 :=  p_attribute4;
end if;

if (p_attribute5 is null or p_attribute5 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute5 :=  null;
else
      l_attribute5 :=  p_attribute5;
end if;

if (p_attribute6 is null or p_attribute6 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute6 :=  null;
else
      l_attribute6 :=  p_attribute6;
end if;

if (p_attribute7 is null or p_attribute6 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute7 :=  null;
else
      l_attribute7 :=  p_attribute7;
end if;

if (p_attribute8 is null or p_attribute8 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute8 :=  null;
else
      l_attribute8  :=  p_attribute8;
end if;

if (p_attribute9 is null or p_attribute9 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute9 :=  null;
else
     l_attribute9 :=  p_attribute9;
end if;

if (p_attribute10 is null or p_attribute10 = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
then
     l_attribute10 :=  null;
else
      l_attribute10 :=  p_attribute10;
end if;
End Bug 6153503
*/
--project structures
-- --dbms_output.put_line('Value of p_ref_task_id :='||l_ref_task_id);
-- --dbms_output.put_line('BEFORE CALLING UPDATE_ONE_TASK');

--Bug 6153503 start
IF p_tasks_dff = 'Y' THEN

    l_attribute_category := p_attribute_category;

    l_attribute1  :=  p_attribute1;
    l_attribute2  :=  p_attribute2;
    l_attribute3  :=  p_attribute3;
    l_attribute4  :=  p_attribute4;
    l_attribute5  :=  p_attribute5;

    l_attribute6  :=  p_attribute6;
    l_attribute7  :=  p_attribute7;
    l_attribute8  :=  p_attribute8;
    l_attribute9  :=  p_attribute9;
    l_attribute10 :=  p_attribute10;

    l_wp_attribute_category := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;

    l_wp_attribute1  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute2  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute3  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute4  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute5  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;

    l_wp_attribute6  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute7  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute8  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute9  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute10 :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;

    l_wp_attribute11  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute12  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute13  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute14  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_wp_attribute15  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;

ELSIF p_tasks_dff = 'N' THEN

    l_wp_attribute_category := p_attribute_category;

    l_wp_attribute1  :=  p_attribute1;
    l_wp_attribute2  :=  p_attribute2;
    l_wp_attribute3  :=  p_attribute3;
    l_wp_attribute4  :=  p_attribute4;
    l_wp_attribute5  :=  p_attribute5;

    l_wp_attribute6  :=  p_attribute6;
    l_wp_attribute7  :=  p_attribute7;
    l_wp_attribute8  :=  p_attribute8;
    l_wp_attribute9  :=  p_attribute9;
    l_wp_attribute10 :=  p_attribute10;

    l_wp_attribute11  :=  p_attribute11;
    l_wp_attribute12  :=  p_attribute12;
    l_wp_attribute13  :=  p_attribute13;
    l_wp_attribute14  :=  p_attribute14;
    l_wp_attribute15  :=  p_attribute15;

    l_attribute_category := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;

    l_attribute1  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_attribute2  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_attribute3  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_attribute4  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_attribute5  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;

    l_attribute6  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_attribute7  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_attribute8  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_attribute9  :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    l_attribute10 :=  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;

END IF;

--Bug 6153503 end

IF l_structure_type = 'FINANCIAL' --p_structure_type
THEN

-- BUG 3908013, rtarway
--In case of shared structure , null the values of dff fields. dff will be updated in elem_ver_schedule table only.
     /* Bug 6153503 start
     if nvl(l_is_wp_separate_from_fn,'N') = 'N'
     then
          l_attribute_category            := null;
          l_attribute1                    := null;
          l_attribute2                    := null;
          l_attribute3                    := null;
          l_attribute4                    := null;
          l_attribute5                    := null;
          l_attribute6                    := null;
          l_attribute7                    := null;
          l_attribute8                    := null;
          l_attribute9                    := null;
          l_attribute10                   := null;
     end if;
     Bug 6153503 end
     */

--project structures
----dbms_output.put_line('value OF p_task_number BEFORE UPDATE_ONE_TASK'||p_task_number);

     PA_PROJECT_PVT.Update_One_Task (
     p_api_version_number            => p_api_version_number,
     p_commit                        => FND_API.G_FALSE,
     p_msg_count                     => p_msg_count,
     p_msg_data                      => p_msg_data,
     p_return_status                 => l_return_status,
     p_pm_product_code               => p_pm_product_code,
     p_pa_project_id                 => l_project_id, --Bug#3747312
     p_pa_task_id                    => l_pa_task_id, --BUG 3919800, p_pa_task_id to l_pa_task_id
     p_pm_task_reference             => p_pm_task_reference,
     p_task_number                   => p_task_number,
     p_task_name                     => p_task_name,
     p_long_task_name                => l_long_task_name, /*Commented the p_long_task_name for bug 2982057*/
     p_task_description              => p_task_description,
     p_task_start_date               => p_task_start_date,
     p_task_completion_date          => p_task_completion_date,
-- Start Fix for Bug # 1289156
     p_early_start_date              => p_early_start_date,
     p_early_finish_date             => p_early_finish_date,
     p_late_start_date               => p_late_start_date,
     p_late_finish_date              => p_late_finish_date,
--   p_actual_start_date             => p_actual_start_date,    --commented out for task progress
--   p_actual_finish_date            => p_actual_finish_date,
     p_scheduled_start_date          => p_scheduled_start_date, -- 7245488
     p_scheduled_finish_date         => p_scheduled_finish_date, /* bug 7245488 */
-- End Fix for Bug # 1289156
     p_pm_parent_task_reference      => p_pm_parent_task_reference,
     p_pa_parent_task_id             => p_pa_parent_task_id,
     p_address_id                    => p_address_id,
     p_carrying_out_organization_id  => p_carrying_out_organization_id,
     p_service_type_code             => p_service_type_code,
     p_task_manager_person_id        => p_task_manager_person_id,
     p_billable_flag                 => p_billable_flag,
     p_chargeable_flag               => p_chargeable_flag,
     p_ready_to_bill_flag            => p_ready_to_bill_flag,
     p_ready_to_distribute_flag      => p_ready_to_distribute_flag,
     p_limit_to_txn_controls_flag    => p_limit_to_txn_controls_flag,
     p_labor_bill_rate_org_id        => p_labor_bill_rate_org_id,
     p_labor_std_bill_rate_schdl     => p_labor_std_bill_rate_schdl,
     p_labor_schedule_fixed_date     => p_labor_schedule_fixed_date,
     p_labor_schedule_discount       => p_labor_schedule_discount,
     p_nl_bill_rate_org_id           => p_nl_bill_rate_org_id,
     p_nl_std_bill_rate_schdl        => p_nl_std_bill_rate_schdl,
     p_nl_schedule_fixed_date        => p_nl_schedule_fixed_date,
     p_nl_schedule_discount          => p_nl_schedule_discount,
     p_labor_cost_multiplier_name    => p_labor_cost_multiplier_name,
     p_cost_ind_rate_sch_id          => p_cost_ind_rate_sch_id,
     p_rev_ind_rate_sch_id           => p_rev_ind_rate_sch_id,
     p_inv_ind_rate_sch_id           => p_inv_ind_rate_sch_id,
     p_cost_ind_sch_fixed_date       => p_cost_ind_sch_fixed_date,
     p_rev_ind_sch_fixed_date        => p_rev_ind_sch_fixed_date,
     p_inv_ind_sch_fixed_date        => p_inv_ind_sch_fixed_date,
     p_labor_sch_type                => p_labor_sch_type,
     p_nl_sch_type                   => p_nl_sch_type,
     p_attribute_category            => l_attribute_category,
     p_attribute1                    => l_attribute1,
     p_attribute2                    => l_attribute2,
     p_attribute3                    => l_attribute3,
     p_attribute4                    => l_attribute4,
     p_attribute5                    => l_attribute5,
     p_attribute6                    => l_attribute6,
     p_attribute7                    => l_attribute7,
     p_attribute8                    => l_attribute8,
     p_attribute9                    => l_attribute9,
     p_attribute10                   => l_attribute10,
     p_allow_cross_charge_flag       => p_allow_cross_charge_flag,
     p_project_rate_type             => p_project_rate_type,
     p_project_rate_date             => p_project_rate_date,
     p_cc_process_labor_flag         => p_cc_process_labor_flag,
     p_labor_tp_schedule_id          => p_labor_tp_schedule_id,
     p_labor_tp_fixed_date           => p_labor_tp_fixed_date,
     p_cc_process_nl_flag            => p_cc_process_nl_flag,
     p_nl_tp_schedule_id             => p_nl_tp_schedule_id,
     p_nl_tp_fixed_date              => p_nl_tp_fixed_date,
     p_receive_project_invoice_flag  => p_receive_project_invoice_flag,
     p_work_type_id                  => p_work_type_id,
     p_emp_bill_rate_schedule_id     => p_emp_bill_rate_schedule_id,
     p_job_bill_rate_schedule_id     => p_job_bill_rate_schedule_id,

--Sakthi MCB
     p_non_lab_std_bill_rt_sch_id    => p_non_lab_std_bill_rt_sch_id,
     p_taskfunc_cost_rate_type       => p_taskfunc_cost_rate_type,
     p_taskfunc_cost_rate_date       => p_taskfunc_cost_rate_date,

--Sakthi MCB
     p_labor_disc_reason_code        => p_labor_disc_reason_code,
     p_non_labor_disc_reason_code    => p_non_labor_disc_reason_code,

--PA L Changes 2872708
     p_retirement_cost_flag          => p_retirement_cost_flag,
     p_cint_eligible_flag            => p_cint_eligible_flag,
     p_cint_stop_date                => p_cint_stop_date,
--End PA L Changes 2872708
     --Added by rtarway for BUG 4106154
     p_gen_etc_source_code          =>  p_gen_etc_source_code,

--Bug 3279981 Review
     p_invoice_method                => l_invoice_method,
     p_customer_id                   => l_customer_id,
--Bug 3279981 Review
     p_out_pa_task_id                => l_out_pa_task_id,
     p_out_pm_task_reference         => l_out_pm_task_reference );
 -- --dbms_output.put_line('after CALLING UPDATE_ONE_TASK');
     p_return_status := l_return_status;
-- --dbms_output.put_line('p_return_status'||p_return_status);
     IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
        RAISE  FND_API.G_EXC_ERROR;
     END IF;

     p_out_pa_task_id  := l_out_pa_task_id;
     p_out_pm_task_reference := l_out_pm_task_reference;

--BUG 4081329, rtarway, update all child tasks which have null completion date, if completion date is getting updated
--Fix for 7427388
/*if (p_task_completion_date is not null and p_task_completion_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) then
       open  cur_get_child_task_dates (l_project_id,l_pa_task_id);
       fetch cur_get_child_task_dates bulk collect into      l_task_id_tbl,
                                                             l_start_date_tbl,
                                                             l_completion_date_tbl;
       close cur_get_child_task_dates;
       if l_task_id_tbl is not null and l_task_id_tbl.count > 0 then
          FORALL i in l_task_id_tbl.first..l_task_id_tbl.last
          update pa_tasks set completion_date = p_task_completion_date where task_id = l_task_id_tbl(i)
          and project_id = l_project_id;
       end if;
end if;*/

if ( p_task_completion_date is not null and  p_task_completion_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) then
       open  cur_get_child_task_dates (l_project_id,l_pa_task_id);
       fetch cur_get_child_task_dates bulk collect into      l_task_id_tbl,
                                                             l_start_date_tbl,
                                                             l_completion_date_tbl,
							     l_parent_task_id_tbl;
       close cur_get_child_task_dates;
       if l_task_id_tbl is not null and l_task_id_tbl.count > 0 then
	  FOR i in l_task_id_tbl.first..l_task_id_tbl.last LOOP
            IF l_parent_task_id_tbl(i) IS NOT NULL AND l_start_date_tbl(i) is NULL THEN
	      SELECT start_date
 	      INTO l_parent_task_date
 	      FROM pa_tasks
 	      WHERE task_id = l_parent_task_id_tbl(i);

 	      UPDATE pa_tasks
 	      SET completion_date = p_task_completion_date,
 	          start_date = l_parent_task_date
 	      WHERE task_id = l_task_id_tbl(i);

 	    ELSE
 	      UPDATE pa_tasks
 	      SET completion_date = p_task_completion_date
 	      WHERE task_id = l_task_id_tbl(i);
 	    END IF;
 	  END LOOP;
       end if;
    end if;
--End of fix for 7427388

--BUG#7015228, Deleting data from previous cursor
l_task_id_tbl.delete;
l_start_date_tbl.delete;
l_completion_date_tbl.delete;

--BUG#7015228, update all child tasks which have null start date, if start date is getting updated
if (p_task_start_date is not null and p_task_start_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE) then
       open  cur_get_child_task_start_dates (l_project_id,l_pa_task_id);
       fetch cur_get_child_task_start_dates bulk collect into      l_task_id_tbl,
                                                             l_start_date_tbl,
                                                             l_completion_date_tbl;
       close cur_get_child_task_start_dates;
       if l_task_id_tbl is not null and l_task_id_tbl.count > 0 then
          FORALL i in l_task_id_tbl.first..l_task_id_tbl.last
          update pa_tasks set start_date = p_task_start_date where task_id = l_task_id_tbl(i)
          and project_id = l_project_id;
       end if;
end if;


--bug 2665656
-- --dbms_output.put_line('p_pm_product_code'||p_pm_product_code);
-- --dbms_output.put_line('p_update_task_structure'||p_update_task_structure);
-- --dbms_output.put_line('p_structure_type'||p_structure_type);
----dbms_output.put_line('value of l_out_pa_task_id'||l_out_pa_task_id);
----dbms_output.put_line('value of l_out_pm_task_reference'||l_out_pm_task_reference);

     IF (NVL( p_pm_product_code, 'WORKPLAN' ) <> 'WORKPLAN') AND (p_update_task_structure = 'Y') --Added for bug 2931183
     THEN
--bug 2665656
         -- Bug 3106457
      -- --dbms_output.put_line('Going into this loop');
         -- --dbms_output.put_line('p_structure_version_id : '||p_structure_version_id);
         --BUG 3919800, p_structure_version_id to l_structure_version_id, rtarway
         IF l_structure_version_id IS NULL
            OR l_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --bug 3174639
         THEN
              l_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.GET_FIN_STRUC_VER_ID(l_project_id);
         ELSE
              l_structure_version_id := p_structure_version_id;
         END IF;
--      --dbms_output.put_line('BEFORE CALLING UPDATE_task_structure');
--      --dbms_output.put_line('l_structure_version_id IS'||l_structure_version_id);


----dbms_output.put_line('Value of p_task_number passed to update_task_structure'||p_task_number);

         PA_PROJ_TASK_STRUC_PUB.update_task_structure
               (
                p_calling_module                  => 'AMG'
               ,p_task_id                         => l_pa_task_id  --BUG 3919800, rtarway
               ,p_ref_task_id                     => l_ref_task_id --Bug 3705333 changed from p_ref_task_id to l_ref_task_id
               ,p_project_id                      => l_project_id
               ,p_task_number                     => p_task_number
               ,p_task_name                       => l_long_task_name      ----bug 2833194 -- for bug# 3749447
               ,p_task_description                => p_task_description
               ,p_carrying_out_organization_id    => p_carrying_out_organization_id
               ,p_task_manager_id                 => p_task_manager_person_id
               ,p_pm_product_code                 => p_pm_product_code
               ,p_pm_task_reference               => p_pm_task_reference
               ,p_location_id                     => p_address_id
               ,p_structure_type                  => l_structure_type --Bug#3747312 p_structure_type
               ,p_OBLIGATION_START_DATE           => p_OBLIGATION_START_DATE
               ,p_OBLIGATION_FINISH_DATE          => p_OBLIGATION_FINISH_DATE
               ,p_ESTIMATED_START_DATE            => p_ESTIMATED_START_DATE
               ,p_ESTIMATED_FINISH_DATE           => p_ESTIMATED_FINISH_DATE
               ,p_BASELINE_START_DATE             => p_BASELINE_START_DATE
               ,p_BASELINE_FINISH_DATE            => p_BASELINE_FINISH_DATE
               ,p_CLOSED_DATE                     => p_CLOSED_DATE
               ,p_WQ_UOM_CODE                     => p_WQ_UOM_CODE
               ,p_WQ_ITEM_CODE                    => p_WQ_ITEM_CODE
               ,p_STATUS_CODE                     => p_STATUS_CODE
               ,p_WF_STATUS_CODE                  => p_WF_STATUS_CODE
               ,p_PRIORITY_CODE                   => p_PRIORITY_CODE
               ,p_MILESTONE_FLAG                  => p_MILESTONE_FLAG
               ,p_CRITICAL_FLAG                   => p_CRITICAL_FLAG
               ,p_INC_PROJ_PROGRESS_FLAG          => p_INC_PROJ_PROGRESS_FLAG
               ,p_LINK_TASK_FLAG                  => p_LINK_TASK_FLAG
               ,p_CALENDAR_ID                     => p_CALENDAR_ID
               ,p_PLANNED_EFFORT                  => p_PLANNED_EFFORT
               ,p_DURATION                        => p_DURATION
               ,p_PLANNED_WORK_QUANTITY           => p_PLANNED_WORK_QUANTITY
               ,p_TASK_TYPE                       => p_TASK_TYPE
               ,p_actual_start_date               => p_actual_start_date
               ,p_actual_finish_date              => p_actual_finish_date
               ,p_early_start_date                => p_early_start_date
               ,p_early_finish_date               => p_early_finish_date
               ,p_late_start_date                 => p_late_start_date
               ,p_late_finish_date                => p_late_finish_date
               ,p_scheduled_start_date            => p_scheduled_start_date
               ,p_scheduled_finish_date           => p_scheduled_finish_date
               --Commented by rtarway for BUG 3663712
               --,p_structure_version_id            => p_structure_version_id
               ,p_structure_version_id            => l_structure_version_id
-- (Begin venkat) new params for bug #3450684 ----------------------------------------------
        ,p_ext_act_duration         => p_ext_act_duration
        ,p_ext_remain_duration      => p_ext_remain_duration
        ,p_ext_sch_duration         => p_ext_sch_duration
-- (End venkat) new params for bug #3450684 -------------------------------------------------
    --Bug 6153503 start
    ,p_attribute_category            => l_wp_attribute_category
    ,p_attribute1                    => l_wp_attribute1
    ,p_attribute2                    => l_wp_attribute2
    ,p_attribute3                    => l_wp_attribute3
    ,p_attribute4                    => l_wp_attribute4
    ,p_attribute5                    => l_wp_attribute5
    ,p_attribute6                    => l_wp_attribute6
    ,p_attribute7                    => l_wp_attribute7
    ,p_attribute8                    => l_wp_attribute8
    ,p_attribute9                    => l_wp_attribute9
    ,p_attribute10                   => l_wp_attribute10
    ,p_attribute11                   => l_wp_attribute11
    ,p_attribute12                   => l_wp_attribute12
    ,p_attribute13                   => l_wp_attribute13
    ,p_attribute14                   => l_wp_attribute14
    ,p_attribute15                   => l_wp_attribute15
     --Bug 6153503 end
-- set the new params - bug #3654243 ----------------------------------------------
    ,p_base_percent_comp_deriv_code => p_base_percent_comp_deriv_code
    ,p_sch_tool_tsk_type_code       => p_sch_tool_tsk_type_code
    ,p_constraint_type_code         => p_constraint_type_code
    ,p_constraint_date              => p_constraint_date
    ,p_free_slack                   => p_free_slack
    ,p_total_slack                  => p_total_slack
    ,p_effort_driven_flag           => p_effort_driven_flag
    ,p_level_assignments_flag       => p_level_assignments_flag
    ,p_invoice_method               => p_invoice_method
    ,p_customer_id                  => p_customer_id
    ,p_gen_etc_source_code          => p_gen_etc_source_code
-- set the new params - bug #3654243 -------------------------------------------------

-- Progress Management Changes. Bug # 3420093.
                ,p_etc_effort                 => p_etc_effort
                ,p_percent_complete           => p_percent_complete
-- Progress Management Changes. Bug # 3420093.
--Added by rtarway for BUG 3908013
/* Values are already being passed above. Ref Bug #6153503
               ,p_attribute_category            => p_attribute_category
               ,p_attribute1                    => p_attribute1
               ,p_attribute2                    => p_attribute2
               ,p_attribute3                    => p_attribute3
               ,p_attribute4                    => p_attribute4
               ,p_attribute5                    => p_attribute5
               ,p_attribute6                    => p_attribute6
               ,p_attribute7                    => p_attribute7
               ,p_attribute8                    => p_attribute8
               ,p_attribute9                    => p_attribute9
               ,p_attribute10                   => p_attribute10 */
--end add by rtarway, 3908013
               ,x_msg_count                       => l_msg_count
               ,x_msg_data                        => l_msg_data
               ,x_return_status                   => l_return_status

               );
           ----dbms_output.put_line('return status of update_task_struc '||l_return_status);

       END IF;

     IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
        RAISE  FND_API.G_EXC_ERROR;
     END IF;

ELSIF l_structure_type = 'WORKPLAN' --p_structure_type
THEN
   -- Moved this code up. As this should be the first validation the should be performed
   -- IF PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( l_project_id ) = 'N' OR
   --If update task is called from update_project api then PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN wont be called
   --bcoz G_IS_WP_SEPARATE_FROM_FN will already be set by upate_project.
   --    NVL( G_IS_WP_SEPARATE_FROM_FN, PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id ) ) = 'N'  --bug 2876703 update_task
   --THEN
   --     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
   --     THEN
   --         pa_interface_utils_pub.map_new_amg_msg
   --           ( p_old_message_code => 'PA_PS_WP_NOT_SEP_FN'
   --               ,p_msg_attribute    => 'CHANGE'
   --               ,p_resize_flag      => 'N'
   --               ,p_msg_context      => 'GENERAL'
   --               ,p_attribute1       => ''
   --               ,p_attribute2       => ''
   --               ,p_attribute3       => ''
   --               ,p_attribute4       => ''
   --               ,p_attribute5       => '');
   --     END IF;
   --     RAISE FND_API.G_EXC_ERROR;
   -- END IF;

    -- Actions performed using the APIs would be subject to
    -- function security. If the responsibility does not allow
    -- such functions to be executed, the API should not proceed further
    -- since the user does not have access to such functions


    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version_number,
       p_responsibility_id  => l_resp_id,
       p_function_name      => 'PA_PM_UPDATE_TASK',
       p_msg_count          => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
                        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
                        RAISE FND_API.G_EXC_ERROR;
        END IF;
        IF l_function_allowed = 'N' THEN
          pa_interface_utils_pub.map_new_amg_msg
          ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
           ,p_msg_attribute    => 'CHANGE'
           ,p_resize_flag      => 'Y'
           ,p_msg_context      => 'GENERAL'
           ,p_attribute1       => ''
           ,p_attribute2       => ''
           ,p_attribute3       => ''
           ,p_attribute4       => ''
           ,p_attribute5       => '');
           p_return_status := FND_API.G_RET_STS_ERROR;
           RAISE FND_API.G_EXC_ERROR;
        END IF;

--Project Structures Integration
----dbms_output.put_line('l_structure_version_id--ut'||l_structure_version_id);
       IF ( l_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
            l_structure_version_id IS NULL  )
       THEN
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
               pa_interface_utils_pub.map_new_amg_msg
                    ( p_old_message_code => 'PA_PS_STRUC_VER_REQ'
                     ,p_msg_attribute    => 'CHANGE'
                     ,p_resize_flag      => 'N'
                     ,p_msg_context      => 'GENERAL'
                     ,p_attribute1       => ''
                     ,p_attribute2       => ''
                     ,p_attribute3       => ''
                     ,p_attribute4       => ''
                     ,p_attribute5       => '');
            END IF;
            RAISE FND_API.G_EXC_ERROR;
            p_return_status    := FND_API.G_RET_STS_SUCCESS;
       END IF;
       -- Bug 3106457. This is not null.
       --Commented by rtarway for BUG 3919800
       --l_structure_version_id := p_structure_version_id;
       --Added by rtarway for BUG 4106154
       if (l_update_pa_tasks = 'Y' AND
           --Added by rtarway for bug 4321313
       PA_PROJ_ELEMENTS_UTILS.CHECK_IS_FINANCIAL_TASK(l_pa_task_id) = 'Y'
       ) then

               --In case of Shared Structures, we do not need to update dff attributes in pa_tasks, instead
               --dff fields of pa_proj_elem_ver_schedule are updated

              PA_PROJECT_PVT.Update_One_Task
               (
                    p_api_version_number            => p_api_version_number,
                    p_commit                        => FND_API.G_FALSE,
                    p_msg_count                     => p_msg_count,
                    p_msg_data                      => p_msg_data,
                    p_return_status                 => l_return_status,
                    p_pm_product_code               => p_pm_product_code,
                    p_pa_project_id                 => l_project_id,
                    p_pa_task_id                    => l_pa_task_id,
                    p_pm_task_reference             => p_pm_task_reference,
                    p_task_number                   => p_task_number,
                    p_task_name                     => p_task_name,
                    p_long_task_name                => l_long_task_name,
                    p_task_description              => p_task_description,
                    p_task_start_date               => p_task_start_date,
                    p_task_completion_date          => p_task_completion_date,
                    p_early_start_date              => p_early_start_date,
                    p_early_finish_date             => p_early_finish_date,
                    p_late_start_date               => p_late_start_date,
                    p_late_finish_date              => p_late_finish_date,
		    p_scheduled_start_date          => p_scheduled_start_date,  -- 7245488
		    p_scheduled_finish_date         => p_scheduled_finish_date, /* bug 7245488 */
                    p_pm_parent_task_reference      => p_pm_parent_task_reference,
                    p_pa_parent_task_id             => p_pa_parent_task_id,
                    p_address_id                    => p_address_id,
                    p_carrying_out_organization_id  => p_carrying_out_organization_id,
                    p_service_type_code             => p_service_type_code,
                    p_task_manager_person_id        => p_task_manager_person_id,
                    p_billable_flag                 => p_billable_flag,
                    p_chargeable_flag               => p_chargeable_flag,
                    p_ready_to_bill_flag            => p_ready_to_bill_flag,
                    p_ready_to_distribute_flag      => p_ready_to_distribute_flag,
                    p_limit_to_txn_controls_flag    => p_limit_to_txn_controls_flag,
                    p_labor_bill_rate_org_id        => p_labor_bill_rate_org_id,
                    p_labor_std_bill_rate_schdl     => p_labor_std_bill_rate_schdl,
                    p_labor_schedule_fixed_date     => p_labor_schedule_fixed_date,
                    p_labor_schedule_discount       => p_labor_schedule_discount,
                    p_nl_bill_rate_org_id           => p_nl_bill_rate_org_id,
                    p_nl_std_bill_rate_schdl        => p_nl_std_bill_rate_schdl,
                    p_nl_schedule_fixed_date        => p_nl_schedule_fixed_date,
                    p_nl_schedule_discount          => p_nl_schedule_discount,
                    p_labor_cost_multiplier_name    => p_labor_cost_multiplier_name,
                    p_cost_ind_rate_sch_id          => p_cost_ind_rate_sch_id,
                    p_rev_ind_rate_sch_id           => p_rev_ind_rate_sch_id,
                    p_inv_ind_rate_sch_id           => p_inv_ind_rate_sch_id,
                    p_cost_ind_sch_fixed_date       => p_cost_ind_sch_fixed_date,
                    p_rev_ind_sch_fixed_date        => p_rev_ind_sch_fixed_date,
                    p_inv_ind_sch_fixed_date        => p_inv_ind_sch_fixed_date,
                    p_labor_sch_type                => p_labor_sch_type,
                    p_nl_sch_type                   => p_nl_sch_type,
                    --Bug 6153503 start
                    p_attribute_category            => l_attribute_category,
                    p_attribute1                    => l_attribute1,
                    p_attribute2                    => l_attribute2,
                    p_attribute3                    => l_attribute3,
                    p_attribute4                    => l_attribute4,
                    p_attribute5                    => l_attribute5,
                    p_attribute6                    => l_attribute6,
                    p_attribute7                    => l_attribute7,
                    p_attribute8                    => l_attribute8,
                    p_attribute9                    => l_attribute9,
                    p_attribute10                   => l_attribute10,
                    --Bug 6153503 end
                    p_allow_cross_charge_flag       => p_allow_cross_charge_flag,
                    p_project_rate_type             => p_project_rate_type,
                    p_project_rate_date             => p_project_rate_date,
                    p_cc_process_labor_flag         => p_cc_process_labor_flag,
                    p_labor_tp_schedule_id          => p_labor_tp_schedule_id,
                    p_labor_tp_fixed_date           => p_labor_tp_fixed_date,
                    p_cc_process_nl_flag            => p_cc_process_nl_flag,
                    p_nl_tp_schedule_id             => p_nl_tp_schedule_id,
                    p_nl_tp_fixed_date              => p_nl_tp_fixed_date,
                    p_receive_project_invoice_flag  => p_receive_project_invoice_flag,
                    p_work_type_id                  => p_work_type_id,
                    p_emp_bill_rate_schedule_id     => p_emp_bill_rate_schedule_id,
                    p_job_bill_rate_schedule_id     => p_job_bill_rate_schedule_id,
                    p_non_lab_std_bill_rt_sch_id    => p_non_lab_std_bill_rt_sch_id,
                    p_taskfunc_cost_rate_type       => p_taskfunc_cost_rate_type,
                    p_taskfunc_cost_rate_date       => p_taskfunc_cost_rate_date,
                    p_labor_disc_reason_code        => p_labor_disc_reason_code,
                    p_non_labor_disc_reason_code    => p_non_labor_disc_reason_code,
                    p_retirement_cost_flag          => p_retirement_cost_flag,
                    p_cint_eligible_flag            => p_cint_eligible_flag,
                    p_cint_stop_date                => p_cint_stop_date,
                    p_gen_etc_source_code          =>  p_gen_etc_source_code,
                    p_invoice_method                => l_invoice_method,
                    p_customer_id                   => l_customer_id,
                    p_out_pa_task_id                => l_out_pa_task_id,
                    p_out_pm_task_reference         => l_out_pm_task_reference
               );

               p_return_status := l_return_status;

               IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR THEN
                  RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
               ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
                  RAISE  FND_API.G_EXC_ERROR;
               END IF;
       end if;
  --End Added by rtarway for BUG 4106154

--bug 2665656
     IF NVL( p_pm_product_code, 'WORKPLAN' ) <> 'WORKPLAN'
     THEN
--bug 2665656
          PA_PROJ_TASK_STRUC_PUB.update_task_structure
               (
                p_calling_module                  => 'AMG'
               ,p_task_id                         => l_pa_task_id --BUG 3919800, rtarway
               ,p_ref_task_id                     => l_ref_task_id --Bug 3705333 changed from p_ref_task_id to l_ref_task_id
               ,p_project_id                      => l_project_id
               ,p_task_number                     => p_task_number
               ,p_task_name                       => l_long_task_name     ----bug 2833194 , -- bug# 3749447
               ,p_task_description                => p_task_description
               ,p_carrying_out_organization_id    => p_carrying_out_organization_id
               ,p_task_manager_id                 => p_task_manager_person_id
               ,p_pm_product_code                 => p_pm_product_code
               ,p_pm_task_reference               => p_pm_task_reference
               ,p_location_id                     => p_address_id
               ,p_structure_type                  => l_structure_type --p_structure_type
               ,p_OBLIGATION_START_DATE           => p_OBLIGATION_START_DATE
               ,p_OBLIGATION_FINISH_DATE          => p_OBLIGATION_FINISH_DATE
               ,p_ESTIMATED_START_DATE            => p_ESTIMATED_START_DATE
               ,p_ESTIMATED_FINISH_DATE           => p_ESTIMATED_FINISH_DATE
               ,p_BASELINE_START_DATE             => p_BASELINE_START_DATE
               ,p_BASELINE_FINISH_DATE            => p_BASELINE_FINISH_DATE
               ,p_CLOSED_DATE                     => p_CLOSED_DATE
               ,p_WQ_UOM_CODE                     => p_WQ_UOM_CODE
               ,p_WQ_ITEM_CODE                    => p_WQ_ITEM_CODE
               ,p_STATUS_CODE                     => p_STATUS_CODE
               ,p_WF_STATUS_CODE                  => p_WF_STATUS_CODE
               ,p_PRIORITY_CODE                   => p_PRIORITY_CODE
               ,p_MILESTONE_FLAG                  => p_MILESTONE_FLAG
               ,p_CRITICAL_FLAG                   => p_CRITICAL_FLAG
               ,p_INC_PROJ_PROGRESS_FLAG          => p_INC_PROJ_PROGRESS_FLAG
               ,p_LINK_TASK_FLAG                  => p_LINK_TASK_FLAG
               ,p_CALENDAR_ID                     => p_CALENDAR_ID
               ,p_PLANNED_EFFORT                  => p_PLANNED_EFFORT
               ,p_DURATION                        => p_DURATION
               ,p_PLANNED_WORK_QUANTITY           => p_PLANNED_WORK_QUANTITY
               ,p_TASK_TYPE                       => p_TASK_TYPE
               ,p_actual_start_date               => p_actual_start_date
               ,p_actual_finish_date              => p_actual_finish_date
               ,p_early_start_date                => p_early_start_date
               ,p_early_finish_date               => p_early_finish_date
               ,p_late_start_date                 => p_late_start_date
               ,p_late_finish_date                => p_late_finish_date
               ,p_scheduled_start_date            => p_scheduled_start_date
               ,p_scheduled_finish_date           => p_scheduled_finish_date
               --Commented by rtarway, BUG 3663712
               --,p_structure_version_id            => p_structure_version_id
               ,p_structure_version_id            => l_structure_version_id
-- (Begin venkat) new params for bug #3450684 ----------------------------------------------
        ,p_ext_act_duration     => p_ext_act_duration
        ,p_ext_remain_duration      => p_ext_remain_duration
        ,p_ext_sch_duration     => p_ext_sch_duration
-- (End venkat) new params for bug #3450684 -------------------------------------------------
    --Bug 6153503 start
    ,p_attribute_category            => l_wp_attribute_category
    ,p_attribute1                    => l_wp_attribute1
    ,p_attribute2                    => l_wp_attribute2
    ,p_attribute3                    => l_wp_attribute3
    ,p_attribute4                    => l_wp_attribute4
    ,p_attribute5                    => l_wp_attribute5
    ,p_attribute6                    => l_wp_attribute6
    ,p_attribute7                    => l_wp_attribute7
    ,p_attribute8                    => l_wp_attribute8
    ,p_attribute9                    => l_wp_attribute9
    ,p_attribute10                   => l_wp_attribute10
    ,p_attribute11                   => l_wp_attribute11
    ,p_attribute12                   => l_wp_attribute12
    ,p_attribute13                   => l_wp_attribute13
    ,p_attribute14                   => l_wp_attribute14
    ,p_attribute15                   => l_wp_attribute15
     --Bug 6153503 end
-- set the new params - bug #3654243 ----------------------------------------------
    ,p_base_percent_comp_deriv_code => p_base_percent_comp_deriv_code
    ,p_sch_tool_tsk_type_code       => p_sch_tool_tsk_type_code
    ,p_constraint_type_code         => p_constraint_type_code
    ,p_constraint_date              => p_constraint_date
    ,p_free_slack                   => p_free_slack
    ,p_total_slack                  => p_total_slack
    ,p_effort_driven_flag           => p_effort_driven_flag
    ,p_level_assignments_flag       => p_level_assignments_flag
    ,p_invoice_method               => p_invoice_method
    ,p_customer_id                  => p_customer_id
    ,p_gen_etc_source_code          => p_gen_etc_source_code
-- set the new params - bug #3654243 -------------------------------------------------


-- Progress Management Changes. Bug # 3420093.
                ,p_etc_effort                   => p_etc_effort
                ,p_percent_complete             => p_percent_complete
-- Progress Management Changes. Bug # 3420093.

               ,x_msg_count                       => l_msg_count
               ,x_msg_data                        => l_msg_data
               ,x_return_status                   => l_return_status
                --Added by rtarway for BUG 3908013
                /* Values are already being passed above. Ref Bug#6153503
               ,p_attribute_category            => p_attribute_category
               ,p_attribute1                    => p_attribute1
               ,p_attribute2                    => p_attribute2
               ,p_attribute3                    => p_attribute3
               ,p_attribute4                    => p_attribute4
               ,p_attribute5                    => p_attribute5
               ,p_attribute6                    => p_attribute6
               ,p_attribute7                    => p_attribute7
               ,p_attribute8                    => p_attribute8
               ,p_attribute9                    => p_attribute9
               ,p_attribute10                   => p_attribute10 */

               );

           IF l_return_status =  FND_API.G_RET_STS_UNEXP_ERROR THEN
              RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
           ELSIF l_return_status = FND_API.G_RET_STS_ERROR THEN
              RAISE  FND_API.G_EXC_ERROR;
           END IF;
     END IF;   --<< p_pm_product_code = 'WORKPLAN' >>

     p_out_pa_task_id  := l_pa_task_id;--BUG 3919800, rtarway
     p_out_pm_task_reference := p_pm_task_reference ;


--Project Structures Integration
END IF; --<<p_structure_type>>
--Begin Add by rtarway FP.M changes for Mapping
--No Function Security Check required
--Call the update_mapping only if p_mapped_task_reference or p_mapped_task_id is passed
G_PROJECT_SHARING_TYPE := PA_PROJ_TASK_STRUC_PUB.GET_SHARE_TYPE(l_project_id);
IF (G_PROJECT_SHARING_TYPE = 'SPLIT_MAPPING' and nvl(l_is_wp_separate_from_fn,'N') = 'Y')
THEN
     IF (
          ( p_mapped_task_reference IS NULL OR p_mapped_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
          OR
          ( p_mapped_task_id IS NULL OR  p_mapped_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
        )
     THEN
          pa_project_pub.update_mapping
          (
              p_api_version            => p_api_version_number
            , p_init_msg_list          => p_init_msg_list
            , p_commit                 => FND_API.G_FALSE--bug 3766967
            , p_debug_mode             => FND_API.G_TRUE
            , p_project_id             => l_project_id --Bug#3747312 p_pa_project_id
            , p_proj_source_reference  => null
            , p_wkp_structure_version_id => l_structure_version_id -- BUG 3919800, rtarway
            , p_wkp_task_id            => l_pa_task_id--Since the tasks are already created , this will have task Ids
            , px_mapped_task_id        => p_mapped_task_id------------|One of theses two should be passed
            , p_mapped_task_reference  => p_mapped_task_reference ----|
            , x_return_status          => l_return_status
            , x_msg_count              => l_msg_count
            , x_msg_data               => l_msg_data

          );
          IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_ERROR        THEN
                RAISE FND_API.G_EXC_ERROR;
          END IF;
     END IF;
END IF;

--End Add by rtarway  FP.M chages for Mapping
--Begin  Add by rtarway  FP.M chages for Set Financial Task
IF (G_PROJECT_SHARING_TYPE = 'SHARE_PARTIAL' and nvl(l_is_wp_separate_from_fn,'N') = 'N') THEN --l_structure_type
    --Get the task Version Id
    --BUG 3919800,p_structure_version_id and p_pa_task_id are replaced
    l_task_version_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID(l_structure_version_id, l_pa_task_id);
    OPEN  c_get_pa_record_version_number ( l_task_version_id  , l_project_id ); --Bug#3747312
    FETCH c_get_pa_record_version_number INTO l_patask_record_version_number;
    CLOSE c_get_pa_record_version_number;
    IF ( p_financial_task_flag IS NOT NULL AND p_financial_task_flag <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
    THEN
        PA_TASKS_MAINT_PUB.SET_FINANCIAL_FLAG_WRAPPER
         (
            p_api_version               => p_api_version_number
          , p_init_msg_list             => p_init_msg_list
          , p_commit                    => FND_API.G_FALSE--bug 3766967
          , p_calling_module            => 'AMG'
          , p_debug_mode                => FND_API.G_TRUE
          , p_task_version_id           => l_task_version_id
          , p_checked_flag              => p_financial_task_flag
          , p_record_version_number     => l_patask_record_version_number
          , p_project_id                => l_project_id --Bug#3747312 p_pa_project_id
          , p_published_version_exists  => G_Published_version_exists
          , x_return_status             => l_return_status
          , x_msg_count                 => l_msg_count
          , x_msg_data                  => l_msg_data
        );
         IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
         THEN
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
         ELSIF l_return_status = FND_API.G_RET_STS_ERROR
         THEN
               RAISE FND_API.G_EXC_ERROR;
         END IF;
    END IF;
END IF;
--End Add by rtarway  FP.M chages for Set Financial Task

--     p_out_pa_task_id  := l_out_pa_task_id;
--     p_out_pm_task_reference := l_out_pm_task_reference;

-- PA L Changes 3010538
IF NVL( p_pm_product_code, 'WORKPLAN' ) <> 'WORKPLAN' -- We should not be calling the task weightage apis when it is the
                                                  -- publishing flow.
  AND p_calling_api <> 'UPDATE_PROJECT'   --bug 4199694  This is required otherwise dates rollup and concurrent program will called in update_project flow multiple times.
THEN
---bug 4199694
--call directly the PA_STRUCT_TASK_ROLLUP_PUB.Tasks_Rollup api. No need to call the rollup_dates here as its called per task.
IF PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( l_project_id ) = 'Y'
THEN
  IF l_task_version_id IS NULL
  THEN
      l_task_version_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID(l_structure_version_id, l_pa_task_id);
  END IF;
  PA_PROJ_TASK_STRUC_PUB.rollup_dates(
             p_tasks_in             => l_tasks_out
            ,p_task_version_id      => l_task_version_id
            ,p_project_id           => l_project_id
            ,P_structure_version_id => l_structure_version_id
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            ,x_return_status        => l_return_status
       );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
          RAISE FND_API.G_EXC_ERROR;
        END IF;
END IF;
---bug 4199694

   -- These globals have been intialized before they are used!
   PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED( l_project_id ); -- Bug 3106457
   /* Commented the code below for bug#3451073
   PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN   := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id ); -- Bug 3106457 */
   /* Added the If condition Bug#3451073 */
   IF p_is_wp_seperate_from_fn = 'X'
   THEN
     PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN   := PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( l_project_id ); -- Bug 3106457
   ELSE
     PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN   :=  p_is_wp_seperate_from_fn; -- Addded for bug#3451073
   END IF;

   PA_PROJECT_PUB.G_Published_version_exists := PA_PROJ_TASK_STRUC_PUB.Published_version_exists( l_project_id ); -- Bug 3106457

IF  ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'N' ) OR
       ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
         PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'  AND
         PA_PROJECT_PUB.G_Published_version_exists = 'N')
THEN

   l_update_wbs_flag := PA_PROJECT_STRUCTURE_UTILS.GET_UPDATE_WBS_FLAG(p_project_id => l_project_id -- Bug 3106457 p_pa_project_id
                                                           ,p_structure_version_id => l_structure_version_id ) ; -- Bug 3106457
     IF nvl(l_update_wbs_flag,'N') = 'Y' THEN
          IF p_process_mode = 'ONLINE' THEN

             PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES(p_calling_context      => 'ONLINE_UPDATE'
                                                       ,p_project_id           => l_project_id -- Bug 3106457 p_pa_project_id
                                                       ,p_structure_version_id => l_structure_version_id -- Bug 3106457 p_structure_version_id
                                                       ,x_return_status        => l_return_status
                                                       ,x_msg_count            => l_msg_count
                                                       ,x_msg_data             => l_msg_data ) ;

             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
             END IF;
          ELSIF p_process_mode = 'CONCURRENT' THEN

             PA_PROJ_TASK_STRUC_PUB. PROCESS_WBS_UPDATES_CONC_WRP(p_calling_context      => 'CONC_UPDATE'
                                                                 ,p_project_id           => l_project_id --Bug 3106457 p_pa_project_id
                                                                 ,p_structure_version_id => l_structure_version_id -- Bug 3106457 p_structure_version_id
                                                                 ,x_return_status        => l_return_status
                                                                 ,x_msg_count            => l_msg_count
                                                                 ,x_msg_data             => l_msg_data ) ;

             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
             END IF;
          END IF ;
     END IF ;
   END IF ;
END IF;
-- PA L Changes 3010538

-- FP-M Bug # 3301192  update task
/*
      PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID(p_pa_project_id => p_pa_project_id
                                              ,p_pm_task_reference => p_pm_task_reference
                                              ,p_out_task_id => l_d_task_id
                                              ,p_return_status => l_return_status);
*/

      IF (PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS(l_project_id) = 'Y') THEN --Bug#3747312

        IF l_d_task_id IS NULL AND p_pm_task_reference IS NOT NULL AND p_pm_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
        THEN
          PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_all(p_pa_project_id => l_project_id --Bug#3747312 p_pa_project_id
                                              ,p_pm_task_reference => p_pm_task_reference
                                              ,p_out_task_id => l_d_task_id
                                              ,p_return_status => l_return_status);
             IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
             END IF;

        END IF;
/*
          IF (PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(p_pa_project_id) = 'Y') THEN
             l_d_struct_ver_id := PA_PROJECT_STRUCTURE_UTILS.GET_LAST_UPDATED_WORKING_VER(l_d_task_id);
          ELSE
             l_d_struct_ver_id :=  PA_PROJ_ELEMENTS_UTILS.LATEST_PUBLISHED_VER_ID(p_pa_project_id, 'WORKPLAN');
          END IF;
*/ --we dont need this. The structure version id is derived.

      l_d_task_ver_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID(p_structure_version_id => l_structure_version_id
                                          ,p_task_id => l_d_task_id);

      pa_proj_task_struc_pub.parse_predecessor_import(p_string => p_pred_string
                                                     ,p_delimeter => p_pred_delimiter
                                                     ,p_task_version_Id => l_d_task_ver_id
                                                     ,x_return_status => l_return_status
                                                     ,x_msg_count => l_msg_count
                                                     ,x_msg_data  => l_msg_data);

           IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
                  THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF l_return_status = FND_API.G_RET_STS_ERROR
                  THEN
                    RAISE FND_API.G_EXC_ERROR;
             END IF;
            l_d_task_id := null;
   END IF;
  --bug 4218977, rtarway, unset this variable if not called from update_project
  if p_calling_api <> 'UPDATE_PROJECT' then
     G_OP_VALIDATE_FLAG := null;
  end if;
EXCEPTION

    WHEN FND_API.G_EXC_ERROR THEN

        p_return_status := FND_API.G_RET_STS_ERROR ;
        --bug 4218977, rtarway, unset this variable if not called from update_project
        if p_calling_api <> 'UPDATE_PROJECT' then
          G_OP_VALIDATE_FLAG := null;
        end if;
        ROLLBACK TO Update_Task_pub;

        -- 4537865
        p_out_pa_task_id := NULL ;
        p_out_pm_task_reference := NULL ;
        -- 4537865

        FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

    WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        ROLLBACK TO Update_Task_pub;
        --bug 4218977, rtarway, unset this variable if not called from update_project
        if p_calling_api <> 'UPDATE_PROJECT' then
          G_OP_VALIDATE_FLAG := null;
        end if;

        -- 4537865
        p_out_pa_task_id := NULL ;
        p_out_pm_task_reference := NULL ;
        -- 4537865

        FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

    WHEN OTHERS THEN

        ROLLBACK TO Update_Task_pub;
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        --bug 4218977, rtarway, unset this variable if not called from update_project
        if p_calling_api <> 'UPDATE_PROJECT' then
          G_OP_VALIDATE_FLAG := null;
        end if;

        -- 4537865
        p_out_pa_task_id := NULL ;
        p_out_pm_task_reference := NULL ;
        -- 4537865

        IF FND_MSG_PUB.Check_Msg_Level (FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN

            FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

        END IF;

        FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

END update_task;

--------------------------------------------------------------------------------
--Name:               execute_update_project
--Type:               Procedure
--Description:        This procedure can be used to update a project
--                    using global PL/SQL tables.
--
--Called subprograms:
--
--
--
--History:
--    15-AUG-1996        R. Krishnamurthy      Created
--    05-DEC-1996   L. de Werker    Added initialisation of message list
--    22-DEC-97    jwhite    - Added OUT-parameter p_workflow_started
--             for workflow.
--

PROCEDURE execute_update_project
( p_api_version_number      IN  NUMBER
 ,p_commit        IN  VARCHAR2  := FND_API.G_FALSE
 ,p_init_msg_list                    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_op_validate_flag  IN VARCHAR2 := 'Y'--added by rtarway, bug 4218977
 ,p_msg_count        OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
 ,p_msg_data        OUT  NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_return_status                    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_workflow_started                  OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_pm_product_code                                 IN     VARCHAR2      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pass_entire_structure       IN      VARCHAR2 := 'N'  -- Added for bug 3696234 : Bug 3627124
 ,p_update_mode    IN VARCHAR2 := 'PA_UPD_WBS_ATTR' -- rtarway, for DHI ER, BUG 4413568  --bug 4534919
 )
IS

l_api_name              CONSTANT    VARCHAR2(30):='Execute_update_project';
l_return_status                     VARCHAR2(1) ;

BEGIN

    SAVEPOINT execute_update_project_pub;

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

    --  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

    p_return_status := FND_API.G_RET_STS_SUCCESS;

-- Begin code to fix Bug # 4314797.

-- In the publish workplan flow, we do not need to update key members so we can clear the global
-- g_key_members_in_tbl table. Further, in the 'create project and publish workplan version' flow
-- from MSP where the g_key_members_in_tbl would be populated during the create project flow
-- we need to clear the g_key_members_in_tbl before calling the API: update_project() in the publish
-- workplan flow to prevent errors.

        if nvl(p_pm_product_code,'WORKPLAN') = 'WORKPLAN' then

                g_key_members_in_tbl.delete;

        end if;

-- End code to fix Bug # 4314797.


    Update_Project (   p_api_version_number    => p_api_version_number,
        p_commit                  => FND_API.G_FALSE,
        p_return_status                               => l_return_status,
        p_msg_count                                   => p_msg_count,
        p_msg_data                                    => p_msg_data,
      p_workflow_started                => p_workflow_started,
        p_pm_product_code    => p_pm_product_code,
        p_op_validate_flag   => p_op_validate_flag, --Added by rtarway 4218977
        p_project_in                  => g_project_in_rec,
        p_project_out                              => g_project_out_rec,
        p_key_members                   => g_key_members_in_tbl,
        p_class_categories    => g_class_categories_in_tbl,
        p_tasks_in                  => g_tasks_in_tbl,
        p_tasks_out                              => g_tasks_out_tbl,
                        p_org_roles                     => g_org_roles_in_tbl
       ,p_pass_entire_structure  => p_pass_entire_structure  -- Added for bug 3696234 : Bug 3627124
      --bug 3096203
       ,p_ext_attr_tbl_in      => G_ext_attr_in_tbl
      --bug 3096203
--FP M : deliverables
      ,p_deliverables_in          => G_deliverables_in_tbl
--      ,p_deliverables_out         => G_deliverables_out_tbl
      ,p_deliverable_actions_in   => G_deliverable_actions_in_tbl
--      ,p_deliverable_actions_out  => G_deliverable_actions_out_tbl
      ,p_update_mode              => p_update_mode --DHI ER bug 4413568
--FP M : deliverables
     );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN

                        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN

                        RAISE FND_API.G_EXC_ERROR;
        END IF;


        IF FND_API.to_boolean( p_commit )
  THEN
    COMMIT;
  END IF;


EXCEPTION

        WHEN FND_API.G_EXC_ERROR
        THEN
        ROLLBACK TO execute_update_project_pub;

        p_return_status := FND_API.G_RET_STS_ERROR;

        -- 4537865
        p_workflow_started := NULL ;
        -- 4537865

        FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

        WHEN FND_API.G_EXC_UNEXPECTED_ERROR
        THEN
        ROLLBACK TO execute_update_project_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- 4537865
        p_workflow_started := NULL ;
        -- 4537865

        FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

        WHEN OTHERS THEN

        ROLLBACK TO execute_update_project_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- 4537865
        p_workflow_started := NULL ;
        -- 4537865

        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN

        FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name
        , p_error_text    => SUBSTRB(SQLERRM, 1, 240) ); -- 4537865 Converted from SUBSTR to SUBSTRB


                FND_MSG_PUB.add;
        END IF;

        FND_MSG_PUB.Count_And_Get
      (   p_count    =>  p_msg_count  ,
          p_data    =>  p_msg_data  );

END execute_update_project;

--------------------------------------------------------------------------------
--Name:               delete_project
--Type:               Procedure
--Description:        This procedure can be used to delete a project
--
--
--Called subprograms:
--
--
--
--History:
--    19-AUG-1996        R. Krishnamurthy    Created
--

PROCEDURE delete_project
( p_api_version_number    IN  NUMBER
 ,p_commit      IN  VARCHAR2  := FND_API.G_FALSE
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_msg_count      OUT NOCOPY  NUMBER /*Added the nocopy check for 4537865 */
 ,p_msg_data      OUT  NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_return_status    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_pm_product_code    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pa_project_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 )
IS

l_return_status                        VARCHAR2(1); --bug 2471668
l_project_id                           NUMBER;      --bug 2471668

BEGIN

    -- 4537865 : Initialize Return status to success
    p_return_status := FND_API.G_RET_STS_SUCCESS;

        --bug 2471668.
        --We need to call this API here toget the corrct project id. This is also
        --called from the private API. But I discussed with Sakthi and he is ok to call this
        --twice once here and second time in private API. The idea is to make the advanced security changes
        --only in public APIs.

      PA_PROJECT_PVT.Convert_pm_projref_to_id
        (        p_pm_project_reference =>      p_pm_project_reference
                 ,  p_pa_project_id     =>      p_pa_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      l_return_status
        );


      IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN

              RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN
              RAISE  FND_API.G_EXC_ERROR;
      END IF;

     PA_INTERFACE_UTILS_PUB.G_PROJECt_ID := l_project_id;  --bug 2471668 ( in the project context )
     --end of bug 2471668

pa_project_pvt.delete_project1
(p_api_version_number  => p_api_version_number
,p_commit              => FND_API.G_FALSE--bug 3766967
,p_init_msg_list       => p_init_msg_list
,p_msg_count           => p_msg_count
,p_msg_data            => p_msg_data
,p_return_status       => p_return_status
,p_pm_product_code     => p_pm_product_code
,p_pm_project_reference => p_pm_project_reference
,p_pa_project_id        => p_pa_project_id);

EXCEPTION
        WHEN FND_API.G_EXC_ERROR
        THEN
        p_return_status := FND_API.G_RET_STS_ERROR;
        p_msg_count := FND_MSG_PUB.count_msg; --  4537865

        WHEN FND_API.G_EXC_UNEXPECTED_ERROR
        THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
        p_msg_count := FND_MSG_PUB.count_msg; --  4537865

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
        p_msg_count := FND_MSG_PUB.count_msg; --  4537865

END delete_project;

--------------------------------------------------------------------------------
-- Name:    Check_Delete_Task_OK
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure returns 'Y' if it is OK to delete a task.
--      Otherwise, it returns 'N'.
--
-- Called Subprograms: Convert_Pm_Projref_To_Id
--      , Convert_Pm_Taskref_To_Id
-- History:  15-AUG-96  Created  jwhite
--    23-AUG-96  Update  jwhite  replaced local convert procedure with library
--            procedure.
--    26-AUG-96  Update  jwhite  Applied latest messaging standards.
--    20-NOV-96  Update  lwerker Changed handling of error messages
--    02-DEC-96  Update  lwerker Removed Savepoint and Rollbacks

PROCEDURE Check_Delete_Task_OK
( p_api_version_number    IN  NUMBER
, p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
, p_return_status    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
, p_msg_count      OUT  NOCOPY NUMBER /*Added the nocopy check for 4537865 */
, p_msg_data      OUT  NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
, p_project_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_task_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_task_reference    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--Project Structure changes done for bug 2765115
, p_structure_type              IN      VARCHAR2        := 'FINANCIAL'
, p_task_version_id             IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
--END Project Structure changes done for bug 2765115
, p_delete_task_ok_flag    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
)
IS
l_retrieve varchar2(1) ; --     4096218 Issues found during Unit Testing
BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

--bug 2876703   --check_delete_task_ok
     IF p_structure_type = 'WORKPLAN' AND p_project_id IS NOT NULL AND p_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     THEN
         IF PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( p_project_id ) = 'N' OR
            PA_PROJ_TASK_STRUC_PUB.IS_WP_SEPARATE_FROM_FN( p_project_id ) = 'N'
         THEN
         l_retrieve := 'Y' ;
            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
            THEN
                pa_interface_utils_pub.map_new_amg_msg
                    ( p_old_message_code => 'PA_PS_WP_NOT_SEP_FN'
                  ,p_msg_attribute    => 'CHANGE'
                  ,p_resize_flag      => 'Y' -- 4096218 Changed from 'N' to 'Y'
                  ,p_msg_context      => 'GENERAL'
                  ,p_attribute1       => ''
                  ,p_attribute2       => ''
                  ,p_attribute3       => ''
                  ,p_attribute4       => ''
                  ,p_attribute5       => '');
            END IF;
            RAISE FND_API.G_EXC_ERROR;
         END IF;
     END IF;
--bug 2876703
pa_project_check_pvt.Check_Delete_Task_OK_pvt
(p_api_version_number      => p_api_version_number
,p_init_msg_list          => p_init_msg_list
,p_return_status          => p_return_status
,p_msg_count            => p_msg_count
,p_msg_data              => p_msg_data
,p_project_id            => p_project_id
,p_pm_project_reference      => p_pm_project_reference
,p_task_id              => p_task_id
,p_pm_task_reference        => p_pm_task_reference
--Project Structure changes done for bug 2765115
,p_structure_type                      => p_structure_type
,p_task_version_id                     => p_task_version_id
--END Project Structure changes done for bug 2765115
,p_delete_task_ok_flag      => p_delete_task_ok_flag);

--bug 2876703   Added ecxeption block to support the above code added for bug 2876703
EXCEPTION
        WHEN FND_API.G_EXC_ERROR
        THEN
        p_return_status := FND_API.G_RET_STS_ERROR;
        IF l_retrieve = 'Y' THEN
            FND_MSG_PUB.Count_And_Get
               (p_encoded =>'F' ,   p_count    =>  p_msg_count  ,
                   p_data    =>  p_msg_data  );
        END IF;

        -- 4537865
        p_delete_task_ok_flag := NULL ;
        p_msg_count := FND_MSG_PUB.count_msg;

        WHEN FND_API.G_EXC_UNEXPECTED_ERROR
        THEN

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- 4537865
        p_delete_task_ok_flag := NULL ;

        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Delete_Task_Ok');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- 4537865
        p_delete_task_ok_flag := NULL ;

        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Delete_Task_Ok');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

--bug 2876703
END Check_Delete_Task_Ok;


--------------------------------------------------------------------------------
-- Name:    Check_Add_Subtask_OK
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure returns 'Y' if it is OK to add subtask, 'N' otherwise.
--
-- Called Subprograms: Convert_Pm_Projref_To_Id
--      , Convert_Pm_Taskref_To_Id
-- History:  15-AUG-96  Created  jwhite
--    23-AUG-96  Update  jwhite  replaced local convert procedure with library
--            procedure.
--    26-AUG-96  Update  jwhite  Applied latest messaging standards.
--    20-NOV-96  Update  lwerker Changed handling of error messages
--    02-DEC-96  Update  lwerker Removed Savepoint and Rollbacks
--

PROCEDURE Check_Add_Subtask_OK
(p_api_version_number    IN  NUMBER
,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
, p_return_status    OUT  NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
, p_msg_count      OUT  NOCOPY NUMBER  /*Added the nocopy check for 4537865 */
, p_msg_data      OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
, p_project_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_task_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_task_reference    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_add_subtask_ok_flag    OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
)
IS

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

pa_project_check_pvt.Check_Add_Subtask_OK_pvt
(p_api_version_number      => p_api_version_number
,p_init_msg_list          => p_init_msg_list
,p_return_status          => p_return_status
,p_msg_count            => p_msg_count
,p_msg_data              => p_msg_data
,p_project_id            => p_project_id
,p_pm_project_reference      => p_pm_project_reference
,p_task_id              => p_task_id
,p_pm_task_reference        => p_pm_task_reference
,p_add_subtask_ok_flag      => p_add_subtask_ok_flag);

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        p_add_subtask_ok_flag := NULL ;

        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Add_Subtask_Ok');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

END Check_Add_Subtask_Ok;


--------------------------------------------------------------------------------

-- Name:    Check_Unique_Task_Reference
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure returns 'Y' if the task reference does not exist,
--       'N' otherwise.
--
-- Called Subprograms: Convert_Pm_Projref_To_Id
--
-- History:  15-AUG-96  Created  jwhite
--    23-AUG-96  Update  jwhite  replaced local convert procedure with library
--            procedure.
--    26-AUG-96  Update  jwhite  Applied latest messaging standards.
--    20-NOV-96  Update  lwerker Added use of cursor and changed handling of error messages
--    02-DEC-96  Update  lwerker Removed Savepoint and Rollbacks
--
PROCEDURE Check_Unique_Task_Reference
(p_api_version_number    IN  NUMBER
, p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
, p_return_status    OUT  NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
, p_msg_count      OUT NOCOPY  NUMBER  /*Added the nocopy check for 4537865 */
, p_msg_data      OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
, p_project_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_pm_task_reference    IN  VARCHAR2
, p_unique_task_ref_flag  OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
)
IS

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

pa_project_check_pvt.Check_Unique_Task_Ref_pvt
(p_api_version_number      => p_api_version_number
,p_init_msg_list          => p_init_msg_list
,p_return_status          => p_return_status
,p_msg_count            => p_msg_count
,p_msg_data              => p_msg_data
,p_project_id            => p_project_id
,p_pm_project_reference      => p_pm_project_reference
,p_pm_task_reference        => p_pm_task_reference
,p_unique_task_ref_flag        => p_unique_task_ref_flag);

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        p_unique_task_ref_flag := NULL ;

        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Unique_Task_Reference');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

END Check_Unique_Task_Reference;


--------------------------------------------------------------------------------
-- Name:    Check_Unique_Project_Reference
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure returns 'Y' if the project reference does not exist
--      , 'N' otherwise.
--
-- Called Subprograms: none.
--
-- History:  15-AUG-96  Created  jwhite
--    23-AUG-96  Update  jwhite  replaced local convert procedure with library
--            procedure.
--    26-AUG-96  Update  jwhite  Applied latest messaging standards.
--
--    02-DEC-96  Update  lwerker Added use of cursor and changed handling of error messages
--            Removed Savepoint and Rollbacks
--
PROCEDURE Check_Unique_Project_Reference
(p_api_version_number    IN  NUMBER
, p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
, p_return_status    OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
, p_msg_count      OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
, p_msg_data      OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
, p_pm_project_reference  IN  VARCHAR2
, p_unique_project_ref_flag  OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
)
IS

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

pa_project_check_pvt.Check_Unique_Project_Ref_pvt
(p_api_version_number      => p_api_version_number
,p_init_msg_list          => p_init_msg_list
,p_return_status          => p_return_status
,p_msg_count            => p_msg_count
,p_msg_data              => p_msg_data
,p_pm_project_reference      => p_pm_project_reference
,p_unique_project_ref_flag    => p_unique_project_ref_flag);

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        p_unique_project_ref_flag := NULL ;
        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Unique_Project_Reference');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

END Check_Unique_Project_Reference;

--------------------------------------------------------------------------------
-- Name:    Check_Delete_Project_OK
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure returns 'Y' if the project can be deleted, 'N' otherwise.
--
-- Called Subprograms: Convert_Pm_Projref_To_Id
--
-- History:  15-AUG-96  Created  jwhite
--    23-AUG-96  Update  jwhite  replaced local convert procedure with library
--            procedure.
--    26-AUG-96  Update  jwhite  Applied latest messaging standards.
--    02-DEC-96  Update  lwerker Changed handling of error messages
--            Removed Savepoint and Rollbacks
--

PROCEDURE Check_Delete_Project_OK
(p_api_version_number    IN  NUMBER
, p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
, p_return_status    OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
, p_msg_count      OUT NOCOPY NUMBER  /*Added the nocopy check for 4537865 */
, p_msg_data      OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
, p_project_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_delete_project_ok_flag  OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
)
IS

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

pa_project_check_pvt.Check_Delete_Project_OK_pvt
(p_api_version_number        => p_api_version_number
,p_init_msg_list            => p_init_msg_list
,p_return_status            => p_return_status
,p_msg_count              => p_msg_count
,p_msg_data                => p_msg_data
,p_project_id              => p_project_id
,p_pm_project_reference        => p_pm_project_reference
,p_delete_project_ok_flag      => p_delete_project_ok_flag);

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        p_delete_project_ok_flag := NULL ;
        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Delete_Project_OK');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

END Check_Delete_Project_Ok;

--------------------------------------------------------------------------------
-- Name:    Check_Change_Parent_OK
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure returns 'Y' if the task can be moved to another parent; 'N' otherwise.
--
-- Called Subprograms: Convert_Pm_Projref_To_Id
--
-- History:  15-AUG-96  Created  jwhite
--    23-AUG-96  Update  jwhite  replaced local convert procedure with library
--            procedure.
--    26-AUG-96  Update  jwhite  Applied latest messaging standards.
--    02-DEC-96  Update  lwerker  Changed handling of return values.
--            Removed Savepoint and Rollbacks
--
PROCEDURE Check_Change_Parent_OK
(p_api_version_number     IN  NUMBER
, p_init_msg_list     IN  VARCHAR2  := FND_API.G_FALSE
, p_return_status     OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
, p_msg_count       OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
, p_msg_data       OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
, p_project_id       IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference   IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_task_id       IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_task_reference     IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_new_parent_task_id     IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_new_parent_task_reference IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_change_parent_ok_flag   OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
)
IS

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

pa_project_check_pvt.Check_Change_Parent_OK_pvt
(p_api_version_number        => p_api_version_number
,p_init_msg_list            => p_init_msg_list
,p_return_status            => p_return_status
,p_msg_count              => p_msg_count
,p_msg_data                => p_msg_data
,p_project_id              => p_project_id
,p_pm_project_reference        => p_pm_project_reference
,p_task_id                => p_task_id
,p_pm_task_reference          => p_pm_task_reference
,p_new_parent_task_id        => p_new_parent_task_id
,p_pm_new_parent_task_reference  => p_pm_new_parent_task_reference
,p_change_parent_ok_flag      => p_change_parent_ok_flag);

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        p_change_parent_ok_flag := NULL ;
        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Change_Parent_OK');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

END Check_Change_Parent_OK;

--------------------------------------------------------------------------------
-- Name:    Check_Change_Project_Org_OK
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure returns 'Y' if the project organization can be changed, 'N' otherwise.
--
-- Called Subprograms: Convert_Pm_Projref_To_Id
--
-- History:  15-AUG-96  Created  jwhite
--    23-AUG-96  Update  jwhite  replaced local convert procedure with library
--            procedure.
--    26-AUG-96  Update  jwhite  Applied latest messaging standards.
--    02-DEC-96  Update  lwerker Changed error handling
--            Removed Savepoint and Rollbacks
--

PROCEDURE Check_Change_Project_Org_OK
(p_api_version_number    IN  NUMBER
, p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
, p_return_status    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
, p_msg_count      OUT  NOCOPY NUMBER /*Added the nocopy check for 4537865 */
, p_msg_data      OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
, p_project_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_change_project_org_ok_flag  OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
)
IS

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

pa_project_check_pvt.Check_Change_Proj_Org_OK_pvt
(p_api_version_number        => p_api_version_number
,p_init_msg_list            => p_init_msg_list
,p_return_status            => p_return_status
,p_msg_count              => p_msg_count
,p_msg_data                => p_msg_data
,p_project_id              => p_project_id
,p_pm_project_reference        => p_pm_project_reference
,p_change_project_org_ok_flag    => p_change_project_org_ok_flag);

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        p_change_project_org_ok_flag := NULL ;
        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Change_Project_Org_OK');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

END Check_Change_Project_Org_Ok;

--------------------------------------------------------------------------------
-- Name:    Check_Unique_Task_Number
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure returns 'Y' if the task number does NOT already exist; 'N' otherwise.
--
-- Called Subprograms: Convert_Pm_Projref_To_Id
--
-- History:  15-AUG-96  Created  jwhite
--    23-AUG-96  Update  jwhite  replaced local convert procedure with library
--            procedure.
--    26-AUG-96  Update  jwhite  Applied latest messaging standards.
--    02-DEC-96  Update  lwerker  Changed handling of return values
--            Removed Savepoint and Rollbacks
--

PROCEDURE Check_Unique_Task_Number
(p_api_version_number    IN  NUMBER
, p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
, p_return_status    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
, p_msg_count      OUT NOCOPY  NUMBER /*Added the nocopy check for 4537865 */
, p_msg_data      OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
, p_project_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_task_number      IN  VARCHAR2
, p_unique_task_number_flag  OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
)
IS

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

pa_project_check_pvt.Check_Unique_Task_Number_pvt
(p_api_version_number      => p_api_version_number
,p_init_msg_list          => p_init_msg_list
,p_return_status          => p_return_status
,p_msg_count            => p_msg_count
,p_msg_data              => p_msg_data
,p_project_id            => p_project_id
,p_pm_project_reference      => p_pm_project_reference
,p_task_number            => p_task_number
,p_unique_task_number_flag    => p_unique_task_number_flag);

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        p_unique_task_number_flag := NULL ;
        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Unique_Task_Number');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

END Check_Unique_Task_Number;

--------------------------------------------------------------------------------
-- Name:    Check_Task_Number_Change_Ok
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure returns 'Y' if it is OK to change a LOWEST task.
--      Otherwise, it returns 'N'.
--
-- Called Subprograms: Convert_Pm_Projref_To_Id
--      , Convert_Pm_Taskref_To_Id
-- History:  15-AUG-96  Created  jwhite
--    23-AUG-96  Update  jwhite  replaced local convert procedure with library
--            procedure.
--    26-AUG-96  Update  jwhite  Applied latest messaging standards.
--    02-DEC-96  Update  lwerker  Changed the way return values are handled
--            Removed Savepoint and Rollbacks

PROCEDURE Check_Task_Number_Change_Ok
( p_api_version_number    IN  NUMBER
, p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
, p_return_status    OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
, p_msg_count      OUT NOCOPY  NUMBER /*Added the nocopy check for 4537865 */
, p_msg_data      OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
, p_project_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_task_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_task_reference    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_task_number_change_Ok_flag  OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
)
IS

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

pa_project_check_pvt.Check_Task_Numb_Change_Ok_Pvt
(p_api_version_number        => p_api_version_number
,p_init_msg_list            => p_init_msg_list
,p_return_status            => p_return_status
,p_msg_count              => p_msg_count
,p_msg_data                => p_msg_data
,p_project_id              => p_project_id
,p_pm_project_reference        => p_pm_project_reference
,p_task_id                => p_task_id
,p_pm_task_reference          => p_pm_task_reference
,p_task_number_change_Ok_flag    => p_task_number_change_Ok_flag);

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        p_task_number_change_Ok_flag := NULL ;
        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'Check_Task_Number_Change_Ok');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

END Check_Task_Number_Change_Ok;

--------------------------------------------------------------------------------
-- Name:    approve_project
-- Type:    PL/SQL Procedure
-- Decscription:  This procedure will set the project status to approved.
--
-- Called Subprograms:
--
-- History:  27-FEB-97  L. de Werker  Created
--
--
PROCEDURE approve_project
( p_api_version_number    IN  NUMBER
 ,p_commit      IN  VARCHAR2  := FND_API.G_FALSE
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_msg_count      OUT NOCOPY  NUMBER /*Added the nocopy check for 4537865 */
 ,p_msg_data      OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_return_status    OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_pm_product_code    IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pm_project_reference  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pa_project_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 )
IS

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

pa_project_pvt.approve_project1
( p_api_version_number => p_api_version_number
, p_commit             => FND_API.G_FALSE--bug 3766967
, p_init_msg_list      => p_init_msg_list
, p_msg_count          => p_msg_count
, p_msg_data           => p_msg_data
, p_return_status      => p_return_status
, p_pm_product_code    => p_pm_product_code
, p_pm_project_reference => p_pm_project_reference
, p_pa_project_id        => p_pa_project_id);

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'approve_project');
        END IF;

        FND_MSG_PUB.Count_And_Get
        (p_count             =>      p_msg_count     ,
        p_data              =>      p_msg_data      );

END approve_project;

--------------------------------------------------------------------------------
-- Name:    load_tasks
-- Type:    PL/SQL Procedure
-- Decscription:  This is a wrapper API for the load_task procedure.
--
-- Called Subprograms: load_task
--
-- History:  05-JUN-02  hyau  Created
--          22-JAN-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to add parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days to tasks and create dependencies.
--          10-FEB-2004 Rakesh Raghavan - Modifications for FP-M Bug # 3301192 to replace parameters: predecessor_task_reference_id,
--                                        dependency_type and lag days with parameters: pred_string and pred_delimiter.
--
--
--          01-MAR-2004 Rakesh Raghavan   Copied Venkat's FP-M changes from load_task API to load_tasks API.
--          05-APR-2004 Rakesh Raghavan   Progress Management Changes. Bug # 3420093.
--          29-NOV-2004 djoseph           Bug 4024659: Changed the function substr to substrb for l_task_name and l_long_task_name.
--                                        Changes tagged by bug number.

PROCEDURE load_tasks
(
   p_api_version_number      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_init_msg_list      IN  VARCHAR2  := FND_API.G_FALSE
  ,p_return_status      OUT NOCOPY  VARCHAR2 /*Added the nocopy check for 4537865 */
  ,p_pm_task_reference      IN  PA_VC_1000_150
  ,p_pa_task_id                         IN      PA_NUM_1000_NUM
  ,p_task_name        IN  PA_VC_1000_2000 := PA_VC_1000_2000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) --bug 6193314 .Modified PA_VC_1000_150
  ,p_long_task_name      IN  PA_VC_1000_2000 := PA_VC_1000_2000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_pa_task_number                     IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_task_description      IN  PA_VC_1000_2000 := PA_VC_1000_2000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_task_start_date      IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_task_completion_date    IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_pm_parent_task_reference    IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_pa_parent_task_id      IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_address_id        IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_carrying_out_organization_id  IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_service_type_code      IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_task_manager_person_id    IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_billable_flag      IN  PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_chargeable_flag      IN  PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_ready_to_bill_flag      IN  PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_ready_to_distribute_flag    IN  PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_limit_to_txn_controls_flag    IN  PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_labor_bill_rate_org_id    IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_labor_std_bill_rate_schdl    IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_labor_schedule_fixed_date    IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_labor_schedule_discount    IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_nl_bill_rate_org_id    IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_nl_std_bill_rate_schdl    IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_nl_schedule_fixed_date    IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_nl_schedule_discount    IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_labor_cost_multiplier_name    IN  PA_VC_1000_25 := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_cost_ind_rate_sch_id    IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_rev_ind_rate_sch_id          IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_inv_ind_rate_sch_id    IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_cost_ind_sch_fixed_date    IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_rev_ind_sch_fixed_date    IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_inv_ind_sch_fixed_date    IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_labor_sch_type      IN  PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_nl_sch_type      IN  PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_actual_start_date                  IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_actual_finish_date                 IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_early_start_date                   IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_early_finish_date                  IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_late_start_date                    IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_late_finish_date                   IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_scheduled_start_date               IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_scheduled_finish_date              IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_attribute_category      IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute1        IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute2        IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute3        IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute4        IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute5        IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute6        IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute7        IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute8        IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute9        IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_attribute10      IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_allow_cross_charge_flag            IN      PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_project_rate_date                  IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_project_rate_type                  IN      PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_cc_process_labor_flag              IN      PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_labor_tp_schedule_id               IN      PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_labor_tp_fixed_date                IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_cc_process_nl_flag                 IN      PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_nl_tp_schedule_id                  IN      PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_nl_tp_fixed_date                   IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_receive_project_invoice_flag       IN      PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_work_type_id                       IN      PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_emp_bill_rate_schedule_id          IN      PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_job_bill_rate_schedule_id          IN      PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
--Sakthi  MCB
 ,p_non_lab_std_bill_rt_sch_id          IN      PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
 ,p_taskfunc_cost_rate_type             IN      PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_taskfunc_cost_rate_date             IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
--Sakthi  MCB
 ,p_display_sequence            IN      PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
 ,p_wbs_level                    IN      PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
 ,p_milestone                     IN    PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_duration                      IN    PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_duration_unit                 IN    PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_login_user_name               IN    PA_VC_1000_150:= PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_critical_flag                 IN    PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_sub_project_id                IN    PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
 ,p_progress_status_code           IN    PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_progress_comments             IN    PA_VC_1000_4000 := PA_VC_1000_4000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_progress_asof_date            IN    PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
 ,p_progress_description             IN      PA_VC_1000_2000 := PA_VC_1000_2000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_predecessors                  IN    PA_VC_1000_2000 := PA_VC_1000_2000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_priority_code                       IN      PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_wbs_number                           IN      PA_VC_1000_2000 := PA_VC_1000_2000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_estimated_start_date                IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
 ,p_estimated_finish_date               IN      PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
 ,p_estimate_to_complete              IN    PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_language                      IN    VARCHAR2 default 'US'
 ,p_delimiter                     IN    VARCHAR2 default ','
 ,p_structure_version_id          IN    NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
-- ,p_calling_mode                  IN    VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--Margaret bug 2683364
 ,P_OBLIGATION_START_DATE   IN PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
 ,P_OBLIGATION_FINISH_DATE  IN PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
 ,P_BASELINE_START_DATE     IN PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
 ,P_BASELINE_FINISH_DATE    IN PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
 ,P_CLOSED_DATE             IN PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
 ,P_WQ_UOM_CODE             IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,P_WQ_ITEM_CODE            IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,P_STATUS_CODE             IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,P_WF_STATUS_CODE          IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,P_PM_SOURCE_CODE          IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,P_INC_PROJ_PROGRESS_FLAG  IN PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,P_LINK_TASK_FLAG          IN PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,P_CALENDAR_ID             IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
 ,P_PLANNED_EFFORT          IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
 ,P_PLANNED_WORK_QUANTITY   IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
 ,P_TASK_TYPE               IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
--Margaret end bug 2683364
 ,p_labor_disc_reason_code       IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_non_labor_disc_reason_code   IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
--PA L changes -- bug 2872708  --load_tasks
 ,p_retirement_cost_flag          IN PA_VC_1000_10             := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_cint_eligible_flag            IN PA_VC_1000_10             := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 ,p_cint_stop_date       IN PA_DATE_1000_DATE         := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
--end PA L changes -- bug 2872708
-- FP-M Bug # 3301192
 ,p_pred_string                   IN PA_VC_1000_4000 := PA_VC_1000_4000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
-- ,p_pred_delimiter                IN PA_VC_1000_10   := PA_VC_1000_10(',')
 ,p_pred_delimiter                IN PA_VC_1000_10   := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
 -- FP M : Deliverable
 -- ,p_deliverable                 IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_deliverable                 IN PA_VC_1000_4000 := PA_VC_1000_4000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) --SMUKKA
  ,p_deliverable_id               IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)  -- 3661788 Added IN Parameter
--Copied Venkat's FP-M changes from load_task API to load_tasks API.
-- FP M changes begin (venkat)
  ,p_base_percent_comp_deriv_code IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_sch_tool_tsk_type_code       IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_constraint_type_code         IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_constraint_date          IN PA_DATE_1000_DATE:= PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  ,p_free_slack                   IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_total_slack                  IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_effort_driven_flag           IN PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_level_assignments_flag       IN PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_invoice_method           IN PA_VC_1000_4000 := PA_VC_1000_4000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  ,p_customer_id                  IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_gen_etc_source_code          IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
-- FP M changes end (venkat)
-- FP M changes start (Mapping )
--  ,p_financial_task_flag        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--  ,p_mapped_task_id             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
--  ,p_mapped_task_reference      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
-- FP M changes end (Mapping )
   ,p_financial_task_flag        IN PA_VC_1000_10 := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)    --SMukka
   ,p_mapped_task_id             IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) --SMukka
   ,p_mapped_task_reference      IN PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)  --SMukka

-- (begin venkat) new params for bug #3450684 ----------------------------------------------
  ,p_ext_act_duration            IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_ext_remain_duration         IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_ext_sch_duration            IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
-- (end venkat) new params for bug #3450684 -------------------------------------------------

-- Progress Management Changes. Bug # 3420093.
  ,p_etc_effort                 IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  ,p_percent_complete           IN PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
-- Progress Management Changes. Bug # 3420093.

)
IS
l_api_name              CONSTANT    VARCHAR2(30):='Load_Tasks';
l_return_status                     VARCHAR2(1):= 'S';
l_responsibility_id                 NUMBER;


--hyau added for debugging unhandled exception stage
  l_stage           VARCHAR2(250);
  l_counter           NUMBER;

  l_task_name_flag    VARCHAR2(1) := 'Y';
  l_long_task_name_flag  VARCHAR2(1) := 'Y';
  l_pa_task_number_flag VARCHAR2(1) := 'Y';
  l_task_description_flag   VARCHAR2(1) := 'Y';
  l_task_start_date_flag    VARCHAR2(1) := 'Y';
  l_task_completion_date_flag    VARCHAR2(1) := 'Y';
  l_pm_parent_task_ref_flag    VARCHAR2(1) := 'Y';
  l_pa_parent_task_id_flag    VARCHAR2(1) := 'Y';
  l_address_id_flag                      VARCHAR2(1) := 'Y';
  l_carrying_out_org_id_flag    VARCHAR2(1) := 'Y';
  l_service_type_code_flag               VARCHAR2(1) := 'Y';
  l_task_manager_person_id_flag          VARCHAR2(1) := 'Y';
  l_billable_flag_flag                   VARCHAR2(1) := 'Y';
  l_chargeable_flag_flag    VARCHAR2(1) := 'Y';
  l_ready_to_bill_flag_flag    VARCHAR2(1) := 'Y';
  l_ready_to_dist_flag_flag    VARCHAR2(1) := 'Y';
  l_limit_to_txn_cnt_flag_flag    VARCHAR2(1) := 'Y';
  l_labor_bill_rate_org_id_flag    VARCHAR2(1) := 'Y';
  l_labor_std_bill_rate_flag    VARCHAR2(1) := 'Y';
  l_labor_schd_fixed_date_flag    VARCHAR2(1) := 'Y';
  l_labor_schd_discount_flag    VARCHAR2(1) := 'Y';
  l_nl_bill_rate_org_id_flag    VARCHAR2(1) := 'Y';
  l_nl_std_bill_rate_schdl_flag    VARCHAR2(1) := 'Y';
  l_nl_schedule_fixed_date_flag    VARCHAR2(1) := 'Y';
  l_nl_schedule_discount_flag    VARCHAR2(1) := 'Y';
  l_labor_cost_mult_name_flag    VARCHAR2(1) := 'Y';
  l_cost_ind_rate_sch_id_flag    VARCHAR2(1) := 'Y';
  l_rev_ind_rate_sch_id_flag    VARCHAR2(1) := 'Y';
  l_inv_ind_rate_sch_id_flag    VARCHAR2(1) := 'Y';
  l_cost_ind_sch_fixed_date_flag    VARCHAR2(1) := 'Y';
  l_rev_ind_sch_fixed_date_flag    VARCHAR2(1) := 'Y';
  l_inv_ind_sch_fixed_date_flag    VARCHAR2(1) := 'Y';
  l_labor_sch_type_flag    VARCHAR2(1) := 'Y';
  l_nl_sch_type_flag    VARCHAR2(1) := 'Y';
  l_actual_start_date_flag    VARCHAR2(1) := 'Y';
  l_actual_finish_date_flag    VARCHAR2(1) := 'Y';
  l_early_start_date_flag    VARCHAR2(1) := 'Y';
  l_early_finish_date_flag    VARCHAR2(1) := 'Y';
  l_late_start_date_flag    VARCHAR2(1) := 'Y';
  l_late_finish_date_flag    VARCHAR2(1) := 'Y';
  l_scheduled_start_date_flag    VARCHAR2(1) := 'Y';
  l_scheduled_finish_date_flag    VARCHAR2(1) := 'Y';
  l_attribute_category_flag    VARCHAR2(1) := 'Y';
  l_attribute1_flag    VARCHAR2(1) := 'Y';
  l_attribute2_flag    VARCHAR2(1) := 'Y';
  l_attribute3_flag    VARCHAR2(1) := 'Y';
  l_attribute4_flag    VARCHAR2(1) := 'Y';
  l_attribute5_flag    VARCHAR2(1) := 'Y';
  l_attribute6_flag    VARCHAR2(1) := 'Y';
  l_attribute7_flag    VARCHAR2(1) := 'Y';
  l_attribute8_flag    VARCHAR2(1) := 'Y';
  l_attribute9_flag    VARCHAR2(1) := 'Y';
  l_attribute10_flag    VARCHAR2(1) := 'Y';
  l_allow_cross_charge_flag_flag    VARCHAR2(1) := 'Y';
  l_project_rate_date_flag    VARCHAR2(1) := 'Y';
  l_project_rate_type_flag    VARCHAR2(1) := 'Y';
  l_cc_process_labor_flag_flag    VARCHAR2(1) := 'Y';
  l_labor_tp_schedule_id_flag    VARCHAR2(1) := 'Y';
  l_labor_tp_fixed_date_flag    VARCHAR2(1) := 'Y';
  l_cc_process_nl_flag_flag    VARCHAR2(1) := 'Y';
  l_nl_tp_schedule_id_flag    VARCHAR2(1) := 'Y';
  l_nl_tp_fixed_date_flag    VARCHAR2(1) := 'Y';
  l_receive_proj_inv_flag_flag    VARCHAR2(1) := 'Y';
  l_work_type_id_flag    VARCHAR2(1) := 'Y';
  l_emp_bill_rate_schd_id_flag    VARCHAR2(1) := 'Y';
  l_job_bill_rate_schd_id_flag    VARCHAR2(1) := 'Y';
  l_non_lab_std_bill_rt_sch_flag    VARCHAR2(1) := 'Y';
  l_taskfunc_cost_rate_type_flag    VARCHAR2(1) := 'Y';
  l_taskfunc_cost_rate_date_flag    VARCHAR2(1) := 'Y';
  l_display_sequence_flag    VARCHAR2(1) := 'Y';
  l_wbs_level_flag    VARCHAR2(1) := 'Y';
--bug 2683364
  l_obligation_start_date_flag       VARCHAR2(1) := 'Y';
  l_obligation_finish_date_flag      VARCHAR2(1) := 'Y';
  l_baseline_start_date_flag          VARCHAR2(1) := 'Y';
  l_baseline_finish_date_flag         VARCHAR2(1) := 'Y';
  l_closed_date_flag                   VARCHAR2(1) := 'Y';
  l_wq_uom_code_flag                  VARCHAR2(1) := 'Y';
  l_wq_item_code_flag                 VARCHAR2(1) := 'Y';
  l_status_code_flag                  VARCHAR2(1) := 'Y';
  l_wf_status_code_flag               VARCHAR2(1) := 'Y';
  l_pm_source_code_flag               VARCHAR2(1) := 'Y';
  l_inc_proj_progress_flag_flag       VARCHAR2(1) := 'Y';
  l_link_task_flag_flag                VARCHAR2(1) := 'Y';
  l_calendar_id_flag                  VARCHAR2(1) := 'Y';
  l_planned_effort_flag                VARCHAR2(1) := 'Y';
  l_planned_work_quantity_flag         VARCHAR2(1) := 'Y';
  l_task_type_flag                     VARCHAR2(1) := 'Y';

--bug 2744729, 2740565
  l_estimated_start_date_flag       VARCHAR2(1) := 'Y';
  l_estimated_finish_date_flag      VARCHAR2(1) := 'Y';
  l_milestone_flag_flag             VARCHAR2(1) := 'Y';
  l_critical_flag_flag              VARCHAR2(1) := 'Y';
  l_priority_code_flag              VARCHAR2(1) := 'Y';
--bug 2744729, 2740565

  l_labor_disc_reason_code_flag              VARCHAR2(1) := 'Y';
  l_nl_disc_reason_code_flag              VARCHAR2(1) := 'Y';

  --bug 2872708
  l_retirement_cost_flag_flag                  VARCHAR2(1) := 'Y';
  l_cint_eligible_flag_flag                    VARCHAR2(1) := 'Y';
  l_cint_stop_date_flag                        VARCHAR2(1) := 'Y';
  --bug 2872708

  -- FP-M Bug # 3301192
  l_pred_string_flag               VARCHAR2(1) := 'Y';
  l_pred_delimiter_flag                 VARCHAR2(1) := 'Y';

--Copied Venkat's FP-M changes from load_task API to load_tasks API.
-- FP M changes begin (venkat)
  l_base_prct_comp_drv_code_flag    VARCHAR2(1) := 'Y';
  l_sch_tool_tsk_type_code_flag         VARCHAR2(1) := 'Y';
  l_constraint_type_code_flag           VARCHAR2(1) := 'Y';
  l_constraint_date_flag                VARCHAR2(1) := 'Y';
  l_free_slack_flag                     VARCHAR2(1) := 'Y';
  l_total_slack_flag                    VARCHAR2(1) := 'Y';
  l_effort_driven_flag_flag             VARCHAR2(1) := 'Y';
  l_level_assignments_flag_flag         VARCHAR2(1) := 'Y';
  l_invoice_method_flag                 VARCHAR2(1) := 'Y';
  l_customer_id_flag                    VARCHAR2(1) := 'Y';
  l_gen_etc_source_code_flag            VARCHAR2(1) := 'Y';
-- FP M changes end (venkat)

-- (begin venkat) new params for bug #3450684 -------------
  l_ext_act_duration_flag       VARCHAR2(1) := 'Y';
  l_ext_remain_duration_flag        VARCHAR2(1) := 'Y';
  l_ext_sch_duration_flag       VARCHAR2(1) := 'Y';
-- (end venkat) new params for bug #3450684 --------------
--SMukka
   l_financial_task_flag         VARCHAR2(1) := 'Y';
   l_mapped_task_id_flag         VARCHAR2(1) := 'Y';
   l_mapped_task_reference_flag  VARCHAR2(1) := 'Y';
   l_deliverable_flag            VARCHAR2(1) := 'Y';

-- Progress Management Changes. Bug # 3420093.
  l_etc_effort_flag                 VARCHAR2(1) := 'Y';
  l_percent_complete_flag           VARCHAR2(1) := 'Y';
-- Progress Management Changes. Bug # 3420093.

 -- Bug 6193314 .
  l_task_name              VARCHAR2(240)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_long_task_name                          VARCHAR2(240)       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_pa_task_number             VARCHAR2(100)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_task_description        VARCHAR2(250)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_task_start_date            DATE        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_task_completion_date      DATE        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_pm_parent_task_reference    VARCHAR2(25)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_pa_parent_task_id        NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_address_id              NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_carrying_out_organization_id  NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_service_type_code        VARCHAR2(30)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_task_manager_person_id      NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_billable_flag            VARCHAR2(1)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_chargeable_flag            VARCHAR2(1)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_ready_to_bill_flag        VARCHAR2(1)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_ready_to_distribute_flag    VARCHAR2(1)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_limit_to_txn_controls_flag    VARCHAR2(1)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_labor_bill_rate_org_id      NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_labor_std_bill_rate_schdl    VARCHAR2(20)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_labor_schedule_fixed_date    DATE        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_labor_schedule_discount      NUMBER        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_nl_bill_rate_org_id          NUMBER           := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_nl_std_bill_rate_schdl      VARCHAR2(30)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_nl_schedule_fixed_date      DATE        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_nl_schedule_discount      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_labor_cost_multiplier_name    VARCHAR2(20)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_cost_ind_rate_sch_id      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_rev_ind_rate_sch_id          NUMBER           := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_inv_ind_rate_sch_id          NUMBER           := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_cost_ind_sch_fixed_date      DATE         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_rev_ind_sch_fixed_date      DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_inv_ind_sch_fixed_date      DATE          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_labor_sch_type            VARCHAR2(1)    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_nl_sch_type                VARCHAR2(1)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_actual_start_date               DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_actual_finish_date              DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_early_start_date                DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_early_finish_date               DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_late_start_date                 DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_late_finish_date                DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_scheduled_start_date            DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_scheduled_finish_date           DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_attribute_category        VARCHAR2(30)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute1              VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute2              VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute3              VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute4              VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute5              VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute6              VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute7              VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute8              VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute9              VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_attribute10                VARCHAR2(150)  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_allow_cross_charge_flag          VARCHAR2(1)    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_project_rate_date              DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_project_rate_type              VARCHAR2(30)   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_cc_process_labor_flag         VARCHAR2(1)    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_labor_tp_schedule_id          NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_labor_tp_fixed_date           DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_cc_process_nl_flag             VARCHAR2(1)    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_nl_tp_schedule_id              NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_nl_tp_fixed_date               DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_receive_project_invoice_flag   VARCHAR2(1)    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_work_type_id                  NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_emp_bill_rate_schedule_id        NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_job_bill_rate_schedule_id        NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_non_lab_std_bill_rt_sch_id    NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_taskfunc_cost_rate_type       VARCHAR2(30)   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_taskfunc_cost_rate_date       DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_display_sequence          NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_wbs_level                  NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;

 l_obligation_start_date               DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
 l_obligation_finish_date              DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
 l_baseline_start_date                 DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
 l_baseline_finish_date                DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
 l_closed_date                         DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
 l_wq_uom_code                         VARCHAR2(30) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_wq_item_code                        VARCHAR2(30) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_status_code                         VARCHAR2(150) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_wf_status_code                      VARCHAR2(150) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_pm_source_code                      VARCHAR2(150) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_inc_proj_progress_flag              VARCHAR2(10) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_link_task_flag                      VARCHAR2(10) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_calendar_id                         NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
 l_planned_effort                      NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
 l_planned_work_quantity               NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
 l_task_type                           NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;

--bug 2744729, 2740565
 l_estimated_start_date               DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
 l_estimated_finish_date              DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
 l_priority_code                      VARCHAR2(30) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_milestone_flag                     VARCHAR2(1) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_critical_flag                      VARCHAR2(1) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 --bug 2744729, 2740565

 l_labor_disc_reason_code                         VARCHAR2(30) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
 l_non_labor_disc_reason_code                        VARCHAR2(30) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;

  --bug 2872708
  l_retirement_cost_flag                VARCHAR2(10) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_cint_eligible_flag                  VARCHAR2(10) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ;
  l_cint_stop_date                      DATE    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  --bug 2872708

 -- FP-M Bug # 3301192
 l_pred_string               VARCHAR2(4000)       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
 l_pred_delimiter                VARCHAR2(1)      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;

--Copied Venkat's FP-M changes from load_task API to load_tasks API.
-- FP M changes begin (venkat)
  l_base_percent_comp_deriv_code VARCHAR2(150) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_sch_tool_tsk_type_code       VARCHAR2(150) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_constraint_type_code         VARCHAR2(150) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_constraint_date              DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
  l_free_slack                   NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_total_slack                  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_effort_driven_flag           VARCHAR2(1) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_level_assignments_flag       VARCHAR2(1) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_invoice_method               VARCHAR2(150) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
  l_customer_id                  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_gen_etc_source_code          VARCHAR2(150) := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
-- FP M changes end (venkat)
-- (Begin venkat) Bug #3450684 ---------------------------------------------------
  l_ext_act_duration            NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_ext_remain_duration         NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_ext_sch_duration            NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
-- (End venkat) Bug #3450684   ---------------------------------------------------
 --SMUKKA
   l_financial_task_fl          VARCHAR2(1):= PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
   l_mapped_task_id             NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
   l_mapped_task_reference      VARCHAR2(150):= PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
   l_deliverable                VARCHAR2(4000):= PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
   l_deliverable_id             NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM; -- 3661788 Added local variable

-- Progress Management Changes. Bug # 3420093.
  l_etc_effort                 NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  l_percent_complete           NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
-- Progress Management Changes. Bug # 3420093.

BEGIN

-- 4537865 : Initialize return status to success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

  -- Transferring all array variable to Global plsql table
  if (G_tasks_tbl_count = 0) then
    G_tasks_tbl_count := 1;
  end if;

  l_stage := '1';

-- hyau validating what parameters are passed in.
  if p_task_name.count = 1 and p_task_name(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_task_name_flag := 'N';
  end if;

  if p_long_task_name.count = 1 and p_long_task_name(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_long_task_name_flag := 'N';
  end if;

  if p_pa_task_number.count = 1 and p_pa_task_number(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_pa_task_number_flag := 'N';
  end if;

  if p_task_description.count = 1 and p_task_description(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_task_description_flag := 'N';
  end if;

  if p_task_start_date.count = 1 and p_task_start_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_task_start_date_flag := 'N';
  end if;

  if p_task_completion_date.count = 1 and p_task_completion_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_task_completion_date_flag := 'N';
  end if;

  if p_pm_parent_task_reference.count = 1 and p_pm_parent_task_reference(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_pm_parent_task_ref_flag := 'N';
  end if;

  if p_pa_parent_task_id.count = 1 and p_pa_parent_task_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_pa_parent_task_id_flag := 'N';
  end if;

  if p_address_id.count = 1 and p_address_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_address_id_flag := 'N';
  end if;

  if p_carrying_out_organization_id.count = 1 and p_carrying_out_organization_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_carrying_out_org_id_flag := 'N';
  end if;

  if p_service_type_code.count = 1 and p_service_type_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_service_type_code_flag := 'N';
  end if;

  if p_task_manager_person_id.count = 1 and p_task_manager_person_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_task_manager_person_id_flag := 'N';
  end if;

  if p_billable_flag.count = 1 and p_billable_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_billable_flag_flag := 'N';
  end if;

  if p_chargeable_flag.count = 1 and p_chargeable_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_chargeable_flag_flag := 'N';
  end if;

  if p_ready_to_bill_flag.count = 1 and p_ready_to_bill_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_ready_to_bill_flag_flag := 'N';
  end if;

  if p_ready_to_distribute_flag.count = 1 and p_ready_to_distribute_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_ready_to_dist_flag_flag := 'N';
  end if;

  if p_limit_to_txn_controls_flag.count = 1 and p_limit_to_txn_controls_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_limit_to_txn_cnt_flag_flag := 'N';
  end if;

  if p_labor_bill_rate_org_id.count = 1 and p_labor_bill_rate_org_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_labor_bill_rate_org_id_flag := 'N';
  end if;

  if p_labor_std_bill_rate_schdl.count = 1 and p_labor_std_bill_rate_schdl(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_labor_std_bill_rate_flag := 'N';
  end if;

  if p_labor_schedule_fixed_date.count = 1 and p_labor_schedule_fixed_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_labor_schd_fixed_date_flag := 'N';
  end if;

  if p_labor_schedule_discount.count = 1 and p_labor_schedule_discount(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_labor_schd_discount_flag := 'N';
  end if;

  if p_nl_bill_rate_org_id.count = 1 and p_nl_bill_rate_org_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_nl_bill_rate_org_id_flag := 'N';
  end if;

  if p_nl_std_bill_rate_schdl.count = 1 and p_nl_std_bill_rate_schdl(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_nl_std_bill_rate_schdl_flag := 'N';
  end if;

  if p_nl_schedule_fixed_date.count = 1 and p_nl_schedule_fixed_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_nl_schedule_fixed_date_flag := 'N';
  end if;

  if p_nl_schedule_discount.count = 1 and p_nl_schedule_discount(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_nl_schedule_discount_flag := 'N';
  end if;

  if p_labor_cost_multiplier_name.count = 1 and p_labor_cost_multiplier_name(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_labor_cost_mult_name_flag := 'N';
  end if;

  if p_cost_ind_rate_sch_id.count = 1 and p_cost_ind_rate_sch_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_cost_ind_rate_sch_id_flag := 'N';
  end if;

  if p_rev_ind_rate_sch_id.count = 1 and p_rev_ind_rate_sch_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_rev_ind_rate_sch_id_flag := 'N';
  end if;

  if p_inv_ind_rate_sch_id.count = 1 and p_inv_ind_rate_sch_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_inv_ind_rate_sch_id_flag := 'N';
  end if;

  if p_cost_ind_sch_fixed_date.count = 1 and p_cost_ind_sch_fixed_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_cost_ind_sch_fixed_date_flag := 'N';
  end if;

  if p_rev_ind_sch_fixed_date.count = 1 and p_rev_ind_sch_fixed_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_rev_ind_sch_fixed_date_flag := 'N';
  end if;

  if p_inv_ind_sch_fixed_date.count = 1 and p_inv_ind_sch_fixed_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_inv_ind_sch_fixed_date_flag := 'N';
  end if;

  if p_labor_sch_type.count = 1 and p_labor_sch_type(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_labor_sch_type_flag := 'N';
  end if;

  if p_nl_sch_type.count = 1 and p_nl_sch_type(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_nl_sch_type_flag := 'N';
  end if;

  if p_actual_start_date.count = 1 and p_actual_start_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_actual_start_date_flag := 'N';
  end if;

  if p_actual_finish_date.count = 1 and p_actual_finish_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_actual_finish_date_flag := 'N';
  end if;

  if p_early_start_date.count = 1 and p_early_start_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_early_start_date_flag := 'N';
  end if;

  if p_early_finish_date.count = 1 and p_early_finish_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_early_finish_date_flag := 'N';
  end if;

  if p_late_start_date.count = 1 and p_late_start_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_late_start_date_flag := 'N';
  end if;

  if p_late_finish_date.count = 1 and p_late_finish_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_late_finish_date_flag := 'N';
  end if;

  if p_scheduled_start_date.count = 1 and p_scheduled_start_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_scheduled_start_date_flag := 'N';
  end if;

  if p_scheduled_finish_date.count = 1 and p_scheduled_finish_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_scheduled_finish_date_flag := 'N';
  end if;

  if p_attribute_category.count = 1 and p_attribute_category(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute_category_flag := 'N';
  end if;
  if p_attribute1.count = 1 and p_attribute1(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute1_flag := 'N';
  end if;
  if p_attribute2.count = 1 and p_attribute2(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute2_flag := 'N';
  end if;
  if p_attribute3.count = 1 and p_attribute3(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute3_flag := 'N';
  end if;
  if p_attribute4.count = 1 and p_attribute4(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute4_flag := 'N';
  end if;
  if p_attribute5.count = 1 and p_attribute5(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute5_flag := 'N';
  end if;
  if p_attribute6.count = 1 and p_attribute6(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute6_flag := 'N';
  end if;
  if p_attribute7.count = 1 and p_attribute7(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute7_flag := 'N';
  end if;
  if p_attribute8.count = 1 and p_attribute8(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute8_flag := 'N';
  end if;
  if p_attribute9.count = 1 and p_attribute9(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute9_flag := 'N';
  end if;
  if p_attribute10.count = 1 and p_attribute10(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_attribute10_flag := 'N';
  end if;

  if p_allow_cross_charge_flag.count = 1 and p_allow_cross_charge_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_allow_cross_charge_flag_flag := 'N';
  end if;

  if p_project_rate_date.count = 1 and p_project_rate_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_project_rate_date_flag := 'N';
  end if;

  if p_project_rate_type.count = 1 and p_project_rate_type(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_project_rate_type_flag := 'N';
  end if;

  if p_cc_process_labor_flag.count = 1 and p_cc_process_labor_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_cc_process_labor_flag_flag := 'N';
  end if;

  if p_labor_tp_schedule_id.count = 1 and p_labor_tp_schedule_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_labor_tp_schedule_id_flag := 'N';
  end if;

  if p_labor_tp_fixed_date.count = 1 and p_labor_tp_fixed_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_labor_tp_fixed_date_flag := 'N';
  end if;

  if p_cc_process_nl_flag.count = 1 and p_cc_process_nl_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_cc_process_nl_flag_flag := 'N';
  end if;
  if p_nl_tp_schedule_id.count = 1 and p_nl_tp_schedule_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_nl_tp_schedule_id_flag := 'N';
  end if;

  if p_nl_tp_fixed_date.count = 1 and p_nl_tp_fixed_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_nl_tp_fixed_date_flag := 'N';
  end if;

  if p_receive_project_invoice_flag.count = 1 and p_receive_project_invoice_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_receive_proj_inv_flag_flag := 'N';
  end if;

  if p_work_type_id.count = 1 and p_work_type_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_work_type_id_flag := 'N';
  end if;

  if p_emp_bill_rate_schedule_id.count = 1 and p_emp_bill_rate_schedule_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_emp_bill_rate_schd_id_flag := 'N';
  end if;
  if p_job_bill_rate_schedule_id.count = 1 and p_job_bill_rate_schedule_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_job_bill_rate_schd_id_flag := 'N';
  end if;
  if p_non_lab_std_bill_rt_sch_id.count = 1 and p_non_lab_std_bill_rt_sch_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_non_lab_std_bill_rt_sch_flag := 'N';
  end if;

  if p_taskfunc_cost_rate_type.count = 1 and p_taskfunc_cost_rate_type(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_taskfunc_cost_rate_type_flag := 'N';
  end if;
  if p_taskfunc_cost_rate_date.count = 1 and p_taskfunc_cost_rate_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_taskfunc_cost_rate_date_flag := 'N';
  end if;
  if p_display_sequence.count = 1 and p_display_sequence(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_display_sequence_flag := 'N';
  end if;
  if p_wbs_level.count = 1 and p_wbs_level(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_wbs_level_flag := 'N';
  end if;

  if p_obligation_start_date.count = 1 and p_obligation_start_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_obligation_start_date_flag := 'N';
  end if;

 if p_obligation_finish_date.count = 1 and p_obligation_finish_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_obligation_finish_date_flag := 'N';
  end if;

  if p_baseline_start_date.count = 1 and p_baseline_start_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_baseline_start_date_flag := 'N';
  end if;

  if p_baseline_finish_date.count = 1 and p_baseline_finish_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_baseline_finish_date_flag := 'N';
  end if;

 if p_closed_date.count = 1 and p_closed_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_closed_date_flag := 'N';
  end if;

  if p_wq_uom_code.count = 1 and p_wq_uom_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_wq_uom_code_flag := 'N';
  end if;

  if p_wq_item_code.count = 1 and p_wq_item_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_wq_item_code_flag := 'N';
  end if;
  if p_status_code.count = 1 and p_status_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_status_code_flag := 'N';
  end if;

  if p_wf_status_code.count = 1 and p_wf_status_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_wf_status_code_flag := 'N';
  end if;

  if p_pm_source_code.count = 1 and p_pm_source_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_pm_source_code_flag := 'N';
  end if;

  if p_inc_proj_progress_flag.count = 1 and p_inc_proj_progress_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_inc_proj_progress_flag_flag := 'N';
  end if;

  if p_link_task_flag.count = 1 and p_link_task_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_link_task_flag_flag := 'N';
  end if;


  if p_calendar_id.count = 1 and p_calendar_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_calendar_id_flag := 'N';
  end if;

  if p_planned_effort.count = 1 and p_planned_effort(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_planned_effort_flag := 'N';
  end if;

  if p_planned_work_quantity.count = 1 and p_planned_work_quantity(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_planned_work_quantity_flag := 'N';
  end if;

  if p_task_type.count = 1 and p_task_type(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_task_type_flag := 'N';
  end if;

--bug 2744729, 2740565
  if p_estimated_start_date.count = 1 and p_estimated_start_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_estimated_start_date_flag := 'N';
  end if;

  if p_estimated_finish_date.count = 1 and p_estimated_finish_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_estimated_finish_date_flag := 'N';
  end if;

  if p_priority_code.count = 1 and p_priority_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_priority_code_flag := 'N';
  end if;

  if p_milestone.count = 1 and p_milestone(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_milestone_flag_flag := 'N';
  end if;

  if p_critical_flag.count = 1 and p_critical_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_critical_flag_flag := 'N';
  end if;
--bug 2744729, 2740565

  if p_labor_disc_reason_code.count = 1 and p_labor_disc_reason_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_labor_disc_reason_code_flag := 'N';
  end if;

  if p_non_labor_disc_reason_code.count = 1 and p_non_labor_disc_reason_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_nl_disc_reason_code_flag := 'N';
  end if;

--bug 2872708
  if p_retirement_cost_flag.count = 1 and p_retirement_cost_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_retirement_cost_flag_flag := 'N';
  end if;

  if p_cint_eligible_flag.count = 1 and p_cint_eligible_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_cint_eligible_flag_flag := 'N';
  end if;

  if p_cint_stop_date.count = 1 and p_cint_stop_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_cint_stop_date_flag := 'N';
  end if;
--bug 2872708

-- FP-M Bug # 3301192
  if p_pred_string.count = 1 and p_pred_string(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_pred_string_flag := 'N';
  end if;

  if p_pred_delimiter.count = 1 and p_pred_delimiter(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_pred_delimiter_flag := 'N';
  end if;

--Copied Venkat's FP-M changes from load_task API to load_tasks API.
-- FP M changes begin (venkat)

  if p_base_percent_comp_deriv_code.count = 1 and p_base_percent_comp_deriv_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_base_prct_comp_drv_code_flag := 'N';
  end if;

  if p_sch_tool_tsk_type_code.count = 1 and p_sch_tool_tsk_type_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_sch_tool_tsk_type_code_flag := 'N';
  end if;

  if p_constraint_type_code.count = 1 and p_constraint_type_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_constraint_type_code_flag := 'N';
  end if;

  if p_constraint_date.count = 1 and p_constraint_date(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE then
      l_constraint_date_flag := 'N';
  end if;

  if p_free_slack.count = 1 and p_free_slack(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_free_slack_flag := 'N';
  end if;

  if p_total_slack.count = 1 and p_total_slack(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_total_slack_flag := 'N';
  end if;

  if p_effort_driven_flag.count = 1 and p_effort_driven_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_effort_driven_flag_flag := 'N';
  end if;


  if p_level_assignments_flag.count = 1 and p_level_assignments_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_level_assignments_flag_flag := 'N';
  end if;

  if p_invoice_method.count = 1 and p_invoice_method(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_invoice_method_flag := 'N';
  end if;

  if p_customer_id.count = 1 and p_customer_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_customer_id_flag := 'N';
  end if;


  if p_gen_etc_source_code.count = 1 and p_gen_etc_source_code(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
      l_gen_etc_source_code_flag := 'N';
  end if;

-- FP M changes end (venkat)

-- (begin venkat) new params for bug #3450684 ----------------------------------------------

  if p_ext_act_duration.count = 1 and p_ext_act_duration(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_ext_act_duration_flag := 'N';
  end if;

  if p_ext_remain_duration.count = 1 and p_ext_remain_duration(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_ext_remain_duration_flag := 'N';
  end if;

  if p_ext_sch_duration.count = 1 and p_ext_sch_duration(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
      l_ext_sch_duration_flag := 'N';
  end if;

-- (End venkat) new params for bug #3450684 -------------------------------------------------
--SMukka
   if p_financial_task_flag.count = 1 and p_financial_task_flag(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
       l_financial_task_flag := 'N';
   end if;

   if p_mapped_task_id.count = 1 and p_mapped_task_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
       l_mapped_task_id_flag := 'N';
   end if;

   if p_mapped_task_reference.count = 1 and p_mapped_task_reference(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
       l_mapped_task_reference_flag := 'N';
   end if;

   -- 3661788 added condition for deliverable_id

   if p_deliverable.count = 1 and ( p_deliverable(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR and  p_deliverable_id(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) then
       l_deliverable_flag := 'N';
   end if;

   if p_etc_effort.count = 1 and p_etc_effort(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
       l_etc_effort_flag := 'N';
   end if;

   if p_percent_complete.count = 1 and p_percent_complete(1) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM then
       l_percent_complete_flag := 'N';
   end if;

--error_msg('BEFORE THE FOR LOOP ');

  FOR i in 1..1000 LOOP

    if p_pm_task_reference(i) is null then
--       G_tasks_tbl_count := i;
--       error_msg('INSIDE THE LOOP  '||G_tasks_tbl_count);
       return;
    end if;

    if l_task_name_flag = 'N' then
        l_task_name := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        /*Start of changes for bug 4024659*/

        --l_task_name := substr(p_task_name(i),1,20);

         l_task_name := substrb(p_task_name(i),1,240); -- Bug 6193314 . Changed to 240 from 20

        /*End of changes for bug 4024659*/
    end if;

    if l_long_task_name_flag = 'N' then
        l_long_task_name := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        /*Start of changes for bug 4024659*/

        --l_long_task_name := substr(p_long_task_name(i),1,240);

        l_long_task_name := substrb(p_long_task_name(i),1,240);

        /*End of changes for bug 4024659*/
    end if;

    if l_pa_task_number_flag = 'N' then
        l_pa_task_number := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_pa_task_number := substrb(p_pa_task_number(i),1,100); -- Modified for bug 6193314
    end if;

    if l_task_description_flag = 'N' then
        l_task_description := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_task_description :=  substrb(p_task_description(i),1,250); -- Fix for Bug # 4513291.
    end if;

    if l_task_start_date_flag = 'N' then
        l_task_start_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_task_start_date := p_task_start_date(i);
    end if;

    if l_task_completion_date_flag = 'N' then
        l_task_completion_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_task_completion_date := p_task_completion_date(i);
    end if;

    if l_pm_parent_task_ref_flag = 'N' then
        l_pm_parent_task_reference := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_pm_parent_task_reference := p_pm_parent_task_reference(i);
    end if;

    if l_pa_parent_task_id_flag = 'N' then
        l_pa_parent_task_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_pa_parent_task_id := p_pa_parent_task_id(i);
    end if;

    if l_address_id_flag = 'N' then
        l_address_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_address_id := p_address_id(i);
    end if;

    if l_carrying_out_org_id_flag = 'N' then
        l_carrying_out_organization_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_carrying_out_organization_id := p_carrying_out_organization_id(i);
    end if;

    if l_service_type_code_flag = 'N' then
        l_service_type_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_service_type_code := p_service_type_code(i);
    end if;

    if l_task_manager_person_id_flag = 'N' then
        l_task_manager_person_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_task_manager_person_id := p_task_manager_person_id(i);
    end if;
 -- Added NVL for bug 4737984
    if l_billable_flag_flag = 'N' then
        l_billable_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_billable_flag := NVL(p_billable_flag(i),PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR);
    end if;
 -- Added NVL for bug 4737984
    if l_chargeable_flag_flag = 'N' then
        l_chargeable_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_chargeable_flag := NVL(p_chargeable_flag(i),PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR);
    end if;

    if l_ready_to_bill_flag_flag = 'N' then
        l_ready_to_bill_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_ready_to_bill_flag := p_ready_to_bill_flag(i);
    end if;

    if l_ready_to_dist_flag_flag = 'N' then
        l_ready_to_distribute_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_ready_to_distribute_flag := p_ready_to_distribute_flag(i);
    end if;

    if l_limit_to_txn_cnt_flag_flag = 'N' then
        l_limit_to_txn_controls_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_limit_to_txn_controls_flag := p_limit_to_txn_controls_flag(i);
    end if;

    if l_labor_bill_rate_org_id_flag = 'N' then
        l_labor_bill_rate_org_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_labor_bill_rate_org_id := p_labor_bill_rate_org_id(i);
    end if;

    if l_labor_std_bill_rate_flag = 'N' then
        l_labor_std_bill_rate_schdl := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_labor_std_bill_rate_schdl := p_labor_std_bill_rate_schdl(i);
    end if;

    if l_labor_schd_fixed_date_flag = 'N' then
        l_labor_schedule_fixed_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_labor_schedule_fixed_date := p_labor_schedule_fixed_date(i);
    end if;

    if l_labor_schd_discount_flag = 'N' then
        l_labor_schedule_discount := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_labor_schedule_discount := p_labor_schedule_discount(i);
    end if;

    if l_nl_bill_rate_org_id_flag = 'N' then
        l_nl_bill_rate_org_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_nl_bill_rate_org_id := p_nl_bill_rate_org_id(i);
    end if;

    if l_nl_std_bill_rate_schdl_flag = 'N' then
        l_nl_std_bill_rate_schdl := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_nl_std_bill_rate_schdl := p_nl_std_bill_rate_schdl(i);
    end if;

    if l_nl_schedule_fixed_date_flag = 'N' then
        l_nl_schedule_fixed_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_nl_schedule_fixed_date := p_nl_schedule_fixed_date(i);
    end if;

    if l_nl_schedule_discount_flag = 'N' then
        l_nl_schedule_discount := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_nl_schedule_discount := p_nl_schedule_discount(i);
    end if;

    if l_labor_cost_mult_name_flag = 'N' then
        l_labor_cost_multiplier_name := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_labor_cost_multiplier_name := p_labor_cost_multiplier_name(i);
    end if;

    if l_cost_ind_rate_sch_id_flag = 'N' then
        l_cost_ind_rate_sch_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_cost_ind_rate_sch_id := p_cost_ind_rate_sch_id(i);
    end if;

    if l_rev_ind_rate_sch_id_flag = 'N' then
        l_rev_ind_rate_sch_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_rev_ind_rate_sch_id := p_rev_ind_rate_sch_id(i);
    end if;

    if l_inv_ind_rate_sch_id_flag = 'N' then
        l_inv_ind_rate_sch_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_inv_ind_rate_sch_id := p_inv_ind_rate_sch_id(i);
    end if;

    if l_cost_ind_sch_fixed_date_flag = 'N' then
        l_cost_ind_sch_fixed_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_cost_ind_sch_fixed_date := p_cost_ind_sch_fixed_date(i);
    end if;

    if l_rev_ind_sch_fixed_date_flag = 'N' then
        l_rev_ind_sch_fixed_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_rev_ind_sch_fixed_date := p_rev_ind_sch_fixed_date(i);
    end if;

    if l_inv_ind_sch_fixed_date_flag = 'N' then
        l_inv_ind_sch_fixed_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_inv_ind_sch_fixed_date := p_inv_ind_sch_fixed_date(i);
    end if;

    if l_labor_sch_type_flag = 'N' then
        l_labor_sch_type := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_labor_sch_type := p_labor_sch_type(i);
    end if;

    if l_nl_sch_type_flag = 'N' then
        l_nl_sch_type := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_nl_sch_type := p_nl_sch_type(i);
    end if;

    if l_actual_start_date_flag = 'N' then
        l_actual_start_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_actual_start_date := p_actual_start_date(i);
    end if;

    if l_actual_finish_date_flag = 'N' then
        l_actual_finish_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_actual_finish_date := p_actual_finish_date(i);
    end if;

    if l_early_start_date_flag = 'N' then
        l_early_start_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_early_start_date := p_early_start_date(i);
    end if;

    if l_early_finish_date_flag = 'N' then
        l_early_finish_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_early_finish_date := p_early_finish_date(i);
    end if;

    if l_late_start_date_flag = 'N' then
        l_late_start_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_late_start_date := p_late_start_date(i);
    end if;

    if l_late_finish_date_flag = 'N' then
        l_late_finish_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_late_finish_date := p_late_finish_date(i);
    end if;

    if l_scheduled_start_date_flag = 'N' then
        l_scheduled_start_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_scheduled_start_date := p_scheduled_start_date(i);
    end if;

    if l_scheduled_finish_date_flag = 'N' then
        l_scheduled_finish_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_scheduled_finish_date := p_scheduled_finish_date(i);
    end if;

    if l_attribute_category_flag = 'N' then
        l_attribute_category := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute_category := p_attribute_category(i);
    end if;

    if l_attribute1_flag = 'N' then
        l_attribute1 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute1 := p_attribute1(i);
    end if;

    if l_attribute2_flag = 'N' then
        l_attribute2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute2 := p_attribute2(i);
    end if;

    if l_attribute3_flag = 'N' then
        l_attribute3 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute3 := p_attribute3(i);
    end if;

    if l_attribute4_flag = 'N' then
        l_attribute4 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute4 := p_attribute4(i);
    end if;

    if l_attribute5_flag = 'N' then
        l_attribute5 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute5 := p_attribute5(i);
    end if;

    if l_attribute6_flag = 'N' then
        l_attribute6 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute6 := p_attribute6(i);
    end if;

    if l_attribute7_flag = 'N' then
        l_attribute7 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute7 := p_attribute7(i);
    end if;

    if l_attribute8_flag = 'N' then
        l_attribute8 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute8 := p_attribute8(i);
    end if;

    if l_attribute9_flag = 'N' then
        l_attribute9 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute9 := p_attribute9(i);
    end if;

    if l_attribute10_flag = 'N' then
        l_attribute10 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_attribute10 := p_attribute10(i);
    end if;

    if l_allow_cross_charge_flag_flag = 'N' then
        l_allow_cross_charge_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_allow_cross_charge_flag := p_allow_cross_charge_flag(i);
    end if;

    if l_project_rate_date_flag = 'N' then
        l_project_rate_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_project_rate_date := p_project_rate_date(i);
    end if;

    if l_project_rate_type_flag = 'N' then
        l_project_rate_type := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_project_rate_type := p_project_rate_type(i);
    end if;

    if l_allow_cross_charge_flag_flag = 'N' then
        l_allow_cross_charge_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_allow_cross_charge_flag := p_allow_cross_charge_flag(i);
    end if;

    if l_cc_process_labor_flag_flag = 'N' then
        l_cc_process_labor_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_cc_process_labor_flag := p_cc_process_labor_flag(i);
    end if;

    if l_labor_tp_schedule_id_flag = 'N' then
        l_labor_tp_schedule_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_labor_tp_schedule_id := p_labor_tp_schedule_id(i);
    end if;

    if l_labor_tp_fixed_date_flag = 'N' then
        l_labor_tp_fixed_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_labor_tp_fixed_date := p_labor_tp_fixed_date(i);
    end if;

    if l_cc_process_nl_flag_flag = 'N' then
        l_cc_process_nl_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_cc_process_nl_flag := p_cc_process_nl_flag(i);
    end if;

    if l_nl_tp_schedule_id_flag = 'N' then
        l_nl_tp_schedule_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_nl_tp_schedule_id := p_nl_tp_schedule_id(i);
    end if;

    if l_nl_tp_fixed_date_flag = 'N' then
        l_nl_tp_fixed_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_nl_tp_fixed_date := p_nl_tp_fixed_date(i);
    end if;

    if l_receive_proj_inv_flag_flag = 'N' then
        l_receive_project_invoice_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_receive_project_invoice_flag := p_receive_project_invoice_flag(i);
    end if;

    if l_work_type_id_flag = 'N' then
        l_work_type_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_work_type_id := p_work_type_id(i);
    end if;

    if l_emp_bill_rate_schd_id_flag = 'N' then
        l_emp_bill_rate_schedule_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_emp_bill_rate_schedule_id := p_emp_bill_rate_schedule_id(i);
    end if;

    if l_job_bill_rate_schd_id_flag = 'N' then
        l_job_bill_rate_schedule_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_job_bill_rate_schedule_id := p_job_bill_rate_schedule_id(i);
    end if;

    if l_non_lab_std_bill_rt_sch_flag = 'N' then
        l_non_lab_std_bill_rt_sch_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_non_lab_std_bill_rt_sch_id := p_non_lab_std_bill_rt_sch_id(i);
    end if;

    if l_taskfunc_cost_rate_type_flag = 'N' then
        l_taskfunc_cost_rate_type := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
        l_taskfunc_cost_rate_type := p_taskfunc_cost_rate_type(i);
    end if;

    if l_taskfunc_cost_rate_date_flag = 'N' then
        l_taskfunc_cost_rate_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
        l_taskfunc_cost_rate_date := p_taskfunc_cost_rate_date(i);
    end if;

    if l_display_sequence_flag = 'N' then
        l_display_sequence := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_display_sequence := p_display_sequence(i);
    end if;

    if l_wbs_level_flag = 'N' then
        l_wbs_level := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_wbs_level := p_wbs_level(i);
    end if;

    if l_obligation_start_date_flag = 'N' then
       l_obligation_start_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
       l_obligation_start_date := p_obligation_start_date(i);
    end if;

    if l_obligation_finish_date_flag = 'N' then
       l_obligation_finish_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
       l_obligation_finish_date := p_obligation_finish_date(i);
    end if;


    if l_baseline_start_date_flag = 'N' then
       l_baseline_start_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
       l_baseline_start_date := p_baseline_start_date(i);
    end if;

    if l_baseline_finish_date_flag = 'N' then
       l_baseline_finish_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
       l_baseline_finish_date := p_baseline_finish_date(i);
    end if;

    if l_closed_date_flag = 'N' then
       l_closed_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
       l_closed_date := p_closed_date(i);
    end if;

    if l_wq_uom_code_flag = 'N' then
       l_wq_uom_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_wq_uom_code := p_wq_uom_code(i);
    end if;

    if l_wq_item_code_flag = 'N' then
       l_wq_item_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_wq_item_code := p_wq_item_code(i);
    end if;

    if l_status_code_flag = 'N' then
       l_status_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_status_code := p_status_code(i);
    end if;


    if l_wf_status_code_flag = 'N' then
       l_wf_status_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_wf_status_code := p_wf_status_code(i);
    end if;

    if l_pm_source_code_flag = 'N' then
       l_pm_source_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_pm_source_code := p_pm_source_code(i);
    end if;


    if l_inc_proj_progress_flag_flag = 'N' then
       l_inc_proj_progress_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_inc_proj_progress_flag := p_inc_proj_progress_flag(i);
    end if;

    if l_link_task_flag_flag = 'N' then
       l_link_task_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_link_task_flag := p_link_task_flag(i);
    end if;

    if l_calendar_id_flag = 'N' then
        l_calendar_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_calendar_id := p_calendar_id(i);
    end if;

    if l_planned_effort_flag = 'N' then
        l_planned_effort := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_planned_effort := p_planned_effort(i);
    end if;

    if l_planned_work_quantity_flag = 'N' then
        l_planned_work_quantity := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
        l_planned_work_quantity := p_planned_work_quantity(i);
    end if;


    if l_task_type_flag = 'N' then
       l_task_type := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
       l_task_type := p_task_type(i);
    end if;

--bug 2744729, 2740565
    if l_estimated_start_date_flag = 'N' then
       l_estimated_start_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
       l_estimated_start_date := p_estimated_start_date(i);
    end if;

    if l_estimated_finish_date_flag = 'N' then
       l_estimated_finish_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
       l_estimated_finish_date := p_estimated_finish_date(i);
    end if;

    if l_critical_flag_flag = 'N' then
       l_critical_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_critical_flag := p_critical_flag(i);
    end if;

    if l_milestone_flag_flag = 'N' then
       l_milestone_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_milestone_flag := p_milestone(i);
    end if;

    if l_priority_code_flag = 'N' then
       l_priority_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_priority_code := p_priority_code(i);
    end if;
--bug 2744729, 2740565

    if l_labor_disc_reason_code_flag = 'N' then
       l_labor_disc_reason_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_labor_disc_reason_code := p_labor_disc_reason_code(i);
    end if;

    if l_nl_disc_reason_code_flag = 'N' then
       l_non_labor_disc_reason_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_non_labor_disc_reason_code := p_non_labor_disc_reason_code(i);
    end if;

--bug 2872708
    if l_retirement_cost_flag_flag = 'N' then
       l_retirement_cost_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_retirement_cost_flag := p_retirement_cost_flag(i);
    end if;

    if l_cint_eligible_flag_flag = 'N' then
       l_cint_eligible_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_cint_eligible_flag := p_cint_eligible_flag(i);
    end if;

    if l_cint_stop_date_flag = 'N' then
       l_cint_stop_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
       l_cint_stop_date := p_cint_stop_date(i);
    end if;
--bug 2872708

-- FP-M Bug # 3301192
    if l_pred_string_flag = 'N' then
       l_pred_string := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_pred_string := p_pred_string(i);
    end if;

    if l_pred_delimiter_flag = 'N' then
       l_pred_delimiter := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_pred_delimiter := p_pred_delimiter(i);
    end if;

--Copied Venkat's FP-M changes from load_task API to load_tasks API.
-- FP M changes begin (venkat)

    if l_base_prct_comp_drv_code_flag = 'N' then
       l_base_percent_comp_deriv_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_base_percent_comp_deriv_code := p_base_percent_comp_deriv_code(i);
    end if;

    if l_sch_tool_tsk_type_code_flag = 'N' then
       l_sch_tool_tsk_type_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_sch_tool_tsk_type_code := p_sch_tool_tsk_type_code(i);
    end if;

    if l_constraint_type_code_flag = 'N' then
       l_constraint_type_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_constraint_type_code := p_constraint_type_code(i);
    end if;


    if l_constraint_date_flag = 'N' then
       l_constraint_date := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE;
    else
       l_constraint_date := p_constraint_date(i);
    end if;


    if l_free_slack_flag = 'N' then
       l_free_slack := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
       l_free_slack := p_free_slack(i);
    end if;


    if l_total_slack_flag = 'N' then
       l_total_slack := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
       l_total_slack := p_total_slack(i);
    end if;

    if l_effort_driven_flag_flag = 'N' then
       l_effort_driven_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_effort_driven_flag := p_effort_driven_flag(i);
    end if;


    if l_level_assignments_flag_flag = 'N' then
       l_level_assignments_flag := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_level_assignments_flag := p_level_assignments_flag(i);
    end if;


    if l_invoice_method_flag = 'N' then
       l_invoice_method := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_invoice_method := p_invoice_method(i);
    end if;


    if l_customer_id_flag = 'N' then
       l_customer_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
       l_customer_id := p_customer_id(i);
    end if;

    if l_gen_etc_source_code_flag = 'N' then
       l_gen_etc_source_code := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
    else
       l_gen_etc_source_code := p_gen_etc_source_code(i);
    end if;

-- FP M changes end (venkat)

-- (begin venkat) new params for bug #3450684 ----------------------------------------------

    if l_ext_act_duration_flag = 'N' then
         l_ext_act_duration := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
         l_ext_act_duration := p_ext_act_duration(i);
    end if;

    if l_ext_remain_duration_flag = 'N' then
         l_ext_remain_duration := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
         l_ext_remain_duration := p_ext_remain_duration(i);
    end if;

    if l_ext_sch_duration_flag = 'N' then
         l_ext_sch_duration := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
    else
         l_ext_sch_duration := p_ext_sch_duration(i);
    end if;

-- (end venkat) new params for bug #3450684 ----------------------------------------------
--SMukka
        -- 3661788 added code for l_deliverable_id

        if l_deliverable_flag = 'N' then
                 l_deliverable := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
                 l_deliverable_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
        else
                 l_deliverable := p_deliverable(i);
                 l_deliverable_id := p_deliverable_id(i);
        end if;

        if l_financial_task_flag = 'N' then
                 l_financial_task_fl := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
        else
                 l_financial_task_fl := p_financial_task_flag(i);
        end if;

        if l_mapped_task_id_flag = 'N' then
                 l_mapped_task_id := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
        else
                 l_mapped_task_id := p_mapped_task_id(i);
        end if;

        if l_mapped_task_reference_flag = 'N' then
                 l_mapped_task_reference := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR;
        else
                 l_mapped_task_reference := p_mapped_task_reference(i);
        end if;

-- Progress Management Changes. Bug # 3420093.

  if l_etc_effort_flag = 'N' then
                 l_etc_effort := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  else
                 l_etc_effort := p_etc_effort(i);
  end if;

  if l_percent_complete_flag = 'N' then
                 l_percent_complete := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM;
  else
                 l_percent_complete := p_percent_complete(i);
  end if;

-- Progress Management Changes. Bug # 3420093.


    PA_PROJECT_PUB.load_task (
     p_api_version_number         => G_API_VERSION_NUMBER
    ,p_init_msg_list          => p_init_msg_list
    ,p_return_status             => l_return_status
    ,p_pm_task_reference         => p_pm_task_reference(i)
    ,p_pa_task_id               => p_pa_task_id(i)
    ,p_task_name               => l_task_name
    ,p_long_task_name               => l_long_task_name
    ,p_pa_task_number             => l_pa_task_number
    ,p_task_description            => l_task_description
    ,p_task_start_date             => l_task_start_date
    ,p_task_completion_date       => l_task_completion_date
    ,p_scheduled_start_date        => l_scheduled_start_date
    ,p_scheduled_finish_date        => l_scheduled_finish_date
    ,p_display_sequence             => l_display_sequence
    ,p_wbs_level                    => l_wbs_level
    ,p_pm_parent_task_reference      => l_pm_parent_task_reference
    ,p_pa_parent_task_id        => l_pa_parent_task_id
    ,p_address_id              => l_address_id
    ,p_carrying_out_organization_id  => l_carrying_out_organization_id
    ,p_service_type_code            => l_service_type_code
    ,p_task_manager_person_id      => l_task_manager_person_id
    ,p_billable_flag                => l_billable_flag
    ,p_chargeable_flag           => l_chargeable_flag
    ,p_ready_to_bill_flag        => l_ready_to_bill_flag
    ,p_ready_to_distribute_flag    => l_ready_to_distribute_flag
    ,p_limit_to_txn_controls_flag  => l_limit_to_txn_controls_flag
    ,p_labor_bill_rate_org_id    => l_labor_bill_rate_org_id
    ,p_labor_std_bill_rate_schdl  => l_labor_std_bill_rate_schdl
    ,p_labor_schedule_fixed_date  => l_labor_schedule_fixed_date
    ,p_labor_schedule_discount    => l_labor_schedule_discount
    ,p_nl_bill_rate_org_id        => l_nl_bill_rate_org_id
    ,p_nl_std_bill_rate_schdl    => l_nl_std_bill_rate_schdl
    ,p_nl_schedule_fixed_date    => l_nl_schedule_fixed_date
    ,p_nl_schedule_discount        => l_nl_schedule_discount
    ,p_labor_cost_multiplier_name  => l_labor_cost_multiplier_name
    ,p_cost_ind_rate_sch_id        => l_cost_ind_rate_sch_id
    ,p_rev_ind_rate_sch_id        => l_rev_ind_rate_sch_id
    ,p_inv_ind_rate_sch_id        => l_inv_ind_rate_sch_id
    ,p_cost_ind_sch_fixed_date    => l_cost_ind_sch_fixed_date
    ,p_rev_ind_sch_fixed_date    => l_rev_ind_sch_fixed_date
    ,p_inv_ind_sch_fixed_date    => l_inv_ind_sch_fixed_date
    ,p_labor_sch_type          => l_labor_sch_type
    ,p_nl_sch_type              => l_nl_sch_type
    ,p_actual_start_date        => l_actual_start_date
    ,p_actual_finish_date        => l_actual_finish_date
    ,p_early_start_date         => l_early_start_date
    ,p_early_finish_date         => l_early_finish_date
    ,p_late_start_date             => l_late_start_date
    ,p_late_finish_date         => l_late_finish_date
    ,p_attribute_category            => l_attribute_category
    ,p_attribute1              => l_attribute1
    ,p_attribute2              => l_attribute2
    ,p_attribute3              => l_attribute3
    ,p_attribute4              => l_attribute4
    ,p_attribute5              => l_attribute5
    ,p_attribute6              => l_attribute6
    ,p_attribute7              => l_attribute7
    ,p_attribute8              => l_attribute8
    ,p_attribute9              => l_attribute9
    ,p_attribute10              => l_attribute10
    ,p_allow_cross_charge_flag    => l_allow_cross_charge_flag
    ,p_project_rate_date        => l_project_rate_date
    ,p_project_rate_type        => l_project_rate_type
    ,p_cc_process_labor_flag    => l_cc_process_labor_flag
    ,p_labor_tp_schedule_id        => l_labor_tp_schedule_id
    ,p_labor_tp_fixed_date        => l_labor_tp_fixed_date
    ,p_cc_process_nl_flag        => l_cc_process_nl_flag
    ,p_nl_tp_schedule_id        => l_nl_tp_schedule_id
    ,p_nl_tp_fixed_date          => l_nl_tp_fixed_date
    ,p_receive_project_invoice_flag  => l_receive_project_invoice_flag
    ,p_work_type_id              => l_work_type_id
    ,p_emp_bill_rate_schedule_id  => l_emp_bill_rate_schedule_id
    ,p_job_bill_rate_schedule_id  => l_job_bill_rate_schedule_id
    ,p_non_lab_std_bill_rt_sch_id  => l_non_lab_std_bill_rt_sch_id
    ,p_taskfunc_cost_rate_type    => l_taskfunc_cost_rate_type
    ,p_taskfunc_cost_rate_date    => l_taskfunc_cost_rate_date
    ,P_OBLIGATION_START_DATE    => l_obligation_start_date
    ,P_OBLIGATION_FINISH_DATE   => l_obligation_finish_date
    ,P_BASELINE_START_DATE      => l_baseline_start_date
    ,P_BASELINE_FINISH_DATE     => l_baseline_finish_date
    ,P_CLOSED_DATE              => l_closed_date
    ,P_WQ_UOM_CODE              => l_wq_uom_code
    ,P_WQ_ITEM_CODE             => l_wq_item_code
    ,P_STATUS_CODE              => l_status_code
    ,P_WF_STATUS_CODE           => l_wf_status_code
    ,P_PM_SOURCE_CODE           => l_pm_source_code
    ,P_INC_PROJ_PROGRESS_FLAG   => l_inc_proj_progress_flag
    ,P_LINK_TASK_FLAG           => l_link_task_flag
    ,P_CALENDAR_ID              => l_calendar_id
    ,P_PLANNED_EFFORT           => l_planned_effort
    ,P_PLANNED_WORK_QUANTITY    => l_planned_work_quantity
    ,P_TASK_TYPE                => l_task_type
--bug 2744729, 2740565
    ,P_estimated_start_date     => l_estimated_start_date
    ,P_estimated_finish_date    => l_estimated_start_date
    ,P_milestone_flag           => l_milestone_flag
    ,P_critical_flag            => l_critical_flag
    ,P_priority_code            => l_priority_code
--bug 2744729, 2740565
    ,P_labor_disc_reason_code                => l_labor_disc_reason_code
    ,P_non_labor_disc_reason_code            => l_non_labor_disc_reason_code
--bug 2872708
    ,p_retirement_cost_flag     => l_retirement_cost_flag
    ,p_cint_eligible_flag       => l_cint_eligible_flag
    ,p_cint_stop_date           => l_cint_stop_date
--bug 2872708
-- FP-M Bug # 3301192
    ,p_pred_string              => l_pred_string
    ,p_pred_delimiter           => l_pred_delimiter
--Copied Venkat's FP-M changes from load_task API to load_tasks API.
-- FP M changes begin (venkat)
    ,p_base_percent_comp_deriv_code =>  l_base_percent_comp_deriv_code
    ,p_sch_tool_tsk_type_code       =>  l_sch_tool_tsk_type_code
    ,p_constraint_type_code     =>  l_constraint_type_code
    ,p_constraint_date          =>  l_constraint_date
    ,p_free_slack           =>  l_free_slack
    ,p_total_slack          =>  l_total_slack
    ,p_effort_driven_flag       =>  l_effort_driven_flag
    ,p_level_assignments_flag       =>  l_level_assignments_flag
    ,p_invoice_method           =>  l_invoice_method
    ,p_customer_id          =>  l_customer_id
    ,p_gen_etc_source_code      =>  l_gen_etc_source_code
-- FP M changes end (venkat)
   --SMukka
    ,p_financial_task_flag        =>     l_financial_task_fl
    ,p_mapped_task_id             =>     l_mapped_task_id
    ,p_mapped_task_reference      =>     l_mapped_task_reference
    ,p_deliverable                =>     l_deliverable
    ,p_deliverable_id             =>     l_deliverable_id  -- 3661788 Passing added deliverable_id to load_task
-- (begin venkat) new params for bug #3450684 ----------------------------------------------
    ,p_ext_act_duration         => l_ext_act_duration
    ,p_ext_remain_duration      => l_ext_remain_duration
    ,p_ext_sch_duration         => l_ext_sch_duration
-- (end venkat) new params for bug #3450684 ----------------------------------------------

-- Progress Management Changes. Bug # 3420093.
  ,p_etc_effort                 =>      l_etc_effort
  ,p_percent_complete           =>      l_percent_complete
-- Progress Management Changes. Bug # 3420093.

    );

    l_stage := '1.4';

    if (l_return_status <> 'S') then
       p_return_status := l_return_status;
       return;
    end if;

  END LOOP;

  p_return_status := l_return_status;

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'load_tasks');
        END IF;

END load_tasks;


PROCEDURE fetch_tasks
( p_api_version_number    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_return_status    OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_task_index      IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
 ,p_pa_task_id      OUT  NOCOPY PA_NUM_1000_NUM  /*Added the nocopy check for 4537865 */
 ,p_task_version_id             OUT  NOCOPY   PA_NUM_1000_NUM  /*Added the nocopy check for 4537865 */
 ,p_pm_task_reference    OUT NOCOPY PA_VC_1000_150  /*Added the nocopy check for 4537865 */
 ,p_task_return_status    OUT  NOCOPY PA_VC_1000_150  /*Added the nocopy check for 4537865 */
)
IS

l_return_status                     VARCHAR2(1):= 'S';
l_pm_task_reference                 PA_VC_1000_150 := PA_VC_1000_150(1);
l_task_return_status                PA_VC_1000_150 := PA_VC_1000_150(1);
l_pa_task_id                        PA_NUM_1000_NUM := PA_NUM_1000_NUM(1);
--project structrues
l_task_version_id                   PA_NUM_1000_NUM := PA_NUM_1000_NUM(1);
--project structures
BEGIN

    l_pm_task_reference.extend(1000);
    l_task_return_status.extend(1000);
    l_pa_task_id.extend(1000);
--project structrues
    l_task_version_id.extend(1000);
--project structrues

    FOR i in 1..1000 LOOP

       if p_task_index(i) is null or p_task_index(i) = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  then
          p_return_status := l_return_status;
    p_pm_task_reference := l_pm_task_reference;
    p_task_return_status := l_task_return_status;
    p_pa_task_id := l_pa_task_id;
          return;
       end if;

       fetch_task( p_api_version_number  => p_api_version_number
      ,p_init_msg_list => p_init_msg_list
      ,p_return_status => l_return_status
      ,p_task_index => p_task_index(i)
      ,p_pa_task_id => l_pa_task_id(i)
      ,p_pm_task_reference => l_pm_task_reference(i)
       ,p_task_return_status  => l_task_return_status(i));

    if (l_return_status <> 'S') then
          p_return_status := l_return_status;
    p_pm_task_reference := l_pm_task_reference;
    p_task_return_status := l_task_return_status;
    p_pa_task_id := l_pa_task_id;
          return;
     end if;


       fetch_task_version( p_api_version_number  => p_api_version_number
      ,p_init_msg_list => p_init_msg_list
      ,p_return_status => l_return_status
      ,p_task_index => p_task_index(i)
      ,p_task_version_id => l_task_version_id(i)
       ,p_task_return_status  => l_task_return_status(i));

    if (l_return_status <> 'S') then
          p_return_status := l_return_status;
    p_pm_task_reference := l_pm_task_reference;
    p_task_return_status := l_task_return_status;
    p_pa_task_id := l_pa_task_id;
          return;
     end if;

    END LOOP;

    p_return_status := l_return_status;
    p_pm_task_reference := l_pm_task_reference;
    p_task_return_status := l_task_return_status;
    p_pa_task_id := l_pa_task_id;

--project structrues
    p_task_version_id := l_task_version_id;
--project structrues

-- 4537865
EXCEPTION

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

    p_pm_task_reference := NULL ;
    p_pa_task_id := NULL ;
    p_task_version_id := NULL ;

        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
               FND_MSG_PUB.add_exc_msg
               ( p_pkg_name            => G_PKG_NAME
               , p_procedure_name      => 'fetch_tasks');
        END IF;

END fetch_tasks;
-- <EA>
--------------------------------------------------------------------------------
--Name:        LOAD_EXTENSIBLE_ATTRIBUTE
--Type:        Procedure
--Description: This procedure can be used to move an extensible attribute value
--            from the client side to a PL/SQL table on the server side,
--             where it will be used by a LOAD/EXECUTE/FETCH cycle.
--
--Called subprograms:
--
--History:
--    16-APR-2003    zahid.khan  Initial creation
--

PROCEDURE load_extensible_attribute(P_API_VERSION_NUMBER     IN     NUMBER   := 1.0,
                                    P_INIT_MSG_LIST          IN     VARCHAR2 := FND_API.G_FALSE,
                                    P_COMMIT                 IN     VARCHAR2 := FND_API.G_FALSE,
                                    X_RETURN_STATUS             OUT NOCOPY VARCHAR2,  /*Added the nocopy check for 4537865 */
                                    P_TRANSACTION_TYPE       IN     VARCHAR2 := PA_PROJECT_PUB.G_SYNC_MODE,
                        P_TASK_ID                IN     NUMBER   := NULL,
                                    P_TASK_REFERENCE         IN     VARCHAR2 := NULL,
                                    P_ATTR_GRP_INTERNAL_NAME IN     VARCHAR2 := NULL,
                                    P_ATTR_GRP_ID            IN     NUMBER   := NULL,
                                    P_ATTR_GRP_ROW_INDEX     IN     NUMBER   := NULL,
                                    P_ATTR_INTERNAL_NAME     IN     VARCHAR2 := NULL,
                                    P_ATTR_VALUE_STR         IN     VARCHAR2 := NULL,
                                    P_ATTR_VALUE_NUM         IN     NUMBER   := NULL,
                                    P_ATTR_VALUE_NUM_UOM     IN     VARCHAR2 := NULL,
                                    P_ATTR_VALUE_DATE        IN     DATE     := NULL,
                                    P_ATTR_DISP_VALUE        IN     VARCHAR2 := NULL
                                    )

IS

   l_api_name           CONSTANT    VARCHAR2(30)        := 'Load_Extensible_Attribute';
   i                        NUMBER;

BEGIN
--  Standard begin of API savepoint

    SAVEPOINT load_extensible_attribute_pub;

--  Standard call to check for call compatibility.
    IF NOT FND_API.Compatible_API_Call (  g_api_version_number  ,
                                                p_api_version_number    ,
                                                    l_api_name,
                                                    G_PKG_NAME)
    THEN
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

--  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN
      FND_MSG_PUB.initialize;
    END IF;

--  assign a value to the global counter for this table
   G_ext_attr_tbl_count   := G_ext_attr_tbl_count + 1;

   G_ext_attr_in_tbl(G_ext_attr_tbl_count).PROJ_ELEMENT_ID     := P_TASK_ID;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).PROJ_ELEMENT_REFERENCE := P_TASK_REFERENCE;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).ROW_IDENTIFIER      := P_ATTR_GRP_ROW_INDEX;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).ATTR_GROUP_INT_NAME := P_ATTR_GRP_INTERNAL_NAME;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).ATTR_GROUP_ID       := P_ATTR_GRP_ID;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).ATTR_INT_NAME       := P_ATTR_INTERNAL_NAME;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).ATTR_VALUE_STR      := P_ATTR_VALUE_STR;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).ATTR_VALUE_NUM      := P_ATTR_VALUE_NUM;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).ATTR_VALUE_DATE     := P_ATTR_VALUE_DATE;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).ATTR_DISP_VALUE     := P_ATTR_DISP_VALUE;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).ATTR_UNIT_OF_MEASURE:= P_ATTR_VALUE_NUM_UOM;
   G_ext_attr_in_tbl(G_ext_attr_tbl_count).TRANSACTION_TYPE    := P_TRANSACTION_TYPE;

--  Set API return status to success
   x_return_status := FND_API.G_RET_STS_SUCCESS;

EXCEPTION

    WHEN FND_API.G_EXC_ERROR
    THEN
    ROLLBACK TO load_extensible_attribute_pub;

    x_return_status := FND_API.G_RET_STS_ERROR;

    WHEN FND_API.G_EXC_UNEXPECTED_ERROR
    THEN
    ROLLBACK TO load_extensible_attribute_pub;

    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

    WHEN OTHERS THEN
    ROLLBACK TO load_extensible_attribute_pub;

    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

    IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
    THEN
        FND_MSG_PUB.add_exc_msg
                ( p_pkg_name        => G_PKG_NAME
                , p_procedure_name  => l_api_name   );

    END IF;

END load_extensible_attribute;

--------------------------------------------------------------------------------
--Name:        LOAD_EXTENSIBLE_ATTRIBUTES
--Type:        Procedure
--Description: This procedure can be used to bulk-load extensible attribute
--             information into the global pl/sql table in batch of thousand
--             records.
--
--Called subprograms: LOAD_EXTENSIBLE_ATTRIBUTE
--
--History:
--    22-APR-2003    zahid.khan  Initial creation
--
PROCEDURE load_extensible_attributes(P_API_VERSION_NUMBER     IN     NUMBER,
                                     P_INIT_MSG_LIST          IN     VARCHAR2          := FND_API.G_FALSE,
                                     P_COMMIT                 IN     VARCHAR2          := FND_API.G_FALSE,
                                     X_RETURN_STATUS          OUT NOCOPY   VARCHAR2,  /*Added the nocopy check for 4537865 */
                                     P_TRANSACTION_TYPE       IN     PA_VC_1000_10     := PA_VC_1000_10(PA_PROJECT_PUB.G_SYNC_MODE),
                                     P_TASK_ID        IN     PA_NUM_1000_NUM   := PA_NUM_1000_NUM(NULL),
                                     P_TASK_REFERENCE IN     PA_VC_1000_150    := PA_VC_1000_150(NULL),
                                     P_ATTR_GRP_INTERNAL_NAME    IN     PA_VC_1000_30     := PA_VC_1000_30(NULL),
                                     P_ATTR_GRP_ID          IN     PA_NUM_1000_NUM   := PA_NUM_1000_NUM(NULL),
                                     P_ATTR_GRP_ROW_INDEX          IN     PA_NUM_1000_NUM   := PA_NUM_1000_NUM(NULL),
                                     P_ATTR_INTERNAL_NAME          IN     PA_VC_1000_30     := PA_VC_1000_30(NULL),
                                     P_ATTR_VALUE_STR         IN     PA_VC_1000_150    := PA_VC_1000_150(NULL),
                                     P_ATTR_VALUE_NUM         IN     PA_NUM_1000_NUM   := PA_NUM_1000_NUM(NULL),
                                     P_ATTR_VALUE_NUM_UOM   IN     PA_VC_1000_30     := PA_VC_1000_30(NULL),
                                     P_ATTR_VALUE_DATE        IN     PA_DATE_1000_DATE := PA_DATE_1000_DATE(NULL),
                                     P_ATTR_DISP_VALUE        IN     PA_VC_1000_150    := PA_VC_1000_150(NULL)
                         )
IS
   l_api_name           CONSTANT    VARCHAR2(30)        := 'Load_Extensible_Attributes';
   l_return_status VARCHAR(1) := FND_API.G_RET_STS_SUCCESS;

   l_proj_element_id_flag         BOOLEAN := (P_TASK_ID.count = 1 and P_TASK_ID(1) = NULL);
   l_proj_element_reference_flag BOOLEAN := (P_TASK_REFERENCE.count = 1 and P_TASK_REFERENCE(1) = NULL);
   l_row_identifier_flag          BOOLEAN := (P_ATTR_GRP_ROW_INDEX.count = 1 and P_ATTR_GRP_ROW_INDEX(1) = NULL);
   l_attr_group_int_name_flag    BOOLEAN := (P_ATTR_GRP_INTERNAL_NAME.count = 1 and P_ATTR_GRP_INTERNAL_NAME(1) = NULL);
   l_attr_group_id_flag          BOOLEAN := (P_ATTR_GRP_ID.count = 1 and P_ATTR_GRP_ID(1) = NULL);
   l_attr_int_name_flag          BOOLEAN := (P_ATTR_INTERNAL_NAME.count = 1 and P_ATTR_INTERNAL_NAME(1) = NULL);
   l_attr_value_str_flag          BOOLEAN := (P_ATTR_VALUE_STR.count = 1 and P_ATTR_VALUE_STR(1) = NULL);
   l_attr_value_num_flag          BOOLEAN := (P_ATTR_VALUE_NUM.count = 1 and P_ATTR_VALUE_NUM(1) = NULL);
   l_attr_value_date_flag         BOOLEAN := (P_ATTR_VALUE_DATE.count = 1 and P_ATTR_VALUE_DATE(1) = NULL);
   l_attr_disp_value_flag         BOOLEAN := (P_ATTR_DISP_VALUE.count = 1 and P_ATTR_DISP_VALUE(1) = NULL);
   l_attr_unit_of_measure_flag   BOOLEAN := (P_ATTR_VALUE_NUM_UOM.count = 1 and P_ATTR_VALUE_NUM_UOM(1) = NULL);
   l_transaction_type_flag     BOOLEAN := (P_TRANSACTION_TYPE.count = 1 and P_TRANSACTION_TYPE(1) = PA_PROJECT_PUB.G_SYNC_MODE);

   l_proj_element_id              NUMBER;
   l_proj_element_reference      VARCHAR2(30);
   l_attr_group_int_name         VARCHAR2(30);
   l_attr_group_id               NUMBER;
   l_attr_int_name               VARCHAR2(30);
   l_attr_value_str               VARCHAR2(150);
   l_attr_value_num               NUMBER;
   l_attr_value_date              DATE;
   l_attr_disp_value             VARCHAR2(150);
   l_attr_unit_of_measure        VARCHAR2(30);
   l_user_row_identifier         VARCHAR2(150);
   l_transaction_type          VARCHAR2(30);
BEGIN
   -- initialize message stack, if needed
    IF  FND_API.to_boolean(p_init_msg_list)
    THEN
        FND_MSG_PUB.initialize;
    END IF;

   -- There are two ways to load the global pl/sql table:
   -- 1. Call Load_Extensible_Attribute
   -- 2. Directly populate the table
   -- We will use approach 1.
   FOR i in 1..1000 LOOP
      -- increment global table record counter
      G_ext_attr_tbl_count  := G_ext_attr_tbl_count + 1;

      -- if Row Identifier is NULL, that means there were
      -- fewer than 1000 rows and we're done processing
      IF(P_ATTR_GRP_ROW_INDEX(i) IS NULL) THEN
         return;
      END IF;

      -- default parameter values if they were not bound
      -- by caller. This needs to be done because
      -- there is no way to default the entire
      -- array contents to NULL via the procedure
      -- declaration. For e.g., using the syntax
      -- 'P_ATTR_UNIT_OF_MEASURE  IN PA_VC_1000_30 := PA_VC_1000_30(NULL)'
      -- only sets the first array cell to the
      -- value NULL
      if (l_proj_element_id_flag <> TRUE) then
         l_proj_element_id := P_TASK_ID(i);
      else
         l_proj_element_id := NULL;
      end if;

      if (l_proj_element_reference_flag <> TRUE) then
         l_proj_element_reference := P_TASK_REFERENCE(i);
      else
         l_proj_element_reference := NULL;
      end if;

      if (l_attr_group_int_name_flag <> TRUE) then
         l_attr_group_int_name := P_ATTR_GRP_INTERNAL_NAME(i);
      else
         l_attr_group_int_name := NULL;
      end if;

      if (l_attr_group_id_flag <> TRUE) then
         l_attr_group_id := P_ATTR_GRP_ID(i);
      else
         l_attr_group_id := NULL;
      end if;

      if (l_attr_int_name_flag <> TRUE) then
         l_attr_int_name := P_ATTR_INTERNAL_NAME(i);
      else
         l_attr_int_name := NULL;
      end if;

      if (l_attr_value_str_flag <> TRUE) then
         l_attr_value_str := P_ATTR_VALUE_STR(i);
      else
         l_attr_value_str := NULL;
      end if;

      if (l_attr_value_num_flag <> TRUE) then
         l_attr_value_num := P_ATTR_VALUE_NUM(i);
      else
         l_attr_value_num := NULL;
      end if;

      if (l_attr_value_date_flag <> TRUE) then
         l_attr_value_date := P_ATTR_VALUE_DATE(i);
      else
         l_attr_value_date := NULL;
      end if;

      if (l_attr_disp_value_flag <> TRUE) then
         l_attr_disp_value := P_ATTR_DISP_VALUE(i);
      else
         l_attr_disp_value := NULL;
      end if;

      if (l_attr_unit_of_measure_flag <> TRUE) then
         l_attr_unit_of_measure := P_ATTR_VALUE_NUM_UOM(i);
      else
         l_attr_unit_of_measure := NULL;
      end if;

      if (l_transaction_type_flag <> TRUE) then
         l_transaction_type := P_TRANSACTION_TYPE(i);
      else
         l_transaction_type := PA_PROJECT_PUB.G_SYNC_MODE;
      end if;

      -- call unit api
      load_extensible_attribute
      (  P_INIT_MSG_LIST        => P_INIT_MSG_LIST,
         P_COMMIT                   => FND_API.G_FALSE,--bug 3766967
         X_RETURN_STATUS          => l_return_status,
         P_TASK_ID            => l_proj_element_id,
         P_TASK_REFERENCE       => l_proj_element_reference,
         P_ATTR_GRP_ROW_INDEX         => P_ATTR_GRP_ROW_INDEX(i),
         P_ATTR_GRP_INTERNAL_NAME   => l_attr_group_int_name,
         P_ATTR_GRP_ID            => l_attr_group_id,
         P_ATTR_INTERNAL_NAME         => l_attr_int_name,
         P_ATTR_VALUE_STR         => l_attr_value_str,
         P_ATTR_VALUE_NUM         => l_attr_value_num,
         P_ATTR_VALUE_DATE        => l_attr_value_date,
         P_ATTR_DISP_VALUE        => l_attr_disp_value,
         P_ATTR_VALUE_NUM_UOM       => l_attr_unit_of_measure,
         P_TRANSACTION_TYPE     => l_transaction_type
      );

    IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
            RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
            RAISE FND_API.G_EXC_ERROR;
        END IF;

   END LOOP;

   X_RETURN_STATUS := FND_API.G_RET_STS_SUCCESS;
    EXCEPTION
        WHEN FND_API.G_EXC_ERROR THEN
            x_return_status := FND_API.G_RET_STS_ERROR;
        WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
        WHEN OTHERS THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            IF FND_MSG_PUB.Check_Msg_level (FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
                FND_MSG_PUB.Add_Exc_Msg
                (   G_PKG_NAME
                    , l_api_name
                );
            END IF;
END load_extensible_attributes;
-- </EA>

--------------------------------------------------------------------------------
--Project Structures

PROCEDURE load_structure
( p_api_version_number     IN  NUMBER
 ,p_init_msg_list           IN  VARCHAR2         := FND_API.G_FALSE
 ,p_return_status           OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_pa_project_id           IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_structure_type             IN    VARCHAR2          := 'FINANCIAL'
 ,p_structure_version_name     IN    VARCHAR2          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_structure_version_id       IN    NUMBER            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_DESCRIPTION                IN    VARCHAR2          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 /*,P_VERSION_NUMBER             IN    NUMBER            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_NAME                       IN    VARCHAR2          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_CURRENT_FLAG               IN    VARCHAR2          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_ORIGINAL_FLAG              IN    VARCHAR2          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_LATEST_EFF_PUBLISHED_FLAG IN    VARCHAR2          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_EFFECTIVE_DATE             IN    DATE              := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_PUBLISHED_DATE             IN    DATE              := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_PUBLISHED_BY_PERSON_ID     IN    NUMBER            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_CURRENT_BASELINE_DATE      IN    DATE              := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_CURRENT_BASELINE_PERSON_ID   IN    NUMBER         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_ORIGINAL_BASELINE_DATE       IN    DATE           := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_ORIGINAL_BASELINE_PERSON_ID  IN    NUMBER         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_LOCK_STATUS_CODE             IN    VARCHAR2       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_LOCKED_BY_PERSON_ID          IN    NUMBER         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_LOCKED_DATE                  IN    DATE           := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,P_STATUS_CODE                  IN    VARCHAR2       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_WF_STATUS_CODE               IN    VARCHAR2       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_PM_SOURCE_CODE               IN    VARCHAR2       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_PM_SOURCE_REFERENCE          IN    VARCHAR2       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_CHANGE_REASON_CODE           IN    VARCHAR2       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
*/
) IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_structure';


BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_structure_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

--  Bug 2978114.
--  Validate the structure type. It should be FINANCIAL / WORKPLAN /DELIVERABLE.
--  Throw an error otherwise.

    IF nvl(p_structure_type,'-99') not in ('FINANCIAL','WORKPLAN', 'DELIVERABLE') THEN
          PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                               ,p_msg_name       => 'PA_PS_INV_STR_TYPE');

          RAISE FND_API.G_EXC_ERROR;
    END IF;

-- assign incoming parameters to the fields of global structure record

    G_structure_in_rec.pa_project_id      := p_pa_project_id;
    G_structure_in_rec.structure_type                 := p_structure_type;
    G_structure_in_rec.structure_version_name         := p_structure_version_name;
    G_structure_in_rec.structure_version_id           := p_structure_version_id;
    G_structure_in_rec.DESCRIPTION                    := p_DESCRIPTION;
    /*G_structure_in_rec.VERSION_NUMBER                 := p_VERSION_NUMBER;
    G_structure_in_rec.NAME                           := p_NAME;
    G_structure_in_rec.CURRENT_FLAG                   := p_CURRENT_FLAG;
    G_structure_in_rec.ORIGINAL_FLAG                  := p_ORIGINAL_FLAG;
    G_structure_in_rec.LATEST_EFF_PUBLISHED_FLAG      := p_LATEST_EFF_PUBLISHED_FLAG;
    G_structure_in_rec.EFFECTIVE_DATE                 := p_EFFECTIVE_DATE;
    G_structure_in_rec.PUBLISHED_DATE                 := p_PUBLISHED_DATE;
    G_structure_in_rec.PUBLISHED_BY_PERSON_ID         := p_PUBLISHED_BY_PERSON_ID;
    G_structure_in_rec.CURRENT_BASELINE_DATE          := p_CURRENT_BASELINE_DATE;
    G_structure_in_rec.CURRENT_BASELINE_PERSON_ID     := p_CURRENT_BASELINE_PERSON_ID;
    G_structure_in_rec.ORIGINAL_BASELINE_DATE         := p_ORIGINAL_BASELINE_DATE;
    G_structure_in_rec.ORIGINAL_BASELINE_PERSON_ID    := p_ORIGINAL_BASELINE_PERSON_ID;
    G_structure_in_rec.LOCK_STATUS_CODE               := p_LOCK_STATUS_CODE;
    G_structure_in_rec.LOCKED_BY_PERSON_ID            := p_LOCKED_BY_PERSON_ID;
    G_structure_in_rec.LOCKED_DATE                    := p_LOCKED_DATE;
    G_structure_in_rec.STATUS_CODE                    := p_STATUS_CODE;
    G_structure_in_rec.WF_STATUS_CODE                 := p_WF_STATUS_CODE;
    G_structure_in_rec.PM_SOURCE_CODE                 := p_PM_SOURCE_CODE;
    G_structure_in_rec.PM_SOURCE_REFERENCE            := p_PM_SOURCE_REFERENCE;
    G_structure_in_rec.CHANGE_REASON_CODE             := p_CHANGE_REASON_CODE;
    */

EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO load_structure_pub;

  p_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO load_structure_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
  ROLLBACK TO load_structure_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;


END load_structure;

PROCEDURE change_structure_status
(p_api_version_number           IN      NUMBER          := 1.0 -- for bug# 3802319
, p_init_msg_list               IN      VARCHAR2        := 'F'
, p_commit                      IN      VARCHAR2        := 'F'
, p_return_status               OUT NOCOPY    VARCHAR2  /*Added the nocopy check for 4537865 */
, p_msg_count                   OUT NOCOPY    NUMBER  /*Added the nocopy check for 4537865 */
, p_msg_data                    OUT NOCOPY    VARCHAR2  /*Added the nocopy check for 4537865 */
, p_structure_version_id        IN      NUMBER
, p_pa_project_id               IN      NUMBER
, p_status_code                 IN      VARCHAR2
, p_process_mode                IN      VARCHAR2 := 'ONLINE'
, p_published_struct_ver_id     OUT NOCOPY     NUMBER  /*Added the nocopy check for 4537865 */

)IS

l_api_name CONSTANT VARCHAR2(30)  := 'change_structure_status';
l_update_wbs_flag   VARCHAR2(1);
l_msg_count         NUMBER ;
l_msg_data          VARCHAR2(2000);
l_return_status     VARCHAR2(1);
BEGIN

-- Begin fix for Bug # 4314797.

--  Standard begin of API savepoint

    SAVEPOINT change_structure_status;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number   ,
                                         p_api_version_number   ,
                                         l_api_name             ,
                                         G_PKG_NAME             )
    THEN

        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

        FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

-- End fix for Bug # 4314797.

    PA_WORKPLAN_AMG_PUB.CHANGE_STRUCTURE_STATUS
            (
            p_api_version_number                => p_api_version_number
           ,p_init_msg_list                     => p_init_msg_list
           ,p_commit                            => FND_API.G_FALSE--bug 3766967
           ,p_pa_project_id                     => p_pa_project_id
           ,p_structure_version_id              => p_structure_version_id
           ,p_status_code                       => p_status_code
           ,p_return_status                     => p_return_status
           ,p_msg_count                         => p_msg_count
           ,p_msg_data                          => p_msg_data
           , p_published_struct_ver_id          => p_published_struct_ver_id
           );
   IF (p_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (p_return_status = FND_API.G_RET_STS_ERROR) THEN
          RAISE  FND_API.G_EXC_ERROR;
   END IF;

   -- PA L Changes 3010538
--Commenting as for a publishing case we need to always check for update wbs required flag
--   IF  ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'N' ) OR
--       ( PA_PROJECT_PUB.G_IS_WP_VERSIONING_ENABLED = 'Y' AND
--         PA_PROJECT_PUB.G_IS_WP_SEPARATE_FROM_FN = 'N'  AND
--         PA_PROJECT_PUB.G_Published_version_exists = 'N')
--   THEN

   l_update_wbs_flag := PA_PROJECT_STRUCTURE_UTILS.GET_UPDATE_WBS_FLAG(p_project_id => p_pa_project_id
                                                        ,p_structure_version_id => p_published_struct_ver_id ) ;
   IF nvl(l_update_wbs_flag,'N') = 'Y' THEN
        IF p_process_mode = 'ONLINE' THEN

        --Added by rtarway for BUG 4032291
        if p_status_code = 'STRUCTURE_PUBLISHED' then
             PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES(p_calling_context      => 'ONLINE_PUBLISH'
                                                       ,p_project_id           => p_pa_project_id
                                                           ,p_commit           => p_commit
                                                       -- Fix for Bug # 4314797.
                                                       ,p_structure_version_id => p_structure_version_id
                                                       ,p_pub_struc_ver_id     => p_published_struct_ver_id
                                                       ,x_return_status        => l_return_status
                                                       ,x_msg_count            => l_msg_count
                                                       ,x_msg_data             => l_msg_data ) ;
       --Added by rtarway for BUG 4032291
        else
             PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES(p_calling_context      => 'ONLINE_UPDATE'
                                                       ,p_project_id           => p_pa_project_id
                                                       ,p_structure_version_id => p_published_struct_ver_id
                                                       ,x_return_status        => l_return_status
                                                       ,x_msg_count            => l_msg_count
                                                       ,x_msg_data             => l_msg_data ) ;
        end if;



        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
             THEN
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
             THEN
               RAISE FND_API.G_EXC_ERROR;
        END IF;
        ELSIF p_process_mode = 'CONCURRENT' THEN
          /* Added if block for bug 5390015 */
          IF p_status_code = 'STRUCTURE_PUBLISHED' THEN

                PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_CONC_WRP(p_calling_context       => 'CONC_PUBLISH'
                                                               ,p_project_id            => p_pa_project_id
                                                               ,p_commit                     => p_commit
                                                                             ,p_structure_version_id  => p_structure_version_id
                                                               ,p_pub_struc_ver_id      => p_published_struct_ver_id
                                                                             ,x_return_status         => l_return_status
                                                               ,x_msg_count             => l_msg_count
                                                               ,x_msg_data              => l_msg_data ) ;
         ELSE

            PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_CONC_WRP(p_calling_context       => 'CONC_UPDATE'
                                                            ,p_project_id            => p_pa_project_id
                                                            ,p_structure_version_id  => p_published_struct_ver_id
                                                            ,x_return_status         => l_return_status
                                                            ,x_msg_count             => l_msg_count
                                                            ,x_msg_data              => l_msg_data ) ;
        END IF;

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
             THEN
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
             THEN
               RAISE FND_API.G_EXC_ERROR;
        END IF;


        END IF ;
     END IF ;
--   END IF ;

-- PA L Changes 3010538

EXCEPTION
        WHEN FND_API.G_EXC_ERROR THEN
        p_return_status := FND_API.G_RET_STS_ERROR;

    -- 4537865
     p_published_struct_ver_id := NULL ;

    -- Begin fix for Bug # 4314797.

        ROLLBACK TO change_structure_status;

        p_msg_count := l_msg_count;
        p_msg_data := l_msg_data;

        FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                          , p_data   =>  p_msg_data);

    -- End fix for Bug # 4314797.

        WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

    -- 4537865
         p_published_struct_ver_id := NULL ;

        -- Begin fix for Bug # 4314797.

        ROLLBACK TO change_structure_status;

                p_msg_count := l_msg_count;
                p_msg_data := l_msg_data;

                FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                                          , p_data   =>  p_msg_data);

        -- End fix for Bug # 4314797.


        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

    -- 4537865
         p_published_struct_ver_id := NULL ;

        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
          FND_MSG_PUB.add_exc_msg
              (p_pkg_name            => G_PKG_NAME
              ,p_procedure_name      => l_api_name);
        END IF;


        -- Begin fix for Bug # 4314797.

                ROLLBACK TO change_structure_status;

                p_msg_count := l_msg_count;
                p_msg_data := l_msg_data;

                FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                                          , p_data   =>  p_msg_data);

        -- End fix for Bug # 4314797.

END change_structure_status;


PROCEDURE baseline_structure
(p_api_version_number           IN      NUMBER
, p_init_msg_list               IN      VARCHAR2        := 'F'
, p_commit                      IN      VARCHAR2        := 'F'
, p_return_status               OUT NOCOPY    VARCHAR2 /*Added the nocopy check for 4537865 */
, p_msg_count                   OUT NOCOPY    NUMBER /*Added the nocopy check for 4537865 */
, p_msg_data                    OUT NOCOPY    VARCHAR2 /*Added the nocopy check for 4537865 */
, p_structure_version_id        IN      NUMBER
, p_pa_project_id                  IN      NUMBER

) IS

l_api_name CONSTANT VARCHAR2(30)  := 'baseline_structure';

BEGIN

-- 4537865
--Initialize p_return_status to Success
p_return_status := FND_API.G_RET_STS_SUCCESS ;

    PA_WORKPLAN_AMG_PUB.BASELINE_STRUCTURE
            (
            p_api_version_number                => p_api_version_number
           ,p_init_msg_list                     => p_init_msg_list
           ,p_commit                            => FND_API.G_FALSE--bug 3766967
           ,p_pa_project_id                     => p_pa_project_id
           ,p_structure_version_id              => p_structure_version_id
           ,p_return_status                     => p_return_status
           ,p_msg_count                         => p_msg_count
           ,p_msg_data                          => p_msg_data
           );
   IF (p_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (p_return_status = FND_API.G_RET_STS_ERROR) THEN
          RAISE  FND_API.G_EXC_ERROR;
   END IF;

EXCEPTION
        WHEN FND_API.G_EXC_ERROR THEN
        p_return_status := FND_API.G_RET_STS_ERROR;

        WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
          FND_MSG_PUB.add_exc_msg
              (p_pkg_name            => G_PKG_NAME
              ,p_procedure_name      => l_api_name);
        END IF;
END baseline_structure;


PROCEDURE delete_structure_version
( p_api_version_number          IN      NUMBER          := 1.0 -- for bug# 3802759
 ,p_commit                      IN      VARCHAR2        := FND_API.G_FALSE
 ,p_init_msg_list               IN      VARCHAR2        := FND_API.G_FALSE
 ,p_msg_count                   OUT NOCOPY    NUMBER  /*Added the nocopy check for 4537865 */
 ,p_msg_data                    OUT NOCOPY    VARCHAR2   /*Added the nocopy check for 4537865 */
 ,p_return_status               OUT NOCOPY    VARCHAR2   /*Added the nocopy check for 4537865 */
 ,p_structure_version_id        IN  NUMBER
 ,p_record_version_number       IN      NUMBER
) IS
   l_api_name                   CONSTANT        VARCHAR2(30)            := 'delete_structure_version';

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT delete_structure_ver_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number   ,
                                         p_api_version_number   ,
                                         l_api_name             ,
                                         G_PKG_NAME             )
    THEN

        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

        FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

    PA_PROJ_TASK_STRUC_PUB.DELETE_STRUCTURE_VERSION(
         p_api_version                       => p_api_version_number
        ,p_init_msg_list                     => p_init_msg_list
        ,p_commit                            => FND_API.G_FALSE--bug 3766967
        ,p_calling_module                    => 'AMG'
        ,p_structure_version_id              => p_structure_version_id
        ,p_record_version_number             => p_record_version_number
        ,x_return_status                     => p_return_status
        ,x_msg_count                         => p_msg_count
        ,x_msg_data                          => p_msg_data
   );

   IF (p_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (p_return_status = FND_API.G_RET_STS_ERROR) THEN
          RAISE  FND_API.G_EXC_ERROR;
   END IF;

EXCEPTION

        WHEN FND_API.G_EXC_ERROR
        THEN
        ROLLBACK TO delete_structure_ver_pub;

        p_return_status := FND_API.G_RET_STS_ERROR;


        WHEN FND_API.G_EXC_UNEXPECTED_ERROR
        THEN
        ROLLBACK TO delete_structure_ver_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


        WHEN OTHERS THEN
        ROLLBACK TO delete_structure_ver_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
                FND_MSG_PUB.add_exc_msg
                                ( p_pkg_name            => G_PKG_NAME
                                , p_procedure_name      => l_api_name   );

        END IF;

END delete_structure_version;

--Project Structures

--Project Connect 4.0
--------------------------------------------------------------------------------
--Name:               fetch_structure_version
--Type:               Procedure
--Description:        This procedure can be used to get the structure version ids
--                    to the client side as part part of the LOAD/EXECUTE/FETCH cycle.
--
--Called subprograms:
--
--
--
--History:
--    03-DEC-2002        Created
--

PROCEDURE fetch_structure_version
( p_api_version_number          IN      NUMBER
 ,p_init_msg_list               IN      VARCHAR2        := FND_API.G_FALSE
 ,p_return_status               OUT NOCOPY    VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_structure_type              IN      VARCHAR2        := 'FINANCIAL'
 ,p_pa_structure_version_id     OUT NOCOPY    NUMBER  /*Added the nocopy check for 4537865 */
 ,p_struc_return_status          OUT NOCOPY     VARCHAR2   /*Added the nocopy check for 4537865 */
)
IS
   l_api_name                   CONSTANT        VARCHAR2(30)            := 'fetch_structure_version';
   l_index                                      NUMBER;
   i                                            NUMBER;

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT fetch_struc_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number   ,
                                         p_api_version_number   ,
                                         l_api_name             ,
                                         G_PKG_NAME             )
    THEN

        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

        FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;


  FOR i in 1..G_Struc_out_tbl.count LOOP

      IF G_struc_out_tbl(i).structure_type = p_structure_type
      THEN

        IF G_struc_out_tbl(i).structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
                p_pa_structure_version_id := NULL;
        ELSE

                p_pa_structure_version_id := G_struc_out_tbl(i).structure_version_id;

        END IF;
        p_struc_return_status := G_struc_out_tbl(i).return_status;
        exit;
      END IF;
  END LOOP;

EXCEPTION
        WHEN FND_API.G_EXC_ERROR
        THEN
        ROLLBACK TO fetch_struc_pub;

        p_return_status := FND_API.G_RET_STS_ERROR;

    -- 4537865
    p_pa_structure_version_id := NULL ;
    p_struc_return_status := NULL ;


        WHEN FND_API.G_EXC_UNEXPECTED_ERROR
        THEN
        ROLLBACK TO fetch_struc_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- 4537865
        p_pa_structure_version_id := NULL ;
        p_struc_return_status := NULL ;


        WHEN OTHERS THEN
        ROLLBACK TO fetch_struc_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- 4537865
        p_pa_structure_version_id := NULL ;
        p_struc_return_status := NULL ;

        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
                FND_MSG_PUB.add_exc_msg
                                ( p_pkg_name            => G_PKG_NAME
                                , p_procedure_name      => l_api_name   );

        END IF;


END fetch_structure_version;


--------------------------------------------------------------------------------
--Name:               fetch_task_version
--Type:               Procedure
--Description:        This procedure can be used to get the task version related output data
--           to the client side as part part of the LOAD/EXECUTE/FETCH cycle.
--
--Called subprograms:
--
--
--
--History:
--    30-JAN-2003        anlee    Created
--

PROCEDURE fetch_task_version
( p_api_version_number    IN  NUMBER
 ,p_init_msg_list    IN  VARCHAR2  := FND_API.G_FALSE
 ,p_return_status    OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_task_index      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_task_version_id    OUT NOCOPY NUMBER  /*Added the nocopy check for 4537865 */
 ,p_task_return_status    OUT NOCOPY  VARCHAR2  )  /*Added the nocopy check for 4537865 */
IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'fetch_task_version';
   l_index          NUMBER;
   i            NUMBER;

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT fetch_task_version_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version_number  ,
                               l_api_name         ,
                               G_PKG_NAME         )
    THEN

  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

  FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;

--  Check Task index value, when they don't provide an index we will error out
    IF p_task_index = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    OR p_task_index IS NULL
    THEN
  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
  THEN
         pa_interface_utils_pub.map_new_amg_msg
           ( p_old_message_code => 'PA_INDEX_NOT_PROVIDED'
            ,p_msg_attribute    => 'CHANGE'
            ,p_resize_flag      => 'N'
            ,p_msg_context      => 'GENERAL'
            ,p_attribute1       => ''
            ,p_attribute2       => ''
            ,p_attribute3       => ''
            ,p_attribute4       => ''
            ,p_attribute5       => '');
  END IF;

  p_return_status := FND_API.G_RET_STS_ERROR;
  RAISE FND_API.G_EXC_ERROR;
    ELSE
  l_index := p_task_index;
    END IF;

  If G_Tasks_out_tbl.exists(l_index) THEN
--  assign global table fields to the outgoing parameter
--  we don't want to return the big number G_PA_MISS_NUM

                --project structrues
    IF G_tasks_out_tbl(l_index).task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
                p_task_version_id := NULL;
        ELSE

                p_task_version_id := G_tasks_out_tbl(l_index).task_version_id;

        END IF;
                --project structrues

     p_task_return_status    := G_tasks_out_tbl(l_index).return_status;

END IF;

EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO fetch_task_version_pub;

  p_return_status := FND_API.G_RET_STS_ERROR;

 -- 4537865
  p_task_version_id := NULL ;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO fetch_task_version_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

 -- 4537865
  p_task_version_id := NULL ;


  WHEN OTHERS THEN
  ROLLBACK TO fetch_task_version_pub;

  p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
 -- 4537865
  p_task_version_id := NULL ;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;


END fetch_task_version;

--bug 2765115
PROCEDURE get_task_version
( p_api_version_number          IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_init_msg_list               IN      VARCHAR2        := FND_API.G_FALSE
 ,p_return_status               OUT NOCOPY     VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_pa_project_id                  IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pa_task_id                     IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pa_structure_version_id        IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_task_version_id             OUT  NOCOPY   NUMBER  /*Added the nocopy check for 4537865 */
) IS

   l_api_name                   CONSTANT        VARCHAR2(30)            := 'get_task_version';
   l_index                                      NUMBER;
   i                                            NUMBER;

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT get_task_version_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number   ,
                                         p_api_version_number   ,
                                         l_api_name             ,
                                         G_PKG_NAME             )
    THEN

        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

        FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success
    p_return_status := FND_API.G_RET_STS_SUCCESS;

    IF ( p_pa_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR p_pa_task_id IS NULL ) OR
       ( p_pa_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR p_pa_project_id IS NULL ) OR
       ( p_pa_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR p_pa_structure_version_id IS NULL )
    THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
        --My suggestion was to create a new message but Sakthi asked me use the following
        --Since these changes are done at the last moment of PA K around build9. We are hesitant to
        --log a new message bug. Sakthi suggested to use an existing message PA_PS_INV_STR_VER_ID
        --although it does not convey full message here and we will change it later
        --The message PA_PS_INV_STR_VER_ID does not have the AMG at the end so I cant use the standard api
        --call for AMG messages i.e,pa_interface_utils_pub.map_new_amg_msg

          PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                               ,p_msg_name       => 'PA_PS_INV_STR_VER_ID');
        END IF;
        p_return_status := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;
    END IF;

    PA_PROJ_TASK_STRUC_PUB.get_task_version_id(
              p_project_id               => p_pa_project_id
             ,p_structure_version_id     => p_pa_structure_version_id
             ,p_task_id                  => p_pa_task_id
             ,x_task_version_id          => p_task_version_id
          );

    IF p_task_version_id IS NULL
    THEN
        p_return_status := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;
    END IF;

EXCEPTION

        WHEN FND_API.G_EXC_ERROR
        THEN
        ROLLBACK TO get_task_version_pub;

        p_return_status := FND_API.G_RET_STS_ERROR;

    --4537865
    p_task_version_id := NULL ;


        WHEN FND_API.G_EXC_UNEXPECTED_ERROR
        THEN
        ROLLBACK TO get_task_version_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            --4537865
        p_task_version_id := NULL ;


        WHEN OTHERS THEN
        ROLLBACK TO get_task_version_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
        --4537865
        p_task_version_id := NULL ;
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
                FND_MSG_PUB.add_exc_msg
                                ( p_pkg_name            => G_PKG_NAME
                                , p_procedure_name      => l_api_name   );

        END IF;

END get_task_version;
--bug 2765115

--------------------------- FP M changes begin (venkat) 4 ------------------------------------

PROCEDURE change_current_working_version
(p_api_version_number           IN      NUMBER
, p_init_msg_list               IN      VARCHAR2        := 'F'
, p_commit                      IN      VARCHAR2        := 'F'
, p_return_status               OUT NOCOPY    VARCHAR2 /*Added the nocopy check for 4537865 */
, p_msg_count                   OUT NOCOPY    NUMBER /*Added the nocopy check for 4537865 */
, p_msg_data                    OUT NOCOPY     VARCHAR2  /*Added the nocopy check for 4537865 */
, p_structure_version_id        IN      NUMBER
, p_pa_project_id               IN      NUMBER
)

IS

l_api_name   CONSTANT        VARCHAR2(30)  := 'change_current_working_version';
l_rec_version_number         NUMBER;
l_pev_structure_id       NUMBER;
l_name               VARCHAR2(30);

CURSOR l_temp_cursor
IS
SELECT record_version_number, pev_structure_id, name
FROM      PA_PROJ_ELEM_VER_STRUCTURE
WHERE  project_id = p_pa_project_id  and element_version_id = p_structure_version_id;


BEGIN

--  Standard begin of API savepoint

    SAVEPOINT get_task_version_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number   ,
                                         p_api_version_number   ,
                                         l_api_name             ,
                                         G_PKG_NAME             )
    THEN

        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

        FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success
    p_return_status := FND_API.G_RET_STS_SUCCESS;

    IF ( p_pa_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR p_pa_project_id IS NULL ) OR
       ( p_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR p_structure_version_id IS NULL )
    THEN
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN

    -- Using the message name PA_PS_INV_STR_VER_ID

      PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                               ,p_msg_name       => 'PA_PS_INV_STR_VER_ID');
        END IF;
        p_return_status := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;
    END IF;

   OPEN l_temp_cursor;
   FETCH l_temp_cursor INTO l_rec_version_number, l_pev_structure_id, l_name;

   IF l_temp_cursor%NOTFOUND
   THEN
    CLOSE l_temp_cursor;
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN
    -- Using the message name PA_PS_INV_STR_VER_ID
    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                              ,p_msg_name       => 'PA_PS_INV_STR_VER_ID');
        END IF;
        p_return_status := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;
   END IF;
   CLOSE l_temp_cursor;

   PA_PROJECT_STRUCTURE_PVT1.update_structure_version_attr
    (p_api_version          => p_api_version_number
    ,p_init_msg_list        => p_init_msg_list
    ,p_commit                       => FND_API.G_FALSE--bug 3766967
    ,p_pev_structure_id     => l_pev_structure_id
    ,p_structure_version_name       => l_name
    ,p_record_version_number        => l_rec_version_number
    ,p_current_working_ver_flag     => 'Y'
    ,x_return_status        => p_return_status
    ,x_msg_count            => p_msg_count
    ,x_msg_data         => p_msg_data
    );

   IF (p_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (p_return_status = FND_API.G_RET_STS_ERROR) THEN
          RAISE  FND_API.G_EXC_ERROR;
   END IF;

EXCEPTION

        WHEN FND_API.G_EXC_ERROR
        THEN
        ROLLBACK TO get_task_version_pub;

        p_return_status := FND_API.G_RET_STS_ERROR;


        WHEN FND_API.G_EXC_UNEXPECTED_ERROR
        THEN
        ROLLBACK TO get_task_version_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


        WHEN OTHERS THEN
        ROLLBACK TO get_task_version_pub;

        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
                FND_MSG_PUB.add_exc_msg
                                ( p_pkg_name            => G_PKG_NAME
                                , p_procedure_name      => l_api_name   );

        END IF;


END change_current_working_version;

-------------------------- FP M changes end (venkat) 4 ----------------------------------------

-- Progress Management Changes. Bug # 3420093.

-- Name:               apply_lp_prog_on_cwv
-- Type:               Procedure
-- Description:        This procedure can be used to apply the latest progress on the given
--                     structure_version.
--
-- Called subprograms: pa_progress_pub.apply_lp_prog_on_cwv().
--
--
--
--History:
--
--    02-APR-2004       Rakesh Raghavan         Created

PROCEDURE apply_lp_prog_on_cwv(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_pa_project_id               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pm_project_reference        IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_working_str_version_id      IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_return_status               OUT NOCOPY    VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_msg_count                   OUT NOCOPY     NUMBER  /*Added the nocopy check for 4537865 */
 ,p_msg_data                    OUT NOCOPY     VARCHAR2 /*Added the nocopy check for 4537865 */
)

IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'APPLY_LP_PROG_ON_CWV';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);

   l_function_allowed      VARCHAR2(1);
   l_resp_id               NUMBER := FND_GLOBAL.Resp_id;
   l_debug_mode            VARCHAR2(1);

   l_project_id            NUMBER;

BEGIN
        --  Standard begin of API savepoint.

        savepoint APPLY_LP_PROG_ON_CWV;

        l_debug_mode := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

        --  Standard call to check for call compatibility.

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then

                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        END IF;

        -- Initialize the message table if requested.

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN

                FND_MSG_PUB.initialize;

        END IF;

        --  Set API return status to success.

        p_return_status := FND_API.G_RET_STS_SUCCESS;

        /*      Checking function security.     */

       -- Actions performed using the APIs would be subject to
       -- function security. If the responsibility does not allow
       -- such functions to be executed, the API should not proceed further
       -- since the user does not have access to such functions.
       -- The function security for this API is the same as that enforced
       -- in the the update_task() API.

    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version,
       p_responsibility_id  => l_resp_id,
       p_function_name      => 'PA_PM_UPDATE_TASK',
       p_msg_count          => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed );

        IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
        THEN
                        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF l_return_status = FND_API.G_RET_STS_ERROR
        THEN
                        RAISE FND_API.G_EXC_ERROR;
        END IF;
        IF l_function_allowed = 'N' THEN
          pa_interface_utils_pub.map_new_amg_msg
          ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
           ,p_msg_attribute    => 'CHANGE'
           ,p_resize_flag      => 'Y'
           ,p_msg_context      => 'GENERAL'
           ,p_attribute1       => ''
           ,p_attribute2       => ''
           ,p_attribute3       => ''
           ,p_attribute4       => ''
           ,p_attribute5       => '');
           p_return_status := FND_API.G_RET_STS_ERROR;
           RAISE FND_API.G_EXC_ERROR;
        END IF;

        /*      Converting project_reference to project_id      */

        PA_PROJECT_PVT.Convert_pm_projref_to_id
                (p_pm_project_reference =>      p_pm_project_reference
                 ,  p_pa_project_id     =>      p_pa_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      l_return_status);

      IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
              RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN
              RAISE  FND_API.G_EXC_ERROR;
      END IF;

        /*      Getting the working structure_version_id        */

        if (p_working_str_version_id = NULL or p_working_str_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) then
                if FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) then
                         pa_interface_utils_pub.map_new_amg_msg
                                (p_old_message_code => 'PA_WRKG_STR_VER_ID_IS_MISSING'
                                ,p_msg_attribute    => 'CHANGE'
                                ,p_resize_flag      => 'N'
                                ,p_msg_context      => 'GENERAL'
                                ,p_attribute1       => ''
                                ,p_attribute2       => ''
                                ,p_attribute3       => ''
                                ,p_attribute4       => ''
                                ,p_attribute5       => '');
                end if;

                          p_return_status := FND_API.G_RET_STS_ERROR;
                          RAISE FND_API.G_EXC_ERROR;
        end if;

        /*      Calling: PA_PROGRESS_PUB.apply_lp_prog_on_cwv.  */

        PA_PROGRESS_PUB.apply_lp_prog_on_cwv(p_api_version              =>      p_api_version
                                            ,p_init_msg_list            =>      p_init_msg_list
                                            ,p_commit                   =>      FND_API.G_FALSE--bug 3766967
                                            ,p_project_id               =>      l_project_id
                                            ,p_working_str_version_id   =>      p_working_str_version_id
                                            ,x_return_status            =>      l_return_status
                                            ,x_msg_count                =>      l_msg_count
                                            ,x_msg_data                 =>      l_msg_data);

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                     p_msg_name       => l_msg_data);
                p_msg_data := l_msg_data;
                p_return_status := 'E';
                p_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;

EXCEPTION

    when FND_API.G_EXC_ERROR then

      if p_commit = FND_API.G_TRUE then
        rollback to APPLY_LP_PROG_ON_CWV;
      end if;

      p_return_status := FND_API.G_RET_STS_ERROR;

      FND_MSG_PUB.Count_And_Get
        (p_count    =>  p_msg_count
         ,p_data    =>  p_msg_data);

    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to APPLY_LP_PROG_ON_CWV;
      end if;

      p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

      FND_MSG_PUB.Count_And_Get
        (p_count    =>  p_msg_count
         ,p_data    =>  p_msg_data);

    when OTHERS then

      if p_commit = FND_API.G_TRUE then
         rollback to APPLY_LP_PROG_ON_CWV;
      end if;

      p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
        THEN
                FND_MSG_PUB.add_exc_msg
                   (p_pkg_name    => G_PKG_NAME
                   ,p_procedure_name  => l_api_name);
        END IF;

      FND_MSG_PUB.Count_And_Get
        (p_count    =>  p_msg_count
         ,p_data    =>  p_msg_data);
      raise;

END apply_lp_prog_on_cwv;

-- Progress Management Changes. Bug # 3420093.

-- 3435905 FP M Changes for Deliverables : Start

--------------------------------------------------------------------------------
--Name:               load_deliverable
--Type:               Procedure
--Description:        This procedure can be used to load a record of deliverable from input
--                     paramters to global table
--
--Called subprograms:
--
--
--
--History:
--    03-Mar-2004   Puneet            Created
--

PROCEDURE load_deliverable
(   p_api_version            IN  NUMBER     := 1.0
  , p_init_msg_list          IN  VARCHAR2   := FND_API.G_TRUE
  , p_debug_mode             IN  VARCHAR2   := 'N'
  , x_return_status          OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  , p_deliverable_name       IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_deliverable_short_name IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_deliverable_type_id    IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_deliverable_owner_id   IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_description            IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_status_code            IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_due_date               IN  DATE       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_completion_date        IN  DATE       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_progress_weight        IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_pm_source_code         IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , px_deliverable_id     IN OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
  , p_pm_deliverable_reference IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- for bug# 3729250
  --  , p_carrying_out_org_id    IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_task_id                IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_task_source_reference  IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_item_id                IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , P_inventory_org_id       IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_quantity               IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_uom_code               IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- for bug# 3729250
  --  , p_item_description       IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_unit_price         IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- for bug# 3729250
  , p_unit_number        IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_currency_code      IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  )
  IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_deliverable';

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_deliverable_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version  ,
                               l_api_name         ,
                               G_PKG_NAME       )
    THEN

       RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

       FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    x_return_status := FND_API.G_RET_STS_SUCCESS;

-- Load the record only if deliverable_short_name is passed
  --   IF (p_deliverable_short_name <>  PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) AND  /* Bug 39590235 */
       IF (p_deliverable_short_name <>  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
          (p_deliverable_short_name IS NOT NULL) THEN

-- assign a value to the global counter for this table
       G_deliverables_in_tbl_count  := G_deliverables_in_tbl_count + 1;

        IF p_debug_mode = 'Y' THEN
           pa_debug.g_err_stage := 'Loading deliverable ['|| p_deliverable_short_name||'] element [ '||G_deliverables_in_tbl_count ||']';
           pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
        END IF;

-- assign incoming parameters to the global table fields
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).deliverable_name          := p_deliverable_name       ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).deliverable_short_name    := p_deliverable_short_name ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).deliverable_type_id       := p_deliverable_type_id    ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).deliverable_owner_id      := p_deliverable_owner_id   ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).description               := p_description            ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).status_code               := p_status_code            ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).due_date                  := p_due_date               ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).completion_date           := p_completion_date        ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).progress_weight           := p_progress_weight        ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).pm_source_code            := p_pm_source_code         ;
        G_deliverables_in_tbl(G_deliverables_in_tbl_count).deliverable_id            := px_deliverable_id        ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).pm_deliverable_reference  := p_pm_deliverable_reference;
    -- for bug# 3729250
    --  G_deliverables_in_tbl(G_deliverables_in_tbl_count).carrying_out_org_id       := p_carrying_out_org_id  ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).task_id                   := p_task_id                ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).task_source_reference     := p_task_source_reference  ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).item_id                   := p_item_id                ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).inventory_org_id      := p_inventory_org_id       ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).quantity                  := p_quantity               ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).uom_code                  := p_uom_code               ;
    -- for bug# 3729250
    --  G_deliverables_in_tbl(G_deliverables_in_tbl_count).item_description          := p_item_description       ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).unit_price                := p_unit_price             ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).unit_number               := p_unit_number            ;
    G_deliverables_in_tbl(G_deliverables_in_tbl_count).currency_code         := p_currency_code          ;
   END IF;

EXCEPTION

  WHEN FND_API.G_EXC_ERROR THEN
    ROLLBACK TO load_deliverable_pub;
    x_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
    ROLLBACK TO load_deliverable_pub;
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
    ROLLBACK TO load_deliverable_pub;
    x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

END load_deliverable;

--------------------------------------------------------------------------------
--Name:               load_deliverables
--Type:               Procedure
--Description:        This procedure can be used to load a set record of deliverables from input
--                     paramters to global table
--
--Called subprograms:   load_deliverable
--
--
--
--History:
--    03-Mar-2004   Puneet            Created
--

PROCEDURE load_deliverables
(   p_api_version            IN  NUMBER     := 1.0
  , p_init_msg_list          IN  VARCHAR2   := FND_API.G_TRUE
  , p_debug_mode             IN  VARCHAR2  := 'N'
  , x_return_status          OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  , p_deliverable_name       IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  --, p_deliverable_name       IN  PA_VC_1000_240 := PA_VC_1000_240(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
--  , p_deliverable_short_name IN  PA_VC_1000_100 := PA_VC_1000_100(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_deliverable_short_name IN  PA_VC_1000_150 := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_deliverable_type_id    IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_deliverable_owner_id   IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_description            IN  PA_VC_1000_2000 := PA_VC_1000_2000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_status_code            IN  PA_VC_1000_30 := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_due_date               IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_completion_date        IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_progress_weight        IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_pm_source_code         IN  PA_VC_1000_30 := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , px_deliverable_id     IN OUT NOCOPY PA_NUM_1000_NUM /*Added the nocopy check for 4537865 */
  , p_pm_deliverable_reference IN  PA_VC_1000_25 := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  -- for bug# 3729250
  --  , p_carrying_out_org_id    IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_task_id                IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_task_source_reference  IN  PA_VC_1000_25 := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_item_id                IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , P_inventory_org_id       IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_quantity               IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_uom_code               IN  PA_VC_1000_30 := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  -- for bug# 3729250
  --  , p_item_description       IN  PA_VC_1000_2000 := PA_VC_1000_2000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_unit_price         IN  PA_NUM_1000_NUM := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  -- for bug# 3729250
  , p_unit_number        IN  PA_VC_1000_30 := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
--  , p_currency_code        IN  PA_VC_1000_15 := PA_VC_1000_15(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_currency_code      IN  PA_VC_1000_30 := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  )
  IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_deliverables';

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_deliverables_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version  ,
                               l_api_name         ,
                               G_PKG_NAME       )
    THEN

       RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

       FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    x_return_status := FND_API.G_RET_STS_SUCCESS;

-- Load the table only if deliverable_short_name is passed
 FOR i in 1..1000 LOOP
    IF (p_deliverable_short_name(i) <>  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND                    /* Bug # 3590235 */
          (p_deliverable_short_name(i) IS NOT NULL) THEN

       load_deliverable
       (   p_api_version              => p_api_version
         , p_init_msg_list            => p_init_msg_list
         , p_debug_mode               => p_debug_mode
         , x_return_status            => x_return_status
         , p_deliverable_name         => p_deliverable_name(i)
         , p_deliverable_short_name   => p_deliverable_short_name(i)
         , p_deliverable_type_id      => p_deliverable_type_id(i)
         , p_deliverable_owner_id     => p_deliverable_owner_id(i)
         , p_description              => p_description(i)
         , p_status_code              => p_status_code(i)
         , p_due_date                 => p_due_date(i)
         , p_completion_date          => p_completion_date(i)
         , p_progress_weight          => p_progress_weight(i)
         , p_pm_source_code           => p_pm_source_code(i)
         , px_deliverable_id          => px_deliverable_id(i)
         , p_pm_deliverable_reference => p_pm_deliverable_reference(i)
         -- for bug# 3729250
         --  , p_carrying_out_org_id      => p_carrying_out_org_id(i)
         , p_task_id                  => p_task_id(i)
         , p_task_source_reference    => p_task_source_reference(i)
         , p_item_id                  => p_item_id(i)
         , P_inventory_org_id         => p_inventory_org_id(i)
         , p_quantity                 => p_quantity(i)
         , p_uom_code                 => p_uom_code(i)
         -- for bug# 3729250
         --  , p_item_description         => p_item_description(i)
         , p_unit_price               => p_unit_price(i)
         , p_unit_number              => p_unit_number(i)
         , p_currency_code            => p_currency_code(i)
         ) ;
   END IF;
END LOOP;

EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO load_deliverables_pub;

  x_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO load_deliverables_pub;

  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
  ROLLBACK TO load_deliverables_pub;

  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

END load_deliverables;

--------------------------------------------------------------------------------
--Name:               load_action
--Type:               Procedure
--Description:        This procedure can be used to load a record of Deliverable
--                    Actions from input paramters to global tables
--
--Called subprograms:
--
--
--
--History:
--    03-Mar-2004   Puneet            Created
--

PROCEDURE load_action
(   p_api_version                  IN  NUMBER    := 1.0
  , p_init_msg_list                IN  VARCHAR2  := FND_API.G_TRUE
  , p_debug_mode                   IN  VARCHAR2  := 'N'
  , x_return_status            OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  , p_action_name                  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_action_id                    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_action_owner_id              IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_function_code                IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_due_date                     IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_description                  IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_completion_date              IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_pm_source_code               IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_pm_action_reference          IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- for bug# 3729250
  --  , p_carrying_out_org_id          IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_pm_deliverable_reference     IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_deliverable_id               IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- added for bug# 3729250
  , p_financial_task_reference     IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_financial_task_id            IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_destination_type_code        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_receiving_org_id             IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_receiving_location_id        IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_po_need_by_date              IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_vendor_id                    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_vendor_site_code             IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--  , p_project_currency             IN  VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_Quantity                     IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_uom_code                     IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_unit_price                   IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_exchange_rate_type           IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_exchange_rate_date           IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_exchange_rate                IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  /* Bug 3590235 */
  , p_expenditure_type             IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_expenditure_org_id           IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_expenditure_item_date        IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_requisition_line_type_id     IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_category_id                  IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ready_to_procure_flag        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_initiate_procure_flag        IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_ship_from_organization_id    IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ship_from_location_id        IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ship_to_organization_id      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ship_to_location_id          IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_demand_schedule              IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_expected_shipment_date       IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_promised_shipment_date       IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_volume                       IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_volume_uom                   IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_weight                       IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_weight_uom                   IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_ready_to_ship_flag           IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_initiate_planning_flag       IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_initiate_shipping_flag       IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_event_type                   IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_currency                     IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_invoice_amount               IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_revenue_amount               IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_event_date                   IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_event_number                 IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_organization_id              IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_bill_hold_flag               IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_functional_rate_type IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_functional_rate_date IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_project_functional_rate      IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_project_rate_type            IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_rate_date            IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_project_rate                 IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_funding_rate_type            IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_funding_rate_date            IN  DATE      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_funding_rate                 IN  NUMBER    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_pm_event_reference           IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR -- 3651489 added parameter
)
  IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_actions';

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_action_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version  ,
                               l_api_name         ,
                               G_PKG_NAME       )
    THEN

       RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

       FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    x_return_status := FND_API.G_RET_STS_SUCCESS;

-- Load the table only if action_name is passed
   IF (p_action_name <>  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
         (p_action_name IS NOT NULL) THEN

-- assign a value to the global counter for this table
        G_dlvr_actions_in_tbl_count  := G_dlvr_actions_in_tbl_count + 1;

        IF p_debug_mode = 'Y' THEN
           pa_debug.g_err_stage := 'Loading action ['|| p_action_name||'] element [ '||G_dlvr_actions_in_tbl_count ||']';
           pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
        END IF;

-- assign incoming parameters to the global table fields
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).action_name                  := p_action_name                   ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).action_owner_id              := p_action_owner_id               ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).action_id                    := p_action_id                     ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).function_code                := p_function_code                 ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).due_date                     := p_due_date                      ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).description                  := p_description                   ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).completion_date              := p_completion_date               ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).pm_source_code               := p_pm_source_code                ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).pm_action_reference          := p_pm_action_reference           ;
    -- for bug# 3729250
    -- G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).carrying_out_org_id          := p_carrying_out_org_id           ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).pm_deliverable_reference     := p_pm_deliverable_reference      ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).deliverable_id               := p_deliverable_id                ;
   -- added for bug# 3729250
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).financial_task_reference     := p_financial_task_reference      ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).financial_task_id            := p_financial_task_id             ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).destination_type_code        := p_destination_type_code         ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).receiving_org_id             := p_receiving_org_id              ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).receiving_location_id        := p_receiving_location_id         ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).po_need_by_date              := p_po_need_by_date               ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).vendor_id                    := p_vendor_id                     ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).vendor_site_code             := p_vendor_site_code              ;
--  G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).project_currency             := p_project_currency              ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).Quantity                     := p_Quantity                      ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).uom_code                     := p_uom_code                      ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).unit_price                   := p_unit_price                    ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).exchange_rate_type           := p_exchange_rate_type            ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).exchange_rate_date           := p_exchange_rate_date            ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).exchange_rate                := p_exchange_rate                 ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).expenditure_type             := p_expenditure_type              ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).expenditure_org_id           := p_expenditure_org_id            ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).expenditure_item_date        := p_expenditure_item_date         ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).requisition_line_type_id     := p_requisition_line_type_id      ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).category_id                  := p_category_id                   ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).ready_to_procure_flag        := p_ready_to_procure_flag         ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).initiate_procure_flag        := p_initiate_procure_flag         ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).ship_from_organization_id    := p_ship_from_organization_id     ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).ship_from_location_id        := p_ship_from_location_id         ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).ship_to_organization_id      := p_ship_to_organization_id       ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).ship_to_location_id          := p_ship_to_location_id           ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).demand_schedule              := p_demand_schedule               ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).expected_shipment_date       := p_expected_shipment_date        ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).promised_shipment_date       := p_promised_shipment_date        ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).volume                       := p_volume                        ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).volume_uom                   := p_volume_uom                    ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).weight                       := p_weight                        ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).weight_uom                   := p_weight_uom                    ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).ready_to_ship_flag           := p_ready_to_ship_flag               ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).initiate_planning_flag       := p_initiate_planning_flag        ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).initiate_shipping_flag       := p_initiate_shipping_flag        ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).event_type                   := p_event_type                    ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).currency                     := p_currency                      ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).invoice_amount               := p_invoice_amount                ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).revenue_amount               := p_revenue_amount                ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).event_date                   := p_event_date                    ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).event_number                 := p_event_number                  ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).organization_id              := p_organization_id               ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).bill_hold_flag               := p_bill_hold_flag                ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).project_functional_rate_type := p_project_functional_rate_type  ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).project_functional_rate_date := p_project_functional_rate_date  ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).project_functional_rate      := p_project_functional_rate       ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).project_rate_type            := p_project_rate_type             ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).project_rate_date            := p_project_rate_date             ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).project_rate                 := p_project_rate                  ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).funding_rate_type            := p_funding_rate_type             ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).funding_rate_date            := p_funding_rate_date             ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).funding_rate                 := p_funding_rate                  ;
    G_deliverable_actions_in_tbl(G_dlvr_actions_in_tbl_count).pm_event_reference           := p_pm_event_reference            ; -- 3651489 added parameter
    END IF;

EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO load_action_pub;

  x_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO load_action_pub;

  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
  ROLLBACK TO load_action_pub;

  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

END load_action;

--------------------------------------------------------------------------------
--Name:               load_actions
--Type:               Procedure
--Description:        This procedure can be used to load Actions from input
--                     paramters to global tables
--
--Called subprograms:
--
--
--
--History:
--    03-Mar-2004   Puneet            Created
--
PROCEDURE load_actions
(   p_api_version                  IN  NUMBER            := 1.0
  , p_init_msg_list                IN  VARCHAR2          := FND_API.G_TRUE
  , p_debug_mode                   IN  VARCHAR2          := 'N'
  , x_return_status            OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  --, p_action_name                  IN  PA_VC_1000_240  := PA_VC_1000_240(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_action_name                  IN  PA_VC_1000_150    := PA_VC_1000_150(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_action_id                    IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_action_owner_id              IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_function_code                IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_due_date                     IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_description                  IN  PA_VC_1000_2000   := PA_VC_1000_2000(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_completion_date              IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_pm_source_code               IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_pm_action_reference          IN  PA_VC_1000_25     := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  -- for bug# 3729250
  --  , p_carrying_out_org_id          IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_pm_deliverable_reference     IN  PA_VC_1000_25     := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_deliverable_id               IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  -- added for bug# 3729250
  , p_financial_task_reference     IN  PA_VC_1000_25     := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_financial_task_id            IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_destination_type_code        IN  PA_VC_1000_25     := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_receiving_org_id             IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_receiving_location_id        IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_po_need_by_date              IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_vendor_id                    IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_vendor_site_code             IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
--  , p_project_currency             IN  PA_VC_1000_25   := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_Quantity                     IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_uom_code                     IN  PA_VC_1000_25     := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_unit_price                   IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_exchange_rate_type           IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_exchange_rate_date           IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_exchange_rate                IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)   /* Bug # 3590235 */
  , p_expenditure_type             IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_expenditure_org_id           IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_expenditure_item_date        IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_requisition_line_type_id     IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_category_id                  IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
--  , p_ready_to_procure_flag        IN  PA_VC_1000_1    := PA_VC_1000_1(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
--  , p_initiate_procure_flag        IN  PA_VC_1000_1    := PA_VC_1000_1(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_ready_to_procure_flag        IN  PA_VC_1000_10     := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_initiate_procure_flag        IN  PA_VC_1000_10     := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_ship_from_organization_id    IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_ship_from_location_id        IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_ship_to_organization_id      IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_ship_to_location_id          IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_demand_schedule              IN  PA_VC_1000_10     := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_expected_shipment_date       IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_promised_shipment_date       IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_volume                       IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_volume_uom                   IN  PA_VC_1000_10     := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_weight                       IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_weight_uom                   IN  PA_VC_1000_10     := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
--  , p_ready_to_ship_flag           IN  PA_VC_1000_1    := PA_VC_1000_1(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
--  , p_initiate_planning_flag       IN  PA_VC_1000_1    := PA_VC_1000_1(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
--  , p_initiate_shipping_flag       IN  PA_VC_1000_1    := PA_VC_1000_1(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_ready_to_ship_flag           IN  PA_VC_1000_10     := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_initiate_planning_flag       IN  PA_VC_1000_10     := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_initiate_shipping_flag       IN  PA_VC_1000_10     := PA_VC_1000_10(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_event_type                   IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_currency                     IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_invoice_amount               IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_revenue_amount               IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_event_date                   IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_event_number                 IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_organization_id              IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_bill_hold_flag               IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_project_functional_rate_type IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_project_functional_rate_date IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_project_functional_rate      IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_project_rate_type            IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_project_rate_date            IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_project_rate                 IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_funding_rate_type            IN  PA_VC_1000_30     := PA_VC_1000_30(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
  , p_funding_rate_date            IN  PA_DATE_1000_DATE := PA_DATE_1000_DATE(PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE)
  , p_funding_rate                 IN  PA_NUM_1000_NUM   := PA_NUM_1000_NUM(PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
  , p_pm_event_reference           IN  PA_VC_1000_25     := PA_VC_1000_25(PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) -- 3651489 added parameter
)
  IS

   l_api_name      CONSTANT  VARCHAR2(30)     := 'load_actions';
   l_return_status VARCHAR2(1) := null;

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT load_actions_pub;

--  Standard call to check for call compatibility.

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version  ,
                               l_api_name         ,
                               G_PKG_NAME       )
    THEN

       RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested.

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

       FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    x_return_status := FND_API.G_RET_STS_SUCCESS;

-- Load the table only if action_name is passed
 FOR i in 1..1000 LOOP
    IF (p_action_name(i) <>  PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
         (p_action_name(i) IS NOT NULL) THEN

-- assign a value to the global counter for this table
        G_dlvr_actions_in_tbl_count  := G_dlvr_actions_in_tbl_count + 1;

-- assign incoming parameters to the global table fields
    load_action
     (  p_api_version                  => p_api_version
      , p_init_msg_list                => p_init_msg_list
      , p_debug_mode                   => p_debug_mode
      , x_return_status            => l_return_status
      , p_action_name                  => p_action_name(i)
      , p_action_id                    => p_action_id(i)
      , p_action_owner_id              => p_action_owner_id(i)
      , p_function_code                => p_function_code(i)
      , p_due_date                     => p_due_date(i)
      , p_description                  => p_description(i)
      , p_completion_date              => p_completion_date(i)
      , p_pm_source_code               => p_pm_source_code(i)
      , p_pm_action_reference          => p_pm_action_reference(i)
      -- for bug# 3729250
      --      , p_carrying_out_org_id          => p_carrying_out_org_id(i)
      , p_pm_deliverable_reference     => p_pm_deliverable_reference(i)
      , p_deliverable_id               => p_deliverable_id(i)
      , p_financial_task_reference     => p_financial_task_reference(i) -- added for bug# 3729250
      , p_financial_task_id            => p_financial_task_id(i)
      , p_destination_type_code        => p_destination_type_code(i)
      , p_receiving_org_id             => p_receiving_org_id(i)
      , p_receiving_location_id        => p_receiving_location_id(i)
      , p_po_need_by_date              => p_po_need_by_date(i)
      , p_vendor_id                    => p_vendor_id(i)
      , p_vendor_site_code             => p_vendor_site_code(i)
--    , p_project_currency             => p_project_currency(i)
      , p_Quantity                     => p_Quantity(i)
      , p_uom_code                     => p_uom_code(i)
      , p_unit_price                   => p_unit_price(i)
      , p_exchange_rate_type           => p_exchange_rate_type(i)
      , p_exchange_rate_date           => p_exchange_rate_date(i)
      , p_exchange_rate                => p_exchange_rate(i)
      , p_expenditure_type             => p_expenditure_type(i)
      , p_expenditure_org_id           => p_expenditure_org_id(i)
      , p_expenditure_item_date        => p_expenditure_item_date(i)
      , p_requisition_line_type_id     => p_requisition_line_type_id(i)
      , p_category_id                  => p_category_id(i)
      , p_ready_to_procure_flag        => p_ready_to_procure_flag(i)
      , p_initiate_procure_flag        => p_initiate_procure_flag(i)
      , p_ship_from_organization_id    => p_ship_from_organization_id(i)
      , p_ship_from_location_id        => p_ship_from_location_id(i)
      , p_ship_to_organization_id      => p_ship_to_organization_id(i)
      , p_ship_to_location_id          => p_ship_to_location_id(i)
      , p_demand_schedule              => p_demand_schedule(i)
      , p_expected_shipment_date       => p_expected_shipment_date(i)
      , p_promised_shipment_date       => p_promised_shipment_date(i)
      , p_volume                       => p_volume(i)
      , p_volume_uom                   => p_volume_uom(i)
      , p_weight                       => p_weight(i)
      , p_weight_uom                   => p_weight_uom(i)
      , p_ready_to_ship_flag           => p_ready_to_ship_flag(i)
      , p_initiate_planning_flag       => p_initiate_planning_flag(i)
      , p_initiate_shipping_flag       => p_initiate_shipping_flag(i)
      , p_event_type                   => p_event_type(i)
      , p_currency                     => p_currency(i)
      , p_invoice_amount               => p_invoice_amount(i)
      , p_revenue_amount               => p_revenue_amount(i)
      , p_event_date                   => p_event_date(i)
      , p_event_number                 => p_event_number(i)
      , p_organization_id              => p_organization_id(i)
      , p_bill_hold_flag               => p_bill_hold_flag(i)
      , p_project_functional_rate_type => p_project_functional_rate_type(i)
      , p_project_functional_rate_date => p_project_functional_rate_date(i)
      , p_project_functional_rate      => p_project_functional_rate(i)
      , p_project_rate_type            => p_project_rate_type(i)
      , p_project_rate_date            => p_project_rate_date(i)
      , p_project_rate                 => p_project_rate(i)
      , p_funding_rate_type            => p_funding_rate_type(i)
      , p_funding_rate_date            => p_funding_rate_date(i)
      , p_funding_rate                 => p_funding_rate(i)
      , p_pm_event_reference           => p_pm_event_reference(i)  -- 3651489 added parameter
    );

    END IF;
END LOOP;

EXCEPTION

  WHEN FND_API.G_EXC_ERROR
  THEN
  ROLLBACK TO load_actions_pub;

  x_return_status := FND_API.G_RET_STS_ERROR;


  WHEN FND_API.G_EXC_UNEXPECTED_ERROR
  THEN
  ROLLBACK TO load_actions_pub;

  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;


  WHEN OTHERS THEN
  ROLLBACK TO load_actions_pub;

  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

END load_actions;


--------------------------------------------------------------------------------
--Name:               Create_Deliverable
--Type:               Procedure
--Description:        This procedure creates a deliverable and its related actions
--                    which are passed through actions PLSQL table
--
--Called subprograms:   PA_DELIVERABLE_PUB.CREATE_DELIVERABLE
--                      Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper
--
--
--
--History:
--    08-Mar-2004   Puneet            Created
--

PROCEDURE create_deliverable
(   p_api_version            IN  NUMBER     := 1.0
  , p_init_msg_list          IN  VARCHAR2   := FND_API.G_TRUE
  , p_commit                 IN  VARCHAR2   := FND_API.G_FALSE
  , p_debug_mode             IN  VARCHAR2   := 'N'
  , x_return_status          OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  , p_deliverable_name       IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_deliverable_short_name IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_deliverable_type_id    IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_deliverable_owner_id   IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_description            IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_status_code            IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_due_date               IN  DATE       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_completion_date        IN  DATE       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_progress_weight        IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , px_deliverable_id        IN OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
  , p_pm_deliverable_reference IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- for bug# 3729250
  --  , p_carrying_out_org_id    IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_task_id                IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_task_source_reference  IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_id             IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_proj_source_reference  IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_action_in_tbl          IN  action_in_tbl_type := G_deliverable_actions_in_tbl -- 3435905 passing default
  , x_action_out_tbl         OUT NOCOPY action_out_tbl_type /*Added the nocopy check for 4537865 */
  , p_item_id                IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , P_inventory_org_id       IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_quantity               IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_uom_code               IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- for bug# 3729250
  --  , p_item_description       IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_unit_price             IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- for bug# 3729250
  , p_unit_number            IN  VARCHAR2     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_currency_code          IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_pm_source_code         IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR              /* Bug no. 3651113 */
  , x_msg_count              OUT NOCOPY NUMBER  /*Added the nocopy check for 4537865 */
  , x_msg_data               OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
  )

  IS

    l_project_id NUMBER;
    l_task_id    NUMBER;
    l_project_number          Pa_Projects_All.Segment1%TYPE;
    l_task_number             Pa_Proj_Elements.Name%TYPE;
    l_task_source_reference VARCHAR2(240);
    l_deliverable_element_id NUMBER;
    l_deliverable_version_id  NUMBER;
    l_dlvr_prg_enabled     VARCHAR2(1) := NULL;
    l_dlvr_action_enabled  VARCHAR2(1) := NULL;
    l_dlvr_enabled         VARCHAR2(1) := NULL;
    l_status_code   PA_PROJ_ELEMENTS.STATUS_CODE%TYPE;

    l_unique_flag  VARCHAR2(1) := null;
    l_err_message    Fnd_New_Messages.Message_text%TYPE;  -- for AMG message

    l_data                       VARCHAR2(2000); -- 4537865
    l_action_in_tbl action_in_tbl_type;
    l_action_out_tlb action_out_tbl_type;

    l_api_name      CONSTANT  VARCHAR2(30)     := 'CREATE_DELIVERABLES';
    l_msg_index_out              NUMBER;

    i       NUMBER := 0;
    i_actn  NUMBER := 0;

    l_resp_id NUMBER := FND_GLOBAL.Resp_id;
    l_function_allowed      VARCHAR2(1);
    l_pm_product_code VARCHAR2(2) :='Z';                          /* Bug 3651113 */

    -- 3651542 added local variable

    l_dlvr_owner_id             PA_PROJ_ELEMENTS.MANAGER_PERSON_ID%TYPE;
    l_dlvr_owner_name           PER_ALL_PEOPLE_F.FULL_NAME%TYPE;
    l_default_date              DATE;

  /*cursor added for Bug 3651113 */
  Cursor p_product_code_csr (p_pm_product_code IN VARCHAR2)
  Is
  Select 'X'
  from pa_lookups
  where lookup_type='PM_PRODUCT_CODE'
  and lookup_code = p_pm_product_code;

  l_wp_task_flag varchar2(1); -- Added for bug5462298

BEGIN
 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    -- 3735792 , setting save point unconditionally
    -- IF (p_commit = FND_API.G_TRUE) THEN
    savepoint CREATE_DELIVERABLE_PUB;
    -- END IF;

-- Validation check for product code : Bug 3651113

    OPEN p_product_code_csr (p_pm_source_code);
    FETCH p_product_code_csr INTO l_pm_product_code;
    CLOSE p_product_code_csr;

    IF l_pm_product_code <> 'X'
           AND p_pm_source_code <> 'WORKPLAN'
    THEN
         IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
         THEN
         pa_interface_utils_pub.map_new_amg_msg
         ( p_old_message_code => 'PA_PRODUCT_CODE_IS_INVALID'
          ,p_msg_attribute    => 'CHANGE'
          ,p_resize_flag      => 'N'
          ,p_msg_context      => 'GENERAL'
          ,p_attribute1       => ''
          ,p_attribute2       => ''
          ,p_attribute3       => ''
          ,p_attribute4       => ''
          ,p_attribute5       => '');
         END IF;
    x_return_status             := FND_API.G_RET_STS_ERROR;
    RAISE FND_API.G_EXC_ERROR;
    END IF;

    IF p_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => p_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
     END IF;

   --  Set API return status to success
    x_return_status     := FND_API.G_RET_STS_SUCCESS;


    IF p_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       l_task_id := NULL;
    ELSE
       l_task_id := p_task_id;
    END IF;


    IF p_task_source_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_task_source_reference := NULL;
    ELSE
       l_task_source_reference := p_task_source_reference;
    END IF;



    -- Function Security Check
    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
    (p_api_version_number => p_api_version,
     p_responsibility_id  => l_resp_id,
     p_function_name      => 'PA_DELIVERABLE_EDIT',
     p_msg_count          => x_msg_count,
     p_msg_data           => x_msg_data,
     p_return_status      => x_return_status,
     p_function_allowed   => l_function_allowed);

     IF p_debug_mode = 'Y' THEN
          pa_debug.write(g_pkg_name,'Func Security Return Status ['||x_return_status||']Func Allow['||l_function_allowed||']',3) ;
     END IF;

     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

    IF l_function_allowed = 'N' THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name  => 'PA'
                             ,p_msg_name         => 'PA_FUNCTION_SECURITY_ENFORCED');
         x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

 -- validate the input parameters.
 -- Get the task and Project details based on source reference passed
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_proj_source_reference
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF p_debug_mode = 'Y' THEN
         pa_debug.write(g_pkg_name,'Proj Ref to ID Return Status ['||x_return_status||']Proj ID['||l_project_id||']',3) ;
    END IF;

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

    IF ( l_task_id IS NOT NULL OR l_task_source_reference IS NOT NULL ) THEN
       PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'WORKPLAN'
                 , p_pa_task_id         => p_task_id
                 , p_pm_task_reference  => p_task_source_reference
                 , p_out_task_id        => l_task_id
                 , p_return_status      => x_return_status );

       IF p_debug_mode = 'Y' THEN
           pa_debug.write(g_pkg_name,'Task Ref to ID Return Status ['||x_return_status||']Task ID['||l_task_id||']',3) ;
       END IF;

       IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
       ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
             RAISE FND_API.G_EXC_ERROR;
       END IF;

       -- 5462298 Added below code to validate passed task id
       -- if it is not workplan task , throw error message

       l_wp_task_flag := PA_PROJ_ELEMENTS_UTILS.CHECK_IS_WORKPLAN_TASK (
                                           p_project_id         => l_project_id
                                         , p_proj_element_id    => l_task_id );

       IF l_wp_task_flag <> 'Y' THEN

        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
        THEN

           PA_UTILS.ADD_MESSAGE(p_app_short_name  => 'PA'
                               ,p_msg_name         => 'PA_TASK_ID_INVALID');

           x_return_status := FND_API.G_RET_STS_ERROR;
           RAISE FND_API.G_EXC_ERROR;

        END IF;

       END IF;

       -- 5462298 end

    END IF;

 -- Validate Deliverable reference - not null, unique
    PA_Deliverable_Utils.is_dlvr_reference_unique(
           p_deliverable_reference  => p_pm_deliverable_reference
         , p_project_id         => l_project_id
         , x_unique_flag        => l_unique_flag
         , x_return_status      => x_return_status );

    IF p_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Dlvr Reference Unique Return Status ['||x_return_status||']Unique['||l_unique_flag||']',3) ;
    END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

 -- Fetching Task Name , Project Name to use as token in Error Messages.

   IF (l_task_id IS NOT NULL) THEN
      SELECT name INTO   l_task_number
      FROM Pa_Proj_Elements
      WHERE  proj_element_id = l_task_id;
   ELSE
       l_task_number := null;
   END IF;

   SELECT segment1 INTO   l_project_number
   FROM Pa_Projects_All
   WHERE  project_id = l_project_id;

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'Creating deliverable ['|| p_deliverable_short_name||']['||p_pm_deliverable_reference||']['
                                ||p_deliverable_owner_id||']['||p_deliverable_Type_id||']['||l_project_id||']['||l_task_id||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

 -- Check if deliverable is enabled for project.
 -- If not then first enable it before creating the deliverable.

    -- 3700247, check for G_DLVR_STRUCTURE_ENABLED parameter, if it is null,
    -- check for target project, whether deliverable is enabled or not
    -- if deliverable is not enabled and deliverables are loaded, throw error message

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'Deliverable Enabled ['||G_DLVR_STRUCTURE_ENABLED||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

    IF G_DLVR_STRUCTURE_ENABLED IS NULL THEN
        G_DLVR_STRUCTURE_ENABLED := Pa_Project_Structure_Utils.Check_Deliverable_Enabled(l_project_id);

        IF p_debug_mode = 'Y' THEN
           pa_debug.g_err_stage := 'Deliverable Enabled ['||G_DLVR_STRUCTURE_ENABLED||']';
           pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
        END IF;
    END IF;

    IF G_DLVR_STRUCTURE_ENABLED = 'N' THEN
        PA_UTILS.ADD_MESSAGE(p_app_short_name  => 'PA'
                            ,p_msg_name         => 'PA_DLV_STRUCTURE_DISABLED');
        x_return_status := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;
    END IF;

    -- 3700247, if deliverable structure is not enabled for target and deliverables are passed in loading,
    -- error message is thrown. So, removing the below code , which enables the structure for the target project in
    -- above condition.

/*
    l_dlvr_enabled := Pa_Project_Structure_Utils.Check_Deliverable_Enabled(l_project_id);

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'Deliverable Enabled ['||l_dlvr_enabled||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

    IF ( l_dlvr_enabled = 'N' ) THEN

    Pa_Deliverable_Utils.enable_deliverable(
           p_api_version            => p_api_version
         , p_init_msg_list          => FND_API.G_FALSE
         , p_commit                 => p_commit
         , p_debug_mode             => p_debug_mode
         , p_validate_only          => FND_API.G_FALSE
         , p_project_id             => l_project_id
         , x_return_status          => x_return_status
         , x_msg_count              => x_msg_count
         , x_msg_data               => x_msg_data
         );

        IF p_debug_mode = 'Y' THEN
            pa_debug.write(g_pkg_name,'Pa_Deliverable_Utils.enable_deliverable Return Status ['||x_return_status||']',3) ;
        END IF;

        IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
            RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
            RAISE FND_API.G_EXC_ERROR;
        END IF;

    END IF; -- deliverable not enabled
*/


   -- 3651542 if deliverable onwer and date is not passed
   -- call util api to retrieve default value and assign it to local variables
   -- if it is passed, use the passed owner id and due date

   -- here in defaulting , considered only project flow
   -- task flow is not considered and passing task ver id as NULL

   IF p_deliverable_owner_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       PA_DELIVERABLE_UTILS.GET_DEFAULT_DLVR_OWNER
            (
                 p_project_id   =>  p_project_id
                ,p_task_ver_id  =>  NULL
                ,x_owner_id     =>  l_dlvr_owner_id
                ,x_owner_name   =>  l_dlvr_owner_name
            );
   ELSE
       l_dlvr_owner_id := p_deliverable_owner_id;
   END IF;

   IF p_due_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE THEN
       PA_DELIVERABLE_UTILS.GET_DEFAULT_DLVR_DATE
            (
                 p_project_id   =>  p_project_id
                ,p_task_ver_id  =>  NULL
                ,x_due_date     =>  l_default_date
            );
   ELSE
       l_default_date := p_due_date;
   END IF;

   -- 3651542 end

 -- All other validations done in PA_DELIVERABLE_PUB.CREATE_DELIVERABLE
 --invoke the api to create deliverable
    Pa_Deliverable_Pub.Create_Deliverable
    (  p_api_version            =>  p_api_version
     , p_init_msg_list          =>  FND_API.G_FALSE -- passed as false as doesn't want message stack to be reset.
      -- 3735792, passing p_commit as false to next level api calls
     , p_commit                 =>  FND_API.G_FALSE
     , p_validate_only          =>  FND_API.G_FALSE
     , p_validation_level       =>  FND_API.G_VALID_LEVEL_FULL
     , p_calling_module         =>  'AMG'
     , p_debug_mode             =>  p_debug_mode
     , p_max_msg_count          =>  NULL
     , p_record_version_number  =>  1
     , p_object_type            =>  'PA_DELIVERABLES'
     , p_project_id             =>  l_project_id
     , p_dlvr_number            =>  p_deliverable_short_name
     , p_dlvr_name              =>  p_deliverable_name
     , p_dlvr_description       =>  p_description
     , p_dlvr_owner_id          =>  l_dlvr_owner_id     -- for bug# 3651542, earlier p_deliverable_owner_id was passed
     , p_dlvr_owner_name        =>  NULL
     -- for bug# 3729250
     --     , p_carrying_out_org_id    =>  p_carrying_out_org_id
     , p_carrying_out_org_name  =>  NULL
     , p_dlvr_version_id        =>  null
     , p_status_code            =>  p_status_code
     , p_parent_structure_id    =>  NULL
     , p_dlvr_type_id           =>  p_deliverable_type_id
     , p_dlvr_type_name         =>  NULL
     , p_progress_weight        =>  p_progress_weight
     , p_scheduled_finish_date  =>  l_default_date      -- for bug# 3651542, earlier p_due_date was passed
     , p_actual_finish_date     =>  p_completion_date
     , p_task_id                =>  l_task_id
     , p_task_version_id        =>  null
     , p_task_name              =>  null
     , p_deliverable_reference  =>  p_pm_deliverable_reference
     , p_item_id                =>  p_item_id
     , p_inventory_org_id       =>  p_inventory_org_id
     , p_quantity               =>  p_quantity
     , p_uom_code               =>  p_uom_code
     -- for bug# 3729250
     --     , p_item_description       =>  p_item_description
     , p_unit_price             =>  p_unit_price
     , p_unit_number            =>  p_unit_number
     , p_currency_code          =>  p_currency_code
     , p_dlvr_item_id           =>  px_deliverable_id
     , p_pm_source_code         =>  p_pm_source_code                       /* Bug no. 3651113 */
     , x_return_status          =>  x_return_status
     , x_msg_count              =>  x_msg_count
     , x_msg_data               =>  x_msg_data
    );

       l_deliverable_element_id := px_deliverable_id ;

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'Created deliverable ['|| l_deliverable_element_id||']['||x_return_status||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;


   IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
          RAISE  FND_API.G_EXC_ERROR;
   END IF;
-- Will create actions only when deliverable type of deliverable
-- has action creation enabled.

   Pa_Deliverable_Utils.GET_DLVR_TYPE_INFO
   (
       p_dlvr_type_id                 =>  p_deliverable_type_id
      ,x_dlvr_prg_enabled             =>  l_dlvr_prg_enabled
      ,x_dlvr_action_enabled          =>  l_dlvr_action_enabled
      ,x_dlvr_default_status_code     =>  l_status_code
    );

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'Dlvr Type allow action creation ['|| l_dlvr_action_enabled||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

-- invoke the api pa_actions_pub.create_dlvr_action_wrapper
-- to create actions for the deliverable, insert records
-- in OKE tables, create events if required.

   i := p_action_in_tbl.first();
   l_action_in_tbl.delete;


   WHILE (i IS NOT NULL ) LOOP
      IF ( p_pm_deliverable_reference = p_action_in_tbl(i).pm_deliverable_reference) THEN
          i_actn := i_actn + 1;
          l_action_in_tbl(i_actn) := p_action_in_tbl(i);
          l_action_in_tbl(i_actn).deliverable_id   :=  l_deliverable_element_id;

         -- added for bug# 3749447
         -- if pm_source_code is not passed in action record, use it from deliverable record
         IF p_action_in_tbl(i).pm_source_code IS NOT NULL and p_action_in_tbl(i).pm_source_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
             l_action_in_tbl(i_actn).pm_source_code := p_pm_source_code;
         END IF;

      END IF;
      i := p_action_in_tbl.next(i);
   END LOOP;

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'About to Create ['|| i_actn ||'] out of ['||i ||'] Actn enabled ['||l_dlvr_action_enabled||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;


   IF (i_actn > 0 ) THEN

       IF ( l_dlvr_action_enabled = 'Y') THEN

          Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper
          ( p_api_version            => p_api_version
          , p_init_msg_list          => FND_API.G_FALSE
          , p_commit                 => FND_API.G_FALSE
          , p_validate_only          => FND_API.G_FALSE
          , p_validation_level       => FND_API.G_VALID_LEVEL_FULL
          , p_calling_module         => 'AMG'
          , p_debug_mode             => p_debug_mode
          , p_insert_or_update       => 'INSERT'
          , p_action_in_tbl          => l_action_in_tbl
          , x_action_out_tbl         => x_action_out_tbl
          , x_return_status          => x_return_status
          , x_msg_count              => x_msg_count
          , x_msg_data               => x_msg_data);

         IF p_debug_mode = 'Y' THEN
             pa_debug.g_err_stage := 'Returned after Create actions for ['|| i_actn ||'] action return['||x_return_status||']';
             pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
         END IF;

         IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
                RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
         ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
                RAISE  FND_API.G_EXC_ERROR;
         END IF;

      ELSE --l_dlvr_action_enabled <> 'Y'

            IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)  THEN
                l_err_message := FND_MESSAGE.GET_STRING('PA','DLVR_ACTION_NOT_ENABLED') ;
                PA_UTILS.ADD_MESSAGE
                               (p_app_short_name => 'PA',
                                p_msg_name       => 'PA_DLVR_VALID_ERR',
                                p_token1         => 'PROJECT',
                                p_value1         =>  l_project_number,
                                p_token2         =>  'TASK',
                                p_value2         =>  l_task_number,
                                p_token3         => 'DLVR_REFERENCE',
                                p_value3         =>  p_pm_deliverable_reference,
                                p_token4         => 'MESSAGE',
                                p_value4         =>  l_err_message
                               );
            END IF;

            x_return_status             := FND_API.G_RET_STS_ERROR;
            RAISE FND_API.G_EXC_ERROR;
      END IF; -- l_dlvr_action_enabled = 'Y'

   END IF; --i_actn > 0

   -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
   IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
   END IF;

   IF p_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
   WHEN FND_API.G_EXC_ERROR        THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point , don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO CREATE_DELIVERABLE_PUB;
      --END IF;

      IF p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
      END IF;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      IF x_msg_count = 1 THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => x_msg_data,
                p_data           => l_data, -- 4537865 Changed from x_msg_data to l_data ,as it may have problem with NOCOPY
                p_msg_index_out  => l_msg_index_out);
        x_msg_data := l_data ; -- 4537865
     END IF;

   WHEN FND_API.G_EXC_UNEXPECTED_ERROR        THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO CREATE_DELIVERABLE_PUB;
      --END IF;

      IF p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
      END IF;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      IF x_msg_count = 1 THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => x_msg_data,
                p_data           => l_data, --  4537865 Changed from x_msg_data to l_data ,as it may have problem with NOCOPY
                p_msg_index_out  => l_msg_index_out);
                x_msg_data := l_data ; -- 4537865
     END IF;

   WHEN OTHERS THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO CREATE_DELIVERABLE_PUB;
      --END IF;

      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := 1;
      x_msg_data := SQLERRM;

      IF p_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
      END IF;

   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)       THEN
       FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name            => G_PKG_NAME
                   , p_procedure_name      => l_api_name   );
  END IF;
END create_deliverable;

PROCEDURE create_deliverable_action
(   p_api_version                  IN  NUMBER   := 1.0
  , p_init_msg_list                IN  VARCHAR2 := FND_API.G_TRUE
  , p_debug_mode                   IN  VARCHAR2 := FND_API.G_FALSE
  , p_commit                       IN  VARCHAR2 := FND_API.G_FALSE
  , p_action_name                  IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_action_owner_id              IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_function_code                IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_due_date                     IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_description                  IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_completion_date              IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_pm_source_code               IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_pm_action_reference          IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- for bug# 3729250
  --  , p_carrying_out_org_id          IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_deliverable_reference        IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_deliverable_id               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- added for bug# 3729250
  , p_pm_proj_reference            IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_id                   IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- added for bug# 3729250
  , p_financial_task_reference     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_financial_task_id            IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_destination_type_code        IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_receiving_org_id             IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_receiving_location_id        IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_po_need_by_date              IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_vendor_id                    IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_vendor_site_code             IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--  , p_project_currency             IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_Quantity                     IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_uom_code                     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_unit_price                   IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_exchange_rate_type           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_exchange_rate_date           IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_exchange_rate                IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_expenditure_type             IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_expenditure_org_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_expenditure_item_date        IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_requisition_line_type_id     IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_category_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ready_to_procure_flag        IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_initiate_procure_flag        IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_ship_from_organization_id    IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ship_from_location_id        IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ship_to_organization_id      IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ship_to_location_id          IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_demand_schedule              IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_expected_shipment_date       IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_promised_shipment_date       IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_volume                       IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_volume_uom                   IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_weight                       IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_weight_uom                   IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_ready_to_ship_flag           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_initiate_planning_flag       IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_initiate_shipping_flag       IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_event_type                   IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_currency                     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR -- 3749462 changed datatype
  , p_invoice_amount               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_revenue_amount               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_event_date                   IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_event_number                 IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_organization_id              IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_bill_hold_flag               IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_functional_rate_type IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_functional_rate_date IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_project_functional_rate      IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_project_rate_type            IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_rate_date            IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_project_rate                 IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_funding_rate_type            IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_funding_rate_date            IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_funding_rate                 IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_pm_event_reference           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR -- 3651489 added parameter
  , x_action_out                   OUT NOCOPY  action_out_tbl_type
  , x_return_status                OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
  , x_msg_count                    OUT NOCOPY NUMBER     /*Added the nocopy check for 4537865 */
  , x_msg_data                     OUT NOCOPY VARCHAR2   /*Added the nocopy check for 4537865 */
  )
IS

    -- 3749462 changed the cursor, added two parameters and using it
    Cursor C_dlvr_type(l_project_id NUMBER, l_deliverable_id NUMBER) IS
       SELECT type_id
       FROM   PA_PROJ_ELEMENTS
       WHERE  proj_element_id = l_deliverable_id
       AND    project_id      = l_project_id
       AND    OBJECT_TYPE     = 'PA_DELIVERABLES';

    l_api_name      CONSTANT  VARCHAR2(30)     := 'create_deliverable_actions';

    l_action_in_tbl   action_in_tbl_type ;
    l_action_out_tbl  action_out_tbl_type ;

    l_project_id NUMBER;
    l_task_id    NUMBER;
    l_project_number          Pa_Projects_All.Segment1%TYPE;
    l_task_number             Pa_Proj_Elements.Name%TYPE;
    l_dlvr_type_id            Pa_Proj_Elements.type_id%TYPE;

    l_dlvr_prg_enabled  VARCHAR2(1) := NULL;
    l_dlvr_action_enabled  VARCHAR2(1) := NULL;
    l_status_code   PA_PROJ_ELEMENTS.STATUS_CODE%TYPE;

    l_msg_index_out              NUMBER;
    l_msg_count                  NUMBER ;
    l_data                       VARCHAR2(2000);
    l_msg_data                   VARCHAR2(2000);
    l_err_message                VARCHAR2(2000);
    l_unique_flag                VARCHAR2(1);

    l_function_allowed      VARCHAR2(1);
    l_resp_id NUMBER := FND_GLOBAL.Resp_id;

    l_deliverable_id NUMBER := 0;

    i  NUMBER := 1;

    -- 3729250 added local variables
    l_fin_task_id   NUMBER := NULL;

BEGIN

--  Standard begin of API savepoint

    -- 3735792, setting save point unconditionally
 -- IF (p_commit = FND_API.G_TRUE) THEN
    SAVEPOINT create_deliverable_actions_pub;
 -- END IF;

--  Standard call to check for call compatibility.
    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version  ,
                               l_api_name         ,
                               G_PKG_NAME       )
    THEN
       RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

--  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )   THEN
       FND_MSG_PUB.initialize;
    END IF;

    IF p_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => p_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF;

--  Set API return status to success
    x_return_status := FND_API.G_RET_STS_SUCCESS;

-- Function Security Check
    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
    (p_api_version_number => p_api_version,
     p_responsibility_id  => l_resp_id,
     p_function_name      => 'PA_DELIVERABLE_EDIT',
     p_msg_count          => x_msg_count,
     p_msg_data           => x_msg_data,
     p_return_status      => x_return_status,
     p_function_allowed   => l_function_allowed);

     IF p_debug_mode = 'Y' THEN
          pa_debug.write(g_pkg_name,'Func Security Return Status ['||x_return_status||']Func Allow['||l_function_allowed||']',3) ;
     END IF;

     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

     IF l_function_allowed = 'N' THEN
        pa_interface_utils_pub.map_new_amg_msg
        ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
         ,p_msg_attribute    => 'CHANGE'
         ,p_resize_flag      => 'Y'
         ,p_msg_context      => 'GENERAL'
         ,p_attribute1       => ''
         ,p_attribute2       => ''
         ,p_attribute3       => ''
         ,p_attribute4       => ''
         ,p_attribute5       => '');

     x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

 -- validate the input parameters.
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_pm_proj_reference -- 3729250 , earlier was passed as null
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF p_debug_mode = 'Y' THEN
         pa_debug.write(g_pkg_name,'Proj Ref to ID Return Status ['||x_return_status||']Proj ID['||l_project_id||']',3) ;
    END IF;

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

 -- Validate Deliverable reference / ID
    PA_Deliverable_Utils.Convert_pm_dlvrref_to_id(
          p_deliverable_reference => p_deliverable_reference
        , p_deliverable_id        => p_deliverable_id
        , p_project_id            => l_project_id
        , p_out_deliverable_id    => l_deliverable_id
        , p_return_status         => x_return_status);

    IF p_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Dlvr Reference Ref to ID ['||l_deliverable_id||'] Return Status ['||x_return_status||']',3) ;
    END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

    -- 3729250, Validate Financial Task Reference / ID
    -- PA_PROJECT_PVT.Convert_pm_taskref_to_id_all should only be called if either p_financial_task_id or
    -- p_financial_task_reference is passed

    IF ( ( p_financial_task_id IS NOT NULL AND p_financial_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) OR
         ( p_financial_task_reference IS NOT NULL AND p_financial_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) ) THEN

        PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'FINANCIAL'
                 , p_pa_task_id         => p_financial_task_id
                 , p_pm_task_reference  => p_financial_task_reference
                 , p_out_task_id        => l_fin_task_id
                 , p_return_status      => x_return_status );

        IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
              RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
              RAISE FND_API.G_EXC_ERROR;
        END IF;

   END IF;

-- Validate Action reference - not null, unique
   pa_deliverable_utils.is_action_reference_unique (
         p_action_reference      => p_pm_action_reference
       , p_deliverable_id        => l_deliverable_id
       , p_project_id            => l_project_id
       , x_unique_flag           => l_unique_flag
       , x_return_status         => x_return_status
       );

    IF p_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Action Reference Unique Return Status ['||x_return_status||']Unique['||l_unique_flag||']',3) ;
    END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

-- Derive the dlvr_Type of a deliverable
   -- 3749462 passing l_project_id and l_deliverable_id to cursor
   -- earlier p_project_id and p_deliverable_id was used directly, which may be G_PA_MISS_NUM and
   -- cursor will return l_dlvr_type_id as NULL

   OPEN C_dlvr_type(l_project_id,l_deliverable_id);
   FETCH C_dlvr_Type INTO l_dlvr_type_id;
   CLOSE  C_dlvr_type;

-- Will create actions only when deliverable type of deliverable
-- has action creation enabled.

   Pa_Deliverable_Utils.GET_DLVR_TYPE_INFO
   (
       p_dlvr_type_id                 =>  l_dlvr_type_id
      ,x_dlvr_prg_enabled             =>  l_dlvr_prg_enabled
      ,x_dlvr_action_enabled          =>  l_dlvr_action_enabled
      ,x_dlvr_default_status_code     =>  l_status_code
    );

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'Dlvr Type allow action creation ['|| l_dlvr_action_enabled||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

--  Populate the table with input parameters
    ---- --dbms_output.put_line('loading');

    IF ( i IS NOT NULL ) THEN

       IF (l_dlvr_action_enabled = 'Y') THEN

           l_action_in_tbl(i).action_name                 :=  p_action_name                 ;
           l_action_in_tbl(i).action_owner_id             :=  p_action_owner_id             ;
           l_action_in_tbl(i).function_code               :=  p_function_code               ;
           l_action_in_tbl(i).due_date                    :=  p_due_date                    ;
           l_action_in_tbl(i).description                 :=  p_description                 ;
           l_action_in_tbl(i).completion_date             :=  p_completion_date             ;
           l_action_in_tbl(i).pm_source_code              :=  p_pm_source_code              ;
           l_action_in_tbl(i).pm_action_reference         :=  p_pm_action_reference         ;
           -- for bug# 3729250
--           l_action_in_tbl(i).carrying_out_org_id         :=  p_carrying_out_org_id         ;
           l_action_in_tbl(i).pm_deliverable_reference    :=  p_deliverable_reference       ;
           l_action_in_tbl(i).deliverable_id              :=  l_deliverable_id              ;   -- 3749462 earlier p_deliverable_id was passed
           l_action_in_tbl(i).financial_task_id           :=  l_fin_task_id                 ; -- for bug# 3729250
           l_action_in_tbl(i).destination_type_code       :=  p_destination_type_code       ;
           l_action_in_tbl(i).receiving_org_id            :=  p_receiving_org_id            ;
           l_action_in_tbl(i).receiving_location_id       :=  p_receiving_location_id       ;
           l_action_in_tbl(i).po_need_by_date             :=  p_po_need_by_date             ;
           l_action_in_tbl(i).vendor_id                   :=  p_vendor_id                   ;
           l_action_in_tbl(i).vendor_site_code            :=  p_vendor_site_code            ;
           l_action_in_tbl(i).Quantity                    :=  p_Quantity                    ;
           l_action_in_tbl(i).uom_code                    :=  p_uom_code                    ;
           l_action_in_tbl(i).unit_price                  :=  p_unit_price                  ;
           l_action_in_tbl(i).exchange_rate_type          :=  p_exchange_rate_type          ;
           l_action_in_tbl(i).exchange_rate_date          :=  p_exchange_rate_date          ;
           l_action_in_tbl(i).exchange_rate               :=  p_exchange_rate               ;
           l_action_in_tbl(i).expenditure_type            :=  p_expenditure_type            ;
           l_action_in_tbl(i).expenditure_org_id          :=  p_expenditure_org_id          ;
           l_action_in_tbl(i).expenditure_item_date       :=  p_expenditure_item_date       ;
           l_action_in_tbl(i).requisition_line_type_id    :=  p_requisition_line_type_id    ;
           l_action_in_tbl(i).category_id                 :=  p_category_id                 ;
           l_action_in_tbl(i).ready_to_procure_flag       :=  p_ready_to_procure_flag       ;
           l_action_in_tbl(i).initiate_procure_flag       :=  p_initiate_procure_flag       ;
           l_action_in_tbl(i).ship_from_organization_id   :=  p_ship_from_organization_id   ;
           l_action_in_tbl(i).ship_from_location_id       :=  p_ship_from_location_id       ;
           l_action_in_tbl(i).ship_to_organization_id     :=  p_ship_to_organization_id     ;
           l_action_in_tbl(i).ship_to_location_id         :=  p_ship_to_location_id         ;
           l_action_in_tbl(i).demand_schedule             :=  p_demand_schedule             ;
           l_action_in_tbl(i).expected_shipment_date      :=  p_expected_shipment_date      ;
           l_action_in_tbl(i).promised_shipment_date      :=  p_promised_shipment_date      ;
           l_action_in_tbl(i).volume                      :=  p_volume                      ;
           l_action_in_tbl(i).volume_uom                  :=  p_volume_uom                  ;
           l_action_in_tbl(i).weight                      :=  p_weight                      ;
           l_action_in_tbl(i).weight_uom                  :=  p_weight_uom                  ;
           l_action_in_tbl(i).ready_to_ship_flag          :=  p_ready_to_ship_flag          ;
           l_action_in_tbl(i).initiate_planning_flag      :=  p_initiate_planning_flag      ;
           l_action_in_tbl(i).initiate_shipping_flag      :=  p_initiate_shipping_flag      ;
           l_action_in_tbl(i).event_type                  :=  p_event_type                  ;
           l_action_in_tbl(i).currency                    :=  p_currency                    ;
           l_action_in_tbl(i).invoice_amount              :=  p_invoice_amount              ;
           l_action_in_tbl(i).revenue_amount              :=  p_revenue_amount              ;
           l_action_in_tbl(i).event_date                  :=  p_event_date                  ;
           l_action_in_tbl(i).event_number                :=  p_event_number                ;
           l_action_in_tbl(i).organization_id             :=  p_organization_id             ;
           l_action_in_tbl(i).bill_hold_flag              :=  p_bill_hold_flag              ;
           l_action_in_tbl(i).project_functional_rate_type:=  p_project_functional_rate_type;
           l_action_in_tbl(i).project_functional_rate_date:=  p_project_functional_rate_date;
           l_action_in_tbl(i).project_functional_rate     :=  p_project_functional_rate     ;
           l_action_in_tbl(i).project_rate_type           :=  p_project_rate_type           ;
           l_action_in_tbl(i).project_rate_date           :=  p_project_rate_date           ;
           l_action_in_tbl(i).project_rate                :=  p_project_rate                ;
           l_action_in_tbl(i).funding_rate_type           :=  p_funding_rate_type           ;
           l_action_in_tbl(i).funding_rate_date           :=  p_funding_rate_date           ;
           l_action_in_tbl(i).funding_rate                :=  p_funding_rate                ;
           l_action_in_tbl(i).pm_event_reference          :=  p_pm_event_reference          ; -- 3651489 added parameter


      ELSE --l_dlvr_action_enabled <> 'Y'

     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)  THEN
              l_err_message := FND_MESSAGE.GET_STRING('PA','DLVR_ACTION_NOT_ENABLED') ;
              PA_UTILS.ADD_MESSAGE
                               (p_app_short_name => 'PA',
                                p_msg_name       => 'PA_DLVR_VALID_ERR',
                                p_token1         => 'PROJECT',
                                p_value1         =>  l_project_number,
                                p_token2         =>  'TASK',
                                p_value2         =>  l_task_number,
                                p_token3         => 'DLVR_REFERENCE',
                                p_value3         =>  p_deliverable_reference,
                                p_token4         => 'MESSAGE',
                                p_value4         =>  l_err_message
                               );
     END IF;
           x_return_status             := FND_API.G_RET_STS_ERROR;
          RAISE FND_API.G_EXC_ERROR;

      END IF; -- l_dlvr_action_enabled = 'Y'
    END IF;

--  Call api to create actions  passing the newly populated plsql table
    Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper
    ( p_api_version            => p_api_version
    , p_init_msg_list          => FND_API.G_FALSE
    , p_commit                 => FND_API.G_FALSE
    , p_validate_only          => FND_API.G_FALSE
    , p_validation_level       => FND_API.G_VALID_LEVEL_FULL
    , p_calling_module         => 'AMG'
    , p_debug_mode             => p_debug_mode
    , p_insert_or_update       => 'INSERT'
    , p_action_in_tbl          => l_action_in_tbl
    , x_action_out_tbl         => l_action_out_tbl
    , x_return_status          => x_return_status
    , x_msg_count              => l_msg_count
    , x_msg_data               => l_msg_data);

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'Returned from Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper ['|| x_return_status||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;     i := l_action_out_tbl.first();

   -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
   IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
   END IF;

   IF p_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
  WHEN FND_API.G_EXC_ERROR  THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
  --  IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO create_deliverable_actions_pub;
  --  END IF;

      x_return_status := FND_API.G_RET_STS_ERROR;
      l_msg_count := FND_MSG_PUB.count_msg;

      IF l_msg_count = 1 AND x_msg_data IS NULL
      THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;

     END IF;

     IF  p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
     END IF;

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR  THEN
     -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
     --IF (p_commit = FND_API.G_TRUE) THEN
     ROLLBACK TO create_deliverable_actions_pub;
     --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF l_msg_count = 1 AND x_msg_data IS NULL
     THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;

     END IF;

     IF  p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
     END IF;

   WHEN OTHERS THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO create_deliverable_actions_pub;
      --END IF;

      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := 1;
      x_msg_data := SQLERRM;

      IF p_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
      END IF;


      IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)       THEN
       FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name            => G_PKG_NAME
                   , p_procedure_name      => l_api_name   );
     END IF;
  END create_deliverable_action;

--------------------------------------------------------------------------------
--Name:               Update_Deliverable
--Type:               Procedure
--Description:        This procedure updates a deliverable and its related actions
--                    which are passed through actions PLSQL table
--
--Called subprograms:   PA_DELIVERABLE_PUB.UPDATE_DELIVERABLE
--                      Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper
--
--
--
--History:
--    08-Mar-2004   Puneet            Created
--

PROCEDURE update_deliverable
(   p_api_version            IN  NUMBER     := 1.0
  , p_init_msg_list          IN  VARCHAR2   := 'F'
  , p_commit                 IN  VARCHAR2   := FND_API.G_FALSE
  , p_debug_mode             IN  VARCHAR2   := 'N'
  , x_return_status          OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  , p_deliverable_name       IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_deliverable_short_name IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_deliverable_type_id    IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_deliverable_owner_id   IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_description            IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_status_code            IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_due_date               IN  DATE       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_completion_date        IN  DATE       := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_progress_weight        IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , px_deliverable_id        IN OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
  , p_pm_deliverable_reference IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- for bug# 3729250
--  , p_carrying_out_org_id    IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_task_id                IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_task_source_reference  IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_id             IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_proj_source_reference  IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_action_in_tbl          IN  action_in_tbl_type := G_deliverable_actions_in_tbl -- 3435905 passing default
  , x_action_out_tbl         OUT NOCOPY action_out_tbl_type /*Added the nocopy check for 4537865 */
  , p_item_id                IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , P_inventory_org_id       IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_quantity               IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_uom_code               IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- for bug# 3729250
--  , p_item_description       IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_unit_price             IN  NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- for bug# 3729250
  , p_unit_number            IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_currency_code          IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_pm_source_code         IN  VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR              /* Bug no. 3651113 */
  , x_msg_count              OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
  , x_msg_data               OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  )

  IS
    l_project_id NUMBER;
    l_task_id    NUMBER;
    l_task_source_reference VARCHAR2(240);
    l_msg_count NUMBER;
    l_msg_data VARCHAR2(2000);
    l_msg_index_out              NUMBER;
    l_data                       VARCHAR2(2000);


    l_deliverable_id NUMBER;
    l_action_id      NUMBER;
    l_deliverable_version_id NUMBER;

    l_action_in_tbl_ins action_in_tbl_type;
    l_action_in_tbl_upd action_in_tbl_type;

    l_api_name      CONSTANT  VARCHAR2(30)     := 'UPDATE_DELIVERABLE';

    i      NUMBER := 0;
    i_actn NUMBER := 0;
    i_actn_ins NUMBER := 0;
    i_actn_upd NUMBER := 0;

    l_function_allowed      VARCHAR2(1);
    l_resp_id NUMBER := FND_GLOBAL.Resp_id;
    l_pm_product_code VARCHAR2(2) :='Z';                          /* Bug 3651113 */

    /*cursor added for Bug 3651113 */
    Cursor p_product_code_csr (p_pm_product_code IN VARCHAR2)
    Is
    Select 'X'
    from pa_lookups
    where lookup_type='PM_PRODUCT_CODE'
    and lookup_code = p_pm_product_code;

     Cursor C_vers (p_proj_element_id NUMBER) IS
     SELECT   vers.element_version_id
     FROM     pa_proj_element_versions vers
           ,  pa_proj_elements elem
     WHERE    vers.proj_element_id = elem.proj_element_id
     AND      elem.project_id  = vers.project_id
     AND      elem.proj_element_id  = p_proj_element_id
     AND      elem.project_id  = vers.project_id
     AND      elem.object_type = 'PA_DELIVERABLES';

     l_dlvr_id NUMBER; -- added for bug# 3749447

BEGIN
 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;
---- --dbms_output.put_line('entering pa_project_pub.Update_deliverable['||p_project_id||']['||p_task_id||']');

    -- 3735792, setting save point unconditionally
    --IF (p_commit = FND_API.G_TRUE) THEN
    savepoint UPDATE_DELIVERABLE_PUB;
    --END IF;

    IF p_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => p_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF;

-- Validation check for product code : Bug 3651113

    OPEN p_product_code_csr (p_pm_source_code);
    FETCH p_product_code_csr INTO l_pm_product_code;
    CLOSE p_product_code_csr;

    IF l_pm_product_code <> 'X'
           AND p_pm_source_code <> 'WORKPLAN'
    THEN
         IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
         THEN
         pa_interface_utils_pub.map_new_amg_msg
         ( p_old_message_code => 'PA_PRODUCT_CODE_IS_INVALID'
          ,p_msg_attribute    => 'CHANGE'
          ,p_resize_flag      => 'N'
          ,p_msg_context      => 'GENERAL'
          ,p_attribute1       => ''
          ,p_attribute2       => ''
          ,p_attribute3       => ''
          ,p_attribute4       => ''
          ,p_attribute5       => '');
         END IF;
    x_return_status             := FND_API.G_RET_STS_ERROR;
    RAISE FND_API.G_EXC_ERROR;
    END IF;

 --  Set API return status to success
    x_return_status     := FND_API.G_RET_STS_SUCCESS;

    IF p_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       l_task_id := NULL;
    ELSE
       l_task_id := p_task_id;
    END IF;

    IF p_task_source_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_task_source_reference := NULL;
    ELSE
       l_task_source_reference := p_task_source_reference;
    END IF;

-- Function Security Check
    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
    (p_api_version_number => p_api_version,
     p_responsibility_id  => l_resp_id,
     p_function_name      => 'PA_DELIVERABLE_EDIT',
     p_msg_count          => x_msg_count,
     p_msg_data           => x_msg_data,
     p_return_status      => x_return_status,
     p_function_allowed   => l_function_allowed);

     IF p_debug_mode = 'Y' THEN
          pa_debug.write(g_pkg_name,'Func Security Return Status ['||x_return_status||']Func Allow['||l_function_allowed||']',3) ;
     END IF;

     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

     IF l_function_allowed = 'N' THEN
        pa_interface_utils_pub.map_new_amg_msg
        ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
         ,p_msg_attribute    => 'CHANGE'
         ,p_resize_flag      => 'Y'
         ,p_msg_context      => 'GENERAL'
         ,p_attribute1       => ''
         ,p_attribute2       => ''
         ,p_attribute3       => ''
         ,p_attribute4       => ''
         ,p_attribute5       => '');

     x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

 -- validate the input parameters.
 -- Get the task and Project details based on source reference passed
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_proj_source_reference
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF p_debug_mode = 'Y' THEN
         pa_debug.write(g_pkg_name,'Proj Ref to ID Return Status ['||x_return_status||']Proj ID['||l_project_id||']',3) ;
    END IF;

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

    -- 3749447 Changed from p_task_id to l_task_id in if conditon
    -- also did the same change in below api's parameter passing

    IF ( l_task_id IS NOT NULL OR l_task_source_reference IS NOT NULL ) THEN
       PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'WORKPLAN'
                 , p_pa_task_id         => l_task_id
                 , p_pm_task_reference  => l_task_source_reference
                 , p_out_task_id        => l_task_id
                 , p_return_status      => x_return_status );

       IF p_debug_mode = 'Y' THEN
           pa_debug.write(g_pkg_name,'Task Ref to ID Return Status ['||x_return_status||']Task ID['||l_task_id||']',3) ;
       END IF;

       IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
       ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
             RAISE FND_API.G_EXC_ERROR;
       END IF;
    END IF;

 -- Validate Deliverable reference / id- not null, unique
    Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
      (   p_deliverable_reference => p_pm_deliverable_reference
        , p_deliverable_id        => px_deliverable_id
        , p_project_id            => l_project_id
        , p_out_deliverable_id    => l_deliverable_id
        , p_return_status         => x_return_status
      );

    IF p_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Dlvr Reference Ref to ID ['||l_deliverable_id||'] Return Status ['||x_return_status||']',3) ;
    END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

    OPEN C_vers(l_deliverable_id);
    FETCH C_vers INTO l_deliverable_version_id;
    CLOSE C_vers;

    IF p_debug_mode = 'Y' THEN
       pa_debug.write(g_pkg_name,'Updatinging deliverable ['|| p_deliverable_short_name||']['||l_deliverable_id||']['||l_project_id||']['||l_task_id||']',3);
    END IF;

 -- All other validations done in PA_DELIVERABLE_PUB.UPDATE_DELIVERABLE
 --invoke the api to Update deliverable

    Pa_Deliverable_Pub.Update_Deliverable
    (  p_api_version            =>  p_api_version
     , p_init_msg_list          =>  p_init_msg_list
     -- 3735792, passing p_commit as false to next level api calls
     , p_commit                 =>  FND_API.G_FALSE
     , p_validate_only          =>  FND_API.G_FALSE
     , p_validation_level       =>  FND_API.G_VALID_LEVEL_FULL
     , p_calling_module         =>  'AMG'
     , p_debug_mode             =>  p_debug_mode
     , p_max_msg_count          =>  NULL
     , p_record_version_number  =>  null
     , p_object_type            =>  'PA_DELIVERABLES'
     , p_project_id             =>  l_project_id
     , p_dlvr_number            =>  p_deliverable_short_name
     , p_dlvr_name              =>  p_deliverable_name
     , p_dlvr_description       =>  p_description
     , p_dlvr_owner_id          =>  p_deliverable_owner_id
     , p_dlvr_owner_name        =>  NULL
     -- for bug# 3729250
--     , p_carrying_out_org_id    =>  p_carrying_out_org_id
     , p_carrying_out_org_name  =>  NULL
     , p_dlvr_version_id        =>  l_deliverable_version_id --3733221
     , p_status_code            =>  p_status_code
     , p_parent_structure_id    =>  NULL
     , p_dlvr_type_id           =>  p_deliverable_type_id
     , p_dlvr_type_name         =>  NULL
     , p_progress_weight        =>  p_progress_weight
     , p_scheduled_finish_date  =>  p_due_date
     , p_actual_finish_date     =>  p_completion_date
     , p_task_id                =>  l_task_id
     , p_task_version_id        =>  null
     , p_task_name              =>  null
     , p_deliverable_reference  =>  p_pm_deliverable_reference
     , p_item_id                =>  p_item_id
     , p_inventory_org_id       =>  p_inventory_org_id
     , p_quantity               =>  p_quantity
     , p_uom_code               =>  p_uom_code
     -- for bug# 3729250
--     , p_item_description       =>  p_item_description
     , p_unit_price             =>  p_unit_price
     , p_unit_number            =>  p_unit_number
     , p_currency_code          =>  p_currency_code
     , p_dlvr_item_id           =>  l_deliverable_id -- 3749447 changed from px_deliverable_id to l_deliverable_id
     , p_pm_source_code         =>  p_pm_source_code -- 3749447 passing p_pm_source_code
     , x_return_status          =>  x_return_status
     , x_msg_count              =>  l_msg_count
     , x_msg_data               =>  l_msg_data
    );

    -- 3749447 assigning the derived deliverale id, this is required in the below case
    -- while calling update_deliverable, if user has passed only deliverable reference,
    -- after api execution, returned value for px_deliverable_id will be g_pa_miss_num
    px_deliverable_id := l_deliverable_id;

    x_msg_count              := l_msg_count;
    x_msg_data               := l_msg_data;

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'Pa_Deliverable_Pub.Update_Deliverable return status ['||x_return_status||']';
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

   IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
          RAISE  FND_API.G_EXC_ERROR;
   END IF;

-- From the action_in table, select the actions for the given deliverable.
-- Based on action_reference / action_id identify if new action is to
-- to be created or existing action is to be updated.

   i := p_action_in_tbl.first();

   -- added for bug# 3749447, added below code to handle following scenario
   -- if user has not passed deliverable id in action record , only deliverable reference is passed
   -- and for deliverable record not passed passed deliverable id
   -- in this case, passed action will not be considered for update or create

   -- deriving deliverable id from deliverable reference

   IF i IS NOT NULL THEN
       Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
         (   p_deliverable_reference => p_action_in_tbl(i).pm_deliverable_reference
           , p_deliverable_id        => p_action_in_tbl(i).deliverable_id
           , p_project_id            => l_project_id
           , p_out_deliverable_id    => l_dlvr_id
           , p_return_status         => x_return_status
         );

        IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
            RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
            RAISE FND_API.G_EXC_ERROR;
        END IF;

   END IF;

   WHILE (i IS NOT NULL ) LOOP
      IF ( p_pm_deliverable_reference = p_action_in_tbl(i).pm_deliverable_reference OR
           px_deliverable_id = l_dlvr_id ) THEN -- 3749447 using derived deliverable id instead of passed id, for above mentioned case

          -- action is for current deliverable only
          IF (p_action_in_tbl(i).action_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
              p_action_in_tbl(i).action_id = NULL) THEN
             l_action_id := NULL;
          ELSE
             l_action_id := p_action_in_tbl(i).action_id;
          END IF;

          i_actn := i_actn + 1;

          -- added for bug# 3749447, added if condition to check for not null action id
          -- if action id not null, then and only then , action reference to id validation should be done
          -- in case of new action below validon will fail and will not allow user to create new actions from update_deliverable

          IF l_action_id IS NOT NULL THEN
              Pa_Deliverable_Utils.Convert_pm_actionref_to_id      (
                    p_action_reference  =>  p_action_in_tbl(i_actn).pm_action_reference
                   ,p_action_id         =>  l_action_id
                   ,p_deliverable_id    =>  l_deliverable_id
                   ,p_project_id        =>  l_Project_id
                   ,p_out_action_id     =>  l_action_id
                   ,p_return_status     =>  x_return_status
                   );
          END IF;

         IF p_debug_mode = 'Y' THEN
           pa_debug.write(g_pkg_name,'Dlvr Action Reference Valid Return Status ['||x_return_status||']Action ID['||l_action_id||']',3) ;
         END IF;

         IF (l_action_id is NOT NULL) THEN
            -- action is an existing action and is to be updated
            i_actn_upd := i_actn_upd + 1 ;
            l_action_in_tbl_upd(i_actn_upd) := p_action_in_tbl(i);

            -- added for bug# 3749447
            -- passing derived values of action id and deliverable id
            -- when ever deliverable and action reference is passed , update will not work
            l_action_in_tbl_upd(i_actn_upd).action_id := l_action_id;
            l_action_in_tbl_upd(i_actn_upd).deliverable_id := l_deliverable_id;

            -- added for bug# 3749447
            -- if for action record , pm_source_code is not passed , use it from deliverable pm source code
            IF p_action_in_tbl(i).pm_source_code IS NOT NULL and p_action_in_tbl(i).pm_source_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                l_action_in_tbl_upd(i_actn_upd).pm_source_code := p_pm_source_code;
            END IF;

         ELSE
            -- New action is to be created.
            i_actn_ins := i_actn_ins + 1 ;
            l_action_in_tbl_ins(i_actn_ins) := p_action_in_tbl(i);

            -- added for bug# 3749447
            -- passing derived values of action id and deliverable id
            -- when ever deliverable reference is passed , create will not work
            l_action_in_tbl_ins(i_actn_ins).deliverable_id := l_deliverable_id;

            -- added for bug# 3749447
            -- if pm_source_code is not passed in action record, use it from deliverable record

            IF p_action_in_tbl(i).pm_source_code IS NOT NULL and p_action_in_tbl(i).pm_source_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
                l_action_in_tbl_ins(i_actn_ins).pm_source_code := p_pm_source_code;
            END IF;

         END IF; -- l_action_id is NULL

      END IF; -- deliverable reference
      i := p_action_in_tbl.next(i);     -- added for bug# 3749447, next was not done
   END LOOP;

    IF p_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Uploaded action detail for Updation/Insertion upd ['||i_actn_upd||'] ins ['||i_actn_ins||'] tot ['||i_actn||']',3) ;
    END IF;

   IF (i_actn_upd > 0 ) THEN

-- There are actions to be updated
       Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper
       ( p_api_version            => p_api_version
       , p_init_msg_list          => FND_API.G_FALSE
       , p_commit                 => FND_API.G_FALSE
       , p_validate_only          => FND_API.G_FALSE
       , p_validation_level       => FND_API.G_VALID_LEVEL_FULL
       , p_calling_module         => 'AMG'
       , p_debug_mode             => p_debug_mode
       , p_insert_or_update       => 'UPDATE'
       , p_action_in_tbl          => l_action_in_tbl_upd
       , x_action_out_tbl         => x_action_out_tbl
       , x_return_status          => x_return_status
       , x_msg_count              => l_msg_count
       , x_msg_data               => l_msg_data);

      IF p_debug_mode = 'Y' THEN
          pa_debug.write(g_pkg_name,'Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper upd return status['||x_return_status||']',3) ;
      END IF;

      IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
             RAISE  FND_API.G_EXC_ERROR;
      END IF;

   END IF; --i_actn_upd > 0

   IF (i_actn_ins > 0 ) THEN

-- There are actions to be updated
       Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper
       ( p_api_version            => p_api_version
       , p_init_msg_list          => FND_API.G_FALSE
       , p_commit                 => FND_API.G_FALSE
       , p_validate_only          => FND_API.G_FALSE
       , p_validation_level       => FND_API.G_VALID_LEVEL_FULL
       , p_calling_module         => 'AMG'
       , p_debug_mode             => p_debug_mode
       , p_insert_or_update       => 'INSERT'
       , p_action_in_tbl          => l_action_in_tbl_ins
       , x_action_out_tbl         => x_action_out_tbl
       , x_return_status          => x_return_status
       , x_msg_count              => l_msg_count
       , x_msg_data               => l_msg_data);

      IF p_debug_mode = 'Y' THEN
          pa_debug.write(g_pkg_name,'Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper upd return status['||x_return_status||']',3) ;
      END IF;

      IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
             RAISE  FND_API.G_EXC_ERROR;
      END IF;

   END IF; --i_actn_upd > 0

   -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
   IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
   END IF;

   IF p_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
   WHEN FND_API.G_EXC_ERROR        THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO UPDATE_DELIVERABLE_PUB;
      --END IF;

      IF p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
      END IF;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      IF x_msg_count = 1 THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => x_msg_data,
                p_data           => l_data, --  4537865 Changed from x_msg_data to l_data ,as it may have problem with NOCOPY
                p_msg_index_out  => l_msg_index_out);
        x_msg_data := l_data ; -- 4537865
     END IF;

   WHEN FND_API.G_EXC_UNEXPECTED_ERROR        THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO UPDATE_DELIVERABLE_PUB;
      --END IF;

      IF p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
      END IF;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      IF x_msg_count = 1 THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => x_msg_data,
                p_data           => l_data, --  4537865 Changed from x_msg_data to l_data ,as it may have problem with NOCOPY
                p_msg_index_out  => l_msg_index_out);
                x_msg_data := l_data ; -- 4537865
     END IF;

   WHEN OTHERS THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO UPDATE_DELIVERABLE_PUB;
      --END IF;

      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := 1;
      x_msg_data := SQLERRM;

      IF p_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
      END IF;


   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)       THEN
       FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name            => G_PKG_NAME
                   , p_procedure_name      => l_api_name   );
  END IF;
END update_deliverable;


PROCEDURE update_deliverable_action
(   p_api_version                  IN  NUMBER   := 1.0
  , p_init_msg_list                IN  VARCHAR2 := FND_API.G_TRUE
  , p_debug_mode                   IN  VARCHAR2 := FND_API.G_FALSE
  , p_commit                       IN  VARCHAR2 := FND_API.G_FALSE
  , p_action_name                  IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_action_owner_id              IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_function_code                IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_due_date                     IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_description                  IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_completion_date              IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_pm_source_code               IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_pm_action_reference          IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  -- added for bug# 3729250
  , p_action_id                    IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- for bug# 3729250
  --  , p_carrying_out_org_id          IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_deliverable_reference        IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_deliverable_id               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- added for bug# 3729250
  , p_pm_proj_reference            IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_id                   IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_financial_task_id            IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- added for bug# 3729250
  , p_financial_task_reference     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_destination_type_code        IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_receiving_org_id             IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_receiving_location_id        IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_po_need_by_date              IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_vendor_id                    IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_vendor_site_code             IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
--  , p_project_currency             IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_Quantity                     IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_uom_code                     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_unit_price                   IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_exchange_rate_type           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_exchange_rate_date           IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_exchange_rate                IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_expenditure_type             IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_expenditure_org_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_expenditure_item_date        IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_requisition_line_type_id     IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_category_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ready_to_procure_flag        IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_initiate_procure_flag        IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_ship_from_organization_id    IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ship_from_location_id        IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ship_to_organization_id      IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_ship_to_location_id          IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_demand_schedule              IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_expected_shipment_date       IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_promised_shipment_date       IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_volume                       IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_volume_uom                   IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_weight                       IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_weight_uom                   IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_ready_to_ship_flag           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_initiate_planning_flag       IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_initiate_shipping_flag       IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_event_type                   IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_currency                     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR -- 3749474 changed data type
  , p_invoice_amount               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_revenue_amount               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_event_date                   IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_event_number                 IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_organization_id              IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_bill_hold_flag               IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_functional_rate_type IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_functional_rate_date IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_project_functional_rate      IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_project_rate_type            IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_rate_date            IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_project_rate                 IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_funding_rate_type            IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_funding_rate_date            IN  DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
  , p_funding_rate                 IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_pm_event_reference           IN  VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR -- 3651489 added parameter
  , x_action_out                   OUT NOCOPY  action_out_tbl_type
  , x_return_status                OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  , x_msg_count                    OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
  , x_msg_data                     OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  )
IS
    l_api_name      CONSTANT  VARCHAR2(30)     := 'update_deliverable_actions';

    l_action_in_tbl   action_in_tbl_type ;
    l_action_out_tbl  action_out_tbl_type ;

    l_msg_count     NUMBER   := null;
    l_msg_data      VARCHAR2(2000) := null;
    l_msg_index_out              NUMBER;
    l_data                       VARCHAR2(2000);


    l_project_id   NUMBER := null;
    l_deliverable_id NUMBER := null;
    l_function_allowed      VARCHAR2(1);
    l_resp_id NUMBER := FND_GLOBAL.Resp_id;

    -- 3729250 added local variables
    l_fin_task_id   NUMBER := NULL;
    l_action_id     NUMBER := NULL;

    i  NUMBER := 1;
BEGIN

--  Standard begin of API savepoint
    SAVEPOINT update_deliverable_actions_pub;

--  Standard call to check for call compatibility.
    IF NOT FND_API.Compatible_API_Call ( g_api_version_number  ,
                               p_api_version  ,
                               l_api_name         ,
                               G_PKG_NAME       )
    THEN
       RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

--  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )   THEN
       FND_MSG_PUB.initialize;
    END IF;

    IF p_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => p_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF;
--  Set API return status to success
    x_return_status := FND_API.G_RET_STS_SUCCESS;

-- Function Security Check
    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
    (p_api_version_number => p_api_version,
     p_responsibility_id  => l_resp_id,
     p_function_name      => 'PA_DELIVERABLE_EDIT',
     p_msg_count          => x_msg_count,
     p_msg_data           => x_msg_data,
     p_return_status      => x_return_status,
     p_function_allowed   => l_function_allowed);


     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

     IF l_function_allowed = 'N' THEN
        pa_interface_utils_pub.map_new_amg_msg
        ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
         ,p_msg_attribute    => 'CHANGE'
         ,p_resize_flag      => 'Y'
         ,p_msg_context      => 'GENERAL'
         ,p_attribute1       => ''
         ,p_attribute2       => ''
         ,p_attribute3       => ''
         ,p_attribute4       => ''
         ,p_attribute5       => '');

     x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

 -- validate the input parameters.
 -- Validate Project reference/id
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_pm_proj_reference -- 3729250, earlier was passed as null
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF p_debug_mode = 'Y' THEN
         pa_debug.write(g_pkg_name,'Proj Ref to ID Return Status ['||x_return_status||']Proj ID['||l_project_id||']',3) ;
    END IF;

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

 -- Validate Deliverable reference / ID
    PA_Deliverable_Utils.Convert_pm_dlvrref_to_id(
          p_deliverable_reference => p_deliverable_reference
        , p_deliverable_id        => p_deliverable_id
        , p_project_id            => l_project_id
        , p_out_deliverable_id    => l_deliverable_id
        , p_return_status         => x_return_status);

    IF p_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Dlvr Reference Ref to ID Return Status ['||x_return_status,3) ;
    END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;


 -- 3729250 Validate Deliverable Action reference / ID
    PA_Deliverable_Utils.Convert_pm_actionref_to_id(
          p_action_reference      => p_pm_action_reference
        , p_action_id             => p_action_id
        , p_deliverable_id        => l_deliverable_id
        , p_project_id            => l_project_id
        , p_out_action_id         => l_action_id
        , p_return_status         => x_return_status);

    IF p_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Convert_pm_actionref_to_id Return Status ['||x_return_status,3) ;
    END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

    -- 3729250, Validate Financial Task Reference / ID
    -- PA_PROJECT_PVT.Convert_pm_taskref_to_id_all should only be called if either p_financial_task_id or
    -- p_financial_task_reference is passed

    IF ( ( p_financial_task_id IS NOT NULL AND p_financial_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM ) OR
         ( p_financial_task_reference IS NOT NULL AND p_financial_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) ) THEN
        PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'FINANCIAL'
                 , p_pa_task_id         => p_financial_task_id
                 , p_pm_task_reference  => p_financial_task_reference
                 , p_out_task_id        => l_fin_task_id
                 , p_return_status      => x_return_status );

        IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
              RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
              RAISE FND_API.G_EXC_ERROR;
        END IF;
    END IF;

--  Populate the table with input parameters

    IF ( i IS NOT NULL ) THEN
       l_action_in_tbl(i).action_name                 :=  p_action_name                 ;
       l_action_in_tbl(i).action_owner_id             :=  p_action_owner_id             ;
       l_action_in_tbl(i).function_code               :=  p_function_code               ;
       l_action_in_tbl(i).due_date                    :=  p_due_date                    ;
       l_action_in_tbl(i).description                 :=  p_description                 ;
       l_action_in_tbl(i).completion_date             :=  p_completion_date             ;
       l_action_in_tbl(i).pm_source_code              :=  p_pm_source_code              ;
       l_action_in_tbl(i).pm_action_reference         :=  p_pm_action_reference         ;
       -- for bug# 3729250
--       l_action_in_tbl(i).carrying_out_org_id         :=  p_carrying_out_org_id         ;
       l_action_in_tbl(i).pm_deliverable_reference    :=  p_deliverable_reference       ;
       l_action_in_tbl(i).deliverable_id              :=  l_deliverable_id              ; -- 3749474 earlier p_deliverable_id was passed
       l_action_in_tbl(i).financial_task_id           :=  l_fin_task_id                 ; -- for bug# 3729250
       l_action_in_tbl(i).destination_type_code       :=  p_destination_type_code       ;
       l_action_in_tbl(i).receiving_org_id            :=  p_receiving_org_id            ;
       l_action_in_tbl(i).receiving_location_id       :=  p_receiving_location_id       ;
       l_action_in_tbl(i).po_need_by_date             :=  p_po_need_by_date             ;
       l_action_in_tbl(i).vendor_id                   :=  p_vendor_id                   ;
       l_action_in_tbl(i).vendor_site_code            :=  p_vendor_site_code            ;
--       l_action_in_tbl(i).project_currency            :=  p_project_currency            ;
       l_action_in_tbl(i).Quantity                    :=  p_Quantity                    ;
       l_action_in_tbl(i).uom_code                    :=  p_uom_code                    ;
       l_action_in_tbl(i).unit_price                  :=  p_unit_price                  ;
       l_action_in_tbl(i).exchange_rate_type          :=  p_exchange_rate_type          ;
       l_action_in_tbl(i).exchange_rate_date          :=  p_exchange_rate_date          ;
       l_action_in_tbl(i).exchange_rate               :=  p_exchange_rate               ;
       l_action_in_tbl(i).expenditure_type            :=  p_expenditure_type            ;
       l_action_in_tbl(i).expenditure_org_id          :=  p_expenditure_org_id          ;
       l_action_in_tbl(i).expenditure_item_date       :=  p_expenditure_item_date       ;
       l_action_in_tbl(i).requisition_line_type_id    :=  p_requisition_line_type_id    ;
       l_action_in_tbl(i).category_id                 :=  p_category_id                 ;
       l_action_in_tbl(i).ready_to_procure_flag       :=  p_ready_to_procure_flag       ;
       l_action_in_tbl(i).initiate_procure_flag       :=  p_initiate_procure_flag       ;
       l_action_in_tbl(i).ship_from_organization_id   :=  p_ship_from_organization_id   ;
       l_action_in_tbl(i).ship_from_location_id       :=  p_ship_from_location_id       ;
       l_action_in_tbl(i).ship_to_organization_id     :=  p_ship_to_organization_id     ;
       l_action_in_tbl(i).ship_to_location_id         :=  p_ship_to_location_id         ;
       l_action_in_tbl(i).demand_schedule             :=  p_demand_schedule             ;
       l_action_in_tbl(i).expected_shipment_date      :=  p_expected_shipment_date      ;
       l_action_in_tbl(i).promised_shipment_date      :=  p_promised_shipment_date      ;
       l_action_in_tbl(i).volume                      :=  p_volume                      ;
       l_action_in_tbl(i).volume_uom                  :=  p_volume_uom                  ;
       l_action_in_tbl(i).weight                      :=  p_weight                      ;
       l_action_in_tbl(i).weight_uom                  :=  p_weight_uom                  ;
       l_action_in_tbl(i).ready_to_ship_flag          :=  p_ready_to_ship_flag          ;
       l_action_in_tbl(i).initiate_planning_flag      :=  p_initiate_planning_flag      ;
       l_action_in_tbl(i).initiate_shipping_flag      :=  p_initiate_shipping_flag      ;
       l_action_in_tbl(i).event_type                  :=  p_event_type                  ;
       l_action_in_tbl(i).currency                    :=  p_currency                    ;
       l_action_in_tbl(i).invoice_amount              :=  p_invoice_amount              ;
       l_action_in_tbl(i).revenue_amount              :=  p_revenue_amount              ;
       l_action_in_tbl(i).event_date                  :=  p_event_date                  ;
       l_action_in_tbl(i).event_number                :=  p_event_number                ;
       l_action_in_tbl(i).organization_id             :=  p_organization_id             ;
       l_action_in_tbl(i).bill_hold_flag              :=  p_bill_hold_flag              ;
       l_action_in_tbl(i).project_functional_rate_type:=  p_project_functional_rate_type;
       l_action_in_tbl(i).project_functional_rate_date:=  p_project_functional_rate_date;
       l_action_in_tbl(i).project_functional_rate     :=  p_project_functional_rate     ;
       l_action_in_tbl(i).project_rate_type           :=  p_project_rate_type           ;
       l_action_in_tbl(i).project_rate_date           :=  p_project_rate_date           ;
       l_action_in_tbl(i).project_rate                :=  p_project_rate                ;
       l_action_in_tbl(i).funding_rate_type           :=  p_funding_rate_type           ;
       l_action_in_tbl(i).funding_rate_date           :=  p_funding_rate_date           ;
       l_action_in_tbl(i).funding_rate                :=  p_funding_rate                ;
       l_action_in_tbl(i).pm_event_reference          :=  p_pm_event_reference          ; -- 3651489 added parameter
       l_action_in_tbl(i).action_id                   :=  l_action_id                   ; -- 3729250 added parameter
    END IF;

--  Call api to update actions  passing the newly populated plsql table
    Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper
    ( p_api_version            => p_api_version
    , p_init_msg_list          => FND_API.G_FALSE
    , p_commit                 => FND_API.G_FALSE
    , p_validate_only          => FND_API.G_FALSE
    , p_validation_level       => FND_API.G_VALID_LEVEL_FULL
    , p_calling_module         => 'AMG'
    , p_debug_mode             => p_debug_mode
    , p_insert_or_update       => 'UPDATE'
    , p_action_in_tbl          => l_action_in_tbl
    , x_action_out_tbl         => l_action_out_tbl
    , x_return_status          => x_return_status
    , x_msg_count              => l_msg_count
    , x_msg_data               => l_msg_data);

    -- 3749474 added code to check for return status

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
          RAISE FND_API.G_EXC_ERROR;
    END IF;

---- --dbms_output.put_line('after  Pa_Actions_Pub.Create_Dlvr_Actions_Wrapper'||x_return_status);
     i := l_action_out_tbl.first();

     WHILE i IS NOT NULL LOOP
        ---- --dbms_output.put_line('action created ['||l_action_out_tbl(i).action_id||'] status ['||l_action_out_tbl(i).return_status);
        i := l_action_out_tbl.next(i);
     END LOOP;

    -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
    IF (p_commit = FND_API.G_TRUE) THEN
        COMMIT;
    END IF;

    IF p_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
   WHEN FND_API.G_EXC_ERROR        THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO update_deliverable_actions_pub;
      --END IF;

      IF p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
      END IF;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      IF x_msg_count = 1 THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => x_msg_data,
                p_data           => l_data, --4537865 Changed from x_msg_data to l_data ,as it may have problem with NOCOPY
                p_msg_index_out  => l_msg_index_out);
        x_msg_data := l_data ; -- 4537865
     END IF;

   WHEN FND_API.G_EXC_UNEXPECTED_ERROR        THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO update_deliverable_actions_pub;
      --END IF;

      IF p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
      END IF;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      IF x_msg_count = 1 THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => x_msg_data,
                p_data           => l_data,-- 4537865 Changed from x_msg_data to l_data ,as it may have problem with NOCOPY
                p_msg_index_out  => l_msg_index_out);
                x_msg_data := l_data ; -- 4537865
     END IF;

   WHEN OTHERS THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      -- IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO update_deliverable_actions_pub;
      -- END IF;

      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := 1;
      x_msg_data := SQLERRM;

      IF p_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
      END IF;

   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)       THEN
       FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name            => G_PKG_NAME
                   , p_procedure_name      => l_api_name   );
  END IF;

  END update_deliverable_action;


-- SubProgram           : DELETE_DELIVERABLES
-- Type                 : PUBLIC FUNCTION
-- Purpose              : This function will delete the deliverable - Single record
-- Assumptions          : None

Procedure Delete_Deliverables (
   p_api_version              IN  NUMBER   := 1.0
  ,p_init_msg_list            IN  VARCHAR2 := FND_API.G_FALSE
  ,p_commit                   IN  VARCHAR2 := FND_API.G_FALSE
  ,p_pm_source_code           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_pm_project_reference     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_project_id               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  --for bug# 3729250
  ,p_deliverable_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,p_pm_dlv_source_reference  IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,x_return_status            OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  ,x_msg_count                OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
  ,x_msg_data                 OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
)IS
  l_api_name VARCHAR2(30) := 'Delete_Deliverables';
  l_deliverable_id NUMBER;
  l_dlvr_version_id NUMBER;
  l_project_id NUMBER;
  l_function_allowed      VARCHAR2(1);
  l_resp_id NUMBER := FND_GLOBAL.Resp_id;

  l_debug_mode VARCHAR2(1) := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');
  l_msg_index_out              NUMBER;
  l_msg_count                  NUMBER ;
  l_data                       VARCHAR2(2000);
  l_msg_data                   VARCHAR2(2000);


BEGIN
 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    -- 3735792, setting save point unconditionally
    --IF (p_commit = FND_API.G_TRUE) THEN
    savepoint DELETE_DELIVERABLE_PUB;
    --END IF;

    IF l_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => l_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF;

 --  Set API return status to success
    x_return_status     := FND_API.G_RET_STS_SUCCESS;

-- Function Security Check
    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
    (p_api_version_number => p_api_version,
     p_responsibility_id  => l_resp_id,
     p_function_name      => 'PA_DELIVERABLE_EDIT',
     p_msg_count          => x_msg_count,
     p_msg_data           => x_msg_data,
     p_return_status      => x_return_status,
     p_function_allowed   => l_function_allowed);

     IF l_debug_mode = 'Y' THEN
          pa_debug.write(g_pkg_name,'Func Security Return Status ['||x_return_status||']Func Allow['||l_function_allowed||']',3) ;
     END IF;

     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

     IF l_function_allowed = 'N' THEN
        PA_UTILS.ADD_MESSAGE(p_app_short_name  => 'PA'
                            ,p_msg_name         => 'PA_FUNCTION_SECURITY_ENFORCED');
         x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

-- validate the input parameters.
-- Validate Project Reference / ID
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_pm_project_reference
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF l_debug_mode = 'Y' THEN
         pa_debug.write(g_pkg_name,'Proj Ref to ID Return Status ['||x_return_status||']Proj ID['||l_project_id||']',3) ;
    END IF;

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

-- Validate Deliverable Reference / ID
    Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
      (   p_deliverable_reference => p_pm_dlv_source_reference
        -- for bug# 3729250
        , p_deliverable_id        => p_deliverable_id
        , p_project_id            => l_project_id
        , p_out_deliverable_id    => l_deliverable_id
        , p_return_status         => x_return_status
      );

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Dlvr Reference Valid Return Status ['||x_return_status||']Dlvr ID['||l_deliverable_id||']',3) ;
    END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

-- Derive deliverable version ID and call api Delete Deliverable. It
     l_dlvr_version_id := Pa_Deliverable_Utils.Get_Deliverable_Version_Id (l_deliverable_id, null, l_project_id) ;

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Derived Dlvr Version ID ['||l_dlvr_version_id||'] for Dlvr ID['||l_deliverable_id||']',3) ;
    END IF;

-- deletes the corresponding actions and associations also.
   IF ( l_dlvr_version_id IS NOT NULL )
   THEN
      pa_deliverable_pvt.delete_deliverable
         (p_api_version         => p_api_version
         ,p_init_msg_list       => FND_API.G_FALSE
         -- 3735792, passing p_commit as false to next level api calls
         ,p_commit              => FND_API.G_FALSE
         ,p_validate_only       => FND_API.G_FALSE
         ,p_validation_level    => FND_API.G_VALID_LEVEL_FULL
         ,p_calling_module      => 'AMG'
         ,p_debug_mode          => l_debug_mode
         ,p_max_msg_count       => null
         ,p_dlv_element_id      => l_deliverable_id
         ,p_dlv_version_id      => l_dlvr_version_id
         ,p_rec_ver_number      => null
         ,p_project_id          => l_project_id
         ,x_return_status       => x_return_status
         ,x_msg_count           => x_msg_count
         ,x_msg_data            => x_msg_data   );

     IF l_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,' after pa_deliverable_pvt.delete_deliverable ['||x_return_status||']',3) ;
     END IF;

     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
     END IF;

   END IF;

   -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
   IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
   END IF;

   IF l_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
  WHEN FND_API.G_EXC_ERROR  THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO DELETE_DELIVERABLE_PUB;
      --END IF;

      x_return_status := FND_API.G_RET_STS_ERROR;
      l_msg_count := FND_MSG_PUB.count_msg;

      IF l_msg_count = 1 AND x_msg_data IS NULL
      THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;

     END IF;

     IF  l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
     END IF;

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR  THEN
     -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
     --IF (p_commit = FND_API.G_TRUE) THEN
     ROLLBACK TO DELETE_DELIVERABLE_PUB;
     --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF l_msg_count = 1 AND x_msg_data IS NULL
     THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF  l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
     END IF;

  WHEN OTHERS THEN
    -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
    --IF (p_commit = FND_API.G_TRUE) THEN
    ROLLBACK TO DELETE_DELIVERABLE_PUB;
    --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count := 1;
     x_msg_data := SQLERRM;

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
     END IF;

     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)THEN
       FND_MSG_PUB.add_exc_msg
           ( p_pkg_name    => G_PKG_NAME
           , p_procedure_name  => l_api_name  );
    END IF;

END Delete_Deliverables;

-- SubProgram           : DELETE_DELIVERABLE_ACTIONS
-- Type                 : PUBLIC FUNCTION
-- Purpose              : This function will delete the action - Single record
-- Assumptions          : None

PROCEDURE delete_deliverable_actions
(  p_api_version              IN  NUMBER   := 1.0 -- 3749480 earlier defaulted with G_PA_MISS_NUM ; Bug#3451073 Removed Quotes
  ,p_init_msg_list            IN  VARCHAR2 := FND_API.G_FALSE
  ,p_commit                   IN  VARCHAR2 := FND_API.G_FALSE
  ,p_pm_source_code           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_pm_project_reference     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_project_id               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- for bug# 3729250 , changed datatype from NUMBER TO VARCHAR2
  ,p_pm_deliverable_reference IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_deliverable_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  -- for bug# 3729250 , changed datatype from NUMBER TO VARCHAR2
  ,p_action_source_reference  IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  ,p_action_id                IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  ,x_return_status            OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
  ,x_msg_count                OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
  ,x_msg_data                 OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
)

IS
  l_api_name VARCHAR2(30) := 'Delete_Deliverable_Actions';
  l_debug_mode VARCHAR2(1) := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

  l_project_id NUMBER ;
  l_action_id NUMBER;
  l_action_version_id NUMBER;
  l_deliverable_id NUMBER;
  l_dlvr_version_id NUMBER;
  l_function_code  Pa_Proj_Elements.function_code%TYPE;

  l_function_allowed      VARCHAR2(1);
  l_resp_id NUMBER := FND_GLOBAL.Resp_id;

  l_msg_index_out              NUMBER;
  l_msg_count                  NUMBER ;
  l_data                       VARCHAR2(2000);
  l_msg_data                   VARCHAR2(2000);

BEGIN
 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    -- 3735792, setting save point unconditionally
    --IF (p_commit = FND_API.G_TRUE) THEN
    savepoint DELETE_DELIVERABLE_ACTION_PUB;
    --END IF;

    IF l_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => l_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF;
 --  Set API return status to success
    x_return_status     := FND_API.G_RET_STS_SUCCESS;

-- Function Security Check
    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
    (p_api_version_number => p_api_version,
     p_responsibility_id  => l_resp_id,
     p_function_name      => 'PA_DELIVERABLE_EDIT',
     p_msg_count          => x_msg_count,
     p_msg_data           => x_msg_data,
     p_return_status      => x_return_status,
     p_function_allowed   => l_function_allowed);

     IF l_debug_mode = 'Y' THEN
          pa_debug.write(g_pkg_name,'Func Security Return Status ['||x_return_status||']Func Allow['||l_function_allowed||']',3) ;
     END IF;

     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

     IF l_function_allowed = 'N' THEN
        pa_interface_utils_pub.map_new_amg_msg
        ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
         ,p_msg_attribute    => 'CHANGE'
         ,p_resize_flag      => 'Y'
         ,p_msg_context      => 'GENERAL'
         ,p_attribute1       => ''
         ,p_attribute2       => ''
         ,p_attribute3       => ''
         ,p_attribute4       => ''
         ,p_attribute5       => '');

     x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

-- validate the input parameters.
-- Validate Project Reference / ID
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_pm_project_reference
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF l_debug_mode = 'Y' THEN
         pa_debug.write(g_pkg_name,'Proj Ref to ID Return Status ['||x_return_status||']Proj ID['||l_project_id||']',3) ;
    END IF;

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

-- Validate Deliverable Reference / ID
    Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
      (   p_deliverable_reference => p_pm_deliverable_reference
        , p_deliverable_id        => p_deliverable_id
        , p_project_id            => l_project_id
        , p_out_deliverable_id    => l_deliverable_id
        , p_return_status         => x_return_status
      );

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Dlvr Reference Valid Return Status ['||x_return_status||']Dlvr ID['||l_deliverable_id||']',3) ;
    END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

-- Validate Action Reference / ID
    Pa_Deliverable_Utils.Convert_pm_actionref_to_id
    (
       p_action_reference   =>  p_action_source_reference
      ,p_action_id          =>  p_action_id
      ,p_deliverable_id     =>  l_deliverable_id -- 3749480 earlier p_deliverable_id was used
      ,p_project_id         =>  l_project_id
      ,p_out_action_id      =>  l_action_id
      ,p_return_status      =>  x_return_status
    );

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Dlvr Action Reference Valid Return Status ['||x_return_status||']Action ID['||l_action_id||']',3) ;
    END IF;

   IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

-- Derive Deliverable_version_id
   l_dlvr_version_id := Pa_Deliverable_Utils.Get_Deliverable_Version_Id (l_deliverable_id, null, l_project_id) ;

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Derived Dlvr Version ID ['||l_dlvr_version_id||'] for Dlvr ID['||l_deliverable_id||']',3) ;
    END IF;

-- Derive Action_version_id and Function Code
   l_action_version_id := Pa_Deliverable_Utils.Get_Action_Version_Id (l_action_id, null, l_project_id) ;
   l_function_code     := Pa_Deliverable_Utils.GET_FUNCTION_CODE(l_action_id) ;

    IF l_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,'Derived Action version ID  ['||l_action_version_id||']and function code ['||l_function_code||']',3) ;
    END IF;

-- Calling Actions API to delete actions.

   pa_actions_pvt.DELETE_DLV_ACTION
     (p_api_version           =>  p_api_version
     ,p_init_msg_list         =>  FND_API.G_FALSE
     ,p_commit                =>  FND_API.G_FALSE
     ,p_validate_only         =>  FND_API.G_FALSE
     ,p_validation_level      =>  FND_API.G_VALID_LEVEL_FULL
     ,p_calling_module        =>  'AMG'
     ,p_debug_mode            =>  l_debug_mode
     ,p_max_msg_count         =>  null
     ,p_action_id             =>  l_action_id
     ,p_action_ver_id         =>  l_action_version_id
     ,p_dlv_element_id        =>  l_deliverable_id
     ,p_dlv_version_id        =>  l_dlvr_version_id
     ,p_function_code         =>  l_function_code
     ,p_project_id            =>  l_project_id
     ,x_return_status         =>  x_return_status
     ,x_msg_count             =>  x_msg_count
     ,x_msg_data              =>  x_msg_data
     ) ;

     IF l_debug_mode = 'Y' THEN
        pa_debug.write(g_pkg_name,' after  pa_actions_pvt.DELETE_DLV_ACTION ['||x_return_status||']',3) ;
     END IF;

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

   -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
   IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
   END IF;

   IF l_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
  WHEN FND_API.G_EXC_ERROR  THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO DELETE_DELIVERABLE_ACTION_PUB;
      --END IF;

      x_return_status := FND_API.G_RET_STS_ERROR;
      l_msg_count := FND_MSG_PUB.count_msg;

      IF l_msg_count = 1 AND x_msg_data IS NULL
      THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;

     END IF;

     IF  l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
     END IF;

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR  THEN
     -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
     --IF (p_commit = FND_API.G_TRUE) THEN
     ROLLBACK TO DELETE_DELIVERABLE_ACTION_PUB;
     --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF l_msg_count = 1 AND x_msg_data IS NULL
     THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;

     END IF;

     IF  l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
     END IF;

  WHEN OTHERS THEN
    -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
    --IF (p_commit = FND_API.G_TRUE) THEN
    ROLLBACK TO DELETE_DELIVERABLE_ACTION_PUB;
    --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count := 1;
     x_msg_data := SQLERRM;

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
     END IF;

     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)THEN
       FND_MSG_PUB.add_exc_msg
           ( p_pkg_name    => G_PKG_NAME
           , p_procedure_name  => l_api_name  );
    END IF;

END Delete_Deliverable_Actions;

-- SubProgram           : DELETE_DLV_TO_TASK_ASSCN
-- Type                 : PUBLIC FUNCTION
-- Purpose              : This function will delete the association of Deliverable with Task - Single record
-- Assumptions          : None

Procedure DELETE_DLV_TO_TASK_ASSCN (
      p_api_version              IN  NUMBER   := 1.0
     ,p_init_msg_list            IN  VARCHAR2 := FND_API.G_TRUE
     ,p_commit                   IN  VARCHAR2 := FND_API.G_FALSE
     ,p_pm_source_code           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_pm_project_reference     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_project_id               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     ,p_task_reference           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_task_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     ,p_pm_deliverable_reference IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_deliverable_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     ,x_return_status            OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
     ,x_msg_count                OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
     ,x_msg_data                 OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
     )IS


  l_api_name VARCHAR2(30) := 'DELETE_DLV_TO_TASK_ASSCN';
  l_project_id NUMBER ;
  l_task_id NUMBER;
  l_task_reference VARCHAR2(240);
  l_deliverable_id NUMBER;
  l_dlvr_version_id NUMBER;
  l_function_code  Pa_Proj_Elements.function_code%TYPE;
  l_object_relationship_Id     pa_object_relationships.object_relationship_Id%TYPE;
  l_debug_mode VARCHAR2(1) := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');

  l_function_allowed      VARCHAR2(1);
  l_resp_id NUMBER := FND_GLOBAL.Resp_id;

  l_msg_index_out              NUMBER;
  l_msg_count                  NUMBER ;
  l_data                       VARCHAR2(2000);
  l_msg_data                   VARCHAR2(2000);

BEGIN

 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    -- 3735792, setting save point unconditionally
    --IF (p_commit = FND_API.G_TRUE) THEN
    savepoint DELETE_DLV_TO_TASK_ASSCN_PUB;
    --END IF;

    IF l_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => l_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF;

 --  Set API return status to success
    x_return_status     := FND_API.G_RET_STS_SUCCESS;

-- Function Security Check
    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
    (p_api_version_number => p_api_version,
     p_responsibility_id  => l_resp_id,
     p_function_name      => 'PA_DELIVERABLE_EDIT',
     p_msg_count          => x_msg_count,
     p_msg_data           => x_msg_data,
     p_return_status      => x_return_status,
     p_function_allowed   => l_function_allowed);


     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

     IF l_function_allowed = 'N' THEN
        pa_interface_utils_pub.map_new_amg_msg
        ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
         ,p_msg_attribute    => 'CHANGE'
         ,p_resize_flag      => 'Y'
         ,p_msg_context      => 'GENERAL'
         ,p_attribute1       => ''
         ,p_attribute2       => ''
         ,p_attribute3       => ''
         ,p_attribute4       => ''
         ,p_attribute5       => '');

     x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

-- validate the input parameters.
-- Validate Project Reference / ID
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_pm_project_reference
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

-- Validate Deliverable Reference / ID
    Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
      (   p_deliverable_reference => p_pm_deliverable_reference
        , p_deliverable_id        => p_deliverable_id
        , p_project_id            => l_project_id
        , p_out_deliverable_id    => l_deliverable_id
        , p_return_status         => x_return_status
      );

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

-- Validate Task Reference / ID
    IF p_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       l_task_id := NULL;
    ELSE
       l_task_id := p_task_id;
    END IF;

    IF p_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_task_reference := NULL;
    ELSE
       l_task_reference := p_task_reference;
    END IF;

    IF ( p_task_id IS NOT NULL OR l_task_reference IS NOT NULL ) THEN
       PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'WORKPLAN'
                 , p_pa_task_id         => p_task_id
                 , p_pm_task_reference  => p_task_reference
                 , p_out_task_id        => l_task_id
                 , p_return_status      => x_return_status );

       IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
       ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
             RAISE FND_API.G_EXC_ERROR;
       END IF;
    END IF;


-- Derive Deliverable_version_id
   l_dlvr_version_id := Pa_Deliverable_Utils.Get_Deliverable_Version_Id (l_deliverable_id, null, l_project_id) ;

-- Derive Object Relationship ID
   l_object_relationship_id := Pa_Deliverable_Utils.Get_Dlvr_Task_Asscn_ID(l_deliverable_id, l_task_id);

-- Calling deliverable api to Delete Association
   pa_deliverable_pub.DELETE_DLV_TASK_ASSOCIATION
     (p_api_version              =>   p_api_version
     ,p_init_msg_list            =>   FND_API.G_FALSE
     ,p_commit                   =>   FND_API.G_FALSE
     ,p_validate_only            =>   FND_API.G_FALSE
     ,p_validation_level         =>   FND_API.G_VALID_LEVEL_FULL
     ,p_calling_module           =>   'AMG'
     ,p_debug_mode               =>   l_debug_mode
     ,p_max_msg_count            =>   null
     ,p_task_element_id          =>   l_task_id
     ,p_task_version_id          =>   -99       -- 3749498 passing -99 instead of null
     ,p_dlv_element_id           =>   l_deliverable_Id
     ,p_dlv_version_id           =>   l_dlvr_version_id
     ,p_object_relationship_id   =>   l_object_relationship_id
     ,p_obj_rec_ver_number       =>   null
     ,p_project_id               =>   l_project_id
     ,p_calling_context        =>   'TASKS'
     ,x_return_status            =>   x_return_status
     ,x_msg_count                =>   x_msg_count
     ,x_msg_data                 =>   x_msg_data
     );

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

   -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
   IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
   END IF;

   IF l_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
  WHEN FND_API.G_EXC_ERROR  THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO DELETE_DLV_TO_TASK_ASSCN_PUB;
      --END IF;

      x_return_status := FND_API.G_RET_STS_ERROR;
      l_msg_count := FND_MSG_PUB.count_msg;

      IF l_msg_count = 1 AND x_msg_data IS NULL
      THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF  l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
     END IF;

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR  THEN
     -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
     -- IF (p_commit = FND_API.G_TRUE) THEN
     ROLLBACK TO DELETE_DLV_TO_TASK_ASSCN_PUB;
     --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF l_msg_count = 1 AND x_msg_data IS NULL
     THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF  l_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
     END IF;

  WHEN OTHERS THEN
    -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
    --IF (p_commit = FND_API.G_TRUE) THEN
    ROLLBACK TO DELETE_DLV_TO_TASK_ASSCN_PUB;
    --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count := 1;
     x_msg_data := SQLERRM;

     IF l_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
     END IF;

     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)THEN
       FND_MSG_PUB.add_exc_msg
           ( p_pkg_name    => G_PKG_NAME
           , p_procedure_name  => l_api_name  );
    END IF;

END DELETE_DLV_TO_TASK_ASSCN;

-- SubProgram           : ASSOCIATE_DLV_TO_TASK
-- Type                 : PUBLIC FUNCTION
-- Purpose              : This function will create the association of Deliverable with Task - Single record
-- Assumptions          : None

Procedure ASSOCIATE_DLV_TO_TASK (
      p_api_version              IN  NUMBER   := 1.0
     ,p_init_msg_list            IN  VARCHAR2 := FND_API.G_TRUE
     ,p_commit                   IN  VARCHAR2 := FND_API.G_FALSE
     ,p_debug_mode               IN  VARCHAR2 := FND_API.G_FALSE
     ,p_pm_source_code           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     -- added for bug# 3729250
     ,p_pm_project_reference     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_project_id               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     -- added for bug# 3729250
     ,p_pm_task_reference        IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_task_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     -- added for bug# 3729250
     ,p_deliverable_reference    IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_deliverable_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     ,x_return_status            OUT NOCOPY VARCHAR2/*Added the nocopy check for 4537865 */
     ,x_msg_count                OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
     ,x_msg_data                 OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
     )IS

  l_api_name VARCHAR2(30) := 'ASSOCIATE_DLV_TO_TASK';
  l_project_id NUMBER ;
  l_task_id NUMBER;
  l_task_reference VARCHAR2(240);
  l_deliverable_id NUMBER;
  l_dlvr_version_id NUMBER;
  l_function_code  Pa_Proj_Elements.function_code%TYPE;
  l_object_relationship_Id     pa_object_relationships.object_relationship_Id%TYPE;

  l_function_allowed      VARCHAR2(1);
  l_resp_id NUMBER := FND_GLOBAL.Resp_id;

  l_msg_index_out              NUMBER;
  l_msg_count                  NUMBER ;
  l_data                       VARCHAR2(2000);
  l_msg_data                   VARCHAR2(2000);

  l_wp_task_flag varchar2(1); -- Added for bug5462298

BEGIN

 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    -- 3735792, setting save point unconditionally
    --IF (p_commit = FND_API.G_TRUE) THEN
    savepoint ASSOCIATE_DLV_TO_TASK_PUB;
    --END IF;

    IF p_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => p_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF;

 --  Set API return status to success
    x_return_status     := FND_API.G_RET_STS_SUCCESS;

-- Function Security Check
    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
    (p_api_version_number => p_api_version,
     p_responsibility_id  => l_resp_id,
     p_function_name      => 'PA_DELIVERABLE_EDIT',
     p_msg_count          => x_msg_count,
     p_msg_data           => x_msg_data,
     p_return_status      => x_return_status,
     p_function_allowed   => l_function_allowed);


     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

     IF l_function_allowed = 'N' THEN
        pa_interface_utils_pub.map_new_amg_msg
        ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
         ,p_msg_attribute    => 'CHANGE'
         ,p_resize_flag      => 'Y'
         ,p_msg_context      => 'GENERAL'
         ,p_attribute1       => ''
         ,p_attribute2       => ''
         ,p_attribute3       => ''
         ,p_attribute4       => ''
         ,p_attribute5       => '');

     x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

-- validate the input parameters.
-- Validate Project Reference / ID
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_pm_project_reference -- 3729250, earlier null was passed
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

-- Validate Deliverable Reference / ID
    Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
      (   p_deliverable_reference => p_deliverable_reference -- 3729250, earlier null was passed
        , p_deliverable_id        => p_deliverable_id
        , p_project_id            => l_project_id
        , p_out_deliverable_id    => l_deliverable_id
        , p_return_status         => x_return_status
      );

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

-- Validate Task Reference / ID
       PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'WORKPLAN'
                 , p_pa_task_id         => p_task_id
                 , p_pm_task_reference  => p_pm_task_reference -- 3729250, earlier null was passed
                 , p_out_task_id        => l_task_id
                 , p_return_status      => x_return_status );

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
          RAISE FND_API.G_EXC_ERROR;
    END IF;


    -- 5462298 Added below code to validate passed task id
    -- if it is not workplan task , throw error message

    l_wp_task_flag := PA_PROJ_ELEMENTS_UTILS.CHECK_IS_WORKPLAN_TASK (
                                        p_project_id         => l_project_id
                                      , p_proj_element_id    => l_task_id );

    IF l_wp_task_flag <> 'Y' THEN

     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_ERROR)
     THEN

        PA_UTILS.ADD_MESSAGE(p_app_short_name  => 'PA'
                            ,p_msg_name         => 'PA_TASK_ID_INVALID');

        x_return_status := FND_API.G_RET_STS_ERROR;
        RAISE FND_API.G_EXC_ERROR;

     END IF;

    END IF;

    -- 5462298 end

-- Derive Deliverable_version_id
   l_dlvr_version_id := Pa_Deliverable_Utils.Get_Deliverable_Version_Id (l_deliverable_id, null, l_project_id) ;

-- Calling deliverable api to Create Association
     pa_deliverable_pvt.CREATE_DLV_TASK_ASSOCIATION
     (p_api_version              =>   p_api_version
     ,p_init_msg_list            =>   FND_API.G_FALSE
     ,p_commit                   =>   FND_API.G_FALSE
     ,p_validate_only            =>   FND_API.G_FALSE
     ,p_validation_level         =>   FND_API.G_VALID_LEVEL_FULL
     ,p_calling_module           =>   'AMG'
     ,p_debug_mode               =>   p_debug_mode
     ,p_max_msg_count            =>   null
     ,p_task_element_id          =>   l_task_id
     ,p_task_version_id          =>   null
     ,p_dlv_element_id           =>   l_deliverable_id
     ,p_dlv_version_id           =>   l_dlvr_version_id
     ,p_project_id               =>   l_project_id
     ,x_return_status            =>   x_return_status
     ,x_msg_count                =>   x_msg_count
     ,x_msg_data                 =>   x_msg_data
     );

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

   -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
   IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
   END IF;

   IF p_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
  WHEN FND_API.G_EXC_ERROR  THEN

      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO ASSOCIATE_DLV_TO_TASK_PUB;
      --END IF;

      x_return_status := FND_API.G_RET_STS_ERROR;
      l_msg_count := FND_MSG_PUB.count_msg;

      IF l_msg_count = 1 AND x_msg_data IS NULL
      THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF  p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
     END IF;

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR  THEN
     -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
     --IF (p_commit = FND_API.G_TRUE) THEN
     ROLLBACK TO ASSOCIATE_DLV_TO_TASK_PUB;
     --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF l_msg_count = 1 AND x_msg_data IS NULL
     THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF  p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
     END IF;

  WHEN OTHERS THEN
    -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
    -- IF (p_commit = FND_API.G_TRUE) THEN
    ROLLBACK TO ASSOCIATE_DLV_TO_TASK_PUB;
    -- END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count := 1;
     x_msg_data := SQLERRM;

     IF p_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
     END IF;

     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)THEN
       FND_MSG_PUB.add_exc_msg
           ( p_pkg_name    => G_PKG_NAME
           , p_procedure_name  => l_api_name  );
    END IF;

END ASSOCIATE_DLV_TO_TASK;

Procedure ASSOCIATE_DLV_TO_TASK_ASSIGN (
      p_api_version              IN  NUMBER   := 1.0
     ,p_init_msg_list            IN  VARCHAR2 := FND_API.G_TRUE
     ,p_commit                   IN  VARCHAR2 := FND_API.G_FALSE
     ,p_debug_mode               IN  VARCHAR2 := FND_API.G_FALSE
     ,p_pm_source_code           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     -- added for bug# 3729250
     ,p_pm_project_reference     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_project_id               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     ,p_pm_task_asgmt_reference  IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_task_assign_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     -- added for bug# 3729250
     ,p_deliverable_reference    IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_deliverable_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     ,x_return_status            OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
     ,x_msg_count                OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
     ,x_msg_data                 OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
     )IS

  l_api_name VARCHAR2(30) := 'ASSOCIATE_DLV_TO_TASK_ASSIGN';
  l_project_id NUMBER ;
  l_task_assign_id NUMBER;
  l_task_assign_reference VARCHAR2(240);
  l_deliverable_id NUMBER;
  l_dlvr_version_id NUMBER;
  l_function_code  Pa_Proj_Elements.function_code%TYPE;
  l_object_relationship_Id     pa_object_relationships.object_relationship_Id%TYPE;
  l_task_assignment_id  NUMBER ;

  l_function_allowed      VARCHAR2(1);
  l_resp_id NUMBER := FND_GLOBAL.Resp_id;

  l_msg_index_out              NUMBER;
  l_msg_count                  NUMBER ;
  l_data                       VARCHAR2(2000);
  l_msg_data                   VARCHAR2(2000);

BEGIN

 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    -- 3735792, setting save point unconditionally
    -- IF (p_commit = FND_API.G_TRUE) THEN
    savepoint ASSOCIATE_DLV_TO_TASK_ASSIGN;
    --END IF;

    IF p_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => p_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF;

 --  Set API return status to success
    x_return_status     := FND_API.G_RET_STS_SUCCESS;

-- Function Security Check
    PA_PM_FUNCTION_SECURITY_PUB.check_function_security
    (p_api_version_number => p_api_version,
     p_responsibility_id  => l_resp_id,
     p_function_name      => 'PA_DELIVERABLE_EDIT',
     p_msg_count          => x_msg_count,
     p_msg_data           => x_msg_data,
     p_return_status      => x_return_status,
     p_function_allowed   => l_function_allowed);


     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

     IF l_function_allowed = 'N' THEN
        pa_interface_utils_pub.map_new_amg_msg
        ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
         ,p_msg_attribute    => 'CHANGE'
         ,p_resize_flag      => 'Y'
         ,p_msg_context      => 'GENERAL'
         ,p_attribute1       => ''
         ,p_attribute2       => ''
         ,p_attribute3       => ''
         ,p_attribute4       => ''
         ,p_attribute5       => '');

     x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

-- validate the input parameters.
-- Validate Project Reference / ID
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_pm_project_reference -- 3729250, earlier was passed as null
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

-- Validate Deliverable Reference / ID
    Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
      (   p_deliverable_reference => p_deliverable_reference -- 3729250 , earlier passed was null
        , p_deliverable_id        => p_deliverable_id
        , p_project_id            => l_project_id
        , p_out_deliverable_id    => l_deliverable_id
        , p_return_status         => x_return_status
      );

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

-- Validate Task Assignment Reference / ID
    IF p_task_assign_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       l_task_assign_id := NULL;
    ELSE
       l_task_assign_id := p_task_assign_id;
    END IF;


 PA_TASK_ASSIGNMENTS_PUB.Convert_PM_TARef_To_ID
     ( p_pm_product_code           => p_pm_source_code
      ,p_pa_project_id             => l_project_id
      ,p_pa_structure_version_id   => null
      ,p_pa_task_id                => null
      ,p_pa_task_elem_ver_id       => null
      ,p_pm_task_asgmt_reference   => p_pm_task_asgmt_reference
      ,p_pa_task_assignment_id     => p_task_assign_id
      ,p_resource_alias            => null
      ,p_resource_list_member_id   => null
      ,x_pa_task_assignment_id     => l_task_assignment_id
      ,x_return_status             => x_return_status
       ) ;

       IF p_debug_mode = 'Y' THEN
           pa_debug.write(g_pkg_name,'PA_TASK_ASSIGNMENTS_PUB.Convert_PM_TARef_To_ID ret status'||x_return_status||
                          ']task assign ref['||l_task_assign_reference||']task assign id['||l_task_assign_id||']',3) ;
       END IF;

       IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
       ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
             RAISE FND_API.G_EXC_ERROR;
       END IF;

-- Derive Deliverable_version_id
   l_dlvr_version_id := Pa_Deliverable_Utils.Get_Deliverable_Version_Id (l_deliverable_id, null, l_project_id) ;

-- Calling deliverable api to Create Association
     pa_deliverable_pvt.CREATE_DLV_TASK_ASSOCIATION
     (p_api_version              => p_api_version
     ,p_init_msg_list            => FND_API.G_FALSE
     ,p_commit                   => FND_API.G_FALSE
     ,p_validate_only            => FND_API.G_FALSE
     ,p_validation_level         => FND_API.G_VALID_LEVEL_FULL
     ,p_calling_module           => 'AMG'
     ,p_calling_context        => 'PA_ASSIGNMENTS'
     ,p_debug_mode               => p_debug_mode
     ,p_max_msg_count            => null
     ,p_task_element_id        => l_task_assignment_id
     ,p_task_version_id        => null
     ,p_dlv_element_id         => l_deliverable_id
     ,p_dlv_version_id         => l_dlvr_version_id
     ,p_project_id             => l_project_id
     ,x_return_status            => x_return_status
     ,x_msg_count                => x_msg_count
     ,x_msg_data                 => x_msg_data
     );

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

   -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
   IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
   END IF;

   IF p_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
  WHEN FND_API.G_EXC_ERROR  THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      -- IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO ASSOCIATE_DLV_TO_TASK_ASSIGN;
      -- END IF;

      x_return_status := FND_API.G_RET_STS_ERROR;
      l_msg_count := FND_MSG_PUB.count_msg;

      IF l_msg_count = 1 AND x_msg_data IS NULL
      THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF  p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
     END IF;

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR  THEN
     -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
     --IF (p_commit = FND_API.G_TRUE) THEN
     ROLLBACK TO ASSOCIATE_DLV_TO_TASK_ASSIGN;
     --END IF;
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF l_msg_count = 1 AND x_msg_data IS NULL
     THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF  p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
     END IF;

  WHEN OTHERS THEN
    -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
    --IF (p_commit = FND_API.G_TRUE) THEN
     ROLLBACK TO ASSOCIATE_DLV_TO_TASK_ASSIGN;
    --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count := 1;
     x_msg_data := SQLERRM;

     IF p_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
     END IF;

     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)THEN
       FND_MSG_PUB.add_exc_msg
           ( p_pkg_name    => G_PKG_NAME
           , p_procedure_name  => l_api_name  );
    END IF;

END ASSOCIATE_DLV_TO_TASK_ASSIGN;


Procedure DELETE_DLV_TO_TASK_ASSIGN (
      p_api_version              IN  NUMBER   := 1.0
     ,p_init_msg_list            IN  VARCHAR2 := FND_API.G_TRUE
     ,p_commit                   IN  VARCHAR2 := FND_API.G_FALSE
     ,p_debug_mode               IN  VARCHAR2 := FND_API.G_FALSE
     ,p_pm_source_code           IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_project_id               IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     -- added for bug# 3729250
     ,p_pm_project_reference     IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_task_assign_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
     ,p_pm_task_asgmt_reference  IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
     ,p_deliverable_id           IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  --added for bug 3888280
     ,p_pm_deliverable_reference IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR --added for bug 3888280
     ,x_return_status            OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
     ,x_msg_count                OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
     ,x_msg_data                 OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
     )IS

  l_api_name VARCHAR2(30) := 'ASSOCIATE_DLV_TO_TASK_ASSIGN';
  l_project_id         NUMBER ;
  l_task_assign_id     NUMBER;
  l_task_assign_reference VARCHAR2(240);
  l_deliverable_id     NUMBER;
  l_dlvr_version_id    NUMBER;
  l_function_code      Pa_Proj_Elements.function_code%TYPE;
  l_object_relationship_Id     pa_object_relationships.object_relationship_Id%TYPE;
  l_task_assignment_id NUMBER ;

  l_function_allowed      VARCHAR2(1);
  l_resp_id NUMBER := FND_GLOBAL.Resp_id;

  l_msg_index_out              NUMBER;
  l_msg_count                  NUMBER ;
  l_data                       VARCHAR2(2000);
  l_msg_data                   VARCHAR2(2000);

   -- 3888280 Added cursor to retrieve object_relationship_id for a TA to a DLVR
   -- Association

  CURSOR c_obj_rel_id(l_task_assng_id NUMBER, l_dlvr_id NUMBER) IS
  SELECT
        OBJ.OBJECT_RELATIONSHIP_ID
  FROM  PA_OBJECT_RELATIONSHIPS OBJ
  WHERE
        OBJ.OBJECT_ID_FROM2         =   l_task_assng_id
    AND OBJ.OBJECT_ID_TO2           =   l_dlvr_id
    AND OBJ.OBJECT_TYPE_FROM        =   'PA_ASSIGNMENTS'
    AND OBJ.OBJECT_TYPE_TO          =   'PA_DELIVERABLES'
    AND OBJ.RELATIONSHIP_TYPE       =   'A'
    AND OBJ.RELATIONSHIP_SUBTYPE    =   'ASSIGNMENT_TO_DELIVERABLE';

BEGIN

 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    -- 3735792, setting save point unconditionally
    --IF (p_commit = FND_API.G_TRUE) THEN
    savepoint ASSOCIATE_DLV_TO_TASK_ASSIGN;
    --END IF;

    IF p_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => l_api_name,
                                      p_debug_mode => p_debug_mode );
          pa_debug.g_err_stage:= 'Inside '||l_api_name;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF;

 --  Set API return status to success
    x_return_status     := FND_API.G_RET_STS_SUCCESS;

     IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR     THEN
         RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF x_return_status = FND_API.G_RET_STS_ERROR     THEN
         RAISE FND_API.G_EXC_ERROR;
     END IF;

     IF l_function_allowed = 'N' THEN
        pa_interface_utils_pub.map_new_amg_msg
        ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
         ,p_msg_attribute    => 'CHANGE'
         ,p_resize_flag      => 'Y'
         ,p_msg_context      => 'GENERAL'
         ,p_attribute1       => ''
         ,p_attribute2       => ''
         ,p_attribute3       => ''
         ,p_attribute4       => ''
         ,p_attribute5       => '');

     x_return_status := FND_API.G_RET_STS_ERROR;
         RAISE FND_API.G_EXC_ERROR;
     END IF;

-- validate the input parameters.
-- Validate Project Reference / ID
    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                    p_pm_project_reference =>   p_pm_project_reference -- 3729250 , earlier null was passed
                 ,  p_pa_project_id     =>      p_project_id
                 ,  p_out_project_id    =>      l_project_id
                 ,  p_return_status     =>      x_return_status
        );

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

-- Validate Task Assignment Reference / ID
    IF p_task_assign_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       l_task_assign_id := NULL;
    ELSE
       l_task_assign_id := p_task_assign_id;
    END IF;

   PA_TASK_ASSIGNMENTS_PUB.Convert_PM_TARef_To_ID
     ( p_pm_product_code           => p_pm_source_code
      ,p_pa_project_id             => l_project_id
      ,p_pa_structure_version_id   => null
      ,p_pa_task_id                => null
      ,p_pa_task_elem_ver_id       => null
      ,p_pm_task_asgmt_reference   => p_pm_task_asgmt_reference
      ,p_pa_task_assignment_id     => p_task_assign_id
      ,p_resource_alias            => null
      ,p_resource_list_member_id   => null
      ,x_pa_task_assignment_id     => l_task_assignment_id
      ,x_return_status             => x_return_status
       ) ;

       IF p_debug_mode = 'Y' THEN
           pa_debug.write(g_pkg_name,'PA_TASK_ASSIGNMENTS_PUB.Convert_PM_TARef_To_ID ret status'||x_return_status||
                          ']task assign ref['||l_task_assign_reference||']task assign id['||l_task_assign_id||']',3) ;
       END IF;

       IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
       ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
             RAISE FND_API.G_EXC_ERROR;
       END IF;

   -- 3888280 start
   -- Added code to validate Deliverable Reference and Id

    -- Validate Deliverable Reference / ID
    Pa_Deliverable_Utils.Convert_pm_dlvrref_to_id
      (   p_deliverable_reference => p_pm_deliverable_reference
        , p_deliverable_id        => p_deliverable_id
        , p_project_id            => l_project_id
        , p_out_deliverable_id    => l_deliverable_id
        , p_return_status         => x_return_status
      );

    IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
        RAISE FND_API.G_EXC_ERROR;
    END IF;

    -- Addec code to retrieve object_relationship_id for a TA to a DLVR relationship
    -- passing this retrieved id to DELETE_DLV_TASK_ASSOCIATION api

    OPEN c_obj_rel_id(l_task_assignment_id,l_deliverable_id) ;
    FETCH c_obj_rel_id into l_object_relationship_Id ;
    CLOSE c_obj_rel_id;

    -- commented below code because below api was deleting all the association to deliverables
    -- for a TA

/*
   PA_DELIVERABLE_PVT.DELETE_DLV_TASK_ASSCN_IN_BULK
     (p_calling_module      => 'AMG'
     ,p_calling_context     => 'PA_ASSIGNMENTS'
     ,p_task_element_id     => l_task_assignment_id
     ,p_task_version_id     => null
     ,p_project_id          => l_project_id
     ,x_return_status       => x_return_status
     ,x_msg_count           => x_msg_count
     ,x_msg_data            => x_msg_data
     ) ;
*/

    IF p_debug_mode = 'Y' THEN
         pa_debug.g_err_stage:= ' l_object_relationship_Id is  ' || l_object_relationship_Id;
         pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3) ;
    END IF ;

   -- Added below api call to delete a TA to a DLVR association
   -- passing calling context as TASK_ASSIGNMENT and for calling context TASK_ASSIGNMENT
   -- below api is not doing any validation to check whether the deletion is allowed or not

    PA_DELIVERABLE_PVT.DELETE_DLV_TASK_ASSOCIATION
    (
      p_calling_module          =>  'AMG'
     ,p_task_element_id         =>  l_task_assignment_id
     ,p_task_version_id         =>  NULL
     ,p_dlv_element_id          =>  l_deliverable_id
     ,p_dlv_version_id          =>  NULL
     ,p_object_relationship_id  =>  l_object_relationship_Id
     ,p_obj_rec_ver_number      =>  NULL
     ,p_project_id              =>  l_project_id
     ,p_calling_context         =>  'TASK_ASSIGNMENT'
     ,x_return_status           =>  x_return_status
     ,x_msg_count               =>  x_msg_count
     ,x_msg_data                =>  x_msg_data
    );

   -- 3888280 end

   -- 3735792, if return status is 'S' and p_commit is passed as TRUE call commit
   IF (p_commit = FND_API.G_TRUE) THEN
       COMMIT;
   END IF;

   IF p_debug_mode = 'Y' THEN
       pa_debug.reset_curr_function;
       pa_debug.write(g_pkg_name,l_api_name||': Exiting succesfully',5);
   END IF;

EXCEPTION
  WHEN FND_API.G_EXC_ERROR  THEN
      -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
      --IF (p_commit = FND_API.G_TRUE) THEN
      ROLLBACK TO ASSOCIATE_DLV_TO_TASK_ASSIGN;
      --END IF;

      x_return_status := FND_API.G_RET_STS_ERROR;
      l_msg_count := FND_MSG_PUB.count_msg;

      IF l_msg_count = 1 AND x_msg_data IS NULL
      THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF  p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_ERROR exception',5);
     END IF;

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR  THEN
     -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
     --IF (p_commit = FND_API.G_TRUE) THEN
     ROLLBACK TO ASSOCIATE_DLV_TO_TASK_ASSIGN;
     --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     l_msg_count := FND_MSG_PUB.count_msg;

     IF l_msg_count = 1 AND x_msg_data IS NULL
     THEN
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE,
                p_msg_index      => 1,
                p_msg_count      => x_msg_count,
                p_msg_data       => l_msg_data,
                p_data           => l_data,
                p_msg_index_out  => l_msg_index_out);

       x_msg_data := l_data;
           x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     IF  p_debug_mode = 'Y' THEN
          pa_debug.reset_curr_function;
          pa_debug.write(g_pkg_name,l_api_name||': Inside G_EXC_UNEXPECTED_ERROR exception',5);
     END IF;

  WHEN OTHERS THEN
    -- 3735792, if return status is 'U' or 'E' , rollback to save point ,  don't check for p_commit
    --IF (p_commit = FND_API.G_TRUE) THEN
     ROLLBACK TO ASSOCIATE_DLV_TO_TASK_ASSIGN;
    --END IF;

     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
     x_msg_count := 1;
     x_msg_data := SQLERRM;

     IF p_debug_mode = 'Y' THEN
          pa_debug.g_err_stage:=l_api_name||': Unexpected Error'||SQLERRM;
          pa_debug.write(g_pkg_name,pa_debug.g_err_stage,5);
          pa_debug.reset_curr_function;
     END IF;

     IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)THEN
       FND_MSG_PUB.add_exc_msg
           ( p_pkg_name    => G_PKG_NAME
           , p_procedure_name  => l_api_name  );
    END IF;

END DELETE_DLV_TO_TASK_ASSIGN;
-- FP M Changes for deliverables : End

--Added by rtarway for FP.M Development
PROCEDURE Delete_Mapping
(
   p_api_version              IN   NUMBER     := 1.0
 , p_init_msg_list            IN   VARCHAR2   := FND_API.G_TRUE
 , p_commit                   IN   VARCHAR2   := FND_API.G_TRUE
 , p_debug_mode               IN   VARCHAR2   := 'N'
 , p_wp_task_version_id       IN   NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 , p_fp_task_version_id       IN   NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 , p_wp_task_id               IN   NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 , p_fp_task_id               IN   NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 , p_pm_wp_task_reference     IN   VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 , p_pm_fp_task_reference     IN   VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 , p_wp_structure_version_id  IN   NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 , p_project_id               IN   NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 , p_proj_source_reference    IN   VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 , x_return_status            OUT NOCOPY  VARCHAR2  /*Added the nocopy check for 4537865 */
 , x_msg_count                OUT NOCOPY NUMBER  /*Added the nocopy check for 4537865 */
 , x_msg_data                 OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
)
IS
    l_msg_count             NUMBER;
    l_msg_data              VARCHAR2(2000);
    l_api_name              CONSTANT  VARCHAR2(30)     := 'DELETE_MAPPING';
    l_return_status         VARCHAR2(1);
    l_debug_mode                     VARCHAR2(1);
    l_debug_level2                   CONSTANT NUMBER := 2;
    l_debug_level3                   CONSTANT NUMBER := 3;
    l_debug_level4                   CONSTANT NUMBER := 4;
    l_debug_level5                   CONSTANT NUMBER := 5;

    l_wp_task_version_id             NUMBER;
    l_fp_task_version_id             NUMBER;
    l_wp_task_id                     NUMBER;
    l_fp_task_id                     NUMBER;
    l_project_id                     NUMBER;
    l_wp_structure_version_id        NUMBER;

--This cursor is based on assumption that a financial structure will have only one version in a project.
CURSOR cur_get_fin_task_version_id(l_project_id NUMBER, l_fp_task_id NUMBER)
is
     Select element_version_id
     from pa_proj_element_versions
     where proj_element_id = l_fp_task_id
     and project_id = l_project_id
     and financial_task_flag = 'Y';


BEGIN

-- 4537865
x_return_status := FND_API.G_RET_STS_SUCCESS;

    --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

-- Bug 4142254 : Commenting this condition, as we want to create savepoint always.
-- We could have done other way around too i.e. Savepoint and rollback shoud both be in
-- conditions. But we prefer removing conditions due to bug 3735792
--    IF (p_commit = FND_API.G_TRUE) THEN
       savepoint DELETE_MAPPING_PUB;
--    END IF;

    l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');
    IF l_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => 'DELETE_MAPPING',
                                      p_debug_mode => l_debug_mode );
    END IF;

    IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : DELETE_MAPPING : Printing Input parameters';
          Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_wp_task_version_id'||':'||p_wp_task_version_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_fp_task_version_id'||':'||p_fp_task_version_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_wp_task_id'||':'||p_wp_task_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_fp_task_id'||':'||p_fp_task_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_pm_wp_task_reference'||':'||p_pm_wp_task_reference,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_pm_fp_task_reference'||':'||p_pm_fp_task_reference,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_wp_structure_version_id'||':'||p_wp_structure_version_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_project_id'||':'||p_project_id,
                                     l_debug_level3);

     END IF;
   --Validate for input parameters
     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : DELETE_MAPPING : Validating Input parameters';
          Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                     l_debug_level3);
     END IF;

     --If task ids or names are passed , then we need to derive task_version_ids to be used by the DELETE_MAPPING API.

     --1. If Task version ids are null , start deriving task version id
     IF (
          (p_wp_task_version_id IS NULL OR p_wp_task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
          AND
          (p_fp_task_version_id IS NULL OR p_fp_task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
        )
     THEN
          --1.0 Get the project id
          IF (
               ( p_project_id IS NULL OR p_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
               AND
               ( p_proj_source_reference IS NOT NULL AND p_proj_source_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
             )
          THEN

                    PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                         p_pm_project_reference =>   p_proj_source_reference
                      ,  p_pa_project_id     =>      p_project_id
                      ,  p_out_project_id    =>      l_project_id
                      ,  p_return_status     =>      x_return_status
                    );

                    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
                         RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
                    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
                         RAISE  FND_API.G_EXC_ERROR;
                    END IF;
          ELSE
               l_project_id := p_project_id;
          END IF;

          IF p_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'DELETE_MAPPING'||'Project ID:'||l_project_id;
            pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
          END IF;
          --1.1 Get the task ids if these are null
               --WP TASK ID
               IF( (p_wp_task_id IS NULL OR p_wp_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                    AND
                    (p_pm_wp_task_reference IS NOT NULL AND p_pm_wp_task_reference <>PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                 )
               THEN
                    --get the task id from task reference
                     PA_PROJECT_PVT.Convert_pm_taskref_to_id_all(
                                               p_pa_project_id => l_project_id
                                              ,p_structure_type => 'WORKPLAN'
                                              ,p_pm_task_reference => p_pm_wp_task_reference
                                              ,p_out_task_id => l_wp_task_id
                                              ,p_return_status => l_return_status);

                     x_return_status := l_return_status;
                     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
                        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
                     ELSIF l_return_status = FND_API.G_RET_STS_ERROR      THEN
                        RAISE FND_API.G_EXC_ERROR;
                     END IF;

               ELSE
                    l_wp_task_id := p_wp_task_id;
               END IF;
               --FP TASK ID
               IF(
                    (p_fp_task_id IS NULL OR p_fp_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                    AND
                    (p_pm_fp_task_reference IS NOT NULL AND p_pm_fp_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
                 )
               THEN
                    --get the task id from task reference
                     PA_PROJECT_PVT.Convert_pm_taskref_to_id_all(
                                               p_pa_project_id => l_project_id
                                              ,p_structure_type => 'FINANCIAL'
                                              ,p_pm_task_reference => p_pm_fp_task_reference
                                              ,p_out_task_id => l_fp_task_id
                                              ,p_return_status => l_return_status);
                     x_return_status := l_return_status;
                     IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
                        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
                     ELSIF l_return_status = FND_API.G_RET_STS_ERROR      THEN
                        RAISE FND_API.G_EXC_ERROR;
                     END IF;
               ELSE
                    l_fp_task_id := p_fp_task_id;
               END IF;
          --1.2 Get the task version ids
               --1.2.1 get the wp structure version id
                 IF (
                         l_wp_task_id IS NOT NULL
                     AND ( p_wp_structure_version_id IS NULL OR p_wp_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                    )
                 THEN

                    IF (PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS(l_project_id) = 'Y') THEN
                    l_wp_structure_version_id := PA_PROJ_ELEMENTS_UTILS.LATEST_PUBLISHED_VER_ID(l_project_id, 'WORKPLAN');
                         IF (l_wp_structure_version_id = -1 OR l_wp_structure_version_id = NULL)
                         THEN
                            l_wp_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.get_current_working_ver_id(l_project_id);
                         END IF;
                     END IF;
                 ELSIF(p_wp_structure_version_id IS NOT NULL AND p_wp_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                 THEN
                         l_wp_structure_version_id :=p_wp_structure_version_id;
                 END IF;
               --1.2.1.1 get the l_wp_task_version_id
                 l_wp_task_version_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID
                                 (
                                     p_structure_version_id => l_wp_structure_version_id
                                   , p_task_id => l_wp_task_id
                                 );

               --1.2.2 get the fp task version id, as there will be only one structure version for financial
                IF (l_fp_task_id IS NOT NULL) THEN
                   open  cur_get_fin_task_version_id (l_project_id, l_fp_task_id);
                   fetch cur_get_fin_task_version_id into l_fp_task_version_id;
                   close cur_get_fin_task_version_id ;
                END IF;


     ELSE
          l_wp_task_version_id := p_wp_task_version_id;
          l_fp_task_version_id := p_fp_task_version_id;
     END IF;


--Calling Delete Mapping
   PA_PROJ_STRUC_MAPPING_PUB.DELETE_MAPPING
   (
       p_api_version           => p_api_version
     , p_init_msg_list         => FND_API.G_FALSE
     , p_commit                => FND_API.G_FALSE--bug 3766967
     , p_debug_mode            => p_debug_mode
     , p_wp_task_version_id    => l_wp_task_version_id
     , p_fp_task_version_id    => l_fp_task_version_id
     , p_calling_module        => 'AMG' -- Bug 4142254
     , x_return_status         => x_return_status
     , x_msg_count             => l_msg_count
     , x_msg_data              => l_msg_data
   );
    x_msg_count              := l_msg_count;
    x_msg_data               := l_msg_data;

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'DELETE_MAPPING'||'After Calling PA_PROJ_STRUC_MAPPING_PUB.DELETE_MAPPING:'||x_return_status;
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

   IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
          RAISE  FND_API.G_EXC_ERROR;
   END IF;

EXCEPTION
   WHEN FND_API.G_EXC_ERROR        THEN
       ROLLBACK TO DELETE_MAPPING_PUB;
       x_return_status := FND_API.G_RET_STS_ERROR;

   WHEN FND_API.G_EXC_UNEXPECTED_ERROR        THEN
       ROLLBACK TO DELETE_MAPPING_PUB;
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

   WHEN OTHERS THEN
       ROLLBACK TO DELETE_MAPPING_PUB;
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)       THEN
       FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name            => G_PKG_NAME
                   , p_procedure_name      => l_api_name   );
  END IF;

END Delete_Mapping ;
--------------------------------------------------------------------------------
--Name:               Create_Mapping
--Type:               Procedure
--Description:        This procedure creates a Mapping for the passed Wkp Task Id and Financial Task Id
--                    This program can be called as per following:
--mapped_task_id   mapped_task_ref mapped_task_name    wkp_task_id    wkp_task_name  wkp_task_reference  wkp_structure_ver_id   Status
--   y               N                N                  y               N              N                   N                   Valid
--   N               N                Y                  N               Y              N                   Y                   Valid
--   N               Y                N                  N               N              Y                   N                   Valid
--
--Called subprograms:    PA_PROJ_STRUC_MAPPING_PUB.CREATE_MAPPING

--History:
--    24-Mar-2004   Ritesg            Created
--

PROCEDURE create_mapping
(   p_api_version                  IN        NUMBER     := 1.0
  , p_init_msg_list                IN        VARCHAR2   := FND_API.G_TRUE
  , p_commit                       IN        VARCHAR2   := FND_API.G_TRUE
  , p_debug_mode                   IN        VARCHAR2   := 'N'
  , px_mapped_task_id              IN        NUMBER
  , p_mapped_task_reference        IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_mapped_task_name             IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_wkp_task_id                  IN        NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_wkp_task_name                IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_wkp_structure_version_id     IN        NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_wkp_task_reference           IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_id                   IN        NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_proj_source_reference        IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , x_return_status                OUT  NOCOPY     VARCHAR2 /*Added the nocopy check for 4537865 */
  , x_msg_count                    OUT  NOCOPY     NUMBER /*Added the nocopy check for 4537865 */
  , x_msg_data                     OUT  NOCOPY     VARCHAR2 /*Added the nocopy check for 4537865 */
  )

  IS
    l_project_id               NUMBER;

    l_wkp_task_id              NUMBER;
    l_wkp_structure_version_id NUMBER;
    l_wkp_task_version_id      NUMBER;
    l_wkp_task_name            VARCHAR2(240);

    l_mapped_task_id           NUMBER;
    l_mapped_task_reference    VARCHAR2(240);
    l_mapped_task_version_id   NUMBER;
    l_mapped_task_name         VARCHAR2(240);

    l_msg_count             NUMBER;
    l_msg_data              VARCHAR2(2000);
    l_api_name              CONSTANT  VARCHAR2(30)     := 'CREATE_MAPPING';

    l_debug_mode                     VARCHAR2(1);
    l_debug_level2                   CONSTANT NUMBER := 2;
    l_debug_level3                   CONSTANT NUMBER := 3;
    l_debug_level4                   CONSTANT NUMBER := 4;
    l_debug_level5                   CONSTANT NUMBER := 5;

--This cursor is based on assumption that a financial structure will have only one version in a project.
CURSOR cur_get_mapped_task_version_id(p_project_id NUMBER, p_mapped_task_id NUMBER)
is
     Select element_version_id
     from pa_proj_element_versions
     where proj_element_id = p_mapped_task_id
     and project_id = p_project_id
     and financial_task_flag = 'Y';

BEGIN
 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    IF (p_commit = FND_API.G_TRUE) THEN
       savepoint CREATE_MAPPING_PUB;
    END IF;

    l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');
    IF l_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => 'CREATE_MAPPING',
                                      p_debug_mode => l_debug_mode );
    END IF;

    IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : CREATE_MAPPING : Printing Input parameters';
          Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'px_mapped_task_id'||':'||px_mapped_task_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_mapped_task_name'||':'||p_mapped_task_name,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_wkp_task_id'||':'||p_wkp_task_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_wkp_task_name'||':'||p_wkp_task_name,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_wkp_structure_version_id'||':'||p_wkp_structure_version_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_project_id'||':'||p_project_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_proj_source_reference'||':'||p_proj_source_reference,
                                     l_debug_level3);
     END IF;
   --Validate for input parameters
    IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : CREATE_MAPPING : Validating Input parameters';
          Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                     l_debug_level3);
    END IF;

    IF ( (p_project_id IS NULL OR p_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          AND
          (p_proj_source_reference IS NULL OR p_proj_source_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        )
    THEN
          IF l_debug_mode = 'Y' THEN
               Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : CREATE_MAPPING : At least one of the parameters for deriving Project id should be passed';
               Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                          l_debug_level3);
          END IF;
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

    IF (
         ( px_mapped_task_id IS NULL OR px_mapped_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) AND
         ( p_mapped_task_reference IS NULL OR p_mapped_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
         ( p_mapped_task_name IS NULL OR p_mapped_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        )
    THEN
          IF l_debug_mode = 'Y' THEN
               Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : CREATE_MAPPING : At least one of the parameters for deriving financial task version id should be passed';
               Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                          l_debug_level3);
          END IF;
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

    IF (
          (p_wkp_task_id IS NULL OR p_wkp_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM) AND
          (p_wkp_task_reference IS NULL OR p_wkp_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) AND
          (p_wkp_task_name IS NULL OR p_wkp_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
        )
    THEN
          IF l_debug_mode = 'Y' THEN
               Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : CREATE_MAPPING : At least one of the parameters for deriving workplan task version id should be passed';
               Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                          l_debug_level3);
          END IF;
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;


  --  Set API return status to success
     x_return_status     := FND_API.G_RET_STS_SUCCESS;

     IF p_wkp_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
        l_wkp_task_id := NULL;
     ELSE
        l_wkp_task_id := p_wkp_task_id;
     END IF;

     IF px_mapped_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       l_mapped_task_id := NULL;
     ELSE
       l_mapped_task_id := px_mapped_task_id;
     END IF;

     IF p_mapped_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_mapped_task_reference := NULL;
     ELSE
       l_mapped_task_reference := p_mapped_task_reference;
     END IF;

     IF p_wkp_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_wkp_task_name := NULL;
     ELSE
       l_wkp_task_name := p_wkp_task_name;
     END IF;

     IF p_mapped_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_mapped_task_name := NULL;
     ELSE
       l_mapped_task_name := p_mapped_task_name;
     END IF;

     IF p_wkp_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       l_wkp_structure_version_id := NULL;
     ELSE
       l_wkp_structure_version_id := p_wkp_structure_version_id;
     END IF;

     IF p_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
          l_project_id := NULL;
     ELSE
          l_project_id := p_project_id;
     END IF;

  -- Get the task and Project details based on source reference passed
     IF (
          p_project_id IS NULL
          AND ( p_proj_source_reference IS NOT NULL AND p_proj_source_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
        )
     THEN
          PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                         p_pm_project_reference =>   p_proj_source_reference
                      ,  p_pa_project_id     =>      p_project_id
                      ,  p_out_project_id    =>      l_project_id
                      ,  p_return_status     =>      x_return_status
             );
     END IF;

     IF p_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'CREATE_MAPPING'||'Project ID:'||l_project_id;
            pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
     END IF;

     IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
     END IF;

 --Get the Wkp Task ID using Wkp Task Reference
    IF (
         (l_wkp_task_id IS NULL)
         AND
         (p_wkp_task_reference IS NOT NULL AND p_wkp_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
       )
    THEN
        PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'WORKPLAN'
                 , p_pm_task_reference  => p_wkp_task_reference
                 , p_out_task_id        => l_wkp_task_id
                 , p_return_status      => x_return_status );

        IF p_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'CREATE_MAPPING'||'wkp_task_id:'||l_wkp_task_id;
            pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
        END IF;

        IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
          RAISE FND_API.G_EXC_ERROR;
        END IF;
    END IF;

-- Get the mapped task Id based in mapped_task_reference
    IF ( l_mapped_task_id IS NULL
         AND
         l_mapped_task_reference IS NOT NULL
    )
    THEN
         PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'FINANCIAL'
                 , p_pm_task_reference  => p_mapped_task_reference
                 , p_out_task_id        => l_mapped_task_id
                 , p_return_status      => x_return_status );

     --Assign mapped task_id to px_mapped_task_id as it is in out parameter
          IF p_debug_mode = 'Y' THEN
                 pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'CREATE_MAPPING'||'mapped_task_id:'||l_mapped_task_id;
                 pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
          END IF;
          IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
             RAISE FND_API.G_EXC_ERROR;
          END IF;
    END IF;
     --Get the task version id from Wkp task Id
     -- Avoid this call if wkp task name and wkp task version ids are passed
     IF (l_wkp_task_id IS NOT NULL AND l_wkp_structure_version_id IS NULL ) THEN

           IF (PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS(l_project_id) = 'Y') THEN
                  l_wkp_structure_version_id := PA_PROJ_ELEMENTS_UTILS.LATEST_PUBLISHED_VER_ID(l_project_id, 'WORKPLAN');
                  IF (l_wkp_structure_version_id = -1 OR l_wkp_structure_version_id = NULL)
                  THEN
                       l_wkp_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.get_current_working_ver_id(l_project_id);
                  END IF;
           END IF;
     END IF;
     l_wkp_task_version_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID
                                 (
                                     p_structure_version_id => l_wkp_structure_version_id
                                   , p_task_id => l_wkp_task_id
                                 );


     --Get the financial task version id from financial task id,
     IF (l_mapped_task_id IS NOT NULL) THEN
         open cur_get_mapped_task_version_id (l_project_id, l_mapped_task_id);
         fetch cur_get_mapped_task_version_id into l_mapped_task_version_id;
         close cur_get_mapped_task_version_id ;
     END IF;
     IF p_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'CREATE_MAPPING'||'Before Calling PA_PROJ_STRUC_MAPPING_PUB.CREATE_MAPPING:';
            pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
     END IF;


-- All other validations done in PA_DELIVERABLE_PUB.CREATE_DELIVERABLE
-- call PA_PROJ_STRUC_MAPPING_PUB.CREATE_MAPPING here only

   PA_PROJ_STRUC_MAPPING_PUB.CREATE_MAPPING
   (
       p_api_version           => p_api_version
     , p_init_msg_list         => FND_API.G_FALSE
     , p_calling_module        => 'AMG'
     , p_commit                => FND_API.G_FALSE--bug 3766967
     , p_debug_mode            => p_debug_mode
     , p_wp_task_name          => l_wkp_task_name
     , p_wp_task_version_id    => l_wkp_task_version_id
     , p_parent_str_version_id => l_wkp_structure_version_id
     , p_fp_task_version_id    => l_mapped_task_version_id
     , p_fp_task_name          => l_mapped_task_name
     , p_project_id            => l_project_id
     , x_return_status         => x_return_status
     , x_msg_count             => l_msg_count
     , x_msg_data              => l_msg_data
   );
    x_msg_count              := l_msg_count;
    x_msg_data               := l_msg_data;

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'CREATE_MAPPING'||'After Calling PA_PROJ_STRUC_MAPPING_PUB.CREATE_MAPPING:'||x_return_status;
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

   IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
          RAISE  FND_API.G_EXC_ERROR;
   END IF;

EXCEPTION
   WHEN FND_API.G_EXC_ERROR THEN
       IF (p_commit = FND_API.G_TRUE) THEN
        ROLLBACK TO CREATE_MAPPING_PUB;
       END IF;
       x_return_status := FND_API.G_RET_STS_ERROR;

   WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
       IF (p_commit = FND_API.G_TRUE) THEN
        ROLLBACK TO CREATE_MAPPING_PUB;
       END IF;
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

   WHEN OTHERS THEN
       IF (p_commit = FND_API.G_TRUE) THEN
        ROLLBACK TO CREATE_MAPPING_PUB;
       END IF;
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)       THEN
       FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name            => G_PKG_NAME
                   , p_procedure_name      => l_api_name   );
  END IF;
END create_mapping;
--------------------------------------------------------------------------------
--Name:               Update_Mapping
--Type:               Procedure
--Description:        This procedure creates a Mapping for the passed Wkp Task Id and Financial Task Id
--                    This program can be called as per following:
--mapped_task_id   mapped_task_ref mapped_task_name    wkp_task_id    wkp_task_name  wkp_task_reference  wkp_structure_ver_id   Status
--   y               N                N                  y               N              N                   N                   Valid
--   N               N                Y                  N               Y              N                   Y                   Valid
--   N               Y                N                  N               N              Y                   N                   Valid
--
--Called subprograms:    PA_PROJ_STRUC_MAPPING_PUB.UPDATE_MAPPING

--History:
--    24-Mar-2004   Ritesg            Created
--

PROCEDURE update_mapping
(   p_api_version                  IN        NUMBER     := 1.0
  , p_init_msg_list                IN        VARCHAR2   := FND_API.G_TRUE
  , p_commit                       IN        VARCHAR2   := FND_API.G_TRUE
  , p_debug_mode                   IN        VARCHAR2   := 'N'
  , px_mapped_task_id              IN        NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_mapped_task_reference        IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_mapped_task_name             IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_wkp_task_id                  IN        NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_wkp_task_name                IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_wkp_structure_version_id     IN        NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_wkp_task_reference           IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_project_id                   IN        NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_proj_source_reference        IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , x_return_status                OUT NOCOPY       VARCHAR2 /*Added the nocopy check for 4537865 */
  , x_msg_count                    OUT NOCOPY      NUMBER /*Added the nocopy check for 4537865 */
  , x_msg_data                     OUT NOCOPY      VARCHAR2 /*Added the nocopy check for 4537865 */
  )

  IS
    l_project_id            NUMBER;

    l_wkp_task_id              NUMBER;
    l_wkp_structure_version_id NUMBER;
    l_wkp_task_version_id      NUMBER;
    l_wkp_task_name            VARCHAR2(240);

    l_mapped_task_id        NUMBER;
    l_mapped_task_reference VARCHAR2(240);
    l_mapped_task_version_id NUMBER;
    l_mapped_task_name     VARCHAR2(240);

    l_msg_count             NUMBER;
    l_msg_data              VARCHAR2(2000);
    l_api_name              CONSTANT  VARCHAR2(30)     := 'UPDATE_MAPPING';

    l_return_status                  VARCHAR2(1);
    l_debug_mode                     VARCHAR2(1);
    l_debug_level2                   CONSTANT NUMBER := 2;
    l_debug_level3                   CONSTANT NUMBER := 3;
    l_debug_level4                   CONSTANT NUMBER := 4;
    l_debug_level5                   CONSTANT NUMBER := 5;

--This cursor is based on assumption that a financial structure will have only one version in a project.
CURSOR cur_get_mapped_task_version_id(p_project_id NUMBER, p_mapped_task_id NUMBER)
is
     Select element_version_id
     from pa_proj_element_versions
     where proj_element_id = p_mapped_task_id
     and project_id = p_project_id
     and financial_task_flag = 'Y';

BEGIN
 --  Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    IF (p_commit = FND_API.G_TRUE) THEN
       savepoint UPDATE_MAPPING_PUB;
    END IF;

    l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');
    IF l_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => 'UPDATE_MAPPING',
                                      p_debug_mode => l_debug_mode );
    END IF;

    IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : UPDATE_MAPPING : Printing Input parameters';
          Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'px_mapped_task_id'||':'||px_mapped_task_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_mapped_task_name'||':'||p_mapped_task_name,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_wkp_task_id'||':'||p_wkp_task_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_wkp_task_name'||':'||p_wkp_task_name,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_wkp_structure_version_id'||':'||p_wkp_structure_version_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_project_id'||':'||p_project_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_proj_source_reference'||':'||p_proj_source_reference,
                                     l_debug_level3);
     END IF;
   --Validate for input parameters
     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : UPDATE_MAPPING : Validating Input parameters';
          Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                     l_debug_level3);
     END IF;

     IF ( (p_project_id IS NULL OR p_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          AND
          (p_proj_source_reference IS NULL OR p_proj_source_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        )
     THEN
          IF l_debug_mode = 'Y' THEN
               Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : UPDATE_MAPPING : At least one of the parameters for deriving Project id should be passed';
               Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                          l_debug_level3);
          END IF;
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
     END IF;


     IF (
          (p_wkp_task_id IS NULL OR p_wkp_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
          AND
          (p_wkp_task_reference IS NULL OR p_wkp_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
          AND
          ( p_wkp_task_name IS NULL OR p_wkp_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
        )
     THEN
          IF l_debug_mode = 'Y' THEN
               Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : UPDATE_MAPPING : At least one of the parameters for deriving workplan task version id should be passed';
               Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                          l_debug_level3);
          END IF;
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
     END IF;


  --  Set API return status to success
     x_return_status     := FND_API.G_RET_STS_SUCCESS;

     IF p_wkp_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
        l_wkp_task_id := NULL;
     ELSE
        l_wkp_task_id := p_wkp_task_id;
     END IF;

     IF px_mapped_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       l_mapped_task_id := NULL;
     ELSE
       l_mapped_task_id := px_mapped_task_id;
     END IF;

     IF p_mapped_task_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_mapped_task_reference := NULL;
     ELSE
       l_mapped_task_reference := p_mapped_task_reference;
     END IF;

     IF p_wkp_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_wkp_task_name := NULL;
     ELSE
       l_wkp_task_name := p_wkp_task_name;
     END IF;

     IF p_mapped_task_name = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR THEN
       l_mapped_task_name := NULL;
     ELSE
       l_mapped_task_name := p_mapped_task_name;
     END IF;

     IF p_wkp_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
       l_wkp_structure_version_id := NULL;
     ELSE
       l_wkp_structure_version_id := p_wkp_structure_version_id;
     END IF;

     IF p_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM THEN
          l_project_id := NULL;
     ELSE
          l_project_id := p_project_id;
     END IF;
    -- Get the task and Project details based on source reference passed
    IF (
          ( p_project_id IS NULL OR p_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
          AND
          ( p_proj_source_reference IS NOT NULL AND p_proj_source_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR )
       )
    THEN
          PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                         p_pm_project_reference =>   p_proj_source_reference
                      ,  p_pa_project_id     =>      p_project_id
                      ,  p_out_project_id    =>      l_project_id
                      ,  p_return_status     =>      x_return_status
             );
    END IF;

    IF p_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'UPDATE_MAPPING'||'Project ID:'||l_project_id;
            pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

    IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
    ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;
 --Get the Wkp Task ID using Wkp Task Reference
     IF ( l_wkp_task_id IS NULL
          AND
          (p_wkp_task_reference IS NOT NULL AND p_wkp_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        )
     THEN
             PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'WORKPLAN'
                 , p_pm_task_reference  => p_wkp_task_reference
                 , p_out_task_id        => l_wkp_task_id
                 , p_return_status      => x_return_status );

               IF p_debug_mode = 'Y' THEN
                      pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'UPDATE_MAPPING'||'wkp_task_id:'||l_wkp_task_id;
                      pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
               END IF;

        IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
          RAISE FND_API.G_EXC_ERROR;
        END IF;
     END IF;

-- Get the mapped task Id based in mapped_task_reference
   IF (  l_mapped_task_id IS NULL
          AND
          (l_mapped_task_reference IS NOT NULL AND l_mapped_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
       )
   THEN
       PA_PROJECT_PVT.Convert_pm_taskref_to_id_all (
                   p_pa_project_id      => l_project_id
                 , p_structure_type     => 'FINANCIAL'
                 , p_pm_task_reference  => p_mapped_task_reference
                 , p_out_task_id        => l_mapped_task_id
                 , p_return_status      => x_return_status );

      IF p_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'UPDATE_MAPPING'||'mapped_task_id:'||l_mapped_task_id;
            pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
      END IF;
      IF x_return_status = FND_API.G_RET_STS_UNEXP_ERROR   THEN
             RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
      ELSIF x_return_status = FND_API.G_RET_STS_ERROR      THEN
             RAISE FND_API.G_EXC_ERROR;
      END IF;
   END IF;

     --Get the task version id from Wkp task Id
     -- Avoid this call if wkp task name and wkp task version ids are passed
     IF (l_wkp_task_id IS NOT NULL AND l_wkp_structure_version_id IS NULL ) THEN
           IF (PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS(l_project_id) = 'Y') THEN
                   l_wkp_structure_version_id := PA_PROJ_ELEMENTS_UTILS.LATEST_PUBLISHED_VER_ID(l_project_id, 'WORKPLAN');
                  IF (l_wkp_structure_version_id  IS NULL OR l_wkp_structure_version_id  = -1) THEN
                       l_wkp_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.get_current_working_ver_id(l_project_id);
                  END IF;
           END IF;
     END IF;
     l_wkp_task_version_id := PA_PROJ_ELEMENTS_UTILS.GET_TASK_VERSION_ID
                                 (
                                     p_structure_version_id => l_wkp_structure_version_id
                                   , p_task_id => l_wkp_task_id
                                 );
     --Get the financial task version id from financial task id,
     IF (l_mapped_task_id IS NOT NULL) THEN
         open cur_get_mapped_task_version_id (l_project_id, l_mapped_task_id);
         fetch cur_get_mapped_task_version_id into l_mapped_task_version_id;
         close cur_get_mapped_task_version_id ;

     END IF;

     IF p_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'UPDATE_MAPPING'||'Before Calling PA_PROJ_STRUC_MAPPING_PUB.UPDATE_MAPPING:';
            pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
     END IF;


-- All other validations done in PA_PROJ_STRUC_MAPPING_PUB.UPDATE_MAPPING
-- call PA_PROJ_STRUC_MAPPING_PUB.UPDATE_MAPPING here only

   PA_PROJ_STRUC_MAPPING_PUB.UPDATE_MAPPING
   (
       p_api_version               => p_api_version
     , p_calling_module            => 'AMG'
     , p_init_msg_list             => FND_API.G_FALSE
     , p_commit                    => FND_API.G_FALSE--bug 3766967
     , p_debug_mode                => p_debug_mode
     , p_project_id                => l_project_id
     , p_wp_task_name              => l_wkp_task_name
     , p_wp_prnt_str_ver_id        => l_wkp_structure_version_id
     , p_wp_task_version_id        => l_wkp_task_version_id
     , p_fp_task_name              => l_mapped_task_name
     , p_fp_task_version_id        => l_mapped_task_version_id
     , x_return_status             => l_return_status
     , x_msg_count                 => x_msg_count
     , x_msg_data                  => x_msg_data
   );

    x_msg_count              := l_msg_count;
    x_msg_data               := l_msg_data;

    IF p_debug_mode = 'Y' THEN
       pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'UPDATE_MAPPING'||'After Calling PA_PROJ_STRUC_MAPPING_PUB.UPDATE_MAPPING:'||x_return_status;
       pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
    END IF;

   IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
          RAISE  FND_API.G_EXC_ERROR;
   END IF;

EXCEPTION
   WHEN FND_API.G_EXC_ERROR        THEN
        IF (p_commit = FND_API.G_TRUE) THEN
          ROLLBACK TO UPDATE_MAPPING_PUB;
         END IF;
       x_return_status := FND_API.G_RET_STS_ERROR;

   WHEN FND_API.G_EXC_UNEXPECTED_ERROR        THEN
        IF (p_commit = FND_API.G_TRUE) THEN
          ROLLBACK TO UPDATE_MAPPING_PUB;
         END IF;
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

   WHEN OTHERS THEN
        IF (p_commit = FND_API.G_TRUE) THEN
          ROLLBACK TO UPDATE_MAPPING_PUB;
        END IF;
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)       THEN
       FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name            => G_PKG_NAME
                   , p_procedure_name      => l_api_name   );
  END IF;
END UPDATE_MAPPING;
--------------------------------------------------------------------------------
--Name:               process_tasks_table
--Type:               Procedure

--History:
--    24-Mar-2004   Ritesh            Created
--

PROCEDURE process_tasks_table
(   p_api_version                  IN        NUMBER     := 1.0
  , p_init_msg_list                IN        VARCHAR2   := FND_API.G_TRUE
  , p_debug_mode                   IN        VARCHAR2   := 'N'
  , p_structure_type               IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , p_tasks_in_tbl                 IN OUT  NOCOPY     task_in_tbl_type /*Added the nocopy check for 4537865 */
--  , p_tasks_out_tbl                OUT       task_in_tbl_type
  , p_project_id                   IN        NUMBER     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
  , p_proj_source_reference        IN        VARCHAR2   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
  , x_return_status                OUT NOCOPY       VARCHAR2 /*Added the nocopy check for 4537865 */
  , x_msg_count                    OUT NOCOPY       NUMBER /*Added the nocopy check for 4537865 */
  , x_msg_data                     OUT NOCOPY       VARCHAR2 /*Added the nocopy check for 4537865 */
  )

  IS
    l_project_id            NUMBER;
    l_proj_share_type       VARCHAR2(240);
    iCounter                NUMBER := 0;
    last_financial_flag     VARCHAR2(1) := NULL;
    last_wbs_level          NUMBER := -1;
    l_task_rec              task_in_rec_type;
    l_msg_count             NUMBER;
    l_msg_data              VARCHAR2(2000);
    l_api_name              CONSTANT  VARCHAR2(30)     := 'PROCESS_TASK_TABLE';

    l_return_status                  VARCHAR2(1);
    l_debug_mode                     VARCHAR2(1);
    l_debug_level2                   CONSTANT NUMBER := 2;
    l_debug_level3                   CONSTANT NUMBER := 3;
    l_debug_level4                   CONSTANT NUMBER := 4;
    l_debug_level5                   CONSTANT NUMBER := 5;

BEGIN
    --Initialize the message table if requested.
    IF FND_API.TO_BOOLEAN( p_init_msg_list )  THEN
       FND_MSG_PUB.initialize;
    END IF;

    l_debug_mode  := NVL(FND_PROFILE.value('PA_DEBUG_MODE'),'N');
    IF l_debug_mode = 'Y' THEN
          PA_DEBUG.set_curr_function( p_function   => 'PROCESS_TASK_TABLE',
                                      p_debug_mode => l_debug_mode );
    END IF;

    IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : PROCESS_TASK_TABLE : Printing Input parameters';
          Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_project_id'||':'||p_project_id,
                                     l_debug_level3);
          Pa_Debug.WRITE(g_pkg_name,'p_proj_source_reference'||':'||p_proj_source_reference,
                                  l_debug_level3);
     END IF;
   --Validate for input parameters
     IF l_debug_mode = 'Y' THEN
          Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : PROCESS_TASK_TABLE : Validating Input parameters';
          Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                     l_debug_level3);
     END IF;

     IF ( (p_project_id IS NULL OR p_project_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
          AND
          (p_proj_source_reference IS NULL OR p_proj_source_reference = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)
        )
     THEN
          IF l_debug_mode = 'Y' THEN
               Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : PROCESS_TASK_TABLE : At least one of the parameters for deriving Project id should be passed';
               Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                          l_debug_level3);
          END IF;
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
     END IF;

     IF ( p_tasks_in_tbl IS NULL OR p_tasks_in_tbl.count <= 0 )
     THEN
          IF l_debug_mode = 'Y' THEN
               Pa_Debug.g_err_stage:= 'PA_PROJECTS_PUB : PROCESS_TASK_TABLE : Empty or NULL Task Table';
               Pa_Debug.WRITE(g_pkg_name,Pa_Debug.g_err_stage,
                                          l_debug_level3);
          END IF;
          RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
     END IF;



  --  Set API return status to success
     x_return_status     := FND_API.G_RET_STS_SUCCESS;


  -- Get the task and Project details based on source reference passed
     IF (p_project_id IS NULL AND p_proj_source_reference IS NOT NULL ) THEN
          PA_PROJECT_PVT.Convert_pm_projref_to_id  (
                         p_pm_project_reference =>   p_proj_source_reference
                      ,  p_pa_project_id     =>      p_project_id
                      ,  p_out_project_id    =>      l_project_id
                      ,  p_return_status     =>      x_return_status
             );
     END IF;

     IF p_debug_mode = 'Y' THEN
            pa_debug.g_err_stage := 'PA_PROJECTS_PUB:'||'PROCESS_TASK_TABLE'||'Project ID:'||l_project_id;
            pa_debug.write(g_pkg_name,pa_debug.g_err_stage,3);
     END IF;

     IF (x_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
     ELSIF  (x_return_status = FND_API.G_RET_STS_ERROR) THEN
        RAISE  FND_API.G_EXC_ERROR;
     END IF;
-- Get the project sharing type
     l_proj_share_type  := PA_PROJ_TASK_STRUC_PUB.GET_SHARE_TYPE(l_project_id);
     IF (l_proj_share_type = 'SHARE_PARTIAL' and p_structure_type = 'FINANCIAL')
     THEN
          FOR iCounter IN REVERSE p_tasks_in_tbl.FIRST..p_tasks_in_tbl.LAST LOOP
               l_task_rec := p_tasks_in_tbl(iCounter);

               IF (iCounter <> p_tasks_in_tbl.LAST OR last_wbs_level <> 1)
               THEN
                    --If not the summary task and not at the same level as the last task, set flag as 'Y', if lower task is 'Y'
                    IF (l_task_rec.wbs_level <> last_wbs_level )
                    THEN
                         l_task_rec.financial_task_flag := last_financial_flag;
                    END IF;

               END IF;

               IF (l_task_rec.financial_task_flag IS NOT NULL)
               THEN
                    IF(
                         l_task_rec.wbs_level = last_wbs_level
                         and
                         last_financial_flag = 'Y'
                         and
                         l_task_rec.financial_task_flag = 'N'
                      )
                    THEN
                         NULL;
                    ELSE
                        last_financial_flag :=  l_task_rec.financial_task_flag;
                    END IF;
               ELSE
                    last_financial_flag := 'N';
               END IF;

               last_wbs_level := l_task_rec.wbs_level;
               --p_tasks_out_tbl(iCounter):= l_task_rec;
          END LOOP;

     END IF;

EXCEPTION
   WHEN FND_API.G_EXC_ERROR        THEN

       x_return_status := FND_API.G_RET_STS_ERROR;

   WHEN FND_API.G_EXC_UNEXPECTED_ERROR        THEN

       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

   WHEN OTHERS THEN

       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

   IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)       THEN
       FND_MSG_PUB.add_exc_msg
                   ( p_pkg_name            => G_PKG_NAME
                   , p_procedure_name      => l_api_name   );
  END IF;
END process_tasks_table;
--End Add by rtarway for FP.M Development

--added by hsiu
--
PROCEDURE Create_Dependency(
  p_api_version_number          IN  NUMBER   :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_commit                      IN  VARCHAR2 := FND_API.G_FALSE
 ,p_init_msg_list               IN  VARCHAR2 := FND_API.G_FALSE
 ,p_msg_count                   OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
 ,p_msg_data                    OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_return_status               OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_pm_product_code     IN  VARCHAR2
 ,p_pm_project_reference    IN  VARCHAR2
 ,p_pa_project_id       IN  NUMBER
 ,p_structure_version_id        IN  NUMBER
 ,p_pm_task_reference           IN  VARCHAR2
 ,p_pa_task_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pm_pred_reference           IN  VARCHAR2
 ,p_pa_pred_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_type                        IN  VARCHAR2 := 'FS'
 ,p_lag_days                    IN  NUMBER   := 0
 ,p_comments                    IN  VARCHAR2 := NULL
)
IS
  l_msg_count NUMBER;
  l_msg_data      VARCHAR2(250);
  l_return_status VARCHAR2(1);
  l_project_id  NUMBER;
  l_task_ver_id     NUMBER;
  l_pred_ver_id     NUMBER;
  l_template_flag   VARCHAR2(1);
  l_wp_status       VARCHAR2(150);
  l_versioning      VARCHAR2(1);

--  CURSOR get_task_ver_id(c_project_id NUMBER, c_pm_task_reference NUMBER)  --Bug 3735799
  CURSOR get_task_ver_id(c_project_id NUMBER, c_pm_task_reference VARCHAR2)  --Bug 3735799
  IS
  select ppev.element_version_id
    from pa_proj_elements ppe, pa_proj_element_versions ppev
   where ppe.project_id = c_project_id
     and ppe.PM_SOURCE_REFERENCE = c_pm_task_reference
     and ppe.project_id = ppev.project_Id
     and ppe.proj_element_id = ppev.proj_element_id
     and ppev.parent_structure_version_id = p_structure_version_id;

  CURSOR get_task_ver_id2(c_project_id NUMBER, c_task_id NUMBER)  --Bug 3880403
  IS
  select ppev.element_version_id
    from pa_proj_elements ppe, pa_proj_element_versions ppev
   where ppe.project_id = c_project_id
     and ppe.proj_element_id = c_task_id
     and ppe.project_id = ppev.project_Id
     and ppe.proj_element_id = ppev.proj_element_id
     and ppev.parent_structure_version_id = p_structure_version_id;

  CURSOR get_template_flag(c_project_id NUMBER)
  IS
  select template_flag
    from pa_projects_all
   where project_id = c_project_id;

  CURSOR get_workplan_status(c_project_id NUMBER, c_structure_version_id NUMBER)
  IS
  select STATUS_CODE
    from pa_proj_elem_ver_structure
   where project_id = c_project_id
     and element_version_id = c_structure_version_id;
BEGIN
  savepoint create_dep_pub_amg;

  IF FND_API.TO_BOOLEAN( p_init_msg_list )
  THEN
    FND_MSG_PUB.Initialize;
  END IF;

  --get project id
  PA_PROJECT_PVT.Convert_pm_projref_to_id
  (        p_pm_project_reference =>      p_pm_project_reference
        ,  p_pa_project_id     =>      p_pa_project_id
        ,  p_out_project_id    =>      l_project_id
        ,  p_return_status     =>      l_return_status
   );

   IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
     RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN
     RAISE  FND_API.G_EXC_ERROR;
   END IF;
--
   --Bug 3768875
   If PA_PROJECT_STRUCTURE_UTILS.Check_Project_exists(l_project_id) = 'Y' Then
      If PA_PROJECT_STRUCTURE_UTILS.Check_Structure_Ver_Exists(l_project_id,p_structure_version_id) <> 'Y' THEN
           PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                p_msg_name => 'PA_INV_STRUCUTRE_VER_ID');
           RAISE FND_API.G_EXC_ERROR;
      End If;
   Else
      PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                           p_msg_name => 'PA_INV_PROJECT_ID');
      RAISE FND_API.G_EXC_ERROR;
   End If;
--
   --check if structure version can be modified
   OPEN get_template_flag(l_project_id);
   FETCH get_template_flag into l_template_flag;
   CLOSE get_template_flag;

   l_versioning := PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(l_project_id);

   --if template, then ok
   IF l_template_flag = 'N' THEN
     --project, check if versioning is enabled
     --            ok if versioning is disabled
     IF (l_versioning IS NOT NULL and l_versioning = 'Y') THEN
       --            if versioning enabled, ok if working
       OPEN get_workplan_status(l_project_id, p_structure_version_id);
       FETCH get_workplan_status into l_wp_status;
       CLOSE get_workplan_status;
       IF l_wp_status <> 'STRUCTURE_WORKING' THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_UPDATE_PUB_VER_ERR');
         RAISE FND_API.G_EXC_ERROR;
       END IF;
     ELSE
       IF (l_versioning IS NULL) THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_WORKPLAN_DISABLED');
         RAISE FND_API.G_EXC_ERROR;
       END IF;
     END IF;
   END IF;

   --get task id
   IF (p_pm_task_reference IS NOT NULL) THEN
     open get_task_ver_id(l_project_id, p_pm_task_reference);
     Fetch get_task_ver_id into l_task_ver_id;
     --   Bug 3768875
     IF get_task_ver_id%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id;
   END IF;

   --bug 3880403
   IF (p_pm_task_reference IS NULL OR l_task_ver_id IS NULL) THEN
     --need to get id using task id
     OPEN get_task_ver_id2(l_project_id, p_pa_task_id);
     FETCH get_task_Ver_id2 into l_task_ver_id;
     IF get_task_ver_id2%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id2;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id2;
   END IF;
   --end bug 3880403
--
   --get predecessor id
   IF (p_pm_pred_reference IS NOT NULL) THEN
     open get_task_ver_id(l_project_id, p_pm_pred_reference);
     Fetch get_task_ver_id into l_pred_ver_id;
     --Bug 3768875
     IF get_task_ver_id%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id;
   END IF;

   --bug 3880403
   IF (p_pm_pred_reference IS NULL OR l_pred_ver_id IS NULL) THEN
     --need to get id using task id
     OPEN get_task_ver_id2(l_project_id, p_pa_pred_id);
     FETCH get_task_Ver_id2 into l_pred_ver_id;
     IF get_task_ver_id2%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id2;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id2;
   END IF;
   --end bug 3880403
--
-- Bug 3768933 Validating the relationship_subtype
   -- Bug 8513869 - Replaced lookup type PA_OBJECT_DEPENDENCY_TYPES with PA_DEPENDENCY_TYPE
   IF PA_PROJ_ELEMENTS_UTILS.check_pa_lookup_exists('PA_DEPENDENCY_TYPE',p_type) <> 'Y' THEN
      PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                           p_msg_name => 'PA_PS_INV_REL_SUBTYPE_VAL');
      RAISE FND_API.G_EXC_ERROR;
   END IF;
--
   --call existing create dependency API to create intra dependency
   PA_RELATIONSHIP_PVT.Create_Dependency(
             p_calling_module                   => 'SELF_SERVICE'
            ,p_src_proj_id                      => l_project_id
            ,p_src_task_ver_id                  => l_task_ver_id
            ,p_dest_proj_id                     => l_project_id
            ,p_dest_task_ver_id                 => l_pred_ver_id
            ,p_type                             => p_type
            ,p_lag_days                         => p_lag_days
            ,p_comments                         => p_comments
            ,x_return_status                    => p_return_status
            ,x_msg_count                        => p_msg_count
            ,x_msg_data                         => p_msg_data
            );

  IF p_msg_count > 0 THEN
    RAISE FND_API.G_EXC_ERROR;
  END IF;

  p_return_status := FND_API.G_RET_STS_SUCCESS;

EXCEPTION
  WHEN FND_API.G_EXC_ERROR THEN
    ROLLBACK TO create_dep_pub_amg;
    p_return_status := FND_API.G_RET_STS_ERROR;

-- Begin fix for Bug # 4323969.

   FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                             , p_data   =>  p_msg_data);

-- End fix for Bug # 4323969.

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
    ROLLBACK TO create_dep_pub_amg;
    p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

-- Begin fix for Bug # 4323969.

   FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                             , p_data   =>  p_msg_data);

-- End fix for Bug # 4323969.

  When OTHERS then
    ROLLBACK TO create_dep_pub_amg;
    p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

-- Begin fix for Bug # 4323969.

   FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                             , p_data   =>  p_msg_data);

-- End fix for Bug # 4323969.

END Create_Dependency;



PROCEDURE Update_Dependency(
  p_api_version_number          IN  NUMBER   :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_commit                      IN  VARCHAR2 := FND_API.G_FALSE
 ,p_init_msg_list               IN  VARCHAR2 := FND_API.G_FALSE
 ,p_msg_count                   OUT NOCOPY NUMBER /*Added the nocopy check for 4537865 */
 ,p_msg_data                    OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_return_status               OUT NOCOPY VARCHAR2 /*Added the nocopy check for 4537865 */
 ,p_pm_product_code             IN  VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_pm_project_reference        IN  VARCHAR2
 ,p_pa_project_id       IN  NUMBER
 ,p_structure_version_id        IN  NUMBER
 ,p_pm_task_reference           IN  VARCHAR2
 ,p_pa_task_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pm_pred_reference           IN  VARCHAR2
 ,p_pa_pred_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_type                        IN  VARCHAR2 := 'FS'
 ,p_lag_days                    IN  NUMBER   := 0
 ,p_comments                    IN  VARCHAR2 := NULL
)
IS
  l_return_status VARCHAR2(1);
  l_project_id  NUMBER;
  l_task_ver_id     NUMBER;
  l_pred_ver_id     NUMBER;
  l_template_flag   VARCHAR2(1);
  l_wp_status       VARCHAR2(150);
  l_versioning      VARCHAR2(1);
  l_record_version_number NUMBER;

--  CURSOR get_task_ver_id(c_project_id NUMBER, c_pm_task_reference NUMBER)  --Bug 3735799
  CURSOR get_task_ver_id(c_project_id NUMBER, c_pm_task_reference VARCHAR2)  --Bug 3735799
  IS
  select ppev.element_version_id
    from pa_proj_elements ppe, pa_proj_element_versions ppev
   where ppe.project_id = c_project_id
     and ppe.PM_SOURCE_REFERENCE = c_pm_task_reference
     and ppe.project_id = ppev.project_Id
     and ppe.proj_element_id = ppev.proj_element_id
     and ppev.parent_structure_version_id = p_structure_version_id;

  CURSOR get_task_ver_id2(c_project_id NUMBER, c_task_id NUMBER)  --Bug 3880403
  IS
  select ppev.element_version_id
    from pa_proj_elements ppe, pa_proj_element_versions ppev
   where ppe.project_id = c_project_id
     and ppe.proj_element_id = c_task_id
     and ppe.project_id = ppev.project_Id
     and ppe.proj_element_id = ppev.proj_element_id
     and ppev.parent_structure_version_id = p_structure_version_id;

  CURSOR get_template_flag(c_project_id NUMBER)
  IS
  select template_flag
    from pa_projects_all
   where project_id = c_project_id;

  CURSOR get_workplan_status(c_project_id NUMBER, c_structure_version_id NUMBER)
  IS
  select STATUS_CODE
    from pa_proj_elem_ver_structure
   where project_id = c_project_id
     and element_version_id = c_structure_version_id;

  CURSOR get_rvn(c_id_from NUMBER, c_id_to NUMBER) IS
      SELECT record_version_number
        FROM pa_object_relationships
       WHERE object_id_to1 = c_id_to
         AND object_id_from1 = c_id_from
         AND relationship_type = 'D';
BEGIN
  savepoint update_dep_pub_amg;

  IF FND_API.TO_BOOLEAN( p_init_msg_list )
  THEN
    FND_MSG_PUB.Initialize;
  END IF;

  --get project id
  PA_PROJECT_PVT.Convert_pm_projref_to_id
  (        p_pm_project_reference =>      p_pm_project_reference
        ,  p_pa_project_id     =>      p_pa_project_id
        ,  p_out_project_id    =>      l_project_id
        ,  p_return_status     =>      l_return_status
   );

   IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
     RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN
     RAISE  FND_API.G_EXC_ERROR;
   END IF;
--
   --Bug 3769089
   If PA_PROJECT_STRUCTURE_UTILS.Check_Project_exists(l_project_id) = 'Y' Then
      If PA_PROJECT_STRUCTURE_UTILS.Check_Structure_Ver_Exists(l_project_id,p_structure_version_id) <> 'Y' THEN
           PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                p_msg_name => 'PA_INV_STRUCUTRE_VER_ID');

           RAISE FND_API.G_EXC_ERROR;
      End If;
   Else
      PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                           p_msg_name => 'PA_INV_PROJECT_ID');
      RAISE FND_API.G_EXC_ERROR;
   End If;
--
--
   --check if structure version can be modified
   OPEN get_template_flag(l_project_id);
   FETCH get_template_flag into l_template_flag;
   CLOSE get_template_flag;

   l_versioning := PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(l_project_id);

   --if template, then ok
   IF l_template_flag = 'N' THEN
     --project, check if versioning is enabled
     --            ok if versioning is disabled
     IF (l_versioning IS NOT NULL and l_versioning = 'Y') THEN
       --            if versioning enabled, ok if working
       OPEN get_workplan_status(l_project_id, p_structure_version_id);
       FETCH get_workplan_status into l_wp_status;
       CLOSE get_workplan_status;
       IF l_wp_status <> 'STRUCTURE_WORKING' THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_UPDATE_PUB_VER_ERR');
         RAISE FND_API.G_EXC_ERROR;
       END IF;
     ELSE
       IF (l_versioning IS NULL) THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_WORKPLAN_DISABLED');
         RAISE FND_API.G_EXC_ERROR;
       END IF;
     END IF;
   END IF;

   --get task id
   IF p_pm_task_reference IS NOT NULL THEN
     open get_task_ver_id(l_project_id, p_pm_task_reference);
     Fetch get_task_ver_id into l_task_ver_id;
     --Bug 3769089
     IF get_task_ver_id%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id;
   END IF;

   --bug 3880403
   IF p_pm_task_reference IS NULL OR l_task_ver_id IS NULL THEN
     --need to get id using task id
     OPEN get_task_ver_id2(l_project_id, p_pa_task_id);
     FETCH get_task_Ver_id2 into l_task_ver_id;
     IF get_task_ver_id2%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id2;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id2;
   END IF;
   --end bug 3880403


   --get predecessor id
   IF (p_pm_pred_reference IS NOT NULL) THEN
     open get_task_ver_id(l_project_id, p_pm_pred_reference);
     Fetch get_task_ver_id into l_pred_ver_id;
     --Bug 3769089
     IF get_task_ver_id%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id;
   END IF;

   --bug 3880403
   IF p_pm_pred_reference IS NULL OR l_pred_ver_id IS NULL THEN
     --need to get id using task id
     OPEN get_task_ver_id2(l_project_id, p_pa_pred_id);
     FETCH get_task_Ver_id2 into l_pred_ver_id;
     IF get_task_ver_id2%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id2;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id2;
   END IF;
   --end bug 3880403

--
   --get record version number
   open get_rvn(l_task_ver_id, l_pred_ver_id);
   FETCH get_rvn into l_record_version_number;
   --Bug 3769047
   IF get_rvn%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_DEP_ID');
         RAISE FND_API.G_EXC_ERROR;
   END IF;
   CLOSE get_rvn;
--
   --call existing update dependency API to create intra dependency
   PA_RELATIONSHIP_PVT.Update_Dependency(
             p_calling_module                   => 'SELF_SERVICE'
            ,p_task_version_id                  => l_pred_ver_id
            ,p_src_task_version_id              => l_task_ver_id
            ,p_type                             => p_type
            ,p_lag_days                         => p_lag_days
            ,p_comments                         => p_comments
            ,p_record_version_number            => l_record_version_number
            ,x_return_status                    => p_return_status
            ,x_msg_count                        => p_msg_count
            ,x_msg_data                         => p_msg_data
            );

  IF p_msg_count > 0 THEN
    RAISE FND_API.G_EXC_ERROR;
  END IF;

  p_return_status := FND_API.G_RET_STS_SUCCESS;

EXCEPTION
  WHEN FND_API.G_EXC_ERROR THEN
    ROLLBACK TO update_dep_pub_amg;
    p_return_status := FND_API.G_RET_STS_ERROR;

    -- 4537865 Included same fix as 4323969.
    FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                          , p_data   =>  p_msg_data);

  WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
    ROLLBACK TO update_dep_pub_amg;
    p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

    -- 4537865 : Included same fix as 4323969.
    FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                          , p_data   =>  p_msg_data);

  When OTHERS then
    ROLLBACK TO update_dep_pub_amg;
    p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
    IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN

      FND_MSG_PUB.add_exc_msg
      (p_pkg_name     => G_PKG_NAME
      , p_procedure_name => 'Update_Dependency');

    END IF;
   -- 4537865 : Included same fix as 4323969.
    FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                          , p_data   =>  p_msg_data);
END Update_Dependency;



PROCEDURE Delete_Dependency(
  p_api_version_number          IN  NUMBER   :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_commit                      IN  VARCHAR2 := FND_API.G_FALSE
 ,p_init_msg_list               IN  VARCHAR2 := FND_API.G_FALSE
 ,p_msg_count                   OUT NOCOPY NUMBER  /*Added the nocopy check for 4537865 */
 ,p_msg_data                    OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_return_status               OUT NOCOPY VARCHAR2  /*Added the nocopy check for 4537865 */
 ,p_pm_product_code     IN  VARCHAR2
 ,p_pm_project_reference    IN  VARCHAR2
 ,p_pa_project_id       IN  NUMBER
 ,p_structure_version_id        IN  NUMBER
 ,p_pm_task_reference           IN  VARCHAR2
 ,p_pa_task_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pm_pred_reference           IN  VARCHAR2
 ,p_pa_pred_id                  IN  NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
)
IS
  l_msg_count       NUMBER;
  l_msg_data        VARCHAR2(250);
  l_return_status VARCHAR2(1);
  l_project_id  NUMBER;
  l_task_ver_id     NUMBER;
  l_pred_ver_id     NUMBER;
  l_template_flag   VARCHAR2(1);
  l_wp_status       VARCHAR2(150);
  l_versioning      VARCHAR2(1);
  l_record_version_number NUMBER;
  l_obj_rel_id      NUMBER;

--  CURSOR get_task_ver_id(c_project_id NUMBER, c_pm_task_reference NUMBER)   --Bug 3735799
  CURSOR get_task_ver_id(c_project_id NUMBER, c_pm_task_reference VARCHAR2)   --Bug 3735799
  IS
  select ppev.element_version_id
    from pa_proj_elements ppe, pa_proj_element_versions ppev
   where ppe.project_id = c_project_id
     and ppe.PM_SOURCE_REFERENCE = c_pm_task_reference
     and ppe.project_id = ppev.project_Id
     and ppe.proj_element_id = ppev.proj_element_id
     and ppev.parent_structure_version_id = p_structure_version_id;

  CURSOR get_task_ver_id2(c_project_id NUMBER, c_task_id NUMBER)  --Bug 3880403
  IS
  select ppev.element_version_id
    from pa_proj_elements ppe, pa_proj_element_versions ppev
   where ppe.project_id = c_project_id
     and ppe.proj_element_id = c_task_id
     and ppe.project_id = ppev.project_Id
     and ppe.proj_element_id = ppev.proj_element_id
     and ppev.parent_structure_version_id = p_structure_version_id;

  CURSOR get_template_flag(c_project_id NUMBER)
  IS
  select template_flag
    from pa_projects_all
   where project_id = c_project_id;

  CURSOR get_workplan_status(c_project_id NUMBER, c_structure_version_id NUMBER)
  IS
  select STATUS_CODE
    from pa_proj_elem_ver_structure
   where project_id = c_project_id
     and element_version_id = c_structure_version_id;

  CURSOR get_rvn(c_id_from NUMBER, c_id_to NUMBER) IS
      SELECT object_relationship_id, record_version_number
        FROM pa_object_relationships
       WHERE object_id_to1 = c_id_to
         AND object_id_from1 = c_id_from
         AND relationship_type = 'D';
BEGIN
  savepoint delete_dep_pub_amg;

  IF FND_API.TO_BOOLEAN( p_init_msg_list )
  THEN
    FND_MSG_PUB.Initialize;
  END IF;

  --get project id
  PA_PROJECT_PVT.Convert_pm_projref_to_id
  (        p_pm_project_reference =>      p_pm_project_reference
        ,  p_pa_project_id     =>      p_pa_project_id
        ,  p_out_project_id    =>      l_project_id
        ,  p_return_status     =>      l_return_status
   );

   IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
     RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
   ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN
     RAISE  FND_API.G_EXC_ERROR;
   END IF;
--
   --Bug 3769079
   If PA_PROJECT_STRUCTURE_UTILS.Check_Project_exists(l_project_id) = 'Y' Then
      If PA_PROJECT_STRUCTURE_UTILS.Check_Structure_Ver_Exists(l_project_id,p_structure_version_id) <> 'Y' THEN
           PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                p_msg_name => 'PA_INV_STRUCUTRE_VER_ID');
           RAISE FND_API.G_EXC_ERROR;
      End If;
   Else
      PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                           p_msg_name => 'PA_INV_PROJECT_ID');
      RAISE FND_API.G_EXC_ERROR;
   End If;
--
--
   --check if structure version can be modified
   OPEN get_template_flag(l_project_id);
   FETCH get_template_flag into l_template_flag;
   CLOSE get_template_flag;

   l_versioning := PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(l_project_id);

   --if template, then ok
   IF l_template_flag = 'N' THEN
     --project, check if versioning is enabled
     --            ok if versioning is disabled
     IF (l_versioning IS NOT NULL and l_versioning = 'Y') THEN
       --            if versioning enabled, ok if working
       OPEN get_workplan_status(l_project_id, p_structure_version_id);
       FETCH get_workplan_status into l_wp_status;
       CLOSE get_workplan_status;
       IF l_wp_status <> 'STRUCTURE_WORKING' THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_UPDATE_PUB_VER_ERR');
         RAISE FND_API.G_EXC_ERROR;
       END IF;
     ELSE
       IF (l_versioning IS NULL) THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_WORKPLAN_DISABLED');
         RAISE FND_API.G_EXC_ERROR;
       END IF;
     END IF;
   END IF;

   --get task id
   IF (p_pm_task_reference IS NOT NULL) THEN
     open get_task_ver_id(l_project_id, p_pm_task_reference);
     Fetch get_task_ver_id into l_task_ver_id;
     --Bug 3769079
     IF get_task_ver_id%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id;
   END IF;

   --bug 3880403
   IF p_pm_task_reference IS NULL OR l_task_ver_id IS NULL THEN
     --need to get id using task id
     OPEN get_task_ver_id2(l_project_id, p_pa_task_id);
     FETCH get_task_Ver_id2 into l_task_ver_id;
     IF get_task_ver_id2%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id2;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id2;
   END IF;
   --end bug 3880403
--
   --get predecessor id
   IF (p_pm_pred_reference IS NOT NULL) THEN
     open get_task_ver_id(l_project_id, p_pm_pred_reference);
     Fetch get_task_ver_id into l_pred_ver_id;
     --Bug 3769079
     IF get_task_ver_id%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id;
   END IF;

   --bug 3880403
   IF p_pm_pred_reference IS NULL OR l_pred_ver_id IS NULL THEN
     --need to get id using task id
     OPEN get_task_ver_id2(l_project_id, p_pa_pred_id);
     FETCH get_task_Ver_id2 into l_pred_ver_id;
     IF get_task_ver_id2%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_TASK_ID');
         CLOSE get_task_ver_id2;
         RAISE FND_API.G_EXC_ERROR;
     END IF;
     CLOSE get_task_ver_id2;
   END IF;
   --end bug 3880403


   --call existing delete dependency API to create intra dependency
   --get record version number
   open get_rvn(l_task_ver_id, l_pred_ver_id);
   FETCH get_rvn into l_obj_rel_id, l_record_version_number;
   --Bug 3769066
   IF get_rvn%NOTFOUND THEN
         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name => 'PA_PS_INV_DEP_ID');
         RAISE FND_API.G_EXC_ERROR;
   END IF;
   CLOSE get_rvn;

    PA_RELATIONSHIP_PVT.Delete_Dependency(
             p_calling_module                   => 'SELF_SERVICE'
            ,p_object_relationship_id           => l_obj_rel_id
            ,x_return_status                    => l_return_status
            ,x_msg_count                        => l_msg_count
            ,x_msg_data                         => l_msg_data
            );

  -- 4537865 : Check has to be made against l_msg_count ,not p_msg_count
  -- IF p_msg_count > 0 THEN
  IF l_msg_count > 0 THEN
    RAISE FND_API.G_EXC_ERROR;
  END IF;

  p_return_status := FND_API.G_RET_STS_SUCCESS;
EXCEPTION

  WHEN FND_API.G_EXC_ERROR THEN
    ROLLBACK TO delete_dep_pub_amg;
    p_return_status := FND_API.G_RET_STS_ERROR;
    -- 4537865 Included same fix as 4323969.
    FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
    , p_data   =>  p_msg_data);
  WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
    ROLLBACK TO delete_dep_pub_amg;
    p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
  -- 4537865 Included same fix as 4323969.
  FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
  , p_data   =>  p_msg_data);
  When OTHERS then
    ROLLBACK TO delete_dep_pub_amg;
    p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

    IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN

      FND_MSG_PUB.add_exc_msg
      (p_pkg_name     => G_PKG_NAME
      , p_procedure_name => 'Delete_Dependency');

    END IF;
  -- 4537865 Included same fix as 4323969.
  FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
  , p_data   =>  p_msg_data);

END Delete_Dependency;
--
--
-- Begin fix for Bug # 4096218.

PROCEDURE check_task_mfd
( p_api_version_number          IN      NUMBER
 , p_init_msg_list              IN      VARCHAR2        := FND_API.G_FALSE
 , p_return_status              OUT NOCOPY    VARCHAR2 /*Added the nocopy check for 4537865 */
 , p_msg_count                  OUT NOCOPY     NUMBER /*Added the nocopy check for 4537865 */
 , p_msg_data                   OUT NOCOPY    VARCHAR2 /*Added the nocopy check for 4537865 */
 , p_project_id                 IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 , p_pm_project_reference       IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 , p_task_id                    IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 , p_pm_task_reference          IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 , p_task_version_id            IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 , p_structure_type             IN      VARCHAR2        := 'FINANCIAL'
 , p_perform_check_delete_task_ok IN    VARCHAR2        := 'N'
 , p_check_task_mfd_flag        OUT NOCOPY    VARCHAR2 /*Added the nocopy check for 4537865 */
)
IS

cursor cur_task_status(c_project_id NUMBER, c_task_id NUMBER, c_task_version_id NUMBER)
is
select task_unpub_ver_status_code,parent_structure_version_id
from pa_proj_element_versions ppev
where ppev.project_id = c_project_id
and ppev.proj_element_id = c_task_id
and ppev.element_version_id = c_task_version_id;

cursor c_valid_task_id(c_task_id NUMBER,c_project_id NUMBER)
is
select 'Y'
from pa_proj_elements
where proj_element_id = c_task_id
  and project_id = c_project_id ;

cursor get_task_ver_id(c_task_id NUMBER)
is
select element_version_id from pa_proj_element_versions
where proj_element_id = c_task_id ;

 -- Begin fix for Bug # 4096218 : 09-AUG-2005.

 -- Modified cursor to return the element_number if the task exists
 -- in a published workplan structure version. This cursor will
 -- work for both split and shared projects.
 /*

 CURSOR   l_amg_task_csr
      (p_pa_task_id pa_tasks.task_id%type)
   IS
   SELECT   task_number
   FROM     pa_tasks p
   WHERE p.task_id = p_pa_task_id;

  */

  -- The Following cursor has been commented for Performance Bug 4878722 SQL ID 14909071
  -- The purpose of this cursor per usage in this API is to verify whether the task exists in any of the previously published versions
  -- cursor l_amg_task_csr (p_pa_task_id pa_tasks.task_id%type) is
  -- select ppe.element_number
  -- from pa_proj_elements ppe, pa_proj_elem_ver_structure ppevs
  -- where ppe.proj_element_id = p_pa_task_id
  -- and ppe.parent_structure_id = ppevs.proj_element_id
  -- and ppevs.status_code = 'STRUCTURE_PUBLISHED';

  -- The Following cursor has been re-written for Performance Bug 4878722 SQL ID 14909071

/*
  Bug Fix 5263426

  Issue:

   After succesful deletion of a task and the publishing of the structure, a new task is added to the current working version.
   And that the task was deleted and the MSP was returning a message saying 'Mark this task for deletion?'. Ideally this
   should be used for tasks which are present in the published versions as well. Only those tasks will be marked for deletion
   and during publishing those marked tasks will be deleted. All the other tasks which dont have any transactions and are not
   present in the published versions should be deleted right away and the MSP should not show any message.

  Analysis:

   This is happening due to value 'M' being returned from the PA_PROJECT_PUB.check_task_mfd APIs OUT param  p_check_task_mfd_flag.
   The reason is due to the bug in the cursor l_amg_task_csr.
   This SQL is starting with an element id i.e the task id and getting the parent sturcture id and looking for that parent
   structure id's published status in other tables.

   Ideally this is ignoring the versions of a strucutre. Even if one structure version is published the above SQL will always
   find a record in the structures table with status published irrespective of the fact that the task was added to a working
   version and same is not in a published version.

 Solution:
   The correct way of doing this is to get the task status directly from the element versions table itself as shown below
   and modify the logic to use the above column value.


  cursor l_amg_task_csr (p_pa_task_id pa_tasks.task_id%type) is
  select 1 from dual
  where exists (select  ppe.element_number
  from pa_proj_elements ppe, pa_proj_elem_ver_structure ppevs
  where ppe.proj_element_id = p_pa_task_id
  and ppe.object_type = 'PA_TASKS'
  and ppe.parent_structure_id = ppevs.proj_element_id
  and ppe.project_id = ppevs.project_id
  and ppevs.status_code = 'STRUCTURE_PUBLISHED');
*/

  cursor l_amg_task_csr (p_pa_task_id pa_tasks.task_id%type) is
  select 1 from dual
  where exists(
  select pev.task_unpub_ver_status_code
  from  pa_proj_element_versions pev
  where pev.proj_element_id = p_pa_task_id
  and   pev.object_type = 'PA_TASKS'
  and pev.task_unpub_ver_status_code in ('PUBLISHED','TO_BE_DELETED'));
-- End fix for Bug  5263429
-- End fix for Bug # 4096218 : 09-AUG-2005.

l_dummy varchar2(1);
l_derive varchar2(1);

l_project_id NUMBER := NULL;

l_task_version_id NUMBER := NULL;

l_task_id NUMBER := NULL;

l_structure_version_id NUMBER := NULL;

l_task_status VARCHAR2(30) := NULL;

l_check_task_mfd_flag VARCHAR2(1) := NULL;

l_api_name CONSTANT VARCHAR2(30) := 'check_task_mfd';

l_return_status VARCHAR2(1) := NULL;

l_msg_count NUMBER := NULL; -- 4096218 : Issues found during Unit Testing

l_msg_data VARCHAR2(2000) := NULL;  -- 4096218 : This was declared as size 30 ,causing unexpected error.Corrected it


l_delete_task_ok_flag VARCHAR2(1);

l_wp_str_exists VARCHAR2(1);

l_versioning_enabled VARCHAR2(1);

l_pub_ver_exists VARCHAR2(1);

l_amg_task_number       NUMBER; -- Datatype changed for Bug 4878722
BEGIN

    IF NOT FND_API.Compatible_API_Call (g_api_version_number
                                        , p_api_version_number
                                        , l_api_name
                                        , G_PKG_NAME) THEN

        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        END IF;

    IF FND_API.TO_BOOLEAN(p_init_msg_list) THEN

        FND_MSG_PUB.initialize;

    END IF;

    p_return_status := FND_API.G_RET_STS_SUCCESS;

    -- Initialize output flag.

    l_check_task_mfd_flag := 'N';
        l_delete_task_ok_flag := 'N';
        l_versioning_enabled := 'N' ;
        l_pub_ver_exists     :='N' ;

    -- Convert project reference to id.

        PA_PROJECT_PVT.Convert_pm_projref_to_id
        (p_pm_project_reference         =>      p_pm_project_reference
         , p_pa_project_id              =>      p_project_id
         , p_out_project_id             =>      l_project_id
         , p_return_status              =>      l_return_status);

        IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN

                RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

        ELSIF  (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN

                RAISE  FND_API.G_EXC_ERROR;
        END IF;

    -- If task id is passed ,verify whether it is a valid value
        IF p_task_id IS NOT NULL AND p_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN

            open c_valid_task_id(p_task_id,l_project_id) ;
        fetch c_valid_task_id into l_dummy;
        close c_valid_task_id ;

        IF nvl(l_dummy,'N') = 'Y' THEN
                   l_task_id := p_task_id ;
            -- Task ID exists and its a valid one.
        ELSE
        -- Try to derive task_id from its reference
           l_derive := 'Y';
        END IF;

        END IF;

        IF (p_task_id is NULL AND p_pm_task_reference IS NOT NULL
           AND p_pm_task_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
           OR nvl(l_derive,'N') = 'Y'
        THEN
    -- Convert task reference to id.

    PA_PROJECT_PVT.Convert_pm_taskref_to_id_all
    (p_pa_project_id    =>  l_project_id
     , p_pa_task_id     =>  p_task_id
     , p_pm_task_reference  =>  p_pm_task_reference
     , p_out_task_id        =>  l_task_id
     , p_return_status  =>  l_return_status);


    IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN

        RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

    ELSIF  (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN

        RAISE  FND_API.G_EXC_ERROR;
    END IF;

    END IF;
    --get structure_version_id and task_version_id

        PA_PROJ_TASK_STRUC_PUB.get_version_ids
        (p_task_id                 =>     l_task_id
         , p_task_version_id       =>     p_task_version_id
         , p_project_id            =>     l_project_id
         , x_structure_version_id  =>     l_structure_version_id
         , x_task_version_id       =>     l_task_version_id);
--------------------------------------------------------------------------------------------------------------------------------
       -- If p_perform_check_delete_task_ok is "Y" , then we need to call the API
       -- pa_project_pub.Check_Delete_Task_OK

      IF p_perform_check_delete_task_ok ='Y' THEN
        pa_project_pub.Check_Delete_Task_OK
        (
          p_api_version_number => p_api_version_number
          -- Start OUT params
        , p_return_status   => l_return_status
        , p_msg_count       => l_msg_count
        , p_msg_data        => l_msg_data
          -- End OUT params
        , p_project_id      => l_project_id
        , p_pm_project_reference  => p_pm_project_reference
        , p_task_id         => l_task_id
        , p_pm_task_reference     => p_pm_task_reference
        , p_structure_type        => p_structure_type
        , p_task_version_id       => l_task_version_id
        , p_delete_task_ok_flag   => l_delete_task_ok_flag -- OUT param
        );
        IF l_return_status  = FND_API.G_RET_STS_UNEXP_ERROR THEN

                RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

        /* Commented because of Issue found during Unit testing
           In Check_Delete_Task_OK ,already message has been retrieved and
           Hence ,If we raise again here ,In this API ,it wont be able to find any msg in stack now
           thereby returning empty message

           The commented check corresponds to return status 'E' check .It will be 'E' if its nt
           allowed to delete the task. So, Just set the OUT params appropriately
           and return

        ELSIF  (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN

                RAISE  FND_API.G_EXC_ERROR;
        */
        END IF;

        IF l_delete_task_ok_flag = 'N' THEN

             -- Its not Ok to delete this task,so skip further steps and just return with 'N'
             l_check_task_mfd_flag := 'N';

        ELSIF l_delete_task_ok_flag = 'Y' THEN

             -- Its Ok to delete this task , Check whether it can be deleted immediately (l_check_task_mfd_flag = 'Y')
             -- (Or) it has to be marked for deletion. (l_check_task_mfd_flag = 'M')

             open cur_task_status(l_project_id, l_task_id, l_task_version_id);
             fetch cur_task_status into l_task_status,l_structure_version_id;
             close cur_task_status;

             open l_amg_task_csr(l_task_id );
             fetch l_amg_task_csr INTO l_amg_task_number;
             close l_amg_task_csr;

             l_wp_str_exists := PA_PROJ_TASK_STRUC_PUB.WP_STR_EXISTS( p_project_id );
             l_versioning_enabled := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED( l_project_id);
             l_pub_ver_exists := PA_PROJ_TASK_STRUC_PUB.Published_version_exists( l_project_id );

             -- If this passed task belongs to a Split - Fin. Only structure
             IF nvl(l_wp_str_exists,'N') = 'N'
                AND (PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(l_structure_version_id, 'FINANCIAL') = 'Y')
             THEN
                 -- Its ok to delete this task
                 l_check_task_mfd_flag := 'Y' ;
            -- Begin Bug 9480442
            -- Logic to handle the deletion of task from Financial Plans in a project that also contains WBS(NSTBM structure projects)
            ELSIF (PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(l_structure_version_id,'FINANCIAL') = 'Y') AND NVL(PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(l_project_id),' ') = 'SPLIT_MAPPING'
              THEN
            l_check_task_mfd_flag := 'Y' ;
             -- End Bug 9480442
             -- If this passed task belongs to a WP structure (be it shared or be it split)
             ELSIF  PA_PROJECT_STRUCTURE_UTILS.Get_Struc_Type_For_Version(l_structure_version_id,'WORKPLAN') = 'Y'
             THEN
                 IF l_versioning_enabled = 'Y'
                    AND l_pub_ver_exists = 'Y'
                 THEN
                     IF l_amg_task_number IS NULL -- It means ,task is only in current working version,not in any previous pub. versions
                     THEN
                        -- It can be deleted, there is no need to mark it for deletion.
                        l_check_task_mfd_flag := 'Y';
                     ELSE -- Task exists in prior published version and it has entry in pa_tasks.
                        -- So, Mark it for deletion ,so that it can be deleted in publishing flow

                        /* This API call marks the task for deletion in OP
                        PA_TASK_PVT1.update_task_ver_delete_status(
                         p_task_version_id => p_task_version_id
                         ,x_return_status => l_return_status
                         ,x_msg_count => x_msg_count
                         ,x_msg_data => x_msg_data);
                        */

                        l_check_task_mfd_flag := 'M' ;

                     END IF;
                 ELSIF l_versioning_enabled = 'Y' and l_pub_ver_exists = 'N'
                 THEN
                        -- Versioning Enabled , But there is no published version so far .So,This is the Working version
                        -- So,its ok to delete this task.
                        l_check_task_mfd_flag := 'Y';
                 ELSIF l_versioning_enabled = 'N'
                 THEN
                        -- Versioning Disabled Case , Its ok to delete this task.
                        l_check_task_mfd_flag := 'Y';
                 END IF;
             END IF;

        END IF; -- End If for l_delete_task_ok_flag = 'Y'

      ELSE   -- So, Now the case if p_perform_check_delete_task_ok ='N'

        -- If this flag p_perform_check_delete_task_ok is passed as 'N' ,it means just we need to check
        -- whether task is marked for deletion or not in Oracle Projects.
        -- Return 'M' if marked for delete


    -- Check for task status.

    open cur_task_status(l_project_id, l_task_id, l_task_version_id);
    fetch cur_task_status into l_task_status,l_structure_version_id;
    close cur_task_status;

    if l_task_status = 'TO_BE_DELETED' then

       l_check_task_mfd_flag := 'M';
        else
           l_check_task_mfd_flag := 'N';
    end if;

      END IF;
--------------------------------------------------------------------------------------------------------------------------------
    -- Set output variables.

    p_check_task_mfd_flag := l_check_task_mfd_flag;

    p_return_status := l_return_status;
    p_msg_count := l_msg_count;
    p_msg_data  := l_msg_data;

EXCEPTION

    WHEN FND_API.G_EXC_ERROR THEN

            p_return_status := FND_API.G_RET_STS_ERROR;

        -- 4537865
        p_check_task_mfd_flag := NULL ;

            FND_MSG_PUB.Count_And_Get
            (   p_count     =>  p_msg_count ,
                p_data      =>  p_msg_data  );

    WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN

            p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        -- 4537865
        p_check_task_mfd_flag := NULL ;

            FND_MSG_PUB.Count_And_Get
            (   p_count     =>  p_msg_count ,
                p_data      =>  p_msg_data  );

    WHEN OTHERS THEN

            p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

       p_check_task_mfd_flag := NULL ; -- 4537865

            IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN

                FND_MSG_PUB.add_exc_msg
                (p_pkg_name     => G_PKG_NAME
                 , p_procedure_name => l_api_name);

            END IF;

            FND_MSG_PUB.Count_And_Get
            (p_count        =>  p_msg_count
             , p_data       =>  p_msg_data);

END check_task_mfd;


-- API Name         : get_deleted_tasks_from_op
--
-- Parameters       :
--
-- x_deleted_task_ver_ids  OUT PA_NUM_1000_NUM
-- x_return_status             OUT VARCHAR2
-- x_msg_count                 OUT  NUMBER
-- x_msg_data                  OUT VARCHAR2
--
-- HISTORY
-- Created by avaithia for Bug 4096218
-- 29-Jun-2005                          Changed out param name from x_deleted_task_ver_ids to x_deleted_task_ids
--                  Changed global var name from G_DELETED_TASK_VER_IDS_FROM_OP to  G_DELETED_TASK_IDS_FROM_OP
--
-- Notes About the API :-
-- This API is supposed to be calling only in AMG/MSP context.
--
-- This is not a standalone API .This API will produce useful output only if its called after WP publishing flow
--
-- We set the value for out param  x_deleted_task_ver_ids in the global VARRAY PA_PROJECT_PUB.G_DELETED_TASK_IDS_FROM_OP
-- in the Publish_Structure API (PAXSTCVB.pls) ONLY if p_calling_module in that API is 'AMG'

PROCEDURE get_deleted_tasks_from_op
(
 x_deleted_task_ids      OUT NOCOPY PA_NUM_1000_NUM,/*4537865 : Added nocopy hint manually */
 x_return_status             OUT NOCOPY VARCHAR2, /*4537865 : Added nocopy hint manually */
 x_msg_count                 OUT NOCOPY  NUMBER, /*4537865 : Added nocopy hint manually */
 x_msg_data                  OUT NOCOPY VARCHAR2 /*4537865 : Added nocopy hint manually */
)
IS
BEGIN
    x_msg_count := 0;
    x_return_status := FND_API.G_RET_STS_SUCCESS;
    x_msg_data := NULL;
    x_deleted_task_ids := PA_PROJECT_PUB.G_DELETED_TASK_IDS_FROM_OP;
EXCEPTION
        WHEN OTHERS THEN
                        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                        IF FND_MSG_PUB.Check_Msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN

                                FND_MSG_PUB.add_exc_msg
                                (p_pkg_name             => G_PKG_NAME
                                 , p_procedure_name     => 'get_deleted_tasks_from_op');

                        END IF;

                        FND_MSG_PUB.Count_And_Get
                        (p_count                =>      x_msg_count
                         , p_data               =>      x_msg_data);

END get_deleted_tasks_from_op;

-- End fix for Bug # 4096218.


-- -------------
-- Bug 5436264 : AMG API FOR PROCESS STRUCTURE UPDATES

PROCEDURE process_structure_updates
(p_api_version_number           IN      NUMBER          := 1.0
, p_init_msg_list               IN      VARCHAR2        := FND_API.G_FALSE
, p_commit                      IN      VARCHAR2        := FND_API.G_FALSE
, p_return_status               OUT     NOCOPY VARCHAR2
, p_msg_count                   OUT     NOCOPY NUMBER
, p_msg_data                    OUT     NOCOPY VARCHAR2
, p_structure_version_id        IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pa_project_id               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference        IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_process_mode                IN      VARCHAR2        := 'ONLINE'
, p_calling_context             IN      VARCHAR2        := 'AMG')
IS

l_api_name CONSTANT VARCHAR2(30)  := 'process_structure_updates';
l_msg_count         NUMBER;
l_msg_data          VARCHAR2(2000);
l_return_status     VARCHAR2(1);
l_responsibility_id NUMBER := 0;
l_user_id           NUMBER := 0;
l_module_name       VARCHAR2(80);
l_function_allowed  VARCHAR2(1);

l_project_id        pa_projects.project_id%type;

l_update_wbs_flag   VARCHAR2(1);

l_str_ver_id        NUMBER:= null;
l_conc_request_id   NUMBER := null;
l_message_name      VARCHAR2(30) := null;
l_message_type      VARCHAR2(30) := null;
l_process_code  pa_proj_elem_ver_structure.process_code%TYPE; --Bug# 5973460

BEGIN

--  Standard begin of API savepoint

    SAVEPOINT process_structure_updates;

--  Standard call to check for call compatibility

    IF NOT FND_API.Compatible_API_Call ( g_api_version_number   ,
                                         p_api_version_number   ,
                                         l_api_name             ,
                                         g_pkg_name             )
    THEN

        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

    END IF;

--  Initialize the message table if requested

    IF FND_API.TO_BOOLEAN( p_init_msg_list )
    THEN

        FND_MSG_PUB.initialize;

    END IF;

--  Set API return status to success

    p_return_status := FND_API.G_RET_STS_SUCCESS;


-- Get the project ID
  -- Added if clause for Bug 6727014
   IF p_calling_context = 'CONC_WRP' then

         l_project_id := p_pa_project_id;

   ELSE

   PA_PROJECT_PVT.Convert_pm_projref_to_id
      (        p_pm_project_reference =>      p_pm_project_reference
               ,  p_pa_project_id     =>      p_pa_project_id
               ,  p_out_project_id    =>      l_project_id
               ,  p_return_status     =>      l_return_status
      );

   IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN

           RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;

   ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN

           RAISE  FND_API.G_EXC_ERROR;
   END IF;

   END IF;

   If PA_PROJECT_STRUCTURE_UTILS.Check_Structure_Ver_Exists(l_project_id, p_structure_version_id) <> 'Y' THEN
           PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                p_msg_name => 'PA_INV_STRUCUTRE_VER_ID');

           RAISE FND_API.G_EXC_ERROR;
   End If;

   l_responsibility_id := FND_GLOBAL.Resp_id;
   l_user_id           := FND_GLOBAL.User_id;


   -- As part of enforcing project security, which would determine
   -- whether the user has the necessary privileges to update the project
   -- need to call the pa_security package

   pa_security.initialize (X_user_id        => l_user_id,
                           X_calling_module => l_module_name);

   -- Actions performed using the APIs would be subject to
   -- function security. If the responsibility does not allow
   -- such functions to be executed, the API should not proceed further
   -- since the user does not have access to such functions

   -- Function security procedure check whether user has the
   -- privilege to update the project or not

   PA_INTERFACE_UTILS_PUB.G_PROJECT_ID := l_project_id;

   PA_PM_FUNCTION_SECURITY_PUB.check_function_security
      (p_api_version_number => p_api_version_number,
       p_responsibility_id  => l_responsibility_id,
       p_function_name      => 'PA_PM_UPDATE_PROJECT',
       p_msg_count          => l_msg_count,
       p_msg_data           => l_msg_data,
       p_return_status      => l_return_status,
       p_function_allowed   => l_function_allowed);

   IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
    THEN
        RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

   ELSIF l_return_status = FND_API.G_RET_STS_ERROR
   THEN
         RAISE FND_API.G_EXC_ERROR;

   END IF;

   IF l_function_allowed = 'N' THEN
     pa_interface_utils_pub.map_new_amg_msg
       ( p_old_message_code => 'PA_FUNCTION_SECURITY_ENFORCED'
        ,p_msg_attribute    => 'CHANGE'
        ,p_resize_flag      => 'Y'
        ,p_msg_context      => 'GENERAL'
        ,p_attribute1       => ''
        ,p_attribute2       => ''
        ,p_attribute3       => ''
        ,p_attribute4       => ''
        ,p_attribute5       => '');
     p_return_status := FND_API.G_RET_STS_ERROR;
     RAISE FND_API.G_EXC_ERROR;
   END IF;

--Bug# 5973460
l_process_code := PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_CODE(p_project_id => l_project_id
                                                                     ,p_structure_version_id => p_structure_version_id );

 IF  l_process_code = 'PUE'
 THEN
     PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                           ,p_msg_name       => 'PA_PS_PUBLISH_ERROR');

     RAISE FND_API.G_EXC_ERROR;
 END IF;
--Bug# 5973460

   -- check the process_update_wbs_flag

   l_update_wbs_flag := PA_PROJECT_STRUCTURE_UTILS.GET_UPDATE_WBS_FLAG(p_project_id => l_project_id
                                                                       ,p_structure_version_id => p_structure_version_id ) ;

   IF nvl(l_update_wbs_flag,'N') = 'Y' THEN

     PA_PROJECT_STRUCTURE_UTILS.GET_PROCESS_STATUS_MSG(
        p_project_id              => l_project_id
        , p_structure_version_id  => p_structure_version_id
        , p_context               => 'UPDATE_AMG'
        , x_message_name          => l_message_name
        , x_message_type          => l_message_type
        , x_structure_version_id  => l_str_ver_id
        , x_conc_request_id       => l_conc_request_id);


     IF nvl(l_message_type,'NOT_PROCESS') <> 'PROCESS' THEN

        IF p_process_mode = 'ONLINE' THEN

          PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES(p_calling_context      => 'ONLINE_UPDATE'
                                                    ,p_project_id           => l_project_id
                                                    ,p_structure_version_id => p_structure_version_id
                                                    ,x_return_status        => l_return_status
                                                    ,x_msg_count            => l_msg_count
                                                    ,x_msg_data             => l_msg_data ) ;

          IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
               THEN
                  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_ERROR
               THEN
                 RAISE FND_API.G_EXC_ERROR;
          END IF;

        ELSIF p_process_mode = 'CONCURRENT' THEN

          PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_CONC_WRP(p_calling_context       => 'CONC_UPDATE'
                                                            ,p_project_id            => l_project_id
                                                            ,p_structure_version_id  => p_structure_version_id
                                                            ,x_return_status         => l_return_status
                                                            ,x_msg_count             => l_msg_count
                                                            ,x_msg_data              => l_msg_data ) ;

          IF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR
               THEN
                  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_ERROR
               THEN
                  RAISE FND_API.G_EXC_ERROR;
          END IF;

        END IF ; -- p_process_mode

     END IF ; -- l_message_type

   END IF; -- l_update_wbs_flag

   IF FND_API.to_boolean( p_commit )
   THEN
     COMMIT;
   END IF;

EXCEPTION
        WHEN FND_API.G_EXC_ERROR THEN
        p_return_status := FND_API.G_RET_STS_ERROR;

                ROLLBACK TO process_structure_updates;

                p_msg_count := l_msg_count;
                p_msg_data := l_msg_data;

                FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                                          , p_data   =>  p_msg_data);


        WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

                ROLLBACK TO process_structure_updates;

                p_msg_count := l_msg_count;
                p_msg_data := l_msg_data;

                FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                                          , p_data   =>  p_msg_data);

        WHEN OTHERS THEN
        p_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

        IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) THEN
          FND_MSG_PUB.add_exc_msg
              (p_pkg_name            => G_PKG_NAME
              ,p_procedure_name      => l_api_name
              ,p_error_text          => SUBSTRB(SQLERRM,1,120));
        END IF;

                ROLLBACK TO process_structure_updates;

                p_msg_count := fnd_msg_pub.count_msg;
                p_msg_data  := SUBSTRB(SQLERRM,1,120);

                FND_MSG_PUB.Count_And_Get(p_count    =>  p_msg_count
                                          , p_data   =>  p_msg_data);

END process_structure_updates;
-- -------------


-- Bug 6727014. Creating a wrapper on process_structure_updates to be used in new concurrent request

PROCEDURE process_structure_updates_wrp
     (errbuf                        OUT NOCOPY VARCHAR2
    , retcode                       OUT NOCOPY VARCHAR2
    , p_operating_unit              IN         VARCHAR2
    , p_project_num_from            IN         VARCHAR2
    , p_project_num_to              IN         VARCHAR2
    )
is

     CURSOR cur_get_structures IS
     select ppes.pev_structure_id
           ,ppes.project_id          project_id
           ,ppes.element_version_id  structure_version_id
           ,ppa.segment1             project_number
           ,ppes.name                structure_name
       from pa_proj_elem_ver_structure ppes,
            pa_projects_all  ppa
      where ppa.project_id = ppes.project_id
        and ppes.process_update_wbs_flag = 'Y'
        and NVL(ppes.process_code,'WUE') = 'WUE'
        and ppa.segment1 between nvl(p_project_num_from,ppa.segment1)
                             and nvl(p_project_num_to,ppa.segment1)
        and nvl(ppa.org_id,-99) = nvl(p_operating_unit, nvl(org_id,-99))
      Order by 4,5;

   l_msg_count         NUMBER;
   l_msg_data          VARCHAR2(2000);
   l_return_status     VARCHAR2(1);

   l_data              VARCHAR2(2000);
   l_msg_index_out     NUMBER;
   l_retcode           NUMBER := 0;

   l_status            VARCHAR2(2000);
   l_exists            VARCHAR2(1);

begin
  --Initializing global variable

  -- Print the input parameter values
  fnd_file.put_line(1, '');
  fnd_file.put_line(1, '***********************************************');
  fnd_file.put_line(1, '* Process Structure Update Concurrent Program *');
  fnd_file.put_line(1, '***********************************************');
  fnd_file.put_line(1, '');
  fnd_file.put_line(1,'Parameters List ');
  fnd_file.put_line(1,'------------------------------------------------');
  fnd_file.put_line(1,'Operating Unit           : '||p_operating_unit);
  fnd_file.put_line(1,'From Project Number      : '||p_project_num_from);
  fnd_file.put_line(1,'To Project Number        : '||p_project_num_to);
  fnd_file.put_line(1, '');
  fnd_file.put_line(1, '');
  fnd_file.put_line(1, 'List of Projects and Structures processed by the concurrent request and their Status');
  fnd_file.put_line(1, '-----------------------------------------------------------------------------------------------------');
  fnd_file.put_line(1, 'Project Number                Structure Name                                                   Status');
  fnd_file.put_line(1, '-----------------------------------------------------------------------------------------------------');

  For i in cur_get_structures loop
    l_return_status := 'S';
    l_msg_count     := 0;
    l_msg_data      := Null;
    l_status        := 'Success';
    l_exists        := NULL;

    Begin
    -- the below query will use PA_PROJ_ELEM_VER_STRUCTURE_U1 index
       select 'X'
         into l_exists
         from pa_proj_elem_ver_structure ppes
        where ppes.process_update_wbs_flag = 'Y'
          and NVL(ppes.process_code,'WUE') = 'WUE'
          and ppes.pev_structure_id = i.pev_structure_id;

       if nvl(l_exists,'Y') = 'X' Then
          PA_PROJECT_PUB.process_structure_updates
                 ( p_api_version_number    => 1.0
                 , p_init_msg_list         => FND_API.G_TRUE
                 , p_commit                => FND_API.G_FALSE
                 , p_return_status         => l_return_status
                 , p_msg_count             => l_msg_count
                 , p_msg_data              => l_msg_data
                 , p_structure_version_id  => i.structure_version_id
                 , p_pa_project_id         => i.project_id
                 , p_pm_project_reference  => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                 , p_process_mode          => 'ONLINE'
                                 , p_calling_context       => 'CONC_WRP');

             IF (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) THEN
                 RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
             ELSIF  (l_return_status = FND_API.G_RET_STS_ERROR) THEN
                 RAISE  FND_API.G_EXC_ERROR;
                         ELSIF (l_return_status = FND_API.G_RET_STS_SUCCESS) THEN
                 COMMIT;
             END IF;

         fnd_file.put_line(1, rpad(i.project_number,30,' ')||rpad(substrb(i.structure_name,1,60),65,' ')||l_return_status);
      Else
        fnd_file.put_line(1, rpad(i.project_number,30,' ')||rpad(substrb(i.structure_name,1,60),65,' ')||'A process is already running for this structure');
      End If;

 EXCEPTION
        WHEN FND_API.G_EXC_ERROR THEN
           l_retcode     := '1';

           IF l_msg_count >= 1 THEN
                PA_INTERFACE_UTILS_PUB.get_messages
                    (p_encoded        => FND_API.G_FALSE
                    ,p_msg_index      => 1
                    ,p_msg_count      => l_msg_count
                    ,p_msg_data       => l_msg_data
                    ,p_data           => l_data
                    ,p_msg_index_out  => l_msg_index_out);
                errbuf := l_data;
        fnd_file.put_line(1, rpad(i.project_number,30,' ')||rpad(substrb(i.structure_name,1,60),65,' ')||l_return_status||' - '||errbuf);
           END IF;
        ROLLBACK;

        WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
           l_retcode     := '1';

           IF l_msg_count >= 1 THEN
                PA_INTERFACE_UTILS_PUB.get_messages
                    (p_encoded        => FND_API.G_FALSE
                    ,p_msg_index      => 1
                    ,p_msg_count      => l_msg_count
                    ,p_msg_data       => l_msg_data
                    ,p_data           => l_data
                    ,p_msg_index_out  => l_msg_index_out);
                errbuf := l_data;
        fnd_file.put_line(1, rpad(i.project_number,30,' ')||rpad(substrb(i.structure_name,1,60),65,' ')||l_return_status||' - '||errbuf);
           END IF;
        ROLLBACK;

     WHEN OTHERS THEN
     l_retcode         := '1';
     errbuf          := SQLERRM;
        fnd_file.put_line(1, rpad(i.project_number,30,' ')||rpad(substrb(i.structure_name,1,60),65,' ')||l_return_status||' - '||errbuf);
      ROLLBACK;

   end;
  end loop;
  fnd_file.put_line(1, '-----------------------------------------------------------------------------------------------------');
  fnd_file.put_line(1, '');
  fnd_file.put_line(1, '');

    if l_retcode = 1 then
      retcode := '1';
    else
      retcode := '0';
    end if;


exception
  when others then
      retcode := '2';
      errbuf  := sqlerrm;
    return;
End process_structure_updates_wrp;


-- Bug # 5072032.

PROCEDURE SETUP_PROJECT_AS_PROGRAM
(p_api_version                  IN      NUMBER          := 1.0
, p_init_msg_list               IN      VARCHAR2        := FND_API.G_TRUE
, p_commit                      IN      VARCHAR2        := FND_API.G_FALSE
, p_debug_mode                  IN      VARCHAR2        := 'N'
, p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_project_id                  IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_project_reference        IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_sys_program_flag            IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_allow_multi_program_rollup  IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, x_return_status               OUT     NOCOPY VARCHAR2
, x_msg_count                   OUT     NOCOPY NUMBER
, x_msg_data                    OUT     NOCOPY VARCHAR2)
is

l_api_name		CONSTANT  VARCHAR2(30)	:= 'SETUP_PRJ_AS_PGM';

l_pm_product_code 	VARCHAR2(2) 		:= NULL;
l_function_allowed 	VARCHAR2(1) 		:= NULL;

l_project_id 		NUMBER			:= NULL;
l_wp_enabled 		VARCHAR2(1)		:= NULL;
l_fin_enabled   	VARCHAR2(1)		:= NULL;
l_delv_enabled  	VARCHAR2(1)		:= NULL;
l_share_code            VARCHAR2(30)            := null;

l_sys_program_flag            VARCHAR2(1)       := NULL;
l_allow_multi_program_rollup  VARCHAR2(1)       := NULL;

cursor l_cur_sys_program_flag(c_project_id NUMBER) is
select ppa.sys_program_flag
from pa_projects_all ppa
where ppa.project_id = c_project_id;

cursor l_cur_allow_multi_prog_rollup(c_project_id NUMBER) is
select ppa.allow_multi_program_rollup
from pa_projects_all ppa
where ppa.project_id = c_project_id;

l_msg_index_out     	NUMBER			:= NULL;
l_return_status		VARCHAR2(1) 		:= NULL;
l_msg_count 		NUMBER 			:= NULL;
l_msg_data 		VARCHAR2(2000) 		:= NULL;

begin

-- Establish the save point.
savepoint SETUP_PROJECT_AS_PROGRAM_AMG;

--  Initialize the message table if requested.
if FND_API.TO_BOOLEAN(p_init_msg_list) then
       FND_MSG_PUB.initialize;
end if;

--  Standard call to check for API compatibility.
if NOT FND_API.Compatible_API_Call (g_api_version_number, p_api_version, l_api_name, G_PKG_NAME) then
	raise FND_API.G_EXC_UNEXPECTED_ERROR;
 end if;

-- Initialize the return status
x_return_status	:= FND_API.G_RET_STS_SUCCESS;

-- Convert project reference to id.
PA_PROJECT_PVT.Convert_pm_projref_to_id
(p_pm_project_reference       =>      p_pm_project_reference
, p_pa_project_id             =>      p_project_id
, p_out_project_id            =>      l_project_id
, p_return_status             =>      l_return_status);

if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
	raise FND_API.G_EXC_UNEXPECTED_ERROR;
elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
	raise FND_API.G_EXC_ERROR;
end if;

-- Get the current attributes of the project.
l_wp_enabled := PA_PROJECT_STRUCTURE_UTILS.Check_workplan_enabled(l_project_id);
l_fin_enabled := PA_PROJECT_STRUCTURE_UTILS.Check_financial_enabled(l_project_id);
l_delv_enabled := PA_PROJECT_STRUCTURE_UTILS.Check_deliverable_enabled(l_project_id);
l_share_code := PA_PROJECT_STRUCTURE_UTILS.Get_Structure_sharing_code(l_project_id);

-- Check if valid values are passed into the parameters: p_sys_program_flag, p_allow_multi_program_rollup, else use the current values.
if ((p_sys_program_flag = 'Y') or (p_sys_program_flag = 'N')) then
	l_sys_program_flag := p_sys_program_flag;
else
	open l_cur_sys_program_flag(l_project_id);
	fetch l_cur_sys_program_flag into l_sys_program_flag;
	close l_cur_sys_program_flag;
end if;

if ((p_allow_multi_program_rollup = 'Y') or (p_allow_multi_program_rollup = 'N')) then
	l_allow_multi_program_rollup := p_allow_multi_program_rollup;
else
	open l_cur_allow_multi_prog_rollup(l_project_id);
	fetch l_cur_allow_multi_prog_rollup into l_allow_multi_program_rollup;
	close l_cur_allow_multi_prog_rollup;
end if;

-- Actions performed using the APIs are subject to function security.
-- If the responsibility does not allow a function to be executed the API
-- will error out as the user does not have access.

	PA_PM_FUNCTION_SECURITY_PUB.check_function_security
	(p_api_version_number   => p_api_version
	, p_responsibility_id   => FND_GLOBAL.RESP_ID
	, p_function_name       => 'PA_PM_UPDATE_PROJECT'
	, p_msg_count           => l_msg_count
	, p_msg_data            => l_msg_data
	, p_return_status       => l_return_status
	, p_function_allowed    => l_function_allowed);

	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
        	raise FND_API.G_EXC_UNEXPECTED_ERROR;
	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
        	raise FND_API.G_EXC_ERROR;
	end if;

	if l_function_allowed = 'N' then
        	pa_interface_utils_pub.map_new_amg_msg
        	(p_old_message_code     => 'PA_FUNCTION_SECURITY_ENFORCED'
        	, p_msg_attribute       => 'CHANGE'
        	, p_resize_flag         => 'Y'
        	, p_msg_context         => 'GENERAL'
        	, p_attribute1          => ''
        	, p_attribute2          => ''
        	, p_attribute3          => ''
        	, p_attribute4          => ''
        	, p_attribute5          => '');
        	raise FND_API.G_EXC_ERROR;
	end if;

-- Call the API to setup the project as a program.
PA_PROJECT_STRUCTURE_PUB1.UPDATE_STRUCTURES_SETUP_ATTR
(p_api_version      		=> p_api_version
, p_init_msg_list    		=> p_init_msg_list
, p_commit           		=> p_commit
, p_calling_module   		=> 'AMG'
, p_debug_mode       		=> p_debug_mode
, p_max_msg_count    		=> p_max_msg_count
, p_project_id       		=> l_project_id
, p_workplan_enabled_flag 	=> l_wp_enabled
, p_financial_enabled_flag 	=> l_fin_enabled
, p_deliverables_enabled_flag 	=> l_delv_enabled
, p_sharing_option_code         => l_share_code
, p_sys_program_flag 		=> l_sys_program_flag
, p_allow_multi_prog_rollup 	=> l_allow_multi_program_rollup
, x_return_status 		=> l_return_status
, x_msg_count 			=> l_msg_count
, x_msg_data  			=> l_msg_data);

if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
        raise FND_API.G_EXC_UNEXPECTED_ERROR;
elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
        raise FND_API.G_EXC_ERROR;
end if;

-- Commit if p_commit = FND_API.G_TRUE.
if (p_commit = FND_API.G_TRUE) then
	commit;
end if;

exception

   when FND_API.G_EXC_ERROR then
      rollback to SETUP_PROJECT_AS_PROGRAM_AMG;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      if x_msg_count = 1 then
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE
                , p_msg_index      => 1
                , p_msg_count      => x_msg_count
                , p_msg_data       => x_msg_data
                , p_data           => x_msg_data
                , p_msg_index_out  => l_msg_index_out);
     end if;

   when FND_API.G_EXC_UNEXPECTED_ERROR then
      rollback to SETUP_PROJECT_AS_PROGRAM_AMG;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      if x_msg_count = 1 then
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE
                , p_msg_index      => 1
                , p_msg_count      => x_msg_count
                , p_msg_data       => x_msg_data
                , p_data           => x_msg_data
                , p_msg_index_out  => l_msg_index_out);
     end if;

   when OTHERS then
      rollback to SETUP_PROJECT_AS_PROGRAM_AMG;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := 1;
      x_msg_data := SQLERRM;
      if FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) then
      		FND_MSG_PUB.add_exc_msg
                ( p_pkg_name            => G_PKG_NAME
                , p_procedure_name      => l_api_name);
      end if;

end SETUP_PROJECT_AS_PROGRAM;

PROCEDURE CREATE_PROGRAM_LINKS
(p_api_version                  IN      NUMBER          := 1.0
, p_init_msg_list               IN      VARCHAR2        := FND_API.G_TRUE
, p_commit                      IN      VARCHAR2        := FND_API.G_FALSE
, p_debug_mode                  IN      VARCHAR2        := 'N'
, p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_program_links_tbl           IN      PA_PROJECT_PUB.PROGRAM_LINKS_TBL_TYPE
, x_return_status               OUT     NOCOPY VARCHAR2
, x_msg_count                   OUT     NOCOPY NUMBER
, x_msg_data                    OUT     NOCOPY VARCHAR2)
is

l_api_name              CONSTANT  VARCHAR2(30)  := 'CREATE_PROGRAM_LINKS';

l_pm_product_code       VARCHAR2(2)             := NULL;
l_function_allowed      VARCHAR2(1)             := NULL;

l_count            	NUMBER          	:= NULL;
l_parent_project_id	NUMBER			:= NULL;
l_sub_project_id	NUMBER			:= NULL;
l_task_id		NUMBER			:= NULL;
l_task_id_out		NUMBER			:= NULL;
l_task_version_id	NUMBER			:= NULL;

cursor l_cur_task_ver_id(c_task_id NUMBER, c_structure_type VARCHAR2) is
select ppev.element_version_id
from pa_proj_element_versions ppev, pa_proj_elem_ver_structure ppevs
, pa_proj_structure_types ppst, pa_structure_types pst
where ppevs.proj_element_id = ppst.proj_element_id
and ppst.structure_type_id = pst.structure_type_id
and ppev.project_id = ppevs.project_id
and ppev.parent_structure_version_id = ppevs.element_version_id
and ppevs.current_working_flag = 'Y'
and ppev.proj_element_id = c_task_id
and pst.structure_type = c_structure_type;

cursor l_cur_project_id1(c_task_id NUMBER) is
select ppe.project_id
from pa_proj_elements ppe
where ppe.proj_element_id = c_task_id;

cursor l_cur_project_id2(c_task_version_id NUMBER) is
select ppev.project_id, ppev.proj_element_id
from pa_proj_element_versions ppev
where ppev.element_version_id = c_task_version_id;

l_unexp_error_flag      VARCHAR2(1)             := 'N';
l_exp_error_flag        VARCHAR2(1)             := 'N';

l_msg_index_out     	NUMBER                  := NULL;
l_return_status         VARCHAR2(1)             := NULL;
l_msg_count             NUMBER                  := NULL;
l_msg_data              VARCHAR2(2000)          := NULL;

cursor l_cur_prog_name (c_task_version_id NUMBER) is
select ppa.name
from pa_projects_all ppa, pa_proj_element_versions ppev
where ppa.project_id = ppev.project_id
and ppev.element_version_id = c_task_version_id;

cursor l_cur_prog_name2 (c_project_id NUMBER) is
select ppa.name
from pa_projects_all ppa
where ppa.project_id = c_project_id;

cursor l_cur_proj_name (c_project_id NUMBER) is
select ppa.name
from pa_projects_all ppa
where ppa.project_id = c_project_id;

cursor l_cur_task_name (c_task_ver_id NUMBER) is
select ppe.name
from pa_proj_elements ppe, pa_proj_element_versions ppev
where ppe.project_id = ppev.project_id
and ppe.proj_element_id = ppev.proj_element_id
and ppev.element_version_id = c_task_ver_id;

cursor l_cur_sub_proj1(c_sub_project_reference VARCHAR2, c_sub_project_id NUMBER) is
select ppa.project_id
from pa_projects_all ppa
where pm_project_reference = c_sub_project_reference
and ppa.project_id = c_sub_project_id;

cursor l_cur_sub_proj2(c_sub_project_reference VARCHAR2) is
select ppa.project_id
from pa_projects_all ppa
where pm_project_reference = c_sub_project_reference;

cursor l_cur_sub_proj3(c_sub_project_id NUMBER) is
select ppa.project_id
from pa_projects_all ppa
where ppa.project_id = c_sub_project_id;

l_parent_sub_flag	VARCHAR2(1)		:= NULL;

l_program_name          VARCHAR2(30)            := NULL;
l_project_name          VARCHAR2(30)            := NULL;
l_task_name             VARCHAR2(30)            := NULL;

TYPE l_prog_error_rec_type IS RECORD
(program_name           VARCHAR2(300)   := null
,object_relationship_id NUMBER 		:= null
,error_msg         	VARCHAR2(2000)  := null);

TYPE l_prog_error_tbl_type IS TABLE OF l_prog_error_rec_type INDEX BY BINARY_INTEGER;

l_prog_error_tbl l_prog_error_tbl_type;

l_error_count 		NUMBER 		:= 0;
l_msg_code		VARCHAR2(30) 	:= null;

l			NUMBER 		:= 0;

begin

-- Establish the save point.
savepoint CREATE_PROGRAM_LINKS_AMG;

--  Initialize the message table if requested.
if FND_API.TO_BOOLEAN(p_init_msg_list) then
       FND_MSG_PUB.initialize;
end if;

--  Standard call to check for API compatibility.
if NOT FND_API.Compatible_API_Call (g_api_version_number, p_api_version, l_api_name, G_PKG_NAME) then
        raise FND_API.G_EXC_UNEXPECTED_ERROR;
 end if;

-- Initialize the return status
x_return_status := FND_API.G_RET_STS_SUCCESS;

-- Initialize the error flags.
l_unexp_error_flag := 'N';
l_exp_error_flag := 'N';

-- Loop through the records in the input PL/SQL table.
for l_count in p_program_links_tbl.FIRST..p_program_links_tbl.LAST loop

   	-- Clear the message stack.
     	FND_MSG_PUB.initialize;

	-- Initialize the error flags.
	l_unexp_error_flag := 'N';
	l_exp_error_flag := 'N';
	l_parent_sub_flag := 'P'; -- By default assume that any errors will be for the parent project.

        -- Initialize the local variables.
        l_parent_project_id             := NULL;
        l_sub_project_id                := NULL;
        l_task_id                       := NULL;
        l_task_id_out                   := NULL;
        l_task_version_id               := NULL;

	-- If task version id is not passed in.
	if ((p_program_links_tbl(l_count).task_version_id is null)
	     or (p_program_links_tbl(l_count).task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then

                -- Convert parent project reference to id.
		if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
                	PA_PROJECT_PVT.Convert_pm_projref_to_id
                	(p_pm_project_reference       =>     p_program_links_tbl(l_count).pm_parent_project_reference
                	, p_pa_project_id             =>     p_program_links_tbl(l_count).parent_project_id
                	, p_out_project_id            =>     l_parent_project_id
                	, p_return_status             =>     l_return_status);

                	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                		l_unexp_error_flag := 'Y';
                	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                		l_exp_error_flag := 'Y';
                	end if;

		end if;

                -- Convert task reference to id.
		if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
                	PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_ALL
                	(p_pa_project_id        => l_parent_project_id
                	, p_pm_task_reference   => p_program_links_tbl(l_count).pm_task_reference
			, p_pa_task_id          => p_program_links_tbl(l_count).task_id
                	, p_structure_type      => p_program_links_tbl(l_count).structure_type
                	, p_out_task_id         => l_task_id
                	, p_return_status       => l_return_status);

                	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                		l_unexp_error_flag := 'Y';
                	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                		l_exp_error_flag := 'Y';
                	end if;

		end if;

		-- Find the task version id in the current working workplan structure version.
		if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
			open l_cur_task_ver_id(l_task_id, p_program_links_tbl(l_count).structure_type);
			fetch l_cur_task_ver_id into l_task_version_id;
			close l_cur_task_ver_id;

			-- Validate that the task has a version in the specified structure type.
			if (l_task_version_id is null) then
				PA_UTILS.ADD_MESSAGE('PA','PA_TASK_ID_INVALID');
				l_exp_error_flag := 'Y';
			end if;

		end if;

	-- If task version id is passed in.
	else
		if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
			l_task_version_id := p_program_links_tbl(l_count).task_version_id;
		end if;

		if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
                	open l_cur_project_id2(l_task_version_id);
                	fetch l_cur_project_id2 into l_parent_project_id, l_task_id;
			if l_cur_project_id2%NOTFOUND then
				PA_UTILS.ADD_MESSAGE('PA','PA_TASK_VERSION_REQUIRED');
                                l_exp_error_flag := 'Y';
			end if;
                	close l_cur_project_id2;
		end if;

		-- Validate the task id and project id of the task version id.
		if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
                	PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_ALL
                	(p_pa_project_id        => l_parent_project_id
                	, p_pa_task_id          => l_task_id
                	, p_structure_type      => p_program_links_tbl(l_count).structure_type
                	, p_out_task_id         => l_task_id_out
                	, p_return_status       => l_return_status);

                	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                        	l_unexp_error_flag := 'Y';
                	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                        	l_exp_error_flag := 'Y';
                	end if;
		end if;

	end if;

        -- Validate sub-project across organizations and convert sub-project reference to id.
	if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.

		if (((p_program_links_tbl(l_count).pm_sub_project_reference is not null)
		      and (p_program_links_tbl(l_count).pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
		    and ((p_program_links_tbl(l_count).sub_project_id is not null)
		          and (p_program_links_tbl(l_count).sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))) then

			open l_cur_sub_proj1(p_program_links_tbl(l_count).pm_sub_project_reference, p_program_links_tbl(l_count).sub_project_id);
			fetch l_cur_sub_proj1 into l_sub_project_id;
			close l_cur_sub_proj1;

		elsif ((p_program_links_tbl(l_count).pm_sub_project_reference is not null)
                        and (p_program_links_tbl(l_count).pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)) then

                        open l_cur_sub_proj2(p_program_links_tbl(l_count).pm_sub_project_reference);
                        fetch l_cur_sub_proj2 into l_sub_project_id;
                        close l_cur_sub_proj2;

		elsif ((p_program_links_tbl(l_count).sub_project_id is not null)
                        and (p_program_links_tbl(l_count).sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then

                        open l_cur_sub_proj3(p_program_links_tbl(l_count).sub_project_id);
                        fetch l_cur_sub_proj3 into l_sub_project_id;
                        close l_cur_sub_proj3;

		else

		     l_sub_project_id := null;

		end if;

        	if (l_sub_project_id is null) then

                	PA_UTILS.ADD_MESSAGE('PA','PA_INV_PROJECT_ID');
                        l_exp_error_flag := 'Y';

			l_parent_sub_flag := 'S'; -- Indicates that the error is for the sub-project.

		end if;

	end if;

        -- Check if the task version id corresponds to a summary task.
        if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration
                if (pa_proj_elements_utils.is_summary_task_or_structure(l_task_version_id) = 'Y') then
                        -- The task is a summary task.
                        open l_cur_prog_name(l_task_version_id);
                        fetch l_cur_prog_name into l_program_name;
                        close l_cur_prog_name;

                        open l_cur_proj_name(l_sub_project_id);
                        fetch l_cur_proj_name into l_project_name;
                        close l_cur_proj_name;

                        open l_cur_task_name(l_task_version_id);
                        fetch l_cur_task_name into l_task_name;
                        close l_cur_task_name;

                        PA_UTILS.ADD_MESSAGE('PA','PA_PS_CANT_LINK_SUMMARY_TASK'
                                             ,'PROJ', l_project_name
                                             ,'PROG', l_program_name
                                             ,'TASK', l_task_name);

			l_exp_error_flag := 'Y';

                end if;
        end if;

        -- Actions performed using the APIs are subject to function security.
        -- If the responsibility does not allow a function to be executed the API
        -- will error out as the user does not have access.
	if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
        	if (p_program_links_tbl(l_count).structure_type = 'WORKPLAN'
            	    or PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(l_parent_project_id) = 'Y') then
                	PA_PM_FUNCTION_SECURITY_PUB.check_function_security
                	(p_api_version_number   => p_api_version
                	, p_responsibility_id   => FND_GLOBAL.RESP_ID
                	, p_function_name       => 'PA_PAXPREPR_WP_LINK_PROJ'
                	, p_msg_count           => l_msg_count
                	, p_msg_data            => l_msg_data
                	, p_return_status       => l_return_status
                	, p_function_allowed    => l_function_allowed);

                	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                        	l_unexp_error_flag := 'Y';
                	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                        	l_exp_error_flag := 'Y';
                	end if;

                	if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
                        	if l_function_allowed = 'N' then
                                	pa_interface_utils_pub.map_new_amg_msg
                                	(p_old_message_code     => 'PA_FUNCTION_SECURITY_ENFORCED'
                                	, p_msg_attribute       => 'CHANGE'
                                	, p_resize_flag         => 'Y'
                                	, p_msg_context         => 'GENERAL'
                                	, p_attribute1          => ''
                                	, p_attribute2          => ''
                                	, p_attribute3          => ''
                                	, p_attribute4          => ''
                                	, p_attribute5          => '');
                                	l_exp_error_flag := 'Y';
                        	end if;
                	end if;
        	end if;
	end if;

        if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
        	if (p_program_links_tbl(l_count).structure_type = 'FINANCIAL'
            	    or PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(l_parent_project_id) = 'Y') then
                	PA_PM_FUNCTION_SECURITY_PUB.check_function_security
                	(p_api_version_number   => p_api_version
                	, p_responsibility_id   => FND_GLOBAL.RESP_ID
                	, p_function_name       => 'PA_PAXPREPR_OPT_SUBPROJECTS'
                	, p_msg_count           => l_msg_count
                	, p_msg_data            => l_msg_data
                	, p_return_status       => l_return_status
                	, p_function_allowed    => l_function_allowed);

                	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                        	l_unexp_error_flag := 'Y';
                	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                        	l_exp_error_flag := 'Y';
                	end if;

                	if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
                        	if l_function_allowed = 'N' then
                                	pa_interface_utils_pub.map_new_amg_msg
                                	(p_old_message_code     => 'PA_FUNCTION_SECURITY_ENFORCED'
                                	, p_msg_attribute       => 'CHANGE'
                                	, p_resize_flag         => 'Y'
                                	, p_msg_context         => 'GENERAL'
                                	, p_attribute1          => ''
                                	, p_attribute2          => ''
                                	, p_attribute3          => ''
                                	, p_attribute4          => ''
                                	, p_attribute5          => '');
                                	l_exp_error_flag := 'Y';
                        	end if;
                	end if;
        	end if;
	end if;

	-- Check if the sub-project has the appropriate structure type enabled.
	if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
		if (p_program_links_tbl(l_count).structure_type = 'WORKPLAN') then
			if (pa_project_structure_utils.check_workplan_enabled(l_sub_project_id) = 'N') then

                        	open l_cur_proj_name(l_sub_project_id);
                        	fetch l_cur_proj_name into l_project_name;
                        	close l_cur_proj_name;

				PA_UTILS.ADD_MESSAGE('PA','PA_PS_NO_WORKPLAN_TO_LINK'
                                             	     ,'PROJ', l_project_name);
				l_exp_error_flag := 'Y';

				l_parent_sub_flag := 'S'; -- Indicates that the error is for the sub-project.

			end if;
		elsif (p_program_links_tbl(l_count).structure_type = 'FINANCIAL') then
                        if (pa_project_structure_utils.check_financial_enabled(l_sub_project_id) = 'N') then

                                open l_cur_proj_name(l_sub_project_id);
                                fetch l_cur_proj_name into l_project_name;
                                close l_cur_proj_name;

                                PA_UTILS.ADD_MESSAGE('PA','PA_PS_NO_FINANCIAL_TO_LINK'
                                                     ,'PROJ', l_project_name);
                                l_exp_error_flag := 'Y';

				l_parent_sub_flag := 'S'; -- Indicates that the error is for the sub-project.

                        end if;
		end if;
	end if;

	-- Call the API to create the sub-project association.
	if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
		PA_RELATIONSHIP_PUB.CREATE_SUBPROJECT_ASSOCIATION
		(p_api_version	 	=>	p_api_version
		, p_init_msg_list 	=> 	FND_API.G_FALSE
		, p_commit	 	=>	p_commit
		, p_calling_module 	=> 	'AMG'
		, p_debug_mode	 	=>	p_debug_mode
		, p_max_msg_count 	=>	p_max_msg_count
		, p_src_proj_id	 	=>	l_parent_project_id
		, p_task_ver_id	 	=>	l_task_version_id
		, p_dest_proj_id 	=>	l_sub_project_id
		, p_comment	 	=> 	p_program_links_tbl(l_count).comments
		, x_return_status 	=>	l_return_status
		, x_msg_count	 	=>	l_msg_count
		, x_msg_data		=> 	l_msg_data);

        	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                	l_unexp_error_flag := 'Y';
        	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                	l_exp_error_flag := 'Y';
        	end if;
	end if;

	-- In case of any errors in the loop store the message context and message code for the error message reported
	-- in the local pl/sql error table.

	if ((l_unexp_error_flag = 'Y') or (l_exp_error_flag = 'Y')) then

                l_prog_error_tbl(l_count).program_name := NULL;
                l_prog_error_tbl(l_count).object_relationship_id := NULL;

		if (l_parent_sub_flag = 'P') then -- Indicates that the error is for the parent_project.

			if (((p_program_links_tbl(l_count).pm_parent_project_reference is not null)
                              and (p_program_links_tbl(l_count).pm_parent_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
			    and ((p_program_links_tbl(l_count).parent_project_id is not null)
                               	  and (p_program_links_tbl(l_count).parent_project_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))) then
					 l_prog_error_tbl(l_count).program_name := p_program_links_tbl(l_count).pm_parent_project_reference;
					 l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).parent_project_id;
               	 	elsif ((p_program_links_tbl(l_count).pm_parent_project_reference is not null)
                    	     and (p_program_links_tbl(l_count).pm_parent_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)) then
                        		l_prog_error_tbl(l_count).program_name := p_program_links_tbl(l_count).pm_parent_project_reference;
                	elsif ((p_program_links_tbl(l_count).parent_project_id is not null)
                      	       and (p_program_links_tbl(l_count).parent_project_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then
                        		open l_cur_prog_name2(p_program_links_tbl(l_count).parent_project_id);
                        		fetch l_cur_prog_name2 into l_prog_error_tbl(l_count).program_name;
                        		close l_cur_prog_name2;
                        		l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).parent_project_id;
                	elsif ((p_program_links_tbl(l_count).task_version_id is not null)
                       		and (p_program_links_tbl(l_count).task_version_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then
                        		l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).task_version_id;
                	end if;

		elsif (l_parent_sub_flag = 'S')  then -- Indicates that the error is for the sub-project.

                	if (((p_program_links_tbl(l_count).pm_sub_project_reference is not null)
                      	      and (p_program_links_tbl(l_count).pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
                    	    and ((p_program_links_tbl(l_count).sub_project_id is not null)
                          	  and (p_program_links_tbl(l_count).sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))) then
                                         l_prog_error_tbl(l_count).program_name := p_program_links_tbl(l_count).pm_sub_project_reference;
                                         l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).sub_project_id;
			elsif ((p_program_links_tbl(l_count).pm_sub_project_reference is not null)
                        	and (p_program_links_tbl(l_count).pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)) then
                                         l_prog_error_tbl(l_count).program_name := p_program_links_tbl(l_count).pm_sub_project_reference;
		        elsif ((p_program_links_tbl(l_count).sub_project_id is not null)
                        	and (p_program_links_tbl(l_count).sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then
                                        open l_cur_prog_name2(p_program_links_tbl(l_count).sub_project_id);
                                        fetch l_cur_prog_name2 into l_prog_error_tbl(l_count).program_name;
                                        close l_cur_prog_name2;
                                        l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).sub_project_id;
			end if;

		end if;

		PA_INTERFACE_UTILS_PUB.get_messages
           	(p_encoded         => FND_API.G_FALSE     -- Get the encoded message.
                , p_msg_index      => 1                   -- Get the message at index 1.
                , p_data           => l_prog_error_tbl(l_count).error_msg
                , p_msg_index_out  => l_msg_index_out);

	end if;

end loop;

-- In case of any errors in the above loop, populate the tokenized error messages in the error stack and raise an exception:
l_error_count := l_prog_error_tbl.count;

if (l_error_count > 0) then

	-- Set the return status to error.
  	x_return_status := FND_API.G_RET_STS_ERROR;

	-- Clear all previous messages from the message stack.
  	FND_MSG_PUB.initialize;

	-- Populate the generic error message.
	PA_UTILS.ADD_MESSAGE('PA','PA_PS_GENERIC_ERROR');

	-- Loop through the local pl/sql error table to populate the tokenized error messages.
	for l in l_prog_error_tbl.first..l_prog_error_tbl.last
	loop
		if (l_prog_error_tbl.exists(l)) then
	 	 	PA_UTILS.ADD_MESSAGE('PA','PA_PS_TOKENIZED_ERROR'
	 				     ,'TASKNAME',l_prog_error_tbl(l).program_name
					     ,'TASKNUMBER',l_prog_error_tbl(l).object_relationship_id
					     ,'ERRORMSG', l_prog_error_tbl(l).error_msg);
		end if;
	 end loop;

  	 raise FND_API.G_EXC_ERROR;

  end if;

-- Commit if p_commit = FND_API.G_TRUE.
if (p_commit = FND_API.G_TRUE) then
        commit;
end if;

exception

   when FND_API.G_EXC_ERROR then
      rollback to CREATE_PROGRAM_LINKS_AMG;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      if x_msg_count = 1 then
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE
                , p_msg_index      => 1
                , p_msg_count      => x_msg_count
                , p_msg_data       => x_msg_data
                , p_data           => x_msg_data
                , p_msg_index_out  => l_msg_index_out);
     end if;

   when FND_API.G_EXC_UNEXPECTED_ERROR then
      rollback to CREATE_PROGRAM_LINKS_AMG;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      if x_msg_count = 1 then
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE
                , p_msg_index      => 1
                , p_msg_count      => x_msg_count
                , p_msg_data       => x_msg_data
                , p_data           => x_msg_data
                , p_msg_index_out  => l_msg_index_out);
     end if;

   when OTHERS then
      rollback to CREATE_PROGRAM_LINKS_AMG;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := 1;
      x_msg_data := SQLERRM;
      if FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) then
                FND_MSG_PUB.add_exc_msg
                ( p_pkg_name            => G_PKG_NAME
                , p_procedure_name      => l_api_name);
      end if;

end CREATE_PROGRAM_LINKS;

PROCEDURE UPDATE_PROGRAM_LINK_COMMENTS
(p_api_version                  IN      NUMBER          := 1.0
, p_init_msg_list               IN      VARCHAR2        := FND_API.G_TRUE
, p_commit                      IN      VARCHAR2        := FND_API.G_FALSE
, p_debug_mode                  IN      VARCHAR2        := 'N'
, p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_program_links_tbl           IN      PA_PROJECT_PUB.PROGRAM_LINKS_TBL_TYPE
, x_return_status               OUT     NOCOPY VARCHAR2
, x_msg_count                   OUT     NOCOPY NUMBER
, x_msg_data                    OUT     NOCOPY VARCHAR2)
is

l_api_name              CONSTANT  VARCHAR2(30)  := 'UPDATE_PROGRAM_LINK_COMMENTS';

l_pm_product_code       VARCHAR2(2)             := NULL;
l_function_allowed      VARCHAR2(1)             := NULL;

l_count            		NUMBER          	:= NULL;
l_parent_project_id		NUMBER			:= NULL;
l_sub_project_id		NUMBER			:= NULL;
l_task_id			NUMBER			:= NULL;
l_task_id_out			NUMBER			:= NULL;
l_task_version_id		NUMBER			:= NULL;
l_object_relationship_id 	NUMBER                  := NULL;
l_record_version_number 	NUMBER                  := NULL;


cursor l_cur_task_ver_id(c_task_id NUMBER, c_structure_type VARCHAR2) is
select ppev.element_version_id
from pa_proj_element_versions ppev, pa_proj_elem_ver_structure ppevs
, pa_proj_structure_types ppst, pa_structure_types pst
where ppevs.proj_element_id = ppst.proj_element_id
and ppst.structure_type_id = pst.structure_type_id
and ppev.project_id = ppevs.project_id
and ppev.parent_structure_version_id = ppevs.element_version_id
and ppevs.current_working_flag = 'Y'
and ppev.proj_element_id = c_task_id
and pst.structure_type = c_structure_type;

cursor l_cur_por1(c_task_version_id NUMBER, c_sub_proj_id NUMBER, c_structure_type VARCHAR2) is
select por2.object_relationship_id, por2.record_version_number
from pa_object_relationships por1, pa_object_relationships por2
where por1.object_id_to1 = por2.object_id_from1
and por1.relationship_type = 'S'
and por1.object_id_from1 = c_task_version_id
and por2.object_id_to2 = c_sub_proj_id
and por2.relationship_type = decode(c_structure_type, 'WORKPLAN', 'LW', 'FINANCIAL', 'LF');

cursor l_cur_por2(c_object_relationship_id NUMBER) is
select por.object_relationship_id, por.record_version_number, por.object_id_from2
from pa_object_relationships por
where por.relationship_type in ('LW','LF')
and por.object_relationship_id = c_object_relationship_id;

cursor l_cur_prog_name (c_task_version_id NUMBER) is
select ppa.name
from pa_projects_all ppa, pa_proj_element_versions ppev
where ppa.project_id = ppev.project_id
and ppev.element_version_id = c_task_version_id;

cursor l_cur_prog_name2 (c_project_id NUMBER) is
select ppa.name
from pa_projects_all ppa
where ppa.project_id = c_project_id;

cursor l_cur_proj_name (c_project_id NUMBER) is
select ppa.name
from pa_projects_all ppa
where ppa.project_id = c_project_id;

cursor l_cur_task_name (c_task_ver_id NUMBER) is
select ppe.name
from pa_proj_elements ppe, pa_proj_element_versions ppev
where ppe.project_id = ppev.project_id
and ppe.proj_element_id = ppev.proj_element_id
and ppev.element_version_id = c_task_ver_id;

cursor l_cur_project_id2(c_task_version_id NUMBER) is
select ppev.project_id, ppev.proj_element_id
from pa_proj_element_versions ppev
where ppev.element_version_id = c_task_version_id;

cursor l_cur_sub_proj1(c_sub_project_reference VARCHAR2, c_sub_project_id NUMBER) is
select ppa.project_id
from pa_projects_all ppa
where pm_project_reference = c_sub_project_reference
and ppa.project_id = c_sub_project_id;

cursor l_cur_sub_proj2(c_sub_project_reference VARCHAR2) is
select ppa.project_id
from pa_projects_all ppa
where pm_project_reference = c_sub_project_reference;

cursor l_cur_sub_proj3(c_sub_project_id NUMBER) is
select ppa.project_id
from pa_projects_all ppa
where ppa.project_id = c_sub_project_id;

l_parent_sub_flag       VARCHAR2(1)             := NULL;

l_program_name		VARCHAR2(30)		:= NULL;
l_project_name		VARCHAR2(30)		:= NULL;
l_task_name		VARCHAR2(30)		:= NULL;

l_unexp_error_flag      VARCHAR2(1)             := 'N';
l_exp_error_flag        VARCHAR2(1)             := 'N';

l_msg_index_out     	NUMBER                  := NULL;
l_return_status         VARCHAR2(1)             := NULL;
l_msg_count             NUMBER                  := NULL;
l_msg_data              VARCHAR2(2000)          := NULL;

TYPE l_prog_error_rec_type IS RECORD
(program_name           VARCHAR2(300)   := null
,object_relationship_id NUMBER          := null
,error_msg              VARCHAR2(2000)  := null);

TYPE l_prog_error_tbl_type IS TABLE OF l_prog_error_rec_type INDEX BY BINARY_INTEGER;

l_prog_error_tbl l_prog_error_tbl_type;

l_error_count           NUMBER          := 0;
l_msg_code              VARCHAR2(30)    := null;

l                       NUMBER          := 0;

begin

-- Establish the save point.
savepoint UPDATE_PROGRAM_LINK_CMNTS_AMG;

--  Initialize the message table if requested.
if FND_API.TO_BOOLEAN(p_init_msg_list) then
       FND_MSG_PUB.initialize;
end if;

--  Standard call to check for API compatibility.
if NOT FND_API.Compatible_API_Call (g_api_version_number, p_api_version, l_api_name, G_PKG_NAME) then
        raise FND_API.G_EXC_UNEXPECTED_ERROR;
 end if;

-- Initialize the return status
x_return_status := FND_API.G_RET_STS_SUCCESS;

-- Initialize the error flags.
l_unexp_error_flag := 'N';
l_exp_error_flag := 'N';

-- Loop through the records in the input PL/SQL table.
for l_count in p_program_links_tbl.FIRST..p_program_links_tbl.LAST loop

        -- Clear the message stack.
        FND_MSG_PUB.initialize;

        -- Initialize the error flags.
        l_unexp_error_flag := 'N';
        l_exp_error_flag := 'N';
        l_parent_sub_flag := 'P'; -- By default assume that any errors will be for the parent project.

	-- Initialize the local variables.
	l_parent_project_id             := NULL;
	l_sub_project_id                := NULL;
	l_task_id                       := NULL;
	l_task_id_out                   := NULL;
	l_task_version_id               := NULL;
	l_object_relationship_id        := NULL;
	l_record_version_number         := NULL;

	-- If object relationship id is not passed in.
	if ((p_program_links_tbl(l_count).object_relationship_id is null)
             or (p_program_links_tbl(l_count).object_relationship_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then

		-- If task version id is not passed in.
		if ((p_program_links_tbl(l_count).task_version_id is null)
	     	    or (p_program_links_tbl(l_count).task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then

                	-- Convert parent project reference to id.
			if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
                        	PA_PROJECT_PVT.Convert_pm_projref_to_id
                        	(p_pm_project_reference       =>     p_program_links_tbl(l_count).pm_parent_project_reference
                        	, p_pa_project_id             =>     p_program_links_tbl(l_count).parent_project_id
                        	, p_out_project_id            =>     l_parent_project_id
                        	, p_return_status             =>     l_return_status);

                        	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                        		l_unexp_error_flag := 'Y';
                        	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                        		l_exp_error_flag := 'Y';
                        	end if;
			end if;

                        -- Convert task reference to id
			if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
                        	PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_ALL
                        	(p_pa_project_id        => l_parent_project_id
                        	, p_pm_task_reference   => p_program_links_tbl(l_count).pm_task_reference
                		, p_pa_task_id   	=> p_program_links_tbl(l_count).task_id
                        	, p_structure_type      => p_program_links_tbl(l_count).structure_type
                        	, p_out_task_id         => l_task_id
                        	, p_return_status       => l_return_status);

                        	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                        		l_unexp_error_flag := 'Y';
                        	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                        		l_exp_error_flag := 'Y';
                        	end if;
			end if;

			-- Find the task version id in the current working workplan structure version.
			if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
				open l_cur_task_ver_id(l_task_id, p_program_links_tbl(l_count).structure_type);
				fetch l_cur_task_ver_id into l_task_version_id;
				close l_cur_task_ver_id;

                        	-- Validate that the task has a version in the specified structure type.
                        	if (l_task_version_id is null) then
                                	PA_UTILS.ADD_MESSAGE('PA','PA_TASK_ID_INVALID');
					l_exp_error_flag := 'Y';
                        	end if;

			end if;

		-- If task version id is passed in.
		else
			if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
				l_task_version_id := p_program_links_tbl(l_count).task_version_id;
			end if;

			if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
	        		open l_cur_project_id2(l_task_version_id);
                		fetch l_cur_project_id2 into l_parent_project_id, l_task_id;
                        	if l_cur_project_id2%NOTFOUND then
                                	PA_UTILS.ADD_MESSAGE('PA','PA_TASK_VERSION_REQUIRED');
                                	l_exp_error_flag := 'Y';
                        	end if;

                		close l_cur_project_id2;
			end if;

                	-- Validate the task id and project id of the task version id.
			if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
                        	PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_ALL
                        	(p_pa_project_id        => l_parent_project_id
                        	, p_pa_task_id          => l_task_id
                        	, p_structure_type      => p_program_links_tbl(l_count).structure_type
                        	, p_out_task_id         => l_task_id_out
                        	, p_return_status       => l_return_status);

                        	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                                	l_unexp_error_flag := 'Y';
                        	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                                	l_exp_error_flag := 'Y';
                        	end if;
			end if;

		end if;

        	-- Validate sub-project across organizations and convert sub-project reference to id.
        	if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.

                	if (((p_program_links_tbl(l_count).pm_sub_project_reference is not null)
                      	      and (p_program_links_tbl(l_count).pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
                    	    and ((p_program_links_tbl(l_count).sub_project_id is not null)
                              and (p_program_links_tbl(l_count).sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))) then

                        	open l_cur_sub_proj1(p_program_links_tbl(l_count).pm_sub_project_reference, p_program_links_tbl(l_count).sub_project_id);
                        	fetch l_cur_sub_proj1 into l_sub_project_id;
                        	close l_cur_sub_proj1;

                	elsif ((p_program_links_tbl(l_count).pm_sub_project_reference is not null)
                        	and (p_program_links_tbl(l_count).pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)) then

                        	open l_cur_sub_proj2(p_program_links_tbl(l_count).pm_sub_project_reference);
                        	fetch l_cur_sub_proj2 into l_sub_project_id;
                        	close l_cur_sub_proj2;

                	elsif ((p_program_links_tbl(l_count).sub_project_id is not null)
                        	and (p_program_links_tbl(l_count).sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then

                        	open l_cur_sub_proj3(p_program_links_tbl(l_count).sub_project_id);
                        	fetch l_cur_sub_proj3 into l_sub_project_id;
                        	close l_cur_sub_proj3;

                	else

                     		l_sub_project_id := null;

                	end if;

                	if (l_sub_project_id is null) then

        	                PA_UTILS.ADD_MESSAGE('PA','PA_INV_PROJECT_ID');
                        	l_exp_error_flag := 'Y';

                        	l_parent_sub_flag := 'S'; -- Indicates that the error is for the sub-project.

                	end if;

        	end if;

		if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
			open l_cur_por1(l_task_version_id, l_sub_project_id, p_program_links_tbl(l_count).structure_type);
			fetch l_cur_por1 into l_object_relationship_id, l_record_version_number;
			if  l_cur_por1%NOTFOUND then
				-- Program Link does not exist between the parent project and the sub-project.
				open l_cur_prog_name(l_task_version_id);
				fetch l_cur_prog_name into l_program_name;
				close l_cur_prog_name;

				open l_cur_proj_name(l_sub_project_id);
				fetch l_cur_proj_name into l_project_name;
				close l_cur_proj_name;

                		open l_cur_task_name(l_task_version_id);
                		fetch l_cur_task_name into l_task_name;
                		close l_cur_task_name;

				PA_UTILS.ADD_MESSAGE('PA','PA_PS_NO_LINK_EXISTS'
						 ,'PROJ', l_project_name
						 ,'PROG', l_program_name
						 ,'TASK', l_task_name
						 ,'STR', p_program_links_tbl(l_count).structure_type);

				l_exp_error_flag := 'Y';
			end if;
			close l_cur_por1;
		end if;

	-- If object relationship id is passed in.
	else
		if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
	        	open l_cur_por2(p_program_links_tbl(l_count).object_relationship_id);
                	fetch l_cur_por2 into l_object_relationship_id, l_record_version_number, l_parent_project_id;
			if l_cur_por2%NOTFOUND then
				-- Invalid object_relationship_id.
				PA_UTILS.ADD_MESSAGE('PA','PA_PS_INVALID_OBJ_REL_ID'
                                                  	 ,'OBJRELID', p_program_links_tbl(l_count).object_relationship_id);

				l_exp_error_flag := 'Y';
			end if;
                	close l_cur_por2;
		end if;
	end if;

        -- Actions performed using the APIs are subject to function security.
        -- If the responsibility does not allow a function to be executed the API
        -- will error out as the user does not have access.
        if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
                if (p_program_links_tbl(l_count).structure_type = 'WORKPLAN'
                    or PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(l_parent_project_id) = 'Y') then
                        PA_PM_FUNCTION_SECURITY_PUB.check_function_security
                        (p_api_version_number   => p_api_version
                        , p_responsibility_id   => FND_GLOBAL.RESP_ID
                        , p_function_name       => 'PA_PAXPREPR_WP_LINK_PROJ'
                        , p_msg_count           => l_msg_count
                        , p_msg_data            => l_msg_data
                        , p_return_status       => l_return_status
                        , p_function_allowed    => l_function_allowed);

                        if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                                l_unexp_error_flag := 'Y';
                        elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                                l_exp_error_flag := 'Y';
                        end if;

                        if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
                                if l_function_allowed = 'N' then
                                        pa_interface_utils_pub.map_new_amg_msg
                                        (p_old_message_code     => 'PA_FUNCTION_SECURITY_ENFORCED'
                                        , p_msg_attribute       => 'CHANGE'
                                        , p_resize_flag         => 'Y'
                                        , p_msg_context         => 'GENERAL'
                                        , p_attribute1          => ''
                                        , p_attribute2          => ''
                                        , p_attribute3          => ''
                                        , p_attribute4          => ''
                                        , p_attribute5          => '');
                                        l_exp_error_flag := 'Y';
                                end if;
                        end if;
                end if;

	end if;

	if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then  -- Indicates no errors thus far in the loop iteration.
                if (p_program_links_tbl(l_count).structure_type = 'FINANCIAL'
                    or PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(l_parent_project_id) = 'Y') then
                        PA_PM_FUNCTION_SECURITY_PUB.check_function_security
                        (p_api_version_number   => p_api_version
                        , p_responsibility_id   => FND_GLOBAL.RESP_ID
                        , p_function_name       => 'PA_PAXPREPR_OPT_SUBPROJECTS'
                        , p_msg_count           => l_msg_count
                        , p_msg_data            => l_msg_data
                        , p_return_status       => l_return_status
                        , p_function_allowed    => l_function_allowed);

                        if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                                l_unexp_error_flag := 'Y';
                        elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                                l_exp_error_flag := 'Y';
                        end if;

                        if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
                                if l_function_allowed = 'N' then
                                        pa_interface_utils_pub.map_new_amg_msg
                                        (p_old_message_code     => 'PA_FUNCTION_SECURITY_ENFORCED'
                                        , p_msg_attribute       => 'CHANGE'
                                        , p_resize_flag         => 'Y'
                                        , p_msg_context         => 'GENERAL'
                                        , p_attribute1          => ''
                                        , p_attribute2          => ''
                                        , p_attribute3          => ''
                                        , p_attribute4          => ''
                                        , p_attribute5          => '');
                                        l_exp_error_flag := 'Y';
                                end if;
                        end if;
                end if;
        end if;

	if (l_exp_error_flag = 'N' and l_unexp_error_flag = 'N') then -- Indicates no errors thus far in the loop iteration.
		-- Call the API to update the sub-project association.
		PA_RELATIONSHIP_PUB.UPDATE_SUBPROJECT_ASSOCIATION
		(p_api_version			=> 	p_api_version
		, p_init_msg_list 		=> 	FND_API.G_FALSE
		, p_calling_module		=>	'AMG'
		, p_max_msg_count		=>	p_max_msg_count
		, p_commit			=>	p_commit
		, p_debug_mode			=>	p_debug_mode
		, p_object_relationship_id	=>	l_object_relationship_id
		, p_record_version_number	=>	l_record_version_number
		, p_comment			=>	p_program_links_tbl(l_count).comments
		, x_return_status		=>	l_return_status
		, x_msg_count			=>	l_msg_count
		, x_msg_data			=>	l_msg_data);

        	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                	l_unexp_error_flag := 'Y';
        	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                	l_exp_error_flag := 'Y';
        	end if;
	end if;

        -- In case of any errors in the loop store the message context and message code for the error message reported
        -- in the local pl/sql error table.

        if ((l_unexp_error_flag = 'Y') or (l_exp_error_flag = 'Y')) then

                l_prog_error_tbl(l_count).program_name := NULL;
                l_prog_error_tbl(l_count).object_relationship_id := NULL;

                if (l_parent_sub_flag = 'P') then -- Indicates that the error is for the parent_project.

                        if (((p_program_links_tbl(l_count).pm_parent_project_reference is not null)
                              and (p_program_links_tbl(l_count).pm_parent_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
                            and ((p_program_links_tbl(l_count).parent_project_id is not null)
                                  and (p_program_links_tbl(l_count).parent_project_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))) then
                                         l_prog_error_tbl(l_count).program_name := p_program_links_tbl(l_count).pm_parent_project_reference;
                                         l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).parent_project_id;
                        elsif ((p_program_links_tbl(l_count).pm_parent_project_reference is not null)
                             and (p_program_links_tbl(l_count).pm_parent_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)) then
                                        l_prog_error_tbl(l_count).program_name := p_program_links_tbl(l_count).pm_parent_project_reference;
                        elsif ((p_program_links_tbl(l_count).parent_project_id is not null)
                               and (p_program_links_tbl(l_count).parent_project_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then
                                        open l_cur_prog_name2(p_program_links_tbl(l_count).parent_project_id);
                                        fetch l_cur_prog_name2 into l_prog_error_tbl(l_count).program_name;
                                        close l_cur_prog_name2;
                                        l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).parent_project_id;
                        elsif ((p_program_links_tbl(l_count).task_version_id is not null)
                                and (p_program_links_tbl(l_count).task_version_id  <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then
                                        l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).task_version_id;
                        end if;

                elsif (l_parent_sub_flag = 'S')  then -- Indicates that the error is for the sub-project.

                        if (((p_program_links_tbl(l_count).pm_sub_project_reference is not null)
                              and (p_program_links_tbl(l_count).pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
                            and ((p_program_links_tbl(l_count).sub_project_id is not null)
                                  and (p_program_links_tbl(l_count).sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))) then
                                         l_prog_error_tbl(l_count).program_name := p_program_links_tbl(l_count).pm_sub_project_reference;
                                         l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).sub_project_id;
                        elsif ((p_program_links_tbl(l_count).pm_sub_project_reference is not null)
                                and (p_program_links_tbl(l_count).pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)) then
                                         l_prog_error_tbl(l_count).program_name := p_program_links_tbl(l_count).pm_sub_project_reference;
                        elsif ((p_program_links_tbl(l_count).sub_project_id is not null)
                                and (p_program_links_tbl(l_count).sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then
                                        open l_cur_prog_name2(p_program_links_tbl(l_count).sub_project_id);
                                        fetch l_cur_prog_name2 into l_prog_error_tbl(l_count).program_name;
                                        close l_cur_prog_name2;
                                        l_prog_error_tbl(l_count).object_relationship_id := p_program_links_tbl(l_count).sub_project_id;
                        end if;

                end if;

                PA_INTERFACE_UTILS_PUB.get_messages
                (p_encoded         => FND_API.G_FALSE     -- Get the encoded message.
                , p_msg_index      => 1                   -- Get the message at index 1.
                , p_data           => l_prog_error_tbl(l_count).error_msg
                , p_msg_index_out  => l_msg_index_out);

        end if;

end loop;

-- In case of any errors in the above loop, populate the tokenized error messages in the error stack and raise an exception:
l_error_count := l_prog_error_tbl.count;

if (l_error_count > 0) then

        -- Set the return status to error.
        x_return_status := FND_API.G_RET_STS_ERROR;

        -- Clear all previous messages from the message stack.
        FND_MSG_PUB.initialize;

        -- Populate the generic error message.
        PA_UTILS.ADD_MESSAGE('PA','PA_PS_GENERIC_ERROR');

        -- Loop through the local pl/sql error table to populate the tokenized error messages.
        for l in l_prog_error_tbl.first..l_prog_error_tbl.last
        loop
                if (l_prog_error_tbl.exists(l)) then
                        PA_UTILS.ADD_MESSAGE('PA','PA_PS_TOKENIZED_ERROR'
                                             ,'TASKNAME',l_prog_error_tbl(l).program_name
                                             ,'TASKNUMBER',l_prog_error_tbl(l).object_relationship_id
                                             ,'ERRORMSG', l_prog_error_tbl(l).error_msg);
                end if;
         end loop;

         raise FND_API.G_EXC_ERROR;

  end if;

-- Commit if p_commit = FND_API.G_TRUE.
if (p_commit = FND_API.G_TRUE) then
        commit;
end if;

exception

   when FND_API.G_EXC_ERROR then
      rollback to UPDATE_PROGRAM_LINK_CMNTS_AMG;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      if x_msg_count = 1 then
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE
                , p_msg_index      => 1
                , p_msg_count      => x_msg_count
                , p_msg_data       => x_msg_data
                , p_data           => x_msg_data
                , p_msg_index_out  => l_msg_index_out);
     end if;

   when FND_API.G_EXC_UNEXPECTED_ERROR then
      rollback to UPDATE_PROGRAM_LINK_CMNTS_AMG;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      if x_msg_count = 1 then
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE
                , p_msg_index      => 1
                , p_msg_count      => x_msg_count
                , p_msg_data       => x_msg_data
                , p_data           => x_msg_data
                , p_msg_index_out  => l_msg_index_out);
     end if;

   when OTHERS then
      rollback to UPDATE_PROGRAM_LINK_CMNTS_AMG;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := 1;
      x_msg_data := SQLERRM;
      if FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) then
                FND_MSG_PUB.add_exc_msg
                ( p_pkg_name            => G_PKG_NAME
                , p_procedure_name      => l_api_name);
      end if;

end UPDATE_PROGRAM_LINK_COMMENTS;

PROCEDURE DELETE_PROGRAM_LINK
(p_api_version                  IN      NUMBER          := 1.0
, p_init_msg_list               IN      VARCHAR2        := FND_API.G_TRUE
, p_commit                      IN      VARCHAR2        := FND_API.G_FALSE
, p_debug_mode                  IN      VARCHAR2        := 'N'
, p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_object_relationship_id      IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_parent_project_id           IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_parent_project_reference IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_task_id                     IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_task_reference           IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, p_task_version_id             IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_structure_type		IN	VARCHAR2	:= 'WORKPLAN'
, p_sub_project_id              IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
, p_pm_sub_project_reference    IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
, x_return_status               OUT     NOCOPY VARCHAR2
, x_msg_count                   OUT     NOCOPY NUMBER
, x_msg_data                    OUT     NOCOPY VARCHAR2)
is

l_api_name              CONSTANT  VARCHAR2(30)  := 'DELETE_PROGRAM_LINK';

l_pm_product_code       VARCHAR2(2)             := NULL;
l_function_allowed      VARCHAR2(1)             := NULL;

l_count            		NUMBER          	:= NULL;
l_parent_project_id		NUMBER			:= NULL;
l_sub_project_id		NUMBER			:= NULL;
l_task_id			NUMBER			:= NULL;
l_task_id_out			NUMBER			:= NULL;
l_task_version_id		NUMBER			:= NULL;
l_object_relationship_id 	NUMBER                  := NULL;
l_record_version_number 	NUMBER                  := NULL;

cursor l_cur_task_ver_id(c_task_id NUMBER, c_structure_type VARCHAR2) is
select ppev.element_version_id
from pa_proj_element_versions ppev, pa_proj_elem_ver_structure ppevs
, pa_proj_structure_types ppst, pa_structure_types pst
where ppevs.proj_element_id = ppst.proj_element_id
and ppst.structure_type_id = pst.structure_type_id
and ppev.project_id = ppevs.project_id
and ppev.parent_structure_version_id = ppevs.element_version_id
and ppevs.current_working_flag = 'Y'
and ppev.proj_element_id = c_task_id
and pst.structure_type = c_structure_type;

cursor l_cur_por1(c_task_version_id NUMBER, c_sub_proj_id NUMBER, c_structure_type VARCHAR2) is
select por2.object_relationship_id, por2.record_version_number
from pa_object_relationships por1, pa_object_relationships por2
where por1.object_id_to1 = por2.object_id_from1
and por1.relationship_type = 'S'
and por1.object_id_from1 = c_task_version_id
and por2.object_id_to2 = c_sub_proj_id
and por2.relationship_type = decode(c_structure_type, 'WORKPLAN', 'LW', 'FINANCIAL', 'LF');

cursor l_cur_por2(c_object_relationship_id NUMBER) is
select por.object_relationship_id, por.record_version_number, por.object_id_from2
from pa_object_relationships por
where por.relationship_type in ('LW','LF')
and por.object_relationship_id = c_object_relationship_id;

cursor l_cur_prog_name (c_task_version_id NUMBER) is
select ppa.name
from pa_projects_all ppa, pa_proj_element_versions ppev
where ppa.project_id = ppev.project_id
and ppev.element_version_id = c_task_version_id;

cursor l_cur_proj_name (c_project_id NUMBER) is
select ppa.name
from pa_projects_all ppa
where ppa.project_id = c_project_id;

cursor l_cur_task_name (c_task_ver_id NUMBER) is
select ppe.name
from pa_proj_elements ppe, pa_proj_element_versions ppev
where ppe.project_id = ppev.project_id
and ppe.proj_element_id = ppev.proj_element_id
and ppev.element_version_id = c_task_ver_id;

cursor l_cur_project_id2(c_task_version_id NUMBER) is
select ppev.project_id, ppev.proj_element_id
from pa_proj_element_versions ppev
where ppev.element_version_id = c_task_version_id;

cursor l_cur_sub_proj1(c_sub_project_reference VARCHAR2, c_sub_project_id NUMBER) is
select ppa.project_id
from pa_projects_all ppa
where pm_project_reference = c_sub_project_reference
and ppa.project_id = c_sub_project_id;

cursor l_cur_sub_proj2(c_sub_project_reference VARCHAR2) is
select ppa.project_id
from pa_projects_all ppa
where pm_project_reference = c_sub_project_reference;

cursor l_cur_sub_proj3(c_sub_project_id NUMBER) is
select ppa.project_id
from pa_projects_all ppa
where ppa.project_id = c_sub_project_id;

l_program_name          VARCHAR2(30)            := NULL;
l_project_name          VARCHAR2(30)            := NULL;
l_task_name 		VARCHAR2(30)		:= NULL;

l_msg_index_out     	NUMBER                  := NULL;
l_return_status         VARCHAR2(1)             := NULL;
l_msg_count             NUMBER                  := NULL;
l_msg_data              VARCHAR2(2000)          := NULL;

begin

-- Establish the save point.
savepoint DELETE_PROGRAM_LINK_AMG;

--  Initialize the message table if requested.
if FND_API.TO_BOOLEAN(p_init_msg_list) then
       FND_MSG_PUB.initialize;
end if;

--  Standard call to check for API compatibility.
if NOT FND_API.Compatible_API_Call (g_api_version_number, p_api_version, l_api_name, G_PKG_NAME) then
        raise FND_API.G_EXC_UNEXPECTED_ERROR;
end if;

-- Initialize the return status
x_return_status := FND_API.G_RET_STS_SUCCESS;

-- If object relationship id is not passed in.
if ((p_object_relationship_id is null)
     or (p_object_relationship_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then

	-- If task version id is not passed in.
	if ((p_task_version_id is null)
     	     or (p_task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then

        	-- Convert parent project reference to id.
                PA_PROJECT_PVT.Convert_pm_projref_to_id
                (p_pm_project_reference       =>     p_pm_parent_project_reference
                , p_pa_project_id             =>     p_parent_project_id
                , p_out_project_id            =>     l_parent_project_id
                , p_return_status             =>     l_return_status);

                if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                	raise FND_API.G_EXC_UNEXPECTED_ERROR;
                elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                	raise FND_API.G_EXC_ERROR;
                end if;

                -- Convert task reference to id
                PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_ALL
                (p_pa_project_id        => l_parent_project_id
                , p_pm_task_reference   => p_pm_task_reference
		, p_pa_task_id          => p_task_id
                , p_structure_type      => p_structure_type
                , p_out_task_id         => l_task_id
                , p_return_status       => l_return_status);

                if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                	raise FND_API.G_EXC_UNEXPECTED_ERROR;
                elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                	raise FND_API.G_EXC_ERROR;
                end if;

		-- Find the task version id in the current working workplan structure version.
		open l_cur_task_ver_id(l_task_id, p_structure_type);
		fetch l_cur_task_ver_id into l_task_version_id;
		close l_cur_task_ver_id;

                -- Validate that the task has a version in the specified structure type.
                if (l_task_version_id is null) then
                	PA_UTILS.ADD_MESSAGE('PA','PA_TASK_ID_INVALID');
			raise FND_API.G_EXC_ERROR;
                end if;

	-- If task version id is passed in.
	else
		l_task_version_id := p_task_version_id;

                open l_cur_project_id2(l_task_version_id);
                fetch l_cur_project_id2 into l_parent_project_id, l_task_id;
                if l_cur_project_id2%NOTFOUND then
                	PA_UTILS.ADD_MESSAGE('PA','PA_TASK_VERSION_REQUIRED');
                        raise FND_API.G_EXC_ERROR;
                end if;
                close l_cur_project_id2;

                -- Validate the task id and project id of the task version id.
                PA_PROJECT_PVT.CONVERT_PM_TASKREF_TO_ID_ALL
                (p_pa_project_id        => l_parent_project_id
                , p_pa_task_id          => l_task_id
                , p_structure_type      => p_structure_type
                , p_out_task_id         => l_task_id_out
                , p_return_status       => l_return_status);

                if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
                        raise FND_API.G_EXC_UNEXPECTED_ERROR;
                elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
                        raise FND_API.G_EXC_ERROR;
                end if;

	end if;

        -- Validate sub-project across organizations and convert sub-project reference to id.
        if (((p_pm_sub_project_reference is not null)
              and (p_pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR))
            and ((p_sub_project_id is not null)
                  and (p_sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM))) then

        	open l_cur_sub_proj1(p_pm_sub_project_reference, p_sub_project_id);
                fetch l_cur_sub_proj1 into l_sub_project_id;
                close l_cur_sub_proj1;

        elsif ((p_pm_sub_project_reference is not null)
               and (p_pm_sub_project_reference <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR)) then

        	open l_cur_sub_proj2(p_pm_sub_project_reference);
                fetch l_cur_sub_proj2 into l_sub_project_id;
                close l_cur_sub_proj2;

        elsif ((p_sub_project_id is not null)
               and (p_sub_project_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)) then

        	open l_cur_sub_proj3(p_sub_project_id);
                fetch l_cur_sub_proj3 into l_sub_project_id;
                close l_cur_sub_proj3;

        else

                     l_sub_project_id := null;

        end if;

        if (l_sub_project_id is null) then

        	PA_UTILS.ADD_MESSAGE('PA','PA_INV_PROJECT_ID');
                raise FND_API.G_EXC_ERROR;

        end if;

	open l_cur_por1(l_task_version_id, l_sub_project_id, p_structure_type);
	fetch l_cur_por1 into l_object_relationship_id, l_record_version_number;
        if  l_cur_por1%NOTFOUND then
        	-- Program Link does not exist between the parent project and the sub-project.

        	open l_cur_prog_name(l_task_version_id);
                fetch l_cur_prog_name into l_program_name;
                close l_cur_prog_name;

                open l_cur_proj_name(l_sub_project_id);
                fetch l_cur_proj_name into l_project_name;
                close l_cur_proj_name;

		open l_cur_task_name(l_task_version_id);
		fetch l_cur_task_name into l_task_name;
		close l_cur_task_name;

                PA_UTILS.ADD_MESSAGE('PA','PA_PS_NO_LINK_EXISTS'
                                         ,'PROJ', l_project_name
                                         ,'PROG', l_program_name
                                         ,'TASK', l_task_name
                                         ,'STR', p_structure_type);

                 close l_cur_por1;

                 RAISE FND_API.G_EXC_ERROR;
        end if;

	close l_cur_por1;

-- If object relationship id is passed in.
else
        open l_cur_por2(p_object_relationship_id);
      	fetch l_cur_por2 into l_object_relationship_id, l_record_version_number, l_parent_project_id;
        if l_cur_por2%NOTFOUND then
        	-- Invalid object_relationship_id.

        	PA_UTILS.ADD_MESSAGE('PA','PA_PS_INVALID_OBJ_REL_ID'
                                         ,'OBJRELID', p_object_relationship_id);

                close l_cur_por2;

                RAISE FND_API.G_EXC_ERROR;
        end if;

        close l_cur_por2;
end if;

-- Actions performed using the APIs are subject to function security.
-- If the responsibility does not allow a function to be executed the API
-- will error out as the user does not have access.
if (p_structure_type = 'WORKPLAN'
    or PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(l_parent_project_id) = 'Y') then
       	PA_PM_FUNCTION_SECURITY_PUB.check_function_security
       	(p_api_version_number   => p_api_version
       	, p_responsibility_id   => FND_GLOBAL.RESP_ID
       	, p_function_name       => 'PA_PAXPREPR_WP_LINK_PROJ'
       	, p_msg_count           => l_msg_count
       	, p_msg_data            => l_msg_data
       	, p_return_status       => l_return_status
       	, p_function_allowed    => l_function_allowed);

	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
        	raise FND_API.G_EXC_UNEXPECTED_ERROR;
	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
        	raise FND_API.G_EXC_ERROR;
	end if;

        if l_function_allowed = 'N' then
               	pa_interface_utils_pub.map_new_amg_msg
               	(p_old_message_code     => 'PA_FUNCTION_SECURITY_ENFORCED'
               	, p_msg_attribute       => 'CHANGE'
               	, p_resize_flag         => 'Y'
               	, p_msg_context         => 'GENERAL'
               	, p_attribute1          => ''
               	, p_attribute2          => ''
               	, p_attribute3          => ''
               	, p_attribute4          => ''
               	, p_attribute5          => '');
		raise FND_API.G_EXC_ERROR;
        end if;
end if;

if (p_structure_type = 'FINANCIAL'
    or PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(l_parent_project_id) = 'Y') then
       	PA_PM_FUNCTION_SECURITY_PUB.check_function_security
       	(p_api_version_number   => p_api_version
       	, p_responsibility_id   => FND_GLOBAL.RESP_ID
       	, p_function_name       => 'PA_PAXPREPR_OPT_SUBPROJECTS'
       	, p_msg_count           => l_msg_count
       	, p_msg_data            => l_msg_data
       	, p_return_status       => l_return_status
       	, p_function_allowed    => l_function_allowed);

	if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
        	raise FND_API.G_EXC_UNEXPECTED_ERROR;
	elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
        	raise FND_API.G_EXC_ERROR;
	end if;

       	if l_function_allowed = 'N' then
               	pa_interface_utils_pub.map_new_amg_msg
               	(p_old_message_code     => 'PA_FUNCTION_SECURITY_ENFORCED'
               	, p_msg_attribute       => 'CHANGE'
               	, p_resize_flag         => 'Y'
               	, p_msg_context         => 'GENERAL'
               	, p_attribute1          => ''
               	, p_attribute2          => ''
               	, p_attribute3          => ''
               	, p_attribute4          => ''
               	, p_attribute5          => '');
		raise FND_API.G_EXC_ERROR;
       	end if;
end if;

-- Call the API to delete the sub-project association.
PA_RELATIONSHIP_PUB.DELETE_SUBPROJECT_ASSOCIATION
(p_api_version			=>	p_api_version
, p_init_msg_list		=>	p_init_msg_list
, p_commit			=>	p_commit
, p_calling_module		=>	'AMG'
, p_debug_mode			=>	p_debug_mode
, p_max_msg_count		=>	p_max_msg_count
, p_object_relationships_id	=>	l_object_relationship_id
, p_record_version_number	=>	l_record_version_number
, x_return_status	 	=>	l_return_status
, x_msg_count	 		=>	l_msg_count
, x_msg_data	 		=>	l_msg_data);

if (l_return_status = FND_API.G_RET_STS_UNEXP_ERROR) then
       	raise FND_API.G_EXC_UNEXPECTED_ERROR;
elsif (l_return_status <> FND_API.G_RET_STS_SUCCESS) then
       	raise FND_API.G_EXC_ERROR;
end if;

-- Commit if p_commit = FND_API.G_TRUE.
if (p_commit = FND_API.G_TRUE) then
        commit;
end if;

exception

   when FND_API.G_EXC_ERROR then
      rollback to DELETE_PROGRAM_LINK_AMG;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      if x_msg_count = 1 then
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE
                , p_msg_index      => 1
                , p_msg_count      => x_msg_count
                , p_msg_data       => x_msg_data
                , p_data           => x_msg_data
                , p_msg_index_out  => l_msg_index_out);
     end if;

   when FND_API.G_EXC_UNEXPECTED_ERROR then
      rollback to DELETE_PROGRAM_LINK_AMG;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := FND_MSG_PUB.count_msg;

      if x_msg_count = 1 then
           PA_INTERFACE_UTILS_PUB.get_messages
               (p_encoded        => FND_API.G_FALSE
                , p_msg_index      => 1
                , p_msg_count      => x_msg_count
                , p_msg_data       => x_msg_data
                , p_data           => x_msg_data
                , p_msg_index_out  => l_msg_index_out);
     end if;

   when OTHERS then
      rollback to DELETE_PROGRAM_LINK_AMG;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      x_msg_count := 1;
      x_msg_data := SQLERRM;
      if FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR) then
                FND_MSG_PUB.add_exc_msg
                ( p_pkg_name            => G_PKG_NAME
                , p_procedure_name      => l_api_name);
      end if;

end DELETE_PROGRAM_LINK;

-- Bug # 5072032.


-- Bug 7525628
PROCEDURE UPDATE_FINANCIAL_ATTRIBUTES
(
 P_API_VERSION_NUMBER           IN  NUMBER,
 P_COMMIT                       IN  VARCHAR2,
 P_INIT_MSG_LIST                IN  VARCHAR2,
 P_PA_PROJECT_ID                IN  NUMBER,
 P_TASK_ID_TBL                  IN  SYSTEM.PA_NUM_TBL_TYPE,
 P_SERVICE_TYPE_CODE_TBL        IN  SYSTEM.PA_VARCHAR2_150_TBL_TYPE,
 P_CHARGEABLE_FLAG_TBL          IN  SYSTEM.PA_VARCHAR2_150_TBL_TYPE,
 P_BILLABLE_FLAG_TBL            IN  SYSTEM.PA_VARCHAR2_150_TBL_TYPE,
 X_MSG_COUNT                    OUT NOCOPY NUMBER,
 X_MSG_DATA                     OUT NOCOPY VARCHAR2,
 X_RETURN_STATUS                OUT NOCOPY VARCHAR2
)
IS
l_published_version             NUMBER(15);
l_prev_published_version        NUMBER(15);
l_new_task                      NUMBER(15);
i                               NUMBER    := 0;
l_api_name      CONSTANT        VARCHAR2(30)     := 'UPDATE_FINANCIAL_ATTRIBUTES';

--cursor which fetches the previous published version
cursor c_prev_published_version(p_pa_project_id IN NUMBER) is
select element_version_id from (
  select element_version_id
        from pa_proj_elem_ver_structure ppevs,
             pa_proj_structure_types ppst
        where ppevs.latest_eff_published_flag = 'N'
                and ppst.proj_element_id = ppevs.proj_element_id
                and ppst.structure_type_id = 1
                and ppevs.status_code = 'STRUCTURE_PUBLISHED'
                and ppevs.project_id = p_pa_project_id
                order by ppevs.published_date desc
        ) where rownum = 1;

--cursor which fetches all tasks added as a result of last publish
cursor c_newly_added_tasks(l_published_version IN NUMBER,l_prev_published_version IN NUMBER) is
select proj_element_id
        from pa_proj_element_versions
        where   project_id = P_PA_PROJECT_ID
                and object_type = 'PA_TASKS'
                and PARENT_STRUCTURE_VERSION_ID = l_published_version
MINUS
select proj_element_id
        from pa_proj_element_versions
        where   project_id = P_PA_PROJECT_ID
                and object_type = 'PA_TASKS'
                and PARENT_STRUCTURE_VERSION_ID = l_prev_published_version;


BEGIN

l_published_version := PA_PROJECT_STRUCTURE_UTILS.GET_LATEST_WP_VERSION(p_pa_project_id);

OPEN c_prev_published_version(p_pa_project_id);
FETCH c_prev_published_version INTO l_prev_published_version;
CLOSE c_prev_published_version;

FOR rec IN c_newly_added_tasks(l_published_version, l_prev_published_version) LOOP
    FOR i IN p_task_id_tbl.FIRST .. p_task_id_tbl.LAST LOOP
                IF p_task_id_tbl(i) = rec.proj_element_id THEN

                  UPDATE pa_tasks
                    SET service_type_code = nvl(p_service_type_code_tbl(i),service_type_code),  --  7525628
                        chargeable_flag = nvl(p_chargeable_flag_tbl(i),chargeable_flag),  --  7525628
                        billable_flag = nvl(p_billable_flag_tbl(i),billable_flag) --  7525628
                    WHERE task_id = p_task_id_tbl(i);
                    EXIT;


                 END IF;
        END LOOP;
END LOOP;

x_return_status := FND_API.G_RET_STS_SUCCESS;

EXCEPTION

  WHEN FND_API.G_EXC_ERROR THEN

  x_return_status  := FND_API.G_RET_STS_ERROR;


 WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN

 x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  WHEN OTHERS THEN

  x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

  IF FND_MSG_PUB.check_msg_level(FND_MSG_PUB.G_MSG_LVL_UNEXP_ERROR)
  THEN
    FND_MSG_PUB.add_exc_msg
        ( p_pkg_name    => G_PKG_NAME
        , p_procedure_name  => l_api_name  );

  END IF;

END UPDATE_FINANCIAL_ATTRIBUTES;
--End of fix for Bug 7525628


end PA_PROJECT_PUB;

/
