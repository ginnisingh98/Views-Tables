--------------------------------------------------------
--  DDL for Package Body IGC_IGCCLDER_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IGC_IGCCLDER_XMLP_PKG" AS
/* $Header: IGCCLDERB.pls 120.0.12010000.1 2008/07/28 06:29:28 appldev ship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    COAID NUMBER;
    SOBNAME VARCHAR2(30);
    FUNCTCURR VARCHAR2(15);
    ERRBUF VARCHAR2(132);
    ERRBUF2 VARCHAR2(132);
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    GL_INFO.GL_GET_LEDGER_INFO(P_SET_OF_BOOKS_ID
                              ,COAID
                              ,SOBNAME
                              ,FUNCTCURR
                              ,ERRBUF);
    IF (ERRBUF IS NOT NULL) THEN
      ERRBUF2 := GL_MESSAGE.GET_MESSAGE('GL_PLL_ROUTINE_ERROR'
                                       ,'N'
                                       ,'ROUTINE'
                                       ,'gl_get_set_of_books_info');
      /*SRW.MESSAGE('00'
                 ,ERRBUF2)*/NULL;
      /*SRW.MESSAGE('00'
                 ,ERRBUF)*/NULL;
      /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END IF;
    SET_OF_BOOKS_NAME := SOBNAME;
    CURRENCY_CODE := FUNCTCURR;
    SELECT
      NAME
    INTO ORG_NAME
    FROM
      HR_OPERATING_UNITS
    WHERE ORGANIZATION_ID = P_ORG_ID;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION DSP_STATUSFORMULA RETURN CHAR IS
    CURSOR C_COUNT IS
      SELECT
        count(*)
      FROM
        IGC_CC_INTERFACE_ERRORS IGE
      WHERE IGE.BATCH_ID = P_BATCH_ID;
    CURSOR C_MEANING(P_LOOKUP_CODE IN VARCHAR2) IS
      SELECT
        MEANING
      FROM
        FND_LOOKUPS FND
      WHERE LOOKUP_TYPE = 'IGC_BATCH_STATUS'
        AND LOOKUP_CODE = P_LOOKUP_CODE;
    L_COUNT NUMBER;
    L_MEANING VARCHAR2(80);
  BEGIN
    OPEN C_COUNT;
    FETCH C_COUNT
     INTO L_COUNT;
    CLOSE C_COUNT;
    IF L_COUNT = 0 THEN
      OPEN C_MEANING('SUCCESS');
      FETCH C_MEANING
       INTO L_MEANING;
      CLOSE C_MEANING;
    ELSE
      OPEN C_MEANING('ERROR');
      FETCH C_MEANING
       INTO L_MEANING;
      CLOSE C_MEANING;
    END IF;
    RETURN L_MEANING;
  EXCEPTION
    WHEN OTHERS THEN
      IF C_COUNT%ISOPEN THEN
        CLOSE C_COUNT;
      END IF;
      IF C_MEANING%ISOPEN THEN
        CLOSE C_MEANING;
      END IF;
      RETURN NULL;
  END DSP_STATUSFORMULA;

  FUNCTION DSP_TOT_HEADERSFORMULA RETURN NUMBER IS
    L_HEADERS NUMBER;
  BEGIN
    SELECT
      COUNT(INTERFACE_HEADER_ID)
    INTO L_HEADERS
    FROM
      IGC_CC_HEADERS_INTERFACE
    WHERE BATCH_ID = P_BATCH_ID;
    RETURN L_HEADERS;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN 0;
  END DSP_TOT_HEADERSFORMULA;

  FUNCTION DSP_TOT_ERRORSFORMULA RETURN NUMBER IS
    L_ERRORS NUMBER;
  BEGIN
    SELECT
      count(distinct INTERFACE_HEADER_ID)
    INTO L_ERRORS
    FROM
      IGC_CC_INTERFACE_ERRORS
    WHERE BATCH_ID = P_BATCH_ID;
    RETURN L_ERRORS;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN 0;
  END DSP_TOT_ERRORSFORMULA;

  FUNCTION SET_OF_BOOKS_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN SET_OF_BOOKS_NAME;
  END SET_OF_BOOKS_NAME_P;

  FUNCTION CURRENCY_CODE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CURRENCY_CODE;
  END CURRENCY_CODE_P;

  FUNCTION ORG_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN ORG_NAME;
  END ORG_NAME_P;

END IGC_IGCCLDER_XMLP_PKG;

/
