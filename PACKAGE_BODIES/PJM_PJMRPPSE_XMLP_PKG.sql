--------------------------------------------------------
--  DDL for Package Body PJM_PJMRPPSE_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PJM_PJMRPPSE_XMLP_PKG" AS
/* $Header: PJMRPPSEB.pls 120.0 2007/12/24 12:27:05 nchinnam noship $ */
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

FUNCTION BEFOREREPORT RETURN BOOLEAN IS
BEGIN

   -- SRW.USER_EXIT('FND SRWINIT');
  SELECT MEANING
  INTO   P_ORDER_BY_DISP
  FROM   MFG_LOOKUPS
  WHERE  LOOKUP_TYPE = 'PJM_SCHEDEXC_ORDERBY'
  AND    LOOKUP_CODE = P_ORDER_BY;

 /* IF (P_PRT_PO <> 'Y')  THEN
    -- SRW.SET_MAXROW('Q_PO',0);
  END IF;

  IF (P_PRT_REL <> 'Y') THEN
    -- SRW.SET_MAXROW('Q_REL',0);
  END IF;

  IF (P_PRT_PR <> 'Y') THEN
    -- SRW.SET_MAXROW('Q_PR',0);
  END IF;

  IF (P_PRT_RFQ <> 'Y') THEN
    -- SRW.SET_MAXROW('Q_RFQ',0);
  END IF;

  IF (P_PRT_QTN <> 'Y') THEN
    -- SRW.SET_MAXROW('Q_QTN',0);

  END IF; */

  /*SRW.USER_EXIT('FND FLEXSQL
            CODE="MSTK"
            APPL_SHORT_NAME="INV"
            MODE="WHERE"
            OUTPUT=":P_ITEM_WHERE"
            OPERATOR="BETWEEN"
            OPERAND1=":P_ITEM_FROM"
            OPERAND2=":P_ITEM_TO"
            TABLEALIAS="MIF"'); */

  --
  -- BUILDING PROJECT RANGE WHERE CLAUSE
  --
  IF ( P_PROJECT_NUMBER_FROM IS NOT NULL ) THEN

    IF ( P_PROJECT_NUMBER_TO IS NOT NULL ) THEN
      P_PROJECT_WHERE :=
         'PP.SEGMENT1 BETWEEN ''' || P_PROJECT_NUMBER_FROM || '''' ||
         ' AND ''' || P_PROJECT_NUMBER_TO || '''' ;
    ELSE
      P_PROJECT_WHERE := 'PP.SEGMENT1 >= ''' || P_PROJECT_NUMBER_FROM || '''';
    END IF;

  ELSE

    IF ( P_PROJECT_NUMBER_TO IS NOT NULL ) THEN
      P_PROJECT_WHERE := 'PP.SEGMENT1 <= ''' || P_PROJECT_NUMBER_TO || '''';
    ELSE
      P_PROJECT_WHERE := '1 = 1';
    END IF;

  END IF;

  --
  -- BUILDING DATE RANGE WHERE CLAUSE
  --

   D_DATE_FROM      := FND_DATE.CANONICAL_TO_DATE(P_DATE_FROM);
  D_DATE_TO        := FND_DATE.CANONICAL_TO_DATE(P_DATE_TO);
  D_DATE_FROM_DISP := FND_DATE.DATE_TO_DISPLAYDATE(D_DATE_FROM);
  D_DATE_TO_DISP   := FND_DATE.DATE_TO_DISPLAYDATE(D_DATE_TO);

   /*D_DATE_FROM      := TO_DATE(P_DATE_FROM,'YYYY/MM/DD HH24:MI:SS');

   D_DATE_TO        := TO_DATE(P_DATE_TO,'YYYY/MM/DD HH24:MI:SS');

   D_DATE_FROM_DISP := TO_CHAR(D_DATE_FROM,'DD/MM/YYYY');

   D_DATE_TO_DISP   := TO_CHAR(D_DATE_TO,'DD/MM/YYYY');*/


  IF ( P_DATE_FROM IS NOT NULL ) THEN

    IF ( P_DATE_TO IS NOT NULL ) THEN
      P_DATE_WHERE := ' BETWEEN ' || '''' || D_DATE_FROM || '''' ||' AND '|| ''''|| D_DATE_TO || '''';
    ELSE
      P_DATE_WHERE := ' >= ' ||  D_DATE_FROM  ;
    END IF;

  ELSE

    IF ( P_DATE_TO IS NOT NULL ) THEN
      P_DATE_WHERE := ' <= ' ||  D_DATE_TO;
    ELSE
      P_DATE_WHERE := ' IS NOT NULL ';
    END IF;

  END IF;
  RETURN (TRUE);
END;

 FUNCTION G_POFILTER RETURN BOOLEAN
 IS
 BEGIN
  IF (P_PRT_PO <> 'Y')  THEN
     RETURN (FALSE);
  END IF;
 END;

 FUNCTION G_RELFILTER RETURN BOOLEAN
 IS
 BEGIN
   IF (P_PRT_REL <> 'Y') THEN
      RETURN (FALSE);
   END IF;
 END;

 FUNCTION G_PRFILTER RETURN BOOLEAN
 IS
 BEGIN
   IF (P_PRT_PR <> 'Y') THEN
      RETURN (FALSE);
   END IF;
 END;

 FUNCTION G_RFQFILTER RETURN BOOLEAN
 IS
 BEGIN
   IF (P_PRT_RFQ <> 'Y') THEN
       RETURN (FALSE);
   END IF;
 END;

 FUNCTION G_QTNFILTER RETURN BOOLEAN
 IS
 BEGIN
   IF (P_PRT_QTN <> 'Y') THEN
      RETURN (FALSE);
   END IF;
 END;

END PJM_PJMRPPSE_XMLP_PKG;


/
