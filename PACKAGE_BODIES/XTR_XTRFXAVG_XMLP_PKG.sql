--------------------------------------------------------
--  DDL for Package Body XTR_XTRFXAVG_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XTR_XTRFXAVG_XMLP_PKG" AS
/* $Header: XTRFXAVGB.pls 120.5 2007/12/31 11:58:33 vjaganat noship $ */
  FUNCTION CF_SET_PARAFORMULA RETURN VARCHAR2 IS
  BEGIN
    SELECT
      SUBSTR(USER
            ,1
            ,10)
    INTO
      CP_PARA
    FROM
      DUAL;
    RETURN (CP_PARA);
  END CF_SET_PARAFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    L_DMMY_NUM NUMBER;
    L_MESSAGE FND_NEW_MESSAGES.MESSAGE_TEXT%TYPE;
    CURSOR CHK_LANG IS
      SELECT
        1
      FROM
        XTR_SYS_LANGUAGES_VL
      WHERE MODULE_NAME = 'XTR_XTRFXAVG_XMLP_PKG';
    CURSOR GET_LANGUAGE_DESC IS
      SELECT
        ITEM_NAME,
        SUBSTR(TEXT
              ,1
              ,100) LANG_NAME
      FROM
        XTR_SYS_LANGUAGES_VL
      WHERE MODULE_NAME = 'XTRFXAVG';
  BEGIN
      BEGIN
      COMPANY_NAME_HEADER := CEP_STANDARD.GET_WINDOW_SESSION_TITLE;
    EXCEPTION
      WHEN OTHERS THEN
        FND_MESSAGE.SET_NAME('XTR'
                            ,'XTR_LOOKUP_ERR');
        L_MESSAGE := FND_MESSAGE.GET;
        RAISE_APPLICATION_ERROR(-20101
                               ,NULL);
    END;
    IF (P_DISPLAY_DEBUG = 'Y') THEN
      NULL;
    END IF;
    FOR c IN GET_LANGUAGE_DESC LOOP
      IF C.ITEM_NAME = 'Z1AND' THEN
        Z1AND := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1BETWEEN' THEN
        Z1BETWEEN := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1CONTRACTS' THEN
        Z1CONTRACTS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1COUNTER_CCY' THEN
        Z1COUNTER_CCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1NOTE_ALL_AMOUNTS' THEN
        Z1NOTE_ALL_AMOUNTS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PARAMETERS' THEN
        Z1PARAMETERS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1REF_CCY' THEN
        Z1REF_CCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1SHOW_TRANSACTIONS' THEN
        Z1SHOW_TRANSACTIONS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2AVG_RATE' THEN
        Z2AVG_RATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2AVG_RATE_SELL' THEN
        Z2AVG_RATE_SELL := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2AVG_RATE_CROSS' THEN
        Z2AVG_RATE_CROSS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2BASE_BUY_AMT' THEN
        Z2BASE_BUY_AMT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2BASE_CCY' THEN
        Z2BASE_CCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2BASE_NET_AMT' THEN
        Z2BASE_NET_AMT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2BASE_SALES_AMT' THEN
        Z2BASE_SALES_AMT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2BUY_AMT' THEN
        Z2BUY_AMT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2BUY_CCY' THEN
        Z2BUY_CCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CONTRA_BUY_AMT' THEN
        Z2CONTRA_BUY_AMT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CONTRA_NET_AMT' THEN
        Z2CONTRA_NET_AMT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CONTRA_SALES_AMT' THEN
        Z2CONTRA_SALES_AMT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CPARTY' THEN
        Z2CPARTY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CURRENCY' THEN
        Z2CURRENCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2DEAL_NOS' THEN
        Z2DEAL_NOS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2END_OF_REPORT' THEN
        Z2END_OF_REPORT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2RATE' THEN
        Z2RATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SELL_AMT' THEN
        Z2SELL_AMT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SELL_CCY' THEN
        Z2SELL_CCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2TRANS_DATE' THEN
        Z2TRANS_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2VALUE_DATE' THEN
        Z2VALUE_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PAGE' THEN
        Z2PAGE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'REPORT_DATE' THEN
        REPORT_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1P_FACTOR' THEN
        Z1P_FACTOR := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1COMPANY' THEN
        Z1COMPANY := C.LANG_NAME;
      END IF;
    END LOOP;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AVG_RATE1FORMULA(BASE_BUY_AMT IN NUMBER
                           ,CONTRA_SALES_AMT IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF BASE_BUY_AMT <> 0 THEN
      RETURN (ROUND(ABS(CONTRA_SALES_AMT / BASE_BUY_AMT)
                  ,2));
    ELSE
      RETURN (NULL);
    END IF;
    RETURN NULL;
  END AVG_RATE1FORMULA;

  FUNCTION AVG_RATE2FORMULA(BASE_SALES_AMT IN NUMBER
                           ,CONTRA_BUY_AMT IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF BASE_SALES_AMT <> 0 THEN
      RETURN (ROUND(ABS(CONTRA_BUY_AMT / BASE_SALES_AMT)
                  ,2));
    ELSE
      RETURN (NULL);
    END IF;
    RETURN NULL;
  END AVG_RATE2FORMULA;

  FUNCTION CALCFORMULA(BASE_BUY_AMT IN NUMBER
                      ,BASE_SALES_AMT IN NUMBER
                      ,CONTRA_BUY_AMT IN NUMBER
                      ,CONTRA_SALES_AMT IN NUMBER) RETURN VARCHAR2 IS
  BEGIN
    BASE_NET_AMT := NVL(BASE_BUY_AMT
                       ,0) + NVL(BASE_SALES_AMT
                       ,0);
    CONTRA_NET_AMT := NVL(CONTRA_BUY_AMT
                         ,0) + NVL(CONTRA_SALES_AMT
                         ,0);
    IF NVL(BASE_NET_AMT
       ,0) <> 0 THEN
      AVG_RATE3 := ROUND(ABS(CONTRA_NET_AMT / BASE_NET_AMT)
                        ,4);
    ELSE
      AVG_RATE3 := NULL;
    END IF;
    RETURN ('');
  END CALCFORMULA;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
    TEMP NUMBER(15) := 1000;
  BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;

    IF P_FACTOR IS NOT NULL THEN
      SELECT
        SUBSTRB(DESCRIPTION
               ,1
               ,20),
        DECODE(SUBSTR(P_FACTOR
                     ,1
                     ,1)
              ,'U'
              ,1
              ,'T'
              ,1000
              ,'M'
              ,1000000
              ,'B'
              ,100000000)
      INTO
        LP_FACTOR_DESC
        ,TEMP
      FROM
        FND_LOOKUPS
      WHERE LOOKUP_TYPE = 'XTR_FACTOR'
        AND LOOKUP_CODE = SUBSTR(P_FACTOR
            ,1
            ,1);
    ELSE
      SELECT
        SUBSTRB(DESCRIPTION
               ,1
               ,20)
      INTO
        LP_FACTOR_DESC
      FROM
        FND_LOOKUPS
      WHERE LOOKUP_TYPE = 'XTR_FACTOR'
        AND LOOKUP_CODE = 'T';
      TEMP := 1000;
    END IF;
    AMT_UNIT2 := TEMP;
    SELECT
      CP.USER_CONCURRENT_PROGRAM_NAME
    INTO
      REPORT_SHORT_NAME
    FROM
      FND_CONCURRENT_PROGRAMS_VL CP,
      FND_CONCURRENT_REQUESTS CR
    WHERE CR.REQUEST_ID = P_CONC_REQUEST_ID
      AND CP.APPLICATION_ID = CR.PROGRAM_APPLICATION_ID
      AND CP.CONCURRENT_PROGRAM_ID = CR.CONCURRENT_PROGRAM_ID;
    P_REFERENCE_DATE_FROM_1 := TO_CHAR(TO_DATE(P_REFERENCE_DATE_FROM
                                            ,'YYYY/MM/DD HH24:MI:SS')
                                    ,'DD-MON-YY');
    P_REFERENCE_DATE_TO_1 := TO_CHAR(TO_DATE(P_REFERENCE_DATE_TO
                                          ,'YYYY/MM/DD HH24:MI:SS')
                                  ,'DD-MON-YY');
    CURRENCY_A2 := P_REFERENCE_CURRENCY;
    CURRENCY_B2 := P_COUNTER_CURRENCY;
    MATURING_FROM2 := P_REFERENCE_DATE_FROM_1;
    MATURING_TO2 := P_REFERENCE_DATE_TO_1;
    SHOW_DETAILS2 := P_SHOW_CONTRACTS;
    SELECT
      UPPER(MEANING)
    INTO
      DATE_BASE2
    FROM
      FND_LOOKUPS
    WHERE LOOKUP_CODE = P_DATE_TYPE;
    REPORT_SHORT_NAME := nvl(REPORT_SHORT_NAME,'AVG FX  RATES FOR DEALS');
    REPORT_SHORT_NAME := substr(REPORT_SHORT_NAME,1,instr(REPORT_SHORT_NAME,' (XML)'));
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION DATA_BASE_ON_MDFORMULA RETURN VARCHAR2 IS
  BEGIN
    IF NVL(DATE_BASE2
       ,'M') = 'M' THEN
      RETURN ('Maturity');
    ELSE
      RETURN ('Dealt');
    END IF;
    RETURN NULL;
  END DATA_BASE_ON_MDFORMULA;

  FUNCTION BASE_NET_AMT_P RETURN NUMBER IS
  BEGIN
    RETURN BASE_NET_AMT;
  END BASE_NET_AMT_P;

  FUNCTION CONTRA_NET_AMT_P RETURN NUMBER IS
  BEGIN
    RETURN CONTRA_NET_AMT;
  END CONTRA_NET_AMT_P;

  FUNCTION AVG_RATE3_P RETURN NUMBER IS
  BEGIN
    RETURN AVG_RATE3;
  END AVG_RATE3_P;

  FUNCTION CP_PARA_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARA;
  END CP_PARA_P;

END XTR_XTRFXAVG_XMLP_PKG;


/
