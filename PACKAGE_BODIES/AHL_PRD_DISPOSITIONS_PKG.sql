--------------------------------------------------------
--  DDL for Package Body AHL_PRD_DISPOSITIONS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AHL_PRD_DISPOSITIONS_PKG" as
/* $Header: AHLLDISB.pls 120.0 2005/05/26 02:10:58 appldev noship $ */
procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_DISPOSITION_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_WORKORDER_ID in NUMBER,
  X_PART_CHANGE_ID in NUMBER,
  X_PATH_POSITION_ID in NUMBER,
  X_INVENTORY_ITEM_ID in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_ITEM_GROUP_ID in NUMBER,
  X_CONDITION_ID in NUMBER,
  X_INSTANCE_ID in NUMBER,
  X_SERIAL_NUMBER in VARCHAR2,
  X_LOT_NUMBER in VARCHAR2,
  X_IMMEDIATE_DISPOSITION_CODE in VARCHAR2,
  X_SECONDARY_DISPOSITION_CODE in VARCHAR2,
  X_STATUS_CODE in VARCHAR2,
  X_QUANTITY in NUMBER,
  X_UOM in VARCHAR2,
  X_COLLECTION_ID in NUMBER,
  X_PRIMARY_SERVICE_REQUEST_ID in NUMBER,
  X_NON_ROUTINE_WORKORDER_ID in NUMBER,
  X_WO_OPERATION_ID in NUMBER,
  X_ITEM_REVISION in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_COMMENTS in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from AHL_PRD_DISPOSITIONS_B
    where DISPOSITION_ID = X_DISPOSITION_ID
    ;
begin
  insert into AHL_PRD_DISPOSITIONS_B (
    DISPOSITION_ID,
    OBJECT_VERSION_NUMBER,
    WORKORDER_ID,
    PART_CHANGE_ID,
    PATH_POSITION_ID,
    INVENTORY_ITEM_ID,
    ORGANIZATION_ID,
    ITEM_GROUP_ID,
    CONDITION_ID,
    INSTANCE_ID,
    SERIAL_NUMBER,
    LOT_NUMBER,
    IMMEDIATE_DISPOSITION_CODE,
    SECONDARY_DISPOSITION_CODE,
    STATUS_CODE,
    QUANTITY,
    UOM,
    COLLECTION_ID,
    PRIMARY_SERVICE_REQUEST_ID,
    NON_ROUTINE_WORKORDER_ID,
    WO_OPERATION_ID,
    ITEM_REVISION,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_DISPOSITION_ID,
    X_OBJECT_VERSION_NUMBER,
    X_WORKORDER_ID,
    X_PART_CHANGE_ID,
    X_PATH_POSITION_ID,
    X_INVENTORY_ITEM_ID,
    X_ORGANIZATION_ID,
    X_ITEM_GROUP_ID,
    X_CONDITION_ID,
    X_INSTANCE_ID,
    X_SERIAL_NUMBER,
    X_LOT_NUMBER,
    X_IMMEDIATE_DISPOSITION_CODE,
    X_SECONDARY_DISPOSITION_CODE,
    X_STATUS_CODE,
    X_QUANTITY,
    X_UOM,
    X_COLLECTION_ID,
    X_PRIMARY_SERVICE_REQUEST_ID,
    X_NON_ROUTINE_WORKORDER_ID,
    X_WO_OPERATION_ID,
    X_ITEM_REVISION,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  insert into AHL_PRD_DISPOSITIONS_TL (
    DISPOSITION_ID,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_LOGIN,
    COMMENTS,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_DISPOSITION_ID,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_COMMENTS,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from AHL_PRD_DISPOSITIONS_TL T
    where T.DISPOSITION_ID = X_DISPOSITION_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_DISPOSITION_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_WORKORDER_ID in NUMBER,
  X_PART_CHANGE_ID in NUMBER,
  X_PATH_POSITION_ID in NUMBER,
  X_INVENTORY_ITEM_ID in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_ITEM_GROUP_ID in NUMBER,
  X_CONDITION_ID in NUMBER,
  X_INSTANCE_ID in NUMBER,
  X_SERIAL_NUMBER in VARCHAR2,
  X_LOT_NUMBER in VARCHAR2,
  X_IMMEDIATE_DISPOSITION_CODE in VARCHAR2,
  X_SECONDARY_DISPOSITION_CODE in VARCHAR2,
  X_STATUS_CODE in VARCHAR2,
  X_QUANTITY in NUMBER,
  X_UOM in VARCHAR2,
  X_COLLECTION_ID in NUMBER,
  X_PRIMARY_SERVICE_REQUEST_ID in NUMBER,
  X_NON_ROUTINE_WORKORDER_ID in NUMBER,
  X_WO_OPERATION_ID in NUMBER,
  X_ITEM_REVISION in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_COMMENTS in VARCHAR2
) is
  cursor c is select
      OBJECT_VERSION_NUMBER,
      WORKORDER_ID,
      PART_CHANGE_ID,
      PATH_POSITION_ID,
      INVENTORY_ITEM_ID,
      ORGANIZATION_ID,
      ITEM_GROUP_ID,
      CONDITION_ID,
      INSTANCE_ID,
      SERIAL_NUMBER,
      LOT_NUMBER,
      IMMEDIATE_DISPOSITION_CODE,
      SECONDARY_DISPOSITION_CODE,
      STATUS_CODE,
      QUANTITY,
      UOM,
      COLLECTION_ID,
      PRIMARY_SERVICE_REQUEST_ID,
      NON_ROUTINE_WORKORDER_ID,
      WO_OPERATION_ID,
      ITEM_REVISION,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15
    from AHL_PRD_DISPOSITIONS_B
    where DISPOSITION_ID = X_DISPOSITION_ID
    for update of DISPOSITION_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      COMMENTS,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from AHL_PRD_DISPOSITIONS_TL
    where DISPOSITION_ID = X_DISPOSITION_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of DISPOSITION_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
      AND (recinfo.WORKORDER_ID = X_WORKORDER_ID)
      AND ((recinfo.PART_CHANGE_ID = X_PART_CHANGE_ID)
           OR ((recinfo.PART_CHANGE_ID is null) AND (X_PART_CHANGE_ID is null)))
      AND ((recinfo.PATH_POSITION_ID = X_PATH_POSITION_ID)
           OR ((recinfo.PATH_POSITION_ID is null) AND (X_PATH_POSITION_ID is null)))
      AND ((recinfo.INVENTORY_ITEM_ID = X_INVENTORY_ITEM_ID)
           OR ((recinfo.INVENTORY_ITEM_ID is null) AND (X_INVENTORY_ITEM_ID is null)))
      AND ((recinfo.ORGANIZATION_ID = X_ORGANIZATION_ID)
           OR ((recinfo.ORGANIZATION_ID is null) AND (X_ORGANIZATION_ID is null)))
      AND ((recinfo.ITEM_GROUP_ID = X_ITEM_GROUP_ID)
           OR ((recinfo.ITEM_GROUP_ID is null) AND (X_ITEM_GROUP_ID is null)))
      AND ((recinfo.CONDITION_ID = X_CONDITION_ID)
           OR ((recinfo.CONDITION_ID is null) AND (X_CONDITION_ID is null)))
      AND ((recinfo.INSTANCE_ID = X_INSTANCE_ID)
           OR ((recinfo.INSTANCE_ID is null) AND (X_INSTANCE_ID is null)))
      AND ((recinfo.SERIAL_NUMBER = X_SERIAL_NUMBER)
           OR ((recinfo.SERIAL_NUMBER is null) AND (X_SERIAL_NUMBER is null)))
      AND ((recinfo.LOT_NUMBER = X_LOT_NUMBER)
           OR ((recinfo.LOT_NUMBER is null) AND (X_LOT_NUMBER is null)))
      AND ((recinfo.IMMEDIATE_DISPOSITION_CODE = X_IMMEDIATE_DISPOSITION_CODE)
           OR ((recinfo.IMMEDIATE_DISPOSITION_CODE is null) AND (X_IMMEDIATE_DISPOSITION_CODE is null)))
      AND ((recinfo.SECONDARY_DISPOSITION_CODE = X_SECONDARY_DISPOSITION_CODE)
           OR ((recinfo.SECONDARY_DISPOSITION_CODE is null) AND (X_SECONDARY_DISPOSITION_CODE is null)))
      AND ((recinfo.STATUS_CODE = X_STATUS_CODE)
           OR ((recinfo.STATUS_CODE is null) AND (X_STATUS_CODE is null)))
      AND ((recinfo.QUANTITY = X_QUANTITY)
           OR ((recinfo.QUANTITY is null) AND (X_QUANTITY is null)))
      AND ((recinfo.UOM = X_UOM)
           OR ((recinfo.UOM is null) AND (X_UOM is null)))
      AND ((recinfo.COLLECTION_ID = X_COLLECTION_ID)
           OR ((recinfo.COLLECTION_ID is null) AND (X_COLLECTION_ID is null)))
      AND ((recinfo.PRIMARY_SERVICE_REQUEST_ID = X_PRIMARY_SERVICE_REQUEST_ID)
           OR ((recinfo.PRIMARY_SERVICE_REQUEST_ID is null) AND (X_PRIMARY_SERVICE_REQUEST_ID is null)))
      AND ((recinfo.NON_ROUTINE_WORKORDER_ID = X_NON_ROUTINE_WORKORDER_ID)
           OR ((recinfo.NON_ROUTINE_WORKORDER_ID is null) AND (X_NON_ROUTINE_WORKORDER_ID is null)))
      AND ((recinfo.WO_OPERATION_ID = X_WO_OPERATION_ID)
           OR ((recinfo.WO_OPERATION_ID is null) AND (X_WO_OPERATION_ID is null)))
      AND ((recinfo.ITEM_REVISION = X_ITEM_REVISION)
           OR ((recinfo.ITEM_REVISION is null) AND (X_ITEM_REVISION is null)))
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    ((tlinfo.COMMENTS = X_COMMENTS)
               OR ((tlinfo.COMMENTS is null) AND (X_COMMENTS is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_DISPOSITION_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_WORKORDER_ID in NUMBER,
  X_PART_CHANGE_ID in NUMBER,
  X_PATH_POSITION_ID in NUMBER,
  X_INVENTORY_ITEM_ID in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_ITEM_GROUP_ID in NUMBER,
  X_CONDITION_ID in NUMBER,
  X_INSTANCE_ID in NUMBER,
  X_SERIAL_NUMBER in VARCHAR2,
  X_LOT_NUMBER in VARCHAR2,
  X_IMMEDIATE_DISPOSITION_CODE in VARCHAR2,
  X_SECONDARY_DISPOSITION_CODE in VARCHAR2,
  X_STATUS_CODE in VARCHAR2,
  X_QUANTITY in NUMBER,
  X_UOM in VARCHAR2,
  X_COLLECTION_ID in NUMBER,
  X_PRIMARY_SERVICE_REQUEST_ID in NUMBER,
  X_NON_ROUTINE_WORKORDER_ID in NUMBER,
  X_WO_OPERATION_ID in NUMBER,
  X_ITEM_REVISION in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_COMMENTS in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update AHL_PRD_DISPOSITIONS_B set
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    WORKORDER_ID = X_WORKORDER_ID,
    PART_CHANGE_ID = X_PART_CHANGE_ID,
    PATH_POSITION_ID = X_PATH_POSITION_ID,
    INVENTORY_ITEM_ID = X_INVENTORY_ITEM_ID,
    ORGANIZATION_ID = X_ORGANIZATION_ID,
    ITEM_GROUP_ID = X_ITEM_GROUP_ID,
    CONDITION_ID = X_CONDITION_ID,
    INSTANCE_ID = X_INSTANCE_ID,
    SERIAL_NUMBER = X_SERIAL_NUMBER,
    LOT_NUMBER = X_LOT_NUMBER,
    IMMEDIATE_DISPOSITION_CODE = X_IMMEDIATE_DISPOSITION_CODE,
    SECONDARY_DISPOSITION_CODE = X_SECONDARY_DISPOSITION_CODE,
    STATUS_CODE = X_STATUS_CODE,
    QUANTITY = X_QUANTITY,
    UOM = X_UOM,
    COLLECTION_ID = X_COLLECTION_ID,
    PRIMARY_SERVICE_REQUEST_ID = X_PRIMARY_SERVICE_REQUEST_ID,
    NON_ROUTINE_WORKORDER_ID = X_NON_ROUTINE_WORKORDER_ID,
    WO_OPERATION_ID = X_WO_OPERATION_ID,
    ITEM_REVISION = X_ITEM_REVISION,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where DISPOSITION_ID = X_DISPOSITION_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update AHL_PRD_DISPOSITIONS_TL set
    COMMENTS = X_COMMENTS,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where DISPOSITION_ID = X_DISPOSITION_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_DISPOSITION_ID in NUMBER
) is
begin
  delete from AHL_PRD_DISPOSITIONS_TL
  where DISPOSITION_ID = X_DISPOSITION_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from AHL_PRD_DISPOSITIONS_B
  where DISPOSITION_ID = X_DISPOSITION_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from AHL_PRD_DISPOSITIONS_TL T
  where not exists
    (select NULL
    from AHL_PRD_DISPOSITIONS_B B
    where B.DISPOSITION_ID = T.DISPOSITION_ID
    );

  update AHL_PRD_DISPOSITIONS_TL T set (
      COMMENTS
    ) = (select
      B.COMMENTS
    from AHL_PRD_DISPOSITIONS_TL B
    where B.DISPOSITION_ID = T.DISPOSITION_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.DISPOSITION_ID,
      T.LANGUAGE
  ) in (select
      SUBT.DISPOSITION_ID,
      SUBT.LANGUAGE
    from AHL_PRD_DISPOSITIONS_TL SUBB, AHL_PRD_DISPOSITIONS_TL SUBT
    where SUBB.DISPOSITION_ID = SUBT.DISPOSITION_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.COMMENTS <> SUBT.COMMENTS
      or (SUBB.COMMENTS is null and SUBT.COMMENTS is not null)
      or (SUBB.COMMENTS is not null and SUBT.COMMENTS is null)
  ));

  insert into AHL_PRD_DISPOSITIONS_TL (
    DISPOSITION_ID,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_LOGIN,
    COMMENTS,
    LANGUAGE,
    SOURCE_LANG
  ) select /*+ ORDERED */
    B.DISPOSITION_ID,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATED_BY,
    B.CREATION_DATE,
    B.CREATED_BY,
    B.LAST_UPDATE_LOGIN,
    B.COMMENTS,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from AHL_PRD_DISPOSITIONS_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from AHL_PRD_DISPOSITIONS_TL T
    where T.DISPOSITION_ID = B.DISPOSITION_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end AHL_PRD_DISPOSITIONS_PKG;

/
