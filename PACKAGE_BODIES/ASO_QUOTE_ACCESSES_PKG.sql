--------------------------------------------------------
--  DDL for Package Body ASO_QUOTE_ACCESSES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."ASO_QUOTE_ACCESSES_PKG" AS
/* $Header: asotqacb.pls 120.1 2005/06/29 12:40:16 appldev ship $ */

G_PKG_NAME  CONSTANT VARCHAR2(30) := 'ASO_QUOTE_ACCESSES_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'asotqacb.pls';

procedure INSERT_ROW (
  PX_ACCESS_ID IN OUT NOCOPY /* file.sql.39 change */  NUMBER,
  P_QUOTE_NUMBER in NUMBER,
  P_RESOURCE_ID in NUMBER,
  P_RESOURCE_GRP_ID in NUMBER,
  P_CREATED_BY in NUMBER,
  P_CREATION_DATE in DATE,
  P_LAST_UPDATED_BY in NUMBER,
  P_LAST_UPDATE_LOGIN in NUMBER,
  P_LAST_UPDATE_DATE in DATE,
  P_REQUEST_ID in NUMBER,
  P_PROGRAM_APPLICATION_ID NUMBER,
  P_PROGRAM_ID NUMBER,
  P_PROGRAM_UPDATE_DATE DATE,
  P_KEEP_FLAG in VARCHAR2,
  P_UPDATE_ACCESS_FLAG in VARCHAR2,
  P_CREATED_BY_TAP_FLAG in VARCHAR2,
  P_TERRITORY_ID in NUMBER,
  P_TERRITORY_SOURCE_FLAG in VARCHAR2,
  P_ROLE_ID in NUMBER,
  P_ATTRIBUTE_CATEGORY in VARCHAR2,
  P_ATTRIBUTE1 in VARCHAR2,
  P_ATTRIBUTE2 in VARCHAR2,
  P_ATTRIBUTE3 in VARCHAR2,
  P_ATTRIBUTE4 in VARCHAR2,
  P_ATTRIBUTE5 in VARCHAR2,
  P_ATTRIBUTE6 in VARCHAR2,
  P_ATTRIBUTE7 in VARCHAR2,
  P_ATTRIBUTE8 in VARCHAR2,
  P_ATTRIBUTE9 in VARCHAR2,
  P_ATTRIBUTE10 in VARCHAR2,
  P_ATTRIBUTE11 in VARCHAR2,
  P_ATTRIBUTE12 in VARCHAR2,
  P_ATTRIBUTE13 in VARCHAR2,
  P_ATTRIBUTE14 in VARCHAR2,
  P_ATTRIBUTE15 in VARCHAR2,
  p_ATTRIBUTE16    VARCHAR2,
  p_ATTRIBUTE17    VARCHAR2,
  p_ATTRIBUTE18    VARCHAR2,
  p_ATTRIBUTE19    VARCHAR2,
  p_ATTRIBUTE20    VARCHAR2,
  p_OBJECT_VERSION_NUMBER NUMBER
)
IS

CURSOR C2 IS SELECT ASO_QUOTE_ACCESSES_S.nextval FROM sys.dual;

begin
  If (PX_ACCESS_ID IS NULL) OR (PX_ACCESS_ID = FND_API.G_MISS_NUM) then
       OPEN C2;
       FETCH C2 INTO PX_ACCESS_ID;
       CLOSE C2;
   End If;

  insert into ASO_QUOTE_ACCESSES (
    ACCESS_ID,
    QUOTE_NUMBER,
    RESOURCE_ID,
    RESOURCE_GRP_ID,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    LAST_UPDATE_DATE,
    REQUEST_ID,
    PROGRAM_APPLICATION_ID,
    PROGRAM_ID,
    PROGRAM_UPDATE_DATE,
    KEEP_FLAG,
    UPDATE_ACCESS_FLAG,
    CREATED_BY_TAP_FLAG,
    TERRITORY_ID,
    TERRITORY_SOURCE_FLAG,
    ROLE_ID,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    ATTRIBUTE16,
   ATTRIBUTE17,
   ATTRIBUTE18,
   ATTRIBUTE19,
   ATTRIBUTE20,
    OBJECT_VERSION_NUMBER

  ) VALUES
  (
    PX_ACCESS_ID,
    decode( P_QUOTE_NUMBER, FND_API.G_MISS_NUM, NULL, P_QUOTE_NUMBER),
    decode( p_RESOURCE_ID, FND_API.G_MISS_NUM, NULL, p_RESOURCE_ID),
    decode( P_RESOURCE_GRP_ID, FND_API.G_MISS_NUM, NULL, P_RESOURCE_GRP_ID),
    decode( p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY),
    ASO_UTILITY_PVT.decode( P_CREATION_DATE, FND_API.G_MISS_DATE, NULL, p_CREATION_DATE),
    decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY),
    decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN),
    ASO_UTILITY_PVT.decode( P_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, NULL, p_LAST_UPDATE_DATE),
    decode( P_REQUEST_ID, FND_API.G_MISS_NUM, NULL, P_REQUEST_ID),
    decode( P_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM, NULL, P_PROGRAM_APPLICATION_ID),
    decode( P_PROGRAM_ID, FND_API.G_MISS_NUM, NULL, P_PROGRAM_ID),
    ASO_UTILITY_PVT.decode( P_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, NULL, P_PROGRAM_UPDATE_DATE),
    decode( P_KEEP_FLAG, FND_API.G_MISS_CHAR, NULL, P_KEEP_FLAG),
    decode( P_UPDATE_ACCESS_FLAG, FND_API.G_MISS_CHAR, NULL, P_UPDATE_ACCESS_FLAG),
    decode( P_CREATED_BY_TAP_FLAG, FND_API.G_MISS_CHAR, NULL, P_CREATED_BY_TAP_FLAG),
    decode( P_TERRITORY_ID, FND_API.G_MISS_NUM, NULL, P_TERRITORY_ID),
    decode( P_TERRITORY_SOURCE_FLAG, FND_API.G_MISS_CHAR, NULL, P_TERRITORY_SOURCE_FLAG),
    decode( P_ROLE_ID, FND_API.G_MISS_NUM, NULL, P_ROLE_ID),
    decode( P_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, P_ATTRIBUTE_CATEGORY),
    decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1),
    decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2),
    decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3),
    decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4),
    decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5),
    decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6),
    decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7),
    decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8),
    decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9),
    decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10),
    decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11),
    decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12),
    decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13),
    decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14),
    decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15),
    decode( p_ATTRIBUTE16, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE16),
    decode( p_ATTRIBUTE17, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE17),
    decode( p_ATTRIBUTE18, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE18),
    decode( p_ATTRIBUTE19, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE19),
    decode( p_ATTRIBUTE20, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE20),
    decode ( p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM,1,NULL,1, p_OBJECT_VERSION_NUMBER)
   );

end INSERT_ROW;

procedure UPDATE_ROW (
  P_ACCESS_ID in NUMBER,
  P_QUOTE_NUMBER in NUMBER,
  P_RESOURCE_ID in NUMBER,
  P_RESOURCE_GRP_ID in NUMBER,
  P_CREATED_BY in NUMBER,
  P_CREATION_DATE in DATE,
  P_LAST_UPDATED_BY in NUMBER,
  P_LAST_UPDATE_LOGIN in NUMBER,
  P_LAST_UPDATE_DATE in DATE,
  P_REQUEST_ID in NUMBER,
  P_PROGRAM_APPLICATION_ID NUMBER,
  P_PROGRAM_ID NUMBER,
  P_PROGRAM_UPDATE_DATE DATE,
  P_KEEP_FLAG in VARCHAR2,
  P_UPDATE_ACCESS_FLAG in VARCHAR2,
  P_CREATED_BY_TAP_FLAG in VARCHAR2,
  P_TERRITORY_ID in NUMBER,
  P_TERRITORY_SOURCE_FLAG in VARCHAR2,
  P_ROLE_ID in NUMBER,
  P_ATTRIBUTE_CATEGORY in VARCHAR2,
  P_ATTRIBUTE1 in VARCHAR2,
  P_ATTRIBUTE2 in VARCHAR2,
  P_ATTRIBUTE3 in VARCHAR2,
  P_ATTRIBUTE4 in VARCHAR2,
  P_ATTRIBUTE5 in VARCHAR2,
  P_ATTRIBUTE6 in VARCHAR2,
  P_ATTRIBUTE7 in VARCHAR2,
  P_ATTRIBUTE8 in VARCHAR2,
  P_ATTRIBUTE9 in VARCHAR2,
  P_ATTRIBUTE10 in VARCHAR2,
  P_ATTRIBUTE11 in VARCHAR2,
  P_ATTRIBUTE12 in VARCHAR2,
  P_ATTRIBUTE13 in VARCHAR2,
  P_ATTRIBUTE14 in VARCHAR2,
  P_ATTRIBUTE15 in VARCHAR2,
  p_ATTRIBUTE16    VARCHAR2,
  p_ATTRIBUTE17    VARCHAR2,
  p_ATTRIBUTE18    VARCHAR2,
  p_ATTRIBUTE19    VARCHAR2,
  p_ATTRIBUTE20    VARCHAR2,
  p_OBJECT_VERSION_NUMBER NUMBER
)
IS
BEGIN
  update ASO_QUOTE_ACCESSES
  set
  QUOTE_NUMBER = decode( P_QUOTE_NUMBER, FND_API.G_MISS_NUM, QUOTE_NUMBER, P_QUOTE_NUMBER),
  RESOURCE_ID = decode( p_RESOURCE_ID, FND_API.G_MISS_NUM, RESOURCE_ID, p_RESOURCE_ID),
  RESOURCE_GRP_ID = decode( P_RESOURCE_GRP_ID, FND_API.G_MISS_NUM, RESOURCE_GRP_ID, P_RESOURCE_GRP_ID),
  LAST_UPDATED_BY = decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, LAST_UPDATED_BY, p_LAST_UPDATED_BY),
  LAST_UPDATE_LOGIN = decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, LAST_UPDATE_LOGIN, p_LAST_UPDATE_LOGIN),
  LAST_UPDATE_DATE = ASO_UTILITY_PVT.decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, LAST_UPDATE_DATE, p_LAST_UPDATE_DATE),
  REQUEST_ID = decode( p_REQUEST_ID, FND_API.G_MISS_NUM, REQUEST_ID, p_REQUEST_ID),
  PROGRAM_APPLICATION_ID = decode( p_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM,PROGRAM_APPLICATION_ID, p_PROGRAM_APPLICATION_ID),
  PROGRAM_ID = decode( p_PROGRAM_ID, FND_API.G_MISS_NUM, PROGRAM_ID, p_PROGRAM_ID),
  PROGRAM_UPDATE_DATE = ASO_UTILITY_PVT.decode( p_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, PROGRAM_UPDATE_DATE, p_PROGRAM_UPDATE_DATE),
  KEEP_FLAG = decode( P_KEEP_FLAG, FND_API.G_MISS_CHAR, KEEP_FLAG, P_KEEP_FLAG),
  UPDATE_ACCESS_FLAG = decode( P_UPDATE_ACCESS_FLAG, FND_API.G_MISS_CHAR, UPDATE_ACCESS_FLAG, P_UPDATE_ACCESS_FLAG),
  CREATED_BY_TAP_FLAG = decode( P_CREATED_BY_TAP_FLAG, FND_API.G_MISS_CHAR, CREATED_BY_TAP_FLAG, P_CREATED_BY_TAP_FLAG),
  TERRITORY_ID = decode( P_TERRITORY_ID, FND_API.G_MISS_NUM, TERRITORY_ID, P_TERRITORY_ID),
  TERRITORY_SOURCE_FLAG = decode( p_TERRITORY_SOURCE_FLAG, FND_API.G_MISS_CHAR, TERRITORY_SOURCE_FLAG, p_TERRITORY_SOURCE_FLAG),
  ROLE_ID = decode( P_ROLE_ID, FND_API.G_MISS_NUM, ROLE_ID, P_ROLE_ID),
  ATTRIBUTE_CATEGORY = decode( p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, ATTRIBUTE_CATEGORY, p_ATTRIBUTE_CATEGORY),
  ATTRIBUTE1 = decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, ATTRIBUTE1, p_ATTRIBUTE1),
  ATTRIBUTE2 = decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, ATTRIBUTE2, p_ATTRIBUTE2),
  ATTRIBUTE3 = decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, ATTRIBUTE3, p_ATTRIBUTE3),
  ATTRIBUTE4 = decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, ATTRIBUTE4, p_ATTRIBUTE4),
  ATTRIBUTE5 = decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, ATTRIBUTE5, p_ATTRIBUTE5),
  ATTRIBUTE6 = decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, ATTRIBUTE6, p_ATTRIBUTE6),
  ATTRIBUTE7 = decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, ATTRIBUTE7, p_ATTRIBUTE7),
  ATTRIBUTE8 = decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, ATTRIBUTE8, p_ATTRIBUTE8),
  ATTRIBUTE9 = decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, ATTRIBUTE9, p_ATTRIBUTE9),
  ATTRIBUTE10 = decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, ATTRIBUTE10, p_ATTRIBUTE10),
  ATTRIBUTE11 = decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, ATTRIBUTE11, p_ATTRIBUTE11),
  ATTRIBUTE12 = decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, ATTRIBUTE12, p_ATTRIBUTE12),
  ATTRIBUTE13 = decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, ATTRIBUTE13, p_ATTRIBUTE13),
  ATTRIBUTE14 = decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, ATTRIBUTE14, p_ATTRIBUTE14),
  ATTRIBUTE15 = decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, ATTRIBUTE15, p_ATTRIBUTE15),
  ATTRIBUTE16 = decode( p_ATTRIBUTE16, FND_API.G_MISS_CHAR, ATTRIBUTE16, p_ATTRIBUTE16),
  ATTRIBUTE17 = decode( p_ATTRIBUTE17, FND_API.G_MISS_CHAR, ATTRIBUTE17, p_ATTRIBUTE17),
  ATTRIBUTE18 = decode( p_ATTRIBUTE18, FND_API.G_MISS_CHAR, ATTRIBUTE18, p_ATTRIBUTE18),
  ATTRIBUTE19 = decode( p_ATTRIBUTE19, FND_API.G_MISS_CHAR, ATTRIBUTE19, p_ATTRIBUTE19),
  ATTRIBUTE20 = decode( p_ATTRIBUTE20, FND_API.G_MISS_CHAR, ATTRIBUTE20, p_ATTRIBUTE20),
  OBJECT_VERSION_NUMBER = decode( p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, nvl(OBJECT_VERSION_NUMBER,0)+1, nvl(p_OBJECT_VERSION_NUMBER, nvl(OBJECT_VERSION_NUMBER,0))+1)
  WHERE ACCESS_ID = P_ACCESS_ID;

  If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
  End If;

end UPDATE_ROW;

procedure DELETE_ROW (
  P_ACCESS_ID in NUMBER
) is
begin
  delete from ASO_QUOTE_ACCESSES
  where ACCESS_ID = P_ACCESS_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

end DELETE_ROW;

procedure LOCK_ROW (
  P_ACCESS_ID in NUMBER,
  P_QUOTE_NUMBER in NUMBER,
  P_RESOURCE_ID in NUMBER,
  P_RESOURCE_GRP_ID in NUMBER,
  P_CREATED_BY in NUMBER,
  P_CREATION_DATE in DATE,
  P_LAST_UPDATED_BY in NUMBER,
  P_LAST_UPDATE_LOGIN in NUMBER,
  P_LAST_UPDATE_DATE in DATE,
  P_REQUEST_ID in NUMBER,
  P_PROGRAM_APPLICATION_ID NUMBER,
  P_PROGRAM_ID NUMBER,
  P_PROGRAM_UPDATE_DATE DATE,
  P_KEEP_FLAG in VARCHAR2,
  P_UPDATE_ACCESS_FLAG in VARCHAR2,
  P_CREATED_BY_TAP_FLAG in VARCHAR2,
  P_TERRITORY_ID in NUMBER,
  P_TERRITORY_SOURCE_FLAG in VARCHAR2,
  P_ROLE_ID in NUMBER,
  P_ATTRIBUTE_CATEGORY in VARCHAR2,
  P_ATTRIBUTE1 in VARCHAR2,
  P_ATTRIBUTE2 in VARCHAR2,
  P_ATTRIBUTE3 in VARCHAR2,
  P_ATTRIBUTE4 in VARCHAR2,
  P_ATTRIBUTE5 in VARCHAR2,
  P_ATTRIBUTE6 in VARCHAR2,
  P_ATTRIBUTE7 in VARCHAR2,
  P_ATTRIBUTE8 in VARCHAR2,
  P_ATTRIBUTE9 in VARCHAR2,
  P_ATTRIBUTE10 in VARCHAR2,
  P_ATTRIBUTE11 in VARCHAR2,
  P_ATTRIBUTE12 in VARCHAR2,
  P_ATTRIBUTE13 in VARCHAR2,
  P_ATTRIBUTE14 in VARCHAR2,
  P_ATTRIBUTE15 in VARCHAR2
)
IS
  cursor c1 is select
  ACCESS_ID,
  QUOTE_NUMBER,
  RESOURCE_ID,
  RESOURCE_GRP_ID,
  CREATED_BY,
  CREATION_DATE,
  LAST_UPDATED_BY,
  LAST_UPDATE_LOGIN,
  LAST_UPDATE_DATE,
  REQUEST_ID,
  PROGRAM_APPLICATION_ID,
  PROGRAM_ID,
  PROGRAM_UPDATE_DATE,
  KEEP_FLAG,
  UPDATE_ACCESS_FLAG,
  CREATED_BY_TAP_FLAG,
  TERRITORY_ID,
  TERRITORY_SOURCE_FLAG,
  ROLE_ID,
  ATTRIBUTE_CATEGORY,
  ATTRIBUTE1 ,
  ATTRIBUTE2 ,
  ATTRIBUTE3 ,
  ATTRIBUTE4 ,
  ATTRIBUTE5 ,
  ATTRIBUTE6 ,
  ATTRIBUTE7 ,
  ATTRIBUTE8 ,
  ATTRIBUTE9 ,
  ATTRIBUTE10 ,
  ATTRIBUTE11 ,
  ATTRIBUTE12 ,
  ATTRIBUTE13 ,
  ATTRIBUTE14 ,
  ATTRIBUTE15

  from ASO_QUOTE_ACCESSES
    where ACCESS_ID = P_ACCESS_ID
    for update of ACCESS_ID nowait;

   recinfo C1%ROWTYPE;
begin
   OPEN C1;
   FETCH C1 INTO recinfo;
   IF (C1%NOTFOUND) THEN
      CLOSE C1;
      FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
      APP_EXCEPTION.RAISE_EXCEPTION;
   End If;
   CLOSE C1;


   if  (    ( Recinfo.LAST_UPDATE_DATE = p_LAST_UPDATE_DATE)
            OR (    ( Recinfo.LAST_UPDATE_DATE IS NULL )
                AND (  p_LAST_UPDATE_DATE IS NULL ))) then
       return;
   else
       fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
       app_exception.raise_exception;
   end if;
end LOCK_ROW;

end ASO_QUOTE_ACCESSES_PKG;

/
