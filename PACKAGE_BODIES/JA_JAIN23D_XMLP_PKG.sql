--------------------------------------------------------
--  DDL for Package Body JA_JAIN23D_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JA_JAIN23D_XMLP_PKG" AS
/* $Header: JAIN23DB.pls 120.1 2007/12/25 16:07:34 dwkrishn noship $ */
  FUNCTION CF_COL9FORMULA(REGISTER_ID IN NUMBER
                         ,TRANSACTION_TYPE IN VARCHAR2
                         ,COL3 IN VARCHAR2
                         ,QUERY IN VARCHAR2) RETURN VARCHAR2 IS
    CURSOR C_CUST_ADDRESS(P_CUSTOMER_ID IN NUMBER,P_ADDRESS_ID IN NUMBER) IS
      SELECT
        SUBSTR(E.PARTY_NAME || ' ' || G.ADDRESS1 || ' ' || G.ADDRESS2 || ' ' || G.ADDRESS3 || ' ' || G.ADDRESS4 || ' ' || G.CITY || ' ' || G.PROVINCE || ' ' || G.COUNTRY || ' ' || F.EXCISE_DUTY_RANGE || ' '
	|| F.EXCISE_DUTY_DIVISION || ' ' || F.EXCISE_DUTY_COMM
              ,1
              ,255)
      FROM
        HZ_PARTIES E,
        HZ_CUST_ACCOUNTS HZCA,
        JAI_CMN_CUS_ADDRESSES F,
        HZ_LOCATIONS G,
        HZ_PARTY_SITES HZPS,
        HZ_CUST_ACCT_SITES_ALL HZCAS,
        HZ_CUST_SITE_USES_ALL H
      WHERE E.PARTY_ID = HZCA.PARTY_ID
        AND HZCA.CUST_ACCOUNT_ID = F.CUSTOMER_ID
        AND F.ADDRESS_ID = H.CUST_ACCT_SITE_ID
        AND G.LOCATION_ID = HZPS.LOCATION_ID
        AND HZPS.PARTY_SITE_ID = HZCAS.PARTY_SITE_ID
        AND HZCAS.CUST_ACCT_SITE_ID = H.CUST_ACCT_SITE_ID
        AND F.CUSTOMER_ID = P_CUSTOMER_ID
        AND H.CUST_ACCT_SITE_ID = P_ADDRESS_ID;
    CURSOR C_CUSTOMER_NAME(P_CUSTOMER_ID IN NUMBER) IS
      SELECT
        PARTY_NAME CUSTOMER_NAME
      FROM
        HZ_PARTIES HZP,
        HZ_CUST_ACCOUNTS HZCA
      WHERE HZP.PARTY_ID = HZCA.PARTY_ID
        AND HZCA.CUST_ACCOUNT_ID = P_CUSTOMER_ID;
    CURSOR C_VEND_ADDRESS(P_VENDOR_ID IN NUMBER,P_VENDOR_SITE_ID IN NUMBER) IS
      SELECT
        SUBSTR(B.VENDOR_NAME || ' ' || C.ADDRESS_LINE1 || ' ' || ADDRESS_LINE2 || ' ' || ADDRESS_LINE3 || ' ' || D.EXCISE_DUTY_RANGE || ' ' || D.EXCISE_DUTY_DIVISION || ' ' || D.EXCISE_DUTY_COMM
              ,1
              ,255)
      FROM
        JAI_CMN_RG_23D_TRXS A,
        PO_VENDORS B,
        PO_VENDOR_SITES_ALL C,
        JAI_CMN_VENDOR_SITES D
      WHERE A.VENDOR_ID = B.VENDOR_ID
        AND A.VENDOR_ID = C.VENDOR_ID
        AND A.VENDOR_SITE_ID = C.VENDOR_SITE_ID
        AND A.VENDOR_ID = D.VENDOR_ID
        AND A.VENDOR_SITE_ID = D.VENDOR_SITE_ID
        AND C.VENDOR_SITE_ID = D.VENDOR_SITE_ID
        AND A.VENDOR_ID = P_VENDOR_ID
        AND A.VENDOR_SITE_ID = P_VENDOR_SITE_ID;
    CURSOR C_ORG_ADDRESS(P_CUSTOMER_ID IN NUMBER,P_SHIP_TO_SITE_ID IN NUMBER) IS
      SELECT
        SUBSTR(A.NAME || ' ' || ((SUBSTR(ADDRESS_LINE_1
                     ,1
                     ,30)) || (SUBSTR(ADDRESS_LINE_2
                     ,1
                     ,20)) || (SUBSTR(ADDRESS_LINE_3
                     ,1
                     ,10)))
              ,1
              ,255)
      FROM
        HR_ALL_ORGANIZATION_UNITS A,
        HR_LOCATIONS B
      WHERE A.ORGANIZATION_ID = B.INVENTORY_ORGANIZATION_ID
        AND A.ORGANIZATION_ID = ABS(P_CUSTOMER_ID)
        AND B.LOCATION_ID = ABS(P_SHIP_TO_SITE_ID);
    CURSOR C_RCV_DTLS(P_REGISTER_ID IN NUMBER) IS
      SELECT
        RCV.SHIPMENT_LINE_ID,
        RCV.CUSTOMER_ID,
        RCV.CUSTOMER_SITE_ID
      FROM
        RCV_TRANSACTIONS RCV,
        JAI_CMN_RG_23D_TRXS D
      WHERE RCV.TRANSACTION_ID = D.RECEIPT_REF
        AND D.REGISTER_ID = P_REGISTER_ID;
    CURSOR C_DELIVER_DTLS(P_SHIPMENT_LINE_ID IN NUMBER,CP_TRANSACTION_TYPE IN RCV_TRANSACTIONS.TRANSACTION_TYPE%TYPE) IS
      SELECT
        CUSTOMER_ID,
        CUSTOMER_SITE_ID
      FROM
        RCV_TRANSACTIONS
      WHERE SHIPMENT_LINE_ID = P_SHIPMENT_LINE_ID
        AND TRANSACTION_TYPE = CP_TRANSACTION_TYPE;
    CURSOR C_RMA_CUST_ADDRESS(P_CUSTOMER_ID IN NUMBER,P_CUSTOMER_SITE_ID IN NUMBER) IS
      SELECT
        SUBSTR(E.PARTY_NAME || ' ' || G.ADDRESS1 || ' ' || G.ADDRESS2 || ' ' || G.ADDRESS3 || ' ' || G.ADDRESS4 || ' ' || G.CITY || ' ' || G.PROVINCE || ' ' || G.COUNTRY || ' ' || F.EXCISE_DUTY_RANGE || ' ' ||
	F.EXCISE_DUTY_DIVISION || ' ' || F.EXCISE_DUTY_COMM
              ,1
              ,255)
      FROM
        HZ_PARTIES E,
        HZ_CUST_ACCOUNTS HZCA,
        JAI_CMN_CUS_ADDRESSES F,
        HZ_LOCATIONS G,
        HZ_PARTY_SITES HZPS,
        HZ_CUST_ACCT_SITES_ALL HZCAS,
        HZ_CUST_SITE_USES_ALL H
      WHERE HZCA.CUST_ACCOUNT_ID = P_CUSTOMER_ID
        AND E.PARTY_ID = HZCA.PARTY_ID
        AND H.SITE_USE_ID = P_CUSTOMER_SITE_ID
        AND F.CUSTOMER_ID = HZCA.CUST_ACCOUNT_ID
        AND F.ADDRESS_ID = H.CUST_ACCT_SITE_ID
        AND HZCAS.CUST_ACCT_SITE_ID = H.CUST_ACCT_SITE_ID
        AND HZPS.PARTY_SITE_ID = HZCAS.PARTY_SITE_ID
        AND G.LOCATION_ID = HZPS.LOCATION_ID;
    CURSOR C_CUST_VEND_IDS(P_REGISTER_ID IN NUMBER) IS
      SELECT
        NVL(CUSTOMER_ID
           ,0),
        NVL(SHIP_TO_SITE_ID
           ,0),
        NVL(VENDOR_ID
           ,0),
        NVL(VENDOR_SITE_ID
           ,0)
      FROM
        JAI_CMN_RG_23D_TRXS
      WHERE REGISTER_ID = P_REGISTER_ID;
    V_SHIPMENT_LINE_ID NUMBER;
    V_CUST_ID NUMBER;
    V_CUST_SITE_ID NUMBER;
    V_CUSTOMER_ID NUMBER;
    V_ADDRESS_ID NUMBER;
    V_VENDOR_ID NUMBER;
    V_VENDOR_SITE_ID NUMBER;
    V_ADDRESS VARCHAR2(255);
  BEGIN
    OPEN C_CUST_VEND_IDS(REGISTER_ID);
    FETCH C_CUST_VEND_IDS
     INTO V_CUSTOMER_ID,V_ADDRESS_ID,V_VENDOR_ID,V_VENDOR_SITE_ID;
    CLOSE C_CUST_VEND_IDS;
    IF TRANSACTION_TYPE in ('I','MI','MRTV','RTV') THEN
      IF (V_CUSTOMER_ID < 0) THEN
        OPEN C_ORG_ADDRESS(V_CUSTOMER_ID,V_ADDRESS_ID);
        FETCH C_ORG_ADDRESS
         INTO V_ADDRESS;
        CLOSE C_ORG_ADDRESS;
        RETURN (V_ADDRESS);
      END IF;
      IF TRANSACTION_TYPE in ('MRTV','RTV') THEN
        OPEN C_VEND_ADDRESS(V_VENDOR_ID,V_VENDOR_SITE_ID);
        FETCH C_VEND_ADDRESS
         INTO V_ADDRESS;
        CLOSE C_VEND_ADDRESS;
        RETURN (V_ADDRESS);
      ELSIF (TRANSACTION_TYPE in ('I','MI') AND COL3 IS NULL) THEN
        /*SRW.MESSAGE(1271
                   ,'cust_id->' || V_CUSTOMER_ID || ', addr_id->' || V_ADDRESS_ID)*/NULL;
        IF V_CUSTOMER_ID > 0 AND V_ADDRESS_ID > 0 THEN
          OPEN C_CUST_ADDRESS(V_CUSTOMER_ID,V_ADDRESS_ID);
          FETCH C_CUST_ADDRESS
           INTO V_ADDRESS;
          CLOSE C_CUST_ADDRESS;
        ELSIF V_CUSTOMER_ID > 0 THEN
          OPEN C_CUSTOMER_NAME(V_CUSTOMER_ID);
          FETCH C_CUSTOMER_NAME
           INTO V_ADDRESS;
          CLOSE C_CUSTOMER_NAME;
        ELSE
          V_ADDRESS := '';
        END IF;
        RETURN (V_ADDRESS);
      ELSE
        RETURN (COL3);
      END IF;
    ELSIF QUERY = '4' AND TRANSACTION_TYPE = 'R' THEN
      OPEN C_RCV_DTLS(REGISTER_ID);
      FETCH C_RCV_DTLS
       INTO V_SHIPMENT_LINE_ID,V_CUST_ID,V_CUST_SITE_ID;
      CLOSE C_RCV_DTLS;
      IF V_CUST_SITE_ID IS NULL THEN
        V_CUST_ID := NULL;
        OPEN C_DELIVER_DTLS(V_SHIPMENT_LINE_ID,'DELIVER');
        FETCH C_DELIVER_DTLS
         INTO V_CUST_ID,V_CUST_SITE_ID;
        CLOSE C_DELIVER_DTLS;
      END IF;
      OPEN C_RMA_CUST_ADDRESS(V_CUST_ID,V_CUST_SITE_ID);
      FETCH C_RMA_CUST_ADDRESS
       INTO V_ADDRESS;
      CLOSE C_RMA_CUST_ADDRESS;
      RETURN (V_ADDRESS);
    ELSE
      RETURN (NULL);
    END IF;
    RETURN NULL;
  END CF_COL9FORMULA;

  FUNCTION CF_COL10FORMULA(REGISTER_ID IN NUMBER
                          ,TRANSACTION_TYPE IN VARCHAR2
                          ,COL3 IN VARCHAR2) RETURN VARCHAR2 IS
    CURSOR C_CUST_ADDRESS(P_CUSTOMER_ID IN NUMBER,P_ADDRESS_ID IN NUMBER) IS
      SELECT
        SUBSTR(E.PARTY_NAME || ' ' || G.ADDRESS1 || ' ' || G.ADDRESS2 || ' ' || G.ADDRESS3 || ' ' || G.ADDRESS4 || ' ' || G.CITY || ' ' || G.PROVINCE || ' ' || G.COUNTRY || ' ' || F.EXCISE_DUTY_RANGE || ' ' ||
	F.EXCISE_DUTY_DIVISION || ' ' || F.EXCISE_DUTY_COMM
              ,1
              ,255)
      FROM
        HZ_PARTIES E,
        HZ_CUST_ACCOUNTS HZCA,
        JAI_CMN_CUS_ADDRESSES F,
        HZ_LOCATIONS G,
        HZ_PARTY_SITES HZPS,
        HZ_CUST_ACCT_SITES_ALL HZCAS,
        HZ_CUST_SITE_USES_ALL H
      WHERE E.PARTY_ID = HZCA.PARTY_ID
        AND HZCA.CUST_ACCOUNT_ID = F.CUSTOMER_ID
        AND F.ADDRESS_ID = HZCAS.CUST_ACCT_SITE_ID
        AND G.LOCATION_ID = HZPS.PARTY_SITE_ID
        AND HZPS.PARTY_SITE_ID = HZCAS.PARTY_SITE_ID
        AND HZCAS.CUST_ACCT_SITE_ID = H.CUST_ACCT_SITE_ID
        AND F.CUSTOMER_ID = P_CUSTOMER_ID
        AND H.CUST_ACCT_SITE_ID = P_ADDRESS_ID;
    CURSOR C_VEND_ADDRESS(P_VENDOR_ID IN NUMBER,P_VENDOR_SITE_ID IN NUMBER) IS
      SELECT
        SUBSTR(B.VENDOR_NAME || ' ' || C.ADDRESS_LINE1 || ' ' || ADDRESS_LINE2 || ' ' || ADDRESS_LINE3 || ' ' || D.EXCISE_DUTY_RANGE || ' ' || D.EXCISE_DUTY_DIVISION || ' ' || D.EXCISE_DUTY_COMM
              ,1
              ,255)
      FROM
        JAI_CMN_RG_23D_TRXS A,
        PO_VENDORS B,
        PO_VENDOR_SITES_ALL C,
        JAI_CMN_VENDOR_SITES D
      WHERE A.VENDOR_ID = B.VENDOR_ID
        AND A.VENDOR_ID = C.VENDOR_ID
        AND A.VENDOR_SITE_ID = C.VENDOR_SITE_ID
        AND A.VENDOR_ID = D.VENDOR_ID
        AND A.VENDOR_SITE_ID = D.VENDOR_SITE_ID
        AND C.VENDOR_SITE_ID = D.VENDOR_SITE_ID
        AND A.VENDOR_ID = P_VENDOR_ID
        AND A.VENDOR_SITE_ID = P_VENDOR_SITE_ID;
    CURSOR C_ORG_ADDRESS(P_CUSTOMER_ID IN NUMBER,P_SHIP_TO_SITE_ID IN NUMBER) IS
      SELECT
        SUBSTR(A.NAME || ' ' || ((SUBSTR(ADDRESS_LINE_1
                     ,1
                     ,30)) || (SUBSTR(ADDRESS_LINE_2
                     ,1
                     ,20)) || (SUBSTR(ADDRESS_LINE_3
                     ,1
                     ,10)))
              ,1
              ,255)
      FROM
        HR_ALL_ORGANIZATION_UNITS A,
        HR_LOCATIONS B
      WHERE A.ORGANIZATION_ID = B.INVENTORY_ORGANIZATION_ID
        AND A.ORGANIZATION_ID = ABS(P_CUSTOMER_ID)
        AND B.LOCATION_ID = ABS(P_SHIP_TO_SITE_ID);
    CURSOR C_CUST_VEND_IDS(P_REGISTER_ID IN NUMBER) IS
      SELECT
        NVL(CUSTOMER_ID
           ,0),
        NVL(SHIP_TO_SITE_ID
           ,0),
        NVL(VENDOR_ID
           ,0),
        NVL(VENDOR_SITE_ID
           ,0)
      FROM
        JAI_CMN_RG_23D_TRXS
      WHERE REGISTER_ID = P_REGISTER_ID;
    V_CUSTOMER_ID NUMBER;
    V_ADDRESS_ID NUMBER;
    V_VENDOR_ID NUMBER;
    V_VENDOR_SITE_ID NUMBER;
    V_ADDRESS VARCHAR2(255);
  BEGIN
    OPEN C_CUST_VEND_IDS(REGISTER_ID);
    FETCH C_CUST_VEND_IDS
     INTO V_CUSTOMER_ID,V_ADDRESS_ID,V_VENDOR_ID,V_VENDOR_SITE_ID;
    CLOSE C_CUST_VEND_IDS;
    IF TRANSACTION_TYPE in ('I','MI','MRTV','RTV') THEN
      IF (V_CUSTOMER_ID < 0) THEN
        OPEN C_ORG_ADDRESS(V_CUSTOMER_ID,V_ADDRESS_ID);
        FETCH C_ORG_ADDRESS
         INTO V_ADDRESS;
        CLOSE C_ORG_ADDRESS;
        RETURN (V_ADDRESS);
      END IF;
      IF TRANSACTION_TYPE in ('RTV','MRTV') THEN
        OPEN C_VEND_ADDRESS(V_VENDOR_ID,V_VENDOR_SITE_ID);
        FETCH C_VEND_ADDRESS
         INTO V_ADDRESS;
        CLOSE C_VEND_ADDRESS;
        RETURN (V_ADDRESS);
      ELSIF (TRANSACTION_TYPE in ('I','MI') AND COL3 IS NULL) THEN
        OPEN C_CUST_ADDRESS(V_CUSTOMER_ID,V_ADDRESS_ID);
        FETCH C_CUST_ADDRESS
         INTO V_ADDRESS;
        CLOSE C_CUST_ADDRESS;
        RETURN (V_ADDRESS);
      ELSE
        RETURN (COL3);
      END IF;
    ELSE
      RETURN (NULL);
    END IF;
    RETURN NULL;
  END CF_COL10FORMULA;

  FUNCTION CF_SOB_NAMEFORMULA(ORGANIZATION_ID IN NUMBER) RETURN VARCHAR2 IS
    CURSOR FOR_SOB_ID(INV_ORG_ID IN NUMBER) IS
      SELECT
        SET_OF_BOOKS_ID
      FROM
        ORG_ORGANIZATION_DEFINITIONS
      WHERE ORGANIZATION_ID = INV_ORG_ID;
    CURSOR FOR_SOB_NAME(SOB_ID IN NUMBER) IS
      SELECT
        NAME
      FROM
        GL_SETS_OF_BOOKS
      WHERE SET_OF_BOOKS_ID = SOB_ID;
    V_NAME VARCHAR2(30);
    V_SOB_ID NUMBER;
  BEGIN
    OPEN FOR_SOB_ID(ORGANIZATION_ID);
    FETCH FOR_SOB_ID
     INTO V_SOB_ID;
    CLOSE FOR_SOB_ID;
    OPEN FOR_SOB_NAME(V_SOB_ID);
    FETCH FOR_SOB_NAME
     INTO V_NAME;
    CLOSE FOR_SOB_NAME;
    RETURN (V_NAME);
  END CF_SOB_NAMEFORMULA;

  FUNCTION CF_P_NAMEFORMULA RETURN VARCHAR2 IS
    CURSOR FOR_NAME(ORG_ID IN NUMBER) IS
      SELECT
        NAME
      FROM
        HR_ALL_ORGANIZATION_UNITS
      WHERE ORGANIZATION_ID = ORG_ID;
    V_NAME HR_ALL_ORGANIZATION_UNITS.NAME%TYPE;
  BEGIN
    OPEN FOR_NAME(P_ORGANIZATION_ID);
    FETCH FOR_NAME
     INTO V_NAME;
    CLOSE FOR_NAME;
    RETURN (V_NAME);
  END CF_P_NAMEFORMULA;

  FUNCTION CF_P_LOCFORMULA RETURN VARCHAR2 IS
    CURSOR FOR_LOC(LOC_ID IN NUMBER) IS
      SELECT
        DESCRIPTION
      FROM
        HR_LOCATIONS
      WHERE LOCATION_ID = LOC_ID;
    V_DESCRIPTION VARCHAR2(100);
  BEGIN
    OPEN FOR_LOC(P_LOCATION_ID);
    FETCH FOR_LOC
     INTO V_DESCRIPTION;
    CLOSE FOR_LOC;
    RETURN (V_DESCRIPTION);
  END CF_P_LOCFORMULA;

  FUNCTION CF_P_ITEMFORMULA RETURN VARCHAR2 IS
    CURSOR FOR_ITEM(ID IN NUMBER) IS
      SELECT
        CONCATENATED_SEGMENTS
      FROM
        MTL_SYSTEM_ITEMS_KFV
      WHERE INVENTORY_ITEM_ID = ID;
    V_ITEM VARCHAR2(100);
  BEGIN
    OPEN FOR_ITEM(P_INVENTORY_ITEM_ID);
    FETCH FOR_ITEM
     INTO V_ITEM;
    CLOSE FOR_ITEM;
    IF P_INVENTORY_ITEM_ID IS NOT NULL AND V_ITEM IS NULL THEN
      V_ITEM := 'Invalid Item Specified';
    END IF;
    RETURN (V_ITEM);
  END CF_P_ITEMFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR C_PROGRAM_ID(P_REQUEST_ID IN NUMBER) IS
      SELECT
        CONCURRENT_PROGRAM_ID,
        NVL(ENABLE_TRACE
           ,'N')
      FROM
        FND_CONCURRENT_REQUESTS
      WHERE REQUEST_ID = P_REQUEST_ID;
    CURSOR GET_AUDSID IS
      SELECT
        A.SID,
        A.SERIAL#,
        B.SPID
      FROM
        V$SESSION A,
        V$PROCESS B
      WHERE AUDSID = USERENV('SESSIONID')
        AND A.PADDR = B.ADDR;
    CURSOR GET_DBNAME IS
      SELECT
        NVL(NAME
           ,'')
      FROM
        V$DATABASE;
    V_ENABLE_TRACE FND_CONCURRENT_PROGRAMS.ENABLE_TRACE%TYPE;
    V_PROGRAM_ID FND_CONCURRENT_PROGRAMS.CONCURRENT_PROGRAM_ID%TYPE;
    V_SID V$SESSION.SID%TYPE;
    V_SERIAL V$SESSION.SERIAL#%TYPE;
    V_SPID V$PROCESS.SPID%TYPE;
    V_NAME V$DATABASE.NAME%TYPE;
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    CP_TRN_FROM_DATE := TO_CHAR(P_TRN_FROM_DATE,'DD-MON-YYYY');
    CP_TRN_TO_DATE := TO_CHAR(P_TRN_TO_DATE,'DD-MON-YYYY');
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.MESSAGE(1275
               ,'Report Version is 120.3 Last modified date is 21/07/2006')*/NULL;
    BEGIN
      OPEN C_PROGRAM_ID(P_CONC_REQUEST_ID);
      FETCH C_PROGRAM_ID
       INTO V_PROGRAM_ID,V_ENABLE_TRACE;
      CLOSE C_PROGRAM_ID;
      /*SRW.MESSAGE(1275
                 ,'v_program_id -> ' || V_PROGRAM_ID || ', v_enable_trace -> ' || V_ENABLE_TRACE || ', request_id -> ' || P_CONC_REQUEST_ID)*/NULL;
      IF V_ENABLE_TRACE = 'Y' THEN
        OPEN GET_AUDSID;
        FETCH GET_AUDSID
         INTO V_SID,V_SERIAL,V_SPID;
        CLOSE GET_AUDSID;
        OPEN GET_DBNAME;
        FETCH GET_DBNAME
         INTO V_NAME;
        CLOSE GET_DBNAME;
        /*SRW.MESSAGE(1275
                   ,'TraceFile Name = ' || LOWER(V_NAME) || '_ora_' || V_SPID || '.trc')*/NULL;
        EXECUTE IMMEDIATE
          'ALTER SESSION SET EVENTS ''10046 trace name context forever, level 4''';
      END IF;
      RETURN (TRUE);
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(1275
                   ,'Error during enabling the trace. ErrCode -> ' || SQLCODE || ', ErrMesg -> ' || SQLERRM)*/NULL;
    END;
  END BEFOREREPORT;

  FUNCTION CF_2FORMULA(TRANSACTION_TYPE IN VARCHAR2
                      ,REGISTER_ID IN NUMBER
                      ,RECEIPT_REMAINING_QTY IN NUMBER
                      ,QUERY IN VARCHAR2
                      ,COL3 IN VARCHAR2) RETURN CHAR IS
    CURSOR C_CUST_ADDRESS(P_CUSTOMER_ID IN NUMBER,P_ADDRESS_ID IN NUMBER) IS
      SELECT
        SUBSTR(E.PARTY_NAME || ' ' || G.ADDRESS1 || ' ' || G.ADDRESS2 || ' ' || G.ADDRESS3 || ' ' || G.ADDRESS4 || ' ' || G.CITY || ' ' || G.PROVINCE || ' ' || G.COUNTRY || ' ' || F.EXCISE_DUTY_RANGE || ' ' ||
	F.EXCISE_DUTY_DIVISION || ' ' || F.EXCISE_DUTY_COMM
              ,1
              ,255)
      FROM
        HZ_PARTIES E,
        HZ_CUST_ACCOUNTS HZCA,
        JAI_CMN_CUS_ADDRESSES F,
        HZ_LOCATIONS G,
        HZ_PARTY_SITES HZPS,
        HZ_CUST_ACCT_SITES_ALL HZCAS,
        HZ_CUST_SITE_USES_ALL H
      WHERE E.PARTY_ID = HZCA.CUST_ACCOUNT_ID
        AND HZCA.CUST_ACCOUNT_ID = F.CUSTOMER_ID
        AND F.ADDRESS_ID = HZCAS.CUST_ACCT_SITE_ID
        AND HZCAS.CUST_ACCT_SITE_ID = H.CUST_ACCT_SITE_ID
        AND HZPS.PARTY_SITE_ID = HZCAS.PARTY_SITE_ID
        AND G.LOCATION_ID = HZPS.LOCATION_ID
        AND F.CUSTOMER_ID = P_CUSTOMER_ID
        AND H.CUST_ACCT_SITE_ID = P_ADDRESS_ID;
    CURSOR C_ORG_ADDRESS(P_VENDOR_ID IN NUMBER,P_VENDOR_SITE_ID IN NUMBER) IS
      SELECT
        SUBSTR(A.NAME || ' ' || ((SUBSTR(ADDRESS_LINE_1
                     ,1
                     ,30)) || (SUBSTR(ADDRESS_LINE_2
                     ,1
                     ,20)) || (SUBSTR(ADDRESS_LINE_3
                     ,1
                     ,10)))
              ,1
              ,255)
      FROM
        HR_ALL_ORGANIZATION_UNITS A,
        HR_LOCATIONS B
      WHERE A.ORGANIZATION_ID = B.INVENTORY_ORGANIZATION_ID
        AND A.ORGANIZATION_ID = ABS(P_VENDOR_ID)
        AND B.LOCATION_ID = ABS(P_VENDOR_SITE_ID);
    CURSOR C_VEND_ADDRESS(P_VENDOR_ID IN NUMBER,P_VENDOR_SITE_ID IN NUMBER) IS
      SELECT
        SUBSTR(B.VENDOR_NAME || ' ' || C.ADDRESS_LINE1 || ' ' || ADDRESS_LINE2 || ' ' || ADDRESS_LINE3 || ' ' || D.EXCISE_DUTY_RANGE || ' ' || D.EXCISE_DUTY_DIVISION || ' ' || D.EXCISE_DUTY_COMM
              ,1
              ,255),
        D.VENDOR_TYPE
      FROM
        JAI_CMN_RG_23D_TRXS A,
        PO_VENDORS B,
        PO_VENDOR_SITES_ALL C,
        JAI_CMN_VENDOR_SITES D
      WHERE A.VENDOR_ID = B.VENDOR_ID
        AND A.VENDOR_ID = C.VENDOR_ID
        AND A.VENDOR_SITE_ID = C.VENDOR_SITE_ID
        AND A.VENDOR_ID = D.VENDOR_ID
        AND A.VENDOR_SITE_ID = D.VENDOR_SITE_ID
        AND C.VENDOR_SITE_ID = D.VENDOR_SITE_ID
        AND A.VENDOR_ID = P_VENDOR_ID
        AND A.VENDOR_SITE_ID = P_VENDOR_SITE_ID;
    CURSOR C_CUST_VEND_IDS(P_REGISTER_ID IN NUMBER) IS
      SELECT
        NVL(CUSTOMER_ID
           ,0),
        NVL(SHIP_TO_SITE_ID
           ,0),
        NVL(VENDOR_ID
           ,0),
        NVL(VENDOR_SITE_ID
           ,0)
      FROM
        JAI_CMN_RG_23D_TRXS
      WHERE REGISTER_ID = P_REGISTER_ID;
    V_SUPPLIER_TYPE VARCHAR2(100) := 'NONE';
    V_ENTERED_INTO_LOOP VARCHAR2(5) := 'NO';
    CURSOR C_ORG_SUPPLIER_TYPE(P_VENDOR_ID IN NUMBER,P_VENDOR_SITE_ID IN NUMBER) IS
      SELECT
        DECODE(TRADING
              ,'N'
              ,'Manufacturer'
              ,'Dealer')
      FROM
        JAI_CMN_INVENTORY_ORGS
      WHERE ORGANIZATION_ID = ABS(P_VENDOR_ID)
        AND LOCATION_ID = ABS(P_VENDOR_SITE_ID);
    V_CUSTOMER_ID NUMBER;
    V_ADDRESS_ID NUMBER;
    V_VENDOR_ID NUMBER;
    V_VENDOR_SITE_ID NUMBER;
    V_ADDRESS VARCHAR2(255);
  BEGIN
    /*SRW.MESSAGE(1274
               ,'tr_type -> ' || TRANSACTION_TYPE || ', register_id -> ' || REGISTER_ID || ', qty_rem -> ' || RECEIPT_REMAINING_QTY || ', qry_type -> ' || QUERY)*/NULL;
    IF TRANSACTION_TYPE in ('I','MRTV','MI','RTV') THEN
      CP_SUPPLIER_TYPE := NULL;
      RETURN (' ');
    END IF;
    OPEN C_CUST_VEND_IDS(cf_2formula.REGISTER_ID);
    FETCH C_CUST_VEND_IDS
     INTO V_CUSTOMER_ID,V_ADDRESS_ID,V_VENDOR_ID,V_VENDOR_SITE_ID;
    CLOSE C_CUST_VEND_IDS;
    IF (V_VENDOR_ID < 0) THEN
      OPEN C_ORG_ADDRESS(V_VENDOR_ID,V_VENDOR_SITE_ID);
      FETCH C_ORG_ADDRESS
       INTO V_ADDRESS;
      CLOSE C_ORG_ADDRESS;
      OPEN C_ORG_SUPPLIER_TYPE(V_VENDOR_ID,V_VENDOR_SITE_ID);
      FETCH C_ORG_SUPPLIER_TYPE
       INTO V_SUPPLIER_TYPE;
      CLOSE C_ORG_SUPPLIER_TYPE;
      V_ENTERED_INTO_LOOP := 'YES';
    END IF;
    IF TRANSACTION_TYPE = 'MCR' THEN
      OPEN C_CUST_ADDRESS(V_CUSTOMER_ID,V_ADDRESS_ID);
      FETCH C_CUST_ADDRESS
       INTO V_ADDRESS;
      CLOSE C_CUST_ADDRESS;
      V_ENTERED_INTO_LOOP := 'YES';
    ELSIF V_VENDOR_ID > 0 THEN
      OPEN C_VEND_ADDRESS(V_VENDOR_ID,V_VENDOR_SITE_ID);
      FETCH C_VEND_ADDRESS
       INTO V_ADDRESS,V_SUPPLIER_TYPE;
      CLOSE C_VEND_ADDRESS;
      V_ENTERED_INTO_LOOP := 'YES';
    END IF;
    IF V_SUPPLIER_TYPE IS NULL OR V_SUPPLIER_TYPE in ('Manufacturer','Importer') THEN
      CP_SUPPLIER_TYPE := 'MANUFACTURER';
    ELSE
      CP_SUPPLIER_TYPE := 'DEALER';
    END IF;
    IF V_ENTERED_INTO_LOOP = 'YES' THEN
      RETURN (NVL(V_ADDRESS
                ,' '));
    ELSE
      RETURN (COL3);
    END IF;
  END CF_2FORMULA;

  FUNCTION CF_MATCHED_SHIPPED_QTYFORMULA(QUERY IN VARCHAR2
                                        ,REGISTER_ID IN NUMBER
                                        ,RECEIPT_REMAINING_QTY IN NUMBER
                                        ,TRANSACTION_TYPE IN VARCHAR2) RETURN CHAR IS
    V_QUANTITY VARCHAR2(100);
    CURSOR C_SHIPPED_QTY(P_REGISTER_ID IN NUMBER) IS
      SELECT
        QTY_TO_ADJUST
      FROM
        JAI_CMN_RG_23D_TRXS
      WHERE REGISTER_ID = P_REGISTER_ID;
    CURSOR C_MATCHED_QTY(P_REGISTER_ID IN NUMBER) IS
      SELECT
        SUM(QUANTITY_APPLIED)
      FROM
        JAI_CMN_MATCH_RECEIPTS
      WHERE RECEIPT_ID = P_REGISTER_ID;
    CURSOR C_SHIPPED_QTY_ISO(P_REGISTER_ID IN NUMBER) IS
      SELECT
        NVL(SUM(QTY_TO_ADJUST)
           ,0)
      FROM
        JAI_CMN_RG_23D_TRXS
      WHERE REGISTER_ID = P_REGISTER_ID;
    CURSOR C_MATCHED_QTY_ISO(P_REGISTER_ID IN NUMBER,CP_TRANSACTION_TYPE IN JAI_CMN_RG_23D_TRXS.TRANSACTION_TYPE%TYPE) IS
      SELECT
        NVL(SUM(QUANTITY_APPLIED)
           ,0)
      FROM
        JAI_CMN_MATCH_RECEIPTS
      WHERE RECEIPT_ID IN (
        SELECT
          REGISTER_ID
        FROM
          JAI_CMN_RG_23D_TRXS A
        WHERE ( A.ORGANIZATION_ID , A.LOCATION_ID , A.INVENTORY_ITEM_ID , A.COMM_INVOICE_NO , A.FIN_YEAR ) IN (
          SELECT
            ORGANIZATION_ID,
            LOCATION_ID,
            INVENTORY_ITEM_ID,
            COMM_INVOICE_NO,
            FIN_YEAR
          FROM
            JAI_CMN_RG_23D_TRXS
          WHERE REGISTER_ID = P_REGISTER_ID )
          AND TRANSACTION_TYPE = CP_TRANSACTION_TYPE );
    V_SHIPPED_QTY NUMBER;
    V_MATCHED_QTY NUMBER;
  BEGIN
    IF QUERY = 'ISO' THEN
      OPEN C_MATCHED_QTY_ISO(REGISTER_ID,'R');
      FETCH C_MATCHED_QTY_ISO
       INTO V_MATCHED_QTY;
      CLOSE C_MATCHED_QTY_ISO;
      V_QUANTITY := NVL(RECEIPT_REMAINING_QTY
                       ,0) || ' / ' || NVL(V_MATCHED_QTY
                       ,0);
    ELSIF TRANSACTION_TYPE in ('R','MR','CR','MCR') THEN
      OPEN C_MATCHED_QTY(REGISTER_ID);
      FETCH C_MATCHED_QTY
       INTO V_MATCHED_QTY;
      CLOSE C_MATCHED_QTY;
      V_QUANTITY := NVL(RECEIPT_REMAINING_QTY
                       ,0) || ' / ' || NVL(V_MATCHED_QTY
                       ,0);
    END IF;
    RETURN V_QUANTITY;
  END CF_MATCHED_SHIPPED_QTYFORMULA;

  FUNCTION CF_MANU_NAMEFORMULA(REGISTER_ID IN NUMBER
                              ,CF_2 IN VARCHAR2
                              ,QTY IN NUMBER
                              ,EXCISE_DUTY_RATE IN NUMBER
                              ,COL6 IN NUMBER
                              ,COL7 IN NUMBER
                              ,COL2 IN VARCHAR2
                              ,MANUFACTURER_ADDRESS IN VARCHAR2
                              ,QTY_RECEIVED_FROM_MANUFACTURER IN NUMBER
                              ,MANUFACTURER_RATE_AMT_PER_UNIT IN VARCHAR2
                              ,TOT_AMT_PAID_TO_MANUFACTURER IN NUMBER
                              ,MANUFACTURER_NAME IN VARCHAR2) RETURN CHAR IS
  BEGIN
    /*SRW.MESSAGE(1275
               ,'reg_id:' || REGISTER_ID || ',sup_type:' || CP_SUPPLIER_TYPE || ', cf2:' || CF_2)*/NULL;
    IF CP_SUPPLIER_TYPE = 'MANUFACTURER' THEN
      CP_MANU_ADDRESS := CF_2;
      CP_QTY_RECEIVED_FROM_MANU := QTY;
      CP_MANU_RATE_AMT_PER_UNIT := NVL(EXCISE_DUTY_RATE
                                      ,'') || '/' || NVL(COL6
                                      ,'');
      CP_TOT_AMT_PAID_TO_MANU := COL7;
      RETURN COL2;
    ELSIF CP_SUPPLIER_TYPE = 'DEALER' THEN
      CP_MANU_ADDRESS := MANUFACTURER_ADDRESS;
      CP_QTY_RECEIVED_FROM_MANU := QTY_RECEIVED_FROM_MANUFACTURER;
      CP_MANU_RATE_AMT_PER_UNIT := MANUFACTURER_RATE_AMT_PER_UNIT;
      CP_TOT_AMT_PAID_TO_MANU := TOT_AMT_PAID_TO_MANUFACTURER;
      RETURN MANUFACTURER_NAME;
    ELSE
      CP_MANU_ADDRESS := NULL;
      CP_QTY_RECEIVED_FROM_MANU := NULL;
      CP_MANU_RATE_AMT_PER_UNIT := NULL;
      CP_TOT_AMT_PAID_TO_MANU := NULL;
      RETURN '';
    END IF;
  END CF_MANU_NAMEFORMULA;

  FUNCTION CF_ISSUE_CESS_AMTFORMULA(REGISTER_ID IN NUMBER) RETURN NUMBER IS
    LN_CESS_AMT NUMBER;
    CURSOR CUR_GET_CESS_AMT IS
      SELECT
        SUM(DEBIT) TAX_VAL
      FROM
        JAI_CMN_RG_OTHERS RGOTH
      WHERE RGOTH.SOURCE_TYPE = 3
        AND RGOTH.SOURCE_REGISTER_ID = REGISTER_ID
        AND RGOTH.TAX_TYPE in ( 'EXCISE_EDUCATION_CESS' , 'CVD_EDUCATION_CESS' );
  BEGIN
    OPEN CUR_GET_CESS_AMT;
    FETCH CUR_GET_CESS_AMT
     INTO LN_CESS_AMT;
    CLOSE CUR_GET_CESS_AMT;
    RETURN (NVL(LN_CESS_AMT
              ,0));
  END CF_ISSUE_CESS_AMTFORMULA;

  FUNCTION CF_ISSUE_CESS_AMT_PER_UNITFORM(COL11 IN NUMBER
                                         ,CF_ISSUE_CESS_AMT IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF COL11 > 0 THEN
      RETURN ROUND((NVL(CF_ISSUE_CESS_AMT
                      ,0) / COL11)
                  ,2);
    ELSE
      RETURN 0;
    END IF;
  END CF_ISSUE_CESS_AMT_PER_UNITFORM;

  FUNCTION CF_RECEIPT_CESS_AMTFORMULA(REGISTER_ID IN NUMBER) RETURN NUMBER IS
    LN_CESS_AMT NUMBER;
    CURSOR CUR_GET_CESS_AMT IS
      SELECT
        SUM(CREDIT) TAX_VAL
      FROM
        JAI_CMN_RG_OTHERS RGOTH
      WHERE RGOTH.SOURCE_TYPE = 3
        AND RGOTH.SOURCE_REGISTER_ID = REGISTER_ID
        AND RGOTH.TAX_TYPE in ( 'EXCISE_EDUCATION_CESS' , 'CVD_EDUCATION_CESS' );
  BEGIN
    OPEN CUR_GET_CESS_AMT;
    FETCH CUR_GET_CESS_AMT
     INTO LN_CESS_AMT;
    CLOSE CUR_GET_CESS_AMT;
    RETURN (NVL(LN_CESS_AMT
              ,0));
  END CF_RECEIPT_CESS_AMTFORMULA;

  FUNCTION CF_RECEIPT_CESS_AMT_PER_UNIT(QTY IN NUMBER
                                       ,CF_RECEIPT_CESS_AMT IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF QTY > 0 THEN
      RETURN ROUND((NVL(CF_RECEIPT_CESS_AMT
                      ,0) / QTY)
                  ,2);
    ELSE
      RETURN 0;
    END IF;
  END CF_RECEIPT_CESS_AMT_PER_UNIT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_ISSUE_SH_CESS_AMTFORMULA(REGISTER_ID IN NUMBER) RETURN NUMBER IS
    LN_CESS_AMT NUMBER;
    CURSOR CUR_GET_CESS_AMT IS
      SELECT
        SUM(DEBIT) TAX_VAL
      FROM
        JAI_CMN_RG_OTHERS RGOTH
      WHERE RGOTH.SOURCE_TYPE = 3
        AND RGOTH.SOURCE_REGISTER_ID = REGISTER_ID
        AND RGOTH.TAX_TYPE in ( 'EXCISE_SH_EDU_CESS' , 'CVD_SH_EDU_CESS' );
  BEGIN
    OPEN CUR_GET_CESS_AMT;
    FETCH CUR_GET_CESS_AMT
     INTO LN_CESS_AMT;
    CLOSE CUR_GET_CESS_AMT;
    RETURN (NVL(LN_CESS_AMT
              ,0));
  END CF_ISSUE_SH_CESS_AMTFORMULA;

  FUNCTION CF_ISSUE_SH_CESS_AMT_PER_UNITF(COL11 IN NUMBER
                                         ,CF_ISSUE_SH_CESS_AMT IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF COL11 > 0 THEN
      RETURN ROUND((NVL(CF_ISSUE_SH_CESS_AMT
                      ,0) / COL11)
                  ,2);
    ELSE
      RETURN NULL;
    END IF;
  END CF_ISSUE_SH_CESS_AMT_PER_UNITF;

  FUNCTION CF_RECEIPT_SH_CESS_AMTFORMULA(REGISTER_ID IN NUMBER) RETURN NUMBER IS
    LN_CESS_AMT NUMBER;
    CURSOR CUR_GET_CESS_AMT IS
      SELECT
        SUM(CREDIT) TAX_VAL
      FROM
        JAI_CMN_RG_OTHERS RGOTH
      WHERE RGOTH.SOURCE_TYPE = 3
        AND RGOTH.SOURCE_REGISTER_ID = REGISTER_ID
        AND RGOTH.TAX_TYPE in ( 'EXCISE_SH_EDU_CESS' , 'CVD_SH_EDU_CESS' );
  BEGIN
    OPEN CUR_GET_CESS_AMT;
    FETCH CUR_GET_CESS_AMT
     INTO LN_CESS_AMT;
    CLOSE CUR_GET_CESS_AMT;
    RETURN (LN_CESS_AMT);
  END CF_RECEIPT_SH_CESS_AMTFORMULA;

  FUNCTION CF_RECEIPT_SH_CESS_AMT_PER_UNT(QTY IN NUMBER
                                         ,CF_RECEIPT_SH_CESS_AMT IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF QTY > 0 THEN
      RETURN ROUND((NVL(CF_RECEIPT_SH_CESS_AMT
                      ,0) / QTY)
                  ,2);
    ELSE
      RETURN NULL;
    END IF;
  END CF_RECEIPT_SH_CESS_AMT_PER_UNT;

  FUNCTION CP_SUPPLIER_TYPE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_SUPPLIER_TYPE;
  END CP_SUPPLIER_TYPE_P;

  FUNCTION CP_MANU_ADDRESS_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_MANU_ADDRESS;
  END CP_MANU_ADDRESS_P;

  FUNCTION CP_QTY_RECEIVED_FROM_MANU_P RETURN NUMBER IS
  BEGIN
    RETURN CP_QTY_RECEIVED_FROM_MANU;
  END CP_QTY_RECEIVED_FROM_MANU_P;

  FUNCTION CP_MANU_RATE_AMT_PER_UNIT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_MANU_RATE_AMT_PER_UNIT;
  END CP_MANU_RATE_AMT_PER_UNIT_P;

  FUNCTION CP_TOT_AMT_PAID_TO_MANU_P RETURN NUMBER IS
  BEGIN
    RETURN CP_TOT_AMT_PAID_TO_MANU;
  END CP_TOT_AMT_PAID_TO_MANU_P;

END JA_JAIN23D_XMLP_PKG;




/
