--------------------------------------------------------
--  DDL for Package Body PER_QUESTION_TYPES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PER_QUESTION_TYPES_PKG" as
/* $Header: hrupqlct.pkb 115.1 1999/11/04 17:05:28 pkm ship $ */
procedure OWNER_TO_WHO (
  X_OWNER in VARCHAR2,
  X_CREATION_DATE out DATE,
  X_CREATED_BY out NUMBER,
  X_LAST_UPDATE_DATE out DATE,
  X_LAST_UPDATED_BY out NUMBER,
  X_LAST_UPDATE_LOGIN out NUMBER
) is
begin
  if X_OWNER = 'SEED' then
    X_CREATED_BY := 1;
    X_LAST_UPDATED_BY := 1;
  else
    X_CREATED_BY := 0;
    X_LAST_UPDATED_BY := 0;
  end if;
  X_CREATION_DATE := sysdate;
  X_LAST_UPDATE_DATE := sysdate;
  X_LAST_UPDATE_LOGIN := 0;
end OWNER_TO_WHO;
--
procedure INSERT_ROW (
  X_PROPOSAL_QUESTION_NAME in VARCHAR2,
  X_ALIGN                  in VARCHAR2,
  X_HTML_TYPE              in VARCHAR2,
  X_WIDTH_SIZE             in NUMBER,
  X_HEIGHT_SIZE            in NUMBER,
  X_MAXLENGTH              in NUMBER,
  X_DEFAULT_VALUE_TYPE     in VARCHAR2,
  X_LOOKUP_TYPE            in VARCHAR2,
  X_OPTION_SQL_TEXT        in VARCHAR2,
  X_PROVIDE_FIND           in VARCHAR2,
  X_FIND_FILTER_COLUMN     in VARCHAR2,
  X_FIND_SELECT_SQL        in VARCHAR2,
  X_TYPE                   in VARCHAR2,
  X_DEFAULT_VALUE          in VARCHAR2,
  X_FULL_TEXT              in VARCHAR2,
  X_QUESTION_HEADER        in VARCHAR2,
  X_HELP_TEXT              in VARCHAR2,
  X_NOTE_TEXT              in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in VARCHAR2,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  insert into PER_PROPOSAL_QUESTION_TYPES (
    PROPOSAL_QUESTION_NAME,
    ALIGN,
    HTML_TYPE,
    WIDTH_SIZE,
    HEIGHT_SIZE,
    MAXLENGTH,
    DEFAULT_VALUE_TYPE,
    LOOKUP_TYPE,
    OPTION_SQL_TEXT,
    PROVIDE_FIND,
    FIND_FILTER_COLUMN,
    FIND_SELECT_SQL,
    TYPE,
    DEFAULT_VALUE,
    FULL_TEXT,
    QUESTION_HEADER,
    HELP_TEXT,
    NOTE_TEXT,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_PROPOSAL_QUESTION_NAME,
    X_ALIGN,
    X_HTML_TYPE,
    X_WIDTH_SIZE,
    X_HEIGHT_SIZE,
    X_MAXLENGTH,
    X_DEFAULT_VALUE_TYPE,
    X_LOOKUP_TYPE,
    X_OPTION_SQL_TEXT,
    X_PROVIDE_FIND,
    X_FIND_FILTER_COLUMN,
    X_FIND_SELECT_SQL,
    X_TYPE,
    X_DEFAULT_VALUE,
    X_FULL_TEXT,
    X_QUESTION_HEADER,
    X_HELP_TEXT,
    X_NOTE_TEXT,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );
end INSERT_ROW;
--
procedure LOCK_ROW (
  X_PROPOSAL_QUESTION_NAME in VARCHAR2
) is
  cursor CSR_QUESTION_NAME (
    X_PROPOSAL_QUESTION_NAME in VARCHAR2
  ) is
    select PROPOSAL_QUESTION_NAME
    from   PER_PROPOSAL_QUESTION_TYPES
    where  PROPOSAL_QUESTION_NAME = X_PROPOSAL_QUESTION_NAME
    for update of PROPOSAL_QUESTION_NAME nowait;
  RECINFO CSR_QUESTION_NAME%rowtype;
begin
  open CSR_QUESTION_NAME(X_PROPOSAL_QUESTION_NAME);
  fetch CSR_QUESTION_NAME into RECINFO;
  if (CSR_QUESTION_NAME%notfound) then
    close CSR_QUESTION_NAME;
    fnd_message.set_name('FND','FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close CSR_QUESTION_NAME;
end LOCK_ROW;
--
procedure UPDATE_ROW (
  X_PROPOSAL_QUESTION_NAME in VARCHAR2,
  X_ALIGN                  in VARCHAR2,
  X_HTML_TYPE              in VARCHAR2,
  X_WIDTH_SIZE             in NUMBER,
  X_HEIGHT_SIZE            in NUMBER,
  X_MAXLENGTH              in NUMBER,
  X_DEFAULT_VALUE_TYPE     in VARCHAR2,
  X_LOOKUP_TYPE            in VARCHAR2,
  X_OPTION_SQL_TEXT        in VARCHAR2,
  X_PROVIDE_FIND           in VARCHAR2,
  X_FIND_FILTER_COLUMN     in VARCHAR2,
  X_FIND_SELECT_SQL        in VARCHAR2,
  X_TYPE                   in VARCHAR2,
  X_DEFAULT_VALUE          in VARCHAR2,
  X_FULL_TEXT              in VARCHAR2,
  X_QUESTION_HEADER        in VARCHAR2,
  X_HELP_TEXT              in VARCHAR2,
  X_NOTE_TEXT              in VARCHAR2,
  X_LAST_UPDATE_DATE       in DATE,
  X_LAST_UPDATED_BY        in VARCHAR2,
  X_LAST_UPDATE_LOGIN      in NUMBER
) is
begin
  update PER_PROPOSAL_QUESTION_TYPES set
    ALIGN = X_ALIGN,
    HTML_TYPE = X_HTML_TYPE,
    WIDTH_SIZE = X_WIDTH_SIZE,
    HEIGHT_SIZE = X_HEIGHT_SIZE,
    MAXLENGTH = X_MAXLENGTH,
    DEFAULT_VALUE_TYPE = X_DEFAULT_VALUE_TYPE,
    LOOKUP_TYPE = X_LOOKUP_TYPE,
    OPTION_SQL_TEXT = X_OPTION_SQL_TEXT,
    PROVIDE_FIND = X_PROVIDE_FIND,
    FIND_FILTER_COLUMN = X_FIND_FILTER_COLUMN,
    FIND_SELECT_SQL = X_FIND_SELECT_SQL,
    TYPE = X_TYPE,
    DEFAULT_VALUE = X_DEFAULT_VALUE,
    FULL_TEXT = X_FULL_TEXT,
    QUESTION_HEADER = X_QUESTION_HEADER,
    HELP_TEXT = X_HELP_TEXT,
    NOTE_TEXT = X_NOTE_TEXT,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where PROPOSAL_QUESTION_NAME = X_PROPOSAL_QUESTION_NAME;
  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;
--
procedure DELETE_ROW (
  X_PROPOSAL_QUESTION_NAME in VARCHAR2
) is
begin
  delete from PER_PROPOSAL_QUESTION_TYPES
  where PROPOSAL_QUESTION_NAME = X_PROPOSAL_QUESTION_NAME;
  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;
--
procedure LOAD_ROW (
  X_PROPOSAL_QUESTION_NAME in VARCHAR2,
  X_ALIGN                  in VARCHAR2,
  X_HTML_TYPE              in VARCHAR2,
  X_WIDTH_SIZE             in NUMBER,
  X_HEIGHT_SIZE            in NUMBER,
  X_MAXLENGTH              in NUMBER,
  X_DEFAULT_VALUE_TYPE     in VARCHAR2,
  X_LOOKUP_TYPE            in VARCHAR2,
  X_OPTION_SQL_TEXT        in VARCHAR2,
  X_PROVIDE_FIND           in VARCHAR2,
  X_FIND_FILTER_COLUMN     in VARCHAR2,
  X_FIND_SELECT_SQL        in VARCHAR2,
  X_TYPE                   in VARCHAR2,
  X_DEFAULT_VALUE          in VARCHAR2,
  X_FULL_TEXT              in VARCHAR2,
  X_QUESTION_HEADER        in VARCHAR2,
  X_HELP_TEXT              in VARCHAR2,
  X_NOTE_TEXT              in VARCHAR2,
  X_OWNER in VARCHAR2
) is
  X_CREATION_DATE DATE;
  X_CREATED_BY NUMBER;
  X_LAST_UPDATE_DATE DATE;
  X_LAST_UPDATED_BY NUMBER;
  X_LAST_UPDATE_LOGIN NUMBER;
begin
  OWNER_TO_WHO (
    X_OWNER,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );
  begin
    UPDATE_ROW (
      X_PROPOSAL_QUESTION_NAME,
      X_ALIGN,
      X_HTML_TYPE,
      X_WIDTH_SIZE,
      X_HEIGHT_SIZE,
      X_MAXLENGTH,
      X_DEFAULT_VALUE_TYPE,
      X_LOOKUP_TYPE,
      X_OPTION_SQL_TEXT,
      X_PROVIDE_FIND,
      X_FIND_FILTER_COLUMN,
      X_FIND_SELECT_SQL,
      X_TYPE,
      X_DEFAULT_VALUE,
      X_FULL_TEXT,
      X_QUESTION_HEADER,
      X_HELP_TEXT,
      X_NOTE_TEXT,
      X_LAST_UPDATE_DATE,
      X_LAST_UPDATED_BY,
      X_LAST_UPDATE_LOGIN
    );
  exception
    when no_data_found then
      INSERT_ROW (
        X_PROPOSAL_QUESTION_NAME,
        X_ALIGN,
        X_HTML_TYPE,
        X_WIDTH_SIZE,
        X_HEIGHT_SIZE,
        X_MAXLENGTH,
        X_DEFAULT_VALUE_TYPE,
        X_LOOKUP_TYPE,
        X_OPTION_SQL_TEXT,
        X_PROVIDE_FIND,
        X_FIND_FILTER_COLUMN,
        X_FIND_SELECT_SQL,
        X_TYPE,
        X_DEFAULT_VALUE,
        X_FULL_TEXT,
        X_QUESTION_HEADER,
        X_HELP_TEXT,
        X_NOTE_TEXT,
        X_CREATION_DATE,
        X_CREATED_BY,
        X_LAST_UPDATE_DATE,
        X_LAST_UPDATED_BY,
        X_LAST_UPDATE_LOGIN
      );
  end;
end LOAD_ROW;
--
procedure TRANSLATE_ROW (
  X_PROPOSAL_QUESTION_NAME in VARCHAR2,
  X_DEFAULT_VALUE          in VARCHAR2,
  X_FULL_TEXT              in VARCHAR2,
  X_QUESTION_HEADER        in VARCHAR2,
  X_HELP_TEXT              in VARCHAR2,
  X_NOTE_TEXT              in VARCHAR2,
  X_OWNER in VARCHAR2
) is
  X_CREATION_DATE DATE;
  X_CREATED_BY NUMBER;
  X_LAST_UPDATE_DATE DATE;
  X_LAST_UPDATED_BY NUMBER;
  X_LAST_UPDATE_LOGIN NUMBER;
begin
  OWNER_TO_WHO (
    X_OWNER,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );
  update PER_PROPOSAL_QUESTION_TYPES
  set DEFAULT_VALUE = X_DEFAULT_VALUE,
      FULL_TEXT = X_FULL_TEXT,
      QUESTION_HEADER = X_QUESTION_HEADER,
      HELP_TEXT = X_HELP_TEXT,
      NOTE_TEXT = X_NOTE_TEXT,
      LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
      LAST_UPDATED_BY = X_LAST_UPDATED_BY,
      LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where PROPOSAL_QUESTION_NAME = X_PROPOSAL_QUESTION_NAME
  and userenv('LANG') =   (Select language_code
  from FND_LANGUAGES where installed_flag = 'B');
end TRANSLATE_ROW;
--
end PER_QUESTION_TYPES_PKG;

/
