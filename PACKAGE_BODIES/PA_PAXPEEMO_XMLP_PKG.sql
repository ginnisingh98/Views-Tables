--------------------------------------------------------
--  DDL for Package Body PA_PAXPEEMO_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PA_PAXPEEMO_XMLP_PKG" AS
/* $Header: PAXPEEMOB.pls 120.0 2008/01/02 11:47:28 krreddy noship $ */
  FUNCTION GET_COVER_PAGE_VALUES RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (FALSE);
  END GET_COVER_PAGE_VALUES;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    DECLARE
      INIT_FAILURE EXCEPTION;
      JOB_NAME VARCHAR2(40);
      ORG_NAME HR_ORGANIZATION_UNITS.NAME%TYPE;
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
      /*SRW.USER_EXIT('FND GETPROFILE
                    NAME="PA_RULE_BASED_OPTIMIZER"
                    FIELD=":p_rule_optimizer"
                    PRINT_ERROR="N"')*/NULL;
      P_DEBUG_MODE := FND_PROFILE.VALUE('PA_DEBUG_MODE');
      IF P_START_ORGANIZATION_ID IS NOT NULL THEN
        SELECT
          SUBSTR(NAME
                ,1
                ,60)
        INTO ORG_NAME
        FROM
          HR_ORGANIZATION_UNITS
        WHERE ORGANIZATION_ID = P_START_ORGANIZATION_ID;
      END IF;
      C_ORG_NAME := ORG_NAME;
      IF JOB_ID IS NOT NULL THEN
        SELECT
          NAME
        INTO JOB_NAME
        FROM
          PER_JOBS
        WHERE JOB_ID = JOB_ID;
      END IF;
      C_JOB_NAME := JOB_NAME;
      IF (GET_COMPANY_NAME <> TRUE) THEN
        RAISE INIT_FAILURE;
      END IF;
      IF (GET_START_ORG <> TRUE) THEN
        RAISE INIT_FAILURE;
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION GET_COMPANY_NAME RETURN BOOLEAN IS
    L_NAME GL_SETS_OF_BOOKS.NAME%TYPE;
  BEGIN
    SELECT
      GL.NAME
    INTO L_NAME
    FROM
      GL_SETS_OF_BOOKS GL,
      PA_IMPLEMENTATIONS PI
    WHERE GL.SET_OF_BOOKS_ID = PI.SET_OF_BOOKS_ID;
    C_COMPANY_NAME_HEADER := L_NAME;
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (FALSE);
  END GET_COMPANY_NAME;

  FUNCTION GET_START_ORG RETURN BOOLEAN IS
    C_START_ORGANIZATION_ID NUMBER;
  BEGIN
    SELECT
      DECODE(P_START_ORGANIZATION_ID
            ,NULL
            ,START_ORGANIZATION_ID
            ,P_START_ORGANIZATION_ID)
    INTO C_START_ORGANIZATION_ID
    FROM
      PA_IMPLEMENTATIONS;
    INSERT INTO PA_ORG_REPORTING_SESSIONS
      (START_ORGANIZATION_ID
      ,SESSION_ID)
    VALUES   (C_START_ORGANIZATION_ID
      ,USERENV('SESSIONID'));
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (FALSE);
  END GET_START_ORG;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      /*SRW.USER_EXIT('FND srwexit')*/NULL;
      ROLLBACK;
    END;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION C_COMPANY_NAME_HEADER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_COMPANY_NAME_HEADER;
  END C_COMPANY_NAME_HEADER_P;

  FUNCTION C_ORG_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_ORG_NAME;
  END C_ORG_NAME_P;

  FUNCTION C_JOB_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_JOB_NAME;
  END C_JOB_NAME_P;

END PA_PAXPEEMO_XMLP_PKG;


/
