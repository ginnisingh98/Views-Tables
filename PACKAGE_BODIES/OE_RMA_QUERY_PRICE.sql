--------------------------------------------------------
--  DDL for Package Body OE_RMA_QUERY_PRICE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."OE_RMA_QUERY_PRICE" as
/* $Header: oexrlqpb.pls 115.0 99/07/16 08:29:23 porting ship $ */

  /*
  ** Get the price adjustments total associated with
  ** the given header_id and line_id.
  */
  FUNCTION GET_PRICE_ADJUSTMENTS_TOTAL(
	P_HEADER_ID	    IN	NUMBER,
	P_LINE_ID	    IN	NUMBER,
        P_REF_ORD_HEADER_ID IN  NUMBER DEFAULT NULL
	)
	RETURN NUMBER IS

  L_PRICE_ADJUSTMENTS_TOTAL 	NUMBER;

  BEGIN

  SELECT NVL( SUM( PERCENT ), 0 )
  INTO   L_PRICE_ADJUSTMENTS_TOTAL
  FROM   SO_PRICE_ADJUSTMENTS
  WHERE  (HEADER_ID = P_HEADER_ID
    AND   LINE_ID IS NULL)
     OR   LINE_ID = P_LINE_ID
     OR  (HEADER_ID = P_REF_ORD_HEADER_ID
          AND LINE_ID IS NULL);

  RETURN L_PRICE_ADJUSTMENTS_TOTAL;

  EXCEPTION
   WHEN NO_DATA_FOUND THEN
     RETURN 0;

  END GET_PRICE_ADJUSTMENTS_TOTAL;


  /*
  ** Get the price list related information given price list id
  ** and the reference line id
  */
  PROCEDURE GET_PRICE_INFO (
	P_LINE_ID		IN	NUMBER,
	P_PRICE_LIST_ID		OUT	NUMBER,
	P_TERMS_ID		OUT 	NUMBER,
	P_ROUNDING_FACTOR	OUT	NUMBER
	) IS


  BEGIN

  P_PRICE_LIST_ID := NULL;
  P_TERMS_ID := NULL;
  P_ROUNDING_FACTOR := NULL;

  SELECT SO_LINES.PRICE_LIST_ID
  ,      SO_LINES.TERMS_ID
  ,      SOPLS.ROUNDING_FACTOR
  INTO   P_PRICE_LIST_ID
  ,      P_TERMS_ID
  ,      P_ROUNDING_FACTOR
  FROM   SO_PRICE_LISTS SOPLS
  ,      SO_LINES
  WHERE  SO_LINES.PRICE_LIST_ID = SOPLS.PRICE_LIST_ID
  AND    SO_LINES.LINE_ID = P_LINE_ID;

  EXCEPTION
   WHEN NO_DATA_FOUND THEN
     RETURN;

  END GET_PRICE_INFO;


  /*
  ** Get pricing attribute values given reference line id
  */
  PROCEDURE GET_PRICING(
		L_PRICING_CONTEXT		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE1		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE2		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE3		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE4		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE5		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE6		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE7		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE8		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE9		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE10		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE11		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE12		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE13		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE14		OUT 	VARCHAR2,
		L_PRICING_ATTRIBUTE15		OUT 	VARCHAR2,
		L_LINK_TO_LINE_ID		IN	NUMBER
		) IS

  BEGIN

  SELECT PRICING_CONTEXT,
	 PRICING_ATTRIBUTE1,
	 PRICING_ATTRIBUTE2,
	 PRICING_ATTRIBUTE3,
	 PRICING_ATTRIBUTE4,
	 PRICING_ATTRIBUTE5,
	 PRICING_ATTRIBUTE6,
	 PRICING_ATTRIBUTE7,
	 PRICING_ATTRIBUTE8,
	 PRICING_ATTRIBUTE9,
	 PRICING_ATTRIBUTE10,
	 PRICING_ATTRIBUTE11,
	 PRICING_ATTRIBUTE12,
	 PRICING_ATTRIBUTE13,
	 PRICING_ATTRIBUTE14,
	 PRICING_ATTRIBUTE15
  INTO	 L_PRICING_CONTEXT,
	 L_PRICING_ATTRIBUTE1,
	 L_PRICING_ATTRIBUTE2,
	 L_PRICING_ATTRIBUTE3,
	 L_PRICING_ATTRIBUTE4,
	 L_PRICING_ATTRIBUTE5,
	 L_PRICING_ATTRIBUTE6,
	 L_PRICING_ATTRIBUTE7,
	 L_PRICING_ATTRIBUTE8,
	 L_PRICING_ATTRIBUTE9,
	 L_PRICING_ATTRIBUTE10,
	 L_PRICING_ATTRIBUTE11,
	 L_PRICING_ATTRIBUTE12,
	 L_PRICING_ATTRIBUTE13,
	 L_PRICING_ATTRIBUTE14,
	 L_PRICING_ATTRIBUTE15
  FROM   SO_LINES
  WHERE   LINE_ID = L_LINK_TO_LINE_ID;

  RETURN;

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN;

  END GET_PRICING;


END OE_RMA_QUERY_PRICE;

/
