--------------------------------------------------------
--  DDL for Package Body ENG_PARAMETER_ENGCYCLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."ENG_PARAMETER_ENGCYCLE" as
/* $Header: engecycb.pls 120.1 2008/01/25 21:21:27 ksuleman ship $ */

/* constants */

FORM_FUNCTION constant varchar2(20) := 'BIS_ENGCYCLE';
RDF_FILENAME  constant varchar2(20) := 'ENGCYCLE';
DATE_FORMAT   constant varchar2(20) := 'DD-MON-YYYY';


/*
 * error
 *
 *   This creates the error message page
 */

PROCEDURE error(P_FIELD IN VARCHAR2) IS
BEGIN
   BIS_UTILITIES_PUB.Build_Report_Title(FORM_FUNCTION, RDF_FILENAME, NULL);
   htp.p('<FONT face="arial" size=+1><BR><BR>' ||
         fnd_message.get_string('WIP', 'INVALID_PARAM') || ': <B>' ||
         P_FIELD || '</B></FONT>');
   htp.p('<FONT face="arial"><BR><BR>' ||
         fnd_message.get_string('WIP', 'INVALID_PARAM_INSTRUCTION') ||
         '</FONT>');
END error;

/*===========================================================================
  FUNCTION NAME:        conv_special_url_chars

  DESCRIPTION:
                        Convert all of the ASCII special characters that are
                        disallowed as a part of a URL.  The encoding requires
                        that we convert the special characters to HEX for
                        any characters in a URL string that is built
                        manually outside a form get/post.

============================================================================*/
FUNCTION conv_special_url_chars (p_url_token IN VARCHAR2) RETURN VARCHAR2
IS

BEGIN

RETURN(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(
REPLACE(p_url_token,
'%','%25'),
' ','%20'),
'"','%22'),
'>','%3E'),
'^','%5E'),
'{','%7B'),
'}','%7D'),
'<','%3C'),
'[','%5B'),
']','%5D'),
'`','%60'),
'|','%7C'),
'~','%7E'),
'/','%2F'),
'#','%23'),
'?','%3F'),
'&','%26'),
'=','%3D'),
'$','%24'),
'(','%28'),
')','%29'),
':','%3A'),
';','%3B'),
'+','%2B'));

/*
exception
  when others then
    Wf_Core.Context('wfa_html', 'conv_special_url_chars',
       p_url_token);
    wfa_html.Error;
*/

END conv_special_url_chars;

/*
 * Validate_Date
 *
 *   This validates the From and To date parameters
 */

FUNCTION Validate_Date(P_FROM_DATE       IN VARCHAR2,
                       P_TO_DATE         IN VARCHAR2)
   RETURN BOOLEAN IS

   newfromdate DATE;
   newtodate DATE;

BEGIN
   select to_date( P_FROM_DATE, DATE_FORMAT ),
          to_date( P_TO_DATE,   DATE_FORMAT )
     into newfromdate, newtodate
     from dual;

   IF (newfromdate is null)
      OR (newtodate is null)
      OR (newfromdate > newtodate) THEN
      error(fnd_message.get_string('BOM', 'CST_REPORTING_RANGE_LABEL'));
      return FALSE;
   END IF;

   return TRUE;

EXCEPTION
   WHEN OTHERS then
     error(fnd_message.get_string('BOM', 'CST_REPORTING_RANGE_LABEL'));
     return FALSE;

END Validate_Date;


/*
 * Before_Parameter_ENGCYCLE
 *
 *   This function is called by Parameter_FormView_ENGCYCLE
 *   to perform initial setups.  It should not be invoked
 *   directly.
 */

PROCEDURE Before_Parameter_ENGCYCLE IS

  l_org_id  NUMBER;

BEGIN
    -- Initialize the report

-- WHAT DOES set_org_context DO?

    l_org_id := fnd_profile.value('ORG_ID');
    FND_CLIENT_INFO.set_org_context(l_org_id);

END Before_Parameter_ENGCYCLE;


/*
 * After_Parameter_ENGCYCLE
 *
 *   This function is called by Parameter_ActionView_ENGCYCLE
 *   to perform validations.  It should not be invoked
 *   directly.
 */

PROCEDURE After_Parameter_ENGCYCLE IS
BEGIN
    NULL;
END After_Parameter_ENGCYCLE;

PROCEDURE Build_Parameter_Form IS
BEGIN
    NULL;
END Build_Parameter_Form;


/*
 * Parameter_ActionView_ENGCYCLE
 *
 *   This function is invoked when the user clicks
 *   the OK button in the HTML page generated by
 *   Parameter_FormView_ENGCYCLE.  It will validate
 *   the input parameters and launch the ECO Cycle Time
 *   report.
 */

PROCEDURE Parameter_ActionView_ENGCYCLE(
    P_ORGANIZATION_ID                       NUMBER,
    P_ORGANIZATION_NAME                     VARCHAR2 default null,
    P_FROM_DATE                             VARCHAR2,
    P_TO_DATE                               VARCHAR2,
    P_VIEW_BY                               NUMBER) IS

  l_org_id        NUMBER        := P_ORGANIZATION_ID;
  l_from_date     VARCHAR2(240) := P_FROM_DATE;
  l_to_date       VARCHAR2(240) := P_TO_DATE;

BEGIN
  --bug6677475: As advised by SNELLOLI, taking out this call as its no longer used
  --and it caused compilation problems
  null;
/*
   IF (Validate_Date(l_from_date, l_to_date ) = FALSE ) THEN
      return;
   END IF;

   ENG_PARAMETER_ENGCYCLE.After_Parameter_ENGCYCLE;

   OracleOASIS.RunReport(
        report => 'ENGCYCLE',
        parameters => 'P_PARAM_FROM_DATE='  ||l_from_date         || '*' ||
                      'P_PARAM_TO_DATE='    ||l_to_date           || '*' ||
                      'P_PARAM_ORG_ID='     ||l_org_id            || '*' ||
                      'P_PARAM_VIEW_BY='    ||P_VIEW_BY           || '*',
--                      'paramform=NO*',
        paramform=> 'NO');
*/
END Parameter_ActionView_ENGCYCLE;


PROCEDURE ENGCYCLE_Parameter_PrintViewby(
            param IN OUT NOCOPY BIS_UTILITIES_PUB.Report_Parameter_Tbl_Type,
            i IN NUMBER) IS
BEGIN
    param(i).Label := FND_MESSAGE.get_string( 'BOM', 'CST_VIEW_BY_LABEL');
    param(i).Value := htf.formSelectopen('p_view_by');
    param(i).Value := param(i).Value || htf.formSelectOption(
                      FND_MESSAGE.get_string( 'BOM', 'TIME_CAP'),
                      NULL, 'VALUE=1');
    param(i).Value := param(i).Value || htf.formSelectOption(
                      FND_MESSAGE.get_string( 'WIP', 'WIP_ORGANIZATION'),
                      NULL, 'VALUE=2');
    param(i).Value := param(i).Value || htf.formSelectclose;

END ENGCYCLE_Parameter_PrintViewby;


PROCEDURE ENGCYCLE_Parameter_PrintDate(param IN OUT NOCOPY BIS_UTILITIES_PUB.Report_Parameter_Tbl_Type,
                                       i IN NUMBER) IS
  from_date     VARCHAR2(15);
  to_date       VARCHAR2(15);
BEGIN
    SELECT to_char(add_months(sysdate, -12), DATE_FORMAT),
           to_char(sysdate, DATE_FORMAT)
      INTO from_date, to_date
      FROM dual;

    param(i).Label := FND_MESSAGE.get_string( 'PER', 'HR_BIS_REPORTING_DATE');
    param(i).Value := htf.formText('p_from_date', NULL, NULL, from_date);
    param(i).Value := param(i).Value || ' - ' ||
                   htf.formText('p_to_date', NULL, NULL, to_date);
END ENGCYCLE_Parameter_PrintDate;


/*
 * Parameter_FormView_ENGCYCLE
 *
 *   This function is invoked via a form function
 *   and is the entry point into this package.
 *   It creates the HTML parameter page used by
 *   the BIS ECO Cycle Time report.
 */

PROCEDURE Parameter_FormView_ENGCYCLE IS
  param BIS_UTILITIES_PUB.Report_Parameter_Tbl_Type;
  retval VARCHAR2(32767);
  j_string VARCHAR2(32767);
  l_where_clause VARCHAR2(10000);
  l_return_status         VARCHAR2(1000);
  l_error_tbl             BIS_UTILITIES_PUB.Error_Tbl_Type;
  i number := 1;
  j number := 1;

BEGIN
    if icx_sec.validateSession then
      BIS_UTILITIES_PUB.Retrieve_Where_Clause
      ( p_user_id          => FND_GLOBAL.user_id
      , p_region_code      => 'BIS_INV_ORGANIZATIONS'
      , x_where_clause     => l_where_clause
      , x_return_status    => l_return_status
      , x_error_Tbl        => l_error_tbl
      );

--      l_where_clause := conv_special_url_chars(l_where_clause);

      Before_Parameter_ENGCYCLE;
      htp.htmlopen;

      BIS_UTILITIES_PUB.Build_Report_Title(FORM_FUNCTION, RDF_FILENAME, '');

      htp.headopen;
      js.scriptOpen;
      icx_util.LOVScript;

      htp.p( 'var OrgLOV_Where = "' || l_where_clause || '";' );
      htp.p( '  document.param.P_ORGANIZATION_ID.value = "";' );
      htp.p( '  document.param.P_ORGANIZATION_NAME.value = "";' );

      js.scriptClose;
      htp.headClose;
      htp.bodyOpen;
      htp.centerOpen;

      -- Print Org

      param(i).Label := FND_MESSAGE.get_string( 'WIP', 'INVENTORY_ORGANIZATION');
      param(i).Value := htf.formHidden( 'P_ORGANIZATION_ID' ) ||
                        htf.formText( 'P_ORGANIZATION_NAME');
      param(i).Action :=
      '<A HREF="javascript:LOV(191,''P_ORGANIZATION_NAME'',191,''BIS_INV_ORGANIZATIONS'',''param'','''', '''', OrgLOV_Where)"' ||
      'onMouseOver="window.status=''List of Values'';return true">' ||
      '<IMG SRC="/OA_MEDIA/US/FNDILOV.gif" ALIGN="ABSMIDDLE" ALT="List of Values"\
' ||
    'BORDER=0></A>';

      i := i + 1;
      ENGCYCLE_Parameter_PrintViewby(param, i);
      i := i + 1;
      ENGCYCLE_Parameter_PrintDate(param, i);
      i := i + 1;

      BIS_UTILITIES_PUB.Build_Parameter_Form('NAME="param" ACTION="ENG_PARAMETER_ENGCYCLE.Parameter_ActionView_ENGCYCLE" METHOD="GET"', param);

      htp.htmlclose;
    end if;
END Parameter_FormView_ENGCYCLE;

END ENG_PARAMETER_ENGCYCLE;

/
