--------------------------------------------------------
--  DDL for Package Body XTR_XTRDISRE_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XTR_XTRDISRE_XMLP_PKG" AS
/* $Header: XTRDISREB.pls 120.1 2007/12/28 12:47:33 npannamp noship $ */
  FUNCTION CF_SET_PARAFORMULA RETURN VARCHAR2 IS
  BEGIN
    SELECT
      SUBSTR(USER
            ,1
            ,10)
    INTO
      CP_PARA
    FROM
      DUAL;
    RETURN (CP_PARA);
  END CF_SET_PARAFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    L_DMMY_NUM NUMBER;
    L_MESSAGE FND_NEW_MESSAGES.MESSAGE_TEXT%TYPE;
    CURSOR GET_LANGUAGE_DESC IS
      SELECT
        ITEM_NAME,
        SUBSTR(TEXT
              ,1
              ,100) LANG_NAME
      FROM
        XTR_SYS_LANGUAGES_VL
      WHERE MODULE_NAME = 'XTRDISRE';
    TEMP NUMBER(15) := 1000;
  BEGIN
    BEGIN
      COMPANY_NAME_HEADER := CEP_STANDARD.GET_WINDOW_SESSION_TITLE;
    EXCEPTION
      WHEN OTHERS THEN
        FND_MESSAGE.SET_NAME('XTR'
                            ,'XTR_LOOKUP_ERR');
        L_MESSAGE := FND_MESSAGE.GET;
        RAISE_APPLICATION_ERROR(-20101
                               ,NULL);
    END;
    IF (P_DISPLAY_DEBUG = 'Y') THEN
      NULL;
    END IF;
    IF P_FACTOR IS NOT NULL THEN
      SELECT
        SUBSTRB(DESCRIPTION
               ,1
               ,20),
        DECODE(SUBSTR(P_FACTOR
                     ,1
                     ,1)
              ,'U'
              ,1
              ,'T'
              ,1000
              ,'M'
              ,1000000
              ,'B'
              ,100000000)
      INTO
        LP_FACTOR_DESC
        ,TEMP
      FROM
        FND_LOOKUPS
      WHERE LOOKUP_TYPE = 'XTR_FACTOR'
        AND LOOKUP_CODE = SUBSTR(P_FACTOR
            ,1
            ,1);
    ELSE
      SELECT
        SUBSTRB(DESCRIPTION
               ,1
               ,20)
      INTO
        LP_FACTOR_DESC
      FROM
        FND_LOOKUPS
      WHERE LOOKUP_TYPE = 'XTR_FACTOR'
        AND LOOKUP_CODE = 'T';
      TEMP := 1000;
    END IF;
    AMT_UNIT2 := TEMP;
    FOR c IN GET_LANGUAGE_DESC LOOP
      IF C.ITEM_NAME = 'Z1ACCEPTOR' THEN
        Z1ACCEPTOR := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1AND' THEN
        Z1AND := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1COMPANY_CODE' THEN
        Z1COMPANY_CODE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1CPARTY_CODE' THEN
        Z1CPARTY_CODE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1ISSUED_BUY_ALL' THEN
        Z1ISSUED_BUY_ALL := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1MATURITIES_BETWEEN' THEN
        Z1MATURITIES_BETWEEN := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PARAMETERS' THEN
        Z1PARAMETERS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PORTFOLIO' THEN
        Z1PORTFOLIO := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PRODUCT_TYPE' THEN
        Z1PRODUCT_TYPE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2ACCEPTOR_CODE' THEN
        Z2ACCEPTOR_CODE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2AVAIL' THEN
        Z2AVAIL := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CCY' THEN
        Z2CCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2COMMENCE_DATE' THEN
        Z2COMMENCE_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2COMPANY' THEN
        Z2COMPANY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2DEAL_NUMBER' THEN
        Z2DEAL_NUMBER := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2END_OF_REPORT' THEN
        Z2END_OF_REPORT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2FACE_VALUE_AMOUNT' THEN
        Z2FACE_VALUE_AMOUNT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2INTEREST_RATE' THEN
        Z2INTEREST_RATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2MATURITY_DATE' THEN
        Z2MATURITY_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PARCEL_REMAIN' THEN
        Z2PARCEL_REMAIN := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2RESERVED_YN' THEN
        Z2RESERVED_YN := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2STATUS' THEN
        Z2STATUS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SUBTYPE' THEN
        Z2SUBTYPE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PAGE' THEN
        Z2PAGE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'REPORT_DATE' THEN
        REPORT_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1P_FACTOR' THEN
        Z1P_FACTOR := C.LANG_NAME;
      END IF;
    END LOOP;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;

    /*P_DATE_FROM := TO_CHAR(TO_DATE(P_DATE_FROM
                                  ,'YYYY/MM/DD HH24:MI:SS')
                          ,'DD-MON-YYYY');
    P_DATE_TO := TO_CHAR(TO_DATE(P_DATE_TO
                                ,'YYYY/MM/DD HH24:MI:SS')
                        ,'DD-MON-YYYY');*/
P_DATE_FROM_T := TO_CHAR(TO_DATE(P_DATE_FROM
                                  ,'YYYY/MM/DD HH24:MI:SS')
                          ,'DD-MON-YYYY');
    P_DATE_TO_T := TO_CHAR(TO_DATE(P_DATE_TO
                                ,'YYYY/MM/DD HH24:MI:SS')
                        ,'DD-MON-YYYY');
    COMPANY_CODE2 := P_COMPANY;
    FROM_DATE2 := P_DATE_FROM_T;
    TO_DATE2 := P_DATE_TO_T;
    PORTFOLIO2 := P_PORTFOLIO;
    CPARTY_CODE2 := P_CPARTY;
    PRODUCT_TYPE2 := P_PRODUCT_TYPE;
    ACCEPTOR2 := P_ACCEPTOR_CODE;
    ISS_PURCH2 := P_ISSUED_PURCHASED_BOTH;
    SELECT
      MEANING
    INTO
      P_ISSUED_DSP
    FROM
      FND_LOOKUPS
    WHERE LOOKUP_TYPE = 'XTR_MISC'
      AND LOOKUP_CODE = ISS_PURCH2;
    SELECT
      MEANING
    INTO
      P_FACTOR_DSP
    FROM
      FND_LOOKUPS
    WHERE LOOKUP_TYPE = 'XTR_MISC'
      AND LOOKUP_CODE = P_FACTOR;
    SELECT
      CP.USER_CONCURRENT_PROGRAM_NAME
    INTO
      REPORT_SHORT_NAME2
    FROM
      FND_CONCURRENT_PROGRAMS_VL CP,
      FND_CONCURRENT_REQUESTS CR
    WHERE CR.REQUEST_ID = P_CONC_REQUEST_ID
      AND CP.APPLICATION_ID = CR.PROGRAM_APPLICATION_ID
      AND CP.CONCURRENT_PROGRAM_ID = CR.CONCURRENT_PROGRAM_ID;

    REPORT_SHORT_NAME2 := substr(REPORT_SHORT_NAME2,1,instr(REPORT_SHORT_NAME2,' (XML)'));

    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CP_PARA_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARA;
  END CP_PARA_P;

END XTR_XTRDISRE_XMLP_PKG;


/
