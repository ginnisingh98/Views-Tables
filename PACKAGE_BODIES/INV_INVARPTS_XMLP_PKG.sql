--------------------------------------------------------
--  DDL for Package Body INV_INVARPTS_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."INV_INVARPTS_XMLP_PKG" AS
/* $Header: INVARPTSB.pls 120.1 2007/12/25 10:11:36 dwkrishn noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(1
                   ,'Failed in before report trigger:SRWINIT')*/NULL;
        RAISE;
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(1
                   ,'SRWEXIT failed')*/NULL;
    END;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION C_CURRENCY_CODEFORMULA(R_CURRENCY_CODE IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    RETURN ('(' || R_CURRENCY_CODE || ')');
  END C_CURRENCY_CODEFORMULA;

  FUNCTION C_PHYS_INV_NAMEFORMULA RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      NAME VARCHAR2(30);
      ORG NUMBER;
      PI_ID NUMBER;
    BEGIN
      ORG := P_ORG_ID;
      PI_ID := P_PHYS_INV_ID;
      SELECT
        PHYSICAL_INVENTORY_NAME
      INTO NAME
      FROM
        MTL_PHYSICAL_INVENTORIES
      WHERE ORGANIZATION_ID = ORG
        AND PHYSICAL_INVENTORY_ID = PI_ID;
      RETURN (NAME);
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        RETURN (NULL);
    END;
    RETURN NULL;
  END C_PHYS_INV_NAMEFORMULA;

  FUNCTION C_ADJ_PCTFORMULA(ADJMNT_VALUE IN NUMBER
                           ,COUNT_VALUE IN NUMBER) RETURN NUMBER IS
  BEGIN
    BEGIN
      RETURN (ROUND(ADJMNT_VALUE * 100 / COUNT_VALUE
                  ,2));
    EXCEPTION
      WHEN OTHERS THEN
        RETURN (NULL);
    END;
    RETURN NULL;
  END C_ADJ_PCTFORMULA;

  FUNCTION C_VAR_PCTFORMULA(ABSOLUTE_VARIANCE IN NUMBER
                           ,COUNT_VALUE IN NUMBER) RETURN NUMBER IS
  BEGIN
    BEGIN
      RETURN (ROUND((ABSOLUTE_VARIANCE * 100 / COUNT_VALUE)
                  ,2));
    EXCEPTION
      WHEN OTHERS THEN
        RETURN (NULL);
    END;
    RETURN NULL;
  END C_VAR_PCTFORMULA;

  FUNCTION C_ADJ_PCT_SUMFORMULA(C_ADJ_VAL_SUM IN NUMBER
                               ,C_CNT_VAL_SUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    BEGIN
      RETURN (ROUND(C_ADJ_VAL_SUM * 100 / C_CNT_VAL_SUM
                  ,2));
    EXCEPTION
      WHEN OTHERS THEN
        RETURN (NULL);
    END;
    RETURN NULL;
  END C_ADJ_PCT_SUMFORMULA;

  FUNCTION C_VAR_PCT_SUMFORMULA(C_ABS_VAR_SUM IN NUMBER
                               ,C_CNT_VAL_SUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    BEGIN
      RETURN (ROUND(C_ABS_VAR_SUM * 100 / C_CNT_VAL_SUM
                  ,2));
    EXCEPTION
      WHEN OTHERS THEN
        RETURN (NULL);
    END;
    RETURN NULL;
  END C_VAR_PCT_SUMFORMULA;

  FUNCTION C_WHERE_OPTIONFORMULA RETURN VARCHAR2 IS
  BEGIN
    BEGIN
      IF P_REPORT_OPTION = 1 THEN
        RETURN (' ');
      ELSE
        RETURN ('and mpi.physical_inventory_id =
                            ' || TO_CHAR(P_PHYS_INV_ID));
      END IF;
    END;
    RETURN NULL;
  END C_WHERE_OPTIONFORMULA;

  FUNCTION C_NUM_TAGSFORMULA(SUBINV IN VARCHAR2) RETURN NUMBER IS
  BEGIN
    DECLARE
      MY_NUM_TAGS NUMBER;
      MY_ORG_ID NUMBER;
      MY_PHYSICAL_INV NUMBER;
    BEGIN
      MY_ORG_ID := P_ORG_ID;
      MY_PHYSICAL_INV := P_PHYS_INV_ID;
      SELECT
        count(*)
      INTO MY_NUM_TAGS
      FROM
        MTL_PHYSICAL_INVENTORY_TAGS
      WHERE ORGANIZATION_ID = MY_ORG_ID
        AND PHYSICAL_INVENTORY_ID = MY_PHYSICAL_INV
        AND SUBINVENTORY = SUBINV
        AND VOID_FLAG = 2;
      RETURN (MY_NUM_TAGS);
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        RETURN (0);
    END;
    RETURN NULL;
  END C_NUM_TAGSFORMULA;

END INV_INVARPTS_XMLP_PKG;


/
