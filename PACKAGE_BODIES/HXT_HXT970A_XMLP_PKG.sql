--------------------------------------------------------
--  DDL for Package Body HXT_HXT970A_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."HXT_HXT970A_XMLP_PKG" AS
/* $Header: HXT970AB.pls 120.0 2007/12/03 11:53:17 amakrish noship $ */
  FUNCTION CF_PERIODFORMULA RETURN VARCHAR2 IS
    PAYROLL VARCHAR2(240);
    START_D DATE;
    END_D DATE;
  BEGIN
    SELECT
      PAYROLL_NAME || '   ' || TO_CHAR(PTP.START_DATE
             ,'YYYY/MM/DD') || '  -  ' || TO_CHAR(PTP.END_DATE
             ,'YYYY/MM/DD')
    INTO
      PAYROLL
    FROM
      PER_TIME_PERIODS PTP,
      PAY_PAYROLLS_F PAY
    WHERE PTP.TIME_PERIOD_ID = P_TIME_PERIOD_ID
      AND ( sysdate between PAY.EFFECTIVE_START_DATE
      AND PAY.EFFECTIVE_END_DATE )
      AND ( PTP.PAYROLL_ID = PAY.PAYROLL_ID );
    RETURN (PAYROLL || '   ' || TO_CHAR(START_D
                  ,'YYYY/MM/DD') || '   ' || TO_CHAR(END_D
                  ,'YYYY/MM/DD'));
  END CF_PERIODFORMULA;

  FUNCTION GET_TIME_PERIODVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END GET_TIME_PERIODVALIDTRIGGER;

  FUNCTION CF_STATUS1FORMULA(TIMECARD_ID IN NUMBER) RETURN VARCHAR2 IS
    L_RETURN_CHAR VARCHAR2(1) := NULL;
    L_ERROR_MSG VARCHAR2(240) := NULL;
    CURSOR READ_ERRS IS
      SELECT
        ERRS.ERROR_MSG
      FROM
        HXT_ERRORS_X ERRS
      WHERE ERRS.TIM_ID = TIMECARD_ID;
  BEGIN
    OPEN READ_ERRS;
    IF READ_ERRS%ISOPEN THEN
      FETCH READ_ERRS
       INTO
         L_ERROR_MSG;
    END IF;
    IF READ_ERRS%FOUND THEN
      L_RETURN_CHAR := 'E';
    ELSE
      L_RETURN_CHAR := ' ';
    END IF;
    IF READ_ERRS%ISOPEN THEN
      CLOSE READ_ERRS;
    END IF;
    RETURN L_RETURN_CHAR;
  END CF_STATUS1FORMULA;

  FUNCTION CF_STATUS2FORMULA(TIMECARD_ID2 IN NUMBER) RETURN VARCHAR2 IS
    L_RETURN_CHAR VARCHAR2(1) := NULL;
    L_ERROR_MSG VARCHAR2(240) := NULL;
    CURSOR READ_ERRS IS
      SELECT
        ERRS.ERROR_MSG
      FROM
        HXT_ERRORS_X ERRS
      WHERE ERRS.TIM_ID = TIMECARD_ID2;
  BEGIN
    OPEN READ_ERRS;
    IF READ_ERRS%ISOPEN THEN
      FETCH READ_ERRS
       INTO
         L_ERROR_MSG;
    END IF;
    IF READ_ERRS%FOUND THEN
      L_RETURN_CHAR := 'E';
    ELSE
      L_RETURN_CHAR := ' ';
    END IF;
    IF READ_ERRS%ISOPEN THEN
      CLOSE READ_ERRS;
    END IF;
    RETURN L_RETURN_CHAR;
  END CF_STATUS2FORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;

END HXT_HXT970A_XMLP_PKG;

/
