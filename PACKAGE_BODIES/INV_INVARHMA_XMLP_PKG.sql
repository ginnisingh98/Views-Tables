--------------------------------------------------------
--  DDL for Package Body INV_INVARHMA_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."INV_INVARHMA_XMLP_PKG" AS
/* $Header: INVARHMAB.pls 120.2 2008/01/08 06:19:14 dwkrishn noship $ */
  FUNCTION C_FORMATTEDCURRENCYCODEFORMULA(CURRENCY_CODE IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      TEMP_C VARCHAR2(20);
    BEGIN
      TEMP_C := '(' || CURRENCY_CODE || ')';
      RETURN (TEMP_C);
    END;
    RETURN NULL;
  END C_FORMATTEDCURRENCYCODEFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
        LP_FROMDATE:=P_FROMDATE;
        LP_TODATE :=P_TODATE;
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(1
                   ,'Before Report: Init')*/NULL;
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    END;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION F_OUTTOLERANCEFLAGFORMULA(SERIAL_DETAIL IN NUMBER
                                    ,SERIAL_NUMBER IN VARCHAR2
                                    ,ADJ_QUANTITY IN NUMBER
                                    ,SYS_QUANTITY IN NUMBER
                                    ,NEG_TOL IN NUMBER
                                    ,POS_TOL IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF SERIAL_DETAIL = 2 AND SERIAL_NUMBER IS NOT NULL THEN
      IF (ADJ_QUANTITY = 0) OR (ADJ_QUANTITY IS NULL) THEN
        RETURN (0);
      ELSE
        RETURN (1);
      END IF;
    ELSE
      BEGIN
        IF (ADJ_QUANTITY = 0) OR (ADJ_QUANTITY IS NULL) THEN
          RETURN (0);
        ELSIF (ADJ_QUANTITY < 0) THEN
          IF (ABS(ADJ_QUANTITY) >= (SYS_QUANTITY * NEG_TOL / 100)) THEN
            RETURN (1);
          ELSE
            RETURN (0);
          END IF;
        ELSE
          IF (ABS(ADJ_QUANTITY) >= (SYS_QUANTITY * POS_TOL / 100)) THEN
            RETURN (1);
          ELSE
            RETURN (0);
          END IF;
        END IF;
      END;
    END IF;
    RETURN NULL;
  END F_OUTTOLERANCEFLAGFORMULA;

  FUNCTION F_ACCURACYPERCENTFORMULA(F_TOTALENTRIES IN NUMBER
                                   ,C_TOTALOUTTOLERANCE IN NUMBER) RETURN NUMBER IS
  BEGIN
    BEGIN
      /*SRW.REFERENCE(F_TOTALENTRIES)*/NULL;
      /*SRW.REFERENCE(C_TOTALOUTTOLERANCE)*/NULL;
      IF F_TOTALENTRIES = 0 THEN
        RETURN (100);
      ELSE
        RETURN (100 * (F_TOTALENTRIES - C_TOTALOUTTOLERANCE) / F_TOTALENTRIES);
      END IF;
    END;
    RETURN NULL;
  END F_ACCURACYPERCENTFORMULA;

  FUNCTION FS_ACCURACYPERCENTFORMULA(SS_TOTALENTRIES IN NUMBER
                                    ,SS_TOTALOUTTOLERANCE IN NUMBER) RETURN NUMBER IS
  BEGIN
    BEGIN
      /*SRW.REFERENCE(SS_TOTALENTRIES)*/NULL;
      /*SRW.REFERENCE(SS_TOTALOUTTOLERANCE)*/NULL;
      IF SS_TOTALENTRIES = 0 THEN
        RETURN (100);
      ELSE
        RETURN (100 * (SS_TOTALENTRIES - SS_TOTALOUTTOLERANCE) / SS_TOTALENTRIES);
      END IF;
    END;
    RETURN NULL;
  END FS_ACCURACYPERCENTFORMULA;

  FUNCTION SR_ACCURACYPERCENTFORMULA(SR_TOTALENTRIES IN NUMBER
                                    ,SR_TOTALOUTTOLERANCE IN NUMBER) RETURN NUMBER IS
  BEGIN
    BEGIN
      /*SRW.REFERENCE(SR_TOTALENTRIES)*/NULL;
      /*SRW.REFERENCE(SR_TOTALOUTTOLERANCE)*/NULL;
      IF SR_TOTALENTRIES = 0 THEN
        RETURN (100);
      ELSE
        RETURN (100 * (SR_TOTALENTRIES - SR_TOTALOUTTOLERANCE) / SR_TOTALENTRIES);
      END IF;
    END;
    RETURN NULL;
  END SR_ACCURACYPERCENTFORMULA;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION C_SERIAL_YES_NOFORMULA(CNT_SL_NO IN NUMBER) RETURN VARCHAR2 IS
    C_RETURN_VAL VARCHAR2(10);
    C_RETURN_NUMBER NUMBER(2);
  BEGIN
    IF NVL(CNT_SL_NO
       ,0) > 0 THEN
      C_RETURN_NUMBER := 1;
    ELSE
      C_RETURN_NUMBER := 2;
    END IF;
    SELECT
      MEANING
    INTO C_RETURN_VAL
    FROM
      MFG_LOOKUPS
    WHERE LOOKUP_TYPE = 'SYS_YES_NO'
      AND LOOKUP_CODE = C_RETURN_NUMBER;
    RETURN (C_RETURN_VAL);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN NULL;
    WHEN OTHERS THEN
      RETURN NULL;
  END C_SERIAL_YES_NOFORMULA;

  FUNCTION BEFOREPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BEFOREPFORM;

END INV_INVARHMA_XMLP_PKG;



/
