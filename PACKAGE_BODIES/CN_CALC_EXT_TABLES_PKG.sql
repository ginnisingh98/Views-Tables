--------------------------------------------------------
--  DDL for Package Body CN_CALC_EXT_TABLES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."CN_CALC_EXT_TABLES_PKG" as
/* $Header: cnextblb.pls 115.7 2002/11/21 21:02:45 hlchen ship $ */
procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_CALC_EXT_TABLE_ID in NUMBER,
  X_SCHEMA in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_INTERNAL_TABLE_ID in NUMBER,
  X_EXTERNAL_TABLE_ID in NUMBER,
  X_USED_FLAG in VARCHAR2,
  X_EXTERNAL_TABLE_NAME in VARCHAR2,
  X_ALIAS in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from CN_CALC_EXT_TABLES
    where CALC_EXT_TABLE_ID = X_CALC_EXT_TABLE_ID  ;

  l_calc_ext_table_id NUMBER;
BEGIN
   IF (x_calc_ext_table_id IS NULL) THEN
      SELECT cn_calc_ext_tables_s.NEXTVAL
	INTO l_calc_ext_table_id
	FROM dual;
    ELSE
      l_calc_ext_table_id := x_calc_ext_table_id;
   END IF;

  insert into CN_CALC_EXT_TABLES (
    CALC_EXT_TABLE_ID,
    NAME,
    DESCRIPTION,
    INTERNAL_TABLE_ID,
    EXTERNAL_TABLE_ID,
    USED_FLAG,
    EXTERNAL_TABLE_NAME,
    ALIAS,
    SCHEMA,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATE_LOGIN,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY
  ) VALUES (
    l_CALC_EXT_TABLE_ID,
    X_NAME,
    X_DESCRIPTION,
    X_INTERNAL_TABLE_ID,
    X_EXTERNAL_TABLE_ID,
    X_USED_FLAG,
    X_EXTERNAL_TABLE_NAME,
    X_ALIAS,
    X_SCHEMA,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATE_LOGIN,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_CALC_EXT_TABLE_ID in NUMBER,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_INTERNAL_TABLE_ID in NUMBER,
  X_EXTERNAL_TABLE_ID in NUMBER,
  X_USED_FLAG in VARCHAR2,
  X_EXTERNAL_TABLE_NAME in VARCHAR2,
  X_ALIAS in VARCHAR2,
  X_SCHEMA in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2
) is
  cursor c1 is select
      NAME,
      DESCRIPTION,
      INTERNAL_TABLE_ID,
      EXTERNAL_TABLE_ID,
      USED_FLAG,
      EXTERNAL_TABLE_NAME,
      ALIAS,
      SCHEMA,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15
    from CN_CALC_EXT_TABLES
    where CALC_EXT_TABLE_ID = X_CALC_EXT_TABLE_ID
    for update of CALC_EXT_TABLE_ID nowait;

  tlinfo c1%ROWTYPE;
BEGIN
   OPEN c1;
   FETCH c1 INTO tlinfo;

   if (    ((tlinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
            OR ((tlinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
       AND ((tlinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
            OR ((tlinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
       AND ((tlinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
            OR ((tlinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
       AND ((tlinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
            OR ((tlinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
       AND ((tlinfo.SCHEMA = X_SCHEMA)
            OR ((tlinfo.SCHEMA is null) AND (X_SCHEMA is null)))
       AND ((tlinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
            OR ((tlinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
       AND ((tlinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
            OR ((tlinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
       AND ((tlinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
            OR ((tlinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
       AND ((tlinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
            OR ((tlinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
       AND ((tlinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
            OR ((tlinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
       AND ((tlinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
            OR ((tlinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
       AND ((tlinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
            OR ((tlinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
       AND ((tlinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
            OR ((tlinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
       AND ((tlinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
            OR ((tlinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
       AND ((tlinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
            OR ((tlinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
       AND ((tlinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
            OR ((tlinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
       AND ((tlinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
            OR ((tlinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
       AND (tlinfo.NAME = X_NAME)
       AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
            OR ((tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))
       AND (tlinfo.INTERNAL_TABLE_ID = X_INTERNAL_TABLE_ID)
       AND (tlinfo.EXTERNAL_TABLE_ID = X_EXTERNAL_TABLE_ID)
       AND ((tlinfo.USED_FLAG = X_USED_FLAG)
            OR ((tlinfo.USED_FLAG is null) AND (X_USED_FLAG is null)))
       AND ((tlinfo.EXTERNAL_TABLE_NAME = X_EXTERNAL_TABLE_NAME)
            OR ((tlinfo.EXTERNAL_TABLE_NAME is null) AND (X_EXTERNAL_TABLE_NAME is null)))
       AND ((tlinfo.ALIAS = X_ALIAS)
            OR ((tlinfo.ALIAS is null) AND (X_ALIAS is null)))
   ) then
     null;
   ELSE
     CLOSE c1;
     fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
     app_exception.raise_exception;
   end if;
  CLOSE c1;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_CALC_EXT_TABLE_ID in NUMBER,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_INTERNAL_TABLE_ID in NUMBER,
  X_EXTERNAL_TABLE_ID in NUMBER,
  X_USED_FLAG in VARCHAR2,
  X_EXTERNAL_TABLE_NAME in VARCHAR2,
  X_ALIAS in VARCHAR2,
  X_SCHEMA in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update CN_CALC_EXT_TABLES set
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    SCHEMA = X_SCHEMA,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    NAME = X_NAME,
    DESCRIPTION = X_DESCRIPTION,
    INTERNAL_TABLE_ID = X_INTERNAL_TABLE_ID,
    EXTERNAL_TABLE_ID = X_EXTERNAL_TABLE_ID,
    USED_FLAG = X_USED_FLAG,
    EXTERNAL_TABLE_NAME = X_EXTERNAL_TABLE_NAME,
    ALIAS = X_ALIAS,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where CALC_EXT_TABLE_ID = X_CALC_EXT_TABLE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_CALC_EXT_TABLE_ID in NUMBER
) is
begin
  delete from CN_CALC_EXT_TABLES
  where CALC_EXT_TABLE_ID = X_CALC_EXT_TABLE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

end DELETE_ROW;


END cn_calc_ext_tables_pkg ;

/
