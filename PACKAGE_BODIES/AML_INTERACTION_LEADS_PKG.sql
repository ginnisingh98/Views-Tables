--------------------------------------------------------
--  DDL for Package Body AML_INTERACTION_LEADS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AML_INTERACTION_LEADS_PKG" AS
/* #$Header: amltitlb.pls 115.1 2003/09/18 17:25:33 solin ship $ */

AS_DEBUG_HIGH_ON boolean := FND_MSG_PUB.CHECK_MSG_LEVEL(FND_MSG_PUB.G_MSG_LVL_DEBUG_HIGH);
AS_DEBUG_LOW_ON boolean := FND_MSG_PUB.CHECK_MSG_LEVEL(FND_MSG_PUB.G_MSG_LVL_DEBUG_LOW);
AS_DEBUG_MEDIUM_ON boolean := FND_MSG_PUB.CHECK_MSG_LEVEL(FND_MSG_PUB.G_MSG_LVL_DEBUG_MEDIUM);
AS_DEBUG_ERROR_ON boolean := FND_MSG_PUB.CHECK_MSG_LEVEL(FND_MSG_PUB.G_MSG_LVL_ERROR);

PROCEDURE INSERT_ROW (
  px_INTERACTION_LEAD_ID    IN OUT NOCOPY NUMBER,
  p_INTERACTION_ID          IN NUMBER,
  p_IMPORT_INTERFACE_ID     IN NUMBER,
  p_SALES_LEAD_ID           IN NUMBER,
  p_CREATION_DATE           IN DATE,
  p_CREATED_BY              IN NUMBER,
  p_LAST_UPDATE_DATE        IN DATE,
  p_LAST_UPDATED_BY         IN NUMBER,
  p_LAST_UPDATE_LOGIN       IN NUMBER,
  p_REQUEST_ID              IN NUMBER,
  p_PROGRAM_APPLICATION_ID  IN NUMBER,
  p_PROGRAM_ID              IN NUMBER,
  p_PROGRAM_UPDATE_DATE     IN DATE,
  p_OBJECT_VERSION_NUMBER   IN NUMBER,
  p_SCORE                   IN NUMBER
) IS
   CURSOR C2 IS SELECT AML_INTERACTION_LEADS_S.nextval FROM sys.dual;
BEGIN
   IF (px_INTERACTION_LEAD_ID IS NULL) OR
      (px_INTERACTION_LEAD_ID = FND_API.G_MISS_NUM)
   THEN
       OPEN C2;
       FETCH C2 INTO px_INTERACTION_LEAD_ID;
       CLOSE C2;
   END IF;

  INSERT INTO AML_INTERACTION_LEADS (
      INTERACTION_LEAD_ID,
      INTERACTION_ID,
      IMPORT_INTERFACE_ID,
      SALES_LEAD_ID,
      CREATION_DATE,
      CREATED_BY,
      LAST_UPDATE_DATE,
      LAST_UPDATED_BY,
      LAST_UPDATE_LOGIN,
      REQUEST_ID,
      PROGRAM_APPLICATION_ID,
      PROGRAM_ID,
      PROGRAM_UPDATE_DATE,
      OBJECT_VERSION_NUMBER,
      SCORE
  ) VALUES (
      px_INTERACTION_LEAD_ID
     ,decode( p_INTERACTION_ID, FND_API.G_MISS_NUM, NULL, p_INTERACTION_ID)
     ,decode( p_IMPORT_INTERFACE_ID, FND_API.G_MISS_NUM, NULL, p_IMPORT_INTERFACE_ID)
     ,decode( p_SALES_LEAD_ID, FND_API.G_MISS_NUM, NULL, p_SALES_LEAD_ID)
     ,decode( p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE)
     ,decode( p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY)
     ,decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE)
     ,decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
     ,decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
     ,decode( p_REQUEST_ID, FND_API.G_MISS_NUM, NULL, p_REQUEST_ID)
     ,decode( p_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM, NULL, p_PROGRAM_APPLICATION_ID)
     ,decode( p_PROGRAM_ID, FND_API.G_MISS_NUM, NULL, p_PROGRAM_ID)
     ,decode( p_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_PROGRAM_UPDATE_DATE)
     ,1
     ,decode( p_SCORE, FND_API.G_MISS_NUM, NULL, p_SCORE)
  );

END INSERT_ROW;

PROCEDURE UPDATE_ROW (
  p_INTERACTION_LEAD_ID     IN NUMBER,
  p_INTERACTION_ID          IN NUMBER,
  p_IMPORT_INTERFACE_ID     IN NUMBER,
  p_SALES_LEAD_ID           IN NUMBER,
  p_CREATION_DATE           IN DATE,
  p_CREATED_BY              IN NUMBER,
  p_LAST_UPDATE_DATE        IN DATE,
  p_LAST_UPDATED_BY         IN NUMBER,
  p_LAST_UPDATE_LOGIN       IN NUMBER,
  p_REQUEST_ID              IN NUMBER,
  p_PROGRAM_APPLICATION_ID  IN NUMBER,
  p_PROGRAM_ID              IN NUMBER,
  p_PROGRAM_UPDATE_DATE     IN DATE,
  p_OBJECT_VERSION_NUMBER   IN NUMBER,
  p_SCORE                   IN NUMBER
) is
BEGIN
  update AML_INTERACTION_LEADS set
      INTERACTION_ID = decode( p_INTERACTION_ID, FND_API.G_MISS_NUM, INTERACTION_ID, p_INTERACTION_ID)
     ,IMPORT_INTERFACE_ID = decode( p_IMPORT_INTERFACE_ID, FND_API.G_MISS_NUM, IMPORT_INTERFACE_ID, p_IMPORT_INTERFACE_ID)
     ,SALES_LEAD_ID = decode( p_SALES_LEAD_ID, FND_API.G_MISS_NUM, SALES_LEAD_ID, p_SALES_LEAD_ID)
     ,LAST_UPDATE_DATE = decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, LAST_UPDATE_DATE, p_LAST_UPDATE_DATE)
     ,LAST_UPDATED_BY = decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, LAST_UPDATED_BY, p_LAST_UPDATED_BY)
     ,LAST_UPDATE_LOGIN = decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, LAST_UPDATE_LOGIN, p_LAST_UPDATE_LOGIN)
     ,REQUEST_ID = decode( p_REQUEST_ID, FND_API.G_MISS_NUM, REQUEST_ID, p_REQUEST_ID)
     ,PROGRAM_APPLICATION_ID = decode( p_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM, PROGRAM_APPLICATION_ID, p_PROGRAM_APPLICATION_ID)
     ,PROGRAM_ID = decode( p_PROGRAM_ID, FND_API.G_MISS_NUM, PROGRAM_ID, p_PROGRAM_ID)
     ,PROGRAM_UPDATE_DATE = decode( p_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, PROGRAM_UPDATE_DATE, p_PROGRAM_UPDATE_DATE)
     ,OBJECT_VERSION_NUMBER = decode( p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, OBJECT_VERSION_NUMBER, p_OBJECT_VERSION_NUMBER+1)
     ,SCORE = decode( p_SCORE, FND_API.G_MISS_NUM, SCORE, p_SCORE)
  where INTERACTION_LEAD_ID = p_INTERACTION_LEAD_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

END UPDATE_ROW;

PROCEDURE DELETE_ROW (
    p_INTERACTION_LEAD_ID IN NUMBER
) is
BEGIN
  delete from AML_INTERACTION_LEADS
  where INTERACTION_LEAD_ID = p_INTERACTION_LEAD_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

END DELETE_ROW;

PROCEDURE LOCK_ROW (
  p_INTERACTION_LEAD_ID     IN NUMBER,
  p_INTERACTION_ID          IN NUMBER,
  p_IMPORT_INTERFACE_ID     IN NUMBER,
  p_SALES_LEAD_ID           IN NUMBER,
  p_SCORE                   IN NUMBER
) IS
  cursor c is
    select INTERACTION_LEAD_ID, INTERACTION_ID, IMPORT_INTERFACE_ID,
           SALES_LEAD_ID, SCORE
    from AML_INTERACTION_LEADS
    where INTERACTION_LEAD_ID = p_INTERACTION_LEAD_ID
    for update of INTERACTION_LEAD_ID nowait;
  recinfo c%rowtype;

BEGIN
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
    if (
           (      Recinfo.INTERACTION_LEAD_ID = p_INTERACTION_LEAD_ID)
       AND (    ( Recinfo.INTERACTION_ID = p_INTERACTION_ID)
            OR (    ( Recinfo.INTERACTION_ID IS NULL )
                AND (  p_INTERACTION_ID IS NULL )))
       AND (    ( Recinfo.IMPORT_INTERFACE_ID = p_IMPORT_INTERFACE_ID)
            OR (    ( Recinfo.IMPORT_INTERFACE_ID IS NULL )
                AND (  p_IMPORT_INTERFACE_ID IS NULL )))
       AND (    ( Recinfo.SALES_LEAD_ID = p_SALES_LEAD_ID)
            OR (    ( Recinfo.SALES_LEAD_ID IS NULL )
                AND (  p_SALES_LEAD_ID IS NULL )))
       AND (    ( Recinfo.SCORE = p_SCORE)
            OR (    ( Recinfo.SCORE IS NULL )
                AND (  p_SCORE IS NULL )))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

END LOCK_ROW;

END AML_INTERACTION_LEADS_PKG;

/
