--------------------------------------------------------
--  DDL for Package Body AR_BPA_CONTENT_AREAS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AR_BPA_CONTENT_AREAS_PKG" as
/* $Header: ARBPCNTB.pls 120.2 2005/10/30 04:13:14 appldev noship $ */
procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_CONTENT_AREA_ID in NUMBER,
  X_DISPLAY_LEVEL in VARCHAR2,
  X_CONTENT_TYPE in NUMBER,
  X_CONTENT_ORIENTATION in NUMBER,
  X_TEMPLATE_ID in NUMBER,
  X_CONTENT_STYLE_ID in NUMBER,
  X_ITEM_ID in NUMBER,
  X_URL_ID in NUMBER,
  X_DISPLAY_SEQUENCE in NUMBER,
  X_CONTENT_AREA_WIDTH in VARCHAR2,
  X_CONTENT_AREA_LEFT_SPACE in NUMBER,
  X_CONTENT_AREA_RIGHT_SPACE in NUMBER,
  X_CONTENT_AREA_TOP_SPACE in NUMBER,
  X_CONTENT_AREA_BOTTOM_SPACE in NUMBER,
  X_CONTENT_COUNT in NUMBER,
  X_LINE_REGION_FLAG in VARCHAR2,
  X_ITEM_LABEL_STYLE in VARCHAR2,
  X_CONTENT_DISP_PROMPT_STYLE in VARCHAR2,
  X_ITEM_VALUE_STYLE in VARCHAR2,
  X_INVOICE_LINE_TYPE in VARCHAR2,
  X_AREA_CODE in VARCHAR2,
  X_PARENT_AREA_CODE in VARCHAR2,
  X_ITEM_COLUMN_WIDTH in NUMBER,
  X_CONTENT_AREA_NAME in VARCHAR2,
  X_CONTENT_DISPLAY_PROMPT in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from AR_BPA_CONTENT_AREAS_B
    where CONTENT_AREA_ID = X_CONTENT_AREA_ID
    ;
begin
  insert into AR_BPA_CONTENT_AREAS_B (
    CONTENT_AREA_ID,
    DISPLAY_LEVEL,
    CONTENT_TYPE,
    CONTENT_ORIENTATION,
    TEMPLATE_ID,
    CONTENT_STYLE_ID,
    ITEM_ID,
    URL_ID,
    DISPLAY_SEQUENCE,
    CONTENT_AREA_WIDTH,
    CONTENT_AREA_LEFT_SPACE,
    CONTENT_AREA_RIGHT_SPACE,
    CONTENT_AREA_TOP_SPACE,
    CONTENT_AREA_BOTTOM_SPACE,
    CONTENT_COUNT,
    LINE_REGION_FLAG,
    ITEM_LABEL_STYLE,
    CONTENT_DISP_PROMPT_STYLE,
    ITEM_VALUE_STYLE,
    INVOICE_LINE_TYPE,
    AREA_CODE,
    PARENT_AREA_CODE,
    ITEM_COLUMN_WIDTH,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_CONTENT_AREA_ID,
    X_DISPLAY_LEVEL,
    X_CONTENT_TYPE,
    X_CONTENT_ORIENTATION,
    X_TEMPLATE_ID,
    X_CONTENT_STYLE_ID,
    X_ITEM_ID,
    X_URL_ID,
    X_DISPLAY_SEQUENCE,
    X_CONTENT_AREA_WIDTH,
    X_CONTENT_AREA_LEFT_SPACE,
    X_CONTENT_AREA_RIGHT_SPACE,
    X_CONTENT_AREA_TOP_SPACE,
    X_CONTENT_AREA_BOTTOM_SPACE,
    X_CONTENT_COUNT,
    X_LINE_REGION_FLAG,
    X_ITEM_LABEL_STYLE,
    X_CONTENT_DISP_PROMPT_STYLE,
    X_ITEM_VALUE_STYLE,
    X_INVOICE_LINE_TYPE,
    X_AREA_CODE,
    X_PARENT_AREA_CODE,
    X_ITEM_COLUMN_WIDTH,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  insert into AR_BPA_CONTENT_AREAS_TL (
    CONTENT_AREA_ID,
    CONTENT_AREA_NAME,
    CONTENT_DISPLAY_PROMPT,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_CONTENT_AREA_ID,
    X_CONTENT_AREA_NAME,
    X_CONTENT_DISPLAY_PROMPT,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from AR_BPA_CONTENT_AREAS_TL T
    where T.CONTENT_AREA_ID = X_CONTENT_AREA_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_CONTENT_AREA_ID in NUMBER,
  X_DISPLAY_LEVEL in VARCHAR2,
  X_CONTENT_TYPE in NUMBER,
  X_CONTENT_ORIENTATION in NUMBER,
  X_TEMPLATE_ID in NUMBER,
  X_CONTENT_STYLE_ID in NUMBER,
  X_ITEM_ID in NUMBER,
  X_URL_ID in NUMBER,
  X_DISPLAY_SEQUENCE in NUMBER,
  X_CONTENT_AREA_WIDTH in VARCHAR2,
  X_CONTENT_AREA_LEFT_SPACE in NUMBER,
  X_CONTENT_AREA_RIGHT_SPACE in NUMBER,
  X_CONTENT_AREA_TOP_SPACE in NUMBER,
  X_CONTENT_AREA_BOTTOM_SPACE in NUMBER,
  X_CONTENT_COUNT in NUMBER,
  X_LINE_REGION_FLAG in VARCHAR2,
  X_ITEM_LABEL_STYLE in VARCHAR2,
  X_CONTENT_DISP_PROMPT_STYLE in VARCHAR2,
  X_ITEM_VALUE_STYLE in VARCHAR2,
  X_INVOICE_LINE_TYPE in VARCHAR2,
  X_AREA_CODE in VARCHAR2,
  X_PARENT_AREA_CODE in VARCHAR2,
  X_ITEM_COLUMN_WIDTH in NUMBER,
  X_CONTENT_AREA_NAME in VARCHAR2,
  X_CONTENT_DISPLAY_PROMPT in VARCHAR2
) is
  cursor c is select
      DISPLAY_LEVEL,
      CONTENT_TYPE,
      CONTENT_ORIENTATION,
      TEMPLATE_ID,
      CONTENT_STYLE_ID,
      ITEM_ID,
      URL_ID,
      DISPLAY_SEQUENCE,
      CONTENT_AREA_WIDTH,
      CONTENT_AREA_LEFT_SPACE,
      CONTENT_AREA_RIGHT_SPACE,
      CONTENT_AREA_TOP_SPACE,
      CONTENT_AREA_BOTTOM_SPACE,
      CONTENT_COUNT,
      LINE_REGION_FLAG,
      ITEM_LABEL_STYLE,
      CONTENT_DISP_PROMPT_STYLE,
      ITEM_VALUE_STYLE,
      INVOICE_LINE_TYPE,
      AREA_CODE,
      PARENT_AREA_CODE,
      ITEM_COLUMN_WIDTH
    from AR_BPA_CONTENT_AREAS_B
    where CONTENT_AREA_ID = X_CONTENT_AREA_ID
    for update of CONTENT_AREA_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      CONTENT_AREA_NAME,
      CONTENT_DISPLAY_PROMPT,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from AR_BPA_CONTENT_AREAS_TL
    where CONTENT_AREA_ID = X_CONTENT_AREA_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of CONTENT_AREA_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    (recinfo.DISPLAY_LEVEL = X_DISPLAY_LEVEL)
      AND (recinfo.CONTENT_TYPE = X_CONTENT_TYPE)
      AND ((recinfo.CONTENT_ORIENTATION = X_CONTENT_ORIENTATION)
           OR ((recinfo.CONTENT_ORIENTATION is null) AND (X_CONTENT_ORIENTATION is null)))
      AND (recinfo.TEMPLATE_ID = X_TEMPLATE_ID)
      AND ((recinfo.CONTENT_STYLE_ID = X_CONTENT_STYLE_ID)
           OR ((recinfo.CONTENT_STYLE_ID is null) AND (X_CONTENT_STYLE_ID is null)))
      AND ((recinfo.ITEM_ID = X_ITEM_ID)
           OR ((recinfo.ITEM_ID is null) AND (X_ITEM_ID is null)))
      AND ((recinfo.URL_ID = X_URL_ID)
           OR ((recinfo.URL_ID is null) AND (X_URL_ID is null)))
      AND (recinfo.DISPLAY_SEQUENCE = X_DISPLAY_SEQUENCE)
      AND ((recinfo.CONTENT_AREA_WIDTH = X_CONTENT_AREA_WIDTH)
           OR ((recinfo.CONTENT_AREA_WIDTH is null) AND (X_CONTENT_AREA_WIDTH is null)))
      AND ((recinfo.CONTENT_AREA_LEFT_SPACE = X_CONTENT_AREA_LEFT_SPACE)
           OR ((recinfo.CONTENT_AREA_LEFT_SPACE is null) AND (X_CONTENT_AREA_LEFT_SPACE is null)))
      AND ((recinfo.CONTENT_AREA_RIGHT_SPACE = X_CONTENT_AREA_RIGHT_SPACE)
           OR ((recinfo.CONTENT_AREA_RIGHT_SPACE is null) AND (X_CONTENT_AREA_RIGHT_SPACE is null)))
      AND ((recinfo.CONTENT_AREA_TOP_SPACE = X_CONTENT_AREA_TOP_SPACE)
           OR ((recinfo.CONTENT_AREA_TOP_SPACE is null) AND (X_CONTENT_AREA_TOP_SPACE is null)))
      AND ((recinfo.CONTENT_AREA_BOTTOM_SPACE = X_CONTENT_AREA_BOTTOM_SPACE)
           OR ((recinfo.CONTENT_AREA_BOTTOM_SPACE is null) AND (X_CONTENT_AREA_BOTTOM_SPACE is null)))
      AND ((recinfo.CONTENT_COUNT = X_CONTENT_COUNT)
           OR ((recinfo.CONTENT_COUNT is null) AND (X_CONTENT_COUNT is null)))
      AND ((recinfo.LINE_REGION_FLAG = X_LINE_REGION_FLAG)
           OR ((recinfo.LINE_REGION_FLAG is null) AND (X_LINE_REGION_FLAG is null)))
      AND ((recinfo.ITEM_LABEL_STYLE = X_ITEM_LABEL_STYLE)
           OR ((recinfo.ITEM_LABEL_STYLE is null) AND (X_ITEM_LABEL_STYLE is null)))
      AND ((recinfo.CONTENT_DISP_PROMPT_STYLE = X_CONTENT_DISP_PROMPT_STYLE)
           OR ((recinfo.CONTENT_DISP_PROMPT_STYLE is null) AND (X_CONTENT_DISP_PROMPT_STYLE is null)))
      AND ((recinfo.ITEM_VALUE_STYLE = X_ITEM_VALUE_STYLE)
           OR ((recinfo.ITEM_VALUE_STYLE is null) AND (X_ITEM_VALUE_STYLE is null)))
      AND ((recinfo.INVOICE_LINE_TYPE = X_INVOICE_LINE_TYPE)
           OR ((recinfo.INVOICE_LINE_TYPE is null) AND (X_INVOICE_LINE_TYPE is null)))
      AND ((recinfo.AREA_CODE = X_AREA_CODE)
           OR ((recinfo.AREA_CODE is null) AND (X_AREA_CODE is null)))
      AND ((recinfo.PARENT_AREA_CODE = X_PARENT_AREA_CODE)
           OR ((recinfo.PARENT_AREA_CODE is null) AND (X_PARENT_AREA_CODE is null)))
      AND ((recinfo.ITEM_COLUMN_WIDTH = X_ITEM_COLUMN_WIDTH)
           OR ((recinfo.ITEM_COLUMN_WIDTH is null) AND (X_ITEM_COLUMN_WIDTH is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    ((tlinfo.CONTENT_AREA_NAME = X_CONTENT_AREA_NAME)
               OR ((tlinfo.CONTENT_AREA_NAME is null) AND (X_CONTENT_AREA_NAME is null)))
          AND ((tlinfo.CONTENT_DISPLAY_PROMPT = X_CONTENT_DISPLAY_PROMPT)
               OR ((tlinfo.CONTENT_DISPLAY_PROMPT is null) AND (X_CONTENT_DISPLAY_PROMPT is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_CONTENT_AREA_ID in NUMBER,
  X_DISPLAY_LEVEL in VARCHAR2,
  X_CONTENT_TYPE in NUMBER,
  X_CONTENT_ORIENTATION in NUMBER,
  X_TEMPLATE_ID in NUMBER,
  X_CONTENT_STYLE_ID in NUMBER,
  X_ITEM_ID in NUMBER,
  X_URL_ID in NUMBER,
  X_DISPLAY_SEQUENCE in NUMBER,
  X_CONTENT_AREA_WIDTH in VARCHAR2,
  X_CONTENT_AREA_LEFT_SPACE in NUMBER,
  X_CONTENT_AREA_RIGHT_SPACE in NUMBER,
  X_CONTENT_AREA_TOP_SPACE in NUMBER,
  X_CONTENT_AREA_BOTTOM_SPACE in NUMBER,
  X_CONTENT_COUNT in NUMBER,
  X_LINE_REGION_FLAG in VARCHAR2,
  X_ITEM_LABEL_STYLE in VARCHAR2,
  X_CONTENT_DISP_PROMPT_STYLE in VARCHAR2,
  X_ITEM_VALUE_STYLE in VARCHAR2,
  X_INVOICE_LINE_TYPE in VARCHAR2,
  X_AREA_CODE in VARCHAR2,
  X_PARENT_AREA_CODE in VARCHAR2,
  X_ITEM_COLUMN_WIDTH in NUMBER,
  X_CONTENT_AREA_NAME in VARCHAR2,
  X_CONTENT_DISPLAY_PROMPT in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update AR_BPA_CONTENT_AREAS_B set
    DISPLAY_LEVEL = X_DISPLAY_LEVEL,
    CONTENT_TYPE = X_CONTENT_TYPE,
    CONTENT_ORIENTATION = X_CONTENT_ORIENTATION,
    TEMPLATE_ID = X_TEMPLATE_ID,
    CONTENT_STYLE_ID = X_CONTENT_STYLE_ID,
    ITEM_ID = X_ITEM_ID,
    URL_ID = X_URL_ID,
    DISPLAY_SEQUENCE = X_DISPLAY_SEQUENCE,
    CONTENT_AREA_WIDTH = X_CONTENT_AREA_WIDTH,
    CONTENT_AREA_LEFT_SPACE = X_CONTENT_AREA_LEFT_SPACE,
    CONTENT_AREA_RIGHT_SPACE = X_CONTENT_AREA_RIGHT_SPACE,
    CONTENT_AREA_TOP_SPACE = X_CONTENT_AREA_TOP_SPACE,
    CONTENT_AREA_BOTTOM_SPACE = X_CONTENT_AREA_BOTTOM_SPACE,
    CONTENT_COUNT = X_CONTENT_COUNT,
    LINE_REGION_FLAG = X_LINE_REGION_FLAG,
    ITEM_LABEL_STYLE = X_ITEM_LABEL_STYLE,
    CONTENT_DISP_PROMPT_STYLE = X_CONTENT_DISP_PROMPT_STYLE,
    ITEM_VALUE_STYLE = X_ITEM_VALUE_STYLE,
    INVOICE_LINE_TYPE = X_INVOICE_LINE_TYPE,
    AREA_CODE = X_AREA_CODE,
    PARENT_AREA_CODE = X_PARENT_AREA_CODE,
    ITEM_COLUMN_WIDTH = X_ITEM_COLUMN_WIDTH,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where CONTENT_AREA_ID = X_CONTENT_AREA_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update AR_BPA_CONTENT_AREAS_TL set
    CONTENT_AREA_NAME = X_CONTENT_AREA_NAME,
    CONTENT_DISPLAY_PROMPT = X_CONTENT_DISPLAY_PROMPT,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where CONTENT_AREA_ID = X_CONTENT_AREA_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_CONTENT_AREA_ID in NUMBER
) is
begin
  delete from AR_BPA_CONTENT_AREAS_TL
  where CONTENT_AREA_ID = X_CONTENT_AREA_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from AR_BPA_CONTENT_AREAS_B
  where CONTENT_AREA_ID = X_CONTENT_AREA_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from AR_BPA_CONTENT_AREAS_TL T
  where not exists
    (select NULL
    from AR_BPA_CONTENT_AREAS_B B
    where B.CONTENT_AREA_ID = T.CONTENT_AREA_ID
    );

  update AR_BPA_CONTENT_AREAS_TL T set (
      CONTENT_AREA_NAME,
      CONTENT_DISPLAY_PROMPT
    ) = (select
      B.CONTENT_AREA_NAME,
      B.CONTENT_DISPLAY_PROMPT
    from AR_BPA_CONTENT_AREAS_TL B
    where B.CONTENT_AREA_ID = T.CONTENT_AREA_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.CONTENT_AREA_ID,
      T.LANGUAGE
  ) in (select
      SUBT.CONTENT_AREA_ID,
      SUBT.LANGUAGE
    from AR_BPA_CONTENT_AREAS_TL SUBB, AR_BPA_CONTENT_AREAS_TL SUBT
    where SUBB.CONTENT_AREA_ID = SUBT.CONTENT_AREA_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.CONTENT_AREA_NAME <> SUBT.CONTENT_AREA_NAME
      or (SUBB.CONTENT_AREA_NAME is null and SUBT.CONTENT_AREA_NAME is not null)
      or (SUBB.CONTENT_AREA_NAME is not null and SUBT.CONTENT_AREA_NAME is null)
      or SUBB.CONTENT_DISPLAY_PROMPT <> SUBT.CONTENT_DISPLAY_PROMPT
      or (SUBB.CONTENT_DISPLAY_PROMPT is null and SUBT.CONTENT_DISPLAY_PROMPT is not null)
      or (SUBB.CONTENT_DISPLAY_PROMPT is not null and SUBT.CONTENT_DISPLAY_PROMPT is null)
  ));

  insert into AR_BPA_CONTENT_AREAS_TL (
    CONTENT_AREA_ID,
    CONTENT_AREA_NAME,
    CONTENT_DISPLAY_PROMPT,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select /*+ ORDERED */
    B.CONTENT_AREA_ID,
    B.CONTENT_AREA_NAME,
    B.CONTENT_DISPLAY_PROMPT,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from AR_BPA_CONTENT_AREAS_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from AR_BPA_CONTENT_AREAS_TL T
    where T.CONTENT_AREA_ID = B.CONTENT_AREA_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

procedure TRANSLATE_ROW (
  X_CONTENT_AREA_ID in NUMBER,
  X_CONTENT_AREA_NAME in VARCHAR2,
  X_CONTENT_DISPLAY_PROMPT in VARCHAR2,
  X_OWNER in VARCHAR2) IS
begin

    update AR_BPA_CONTENT_AREAS_TL
      set CONTENT_AREA_NAME = X_CONTENT_AREA_NAME,
          CONTENT_DISPLAY_PROMPT = X_CONTENT_DISPLAY_PROMPT,
          source_lang = userenv('LANG'),
          last_update_date = sysdate,
          last_updated_by = decode(X_OWNER, 'SEED', 1, 0),
          last_update_login = 0
    where CONTENT_AREA_ID = X_CONTENT_AREA_ID
    and   userenv('LANG') in (language, source_lang);

end TRANSLATE_ROW;

procedure LOAD_ROW (
        X_AREA_CODE                      IN VARCHAR2,
        X_CONTENT_AREA_BOTTOM_SPACE      IN NUMBER,
        X_CONTENT_AREA_ID                IN NUMBER,
        X_CONTENT_AREA_LEFT_SPACE        IN NUMBER,
        X_CONTENT_AREA_NAME              IN VARCHAR2,
        X_CONTENT_AREA_RIGHT_SPACE       IN NUMBER,
        X_CONTENT_AREA_TOP_SPACE         IN NUMBER,
        X_CONTENT_AREA_WIDTH             IN VARCHAR2,
        X_CONTENT_COUNT                  IN NUMBER,
        X_CONTENT_DISPLAY_PROMPT         IN VARCHAR2,
        X_CONTENT_DISP_PROMPT_STYLE      IN VARCHAR2,
        X_CONTENT_ORIENTATION            IN NUMBER,
        X_CONTENT_STYLE_ID               IN NUMBER,
        X_CONTENT_TYPE                   IN NUMBER,
        X_DISPLAY_LEVEL                  IN VARCHAR2,
        X_DISPLAY_SEQUENCE               IN NUMBER,
        X_INVOICE_LINE_TYPE              IN VARCHAR2,
        X_ITEM_ID                        IN NUMBER,
        X_ITEM_LABEL_STYLE               IN VARCHAR2,
        X_ITEM_VALUE_STYLE               IN VARCHAR2,
        X_LINE_REGION_FLAG               IN VARCHAR2,
        X_PARENT_AREA_CODE               IN VARCHAR2,
        X_TEMPLATE_ID                    IN NUMBER,
        X_URL_ID                         IN NUMBER,
        X_ITEM_COLUMN_WIDTH              IN NUMBER,
        X_OWNER                 IN VARCHAR2
) IS
  begin
   declare
     user_id            number := 0;
     row_id             varchar2(64);
   begin
     if (X_OWNER = 'SEED') then
        user_id := 1;
    end if;

    AR_BPA_CONTENT_AREAS_PKG.UPDATE_ROW (
		X_CONTENT_AREA_ID 		=> X_CONTENT_AREA_ID,
		X_ITEM_LABEL_STYLE 		=> X_ITEM_LABEL_STYLE,
		X_ITEM_VALUE_STYLE 		=> X_ITEM_VALUE_STYLE,
		X_CONTENT_DISP_PROMPT_STYLE 	=> X_CONTENT_DISP_PROMPT_STYLE,
		X_INVOICE_LINE_TYPE 		=> X_INVOICE_LINE_TYPE,
		X_AREA_CODE 			=> X_AREA_CODE,
		X_PARENT_AREA_CODE 		=> X_PARENT_AREA_CODE,
		X_LINE_REGION_FLAG 		=> X_LINE_REGION_FLAG,
		X_CONTENT_COUNT 		=> X_CONTENT_COUNT,
		X_CONTENT_AREA_RIGHT_SPACE 	=> X_CONTENT_AREA_RIGHT_SPACE,
		X_CONTENT_AREA_TOP_SPACE 	=> X_CONTENT_AREA_TOP_SPACE,
		X_CONTENT_AREA_BOTTOM_SPACE 	=> X_CONTENT_AREA_BOTTOM_SPACE,
		X_DISPLAY_LEVEL 		=> X_DISPLAY_LEVEL,
		X_CONTENT_TYPE 			=> X_CONTENT_TYPE,
		X_CONTENT_ORIENTATION 		=> X_CONTENT_ORIENTATION,
		X_TEMPLATE_ID 			=> X_TEMPLATE_ID,
		X_CONTENT_STYLE_ID 		=> X_CONTENT_STYLE_ID,
		X_ITEM_ID 			=> X_ITEM_ID,
		X_URL_ID 			=> X_URL_ID,
		X_DISPLAY_SEQUENCE 		=> X_DISPLAY_SEQUENCE,
		X_CONTENT_AREA_WIDTH 		=> X_CONTENT_AREA_WIDTH,
		X_CONTENT_AREA_LEFT_SPACE 	=> X_CONTENT_AREA_LEFT_SPACE,
		X_CONTENT_AREA_NAME 		=> X_CONTENT_AREA_NAME,
		X_CONTENT_DISPLAY_PROMPT 	=> X_CONTENT_DISPLAY_PROMPT,
            X_ITEM_COLUMN_WIDTH           => X_ITEM_COLUMN_WIDTH,
		X_LAST_UPDATE_DATE 	=> sysdate,
		X_LAST_UPDATED_BY 	=> user_id,
		X_LAST_UPDATE_LOGIN 	=> 0);
 exception
       when NO_DATA_FOUND then
           AR_BPA_CONTENT_AREAS_PKG.INSERT_ROW (
		X_ROWID 			=> row_id,
		X_CONTENT_AREA_ID 		=> X_CONTENT_AREA_ID,
		X_ITEM_LABEL_STYLE 		=> X_ITEM_LABEL_STYLE,
		X_ITEM_VALUE_STYLE 		=> X_ITEM_VALUE_STYLE,
		X_CONTENT_DISP_PROMPT_STYLE 	=> X_CONTENT_DISP_PROMPT_STYLE,
		X_INVOICE_LINE_TYPE 		=> X_INVOICE_LINE_TYPE,
		X_AREA_CODE 			=> X_AREA_CODE,
		X_PARENT_AREA_CODE 		=> X_PARENT_AREA_CODE,
		X_LINE_REGION_FLAG 		=> X_LINE_REGION_FLAG,
		X_CONTENT_COUNT 		=> X_CONTENT_COUNT,
		X_CONTENT_AREA_RIGHT_SPACE 	=> X_CONTENT_AREA_RIGHT_SPACE,
		X_CONTENT_AREA_TOP_SPACE 	=> X_CONTENT_AREA_TOP_SPACE,
		X_CONTENT_AREA_BOTTOM_SPACE 	=> X_CONTENT_AREA_BOTTOM_SPACE,
		X_DISPLAY_LEVEL 		=> X_DISPLAY_LEVEL,
		X_CONTENT_TYPE 			=> X_CONTENT_TYPE,
		X_CONTENT_ORIENTATION 		=> X_CONTENT_ORIENTATION,
		X_TEMPLATE_ID 			=> X_TEMPLATE_ID,
		X_CONTENT_STYLE_ID 		=> X_CONTENT_STYLE_ID,
		X_ITEM_ID 			=> X_ITEM_ID,
		X_URL_ID 			=> X_URL_ID,
		X_DISPLAY_SEQUENCE 		=> X_DISPLAY_SEQUENCE,
		X_CONTENT_AREA_WIDTH 		=> X_CONTENT_AREA_WIDTH,
		X_CONTENT_AREA_LEFT_SPACE 	=> X_CONTENT_AREA_LEFT_SPACE,
		X_CONTENT_AREA_NAME 		=> X_CONTENT_AREA_NAME,
		X_CONTENT_DISPLAY_PROMPT 	=> X_CONTENT_DISPLAY_PROMPT,
            X_ITEM_COLUMN_WIDTH           => X_ITEM_COLUMN_WIDTH,
		X_CREATION_DATE 	=> sysdate,
                X_CREATED_BY 		=> user_id,
                X_LAST_UPDATE_DATE 	=> sysdate,
                X_LAST_UPDATED_BY 	=> user_id,
                X_LAST_UPDATE_LOGIN 	=> 0);
    end;
end LOAD_ROW;

end AR_BPA_CONTENT_AREAS_PKG;

/
