--------------------------------------------------------
--  DDL for Package Body XTR_XTRAUNCL_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XTR_XTRAUNCL_XMLP_PKG" AS
/* $Header: XTRAUNCLB.pls 120.1 2007/12/28 12:41:28 npannamp noship $ */
  FUNCTION CF_SET_PARAFORMULA RETURN VARCHAR2 IS
  BEGIN
    SELECT
      SUBSTR(USER
            ,1
            ,10)
    INTO
      CP_PARA
    FROM
      DUAL;
    RETURN (CP_PARA);
  END CF_SET_PARAFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    L_DMMY_NUM NUMBER;
    L_MESSAGE FND_NEW_MESSAGES.MESSAGE_TEXT%TYPE;
    CURSOR GET_LANGUAGE_DESC IS
      SELECT
        ITEM_NAME,
        SUBSTR(TEXT
              ,1
              ,100) LANG_NAME
      FROM
        XTR_SYS_LANGUAGES_VL
      WHERE MODULE_NAME = 'XTRAUNCL';
  BEGIN
    BEGIN
      COMPANY_NAME_HEADER := CEP_STANDARD.GET_WINDOW_SESSION_TITLE;
    EXCEPTION
      WHEN OTHERS THEN
        FND_MESSAGE.SET_NAME('XTR'
                            ,'XTR_LOOKUP_ERR');
        L_MESSAGE := FND_MESSAGE.GET;
        RAISE_APPLICATION_ERROR(-20101
                               ,NULL);
    END;
    IF (P_DISPLAY_DEBUG = 'Y') THEN
      NULL;
    END IF;
    FOR c IN GET_LANGUAGE_DESC LOOP
      IF C.ITEM_NAME = 'Z1CANCELLED_BY' THEN
        Z1CANCELLED_BY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1CANCELLED_FROM' THEN
        Z1CANCELLED_FROM := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1COMPANY' THEN
        Z1COMPANY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1DEAL_TYPE' THEN
        Z1DEAL_TYPE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PARAMETERS' THEN
        Z1PARAMETERS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1TO' THEN
        Z1TO := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CANCELLED_ON' THEN
        Z2CANCELLED_ON := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CCY' THEN
        Z2CCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CPARTY' THEN
        Z2CPARTY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CREATED_BY' THEN
        Z2CREATED_BY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CREATED_ON' THEN
        Z2CREATED_ON := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2DEAL_REF' THEN
        Z2DEAL_REF := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2END_OF_REPORT' THEN
        Z2END_OF_REPORT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PRODUCT' THEN
        Z2PRODUCT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SUBTYPE' THEN
        Z2SUBTYPE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2TRANS_REF' THEN
        Z2TRANS_REF := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2TYPE' THEN
        Z2TYPE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PAGE' THEN
        Z2PAGE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'REPORT_DATE' THEN
        REPORT_DATE := C.LANG_NAME;
      END IF;
    END LOOP;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
    CURSOR USER_DT IS
      SELECT
        USER_DEAL_TYPE
      FROM
        XTR_DEAL_TYPES
      WHERE DEAL_TYPE = P_DEAL_TYPE;
  BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;

    IF P_DEAL_TYPE IS NOT NULL THEN
      OPEN USER_DT;
      FETCH USER_DT
       INTO
         P_USER_DEAL_TYPE;
      CLOSE USER_DT;
    END IF;
    /*P_CANCELLED_FROM := TO_CHAR(TO_DATE(P_CANCELLED_FROM
                                       ,'YYYY/MM/DD HH24:MI:SS')
                               ,'DD-MON-YYYY');
    P_CANCELLED_TO := TO_CHAR(TO_DATE(P_CANCELLED_TO
                                     ,'YYYY/MM/DD HH24:MI:SS')
                             ,'DD-MON-YYYY');*/
    P_CANCELLED_FROM_T := TO_CHAR(TO_DATE(P_CANCELLED_FROM
                                       ,'YYYY/MM/DD HH24:MI:SS')
                               ,'DD-MON-YYYY');
    P_CANCELLED_TO_T := TO_CHAR(TO_DATE(P_CANCELLED_TO
                                     ,'YYYY/MM/DD HH24:MI:SS')
                             ,'DD-MON-YYYY');
    COMP_CODE2 := P_COMPANY;
    CANCELLED_BY2 := P_CANCELLED_BY;
    DEAL_TYPE2 := P_DEAL_TYPE;
    CANCEL_FROM2 := P_CANCELLED_FROM_T;
    CANCEL_TO2 := P_CANCELLED_TO_T;
    SELECT
      CP.USER_CONCURRENT_PROGRAM_NAME
    INTO
      REPORT_SHORT_NAME2
    FROM
      FND_CONCURRENT_PROGRAMS_VL CP,
      FND_CONCURRENT_REQUESTS CR
    WHERE CR.REQUEST_ID = P_CONC_REQUEST_ID
      AND CP.APPLICATION_ID = CR.PROGRAM_APPLICATION_ID
      AND CP.CONCURRENT_PROGRAM_ID = CR.CONCURRENT_PROGRAM_ID;
      REPORT_SHORT_NAME2 := substr(REPORT_SHORT_NAME2,1,instr(REPORT_SHORT_NAME2,' (XML)'));

    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION CP_PARA_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARA;
  END CP_PARA_P;

END XTR_XTRAUNCL_XMLP_PKG;


/
