--------------------------------------------------------
--  DDL for Package Body EAM_EAMMIPCK_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."EAM_EAMMIPCK_XMLP_PKG" AS
/* $Header: EAMMIPCKB.pls 120.0 2007/12/24 15:35:54 krreddy noship $ */
  FUNCTION CF_REASONFORMULA RETURN CHAR IS
  BEGIN
    RETURN ' ';
  END CF_REASONFORMULA;

  FUNCTION CF_QTY_PICKEDFORMULA RETURN CHAR IS
  BEGIN
    RETURN ' ';
  END CF_QTY_PICKEDFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    P_ORG_ID_V:=P_ORG_IDVALIDTRIGGER;
    IF (P_ORDER_BY_USED = 1) THEN
      P_ORDER_BY := 'mrl.request_number';
    ELSE
      P_ORDER_BY := 'mrl.date_required desc';
    END IF;
    BEGIN
      SELECT
        MEANING
      INTO P_ORDER_BY_DISP
      FROM
        MFG_LOOKUPS
      WHERE LOOKUP_TYPE = 'EAM_MATERIAL_ISSUE_SORT_BY'
        AND LOOKUP_CODE = P_ORDER_BY_USED;
    EXCEPTION
      WHEN OTHERS THEN
        NULL;
    END;
    IF (P_DATE_REQUIRED_START IS NOT NULL) THEN
      IF (P_DATE_REQUIRED_END IS NOT NULL) THEN
        P_WHERE_CLAUSE := P_WHERE_CLAUSE || ' AND mrl.date_required BETWEEN ''' || P_DATE_REQUIRED_START || ''' AND  ''' || P_DATE_REQUIRED_END || '''';
      ELSE
        P_WHERE_CLAUSE := P_WHERE_CLAUSE || ' AND mrl.date_required >=''' || P_DATE_REQUIRED_START || '''';
      END IF;
    END IF;
    IF (P_REQUEST_NUMBER_START IS NOT NULL) THEN
      IF (P_REQUEST_NUMBER_END IS NOT NULL) THEN
        P_WHERE_CLAUSE := P_WHERE_CLAUSE || ' AND mrl.request_number BETWEEN ' || P_REQUEST_NUMBER_START || ' AND ' || P_REQUEST_NUMBER_END;
      ELSE
        P_WHERE_CLAUSE := P_WHERE_CLAUSE || ' AND mrl.request_number >=' || P_REQUEST_NUMBER_START;
      END IF;
    END IF;
    IF (P_SOURCE_LOCATOR IS NOT NULL) THEN
      P_WHERE_CLAUSE := P_WHERE_CLAUSE || ' AND mmtt.locator_id=' || P_SOURCE_LOCATOR;
      BEGIN
        SELECT
          CONCATENATED_SEGMENTS
        INTO P_SOURCE_LOCATOR_NAME
        FROM
          MTL_ITEM_LOCATIONS_KFV
        WHERE INVENTORY_LOCATION_ID = P_SOURCE_LOCATOR
          AND ORGANIZATION_ID = P_ORG_ID
          AND SUBINVENTORY_CODE = P_SOURCE_SUBINVENTORY;
      EXCEPTION
        WHEN OTHERS THEN
          NULL;
      END;
    END IF;
    IF (P_SOURCE_SUBINVENTORY IS NOT NULL) THEN
      P_WHERE_CLAUSE := P_WHERE_CLAUSE || ' AND mmtt.subinventory_code =''' || P_SOURCE_SUBINVENTORY || '''';
    END IF;
    IF (P_REQUESTER IS NOT NULL) THEN
      BEGIN
        SELECT
          USER_NAME
        INTO P_REQUESTER_NAME
        FROM
          FND_USER
        WHERE USER_ID = P_REQUESTER;
      EXCEPTION
        WHEN OTHERS THEN
          NULL;
      END;
      P_WHERE_CLAUSE := P_WHERE_CLAUSE || ' AND fnd.user_name=''' || P_REQUESTER_NAME || '''';
    END IF;
    IF (P_WORK_ORDER IS NOT NULL) THEN
      P_WHERE_CLAUSE := P_WHERE_CLAUSE || ' AND wewov.wip_entity_id =' || P_WORK_ORDER;
      BEGIN
        SELECT
          WIP_ENTITY_NAME
        INTO P_WORK_ORDER_NAME
        FROM
          WIP_ENTITIES
        WHERE WIP_ENTITY_ID = P_WORK_ORDER
          AND ORGANIZATION_ID = P_ORG_ID;
      EXCEPTION
        WHEN OTHERS THEN
          NULL;
      END;
    END IF;
    IF (P_MATERIAL IS NOT NULL) THEN
      P_WHERE_CLAUSE := P_WHERE_CLAUSE || ' AND mmtt.inventory_item_id=' || P_MATERIAL;
      BEGIN
        SELECT
          CONCATENATED_SEGMENTS
        INTO P_MATERIAL_NAME
        FROM
          MTL_SYSTEM_ITEMS_KFV
        WHERE INVENTORY_ITEM_ID = P_MATERIAL
          AND ORGANIZATION_ID = P_ORG_ID;
      EXCEPTION
        WHEN OTHERS THEN
          NULL;
      END;
    END IF;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION P_ORG_IDVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    SELECT
      ORG.ORGANIZATION_CODE
    INTO P_ORG_NAME
    FROM
      ORG_ORGANIZATION_DEFINITIONS ORG
    WHERE ORG.ORGANIZATION_ID = P_ORG_ID;
    RETURN (TRUE);
    RETURN NULL;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN NULL;
  END P_ORG_IDVALIDTRIGGER;

  FUNCTION CF_REFFORMULA RETURN CHAR IS
  BEGIN
    RETURN ' ';
  END CF_REFFORMULA;

  FUNCTION P_WORK_ORDERVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END P_WORK_ORDERVALIDTRIGGER;

  FUNCTION P_MATERIALVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END P_MATERIALVALIDTRIGGER;

  FUNCTION P_ORDER_BY_USEDVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END P_ORDER_BY_USEDVALIDTRIGGER;

  FUNCTION P_SOURCE_LOCATORVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END P_SOURCE_LOCATORVALIDTRIGGER;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

END EAM_EAMMIPCK_XMLP_PKG;



/
