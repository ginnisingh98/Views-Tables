--------------------------------------------------------
--  DDL for Package Body PA_PROGRESS_PUB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PA_PROGRESS_PUB" as
/* $Header: PAPCPUBB.pls 120.57.12010000.19 2009/12/29 13:41:52 bifernan ship $ */

G_PKG_NAME              CONSTANT VARCHAR2(30) := 'PA_PROGRESS_PUB';

g1_debug_mode varchar2(1) := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

PROCEDURE UPDATE_TASK_PROGRESS(
 p_api_version                  IN      NUMBER          :=1.0,
 p_init_msg_list                IN      VARCHAR2        :=FND_API.G_TRUE,
 p_commit                       IN      VARCHAR2        :=FND_API.G_FALSE,
 p_validate_only                IN      VARCHAR2        :=FND_API.G_TRUE,
 p_validation_level             IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL,
 p_calling_module               IN      VARCHAR2        :='SELF_SERVICE',
 p_calling_mode                 IN      VARCHAR2        := null,-- bug 4287638
 p_debug_mode                   IN      VARCHAR2        :='N',
 p_max_msg_count                IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_action                       IN      VARCHAR2        default 'SAVE',
 p_bulk_load_flag               IN      VARCHAR2        default 'N',
 p_progress_mode                IN      VARCHAR2        default 'FUTURE',
 p_percent_complete_id          IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_project_id                   IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_object_id                    IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_object_version_id            IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_object_type                  IN      Varchar2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 p_as_of_date                   IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 p_percent_complete             IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_progress_status_code         IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 p_progress_comment             IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 p_brief_overview               IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 p_actual_start_date            IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 p_actual_finish_date           IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 p_estimated_start_date         IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 p_estimated_finish_date        IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 p_scheduled_start_date         IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 p_scheduled_finish_date        IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
 p_record_version_number        IN      NUMBER,
 p_task_status                  IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 p_est_remaining_effort         IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_actual_work_quantity         IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_pm_product_code              IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
 p_structure_type               IN      VARCHAR2        := 'WORKPLAN',
 p_actual_effort                IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_actual_effort_this_period    IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_prog_fom_wp_flag             IN      VARCHAR2        := 'N',
 p_planned_cost                 IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_planned_effort               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_structure_version_id         IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
 p_eff_rollup_percent_complete  IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM, -- 3910193
 x_resource_list_member_id      OUT	NOCOPY	VARCHAR2, --File.Sql.39 bug 4440895
 x_return_status                OUT	NOCOPY	VARCHAR2, --File.Sql.39 bug 4440895
 x_msg_count                    OUT	NOCOPY	NUMBER, --File.Sql.39 bug 4440895
 x_msg_data                     OUT	NOCOPY	VARCHAR2 --File.Sql.39 bug 4440895
 )
IS

l_api_name			CONSTANT VARCHAR(30)	:= 'UPDATE_TASK_PROGRESS';
l_api_version                   CONSTANT NUMBER		:= 1.0;
l_return_status                 VARCHAR2(1);
l_msg_count                     NUMBER;
l_msg_data                      VARCHAR2(250);
l_data                          VARCHAR2(250);
l_msg_index_out                 NUMBER;
l_error_msg_code                VARCHAR2(250);
l_user_id                       NUMBER		:= FND_GLOBAL.USER_ID;
l_login_id                      NUMBER		:= FND_GLOBAL.LOGIN_ID;

l_task_id			NUMBER;
l_project_id			NUMBER;
l_att_pc_id			NUMBER;
l_percent_complete_id		NUMBER;
l_PROGRESS_ROLLUP_ID		NUMBER;
l_structure_id                  NUMBER;
l_process                       VARCHAR2(8)	:= 'NORMAL';
l_last_progress_date            DATE;
l_progress_exists_on_aod        VARCHAR2(15);
l_rollup_required               VARCHAR2(1);
l_db_action                     VARCHAR2(10);
l_actual_wq_entry_code          VARCHAR2(30);
l_incremental_work_qty          NUMBER;
l_cumulative_work_qty           NUMBER;
l_base_percent_complete         NUMBER;
l_published_flag                VARCHAR2(1);
l_current_flag                  VARCHAR2(1);
l_actual_start_date             DATE;
l_actual_finish_date            DATE;
l_base_percent_comp_deriv_code  VARCHAR2(30);
l_base_progress_status_code     VARCHAR2(30);
l_proj_element_id               NUMBER;
l_estimated_start_date          DATE;
l_estimated_finish_date         DATE;
l_actual_work_quantity          NUMBER;
l_last_cumulative_wrk_qty       NUMBER;
l_est_remaining_effort          NUMBER;
l_actual_effort                 NUMBER;  --maansari: fpm changes 3420093
l_percent_complete              NUMBER;
l_wq_enabled_flag               VARCHAR2(1);
l_est_remaining_eff_flag        VARCHAR2(1);
l_percent_complete_flag         VARCHAR2(1);
l_error_message_code            VARCHAR2(250);
l_rollup_rec_ver_number         NUMBER;
l_published_by_party_id         NUMBER		:= PA_UTILS.get_party_id(l_user_id);
l_task_status                   VARCHAR2(150);
l_task_status2                  VARCHAR2(150);
l_task_status_temp              VARCHAR2(150); -- Bug#5374114
l_task_status2_temp             VARCHAR2(150); -- Bug#5374114
l_working_aod                   DATE;
l_aod                           DATE;
l_scheduled_start_date          DATE;
l_scheduled_finish_date         DATE;
l_lowest_level_task             VARCHAR2(1);
l_progress_entry_enable_flag    VARCHAR2(1);
l_msg                           VARCHAR2(30);
l_eff_rollup_percent_comp       NUMBER;
l_eff_rollup_prog_stat_code     VARCHAR2(150);
l_rollup_progress_status        VARCHAR2(150);
l_rollup_completed_percentage   NUMBER;
l_tp_pcc_est_disabl             VARCHAR2(1)	:= 'N'; -- Bug 2747143
l_allow_collab_prog_entry       VARCHAR2(1); -- FPM Development Bug 3420093
l_allw_phy_prcnt_cmp_overrides  VARCHAR2(1); -- FPM Development Bug 3420093
l_structure_version_id          NUMBER; -- FPM Development Bug 3420093
l_conv_etc_cost_pc              NUMBER;
l_conv_etc_cost_pfc             NUMBER;
l_conv_actual_cost_pc           NUMBER;
l_conv_actual_cost_pfc          NUMBER;
l_rollup_current_flag           VARCHAR2(1)	:= 'Y';
l_task_weight_basis_code        VARCHAR2(30); -- FPM Development Bug 3420093
l_earned_value                  NUMBER;
l_planned_effort                NUMBER;
l_planned_effort_push           NUMBER;
l_planned_cost                  NUMBER;
l_last_submitted_effort         NUMBER;
l_actual_effort_this_period     NUMBER;
l_pa_period_name                VARCHAR2(30);
l_gl_period_name                VARCHAR2(30);
l_pm_product_code               VARCHAR2(150);

/* Begin fix for Bug # 4050324. */
l_base_planned_effort		NUMBER		:= null;
l_base_planned_cost		NUMBER		:= null;
/* End fix for Bug # 4050324. */

--variables added for effort to cost conversion start
l_rate_based_flag_x             VARCHAR2(1);
l_resource_list_member_id       NUMBER;
l_resource_assignment_id	NUMBER;
l_txn_currency_code             VARCHAR2(30) ;
l_res_raw_rate                  NUMBER;
l_res_burden_rate               NUMBER;
l_burden_multiplier             NUMBER;
l_res_cur_code                  VARCHAR2(15);

l_plan_res_cur_code		VARCHAR2(15);
l_plan_res_raw_rate             NUMBER;
l_plan_res_burden_rate		NUMBER;
l_plan_burden_multiplier        NUMBER;

l_act_txn_raw_cost              NUMBER;
l_act_txn_bur_cost              NUMBER;
l_etc_txn_raw_cost              NUMBER;
l_etc_txn_bur_cost              NUMBER;

l_project_curr_code             VARCHAR2(30);
l_project_rate_type             VARCHAR2(30);
l_project_rate_date             DATE;
l_project_exch_rate             NUMBER;
l_act_project_raw_cost          NUMBER;
l_act_project_bur_cost          NUMBER;
l_projfunc_curr_code            VARCHAR2(30);
l_projfunc_cost_rate_type       VARCHAR2(30);
l_projfunc_cost_rate_date       DATE;
l_projfunc_cost_exch_rate       NUMBER;
l_act_projfunc_raw_cost         NUMBER;
l_act_projfunc_bur_cost         NUMBER;

l_etc_project_raw_cost          NUMBER;
l_etc_projfunc_raw_cost         NUMBER;
l_etc_project_bur_cost          NUMBER;
l_etc_projfunc_bur_cost         NUMBER;

l_planned_quantity		NUMBER;
l_planned_bur_cost_txn_cur	NUMBER;
l_planned_bur_cost_projfunc	NUMBER;
l_planned_bur_cost_proj_cur	NUMBER;
l_planned_raw_cost_txn_cur	NUMBER;
l_planned_raw_cost_proj_cur	NUMBER;
l_planned_raw_cost_projfunc	NUMBER;
l_assignment_id                 NUMBER;

l_act_raw_cost_to_date_tc	NUMBER;
l_act_raw_cost_to_date_fc	NUMBER;
l_act_raw_cost_to_date_pc	NUMBER;
l_act_bur_cost_to_date_tc	NUMBER;
l_act_bur_cost_to_date_fc	NUMBER;
l_act_bur_cost_to_date_pc	NUMBER;

l_act_raw_cost_last_subm_tc     NUMBER;
l_act_raw_cost_last_subm_pc     NUMBER;
l_act_raw_cost_last_subm_fc     NUMBER;
l_act_bur_cost_last_subm_tc     NUMBER;
l_act_bur_cost_last_subm_pc     NUMBER;
l_act_bur_cost_last_subm_fc     NUMBER;

l_etc_raw_cost_tc		NUMBER;
l_etc_raw_cost_fc		NUMBER;
l_etc_raw_cost_pc		NUMBER;
l_etc_bur_cost_tc		NUMBER;
l_etc_bur_cost_fc		NUMBER;
l_etc_bur_cost_pc		NUMBER;

l_etc_txn_raw_cost_last		NUMBER;
l_etc_prj_raw_cost_last		NUMBER;
l_etc_pfc_raw_cost_last		NUMBER;
l_etc_txn_bur_cost_last		NUMBER;
l_etc_prj_bur_cost_last		NUMBER;
l_etc_pfc_bur_cost_last		NUMBER;
l_etc_effort_last		NUMBER;

l_etc_txn_raw_cost_this_period	NUMBER;
l_etc_prj_raw_cost_this_period  NUMBER;
l_etc_pfc_raw_cost_this_period  NUMBER;
l_etc_txn_bur_cost_this_period  NUMBER;
l_etc_prj_bur_cost_this_period  NUMBER;
l_etc_pfc_bur_cost_this_period  NUMBER;

l_published_structure           VARCHAR2(1);

l_proj_res_raw_rate		NUMBER;
l_projfunc_res_raw_rate		NUMBER;
l_proj_res_burden_rate		NUMBER;
l_projfunc_res_burden_rate	NUMBER;

l_rate_based_flag		VARCHAR2(1);
l_rbs_element_id		NUMBER;
l_resource_class_code		PA_TASK_ASSIGNMENTS_V.RESOURCE_CLASS_CODE%TYPE;
l_budget_version_id		NUMBER;

l_progress_exists		VARCHAR2(1)	:='N';

--This cursor returns planned values also
CURSOR c_get_resource_list_member_id
( l_project_id NUMBER
, l_task_id NUMBER
, l_structure_version_id NUMBER
, l_task_version_id NUMBER
) IS
SELECT
 resource_assignment_id,
 resource_list_member_id,
 txn_currency_code,
 planned_quantity,
 planned_bur_cost_txn_cur,
 planned_bur_cost_projfunc,
 planned_bur_cost_proj_cur,
 planned_raw_cost_txn_cur,
 planned_raw_cost_proj_cur,
 planned_raw_cost_projfunc,
 rbs_element_id,
 rate_based_flag,
 resource_class_code,
 budget_version_id  ---4372462
FROM
 pa_task_asgmts_v
WHERE
    project_id = l_project_id
AND task_id = l_task_id
AND structure_version_id = l_structure_version_id
AND task_version_id = l_task_version_id
AND ta_display_flag = 'N';

CURSOR cur_pa_proj_sch
IS
SELECT
  scheduled_start_date
, scheduled_finish_date
FROM pa_proj_elem_ver_schedule
WHERE project_id = p_project_id
AND element_version_id = p_object_version_id
AND proj_element_id = p_object_id;


-- Bug 3764224 : No need to have proj element id join in these cursors as it is used only in tasks context
CURSOR cur_pa_rollup1
IS
SELECT *
FROM pa_progress_rollup
WHERE project_id = p_project_id
AND object_id = p_object_id
AND structure_type = p_structure_type -- FPM Dev CR 3
AND structure_version_id IS NULL -- Bug 3764224
AND as_of_date = (	SELECT max( as_of_date )
			FROM pa_progress_rollup
                        WHERE project_id = p_project_id
			AND object_id = p_object_id
                        AND object_type = p_object_type
			AND structure_type = p_structure_type -- FPM Dev CR 3
			AND structure_version_id IS NULL -- Bug 3764224
                        AND as_of_date <= p_as_of_date ); -- Fix for Bug # 3944297.


CURSOR cur_pa_rollup2
IS
SELECT *
FROM pa_progress_rollup
WHERE project_id = p_project_id
AND object_id = p_object_id
AND object_type = p_object_type
AND as_of_date = p_as_of_date
AND structure_type = p_structure_type
AND structure_version_id IS NULL -- Bug 3764224
AND (	(p_action = 'SAVE' AND current_flag = 'W')
	OR(p_action = 'PUBLISH' AND current_flag IN ('Y','N'))-- Bug 3879461
	)
    ;

l_rollup_rec1			cur_pa_rollup1%ROWTYPE;
l_rollup_rec2			cur_pa_rollup2%ROWTYPE;
l_element_struc_type		VARCHAR2(30);


/* Bug2756007 Begin */
CURSOR cur_sch_id(c_object_version_id NUMBER)
IS
SELECT
  pev_schedule_id
, record_version_number
FROM pa_proj_elem_ver_schedule
WHERE project_id = p_project_id
AND element_version_id = c_object_version_id;

l_pev_schedule_id		NUMBER;
l_sch_rec_ver_number		NUMBER;
/* Bug2756007 End */

-- FPM Dev CR 3
l_record_version_number		NUMBER;
l_task_ver_ids2			SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type()  ;
l_planned_effort2		SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type()  ;
l_start_dates			SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();
l_end_dates			SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();

l_structure_sharing_code	pa_projects_all.structure_sharing_code%TYPE; -- Bug 3586648
l_etc_effort_this_period	NUMBER;--Bug 3595585
l_last_submitted_etc_effort	NUMBER;--Bug 3595585

-- Bug 3608422 : Added the cusrosr below
CURSOR cur_check_published_version
( c_structure_version_id number
, c_project_id number
)IS
SELECT decode(status.project_system_status_code, 'STRUCTURE_PUBLISHED', 'Y', 'N')
FROM pa_proj_elem_ver_structure str, pa_project_statuses status
where str.element_version_id = c_structure_version_id
AND str.project_id = c_project_id
AND str.status_code = status.project_status_code;


l_assignment_exists		VARCHAR2(1);

-- Bug 3796357 Begin
l_eqpmt_act_effort_to_date	NUMBER;
l_eqpmt_etc_effort		NUMBER;
l_oth_act_cost_to_date_tc	NUMBER;
l_oth_act_cost_to_date_fc	NUMBER;
l_oth_act_cost_to_date_pc	NUMBER;
l_oth_etc_cost_tc		NUMBER;
l_oth_etc_cost_fc		NUMBER;
l_oth_etc_cost_pc		NUMBER;
l_ppl_act_cost_to_date_tc	NUMBER;
l_ppl_act_cost_to_date_fc	NUMBER;
l_ppl_act_cost_to_date_pc	NUMBER;
l_ppl_etc_cost_tc		NUMBER;
l_ppl_etc_cost_fc		NUMBER;
l_ppl_etc_cost_pc		NUMBER;
l_eqpmt_act_cost_to_date_tc	NUMBER;
l_eqpmt_act_cost_to_date_fc	NUMBER;
l_eqpmt_act_cost_to_date_pc	NUMBER;
l_eqpmt_etc_cost_tc		NUMBER;
l_eqpmt_etc_cost_fc		NUMBER;
l_eqpmt_etc_cost_pc		NUMBER;
l_oth_quantity_to_date		NUMBER;
l_oth_etc_quantity		NUMBER;
l_oth_act_rawcost_to_date_tc	NUMBER;
l_oth_act_rawcost_to_date_fc	NUMBER;
l_oth_act_rawcost_to_date_pc	NUMBER;
l_oth_etc_rawcost_tc		NUMBER;
l_oth_etc_rawcost_fc		NUMBER;
l_oth_etc_rawcost_pc		NUMBER;
l_eqpmt_act_rawcost_to_date_tc	NUMBER;
l_eqpmt_act_rawcost_to_date_fc	NUMBER;
l_eqpmt_act_rawcost_to_date_pc	NUMBER;
l_eqpmt_etc_rawcost_tc		NUMBER;
l_eqpmt_etc_rawcost_fc		NUMBER;
l_eqpmt_etc_rawcost_pc		NUMBER;
--Rtarway, 3819619
l_dummy				VARCHAR2(1);

l_task_version_id_out		NUMBER		:= null; -- Added to fix Bug # 3815741.
l_track_wp_cost_flag		VARCHAR2(1)	:= 'Y'; -- Bug 3801745
-- Bug 3796357 End

--bug 3824042
l_prj_currency_code		VARCHAR2(15)	:= null;
l_prjfunc_currency_code		VARCHAR2(15)	:= null;

--bug 3879461 --maansari
CURSOR check_prog_after_aod
IS
SELECT 'Y'
FROM pa_progress_rollup
WHERE current_flag = 'Y'
AND project_id = p_project_id
AND structure_type = p_structure_type
AND structure_version_id is null
AND object_id = p_object_id
AND as_of_date > p_as_of_date
;
l_prog_exist_after_aod VARCHAR2(1) := 'N';
--bug 3879461 --maansari
--rtarway, 4085882
-- Following cursor is written with assumption that underlying view will return one row per assignment for as_of_date set in the
-- API.

-- 4136113 : Written new cursosr instead of old bulky one
CURSOR c_assgn_working_prog (l_project_id NUMBER, l_task_id NUMBER, l_task_version_id NUMBER )
IS
SELECT
ppc.percent_complete_id,
asgn.resource_list_member_id,
ppr.actual_start_date  ,
ppr.actual_finish_date ,
ppr.estimated_start_date,
ppr.estimated_finish_date,
ppc.record_version_number ,
decode(asgn.resource_class_code, 'PEOPLE', ppr.ppl_act_rawcost_to_date_tc,
         'EQUIPMENT', ppr.eqpmt_act_rawcost_to_date_tc,ppr.oth_act_rawcost_to_date_tc)
          - nvl(pa_progress_utils.get_act_for_prev_asofdate(ppr.as_of_date,ppr.project_id,ppr.object_id,ppr.object_version_id,ppr.proj_element_id,'C','R','T'),0)
      actual_rawcost_this_period,
decode(asgn.resource_class_code, 'PEOPLE', ppr.ppl_act_effort_to_date,
       'EQUIPMENT', ppr.eqpmt_act_effort_to_date, ppr.oth_quantity_to_date)
       - nvl(pa_progress_utils.get_act_for_prev_asofdate(ppr.as_of_date,ppr.project_id,ppr.object_id,ppr.object_version_id,ppr.proj_element_id,'E',null,null),0)
       actual_effort_this_period,
asgn.rate_based_flag,
asgn.resource_class_code,
nvl(ppr.ppl_act_rawcost_to_date_tc,0)+ nvl(ppr.eqpmt_act_rawcost_to_date_tc,0)+ nvl(ppr.oth_act_rawcost_to_date_tc,0) actual_rawcost,
-- In Self Service it is last submitted actual raw cost in TC. But this value is not used by the API.
-- Only case it is used by the API is from AMG where we need to pass the value as to_date. So we can sefly
-- always pass to_date value without calling the function get_act_for_prev_asofdate
nvl(ppr.ppl_act_effort_to_date,0)+ nvl(ppr.eqpmt_act_effort_to_date,0)+ nvl(ppr.oth_quantity_to_date,0) actual_effort,
-- In Self Service it is last submitted actual effort. But this value is not used by the API.
-- Only case it is used by the API is from AMG where we need to pass the value as to_date. So we can sefly
-- always pass to_date value without calling the function get_act_for_prev_asofdate
--bug 4303344
nvl(ppr.ppl_etc_rawcost_tc,0)+nvl(ppr.eqpmt_etc_rawcost_tc,0)+ nvl(ppr.oth_etc_rawcost_tc,0)
etc_rawcost_tc            ,
nvl(ppr.estimated_remaining_effort,0)+nvl(ppr.eqpmt_etc_effort,0)+ nvl(ppr.oth_etc_quantity,0)
etc_effort                ,
asgn.txn_currency_code         ,
asgn.rbs_element_id,
asgn.resource_assignment_id,
asgn.assignment_start_date scheduled_start_date ,
asgn.assignment_end_date scheduled_finish_date,
ppc.progress_comment,
ppc.description progress_overview
from pa_task_asgmts_v asgn
, pa_percent_completes ppc
, pa_progress_rollup ppr
where
    ppc.PROJECT_ID = l_project_id
AND ppr.project_id = ppc.project_id
AND ppc.project_id = asgn.project_id
AND ppc.task_id = l_task_id
AND ppc.task_id = ppr.proj_element_id
AND ppc.task_id = asgn.task_id
AND asgn.task_version_id = l_task_version_id
AND ppc.object_type = 'PA_ASSIGNMENTS'
AND ppc.object_type = ppr.object_type
AND asgn.ta_display_flag = 'Y'
AND ppc.object_id = asgn.resource_list_member_id
AND ppc.object_id = ppr.object_id
AND ppr.current_flag='W'
AND ppc.published_flag = 'N'
AND ppc.date_computed <= p_as_of_date
AND ppr.as_of_date <= p_as_of_date
AND ppr.structure_type = 'WORKPLAN'
and ppc.date_computed = ppr.as_of_date
AND ppr.structure_version_id is null;


l_working_assgn_rec c_assgn_working_prog%ROWTYPE;
-- Following cursor is written with assumption that underlying view will return one row per deliverable for as_of_date set in the
-- API. PA_TASK_DELVRS_PROGRESS_V has joins for as_of_date, so no as_of_date join is needed here

-- 4136113 : Written new cursosr instead of old bulky one
CURSOR c_dlvr_working_prog (l_project_id NUMBER,  l_task_id NUMBER , l_task_version_id NUMBER)
IS
SELECT
ppc.percent_complete_id,
ppc.object_id del_id,
ppc.object_version_id del_element_version_id,
ppr.completed_percentage,
ppr.progress_status_code,
ppc.progress_comment,
ppc.description progress_description,
ppr.actual_start_date,
ppr.actual_finish_date,
ppc.record_version_number percomp_record_version_number,
ppc.status_code del_status_code
FROM pa_percent_completes ppc
, pa_progress_rollup ppr
WHERE
    ppc.project_id=l_project_id
AND ppc.project_id = ppr.project_id
AND ppc.object_type = 'PA_DELIVERABLES'
AND ppc.object_type = ppr.object_type
AND ppc.task_id = l_task_id
AND ppc.task_id = ppr.proj_element_id
AND ppc.object_id = ppr.object_id
AND ppr.current_flag='W'
AND ppc.published_flag = 'N'
AND ppc.date_computed <= p_as_of_date
AND ppr.as_of_date <= p_as_of_date
and ppc.date_computed = ppr.as_of_date
AND ppr.structure_type = 'WORKPLAN'
AND ppr.structure_version_id is null;


l_working_dlvr_rec c_dlvr_working_prog%ROWTYPE;
--end add by rtarway, 4085882

-- Bug 3922325 Begin
CURSOR c_previous_task_status IS
SELECT status_code
FROM pa_percent_completes
WHERE project_id = p_project_id
AND object_id = p_object_id
AND object_type = 'PA_TASKS'
AND structure_type = 'WORKPLAN'
AND trunc(date_computed) <= trunc(p_as_of_date)
ORDER BY date_computed desc, published_flag asc; -- This is to make sure that top most record in this cursor is maximum as of date and working record first then published record

l_previous_status_code  VARCHAR2(150);
l_prev_sys_status_code  VARCHAR2(150);
-- Bug 3922325 End

-- Bug 4506461 Begin
-- 4651069 : Removed LF relationship here
CURSOR c_get_any_childs_have_subprj(c_task_version_id NUMBER) IS
SELECT 'Y'
FROM pa_object_relationships
WHERE --relationship_type in ( 'LW', 'LF' )
relationship_type = 'LW'
AND object_id_from1 IN
    (SELECT object_id_to1
    FROM pa_object_relationships
    START WITH  object_id_from1 = c_task_version_id
    AND relationship_type = 'S'
    CONNECT BY PRIOR object_id_to1 = object_id_from1
    AND relationship_type = 'S')
    ;
l_rederive_base_pc VARCHAR2(1):='N';
l_temp_base_pc     NUMBER;
-- Bug 4506461 End

-- 4533112 Begin
CURSOR c_get_dates_overrides IS
SELECT decode(base_progress_status_code,'Y','Y','N') date_override_flag
, estimated_start_date
, estimated_finish_date
, actual_start_date
, actual_finish_date
FROM pa_progress_rollup
WHERE project_id = p_project_id
AND object_id = p_object_id
AND object_type = 'PA_TASKS'
AND structure_type = 'WORKPLAN'
AND structure_version_id is null
AND trunc(as_of_date) <= trunc(p_as_of_date)
AND current_flag IN ('Y', 'N')
ORDER by as_of_date desc;

l_date_override_flag            VARCHAR2(1):='N';
l_db_date_override_flag         VARCHAR2(1):='N';
l_db_estimated_start_date       DATE;
l_db_estimated_finish_date      DATE;
l_db_actual_start_date          DATE;
l_db_actual_finish_date         DATE;
l_clex_estimated_start_date     DATE;
l_clex_estimated_finish_date    DATE;
l_clex_actual_start_date        DATE;
l_clex_actual_finish_date       DATE;

-- 4533112 End

-- Bug 4632744
-- Added cursor c_get_last_ppl_effort_fr_assgn
CURSOR c_get_last_ppl_effort_fr_assgn(c_res_list_mem_id NUMBER)
IS
SELECT NVL( PPL_ACT_EFFORT_TO_DATE, 0 )
FROM pa_progress_rollup
WHERE project_id = p_project_id
AND object_id  = c_res_list_mem_id
AND as_of_date =
	(SELECT max(as_of_date)
	FROM pa_progress_rollup ppr2
	WHERE ppr2.as_of_date <= p_as_of_date
	AND  ppr2.project_id = p_project_id
	AND ppr2.object_id = c_res_list_mem_id
	AND ppr2.object_type = 'PA_ASSIGNMENTS'
	AND ppr2.structure_type = p_structure_type
	AND ppr2.current_flag <> 'W'
	AND ppr2.structure_version_id is null
	AND ppr2.proj_element_id = p_object_id
      )
AND object_type = 'PA_ASSIGNMENTS'
AND structure_type = p_structure_type
AND current_flag <> 'W'
AND structure_version_id is null
and proj_element_id = p_object_id
;

l_calling_module    varchar2(30);
BEGIN
	g1_debug_mode := NVL(FND_PROFILE.value('PA_DEBUG_MODE'), 'N');

	IF g1_debug_mode  = 'Y' THEN
		pa_debug.init_err_stack ('PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS');
	END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_init_msg_list='||p_init_msg_list, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_commit='||p_commit, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_validate_only='||p_validate_only, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_validation_level='||p_validation_level, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_calling_module='||p_calling_module, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_debug_mode='||p_debug_mode, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_max_msg_count='||p_max_msg_count, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_action='||p_action, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_bulk_load_flag='||p_bulk_load_flag, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_progress_mode='||p_progress_mode, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_percent_complete_id='||p_percent_complete_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_object_id='||p_object_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_object_version_id='||p_object_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_object_type='||p_object_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_percent_complete='||p_percent_complete, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_eff_rollup_percent_complete='||p_eff_rollup_percent_complete, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_progress_status_code='||p_progress_status_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_progress_comment='||p_progress_comment, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_brief_overview='||p_brief_overview, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_actual_start_date='||p_actual_start_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_actual_finish_date='||p_actual_finish_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_estimated_start_date='||p_estimated_start_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_estimated_finish_date='||p_estimated_finish_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_scheduled_start_date='||p_scheduled_start_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_scheduled_finish_date='||p_scheduled_finish_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_record_version_number='||p_record_version_number, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_task_status='||p_task_status, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_est_remaining_effort='||p_est_remaining_effort, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_actual_work_quantity='||p_actual_work_quantity, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_pm_product_code='||p_pm_product_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_structure_type='||p_structure_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_actual_effort='||p_actual_effort, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_actual_effort_this_period='||p_actual_effort_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_structure_version_id='||p_structure_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_prog_fom_wp_flag='||p_prog_fom_wp_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_planned_cost='||p_planned_cost, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_planned_effort='||p_planned_effort, x_Log_Level=> 3);
        END IF;

	IF (p_commit = FND_API.G_TRUE) THEN
		savepoint UPDATE_TASK_PROGRESS;
	END IF;

	IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
		RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
	END IF;

	IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
		FND_MSG_PUB.initialize;
	END IF;

	x_return_status := FND_API.G_RET_STS_SUCCESS;

	--BUG 4085882, added by rtarway
	--bug 4320365, changed to p_calling_mode from p_calling_module
	--the code to set prog_as_of_date is needed.
	IF (p_calling_mode = 'TEAM_MEM_HOME' AND p_action='PUBLISH' )
	THEN
		pa_progress_utils.set_prog_as_of_Date(
                                              p_project_id   =>p_project_id,
                                              p_task_id  =>p_object_id,
                                              p_as_of_date  => p_as_of_date
                                      );
		FOR l_working_assgn_rec in c_assgn_working_prog(p_project_id, p_object_id, p_object_version_id) LOOP

		       PA_ASSIGNMENT_PROGRESS_PUB.UPDATE_ASSIGNMENT_PROGRESS(
				     p_api_version                   => l_api_version
				     ,p_init_msg_list                => p_init_msg_list
				     ,p_commit                       => p_commit
				     ,p_validate_only                => p_validate_only
				     ,p_validation_level             => p_validation_level
				     ,p_calling_module               => p_calling_module
				     ,p_action                       => 'PUBLISH'
				     ,p_progress_mode                => 'FUTURE'
				     ,p_percent_complete_id          => l_working_assgn_rec.PERCENT_COMPLETE_ID
				     ,p_project_id                   => p_project_id
				     ,p_object_id                    => l_working_assgn_rec.RESOURCE_LIST_MEMBER_ID
				     ,p_object_version_id            => p_object_version_id
				     ,p_task_id                      => p_object_id
				     ,p_as_of_date                   => p_as_of_date
				     ,p_progress_comment             => l_working_assgn_rec.progress_comment
				     ,p_brief_overview               => l_working_assgn_rec.progress_overview
				     ,p_actual_start_date            => l_working_assgn_rec.ACTUAL_START_DATE
				     ,p_actual_finish_date           => l_working_assgn_rec.ACTUAL_FINISH_DATE
				     ,p_estimated_start_date         => l_working_assgn_rec.estimated_start_date
				     ,p_estimated_finish_date        => l_working_assgn_rec.estimated_finish_date
				     ,p_record_version_number        => l_working_assgn_rec.RECORD_VERSION_NUMBER
				     ,p_pm_product_code              => p_pm_product_code
				     ,p_structure_type               => 'WORKPLAN'
				     ,p_structure_version_id         => p_structure_version_id
				     ,p_actual_cost_this_period      => l_working_assgn_rec.actual_rawcost_this_period
				     ,p_actual_effort_this_period    => l_working_assgn_rec.ACTUAL_EFFORT_THIS_PERIOD
				     ,p_rate_based_flag              => l_working_assgn_rec.RATE_BASED_FLAG
				     ,p_resource_class_code          => l_working_assgn_rec.RESOURCE_CLASS_CODE
				     ,p_actual_cost                  => l_working_assgn_rec.actual_rawcost
				     ,p_actual_effort                => l_working_assgn_rec.ACTUAL_EFFORT
				     ,p_etc_cost_this_period         => l_working_assgn_rec.etc_rawcost_tc
				     ,p_etc_effort_this_period       => l_working_assgn_rec.ETC_EFFORT
				     ,p_txn_currency_code            => l_working_assgn_rec.TXN_CURRENCY_CODE
				     ,p_rbs_element_id               => l_working_assgn_rec.RBS_ELEMENT_ID
				     ,p_resource_assignment_id       => l_working_assgn_rec.resource_assignment_id
				     ,p_scheduled_start_date         => l_working_assgn_rec.scheduled_start_date
				     ,p_scheduled_finish_date        => l_working_assgn_rec.scheduled_finish_date
				     ,x_return_status                => l_return_status
				     ,x_msg_count                    => l_msg_count
				     ,x_msg_data                     => l_msg_data
				     );
			-- Bug 4632744 : Added Return Status check
			IF l_return_status <> 'S' THEN
				raise FND_API.G_EXC_ERROR;
			END IF;
		END LOOP;
		-- if there are working deliverable records associated with this task, we need to puyblish those deliverable progress
		FOR l_working_dlvr_rec in c_dlvr_working_prog (p_project_id ,   p_object_id, p_object_version_id ) LOOP
			PA_DELIVERABLE_PROGRESS_PUB.UPDATE_DELIVERABLE_PROGRESS(
				     p_api_version                   => l_api_version
				     ,p_init_msg_list                => p_init_msg_list
				     ,p_commit                       => p_commit
				     ,p_validate_only                => p_validate_only
				     ,p_validation_level             => p_validation_level
				     ,p_calling_module               => p_calling_module
				     ,p_action                       => 'PUBLISH' -- Code to fix Bug # 3821106.
				     ,p_progress_mode                => 'FUTURE'
				     ,p_percent_complete_id          => l_working_dlvr_rec.percent_complete_id      ------percent_complete_id
				     ,p_project_id                   => p_project_id
				     ,p_object_id                    => l_working_dlvr_rec.del_id
				     ,p_object_type                  => 'PA_DELIVERABLES'
				     ,p_object_version_id            => l_working_dlvr_rec.del_element_version_id
				     ,p_del_status                   => l_working_dlvr_rec.del_status_code
				     ,p_task_id                      => p_object_id
				     ,p_as_of_date                   => p_as_of_date
				     ,p_percent_complete             => l_working_dlvr_rec.completed_percentage
				     ,p_progress_status_code         => l_working_dlvr_rec.progress_status_code
				     ,p_progress_comment             => l_working_dlvr_rec.progress_comment
				     ,p_brief_overview               => l_working_dlvr_rec.progress_description
				     ,p_actual_finish_date           => l_working_dlvr_rec.actual_finish_date
				     ,p_record_version_number        => l_working_dlvr_rec.percomp_record_version_number
				     ,p_pm_product_code              => p_pm_product_code
				     ,p_structure_type               => 'WORKPLAN'
				     ,x_return_status                => l_return_status
				     ,x_msg_count                    => l_msg_count
				     ,x_msg_data                     => l_msg_data
				     );
			-- Bug 4632744 : Added Return Status check
			IF l_return_status <> 'S' THEN
				raise FND_API.G_EXC_ERROR;
			END IF;
		END LOOP;
	END IF ; -- p_calling_module='TEAM_MEM_HOME'
	--end add by rtarway for BUG 4085882

	l_structure_sharing_code := PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(p_project_id);
	l_assignment_exists := PA_PROGRESS_UTILS.check_assignment_exists(p_project_id,p_object_version_id,p_object_type); -- Bug 3784904
	l_track_wp_cost_flag :=  pa_fp_wp_gen_amt_utils.get_wp_track_cost_amt_flag(p_project_id);  --Bug 3801745

	--bug 3824042
	SELECT project_currency_code, projfunc_currency_code
	INTO  l_prj_currency_code, l_prjfunc_currency_code
	FROM pa_projects_all WHERE project_id = p_project_id;

	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_structure_sharing_code='||l_structure_sharing_code, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_assignment_exists='||l_assignment_exists, x_Log_Level=> 3);
	END IF;


	l_element_struc_type := p_structure_type;

	IF p_structure_type = 'FINANCIAL'           --maansari: fpm changes
	THEN
		IF ( p_est_remaining_effort <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
			and p_est_remaining_effort IS NOT NULL
		   ) OR
                   ( p_actual_work_quantity <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --BUG 4368945, rtarway p_actual_work_quantity should be checked
		     and --p_est_remaining_effort is not null ) OR
			p_actual_work_quantity  IS NOT NULL
		   ) OR
		   ( p_actual_effort <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
		        and p_actual_effort IS NOT NULL
  		   )
		THEN
			PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                               ,p_msg_name       => 'PA_TP_CANT_NTER_ACT_4FN_STR');
			x_msg_data := 'PA_TP_CANT_NTER_ACT_4FN_STR';
			x_return_status := 'E';
			RAISE  FND_API.G_EXC_ERROR;
		END IF;
	END IF;

	IF p_object_type = 'PA_TASKS'
	THEN
		-- 4490532 : Changed from IS_LOWEST_TASK to is_summary_task_or_structure
		--l_lowest_level_task := PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(p_task_version_id => p_object_version_id );
		--ELSE
		--l_lowest_level_task := 'N';
		IF PA_PROJ_ELEMENTS_UTILS.is_summary_task_or_structure(p_object_version_id) = 'Y' THEN
			l_lowest_level_task := 'N';
		ELSE
			l_lowest_level_task := 'Y';
		END IF;
	END IF;

	l_task_status2 := PA_PROGRESS_UTILS.get_system_task_status( p_task_status );
        l_task_status2_temp := l_task_status2; -- Bug#5374114
        l_task_status_temp := p_task_status;   -- Bug#5374114

	---4457403, added begin/end block to handle no_data_found exception
	BEGIN
		l_pa_period_name := PA_PROGRESS_UTILS.Prog_Get_Pa_Period_Name(p_as_of_date);
		l_gl_period_name := PA_PROGRESS_UTILS.Prog_Get_gl_Period_Name(p_as_of_date);
	EXCEPTION
		WHEN OTHERS THEN
                 PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                            p_msg_name => 'PA_FP_INVALID_DATE_RANGE');
                 x_msg_data := 'PA_FP_INVALID_DATE_RANGE';
                 x_return_status := 'E';
                 x_msg_count := fnd_msg_pub.count_msg;
                 RAISE  FND_API.G_EXC_ERROR;
	END;

	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_element_struc_type='||l_element_struc_type, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'After deriving PA/GL Date l_pa_period_name='||l_pa_period_name||' l_gl_period_name='||l_gl_period_name, x_Log_Level=> 3);
	END IF;

	--bug 3879461 --maansari
	--check and delete for any other working version record.
	-- Amit : This code is not required as l_db_action will switch mode to update and the existing working record will be updated
	IF p_action = 'SAVE' AND p_structure_type = 'WORKPLAN'
	THEN
		DELETE FROM pa_percent_completes
		WHERE project_id= p_project_id
		AND object_id = p_object_id
		AND published_flag = 'N'
		--AND date_computed <> p_as_of_date --bug 4185364, delete all the working records
		AND structure_type = p_structure_type
		;

		DELETE FROM pa_progress_rollup
		WHERE project_id= p_project_id
		AND object_id = p_object_id
		AND current_flag = 'W'
		--AND as_of_date <> p_as_of_date    --bug 4185364, delete all the working records
		AND structure_type = p_structure_type
		AND structure_version_id is null
		;
	END IF;

	--This code is required is PUBLISH mode  to delete working progress records on previous dates.
	IF  p_action = 'PUBLISH' AND p_structure_type = 'WORKPLAN'
	THEN
		DELETE FROM pa_percent_completes
		WHERE project_id= p_project_id
		AND object_id = p_object_id
		AND published_flag = 'N'
		AND date_computed <= p_as_of_date  --- 4245168
		AND structure_type = p_structure_type
		;

		DELETE FROM pa_progress_rollup
		WHERE project_id= p_project_id
		AND object_id = p_object_id
		AND current_flag = 'W'
		AND as_of_date < p_as_of_date
		AND structure_type = p_structure_type
		AND structure_version_id is null
		;
	END IF;

	--bug 3879461

	IF p_object_type = 'PA_STRUCTURES' AND p_structure_type = 'FINANCIAL'
	--bug 3944208. l_task_id will never be equal to 0 bcoz we there is a different api for financial progress.
	THEN
		l_task_id := 0;
	ELSE
		l_task_id := p_object_id;
	END IF;

	---- if status is CANCELLED
	IF PA_PROGRESS_UTILS.get_system_task_status(PA_PROGRESS_UTILS.get_task_status( p_project_id, p_object_id)) = 'CANCELLED'
	AND p_progress_mode <> 'BACKDATED'
	AND l_element_struc_type = 'WORKPLAN'
	THEN
	  IF p_pm_product_code = 'MSPROJECT'
	  THEN
	    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
	                         ,p_msg_name       => 'PA_TP_CANT_NTER_PRG_CANCEL_MSP'
	                         ,p_token1 => 'TASK_NAME'
	                         ,p_value1 => PA_TASK_UTILS.get_task_name(l_task_id)
	                         ,p_token2 => 'TASK_NUMBER'
	                         ,p_value2 => PA_TASK_UTILS.get_task_number(l_task_id));
	    x_msg_data := 'PA_TP_CANT_NTER_PRG_CANCEL';
	    x_return_status := 'E';
	    RAISE  FND_API.G_EXC_ERROR;
	  ELSE
	    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
	                         ,p_msg_name       => 'PA_TP_CANT_NTER_PRG_CANCEL_AMG'
	                         ,p_token1 => 'TASK_ID'
	                         ,p_value1 => p_object_id
	                        );
	    x_msg_data := 'PA_TP_CANT_NTER_PRG_CANCEL';
	    x_return_status := 'E';
	    RAISE  FND_API.G_EXC_ERROR;
	  END IF;
	END IF;
	---- if status is CANCELLED


	---- call a procedure to get all the DEFAULTS
	IF l_element_struc_type = 'WORKPLAN'
	THEN
		IF g1_debug_mode  = 'Y' THEN
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling get_progress_defaults', x_Log_Level=> 3);
		END IF;

			PA_PROGRESS_UTILS.get_progress_defaults(
			     p_project_id                   => p_project_id
			    ,p_object_version_id            => p_object_version_id
			    ,p_object_type                  => p_object_type
			    ,p_object_id                    => p_object_id
			    ,p_as_of_date                   => p_as_of_date
			    ,x_wq_actual_entry_code         => l_actual_wq_entry_code
			    ,x_wq_enabled_flag              => l_wq_enabled_flag
			    ,x_effort_enabled_flag          => l_est_remaining_eff_flag
			    ,x_base_percent_comp_deriv_code => l_base_percent_comp_deriv_code
			    ,x_percent_comp_enabled_flag    => l_percent_complete_flag
			    ,x_progress_entry_enable_flag   => l_progress_entry_enable_flag
			    ,x_allow_collab_prog_entry      => l_allow_collab_prog_entry -- FPM Development Bug 3420093
			    ,x_allw_phy_prcnt_cmp_overrides => l_allw_phy_prcnt_cmp_overrides -- FPM Development Bug 3420093
			    ,x_task_weight_basis_code       => l_task_weight_basis_code
			 );

		IF g1_debug_mode  = 'Y' THEN
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling l_actual_wq_entry_code='||l_actual_wq_entry_code, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling l_wq_enabled_flag='||l_wq_enabled_flag, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling l_est_remaining_eff_flag='||l_est_remaining_eff_flag, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling l_base_percent_comp_deriv_code='||l_base_percent_comp_deriv_code, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling l_percent_complete_flag='||l_percent_complete_flag, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling l_progress_entry_enable_flag='||l_progress_entry_enable_flag, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling l_allow_collab_prog_entry='||l_allow_collab_prog_entry, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling l_allw_phy_prcnt_cmp_overrides='||l_allw_phy_prcnt_cmp_overrides, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling l_task_weight_basis_code='||l_task_weight_basis_code, x_Log_Level=> 3);
		END IF;

		----- No PRPGRESS
		IF NVL( l_progress_entry_enable_flag, 'N' ) = 'N' and p_object_type = 'PA_TASKS'
		THEN
		  IF p_pm_product_code = 'MSPROJECT'
		  THEN
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_CANT_ENTER_PROG_MSP'
		                         ,p_token1 => 'TASK_NAME'
		                         ,p_value1 => PA_TASK_UTILS.get_task_name(p_object_id)
		                         ,p_token2 => 'TASK_NUMBER'
		                         ,p_value2 => PA_TASK_UTILS.get_task_number(p_object_id)
		                         ,p_token3 => 'PROJECT_NAME'
		                         ,p_value3 => PA_TASK_UTILS.get_project_name(p_project_id)
		                         ,p_token4 => 'PROJECT_NUMBER'
		                         ,p_value4 => PA_TASK_UTILS.get_project_number(p_project_id));
		    x_msg_data := 'PA_TP_CANT_ENTER_PROG';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  ELSE
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_CANT_ENTER_PROG_AMG'
		                         ,p_token1 => 'TASK_ID'
		                         ,p_value1 => p_object_id
		                         ,p_token2 => 'PROJECT_ID'
		                         ,p_value2 => p_project_id);
		    x_msg_data := 'PA_TP_CANT_ENTER_PROG';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  END IF;
		END IF;
		----- No PRPGRESS

		----- Wrong MODE
		IF p_progress_mode not in ( 'BACKDATED','FUTURE' )
		THEN
			PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                               ,p_msg_name       => 'PA_TP_WRONG_PRG_MODE4');
			x_msg_data := 'PA_TP_WRONG_PRG_MODE4';
			x_return_status := 'E';
			RAISE  FND_API.G_EXC_ERROR;
		END IF;
		----- Wrong MODE

		----- Wrong DATE
		IF p_as_of_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE OR p_as_of_date IS NULL
		THEN
			PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
			                     ,p_msg_name       => 'PA_TP_INV_AOD'
			                     ,p_token1         => 'AS_OF_DATE'
			                     ,p_value1         => p_as_of_date);
			x_msg_data := 'PA_TP_INV_AOD';
			x_return_status := 'E';
			RAISE  FND_API.G_EXC_ERROR;
		END IF;
		----- Wrong DATE

		----- Wrong PROGRESS STATUS
		IF p_progress_status_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR p_progress_status_code IS NULL
		THEN
			PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                             ,p_msg_name       => 'PA_TP_INV_PRG_STAT');
			x_msg_data := 'PA_TP_INV_PRG_STAT';
			x_return_status := 'E';
			RAISE  FND_API.G_EXC_ERROR;
		END IF;
		----- Wrong PROGRESS STATUS
		--Added by rtarway, for BUG 3819619

		IF (p_calling_module = 'AMG')
		THEN
			BEGIN
			SELECT 'x' INTO l_dummy
			FROM pa_project_statuses
			WHERE status_type = 'PROGRESS'
			AND project_status_code = p_progress_status_code;
			EXCEPTION
				WHEN NO_DATA_FOUND THEN
				  IF p_pm_product_code = 'MSPROJECT'
				  THEN
				    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
				                         ,p_msg_name       => 'PA_TP_INV_PRG_STAT_MSP'
				                         ,p_token1 => 'PROG_STATUS'
				                         ,p_value1 => p_progress_status_code
				                         ,p_token2 => 'TASK_NAME'
				                         ,p_value2 => PA_TASK_UTILS.get_task_name(l_task_id)
				                         ,p_token3 => 'TASK_NUMBER'
				                         ,p_value3 => PA_TASK_UTILS.get_task_number(l_task_id)
				                         ,p_token4 => 'PROJECT_NAME'
				                         ,p_value4 => PA_TASK_UTILS.get_project_name(p_project_id)
				                         ,p_token5 => 'PROJECT_NUMBER'
				                         ,p_value5 => PA_TASK_UTILS.get_project_number(p_project_id));
				    x_msg_data := 'PA_TP_INV_PRG_STAT';
				    x_return_status := 'E';
				    RAISE  FND_API.G_EXC_ERROR;
				  ELSE
				    PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
				                         p_msg_name       => 'PA_TP_INV_PRG_STAT_AMG'
				                         ,p_token1 => 'PROG_STATUS'
				                         ,p_value1 => p_progress_status_code
				                         ,p_token2 => 'TASK_ID'
				                         ,p_value2 =>  l_task_id
				                         ,p_token3 => 'PROJECT_ID'
				                         ,p_value3 => p_project_id
				                        );
				    x_msg_data := 'PA_TP_INV_PRG_STAT';
				    x_return_status := FND_API.G_RET_STS_ERROR;
				    RAISE  FND_API.G_EXC_ERROR;
				  END IF;
			END;
		END IF;
		--End Add for BUG 3819619

		----- Wrong STATUS
		-- Bug 4429929 : Added OR condition below
		IF ((p_task_status = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR OR p_task_status IS NULL)OR(PA_PROGRESS_UTILS.get_system_task_status(p_task_status)= 'CANCELLED'))
		THEN
			IF p_object_type = 'PA_TASKS'
			THEN
			  IF p_pm_product_code = 'MSPROJECT'
			  THEN
			    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
			                         ,p_msg_name       => 'PA_TP_INV_TSK_STAT_MSP'
			                         ,p_token1 => 'TASK_NAME'
			                         ,p_value1 => PA_TASK_UTILS.get_task_name(p_object_id)
			                         ,p_token2 => 'TASK_NUMBER'
			                         ,p_value2 => PA_TASK_UTILS.get_task_number(p_object_id));
			    x_msg_data := 'PA_TP_INV_TSK_STAT';
			    x_return_status := 'E';
			    RAISE  FND_API.G_EXC_ERROR;
			  ELSE
			    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
			                         ,p_msg_name       => 'PA_TP_INV_TSK_STAT_AMG'
			                         ,p_token1 => 'TASK_ID'
			                         ,p_value1 => p_object_id
			                        );
			    x_msg_data := 'PA_TP_INV_TSK_STAT';
			    x_return_status := 'E';
			    RAISE  FND_API.G_EXC_ERROR;
			  END IF;
			END IF;
		END IF;
		----- Wrong STATUS
	END IF; --<< l_element_struc_type >>


	IF (p_actual_work_quantity = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
	--BUG 4368945, rtarway, should also be checked for null as AMG can pass it as null
	OR p_actual_work_quantity is null)
	THEN
		l_actual_work_quantity := 0;
	ELSE
		--bug 4368945 , rtarway, added check for -ve WQ
		IF (p_actual_work_quantity < 0) THEN
		  IF p_pm_product_code = 'MSPROJECT'
		  THEN
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_NO_NEG_WQ_MSP'
		                         ,p_token1 => 'TASK_NAME'
		                         ,p_value1 => PA_TASK_UTILS.get_task_name(p_object_id)
		                         ,p_token2 => 'TASK_NUMBER'
		                         ,p_value2 => PA_TASK_UTILS.get_task_number(p_object_id));
		    x_msg_data := 'PA_TP_NO_NEG_WQ';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  ELSE
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_NO_NEG_WQ_AMG'
		                         ,p_token1 => 'TASK_ID'
		                         ,p_value1 => p_object_id);
		    x_msg_data := 'PA_TP_NO_NEG_WQ';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  END IF;
		ELSE
			--bug 3824042, round wq upto 2 decimal places
			--l_actual_work_quantity := nvl(p_actual_work_quantity,0);
			l_actual_work_quantity := nvl(round(p_actual_work_quantity,2),0);
		END IF;
	END IF;

	IF p_est_remaining_effort = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
	----- OR p_est_remaining_effort < 0 ---4378391 (5726773 allow neg ETC)
	THEN
		l_est_remaining_effort := 0;
	ELSE
		--bug 3824042
		--l_est_remaining_effort := nvl(p_est_remaining_effort,0);
		l_est_remaining_effort := nvl(round(p_est_remaining_effort,5),0);
	END IF;

	/* 5726773
	--3779387
	IF l_est_remaining_effort < 0
	THEN
		PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                             ,p_msg_name       => 'PA_TP_NO_NEG_ETC');
		x_msg_data := 'PA_TP_NO_NEG_ETC';
		x_return_status := 'E';
		RAISE  FND_API.G_EXC_ERROR;
	END IF;
	--3779387
	*/

	--maansari: fpm changes 3420093
	IF p_actual_effort = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
	THEN
		l_actual_effort := 0;
	ELSE
		--bug 3824042
		--l_actual_effort := nvl(p_actual_effort,0);
		l_actual_effort := nvl(round(p_actual_effort,5),0);
	END IF;

	/*3970229  --3779387   negative actuals are allowed */

	--maansari4/5
	IF ( p_planned_effort = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM or
         p_planned_effort IS NULL or
         p_planned_effort = 0 )
	THEN
		l_planned_effort := 1;
	ELSE
		l_planned_effort := nvl(p_planned_effort,0);
	END IF;
	--maansari4/5

	IF p_planned_cost = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
	THEN
		l_planned_cost := 0;
	ELSE
		l_planned_cost := nvl(p_planned_cost,0);
	END IF;
	--End maansari:


	IF p_percent_complete = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
	OR p_percent_complete is null
	THEN
		l_percent_complete := 0;
	ELSE
		l_percent_complete := round(p_percent_complete,8); --Bug 6854114
	END IF;

	IF p_scheduled_start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
	THEN
		l_scheduled_start_date := null;
	ELSE
		l_scheduled_start_date := p_scheduled_start_date;
	END IF;

	IF p_scheduled_finish_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
	THEN
		l_scheduled_finish_date := null;
	ELSE
		l_scheduled_finish_date := p_scheduled_finish_date;
	END IF;

	IF p_actual_start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
	THEN
		l_actual_start_date := null;
	ELSE
		l_actual_start_date := p_actual_start_date;
	END IF;

	IF p_actual_finish_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
	THEN
		l_actual_finish_date := null;
	ELSE
		l_actual_finish_date := p_actual_finish_date;
	END IF;

	IF p_estimated_start_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
	THEN
		l_estimated_start_date := null;
	ELSE
		l_estimated_start_date := p_estimated_start_date;
	END IF;

	IF p_estimated_finish_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
	THEN
		l_estimated_finish_date := null;
	ELSE
		l_estimated_finish_date := p_estimated_finish_date;
	END IF;

	IF p_task_status = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
	THEN
		l_task_status := null;
	ELSE
		l_task_status := p_task_status;
	END IF;

	IF (p_pm_product_code   = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR ) THEN
		l_pm_product_code := NULL;
	ELSE
		l_pm_product_code := p_pm_product_code;
	END IF;

	-- Bug 3608422 : Changes Begin
	OPEN cur_check_published_version(p_structure_version_id, p_project_id);
	FETCH cur_check_published_version INTO l_published_structure;
	CLOSE cur_check_published_version;

	IF l_published_structure = 'Y'
	OR p_structure_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
	OR p_prog_fom_wp_flag = 'N'   --Not a working workplan progress.
	THEN
		l_structure_version_id := null;
	ELSE
		l_structure_version_id := p_structure_version_id;
	END IF;

	-- Bug 3608422 : Changes End

	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_published_structure='||l_published_structure, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_structure_version_id='||l_structure_version_id, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_element_struc_type='||l_element_struc_type, x_Log_Level=> 3);
	END IF;


	IF L_ALLW_PHY_PRCNT_CMP_OVERRIDES = 'N'
	AND l_element_struc_type = 'WORKPLAN'
	AND p_calling_module = 'AMG' -- Bug 3807745
	THEN
		IF l_percent_complete > 0
		THEN
			--You cannot override percent_complete
			PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                 p_msg_name       => 'PA_TP_NO_PC_OVRIDE');
			x_msg_data := 'PA_TP_NO_PC_OVRIDE';
			x_return_status := 'E';
			-- RAISE  FND_API.G_EXC_ERROR;
			l_tp_pcc_est_disabl := 'Y';
		END IF;
	END IF;

	IF (l_percent_complete < 0 or l_percent_complete > 100) THEN
	  IF p_pm_product_code = 'MSPROJECT'
	  THEN
	    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
	                         ,p_msg_name       => 'PA_PERC_COMP_INV_MSP'
	                         ,p_token1 => 'TASK_NAME'
	                         ,p_value1 => PA_TASK_UTILS.get_task_name(p_object_id)
	                         ,p_token2 => 'TASK_NUMBER'
	                         ,p_value2 => PA_TASK_UTILS.get_task_number(p_object_id));
	    x_msg_data := 'PA_PERC_COMP_INV';
	    x_return_status := 'E';
	    RAISE  FND_API.G_EXC_ERROR;
	  ELSE
	    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
	                         ,p_msg_name       => 'PA_PERC_COMP_INV_AMG'
	                         ,p_token1 => 'TASK_ID'
	                         ,p_value1 => p_object_id
	                        );
	    x_msg_data := 'PA_PERC_COMP_INV';
	    x_return_status := 'E';
	    RAISE  FND_API.G_EXC_ERROR;
	  END IF;
	END IF;

	--Get the SCHEDULE DATES for lowest level task.
	IF NVL( l_lowest_level_task, 'N' ) = 'Y'
	AND l_element_struc_type = 'WORKPLAN'
	THEN
		OPEN cur_pa_proj_sch;
		FETCH cur_pa_proj_sch INTO l_scheduled_start_date, l_scheduled_finish_date;
		CLOSE cur_pa_proj_sch;
	END IF;
	--Get the SCHEDULE DATES for lowest level task.

	IF l_return_status <> FND_API.G_RET_STS_SUCCESS
	THEN
		PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                            ,p_msg_name       => l_error_message_code);
		x_msg_data := l_error_message_code;
		x_return_status := 'E';
		RAISE  FND_API.G_EXC_ERROR;
	END IF;

	IF p_progress_mode <> 'BACKDATED'
	AND l_element_struc_type = 'WORKPLAN'
	THEN
		---- this will do for summary tasks also ???????????
		IF l_percent_complete = 100
		THEN
			l_est_remaining_effort := 0;
		END IF;
	END IF;

	IF (l_percent_complete < 100 AND l_percent_complete_flag = 'Y')
	THEN
		l_actual_finish_date := to_date(null);
	END IF;

	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Going to check status and start date, finish dates combination', x_Log_Level=> 3);
	END IF;


	--Added by rtarway for BUG 3819619, This will be executed in case user passed invalid project_status_code as task_status
	IF ( p_calling_module = 'AMG' AND (l_task_status2 IS NULL or l_task_status2 = '') )
	THEN
		IF p_object_type = 'PA_TASKS'
		THEN
		  IF p_pm_product_code = 'MSPROJECT'
		  THEN
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_INV_TSK_STAT_MSP'
		                         ,p_token1 => 'TASK_NAME'
		                         ,p_value1 => PA_TASK_UTILS.get_task_name(p_object_id)
		                         ,p_token2 => 'TASK_NUMBER'
		                         ,p_value2 => PA_TASK_UTILS.get_task_number(p_object_id));
		    x_msg_data := 'PA_TP_INV_TSK_STAT';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  ELSE
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_INV_TSK_STAT_AMG'
		                         ,p_token1 => 'TASK_ID'
		                         ,p_value1 => p_object_id
                                 );
		    x_msg_data := 'PA_TP_INV_TSK_STAT';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  END IF;
		END IF;
	END IF;

	IF l_element_struc_type = 'WORKPLAN'
	THEN
		IF l_est_remaining_eff_flag = 'N'
		THEN

			/* Begin fix for Bug # 4068245. */
			IF ((l_actual_effort > 0) and (l_structure_sharing_code in ('SPLIT_MAPPING', 'SPLIT_NO_MAPPING') or l_structure_sharing_code is null))-- Added OR condition for Bug 4767821
			THEN
				--You cannot enter actual effort.
				IF p_pm_product_code = 'MSPROJECT'
				THEN
				  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
				                      ,p_msg_name       => 'PA_TP_ACT_EFF_DISABL_MSP'
				                      ,p_token1 => 'TASK_NAME'
				                      ,p_value1 => PA_TASK_UTILS.get_task_name(p_object_id)
				                      ,p_token2 => 'TASK_NUMBER'
				                      ,p_value2 => PA_TASK_UTILS.get_task_number(p_object_id)
				                      ,p_token3 => 'PROJECT_NAME'
				                      ,p_value3 => PA_TASK_UTILS.get_project_name(p_project_id)
				                      ,p_token4 => 'PROJECT_NUMBER'
				                      ,p_value4 => PA_TASK_UTILS.get_project_number(p_project_id)
				                      );
				  x_msg_data := 'PA_TP_ACT_EFF_DISABL';
				  x_return_status := 'E';
				  l_tp_pcc_est_disabl := 'Y';
				ELSE
				  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
				                      ,p_msg_name       => 'PA_TP_ACT_EFF_DISABL_AMG'
				                      ,p_token2 => 'TASK_ID'
				                      ,p_value2 => p_object_id
				                      ,p_token3 => 'PROJECT_ID'
				                      ,p_value4 => p_project_id);
				  x_msg_data := 'PA_TP_ACT_EFF_DISABL';
				  x_return_status := 'E';
				  l_tp_pcc_est_disabl := 'Y';
				END IF;
			END IF;

			/* Begin commenting out code to fix Bug # 4086574.

			The following validataion has been commented out because of the following reasons:
			1). This validataion is redundant as there is no way a user can enter an etc effort value
			   from self service when etc effort collection is disabled, since the etc effort will be
			   displayed on non-editable fields.
			2). This validation throws an unnecessary error when there exists a non-zero value of etc effort
			   for a task with etc effort collection disabled as a result of etc effort being defaulted as
			   (planned effort - actual effort) or as a result of etc effort being rolled-up from sub-tasks
			   or assignments.

			IF (( l_est_remaining_effort > 0) and (l_structure_sharing_code in ('SHARE_FULL', 'SHARE_PARTIAL')))
			THEN
				--You cannot enter etc effort.
				PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                    p_msg_name       => 'PA_TP_EST_REM_EFF_DISABL');
				x_msg_data := 'PA_TP_EST_REM_EFF_DISABL';
				x_return_status := 'E';
				l_tp_pcc_est_disabl := 'Y';
			END IF;

			End commenting out code to fix Bug # 4086574. */

			/* End fix for Bug # 4068245. */

		ELSE
			--perform the following only if its not called from Self Service
			--IF p_calling_module <> 'SELF_SERVICE'  --maansari4/4
			IF p_calling_module = 'AMG' --4085882, rtarway
			THEN
				IF NVL( l_lowest_level_task, 'N' ) = 'N' AND (l_structure_sharing_code = 'SHARE_FULL') AND  --Added for Bug# 6944034
				( l_actual_effort > 0 OR l_est_remaining_effort > 0 )
				THEN
					--You cannot enter actual or ETC effort at summary level.
					PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
						p_msg_name       => 'PA_TP_CANT_NTR_EFF_SUMMRY');
					x_msg_data := 'PA_TP_CANT_NTR_EFF_SUMMRY';
					x_return_status := 'E';
					--RAISE  FND_API.G_EXC_ERROR;   --rasie error message.
					l_tp_pcc_est_disabl := 'Y';
				ELSIF ( l_assignment_exists = 'Y' ) -- Bug 3784904 : Changed from N to Y
				AND ( l_actual_effort > 0 OR l_est_remaining_effort > 0 )
				THEN
					--You cannot effort when assignments exists for the task.
					IF p_pm_product_code = 'MSPROJECT'
					THEN
					  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
					                      ,p_msg_name       => 'PA_TP_NO_EFF_WITH_ASSN_MSP'
					                      ,p_token1 => 'TASK_NAME'
					                      ,p_value1 => PA_TASK_UTILS.get_task_name(p_object_id)
					                      ,p_token2 => 'TASK_NUMBER'
					                      ,p_value2 => PA_TASK_UTILS.get_task_number(p_object_id)
					                      );
					  x_msg_data := 'PA_TP_NO_EFF_WITH_ASSN';
					  x_return_status := 'E';
					  --RAISE  FND_API.G_EXC_ERROR;   --rasie error message.
					  l_tp_pcc_est_disabl := 'Y';
					ELSE
					  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
					                      ,p_msg_name       => 'PA_TP_NO_EFF_WITH_ASSN_AMG'
					                      ,p_token1 => 'TASK_ID'
					                      ,p_value1 => p_object_id);
					  x_msg_data := 'PA_TP_NO_EFF_WITH_ASSN';
					  x_return_status := 'E';
					  --RAISE  FND_API.G_EXC_ERROR;   --rasie error message.
					  l_tp_pcc_est_disabl := 'Y';
					END IF;
				ELSIF NVL( l_lowest_level_task, 'N' ) = 'N'
				AND l_structure_sharing_code = 'SHARE_FULL' --Bug 3586648
				AND ( l_actual_effort > 0 )
				THEN
					--You cannot enter actual effort for shared structures.
					PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
					    p_msg_name       => 'PA_TP_NO_ACT_EFF_4SH_STR');
					x_msg_data := 'PA_TP_NO_ACT_EFF_4SH_STR';
					x_return_status := 'E';
					--RAISE  FND_API.G_EXC_ERROR;   --rasie error message.
					l_tp_pcc_est_disabl := 'Y';
				END IF;
			END IF;  -- IF p_calling_module <> 'SELF_SERVICE'  --maansari4/4
		END IF; --l_est_remaining_eff_flag = 'N'
	END IF;    --l_element_struc_type

	IF x_return_status = 'E' THEN -- Bug 3784904
		RAISE  FND_API.G_EXC_ERROR;
	END IF;
	--End maansari: fpm changes
	----- End of validation

	/* Bug 2747143: Display PA_TP_EST_REM_EFF_DISABL and PA_TP_PCC_DISABL together
       if both are disabled while uploading from MSP */
	IF l_est_remaining_eff_flag = 'N'
	AND l_element_struc_type = 'WORKPLAN'
	AND NVL( l_lowest_level_task, 'N' ) = 'Y'
	AND p_calling_module = 'AMG' -- Bug 3807745
	THEN
		IF l_est_remaining_effort > 0
		THEN
			--You cannot enter estimated remaing effort.
			IF p_pm_product_code = 'MSPROJECT'
			THEN
			  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
			                      ,p_msg_name       => 'PA_TP_EST_REM_EFF_DISABL_MSP'
			                      ,p_token1 => 'TASK_NAME'
			                      ,p_value1 => PA_TASK_UTILS.get_task_name(p_object_id)
			                      ,p_token2 => 'TASK_NUMBER'
			                      ,p_value2 => PA_TASK_UTILS.get_task_number(p_object_id)
			                      ,p_token3 => 'PROJECT_NAME'
			                      ,p_value3 => PA_TASK_UTILS.get_project_name(p_project_id)
			                      ,p_token4 => 'PROJECT_NUMBER'
			                      ,p_value4 => PA_TASK_UTILS.get_project_number(p_project_id)
			                      );
			  x_msg_data := 'PA_TP_EST_REM_EFF_DISABL';
			  x_return_status := 'E';
			  --RAISE  FND_API.G_EXC_ERROR;
			  l_tp_pcc_est_disabl := 'Y';
			ELSE
			  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
			                      ,p_msg_name       => 'PA_TP_EST_REM_EFF_DISABL_AMG'
			                      ,p_token1 => 'TASK_ID'
			                      ,p_value1 => p_object_id
			                      ,p_token2 => 'PROJECT_ID'
			                      ,p_value2 => p_project_id);
			  x_msg_data := 'PA_TP_EST_REM_EFF_DISABL';
			  x_return_status := 'E';
			  --RAISE  FND_API.G_EXC_ERROR;
			  l_tp_pcc_est_disabl := 'Y';
			END IF;
		END IF;
	END IF;

	IF l_percent_complete_flag = 'N'
	AND l_element_struc_type = 'WORKPLAN'
	AND NVL( l_lowest_level_task, 'N' ) = 'Y'
	AND p_calling_module = 'AMG' -- Bug 3807745
	THEN
		IF l_percent_complete > 0
		THEN
			--You cannot enter percent_complete
			IF p_pm_product_code = 'MSPROJECT'
			THEN
			  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
			                      ,p_msg_name       => 'PA_TP_PCC_DISABL_MSP'
			                      ,p_token1 => 'TASK_NAME'
			                      ,p_value1 => PA_TASK_UTILS.get_task_name(p_object_id)
			                      ,p_token2 => 'TASK_NUMBER'
			                      ,p_value2 => PA_TASK_UTILS.get_task_number(p_object_id)
			                      ,p_token3 => 'PROJECT_NAME'
			                      ,p_value3 => PA_TASK_UTILS.get_project_name(p_project_id)
			                      ,p_token4 => 'PROJECT_NUMBER'
			                      ,p_value4 => PA_TASK_UTILS.get_project_number(p_project_id)
			                      );
			  x_msg_data := 'PA_TP_PCC_DISABL';
			  x_return_status := 'E';
			  -- RAISE  FND_API.G_EXC_ERROR;
			  l_tp_pcc_est_disabl := 'Y';
			ELSE
			  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
			                      ,p_msg_name       => 'PA_TP_PCC_DISABL_AMG'
			                      ,p_token1 => 'TASK_ID'
			                      ,p_value1 => p_object_id
			                      ,p_token2 => 'PROJECT_ID'
			                      ,p_value2 => p_project_id);
			  x_msg_data := 'PA_TP_PCC_DISABL';
			  x_return_status := 'E';
			  -- RAISE  FND_API.G_EXC_ERROR;
			  l_tp_pcc_est_disabl := 'Y';
			END IF;
		END IF;
	END IF;

	-- Raise in case of any of the above two errors
	IF l_tp_pcc_est_disabl = 'Y'
	THEN
		RAISE  FND_API.G_EXC_ERROR;
	END IF;

	-- Bug 3606627 : AMG Changes, Getting planned values
	IF p_calling_module = 'AMG' THEN
		BEGIN
		--bug 3824042
			SELECT
			/*+ INDEX(pji_fm_xbs_accum_tmp1 pji_fm_xbs_accum_tmp1_n1)*/ -- Fix for Bug # 4162534.
			nvl(pfxat.prj_brdn_cost,0) planned_cost, nvl(pfxat.labor_hours,0)+nvl(pfxat.equipment_hours,0) planned_effort
			INTO l_planned_cost, l_planned_effort
			FROM  pji_fm_xbs_accum_tmp1 pfxat
			WHERE pfxat.project_id = p_project_id
			AND pfxat.struct_version_id = p_structure_version_id
			AND pfxat.project_element_id = p_object_id
			AND pfxat.calendar_type = 'A'
			AND pfxat.plan_version_id > 0
			AND pfxat.txn_currency_code is null;
		EXCEPTION
			WHEN OTHERS THEN
			null;
		END;
	END IF;


	IF NVL( l_lowest_level_task, 'N' ) = 'Y'
	AND l_element_struc_type = 'WORKPLAN'
	THEN
		IF l_wq_enabled_flag = 'Y'
		THEN
			l_last_cumulative_wrk_qty := PA_PROGRESS_UTILS.get_last_cumulative(
                                                 p_project_id         => p_project_id
                                                ,p_object_id          => p_object_id
                                                ,p_object_type        => p_object_type
                                                ,p_as_of_date         => p_as_of_date  );
			IF l_actual_wq_entry_code = 'INCREMENTAL'
			THEN
			--calculate cumulative;
				l_cumulative_work_qty :=  l_actual_work_quantity + NVL( l_last_cumulative_wrk_qty, 0 );
				l_incremental_work_qty := l_actual_work_quantity;

				IF l_base_percent_comp_deriv_code= 'WQ_DERIVED' --maansari5/6 3614860
				THEN
					l_base_percent_complete := PA_PROGRESS_UTILS.Calc_base_percent(
						p_task_id              => p_object_id
						,p_incr_work_qty        => l_incremental_work_qty
						,p_cuml_work_qty        => l_last_cumulative_wrk_qty
						,p_est_remaining_effort => l_est_remaining_effort
						);
				END IF;
			ELSIF l_actual_wq_entry_code = 'CUMULATIVE'
			THEN
				--calculate incremental;
				l_incremental_work_qty := l_actual_work_quantity - NVL( l_last_cumulative_wrk_qty, 0 );
				l_cumulative_work_qty := l_actual_work_quantity;
				IF l_base_percent_comp_deriv_code= 'WQ_DERIVED' --maansari5/6 bug 3614860
				THEN
					l_base_percent_complete := PA_PROGRESS_UTILS.Calc_base_percent(
						    p_task_id              => p_object_id
						    ,p_incr_work_qty        => l_incremental_work_qty
						    ,p_cuml_work_qty        => l_cumulative_work_qty
						    ,p_est_remaining_effort => l_est_remaining_effort
						       );
				END IF;
			END IF;
		END IF;

		IF l_est_remaining_eff_flag = 'Y'
		-- Bug 4632744 : Added COST also here. We just need to derive some % complete
		-- here to populate variable l_base_percent_complete.
		-- So that we can do status and % complete check further
		-- Actual and correct % compete  will be calculated in partial rollup and rollup API's
		AND l_base_percent_comp_deriv_code in( 'EFFORT','COST') --maansari: fpm changes --bug 3784733
		AND p_actual_effort <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
		AND p_actual_effort IS NOT NULL
		THEN
			--maansari7/27 bug 3784733
			l_planned_effort := l_actual_effort+l_est_remaining_effort;
			IF l_planned_effort = 0
			THEN
				l_planned_effort := 1;
			END IF;
			l_base_percent_complete := (l_actual_effort/l_planned_effort)*100; --bug 3781922
			--maansari7/27 bug 3784733
			/* 5726773
			IF l_actual_effort < 0 THEN-- 4632744
				l_base_percent_complete := 0;
			END IF;
			*/
 	                --5726773
 	                if l_base_percent_complete < 0 then
 	                    l_base_percent_complete := 0;
 	                elsif l_base_percent_complete > 100 then
 	                         l_base_percent_complete := 100;
 	                end if;
		END IF;

		--bug 3824042, round base percent upto 2 decimal places
		l_base_percent_complete := round(l_base_percent_complete, 8); --Bug 6854114
	END IF;

	--maansari5/6  bug3614860

	--do not copy base pc to override pc. maansari5/21
	IF ( p_percent_complete = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR
		p_percent_complete IS NULL)
	AND l_percent_complete = 0
	THEN
		l_percent_complete := null;
	END IF;

	---------Added by rtarway--------------------------
	-- Added For Bug 3630743
	--It is added here so that previous checks do not get affected by the changed value of l_est_remaining_effort
	IF p_est_remaining_effort = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        AND NVL( l_lowest_level_task, 'N' ) <> 'N'
        AND ( PA_PROGRESS_UTILS.check_assignment_exists(p_project_id,p_object_version_id,p_object_type) <> 'N' ) -- Bug 3784904 Changed from object_id to object_version_id
        AND l_element_struc_type = 'WORKPLAN'
        AND l_est_remaining_eff_flag <> 'N'
	THEN
		----5726773   l_est_remaining_effort := l_planned_effort - l_actual_effort;
 	          l_est_remaining_effort := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_planned_effort,l_actual_effort); --5726773
	END IF;
	----------end added by rtarway for bug 3630743-----

	IF NVL( l_lowest_level_task, 'N' ) = 'Y'
	THEN
		l_base_progress_status_code := p_progress_status_code;
	END IF;

	--bug 3851528
	IF NVL( l_lowest_level_task, 'N' ) = 'Y'
	AND l_element_struc_type = 'WORKPLAN'
	AND l_assignment_exists = 'N'
	THEN
		--Update outdated flag back to 'Y'
		UPDATE pa_proj_elements
		SET progress_outdated_flag = 'Y'
		WHERE proj_element_id = p_object_id
		AND project_id = p_project_id
		AND object_type = p_object_type;
	END IF;
	--bug 3851528

	IF l_element_struc_type = 'WORKPLAN'
	THEN
        -- Moved outside if block for bug 8277820
		/*l_last_progress_date := PA_PROGRESS_UTILS.GET_LATEST_AS_OF_DATE(
                       p_task_id      => l_task_id
                      ,p_project_id   => p_project_id
                      ,p_object_id    => p_object_id
                      ,p_object_type  => p_object_type
                      ,p_structure_type => p_structure_type); */

		l_working_aod := PA_PROGRESS_UTILS.Working_version_exist(
			p_object_id	=> p_object_id -- Bug 3764224
			,p_task_id      => p_object_id
			,p_project_id   => p_project_id
			,p_object_type  => p_object_type
			,p_as_of_date   => p_as_of_date);  --bug 4185364
	END IF;

        -- Moved outside if block for bug 8277820
           l_last_progress_date := PA_PROGRESS_UTILS.GET_LATEST_AS_OF_DATE(
                          p_task_id      => l_task_id
                         ,p_project_id   => p_project_id
                         ,p_object_id    => p_object_id
                         ,p_object_type  => p_object_type
                         ,p_structure_type => p_structure_type);


	l_progress_exists_on_aod := PA_PROGRESS_UTILS.check_prog_exists_on_aod(
			p_task_id          => p_object_id
			,p_object_id          => p_object_id -- Bug 3764224
			,p_as_of_date         => p_as_of_date
			,p_project_id         => p_project_id
			,p_object_version_id  => p_object_version_id
			,p_object_type        => p_object_type
			);

	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_progress_mode='||p_progress_mode, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_last_progress_date='||l_last_progress_date, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_working_aod='||l_working_aod, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_progress_exists_on_aod='||l_progress_exists_on_aod, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_base_percent_complete='||l_base_percent_complete, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_percent_complete='||l_percent_complete, x_Log_Level=> 3);
	END IF;


	IF p_progress_mode = 'BACKDATED'
	THEN
		IF l_element_struc_type = 'WORKPLAN'
		THEN
			IF l_last_progress_date IS NULL
			THEN
				--Add message
				--You cannot create a backdated progress when there does not
				--exists any progress for this task.
				PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
					,p_msg_name       => 'PA_TP_WRONG_PRG_MODE1');
				x_msg_data := 'PA_TP_WRONG_PRG_MODE1';
				x_return_status := 'E';
				RAISE  FND_API.G_EXC_ERROR;
			ELSIF p_as_of_date > l_last_progress_date    -- progress exists before  as of date
			THEN
				--You cannot create a backdated progress when there exists a progress
				--before AS_OF_DATE for this task.
				PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
					p_msg_name       => 'PA_TP_WRONG_PRG_MODE2',
					p_token1         => 'AS_OF_DATE',
					p_value1         => l_last_progress_date );
				x_msg_data := 'PA_TP_WRONG_PRG_MODE2';
				x_return_status := 'E';
				RAISE  FND_API.G_EXC_ERROR;
			ELSIF p_as_of_date < l_last_progress_date    -- backdated
			THEN
				IF l_progress_exists_on_aod = 'WORKING'
				THEN
					--update the existing working progress record to publish and roll up
					l_db_action := 'UPDATE';
				ELSIF l_progress_exists_on_aod = 'N'
				THEN
					--Create a new published progress record and roll up. (if l_progress_exists_on_aod = 'PUBLISHED'
					--then update last progress current flag = 'N')
					--1. if l_progress_exists_on_aod = 'N' or 'Y' then we create new record in ppc
					--2. if l_progress_exists_on_aod = 'N' then new record in PR otherwise its an update to Progress Rollup
					l_db_action := 'CREATE';
				ELSIF l_progress_exists_on_aod = 'PUBLISHED' and p_record_version_number is null THEN
					--You cannot create a backdated progress when there exists a progress
					-- on AS_OF_DATE for this task. can correct but no backdate.
					PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
							p_msg_name       => 'PA_TP_WRONG_PRG_MODE5');
					x_msg_data := 'PA_TP_WRONG_PRG_MODE5';
					x_return_status := 'E';
					RAISE  FND_API.G_EXC_ERROR;
				ELSIF l_progress_exists_on_aod = 'PUBLISHED' and p_record_version_number is not null THEN
					l_db_action := 'CREATE';
					l_process := 'CORRECT';
				END IF;

				--validate actuals
				IF ( l_actual_start_date IS NOT NULL AND l_actual_start_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) OR
				-- 4533112 : It was start date again in below condition, changed it to shd be finish date here
				( l_actual_finish_date IS NOT NULL AND l_actual_finish_date <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) OR
				( p_actual_work_quantity IS NOT NULL AND p_actual_work_quantity <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )
				THEN
					--Add message
					--You cannot pass actuals for backdated progress.
					PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
							 ,p_msg_name       => 'PA_TP_ACTUALS_NOT_ALLWD');
					x_msg_data := 'PA_TP_ACTUALS_NOT_ALLWD';
					x_return_status := 'E';
					RAISE  FND_API.G_EXC_ERROR;
				END IF;
			ELSIF p_as_of_date = l_last_progress_date    -- Current
			THEN
				IF l_progress_exists_on_aod = 'WORKING'
				THEN
					--update the existing working progress record ( publish and roll it only when p_action = 'PUBLISH' )
					l_db_action := 'UPDATE';
				ELSIF l_progress_exists_on_aod = 'PUBLISHED' and p_record_version_number is null THEN
					--You cannot create a backdated progress when there exists a progress
					-- on AS_OF_DATE for this task. can correct but no backdate.
					PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
							p_msg_name       => 'PA_TP_WRONG_PRG_MODE5');
					x_msg_data := 'PA_TP_WRONG_PRG_MODE5';
					x_return_status := 'E';
					RAISE  FND_API.G_EXC_ERROR;
				ELSIF l_progress_exists_on_aod = 'PUBLISHED' OR l_progress_exists_on_aod = 'N'
				THEN
					--Create a new working progress record.  ( publish and roll it only when p_action = 'PUBLISH' )
					--1. if l_progress_exists_on_aod = 'N' or 'Y' then we create new record in ppc
					--2. if l_progress_exists_on_aod = 'N' then new record in PR otherwise its an update to Progress Rollup
					l_db_action := 'CREATE';
					l_process := 'CORRECT';
				END IF;
			END IF;
                        -- Start. Added for bug 8277820
          ElsIf l_element_struc_type = 'FINANCIAL'
          THEN
            IF p_as_of_date < l_last_progress_date    -- backdated
            THEN

               IF l_progress_exists_on_aod = 'WORKING'
               THEN
                  --update the existing working progress record to publish and roll up
                  l_db_action := 'UPDATE';
               ELSIF l_progress_exists_on_aod = 'N'
               THEN
                  --Create a new published progress record and roll up. (if l_progress_exists_on_aod = 'PUBLISHED'
                  --then update last progress current flag = 'N')
                  --1. if l_progress_exists_on_aod = 'N' or 'Y' then we create new record in ppc
                  --2. if l_progress_exists_on_aod = 'N' then new record in PR otherwise its an update to Progress Rollup
                  l_db_action := 'CREATE';
               ELSIF l_progress_exists_on_aod = 'PUBLISHED' and p_record_version_number is null THEN
                  --You cannot create a backdated progress when there exists a progress
                  -- on AS_OF_DATE for this task. can correct but no backdate.
                  PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                    p_msg_name       => 'PA_TP_WRONG_PRG_MODE5');
                  x_msg_data := 'PA_TP_WRONG_PRG_MODE5';
                  x_return_status := 'E';
                  RAISE  FND_API.G_EXC_ERROR;
               ELSIF l_progress_exists_on_aod = 'PUBLISHED' and p_record_version_number is not null THEN
                  l_db_action := 'CREATE';
                  l_process := 'CORRECT';
               END IF;
             END IF;
            -- End. Added for bug 8277820

		END IF;   --<< l_element_struc_type = 'WORKPLAN' >>
	ELSIF p_progress_mode = 'FUTURE'
	THEN

		IF p_as_of_date < NVL( l_last_progress_date, p_as_of_date )  AND l_working_aod IS NULL  -- progress exists after  as of date
		   AND l_element_struc_type = 'WORKPLAN'    --maansari fpm changes
		THEN
			--You cannot create a future progress when there exists a progress
			--after AS_OF_DATE for this task.
			PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
					p_msg_name       => 'PA_TP_WRONG_PRG_MODE3',
					p_token1         => 'AS_OF_DATE',
					p_value1         => p_as_of_date );
			x_msg_data := 'PA_TP_WRONG_PRG_MODE3';
			x_return_status := 'E';
			RAISE  FND_API.G_EXC_ERROR;
		ELSE
			--Validate as of date
			-- Bug 3627315 : Check valid as of date should not be called from AMG or Task Progress Details page
			-- Beacuse from both the places we submit progress for all objects against one cycle date
			IF l_element_struc_type = 'WORKPLAN'
			AND p_calling_module <> 'AMG' -- Bug 3627315
			--        AND p_calling_module <> 'TASK_PROG_DET_PAGE' -- Bug 3627315  maansari this is not required here.
			AND PA_PROGRESS_UTILS.CHECK_VALID_AS_OF_DATE( p_as_of_date, p_project_id, p_object_id,p_object_type,p_object_id/*Bug 3764224 */) = 'N'
			AND nvl(l_last_progress_date,p_as_of_date + 1 ) <> p_as_of_date
			THEN
				--Add message
				--Invalid as of date

				PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
				                     ,p_msg_name       => 'PA_TP_INV_AOD2'
				                     ,p_token1 => 'AS_OF_DATE'
				                     ,p_value1 => p_as_of_date);
				x_msg_data := 'PA_TP_INV_AOD2';
				x_return_status := 'E';
				RAISE FND_API.G_EXC_ERROR;
			END IF;

			IF l_progress_exists_on_aod = 'WORKING'
			THEN
				--update the existing working progress record ( publish and roll it only when p_action = 'PUBLISH' )
				l_db_action := 'UPDATE';
			ELSIF l_progress_exists_on_aod = 'PUBLISHED' OR l_progress_exists_on_aod = 'N'
			THEN
				--Create a new working progress record.  ( publish and roll it only when p_action = 'PUBLISH' )
				--1. if l_progress_exists_on_aod = 'N' or 'Y' then we create new record in ppc
				--2. if l_progress_exists_on_aod = 'N' then new record in PR otherwise its an update to Progress Rollup
				l_db_action := 'CREATE';
				IF  l_working_aod IS NOT NULL  --there is only one working version allowed
				--OR  p_as_of_date = l_last_progress_date--Added by rtarway for BUG4091457
				OR  (p_as_of_date = l_last_progress_date AND p_action = 'PUBLISH') -- BUG 4180026, for Recalc it should create new record.
				THEN
					l_db_action := 'UPDATE';
				END IF;
			END IF;
		END IF;
	END IF;

	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Validation is Over', x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_db_action='||l_db_action, x_Log_Level=> 3);
	END IF;

	IF NVL( l_lowest_level_task, 'N' ) = 'Y'
	AND l_element_struc_type = 'WORKPLAN' AND p_progress_mode <> 'BACKDATED'
	AND (l_actual_effort IS NOT NULL or l_est_remaining_effort IS NOT NULL) -- Bug 3957792
	AND l_assignment_exists = 'N' -- Bug 4632744
	THEN

		OPEN c_get_resource_list_member_id(p_project_id, p_object_id, p_structure_version_id, p_object_version_id);
		FETCH c_get_resource_list_member_id
		INTO
			l_resource_assignment_id,
			l_resource_list_member_id,
			l_txn_currency_code,
			l_planned_quantity ,
			l_planned_bur_cost_txn_cur,
			l_planned_bur_cost_projfunc,
			l_planned_bur_cost_proj_cur,
			l_planned_raw_cost_txn_cur,
			l_planned_raw_cost_proj_cur,
			l_planned_raw_cost_projfunc,
			l_rbs_element_id,
			l_rate_based_flag,
			l_resource_class_code,
			l_budget_version_id --- 4372462
				   ;
		CLOSE c_get_resource_list_member_id;


		IF g1_debug_mode  = 'Y' THEN
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_resource_assignment_id'||l_resource_assignment_id, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_resource_list_member_id'||l_resource_list_member_id, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_txn_currency_code'||l_txn_currency_code, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_quantity'||l_planned_quantity, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_bur_cost_txn_cur'||l_planned_bur_cost_txn_cur, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_bur_cost_projfunc'||l_planned_bur_cost_projfunc, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_bur_cost_proj_cur'||l_planned_bur_cost_proj_cur, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_raw_cost_txn_cur'||l_planned_raw_cost_txn_cur, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_raw_cost_proj_cur'||l_planned_raw_cost_proj_cur, x_Log_Level=> 3);
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_raw_cost_projfunc'||l_planned_raw_cost_projfunc, x_Log_Level=> 3);
		END IF;

		-- BEGIN: Adding code to fix Bug # 3815741.

		--bug 4021315, call derive task assignments only if actual or etc is entered
		IF l_resource_list_member_id IS NULL AND l_assignment_exists = 'N'
		AND ( l_actual_effort <> 0 OR l_est_remaining_effort <> 0)
		THEN
			BEGIN
				IF g1_debug_mode  = 'Y' THEN
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'res list mem not found, calling derive_task_assignments', x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_object_version_id='||p_object_version_id, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_scheduled_start_date='||l_scheduled_start_date, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_scheduled_finish_date='||l_scheduled_finish_date, x_Log_Level=> 3);
				END IF;

				pa_task_assignments_pvt.derive_task_assignments
				  ( p_project_id               => p_project_id
				   ,p_task_version_id          => p_object_version_id
				   ,p_scheduled_start          => l_scheduled_start_date
				   ,p_scheduled_end            => l_scheduled_finish_date
				   ,p_resource_class_code      => 'PEOPLE'
				   ,p_resource_list_member_id  => null
				   --,p_unplanned_flag           => 'N' --bug 3819694, rtarway
				   ,p_unplanned_flag           => 'Y'
				   ,x_resource_assignment_id   => l_resource_assignment_id
				   ,x_task_version_id          => l_task_version_id_out
				   ,x_currency_code            => l_txn_currency_code
				   ,x_resource_list_member_id  => l_resource_list_member_id
				   ,x_rate_based_flag          => l_rate_based_flag_x
				   ,x_rbs_element_id           => l_rbs_element_id
				   ,x_msg_count                => l_msg_count
				   ,x_msg_data                 => l_msg_data
				   ,x_return_status            => l_return_status);

				IF g1_debug_mode  = 'Y' THEN
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'After call derive_task_assignments', x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_return_status='||l_return_status, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_resource_assignment_id='||l_resource_assignment_id, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_task_version_id_out='||l_task_version_id_out, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_txn_currency_code='||l_txn_currency_code, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_resource_list_member_id='||l_resource_list_member_id, x_Log_Level=> 3);
				END IF;

				-- Bug 3834339 : We should get the planned value after assignment is created
				OPEN c_get_resource_list_member_id(p_project_id, p_object_id, p_structure_version_id, p_object_version_id);
				FETCH c_get_resource_list_member_id
				INTO
					l_resource_assignment_id,
					l_resource_list_member_id,
					l_txn_currency_code,
					l_planned_quantity ,
					l_planned_bur_cost_txn_cur,
					l_planned_bur_cost_projfunc,
					l_planned_bur_cost_proj_cur,
					l_planned_raw_cost_txn_cur,
					l_planned_raw_cost_proj_cur,
					l_planned_raw_cost_projfunc,
					l_rbs_element_id,
					l_rate_based_flag,
					l_resource_class_code,
					l_budget_version_id --- 4372462
					;
				CLOSE c_get_resource_list_member_id;


				IF g1_debug_mode  = 'Y' THEN
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_resource_assignment_id'||l_resource_assignment_id, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_resource_list_member_id'||l_resource_list_member_id, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_txn_currency_code'||l_txn_currency_code, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_quantity'||l_planned_quantity, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_bur_cost_txn_cur'||l_planned_bur_cost_txn_cur, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_bur_cost_projfunc'||l_planned_bur_cost_projfunc, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_bur_cost_proj_cur'||l_planned_bur_cost_proj_cur, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_raw_cost_txn_cur'||l_planned_raw_cost_txn_cur, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_raw_cost_proj_cur'||l_planned_raw_cost_proj_cur, x_Log_Level=> 3);
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_raw_cost_projfunc'||l_planned_raw_cost_projfunc, x_Log_Level=> 3);
				END IF;

			EXCEPTION
				WHEN OTHERS THEN
					fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
						p_procedure_name => 'UPDATE_TASK_PROGRESS',
						p_error_text     => SUBSTRB('PA_TASK_ASSIGNMENTS_PUB.DERIVE_TASK_ASSIGNMENTS:'||SQLERRM,1,120));
					RAISE fnd_api.g_exc_error;
			END;

			IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
				PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
						  p_msg_name       => l_msg_data);
				x_msg_data := l_msg_data;
				x_return_status := 'E';
				x_msg_count := l_msg_count;
				RAISE  FND_API.G_EXC_ERROR;
			END IF;
		END IF;
	END IF;
	-- END: Adding code to fix Bug # 3815741.


	-- Bug 3951531 Begin

	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Bug 3951531', x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_lowest_level_task='||l_lowest_level_task, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_percent_complete='||l_percent_complete, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_element_struc_type='||l_element_struc_type, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_est_remaining_eff_flag='||l_est_remaining_eff_flag, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_BASE_PERCENT_COMP_DERIV_CODE='||l_BASE_PERCENT_COMP_DERIV_CODE, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_act_txn_bur_cost='||l_act_txn_bur_cost, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_etc_txn_bur_cost='||l_etc_txn_bur_cost, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_progress_mode='||p_progress_mode, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_percent_complete_flag='||l_percent_complete_flag, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_start_date='||l_actual_start_date, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_finish_date='||l_actual_finish_date, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_task_status2='||l_task_status2, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_task_status='||l_task_status, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_estimated_finish_date='||l_estimated_finish_date, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_estimated_start_date='||l_estimated_start_date, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_start_date='||l_actual_start_date, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_finish_date='||l_actual_finish_date, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_effort='||l_planned_effort, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_planned_cost='||l_planned_cost, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_base_percent_complete='||l_base_percent_complete, x_Log_Level=> 3);
	END IF;

	-- Bug 3922325 : Moved date defaulting code below
	-- BEGIN: Fix for Bug # 3957607.
	IF p_eff_rollup_percent_complete <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        AND p_eff_rollup_percent_complete IS NOT NULL
        AND p_percent_complete <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        AND p_percent_complete IS NOT NULL
	THEN
		-- Do not consider overriden pc if its same as effective rollup percent complete.
		-- This has to be done before we calculate: l_earned_value.
		IF nvl(round(p_eff_rollup_percent_complete,8),0) = l_percent_complete --Bug 6854114
		THEN
			l_percent_complete := null;
		END IF;
		l_eff_rollup_percent_comp := p_eff_rollup_percent_complete; --bug 3969840
	END IF;

	-- END: Fix for Bug # 3957607.

	-- Bug  3922325 Begin
	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Task Status and Dates Defaulting and Error', x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_percent_complete_flag='||l_percent_complete_flag, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_eff_rollup_percent_complete='||p_eff_rollup_percent_complete, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_percent_complete='||p_percent_complete, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_percent_complete='||l_percent_complete, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_base_percent_complete='||l_base_percent_complete, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_task_status2='||l_task_status2, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_task_status='||l_task_status, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_start_date='||l_actual_start_date, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_finish_date='||l_actual_finish_date, x_Log_Level=> 3);
	END IF;
	-- Bug  3922325 End

	-- Bug 3922325 Begin
	IF  l_element_struc_type = 'WORKPLAN'
	THEN
		-- Previous System Status code is derived, if someone intentionally trying to change to
		-- an invalid combination, so raise error instead of defaulting
		OPEN c_previous_task_status;
		FETCH c_previous_task_status INTO l_previous_status_code;
		CLOSE c_previous_task_status;

		l_prev_sys_status_code := PA_PROGRESS_UTILS.get_system_task_status( l_previous_status_code );
		IF g1_debug_mode  = 'Y' THEN
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_previous_status_code='||l_previous_status_code, x_Log_Level=> 3);
		END IF;
	END IF;
	-- Bug 3922325 End

	IF ( l_percent_complete_flag = 'Y') THEN
		-- Bug 3603636 Task Status Should be defaulted : As per Clint
		--Fixed for BUG 3762650 by rtarway, please see 3668168 for defaulting rules of status.
		-- 3922325 : Actual check should also be here
		-- Bug 4097710 : Used nvl in use of l_prev_sys_status_code
		IF ((nvl(l_percent_complete, l_base_percent_complete) > 0 AND nvl(l_percent_complete, l_base_percent_complete) < 100)
		AND (l_task_status2 IS NULL OR l_task_status2 IN ('NOT_STARTED','COMPLETED'))
		AND NVL(l_prev_sys_status_code, 'xyz') <> 'IN_PROGRESS')
		-- Bug 3922325 : Added Completed too. This is done so by changing just ETC, it should be able to make In Progress
		THEN
			l_task_status2 := 'IN_PROGRESS';
			l_task_status := '125';
			--User can put a task in cancelled or on hold even if % complete > 0
		ELSIF ( nvl(l_percent_complete, l_base_percent_complete) = 100 AND (l_task_status2 IS NULL OR l_task_status2 <> 'COMPLETED') AND NVL(l_prev_sys_status_code, 'xyz') <> 'COMPLETED' )
		THEN
			l_task_status2 := 'COMPLETED';
			l_task_status := '127';
		END IF;
	END IF;
        /* Changes by vvjoshi for bug#5374114 - START */

        IF (l_task_status2 = l_task_status2_temp) THEN
                        l_task_status2 := l_task_status2_temp;
                        l_task_status  := l_task_status_temp;
        END IF;

        /* Changes by vvjoshi for bug#5374114 - END */

	-- Bug  3922325 Begin
	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'After Default Status', x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_task_status2='||l_task_status2, x_Log_Level=> 3);
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_task_status='||l_task_status, x_Log_Level=> 3);
	END IF;
	-- Bug  3922325 End

	-- Bug 3922325 : Moved date defaulting code here from above. It should be after  l_percent_complete is derived and task_status is defaulted
	-- Begin
	IF p_progress_mode <> 'BACKDATED' AND l_element_struc_type = 'WORKPLAN'
	THEN
		IF NVL( l_lowest_level_task, 'N' ) = 'Y'   --bug 2667432
		THEN
			-- 4533112 Begin
			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Client Extension Logic Starts', x_Log_Level=> 3);
			END IF;

			OPEN c_get_dates_overrides;
			FETCH c_get_dates_overrides INTO
			l_db_date_override_flag
			, l_db_estimated_start_date
			, l_db_estimated_finish_date
			, l_db_actual_start_date
			, l_db_actual_finish_date;
			CLOSE c_get_dates_overrides;

			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_db_date_override_flag='||l_db_date_override_flag, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_db_estimated_start_date='||l_db_estimated_start_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_db_estimated_finish_date='||l_db_estimated_finish_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_db_actual_start_date='||l_db_actual_start_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_db_actual_finish_date='||l_db_actual_finish_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Calling PA_PROGRESS_CLIENT_EXTN.GET_TASK_RES_OVERRIDE_INFO with following params', x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_structure_version_id='||p_structure_version_id, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_object_type='||p_object_type, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_object_version_id='||p_object_version_id, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'p_object_id='||p_object_id, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_task_status='||l_task_status, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'nvl(l_percent_complete, l_base_percent_complete)='||nvl(l_percent_complete, l_base_percent_complete), x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_estimated_start_date='||l_estimated_start_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_estimated_finish_date='||l_estimated_finish_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_start_date='||l_actual_start_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_finish_date='||l_actual_finish_date, x_Log_Level=> 3);
			END IF;

			l_date_override_flag := 'N';

			PA_PROGRESS_CLIENT_EXTN.GET_TASK_RES_OVERRIDE_INFO(
				p_project_id            => p_project_id,
				p_structure_type        => 'WORKPLAN',
				p_structure_version_id  => p_structure_version_id,
				p_object_type           => p_object_type,
				p_object_id             => p_object_id,
				p_object_version_id     => p_object_version_id,
				p_proj_element_id       => p_object_id,
				p_task_status           => l_task_status,
				p_percent_complete      => nvl(l_percent_complete, l_base_percent_complete),
				p_estimated_start_date  => l_estimated_start_date,
				p_estimated_finish_date => l_estimated_finish_date,
				p_actual_start_date     => l_actual_start_date,
				p_actual_finish_date    => l_actual_finish_date,
				x_estimated_start_date  => l_clex_estimated_start_date,
				x_estimated_finish_date => l_clex_estimated_finish_date,
				x_actual_start_date     => l_clex_actual_start_date,
				x_actual_finish_date    => l_clex_actual_finish_date,
				x_return_status         => x_return_status,
				x_msg_count             => x_msg_count,
				x_msg_data              => x_msg_data
				);

			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'After Call PA_PROGRESS_CLIENT_EXTN.GET_TASK_RES_OVERRIDE_INFO x_return_status='||x_return_status, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_clex_estimated_start_date='||l_clex_estimated_start_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_clex_estimated_finish_date='||l_clex_estimated_finish_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_clex_actual_start_date='||l_clex_actual_start_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_clex_actual_finish_date='||l_clex_actual_finish_date, x_Log_Level=> 3);
			END IF;

			IF x_return_status <> 'S' THEN
				raise FND_API.G_EXC_ERROR;
			END IF;

			IF nvl(l_estimated_start_date,FND_API.g_miss_date) <> nvl(l_clex_estimated_start_date,FND_API.g_miss_date)
			OR nvl(l_estimated_finish_date,FND_API.g_miss_date) <> nvl(l_clex_estimated_finish_date,FND_API.g_miss_date)
			OR nvl(l_actual_start_date,FND_API.g_miss_date) <> nvl(l_clex_actual_start_date,FND_API.g_miss_date)
			OR nvl(l_actual_finish_date,FND_API.g_miss_date) <> nvl(l_clex_actual_finish_date,FND_API.g_miss_date)
			THEN
				l_date_override_flag := 'Y';
				l_estimated_start_date := l_clex_estimated_start_date;
				l_estimated_finish_date := l_clex_estimated_finish_date;
				l_actual_start_date := l_clex_actual_start_date;
				l_actual_finish_date := l_clex_actual_finish_date;
			END IF;

			IF l_date_override_flag = 'N' AND nvl(l_db_date_override_flag, 'N') = 'Y' THEN
				l_date_override_flag := 'Y';
			END IF;

			IF l_date_override_flag = 'N' AND
			(nvl(l_estimated_start_date,FND_API.g_miss_date) <> nvl(l_db_estimated_start_date,FND_API.g_miss_date)
			OR nvl(l_estimated_finish_date,FND_API.g_miss_date) <> nvl(l_db_estimated_finish_date,FND_API.g_miss_date)
			OR nvl(l_actual_start_date,FND_API.g_miss_date) <> nvl(l_db_actual_start_date,FND_API.g_miss_date)
			OR nvl(l_actual_finish_date,FND_API.g_miss_date) <> nvl(l_db_actual_finish_date,FND_API.g_miss_date))
			THEN
				l_date_override_flag := 'Y';
			END IF;

			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_date_override_flag='||l_date_override_flag, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_estimated_start_date='||l_estimated_start_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_estimated_finish_date='||l_estimated_finish_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_start_date='||l_actual_start_date, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_actual_finish_date='||l_actual_finish_date, x_Log_Level=> 3);
			END IF;

			-- 4533112 End

			IF (l_estimated_finish_date is not null and l_estimated_finish_date < nvl(l_estimated_start_date,l_estimated_finish_date)) THEN --removed +1 bug 5186825
			    x_return_status := FND_API.G_RET_STS_ERROR;
			    pa_utils.add_message(p_app_short_name => 'PA',
						  p_msg_name => 'PA_EST_DATES_INV');
			    raise fnd_api.g_exc_error;
			END IF;
			-- Bug 3922325 : Actual Start date and Finish date should efualt even if percent completete is not enabled
			-- It should be based on Task Status rather than % Complete
			--bug# 3823433 Satish
			--IF l_percent_complete_flag = 'Y'
			--THEN
			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Deriving Dates', x_Log_Level=> 3);
			END IF;
			/* Date defaulting should be based on Status rather than % complete
			IF (nvl(l_percent_complete, l_BASE_PERCENT_COMPLETE) > 0 and l_actual_start_date is null ) THEN
			l_actual_start_date := nvl(l_estimated_start_date,l_scheduled_start_date);
			END IF;

			IF (nvl(l_percent_complete, l_BASE_PERCENT_COMPLETE) = 100 and l_actual_finish_date is null ) THEN
			l_actual_finish_date := nvl(l_estimated_finish_date,l_scheduled_finish_date);
			END IF;

			IF (nvl(l_percent_complete, l_BASE_PERCENT_COMPLETE) < 100 and l_actual_finish_date is not null ) THEN
			l_actual_finish_date := to_date(null);
			END IF;
			*/

			IF l_actual_start_date IS NULL AND l_task_status2 = 'IN_PROGRESS' THEN
				l_actual_start_date := nvl(l_estimated_start_date,l_scheduled_start_date);
                                if (l_estimated_start_date is null) then --5186825
                                    l_estimated_start_date := l_scheduled_start_date;
                                end if;
				l_actual_finish_date := to_date(null);
			END IF;
			-- Bug 4232099 : added folling IF
			IF l_actual_finish_date IS NOT NULL AND l_task_status2 = 'IN_PROGRESS' THEN
				l_actual_finish_date := to_date(null);
			END IF;
			IF l_actual_start_date IS NULL AND l_task_status2 = 'COMPLETED' THEN
				l_actual_start_date := nvl(l_estimated_start_date,l_scheduled_start_date);
                                if (l_estimated_start_date is null) then --5186825
                                    l_estimated_start_date := l_scheduled_start_date;
                                end if;
			END IF;
			IF l_actual_finish_date IS NULL AND l_task_status2 = 'COMPLETED' THEN
				l_actual_finish_date := nvl(l_estimated_finish_date,l_scheduled_finish_date);
			END IF;
			--END IF;


			IF l_actual_start_date IS NOT NULL AND l_actual_finish_date IS NOT NULL
			THEN
				IF l_actual_finish_date < l_actual_start_date
				THEN
					IF TRUNC(SYSDATE) < l_actual_start_date
					THEN
						l_actual_finish_date := l_actual_start_date;
					ELSE
						l_actual_finish_date := TRUNC(SYSDATE);
					END IF;
				END IF;
			END IF;

			-- Bug 3922325 : Actual Start date and Finish date check should be based on Status
			-- Also it should happen irrespective of percent complete is enabled
			/*
			--bug# 3823433 Satish
			IF l_percent_complete_flag = 'Y'
			THEN
				IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Raising Errors on Conditions', x_Log_Level=> 3);
			    END IF;

			    IF (nvl(l_percent_complete, l_BASE_PERCENT_COMPLETE) > 0  and nvl(l_percent_complete, l_BASE_PERCENT_COMPLETE) < 100
				and l_actual_start_date is null ) THEN

				PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
				    ,p_msg_name       => 'PA_TP_ACT_ST_DATE_NOT_NULL');
				x_msg_data := 'PA_TP_ACT_ST_DATE_NOT_NULL';
				x_return_status := 'E';
				RAISE  FND_API.G_EXC_ERROR;
			    END IF;

			    IF (nvl(l_percent_complete, l_BASE_PERCENT_COMPLETE) = 100 and l_actual_finish_date is null ) THEN
				PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
				    ,p_msg_name       => 'PA_TP_ACT_END_DT_NOT_NULL');
				x_msg_data := 'PA_TP_ACT_END_DT_NOT_NULL';
				x_return_status := 'E';
				RAISE  FND_API.G_EXC_ERROR;
			    END IF;
			END IF;
			*/
			IF ( l_task_status2 IN ('COMPLETED','IN_PROGRESS') and l_actual_start_date is null ) THEN

				PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
				    ,p_msg_name       => 'PA_TP_ACT_ST_DATE_NOT_NULL');
				x_msg_data := 'PA_TP_ACT_ST_DATE_NOT_NULL';
				x_return_status := 'E';
				RAISE  FND_API.G_EXC_ERROR;
			END IF;

			IF (l_task_status2 = 'COMPLETED' and l_actual_finish_date is null ) THEN
				PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
				    ,p_msg_name       => 'PA_TP_ACT_END_DT_NOT_NULL');
				x_msg_data := 'PA_TP_ACT_END_DT_NOT_NULL';
				x_return_status := 'E';
				RAISE  FND_API.G_EXC_ERROR;
			END IF;

		END IF;  -- IF NVL( l_lowest_level_task, 'N' ) = 'Y'
	END IF; -- IF p_progress_mode <> 'BACKDATED'
	-- Bug 3922325 End

	-- Bug 4328141 : Making l_percent_complete 100 when L_ALLW_PHY_PRCNT_CMP_OVERRIDES is N
	IF l_percent_complete_flag = 'Y' AND l_allw_phy_prcnt_cmp_overrides = 'N' AND l_task_status2 = 'COMPLETED'
	AND nvl(nvl(l_percent_complete, l_base_percent_complete),0) <> 100 THEN
		l_percent_complete := 100;
	END IF;

	IF l_task_status2 = 'NOT_STARTED' AND NOT( l_actual_start_date is NULL AND l_actual_finish_date IS NULL
	AND nvl(nvl(l_percent_complete, l_base_percent_complete),0) = 0)
	OR
	l_task_status2 = 'IN_PROGRESS' AND NOT ( l_actual_start_date is NOT NULL
	AND l_actual_finish_date IS NULL
	AND nvl(nvl(l_percent_complete, l_base_percent_complete),0) <> 100) -- Bug 3922325 : Added so that error comes if % complete is 100. % compl 100 and In Progress is not a valid combination
		/* Begin commenting out code to fix Bug # 4093350.

		It has been decided that a task that 'IN_PROGRESS' only needs to have an actual start date, it
		need not have any actuals or percent complete.

		AND ((nvl(l_percent_complete, l_BASE_PERCENT_COMPLETE) > 0
		AND nvl(l_percent_complete, l_BASE_PERCENT_COMPLETE) < 100))
		OR nvl(l_actual_effort,0) > 0 OR  nvl(l_act_raw_cost_to_date_pc,0) > 0
		OR nvl(l_act_bur_cost_to_date_pc,0) > 0) -- Fix for Bug # 4093350.

		End commenting out code to fix Bug # 4093350. */

	OR
	l_task_status2 = 'COMPLETED' AND NOT ( l_actual_start_date is NOT NULL
	AND l_actual_finish_date IS NOT NULL
	AND nvl(l_percent_complete, l_base_percent_complete) = 100) -- Fix for Bug # 4093350.
	OR
	(l_task_status2 is NULL)
	OR
	(l_task_status2 = '')
	THEN
		IF NVL( l_lowest_level_task, 'N' ) = 'Y'
		AND l_element_struc_type = 'WORKPLAN'
		AND p_progress_mode <> 'BACKDATED'
		AND l_percent_complete_flag = 'Y'
		--AND L_ALLW_PHY_PRCNT_CMP_OVERRIDES = 'Y'   --maansari: fpm changes
		THEN
		  IF p_pm_product_code = 'MSPROJECT'
		  THEN
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_STAT_DTES_PC_COMB_MSP'
		                         ,p_token1 => 'TASK_NAME'
		                         ,p_value1 => PA_TASK_UTILS.get_task_name(l_task_id)
		                         ,p_token2 => 'TASK_NUMBER'
		                         ,p_value2 => PA_TASK_UTILS.get_task_number(l_task_id));
		    x_msg_data := 'PA_TP_STAT_DTES_PC_COMB';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  ELSE
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_STAT_DTES_PC_COMB_AMG'
		                         ,p_token1 => 'TASK_ID'
		                         ,p_value1 => l_task_id
		                        );
		    x_msg_data := 'PA_TP_STAT_DTES_PC_COMB';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  END IF;
		END IF;
	END IF;

	-- Bug 4632744
	-- l_earned_value can be derived as any thing here
	-- The correct value is derived in partial rollup or rollup API's
	-- So code below to get baseline plan and derive earned value, can be removed


	/* Begin fix for Bug # 4050324. */
        BEGIN
                SELECT
		/*+ INDEX(pji_fm_xbs_accum_tmp1 pji_fm_xbs_accum_tmp1_n1)*/ -- Fix for Bug # 4162534.
		nvl(pfxat.prj_base_brdn_cost,0)
		, (nvl(pfxat.base_labor_hours,0)+nvl(pfxat.base_equip_hours,0))
                INTO l_base_planned_cost
		, l_base_planned_effort
                FROM  pji_fm_xbs_accum_tmp1 pfxat
                WHERE pfxat.project_id = p_project_id
                AND pfxat.struct_version_id = p_structure_version_id
                AND pfxat.project_element_id = p_object_id
                AND pfxat.calendar_type = 'A'
                AND pfxat.plan_version_id > 0
                AND pfxat.txn_currency_code is null;
        EXCEPTION
        WHEN OTHERS THEN
                null;
        END;

	/* End fix for Bug # 4050324. */

	IF l_element_struc_type = 'WORKPLAN'
	THEN
		IF l_task_weight_basis_code = 'EFFORT'
		THEN
			--bug 3824042, changed trunc to round
			/* Begin fix for Bug # 4050324. */
			l_earned_value := round(NVL(l_percent_complete,nvl(l_base_percent_complete,l_eff_rollup_percent_comp)) * nvl(l_base_planned_effort,0)/100,8); --Bug 6854114
			/* End fix for Bug # 4050324. */

		ELSE
			--bug 3824042, changed trunc to round
			/* Begin fix for Bug # 4050324. */
			l_earned_value := pa_currency.round_trans_currency_amt(NVL(l_percent_complete,nvl(l_base_percent_complete,l_eff_rollup_percent_comp)) * nvl(l_base_planned_cost,0)/100, l_prj_currency_code);
			/* End fix for Bug # 4050324. */
		END IF;
	END IF;


	IF l_task_status2 = 'NOT_STARTED' AND NOT( l_actual_start_date is NULL AND l_actual_finish_date IS NULL) OR
	l_task_status2 = 'IN_PROGRESS' AND NOT ( l_actual_start_date is NOT NULL AND l_actual_finish_date IS NULL) OR
	l_task_status2 = 'COMPLETED' AND NOT ( l_actual_start_date is NOT NULL AND l_actual_finish_date IS NOT NULL ) OR
	(l_task_status2 is NULL) OR
	(l_task_status2 = '')
	THEN
		IF NVL( l_lowest_level_task, 'N' ) = 'Y'
		AND l_element_struc_type = 'WORKPLAN'
		AND p_progress_mode <> 'BACKDATED'
		AND l_percent_complete_flag = 'N'
		THEN
		  IF p_pm_product_code = 'MSPROJECT'
		  THEN
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_STAT_DTES_PC_COMB_MSP'
		                         ,p_token1 => 'TASK_NAME'
		                         ,p_value1 => PA_TASK_UTILS.get_task_name(l_task_id)
		                         ,p_token2 => 'TASK_NUMBER'
		                         ,p_value2 => PA_TASK_UTILS.get_task_number(l_task_id));
		    x_msg_data := 'PA_TP_STAT_DTES_PC_COMB';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  ELSE
		    PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
		                         ,p_msg_name       => 'PA_TP_STAT_DTES_PC_COMB_AMG'
		                         ,p_token1 => 'TASK_ID'
		                         ,p_value1 => l_task_id
		                        );
		    x_msg_data := 'PA_TP_STAT_DTES_PC_COMB';
		    x_return_status := 'E';
		    RAISE  FND_API.G_EXC_ERROR;
		  END IF;
		END IF;
	END IF;

	-- Bug 3951531 End


	IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
		x_return_status := 'E';
		x_msg_data      := l_msg_data;
		x_msg_count     := l_msg_count;
		RAISE  FND_API.G_EXC_ERROR;
	END IF;

	IF ( p_action = 'PUBLISH' or NVL( l_rollup_required, 'N') = 'Y' )
	THEN
		l_published_flag        := 'Y';
		----
		l_rollup_progress_status := p_progress_status_code;
		l_rollup_completed_percentage := l_percent_complete;

		--bug 3879461 --maansari
		OPEN check_prog_after_aod;
		FETCH check_prog_after_aod INTO l_prog_exist_after_aod;
		IF check_prog_after_aod%NOTFOUND
		THEN
			l_rollup_current_flag := 'Y'; -- Bug 3879461
		ELSE
			l_rollup_current_flag := 'N';
		END IF;
		CLOSE check_prog_after_aod;
		--bug 3879461 --maansari
		----
		IF  p_progress_mode <> 'BACKDATED' OR
		( p_progress_mode = 'BACKDATED'
		AND p_as_of_date = l_last_progress_date )  --bug 2646965
		THEN
			l_current_flag          := 'Y';
			UPDATE pa_percent_completes
			SET current_flag = 'N'
			WHERE project_id = p_project_id
			AND object_id = p_object_id
			AND current_flag = 'Y'
			AND object_type = p_object_type
			AND structure_type = p_structure_type; --Satish

			-- Bug 3879461 Begin
			IF NVL(l_prog_exist_after_aod, 'N') = 'N' THEN
				UPDATE pa_progress_rollup
				SET current_flag = 'N'
				WHERE project_id = p_project_id
				AND object_id = p_object_id
				AND proj_element_id = p_object_id
				AND current_flag = 'Y'
				AND object_type = p_object_type
				AND structure_type = p_structure_type
				AND structure_version_id is null
				;
			ELSE
				null;
				--l_current_flag  := 'N'; : Commented this , PPC current_flag and PPR current_flag may not be in sync
			END IF;
			-- Bug 3879461 End
		ELSE
			l_current_flag          := 'N';
			l_rollup_current_flag := 'N'; -- Bug 3879461
		END IF;

		-- Bug 3879461 Begin
		-- Delete the published progress record on the same as of date
		--bug 4247839, removed the l_db_Action check as it should get deleted for CREATE also
		--IF l_db_action = 'UPDATE' AND p_progress_mode <> 'BACKDATED' THEN
		IF p_progress_mode <> 'BACKDATED' THEN

			Delete from pa_progress_rollup
			where project_id = p_project_id
			and object_id = p_object_id
			and proj_element_id = p_object_id
			and object_type = p_object_type
			and structure_version_id is null
			and structure_type = 'WORKPLAN'
			and current_flag = 'W'
			and trunc(as_of_date) = trunc(p_as_of_date);
		END IF;
		-- Bug 3879461 End
	ELSE
		l_rollup_progress_status := null;
		l_rollup_completed_percentage := null;
		l_published_flag := 'N';
		l_current_flag := 'N';
		l_rollup_current_flag := 'W'; -- Bug 3879461
	END IF;

	-- Bug 4506461 Begin
	-- It is only structure level records we need to set base percent complete here
	-- for tasks record, it will be taken care in Rollup and partial rollup API
	-- 4651069 : It should be executed even for tasks too
	--IF p_object_type = 'PA_STRUCTURES' THEN

	-- Bug 4683406 : Adding condition so that if this task is deliverable or work quantity based
	-- then base % complete is same as Physical % complete
	IF l_base_percent_comp_deriv_code in( 'EFFORT','COST') THEN
		OPEN c_get_any_childs_have_subprj(p_object_version_id);
		FETCH c_get_any_childs_have_subprj INTO l_rederive_base_pc;
		CLOSE c_get_any_childs_have_subprj;
	END IF;
	--END IF;
	-- Bug 4506461 End

	IF l_db_action = 'CREATE'
	THEN
		IF g1_debug_mode  = 'Y' THEN
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_db_action Create', x_Log_Level=> 3);
		END IF;

		--bug 4185364
		/*IF p_percent_complete_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
		  OR (p_progress_mode = 'BACKDATED' AND l_process = 'CORRECT')
		THEN
		   l_percent_complete_id := null;
		ELSE
		   l_percent_complete_id := p_percent_complete_id;
		END IF;*/

		l_percent_complete_id := null;
		l_att_pc_id := p_percent_complete_id;
		--Create record in PPC

		PA_PERCENT_COMPLETES_PKG.INSERT_ROW(
			p_task_id			=> l_task_id
			,p_date_computed		=> p_as_of_date
			,p_last_update_date		=> sysdate
			,p_last_updated_by		=> l_user_id
			,p_creation_date		=> sysdate
			,p_created_by			=> l_user_id
			,p_last_update_login		=> l_login_id
			,p_completed_percentage		=> l_percent_complete
			,p_description			=> p_brief_overview
			,p_project_id			=> p_project_id
			,p_pm_product_code		=> l_pm_product_code
			,p_current_flag			=> l_current_flag
			,p_object_type			=> p_object_type
			,p_object_id			=> p_object_id
			,p_object_version_id		=> p_object_version_id
			,p_progress_status_code		=> p_progress_status_code
			,p_actual_start_date		=> l_actual_start_date
			,p_actual_finish_date		=> l_actual_finish_date
			,p_estimated_start_date		=> p_estimated_start_date
			,p_estimated_finish_date	=> p_estimated_finish_date
			,p_published_flag		=> l_published_flag
			,p_published_by_party_id	=> l_published_by_party_id
			,p_progress_comment		=> p_progress_comment
			,p_history_flag			=> 'N'
			,p_status_code			=> l_task_status
			,x_percent_complete_id		=> l_percent_complete_id
			,p_attribute_category           => null
			,p_attribute1                   => null
			,p_attribute2                   => null
			,p_attribute3                   => null
			,p_attribute4                   => null
			,p_attribute5                   => null
			,p_attribute6                   => null
			,p_attribute7                   => null
			,p_attribute8                   => null
			,p_attribute9                   => null
			,p_attribute10                  => null
			,p_attribute11                  => null
			,p_attribute12                  => null
			,p_attribute13                  => null
			,p_attribute14                  => null
			,p_attribute15                  => null
			,p_structure_type               => p_structure_type
			);

		l_progress_rollup_id := null;
		--Create record in progress rollup

		--check whether there already exists progress record for this task.
		l_progress_rollup_id := PA_PROGRESS_UTILS.get_prog_rollup_id(
				p_project_id   => p_project_id
				,p_object_id    => p_object_id
				,p_object_type  => p_object_type
				,p_object_version_id => p_object_version_id
				,p_as_of_date   => p_as_of_date
				,p_proj_element_id => p_object_id -- Bug 3764224
				,p_action          => p_action -- Bug 3879461
				,x_record_version_number => l_rollup_rec_ver_number
				);

		IF g1_debug_mode  = 'Y' THEN
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_db_action Create l_PROGRESS_ROLLUP_ID='||l_PROGRESS_ROLLUP_ID, x_Log_Level=> 3);
		END IF;

		IF l_progress_rollup_id IS NULL
		THEN  ----1
			OPEN cur_pa_rollup1;
			FETCH cur_pa_rollup1 INTO l_rollup_rec1;
			CLOSE cur_pa_rollup1;

			IF (NVL( l_lowest_level_task, 'N' ) = 'Y' and (l_base_percent_comp_deriv_code = 'WQ_DERIVED'))
			THEN
				l_eff_rollup_percent_comp       := l_base_percent_complete ;
			ELSE
				l_eff_rollup_percent_comp       := l_rollup_rec1.eff_rollup_percent_comp;
			END IF;

			IF NVL( l_lowest_level_task, 'N' ) = 'N' OR NVL(l_assignment_exists, 'N') = 'Y' -- Bug 3796357 : Added l_assignment_exists check  2
			OR p_progress_mode = 'BACKDATED' -- Bug 4091457
			THEN
				IF g1_debug_mode  = 'Y' THEN
					pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => ' LLT', x_Log_Level=> 3);
				END IF;

				--- l_base_percent_complete         := l_rollup_rec1.base_percent_complete;
				l_eff_rollup_prog_stat_code     := l_rollup_rec1.eff_rollup_prog_stat_code;
				l_base_progress_status_code     := l_rollup_rec1.base_progress_status_code;

				-- Bug 3796357 Begin
				l_actual_effort := l_rollup_rec1.ppl_act_effort_to_date;
				l_est_remaining_effort := l_rollup_rec1.estimated_remaining_effort;
				l_eqpmt_act_effort_to_date := l_rollup_rec1.eqpmt_act_effort_to_date;
				l_eqpmt_etc_effort := l_rollup_rec1.eqpmt_etc_effort;
				l_oth_act_cost_to_date_tc := l_rollup_rec1.oth_act_cost_to_date_tc;
				l_oth_act_cost_to_date_fc := l_rollup_rec1.oth_act_cost_to_date_fc;
				l_oth_act_cost_to_date_pc := l_rollup_rec1.oth_act_cost_to_date_pc;
				l_oth_etc_cost_tc := l_rollup_rec1.oth_etc_cost_tc;
				l_oth_etc_cost_fc := l_rollup_rec1.oth_etc_cost_fc;
				l_oth_etc_cost_pc := l_rollup_rec1.oth_etc_cost_pc;
				l_act_bur_cost_to_date_tc := l_rollup_rec1.ppl_act_cost_to_date_tc;
				l_act_bur_cost_to_date_fc := l_rollup_rec1.ppl_act_cost_to_date_fc;
				l_act_bur_cost_to_date_pc := l_rollup_rec1.ppl_act_cost_to_date_pc;
				l_etc_bur_cost_tc := l_rollup_rec1.ppl_etc_cost_tc;
				l_etc_bur_cost_fc := l_rollup_rec1.ppl_etc_cost_fc;
				l_etc_bur_cost_pc := l_rollup_rec1.ppl_etc_cost_pc;
				l_eqpmt_act_cost_to_date_tc := l_rollup_rec1.eqpmt_act_cost_to_date_tc;
				l_eqpmt_act_cost_to_date_fc := l_rollup_rec1.eqpmt_act_cost_to_date_fc;
				l_eqpmt_act_cost_to_date_pc := l_rollup_rec1.eqpmt_act_cost_to_date_pc;
				l_eqpmt_etc_cost_tc := l_rollup_rec1.eqpmt_etc_cost_tc;
				l_eqpmt_etc_cost_fc := l_rollup_rec1.eqpmt_etc_cost_fc;
				l_eqpmt_etc_cost_pc := l_rollup_rec1.eqpmt_etc_cost_pc;
				l_projfunc_cost_rate_type := l_rollup_rec1.projfunc_cost_rate_type;
				l_projfunc_cost_exch_rate := l_rollup_rec1.projfunc_cost_exchange_rate;
				l_projfunc_cost_rate_date := l_rollup_rec1.projfunc_cost_rate_date;
				l_project_rate_type := l_rollup_rec1.proj_cost_rate_type;
				l_project_exch_rate := l_rollup_rec1.proj_cost_exchange_rate;
				l_project_rate_date := l_rollup_rec1.proj_cost_rate_date;
				l_txn_currency_code := l_rollup_rec1.txn_currency_code;
				l_oth_quantity_to_date := l_rollup_rec1.oth_quantity_to_date;
				l_oth_etc_quantity  := l_rollup_rec1.oth_etc_quantity;
				l_oth_act_rawcost_to_date_tc := l_rollup_rec1.oth_act_rawcost_to_date_tc;
				l_oth_act_rawcost_to_date_fc := l_rollup_rec1.oth_act_rawcost_to_date_fc;
				l_oth_act_rawcost_to_date_pc := l_rollup_rec1.oth_act_rawcost_to_date_pc;
				l_oth_etc_rawcost_tc := l_rollup_rec1.oth_etc_rawcost_tc;
				l_oth_etc_rawcost_fc := l_rollup_rec1.oth_etc_rawcost_fc;
				l_oth_etc_rawcost_pc := l_rollup_rec1.oth_etc_rawcost_pc;
				l_act_raw_cost_to_date_tc := l_rollup_rec1.ppl_act_rawcost_to_date_tc;
				l_act_raw_cost_to_date_fc := l_rollup_rec1.ppl_act_rawcost_to_date_fc;
				l_act_raw_cost_to_date_pc := l_rollup_rec1.ppl_act_rawcost_to_date_pc;
				l_etc_raw_cost_tc := l_rollup_rec1.ppl_etc_rawcost_tc;
				l_etc_raw_cost_fc := l_rollup_rec1.ppl_etc_rawcost_fc;
				l_etc_raw_cost_pc := l_rollup_rec1.ppl_etc_rawcost_pc;
				l_eqpmt_act_rawcost_to_date_tc := l_rollup_rec1.eqpmt_act_rawcost_to_date_tc;
				l_eqpmt_act_rawcost_to_date_fc := l_rollup_rec1.eqpmt_act_rawcost_to_date_fc;
				l_eqpmt_act_rawcost_to_date_pc := l_rollup_rec1.eqpmt_act_rawcost_to_date_pc;
				l_eqpmt_etc_rawcost_tc := l_rollup_rec1.eqpmt_etc_rawcost_tc;
				l_eqpmt_etc_rawcost_fc := l_rollup_rec1.eqpmt_etc_rawcost_fc;
				l_eqpmt_etc_rawcost_pc := l_rollup_rec1.eqpmt_etc_rawcost_pc;
				-- Bug 3796357 End
			ELSE
				l_eff_rollup_percent_comp       := l_base_percent_complete ; -- null; As per Majid 21 May
				l_eff_rollup_prog_stat_code     := null;

				--maansari5/21  This is required otherwise redefault base pc api is not returning override pc if rollup.
				IF l_EFF_ROLLUP_PERCENT_COMP = 0
				THEN
					l_EFF_ROLLUP_PERCENT_COMP := null;
				END IF;

			END IF;  --2

			l_rollup_completed_percentage := l_percent_complete;   --maansari5/21

			-- Bug 4506461 Begin
			IF nvl(l_rederive_base_pc,'N') = 'Y' THEN
				l_temp_base_pc := l_rollup_rec1.base_percent_complete;
			ELSE
				l_temp_base_pc := nvl(l_rollup_completed_percentage,l_eff_rollup_percent_comp);
			END IF;
			-- Bug 4506461 End

			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Inserting in PA_PROGRESS_ROLLUP ', x_Log_Level=> 3);
			END IF;


			PA_PROGRESS_ROLLUP_PKG.INSERT_ROW(
			x_progress_rollup_id		=> l_progress_rollup_id
			,x_project_id                   => p_project_id
			,x_object_id                    => p_object_id
			,x_object_type                  => p_object_type
			,x_as_of_date                   => p_as_of_date
			,x_object_version_id            => p_object_version_id
			,x_last_update_date             => sysdate
			,x_last_updated_by              => l_user_id
			,x_creation_date                => sysdate
			,x_created_by                   => l_user_id
			,x_progress_status_code         => nvl( l_rollup_progress_status, p_progress_status_code ) --copy to rollup table. maansari: fpm changes 3420093
			,x_last_update_login            => l_login_id
			,x_incremental_work_qty         => l_incremental_work_qty
			,x_cumulative_work_qty          => l_cumulative_work_qty
			--                      ,x_base_percent_complete           => l_base_percent_complete -- 4392189 phase 2
			-- bug 4506461                      ,x_base_percent_complete           => nvl(l_rollup_rec1.base_percent_complete, l_eff_rollup_percent_comp)
			,x_base_percent_complete        => l_temp_base_pc -- 4506461
			,x_eff_rollup_percent_comp      => l_eff_rollup_percent_comp
			,x_completed_percentage         => nvl( l_rollup_completed_percentage, l_percent_complete ) --copy to rollup table. maansari: fpm changes 3420093
			,x_estimated_start_date         => l_estimated_start_date
			,x_estimated_finish_date        => l_estimated_finish_date
			,x_actual_start_date            => l_actual_start_date
			,x_actual_finish_date           => l_actual_finish_date
			,x_est_remaining_effort         => l_est_remaining_effort
			,x_base_percent_comp_deriv_code => l_base_percent_comp_deriv_code
			,x_base_progress_status_code    => l_date_override_flag -- 4533112 l_base_progress_status_code
			,x_eff_rollup_prog_stat_code    => l_eff_rollup_prog_stat_code
			,x_percent_complete_id          => l_percent_complete_id
			,x_structure_type               => p_structure_type
			,x_proj_element_id              => l_task_id
			,x_structure_version_id         => l_structure_version_id -- null fpm dev cr 3
			,x_ppl_act_effort_to_date	=> l_actual_effort
			,x_eqpmt_act_effort_to_date	=> l_eqpmt_act_effort_to_date -- bug 3796357 null   --since this is a task progress, there wont be eqpmt effort.
			,x_eqpmt_etc_effort             => l_eqpmt_etc_effort -- bug 3796357 null
			,x_oth_act_cost_to_date_tc      => l_oth_act_cost_to_date_tc-- bug 3796357  null   --no transaction is avialbale at task.
			,x_oth_act_cost_to_date_fc      => l_oth_act_cost_to_date_fc-- bug 3796357
			,x_oth_act_cost_to_date_pc      => l_oth_act_cost_to_date_pc-- bug 3796357
			,x_oth_etc_cost_tc              => l_oth_etc_cost_tc -- bug 3796357  --no txn currency at task level.
			,x_oth_etc_cost_fc              => l_oth_etc_cost_fc -- bug 3796357
			,x_oth_etc_cost_pc              => l_oth_etc_cost_pc -- bug 3796357
			,x_ppl_act_cost_to_date_tc	=> l_act_bur_cost_to_date_tc
			,x_ppl_act_cost_to_date_fc	=> l_act_bur_cost_to_date_fc   --3627315 issue 4
			,x_ppl_act_cost_to_date_pc	=> l_act_bur_cost_to_date_pc   --3627315 issue 4
			,x_ppl_etc_cost_tc              => l_etc_bur_cost_tc   --3627315 issue 4
			,x_ppl_etc_cost_fc              => l_etc_bur_cost_fc   --3627315 issue 4
			,x_ppl_etc_cost_pc              => l_etc_bur_cost_pc   --3627315 issue 4
			,x_eqpmt_act_cost_to_date_tc    => l_eqpmt_act_cost_to_date_tc -- bug 3796357   null
			,x_eqpmt_act_cost_to_date_fc    => l_eqpmt_act_cost_to_date_fc -- bug 3796357    null
			,x_eqpmt_act_cost_to_date_pc    => l_eqpmt_act_cost_to_date_pc -- bug 3796357    null
			,x_eqpmt_etc_cost_tc            => l_eqpmt_etc_cost_tc  -- bug 3796357    null
			,x_eqpmt_etc_cost_fc            => l_eqpmt_etc_cost_fc  -- bug 3796357    null
			,x_eqpmt_etc_cost_pc            => l_eqpmt_etc_cost_pc  -- bug 3796357    null
			,x_earned_value                 => l_earned_value
			,x_task_wt_basis_code           => l_task_weight_basis_code
			,x_subprj_ppl_act_effort        => null
			,x_subprj_eqpmt_act_effort      => null
			,x_subprj_ppl_etc_effort        => null
			,x_subprj_eqpmt_etc_effort      => null
			,x_sbpj_oth_act_cost_to_date_tc => null
			,x_sbpj_oth_act_cost_to_date_fc => null
			,x_sbpj_oth_act_cost_to_date_pc => null
			,x_subprj_ppl_act_cost_tc       => null
			,x_subprj_ppl_act_cost_fc       => null
			,x_subprj_ppl_act_cost_pc       => null
			,x_subprj_eqpmt_act_cost_tc     => null
			,x_subprj_eqpmt_act_cost_fc     => null
			,x_subprj_eqpmt_act_cost_pc     => null
			,x_subprj_oth_etc_cost_tc       => null
			,x_subprj_oth_etc_cost_fc       => null
			,x_subprj_oth_etc_cost_pc       => null
			,x_subprj_ppl_etc_cost_tc       => null
			,x_subprj_ppl_etc_cost_fc       => null
			,x_subprj_ppl_etc_cost_pc       => null
			,x_subprj_eqpmt_etc_cost_tc     => null
			,x_subprj_eqpmt_etc_cost_fc     => null
			,x_subprj_eqpmt_etc_cost_pc     => null
			,x_subprj_earned_value          => null
			,x_current_flag                 => l_rollup_current_flag
			,x_projfunc_cost_rate_type      => l_projfunc_cost_rate_type    --3627315 issue 4
			,x_projfunc_cost_exchange_rate  => l_projfunc_cost_exch_rate    --3627315 issue 4
			,x_projfunc_cost_rate_date      => l_projfunc_cost_rate_date    --3627315 issue 4
			,x_proj_cost_rate_type          => l_project_rate_type      --3627315 issue 4
			,x_proj_cost_exchange_rate      => l_project_exch_rate      --3627315 issue 4
			,x_proj_cost_rate_date          => l_project_rate_date      --3627315 issue 4
			,x_txn_currency_code            => l_txn_currency_code      --3627315 issue 4
			,x_prog_pa_period_name          => l_pa_period_name
			,x_prog_gl_period_name          => l_gl_period_name
			,x_oth_quantity_to_date         => l_oth_quantity_to_date -- bug 3796357 null
			,x_oth_etc_quantity             => l_oth_etc_quantity -- bug 3796357null
			,x_oth_act_rawcost_to_date_tc   => l_oth_act_rawcost_to_date_tc-- bug 3796357null
			,x_oth_act_rawcost_to_date_fc   => l_oth_act_rawcost_to_date_fc -- bug 3796357null
			,x_oth_act_rawcost_to_date_pc   => l_oth_act_rawcost_to_date_pc -- bug 3796357null
			,x_oth_etc_rawcost_tc		=> l_oth_etc_rawcost_tc -- bug 3796357 null
			,x_oth_etc_rawcost_fc		=> l_oth_etc_rawcost_fc -- bug 3796357null
			,x_oth_etc_rawcost_pc		=> l_oth_etc_rawcost_pc -- bug 3796357null
			,x_ppl_act_rawcost_to_date_tc   => l_act_raw_cost_to_date_tc --3627315 issue 4
			,x_ppl_act_rawcost_to_date_fc   => l_act_raw_cost_to_date_fc --3627315 issue 4
			,x_ppl_act_rawcost_to_date_pc   => l_act_raw_cost_to_date_pc --3627315 issue 4
			,x_ppl_etc_rawcost_tc		=> l_etc_raw_cost_tc  --3627315 issue 4
			,x_ppl_etc_rawcost_fc		=> l_etc_raw_cost_fc  --3627315 issue 4
			,x_ppl_etc_rawcost_pc		=> l_etc_raw_cost_pc  --3627315 issue 4
			,x_eqpmt_act_rawcost_to_date_tc => l_eqpmt_act_rawcost_to_date_tc -- bug 3796357 null
			,x_eqpmt_act_rawcost_to_date_fc => l_eqpmt_act_rawcost_to_date_fc -- bug 3796357 null
			,x_eqpmt_act_rawcost_to_date_pc => l_eqpmt_act_rawcost_to_date_pc -- bug 3796357 null
			,x_eqpmt_etc_rawcost_tc		=> l_eqpmt_etc_rawcost_tc -- bug 3796357 null
			,x_eqpmt_etc_rawcost_fc		=> l_eqpmt_etc_rawcost_fc -- bug 3796357 null
			,x_eqpmt_etc_rawcost_pc		=> l_eqpmt_etc_rawcost_pc -- bug 3796357 null
			,x_sp_oth_act_rawcost_todate_tc => null
			,x_sp_oth_act_rawcost_todate_fc => null
			,x_sp_oth_act_rawcost_todate_pc => null
			,x_subprj_ppl_act_rawcost_tc    => null
			,x_subprj_ppl_act_rawcost_fc    => null
			,x_subprj_ppl_act_rawcost_pc    => null
			,x_subprj_eqpmt_act_rawcost_tc  => null
			,x_subprj_eqpmt_act_rawcost_fc  => null
			,x_subprj_eqpmt_act_rawcost_pc  => null
			,x_subprj_oth_etc_rawcost_tc    => null
			,x_subprj_oth_etc_rawcost_fc    => null
			,x_subprj_oth_etc_rawcost_pc    => null
			,x_subprj_ppl_etc_rawcost_tc    => null
			,x_subprj_ppl_etc_rawcost_fc    => null
			,x_subprj_ppl_etc_rawcost_pc    => null
			,x_subprj_eqpmt_etc_rawcost_tc  => null
			,x_subprj_eqpmt_etc_rawcost_fc  => null
			,x_subprj_eqpmt_etc_rawcost_pc  => null
			);

			-- Progress Management Changes. FP-M Bug # 3420093. Begin:Set CURRENT_FLAG of previous rollup records to 'N'.

			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Inserted in PA_PROGRESS_ROLLUP ', x_Log_Level=> 3);
			END IF;

		ELSE   --1
			--update progress rollup

			OPEN cur_pa_rollup2;
			FETCH cur_pa_rollup2 INTO l_rollup_rec2;
			CLOSE cur_pa_rollup2;

			-- BEGIN: Fix for Bug # 3926827.
			If (NVL( l_lowest_level_task, 'N' ) = 'Y' AND (l_base_percent_comp_deriv_code = 'WQ_DERIVED'))
			THEN
				l_eff_rollup_percent_comp       := l_base_percent_complete ;
			ELSE
				l_eff_rollup_percent_comp := l_rollup_rec2.eff_rollup_percent_comp;
			END IF;
			-- END: Fix for Bug # 3926827.

			IF NVL( l_lowest_level_task, 'N' ) = 'N' OR NVL(l_assignment_exists, 'N') = 'Y' -- Bug 3796357 : Added l_assignment_exists check
			OR p_progress_mode = 'BACKDATED' -- Bug 4091457
			THEN
				---      l_BASE_PERCENT_COMPLETE         := l_rollup_rec2.BASE_PERCENT_COMPLETE;
				l_BASE_PROGRESS_STATUS_CODE     := l_rollup_rec2.BASE_PROGRESS_STATUS_CODE;
				-- Bug 3796357 Begin
				l_actual_effort := l_rollup_rec2.PPL_ACT_EFFORT_TO_DATE;
				l_est_remaining_effort := l_rollup_rec2.ESTIMATED_REMAINING_EFFORT;
				l_act_bur_cost_to_date_tc := l_rollup_rec2.PPL_ACT_COST_TO_DATE_TC;
				l_act_bur_cost_to_date_fc := l_rollup_rec2.PPL_ACT_COST_TO_DATE_FC;
				l_act_bur_cost_to_date_pc := l_rollup_rec2.PPL_ACT_COST_TO_DATE_PC;
				l_etc_bur_cost_tc := l_rollup_rec2.PPL_ETC_COST_TC;
				l_etc_bur_cost_fc := l_rollup_rec2.PPL_ETC_COST_FC;
				l_etc_bur_cost_pc := l_rollup_rec2.PPL_ETC_COST_PC;
				l_projfunc_cost_rate_type := l_rollup_rec2.PROJFUNC_COST_RATE_TYPE;
				l_projfunc_cost_exch_rate := l_rollup_rec2.PROJFUNC_COST_EXCHANGE_RATE;
				l_projfunc_cost_rate_date := l_rollup_rec2.PROJFUNC_COST_RATE_DATE;
				l_project_rate_type := l_rollup_rec2.PROJ_COST_RATE_TYPE;
				l_project_exch_rate := l_rollup_rec2.PROJ_COST_EXCHANGE_RATE;
				l_project_rate_date := l_rollup_rec2.PROJ_COST_RATE_DATE;
				l_txn_currency_code := l_rollup_rec2.TXN_CURRENCY_CODE;
				l_act_raw_cost_to_date_tc := l_rollup_rec2.PPL_ACT_RAWCOST_TO_DATE_TC;
				l_act_raw_cost_to_date_fc := l_rollup_rec2.PPL_ACT_RAWCOST_TO_DATE_FC;
				l_act_raw_cost_to_date_pc := l_rollup_rec2.PPL_ACT_RAWCOST_TO_DATE_PC;
				l_etc_raw_cost_tc := l_rollup_rec2.PPL_ETC_RAWCOST_TC;
				l_etc_raw_cost_fc := l_rollup_rec2.PPL_ETC_RAWCOST_FC;
				l_etc_raw_cost_pc := l_rollup_rec2.PPL_ETC_RAWCOST_PC;
				-- Bug 3796357 End
			END IF;

			IF (l_process = 'CORRECT')
			THEN
				l_INCREMENTAL_WORK_QTY          := l_rollup_rec2.INCREMENTAL_WORK_QUANTITY;
				l_CUMULATIVE_WORK_QTY           := l_rollup_rec2.CUMULATIVE_WORK_QUANTITY;
				l_BASE_PERCENT_COMPLETE         := l_rollup_rec2.BASE_PERCENT_COMPLETE;
			END IF;

			-- BEGIN: Fix for Bug # 3926827.
			-- Bug 4506461 Begin
			IF nvl(l_rederive_base_pc,'N') = 'Y'
			THEN
				l_temp_base_pc := l_rollup_rec2.base_percent_complete;
			ELSE
				l_temp_base_pc := nvl(l_rollup_completed_percentage,l_eff_rollup_percent_comp);
			END IF;
			-- Bug 4506461 End


			PA_PROGRESS_ROLLUP_PKG.UPDATE_ROW(
			x_progress_rollup_id		=> l_progress_rollup_id
			,x_project_id                   => p_project_id
			,x_object_id                    => p_object_id
			,x_object_type                  => p_object_type
			,x_as_of_date                   => p_as_of_date
			,x_object_version_id            => p_object_version_id
			,x_last_update_date             => sysdate
			,x_last_updated_by              => l_user_id
			,x_progress_status_code         => l_rollup_progress_status
			,x_last_update_login            => l_login_id
			,x_incremental_work_qty         => l_incremental_work_qty
			,x_cumulative_work_qty          => l_cumulative_work_qty
			--                      ,x_base_percent_complete           => l_base_percent_complete -- 4392189 phase 2
			-- bug 4506461                     ,x_base_percent_complete           => nvl(l_rollup_rec2.base_percent_complete, l_eff_rollup_percent_comp)
			,x_base_percent_complete        => l_temp_base_pc -- 4506461
			,x_eff_rollup_percent_comp      => l_eff_rollup_percent_comp
			,x_completed_percentage         => nvl( l_rollup_completed_percentage, l_percent_complete )  --maansari5/21
			,x_estimated_start_date         => l_estimated_start_date
			,x_estimated_finish_date        => l_estimated_finish_date
			,x_actual_start_date            => l_actual_start_date
			,x_actual_finish_date           => l_actual_finish_date
			,x_est_remaining_effort         => l_est_remaining_effort
			,x_record_version_number        => l_rollup_rec_ver_number
			,x_base_percent_comp_deriv_code => l_base_percent_comp_deriv_code
			,x_base_progress_status_code    => l_date_override_flag -- 4533112 l_base_progress_status_code
			,x_eff_rollup_prog_stat_code    => l_rollup_rec2.eff_rollup_prog_stat_code
			,x_percent_complete_id          => l_percent_complete_id
			,x_structure_type               => p_structure_type -- l_rollup_rec2.structure_type fpm dev cr 3
			,x_proj_element_id              => p_object_id--l_rollup_rec2.proj_element_id fpm dev cr 3
			,x_structure_version_id         => l_structure_version_id--l_rollup_rec2.structure_version_id fpm dev cr 3
			,x_ppl_act_effort_to_date	=> l_actual_effort -- bug 3796357 l_rollup_rec2.ppl_act_effort_to_date
			,x_eqpmt_act_effort_to_date	=> l_rollup_rec2.eqpmt_act_effort_to_date
			,x_eqpmt_etc_effort             => l_rollup_rec2.eqpmt_etc_effort
			,x_oth_act_cost_to_date_tc      => l_rollup_rec2.oth_act_cost_to_date_tc
			,x_oth_act_cost_to_date_fc      => l_rollup_rec2.oth_act_cost_to_date_fc
			,x_oth_act_cost_to_date_pc      => l_rollup_rec2.oth_act_cost_to_date_pc
			,x_oth_etc_cost_tc              => l_rollup_rec2.oth_etc_cost_tc
			,x_oth_etc_cost_fc              => l_rollup_rec2.oth_etc_cost_fc
			,x_oth_etc_cost_pc              => l_rollup_rec2.oth_etc_cost_pc
			,x_ppl_act_cost_to_date_tc      => l_act_bur_cost_to_date_tc   --3627315 issue 4
			,x_ppl_act_cost_to_date_fc      => l_act_bur_cost_to_date_fc   --3627315 issue 4
			,x_ppl_act_cost_to_date_pc      => l_act_bur_cost_to_date_pc   --3627315 issue 4
			,x_ppl_etc_cost_tc              => l_etc_bur_cost_tc   --3627315 issue 4
			,x_ppl_etc_cost_fc              => l_etc_bur_cost_fc   --3627315 issue 4
			,x_ppl_etc_cost_pc              => l_etc_bur_cost_pc   --3627315 issue 4
			,x_eqpmt_act_cost_to_date_tc    => l_rollup_rec2.eqpmt_act_cost_to_date_tc
			,x_eqpmt_act_cost_to_date_fc    => l_rollup_rec2.eqpmt_act_cost_to_date_fc
			,x_eqpmt_act_cost_to_date_pc    => l_rollup_rec2.eqpmt_act_cost_to_date_pc
			,x_eqpmt_etc_cost_tc            => l_rollup_rec2.eqpmt_etc_cost_tc
			,x_eqpmt_etc_cost_fc            => l_rollup_rec2.eqpmt_etc_cost_fc
			,x_eqpmt_etc_cost_pc            => l_rollup_rec2.eqpmt_etc_cost_pc
			,x_earned_value                 => l_earned_value -- l_rollup_rec2.earned_value -- fix for bug # 3957607.
			,x_task_wt_basis_code           => l_rollup_rec2.task_wt_basis_code
			,x_subprj_ppl_act_effort        => l_rollup_rec2.subprj_ppl_act_effort
			,x_subprj_eqpmt_act_effort      => l_rollup_rec2.subprj_eqpmt_act_effort
			,x_subprj_ppl_etc_effort        => l_rollup_rec2.subprj_ppl_etc_effort
			,x_subprj_eqpmt_etc_effort      => l_rollup_rec2.subprj_eqpmt_etc_effort
			,x_sbpj_oth_act_cost_to_date_tc => l_rollup_rec2.subprj_oth_act_cost_to_date_tc
			,x_sbpj_oth_act_cost_to_date_fc => l_rollup_rec2.subprj_oth_act_cost_to_date_fc
			,x_sbpj_oth_act_cost_to_date_pc => l_rollup_rec2.subprj_oth_act_cost_to_date_pc
			,x_subprj_ppl_act_cost_tc       => l_rollup_rec2.subprj_ppl_act_cost_tc
			,x_subprj_ppl_act_cost_fc       => l_rollup_rec2.subprj_ppl_act_cost_fc
			,x_subprj_ppl_act_cost_pc       => l_rollup_rec2.subprj_ppl_act_cost_pc
			,x_subprj_eqpmt_act_cost_tc     => l_rollup_rec2.subprj_eqpmt_act_cost_tc
			,x_subprj_eqpmt_act_cost_fc     => l_rollup_rec2.subprj_eqpmt_act_cost_fc
			,x_subprj_eqpmt_act_cost_pc     => l_rollup_rec2.subprj_eqpmt_act_cost_pc
			,x_subprj_oth_etc_cost_tc       => l_rollup_rec2.subprj_oth_etc_cost_tc
			,x_subprj_oth_etc_cost_fc       => l_rollup_rec2.subprj_oth_etc_cost_fc
			,x_subprj_oth_etc_cost_pc       => l_rollup_rec2.subprj_oth_etc_cost_pc
			,x_subprj_ppl_etc_cost_tc       => l_rollup_rec2.subprj_ppl_etc_cost_tc
			,x_subprj_ppl_etc_cost_fc       => l_rollup_rec2.subprj_ppl_etc_cost_fc
			,x_subprj_ppl_etc_cost_pc       => l_rollup_rec2.subprj_ppl_etc_cost_pc
			,x_subprj_eqpmt_etc_cost_tc     => l_rollup_rec2.subprj_eqpmt_etc_cost_tc
			,x_subprj_eqpmt_etc_cost_fc     => l_rollup_rec2.subprj_eqpmt_etc_cost_fc
			,x_subprj_eqpmt_etc_cost_pc     => l_rollup_rec2.subprj_eqpmt_etc_cost_pc
			,x_subprj_earned_value          => l_rollup_rec2.subprj_earned_value
			,x_current_flag                 => l_rollup_current_flag  --maansari7/21 --bug 3879461 --maansari
			,x_projfunc_cost_rate_type      => l_projfunc_cost_rate_type    --3627315 issue 4
			,x_projfunc_cost_exchange_rate  => l_projfunc_cost_exch_rate    --3627315 issue 4
			,x_projfunc_cost_rate_date      => l_projfunc_cost_rate_date    --3627315 issue 4
			,x_proj_cost_rate_type          => l_project_rate_type      --3627315 issue 4
			,x_proj_cost_exchange_rate      => l_project_exch_rate      --3627315 issue 4
			,x_proj_cost_rate_date          => l_project_rate_date      --3627315 issue 4
			,x_txn_currency_code            => l_txn_currency_code      --3627315 issue 4
			,x_prog_pa_period_name          => l_rollup_rec2.prog_pa_period_name
			,x_prog_gl_period_name          => l_rollup_rec2.prog_gl_period_name
			,x_oth_quantity_to_date         => l_rollup_rec2.oth_quantity_to_date
			,x_oth_etc_quantity             => l_rollup_rec2.oth_etc_quantity
			,x_oth_act_rawcost_to_date_tc   => l_rollup_rec2.oth_act_rawcost_to_date_tc
			,x_oth_act_rawcost_to_date_fc   => l_rollup_rec2.oth_act_rawcost_to_date_fc
			,x_oth_act_rawcost_to_date_pc   => l_rollup_rec2.oth_act_rawcost_to_date_pc
			,x_oth_etc_rawcost_tc		=> l_rollup_rec2.oth_etc_rawcost_tc
			,x_oth_etc_rawcost_fc		=> l_rollup_rec2.oth_etc_rawcost_fc
			,x_oth_etc_rawcost_pc		=> l_rollup_rec2.oth_etc_rawcost_pc
			,x_ppl_act_rawcost_to_date_tc   => l_act_raw_cost_to_date_tc
			,x_ppl_act_rawcost_to_date_fc   => l_act_raw_cost_to_date_fc
			,x_ppl_act_rawcost_to_date_pc   => l_act_raw_cost_to_date_pc
			,x_ppl_etc_rawcost_tc		=> l_etc_raw_cost_tc
			,x_ppl_etc_rawcost_fc		=> l_etc_raw_cost_tc
			,x_ppl_etc_rawcost_pc		=> l_etc_raw_cost_tc
			,x_eqpmt_act_rawcost_to_date_tc => l_rollup_rec2.eqpmt_act_rawcost_to_date_tc
			,x_eqpmt_act_rawcost_to_date_fc => l_rollup_rec2.eqpmt_act_rawcost_to_date_fc
			,x_eqpmt_act_rawcost_to_date_pc => l_rollup_rec2.eqpmt_act_rawcost_to_date_pc
			,x_eqpmt_etc_rawcost_tc		=> l_rollup_rec2.eqpmt_etc_rawcost_tc
			,x_eqpmt_etc_rawcost_fc		=> l_rollup_rec2.eqpmt_etc_rawcost_fc
			,x_eqpmt_etc_rawcost_pc		=> l_rollup_rec2.eqpmt_etc_rawcost_pc
			,x_sp_oth_act_rawcost_todate_tc => l_rollup_rec2.spj_oth_act_rawcost_to_date_tc
			,x_sp_oth_act_rawcost_todate_fc => l_rollup_rec2.spj_oth_act_rawcost_to_date_fc
			,x_sp_oth_act_rawcost_todate_pc => l_rollup_rec2.spj_oth_act_rawcost_to_date_pc
			,x_subprj_ppl_act_rawcost_tc    => l_rollup_rec2.subprj_ppl_act_rawcost_tc
			,x_subprj_ppl_act_rawcost_fc    => l_rollup_rec2.subprj_ppl_act_rawcost_fc
			,x_subprj_ppl_act_rawcost_pc    => l_rollup_rec2.subprj_ppl_act_rawcost_pc
			,x_subprj_eqpmt_act_rawcost_tc  => l_rollup_rec2.subprj_eqpmt_act_rawcost_tc
			,x_subprj_eqpmt_act_rawcost_fc  => l_rollup_rec2.subprj_eqpmt_act_rawcost_fc
			,x_subprj_eqpmt_act_rawcost_pc  => l_rollup_rec2.subprj_eqpmt_act_rawcost_pc
			,x_subprj_oth_etc_rawcost_tc    => l_rollup_rec2.subprj_oth_etc_rawcost_tc
			,x_subprj_oth_etc_rawcost_fc    => l_rollup_rec2.subprj_oth_etc_rawcost_fc
			,x_subprj_oth_etc_rawcost_pc    => l_rollup_rec2.subprj_oth_etc_rawcost_pc
			,x_subprj_ppl_etc_rawcost_tc    => l_rollup_rec2.subprj_ppl_etc_rawcost_tc
			,x_subprj_ppl_etc_rawcost_fc    => l_rollup_rec2.subprj_ppl_etc_rawcost_fc
			,x_subprj_ppl_etc_rawcost_pc    => l_rollup_rec2.subprj_ppl_etc_rawcost_pc
			,x_subprj_eqpmt_etc_rawcost_tc  => l_rollup_rec2.subprj_eqpmt_etc_rawcost_tc
			,x_subprj_eqpmt_etc_rawcost_fc  => l_rollup_rec2.subprj_eqpmt_etc_rawcost_fc
			,x_subprj_eqpmt_etc_rawcost_pc  => l_rollup_rec2.subprj_eqpmt_etc_rawcost_pc
			);
			-- FPM Dev CR 6
			IF Fnd_Msg_Pub.count_msg > 0 THEN
				RAISE  FND_API.G_EXC_ERROR;
			END IF;

			-----update percent_complete_id in pa_progress_rollup
			UPDATE pa_progress_rollup
			SET percent_complete_id = l_percent_complete_id
			WHERE object_id = p_object_id
			AND project_id = p_project_id
			AND as_of_date > p_as_of_date
			AND percent_complete_id is null
			AND structure_type = p_structure_type -- FPM Dev CR 3
			AND structure_version_id is null -- Bug 3879461
			AND current_flag <> 'W' -- Bug 3879461
			;

			---- call api to copy attachments if any
			IF (l_process = 'CORRECT' and p_progress_mode = 'BACKDATED')
			THEN
				pa_progress_utils.copy_attachments (
				      p_project_id     => p_project_id,
				      p_object_id      => p_object_id,
				      p_object_type    => p_object_type,
				      p_from_pc_id     => l_att_pc_id,
				      p_to_pc_id       => l_percent_complete_id,
				      x_return_status  => x_return_status,
				      x_msg_count      => x_msg_count,
				      x_msg_data       => x_msg_data);
			END IF;
		END IF;
	ELSIF l_db_action = 'UPDATE'
	THEN
		IF g1_debug_mode  = 'Y' THEN
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_db_action Update'||l_PROGRESS_ROLLUP_ID, x_Log_Level=> 3);
		END IF;

		IF  l_working_aod IS NOT NULL
		THEN
		    l_aod := l_working_aod;
		ELSE
		    l_aod := p_as_of_date;
		END IF;

		IF p_percent_complete_id IS NULL OR p_percent_complete_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM OR l_working_aod IS NULL  --- 4245168
		THEN
			l_percent_complete_id := PA_PROGRESS_UTILS.get_ppc_id(
				p_project_id   => p_project_id
				,p_object_id    => p_object_id
				,p_object_type  => p_object_type
				,p_object_version_id => p_object_version_id
				,p_as_of_date   => l_aod
				,p_task_id => p_object_id -- Bug 3764224
				);
			-- FPM Dev CR 3 Getting Record Version Number too
			BEGIN
				SELECT record_version_number into l_record_version_number
				FROM pa_percent_completes
				where percent_complete_id = l_percent_complete_id;
			END;

			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Percent_complete id is not passed', x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_percent_complete_id='||l_percent_complete_id, x_Log_Level=> 3);
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_record_version_number'||l_record_version_number, x_Log_Level=> 3);
			END IF;
		ELSE
			l_percent_complete_id := p_percent_complete_id;
			l_record_version_number := p_record_version_number;
		END IF;

		PA_PERCENT_COMPLETES_PKG.UPDATE_ROW(
		p_task_id			=> l_task_id
		,p_date_computed		=> p_as_of_date
		,p_last_update_date		=> sysdate
		,p_last_updated_by		=> l_user_id
		,p_last_update_login		=> l_login_id
		,p_completed_percentage		=> l_percent_complete
		,p_description			=> p_brief_overview
		,p_project_id			=> p_project_id
		,p_pm_product_code		=> l_pm_product_code
		,p_current_flag			=> l_current_flag
		,p_object_type			=> p_object_type
		,p_object_id			=> p_object_id
		,p_object_version_id		=> p_object_version_id
		,p_progress_status_code		=> p_progress_status_code
		,p_actual_start_date		=> l_actual_start_date
		,p_actual_finish_date		=> l_actual_finish_date
		,p_estimated_start_date		=> l_estimated_start_date
		,p_estimated_finish_date	=> l_estimated_finish_date
		,p_published_flag		=> l_published_flag
		,p_published_by_party_id	=> l_published_by_party_id
		,p_progress_comment		=> p_progress_comment
		,p_history_flag			=> 'n'
		,p_status_code			=> l_task_status
		,p_record_version_number	=> l_record_version_number
		,p_percent_complete_id		=> l_percent_complete_id
		,p_attribute_category           => null
		,p_attribute1                   => null
		,p_attribute2                   => null
		,p_attribute3                   => null
		,p_attribute4                   => null
		,p_attribute5                   => null
		,p_attribute6                   => null
		,p_attribute7                   => null
		,p_attribute8                   => null
		,p_attribute9                   => null
		,p_attribute10                  => null
		,p_attribute11                  => null
		,p_attribute12                  => null
		,p_attribute13                  => null
		,p_attribute14                  => null
		,p_attribute15                  => null
		,p_structure_type               => p_structure_type
		);
                -- FPM Dev CR 6
                IF Fnd_Msg_Pub.count_msg > 0 THEN
                        RAISE  FND_API.G_EXC_ERROR;
                END IF;


		--update progress rollup
		l_PROGRESS_ROLLUP_ID := PA_PROGRESS_UTILS.get_prog_rollup_id(
			p_project_id   => p_project_id
			,p_object_id    => p_object_id
			,p_object_type  => p_object_type
			,p_object_version_id => p_object_version_id
			,p_as_of_date   => l_aod--p_as_of_date FPM Dev CR 3
			,p_proj_element_id => p_object_id -- Bug 3764224
			,p_action          => p_action -- Bug 3879461
			,x_record_version_number => l_rollup_rec_ver_number
			);


		IF g1_debug_mode  = 'Y' THEN
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'l_PROGRESS_ROLLUP_ID='||l_PROGRESS_ROLLUP_ID, x_Log_Level=> 3);
		END IF;

		--maansari5/21
		OPEN cur_pa_rollup2;
		FETCH cur_pa_rollup2 INTO l_rollup_rec2;
		CLOSE cur_pa_rollup2;

		-- BEGIN: Fix for Bug # 3926827.

		IF (NVL( l_lowest_level_task, 'N' ) = 'Y' and (l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'))
		THEN
			l_eff_rollup_percent_comp       := l_base_percent_complete ;
		ELSE
			l_eff_rollup_percent_comp       := l_rollup_rec2.eff_rollup_percent_comp;
		END IF;

		-- END: Fix for Bug # 3926827.

		IF NVL( l_lowest_level_task, 'N' ) = 'N' OR NVL(l_assignment_exists, 'N') = 'Y' -- Bug 3796357 : Added l_assignment_exists check
		OR p_progress_mode = 'BACKDATED' -- Bug 4091457
		THEN
			---    l_base_percent_complete         := l_rollup_rec2.base_percent_complete;
			-- bug 3796357 begin
			l_actual_effort := l_rollup_rec2.ppl_act_effort_to_date;
			l_est_remaining_effort := l_rollup_rec2.estimated_remaining_effort;
			l_act_bur_cost_to_date_tc := l_rollup_rec2.ppl_act_cost_to_date_tc;
			l_act_bur_cost_to_date_fc := l_rollup_rec2.ppl_act_cost_to_date_fc;
			l_act_bur_cost_to_date_pc := l_rollup_rec2.ppl_act_cost_to_date_pc;
			l_etc_bur_cost_tc := l_rollup_rec2.ppl_etc_cost_tc;
			l_etc_bur_cost_fc := l_rollup_rec2.ppl_etc_cost_fc;
			l_etc_bur_cost_pc := l_rollup_rec2.ppl_etc_cost_pc;
			l_projfunc_cost_rate_type := l_rollup_rec2.projfunc_cost_rate_type;
			l_projfunc_cost_exch_rate := l_rollup_rec2.projfunc_cost_exchange_rate;
			l_projfunc_cost_rate_date := l_rollup_rec2.projfunc_cost_rate_date;
			l_project_rate_type := l_rollup_rec2.proj_cost_rate_type;
			l_project_exch_rate := l_rollup_rec2.proj_cost_exchange_rate;
			l_project_rate_date := l_rollup_rec2.proj_cost_rate_date;
			l_txn_currency_code := l_rollup_rec2.txn_currency_code;
			l_act_raw_cost_to_date_tc := l_rollup_rec2.ppl_act_rawcost_to_date_tc;
			l_act_raw_cost_to_date_fc := l_rollup_rec2.ppl_act_rawcost_to_date_fc;
			l_act_raw_cost_to_date_pc := l_rollup_rec2.ppl_act_rawcost_to_date_pc;
			l_etc_raw_cost_tc := l_rollup_rec2.ppl_etc_rawcost_tc;
			l_etc_raw_cost_fc := l_rollup_rec2.ppl_etc_rawcost_fc;
			l_etc_raw_cost_pc := l_rollup_rec2.ppl_etc_rawcost_pc;
			-- Bug 3796357 End

		ELSE
			l_EFF_ROLLUP_PERCENT_COMP       := l_BASE_PERCENT_COMPLETE;
		END IF;

		IF l_PROGRESS_ROLLUP_ID IS NOT NULL
		THEN  ---2
			--maansari5/21
			-- Bug 4506461 Begin
			IF nvl(l_rederive_base_pc,'N') = 'Y' THEN
				l_temp_base_pc := l_rollup_rec2.base_percent_complete;
			ELSE
				l_temp_base_pc := nvl(l_rollup_completed_percentage,l_eff_rollup_percent_comp);
			END IF;
			-- Bug 4506461 End

			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Update Action: Updating PA_PROGRESS_ROLLUP ', x_Log_Level=> 3);
			END IF;

			pa_progress_rollup_pkg.update_row(
			x_progress_rollup_id		=> l_progress_rollup_id
			,x_project_id                   => p_project_id
			,x_object_id                    => p_object_id
			,x_object_type                  => p_object_type
			,x_as_of_date                   => p_as_of_date
			,x_object_version_id            => p_object_version_id
			,x_last_update_date             => sysdate
			,x_last_updated_by              => l_user_id
			,x_progress_status_code         => l_rollup_progress_status
			,x_last_update_login            => l_login_id
			,x_incremental_work_qty         => l_incremental_work_qty
			,x_cumulative_work_qty          => l_cumulative_work_qty
			--                      ,x_base_percent_complete           => l_base_percent_complete -- 4392189 phase 2
			--bug 4506461                      ,x_base_percent_complete           => nvl(l_rollup_rec2.base_percent_complete, l_eff_rollup_percent_comp)
			,x_base_percent_complete        => l_temp_base_pc -- 4506461
			,x_eff_rollup_percent_comp      => l_eff_rollup_percent_comp  --maansari5/21
			,x_completed_percentage         =>  nvl( l_rollup_completed_percentage, l_percent_complete ) --maansari5/21
			,x_estimated_start_date         => l_estimated_start_date
			,x_estimated_finish_date        => l_estimated_finish_date
			,x_actual_start_date            => l_actual_start_date
			,x_actual_finish_date           => l_actual_finish_date
			,x_est_remaining_effort         => l_est_remaining_effort
			,x_record_version_number        => l_rollup_rec_ver_number
			,x_base_percent_comp_deriv_code => l_base_percent_comp_deriv_code
			,x_base_progress_status_code    => l_date_override_flag -- 4533112 l_base_progress_status_code
			,x_eff_rollup_prog_stat_code    => l_rollup_rec2.eff_rollup_prog_stat_code
			,x_percent_complete_id          => l_percent_complete_id
			,x_structure_type               => p_structure_type -- l_rollup_rec2.structure_type  fpm dev cr 3
			,x_proj_element_id              => l_rollup_rec2.proj_element_id
			,x_structure_version_id         => l_structure_version_id -- l_rollup_rec2.structure_version_id  fpm dev cr 3
			,x_ppl_act_effort_to_date	=> l_actual_effort -- bug 3796357 l_rollup_rec2.ppl_act_effort_to_date
			,x_eqpmt_act_effort_to_date	=> l_rollup_rec2.eqpmt_act_effort_to_date
			,x_eqpmt_etc_effort             => l_rollup_rec2.eqpmt_etc_effort
			,x_oth_act_cost_to_date_tc      => l_rollup_rec2.oth_act_cost_to_date_tc
			,x_oth_act_cost_to_date_fc      => l_rollup_rec2.oth_act_cost_to_date_fc
			,x_oth_act_cost_to_date_pc      => l_rollup_rec2.oth_act_cost_to_date_pc
			,x_oth_etc_cost_tc              => l_rollup_rec2.oth_etc_cost_tc
			,x_oth_etc_cost_fc              => l_rollup_rec2.oth_etc_cost_fc
			,x_oth_etc_cost_pc              => l_rollup_rec2.oth_etc_cost_pc
			,x_ppl_act_cost_to_date_tc      => l_act_bur_cost_to_date_tc
			,x_ppl_act_cost_to_date_fc      => l_act_bur_cost_to_date_fc
			,x_ppl_act_cost_to_date_pc      => l_act_bur_cost_to_date_pc
			,x_ppl_etc_cost_tc              => l_etc_bur_cost_tc
			,x_ppl_etc_cost_fc              => l_etc_bur_cost_fc
			,x_ppl_etc_cost_pc              => l_etc_bur_cost_pc
			,x_eqpmt_act_cost_to_date_tc    => l_rollup_rec2.eqpmt_act_cost_to_date_tc
			,x_eqpmt_act_cost_to_date_fc    => l_rollup_rec2.eqpmt_act_cost_to_date_fc
			,x_eqpmt_act_cost_to_date_pc    => l_rollup_rec2.eqpmt_act_cost_to_date_pc
			,x_eqpmt_etc_cost_tc            => l_rollup_rec2.eqpmt_etc_cost_tc
			,x_eqpmt_etc_cost_fc            => l_rollup_rec2.eqpmt_etc_cost_fc
			,x_eqpmt_etc_cost_pc            => l_rollup_rec2.eqpmt_etc_cost_pc
			,x_earned_value                 => l_earned_value -- l_rollup_rec2.earned_value -- fix for bug # 3957607.
			,x_task_wt_basis_code           => l_rollup_rec2.task_wt_basis_code
			,x_subprj_ppl_act_effort        => l_rollup_rec2.subprj_ppl_act_effort
			,x_subprj_eqpmt_act_effort      => l_rollup_rec2.subprj_eqpmt_act_effort
			,x_subprj_ppl_etc_effort        => l_rollup_rec2.subprj_ppl_etc_effort
			,x_subprj_eqpmt_etc_effort      => l_rollup_rec2.subprj_eqpmt_etc_effort
			,x_sbpj_oth_act_cost_to_date_tc => l_rollup_rec2.subprj_oth_act_cost_to_date_tc
			,x_sbpj_oth_act_cost_to_date_fc => l_rollup_rec2.subprj_oth_act_cost_to_date_fc
			,x_sbpj_oth_act_cost_to_date_pc => l_rollup_rec2.subprj_oth_act_cost_to_date_pc
			,x_subprj_ppl_act_cost_tc       => l_rollup_rec2.subprj_ppl_act_cost_tc
			,x_subprj_ppl_act_cost_fc       => l_rollup_rec2.subprj_ppl_act_cost_fc
			,x_subprj_ppl_act_cost_pc       => l_rollup_rec2.subprj_ppl_act_cost_pc
			,x_subprj_eqpmt_act_cost_tc     => l_rollup_rec2.subprj_eqpmt_act_cost_tc
			,x_subprj_eqpmt_act_cost_fc     => l_rollup_rec2.subprj_eqpmt_act_cost_fc
			,x_subprj_eqpmt_act_cost_pc     => l_rollup_rec2.subprj_eqpmt_act_cost_pc
			,x_subprj_oth_etc_cost_tc       => l_rollup_rec2.subprj_oth_etc_cost_tc
			,x_subprj_oth_etc_cost_fc       => l_rollup_rec2.subprj_oth_etc_cost_fc
			,x_subprj_oth_etc_cost_pc       => l_rollup_rec2.subprj_oth_etc_cost_pc
			,x_subprj_ppl_etc_cost_tc       => l_rollup_rec2.subprj_ppl_etc_cost_tc
			,x_subprj_ppl_etc_cost_fc       => l_rollup_rec2.subprj_ppl_etc_cost_fc
			,x_subprj_ppl_etc_cost_pc       => l_rollup_rec2.subprj_ppl_etc_cost_pc
			,x_subprj_eqpmt_etc_cost_tc     => l_rollup_rec2.subprj_eqpmt_etc_cost_tc
			,x_subprj_eqpmt_etc_cost_fc     => l_rollup_rec2.subprj_eqpmt_etc_cost_fc
			,x_subprj_eqpmt_etc_cost_pc     => l_rollup_rec2.subprj_eqpmt_etc_cost_pc
			,x_subprj_earned_value          => l_rollup_rec2.subprj_earned_value
			,x_current_flag                 => l_rollup_current_flag -- bug 3879461 l_current_flag   --maansari7/21
			,x_projfunc_cost_rate_type      => l_projfunc_cost_rate_type  --3627315 issue 4
			,x_projfunc_cost_exchange_rate  => l_projfunc_cost_exch_rate    --3627315 issue 4
			,x_projfunc_cost_rate_date      => l_projfunc_cost_rate_date    --3627315 issue 4
			,x_proj_cost_rate_type          => l_project_rate_type      --3627315 issue 4
			,x_proj_cost_exchange_rate      => l_project_exch_rate      --3627315 issue 4
			,x_proj_cost_rate_date          => l_project_rate_date      --3627315 issue 4
			,x_txn_currency_code            => l_txn_currency_code      --3627315 issue 4
			,x_prog_pa_period_name          => l_pa_period_name
			,x_prog_gl_period_name          => l_gl_period_name
			,x_oth_quantity_to_date         => l_rollup_rec2.oth_quantity_to_date
			,x_oth_etc_quantity             => l_rollup_rec2.oth_etc_quantity
			,x_oth_act_rawcost_to_date_tc   => l_rollup_rec2.oth_act_rawcost_to_date_tc
			,x_oth_act_rawcost_to_date_fc   => l_rollup_rec2.oth_act_rawcost_to_date_fc
			,x_oth_act_rawcost_to_date_pc   => l_rollup_rec2.oth_act_rawcost_to_date_pc
			,x_oth_etc_rawcost_tc		=> l_rollup_rec2.oth_etc_rawcost_tc
			,x_oth_etc_rawcost_fc		=> l_rollup_rec2.oth_etc_rawcost_fc
			,x_oth_etc_rawcost_pc		=> l_rollup_rec2.oth_etc_rawcost_pc
			,x_ppl_act_rawcost_to_date_tc   => l_act_raw_cost_to_date_tc --3627315 issue 4
			,x_ppl_act_rawcost_to_date_fc   => l_act_raw_cost_to_date_fc --3627315 issue 4
			,x_ppl_act_rawcost_to_date_pc   => l_act_raw_cost_to_date_pc --3627315 issue 4
			,x_ppl_etc_rawcost_tc		=> l_etc_raw_cost_tc  --3627315 issue 4
			,x_ppl_etc_rawcost_fc		=> l_etc_raw_cost_fc  --3627315 issue 4
			,x_ppl_etc_rawcost_pc		=> l_etc_raw_cost_pc  --3627315 issue 4
			,x_eqpmt_act_rawcost_to_date_tc => l_rollup_rec2.eqpmt_act_rawcost_to_date_tc
			,x_eqpmt_act_rawcost_to_date_fc => l_rollup_rec2.eqpmt_act_rawcost_to_date_fc
			,x_eqpmt_act_rawcost_to_date_pc => l_rollup_rec2.eqpmt_act_rawcost_to_date_pc
			,x_eqpmt_etc_rawcost_tc		=> l_rollup_rec2.eqpmt_etc_rawcost_tc
			,x_eqpmt_etc_rawcost_fc		=> l_rollup_rec2.eqpmt_etc_rawcost_fc
			,x_eqpmt_etc_rawcost_pc		=> l_rollup_rec2.eqpmt_etc_rawcost_pc
			,x_sp_oth_act_rawcost_todate_tc => l_rollup_rec2.spj_oth_act_rawcost_to_date_tc
			,x_sp_oth_act_rawcost_todate_fc => l_rollup_rec2.spj_oth_act_rawcost_to_date_fc
			,x_sp_oth_act_rawcost_todate_pc => l_rollup_rec2.spj_oth_act_rawcost_to_date_pc
			,x_subprj_ppl_act_rawcost_tc    => l_rollup_rec2.subprj_ppl_act_rawcost_tc
			,x_subprj_ppl_act_rawcost_fc    => l_rollup_rec2.subprj_ppl_act_rawcost_fc
			,x_subprj_ppl_act_rawcost_pc    => l_rollup_rec2.subprj_ppl_act_rawcost_pc
			,x_subprj_eqpmt_act_rawcost_tc  => l_rollup_rec2.subprj_eqpmt_act_rawcost_tc
			,x_subprj_eqpmt_act_rawcost_fc  => l_rollup_rec2.subprj_eqpmt_act_rawcost_fc
			,x_subprj_eqpmt_act_rawcost_pc  => l_rollup_rec2.subprj_eqpmt_act_rawcost_pc
			,x_subprj_oth_etc_rawcost_tc    => l_rollup_rec2.subprj_oth_etc_rawcost_tc
			,x_subprj_oth_etc_rawcost_fc    => l_rollup_rec2.subprj_oth_etc_rawcost_fc
			,x_subprj_oth_etc_rawcost_pc    => l_rollup_rec2.subprj_oth_etc_rawcost_pc
			,x_subprj_ppl_etc_rawcost_tc    => l_rollup_rec2.subprj_ppl_etc_rawcost_tc
			,x_subprj_ppl_etc_rawcost_fc    => l_rollup_rec2.subprj_ppl_etc_rawcost_fc
			,x_subprj_ppl_etc_rawcost_pc    => l_rollup_rec2.subprj_ppl_etc_rawcost_pc
			,x_subprj_eqpmt_etc_rawcost_tc  => l_rollup_rec2.subprj_eqpmt_etc_rawcost_tc
			,x_subprj_eqpmt_etc_rawcost_fc  => l_rollup_rec2.subprj_eqpmt_etc_rawcost_fc
			,x_subprj_eqpmt_etc_rawcost_pc  => l_rollup_rec2.subprj_eqpmt_etc_rawcost_pc
			);

			IF g1_debug_mode  = 'Y' THEN
				pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Update Action: Updated PA_PROGRESS_ROLLUP ', x_Log_Level=> 3);
			END IF;

			-- FPM Dev CR 6
			IF Fnd_Msg_Pub.count_msg > 0 THEN
				RAISE  FND_API.G_EXC_ERROR;
			END IF;
		ELSE  ---2

			-- BEGIN: Fix for Bug # 3926827.

			OPEN cur_pa_rollup1;
			FETCH cur_pa_rollup1 INTO l_rollup_rec1;
			CLOSE cur_pa_rollup1;

			IF (NVL( l_lowest_level_task, 'N' ) = 'Y' and (l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'))
			THEN
				l_EFF_ROLLUP_PERCENT_COMP       := l_BASE_PERCENT_COMPLETE ;
			ELSE
				l_EFF_ROLLUP_PERCENT_COMP       := l_rollup_rec1.EFF_ROLLUP_PERCENT_COMP;
			END IF;

			-- END: Fix for Bug # 3926827.

			IF NVL( l_lowest_level_task, 'N' ) = 'N' OR NVL(l_assignment_exists, 'N') = 'Y' -- Bug 3796357 : Added l_assignment_exists check
			OR p_progress_mode = 'BACKDATED' -- Bug 4091457
			THEN

				---    l_base_percent_complete         := l_rollup_rec1.base_percent_complete;
				l_eff_rollup_prog_stat_code     := l_rollup_rec1.eff_rollup_prog_stat_code;
				l_base_progress_status_code     := l_rollup_rec1.base_progress_status_code;

				-- bug 3796357 begin
				l_actual_effort := l_rollup_rec1.ppl_act_effort_to_date;
				l_est_remaining_effort := l_rollup_rec1.estimated_remaining_effort;
				l_eqpmt_act_effort_to_date := l_rollup_rec1.eqpmt_act_effort_to_date;
				l_eqpmt_etc_effort := l_rollup_rec1.eqpmt_etc_effort;
				l_oth_act_cost_to_date_tc := l_rollup_rec1.oth_act_cost_to_date_tc;
				l_oth_act_cost_to_date_fc := l_rollup_rec1.oth_act_cost_to_date_fc;
				l_oth_act_cost_to_date_pc := l_rollup_rec1.oth_act_cost_to_date_pc;
				l_oth_etc_cost_tc := l_rollup_rec1.oth_etc_cost_tc;
				l_oth_etc_cost_fc := l_rollup_rec1.oth_etc_cost_fc;
				l_oth_etc_cost_pc := l_rollup_rec1.oth_etc_cost_pc;
				l_act_bur_cost_to_date_tc := l_rollup_rec1.ppl_act_cost_to_date_tc;
				l_act_bur_cost_to_date_fc := l_rollup_rec1.ppl_act_cost_to_date_fc;
				l_act_bur_cost_to_date_pc := l_rollup_rec1.ppl_act_cost_to_date_pc;
				l_etc_bur_cost_tc := l_rollup_rec1.ppl_etc_cost_tc;
				l_etc_bur_cost_fc := l_rollup_rec1.ppl_etc_cost_fc;
				l_etc_bur_cost_pc := l_rollup_rec1.ppl_etc_cost_pc;
				l_eqpmt_act_cost_to_date_tc := l_rollup_rec1.eqpmt_act_cost_to_date_tc;
				l_eqpmt_act_cost_to_date_fc := l_rollup_rec1.eqpmt_act_cost_to_date_fc;
				l_eqpmt_act_cost_to_date_pc := l_rollup_rec1.eqpmt_act_cost_to_date_pc;
				l_eqpmt_etc_cost_tc := l_rollup_rec1.eqpmt_etc_cost_tc;
				l_eqpmt_etc_cost_fc := l_rollup_rec1.eqpmt_etc_cost_fc;
				l_eqpmt_etc_cost_pc := l_rollup_rec1.eqpmt_etc_cost_pc;
				l_projfunc_cost_rate_type := l_rollup_rec1.projfunc_cost_rate_type;
				l_projfunc_cost_exch_rate := l_rollup_rec1.projfunc_cost_exchange_rate;
				l_projfunc_cost_rate_date := l_rollup_rec1.projfunc_cost_rate_date;
				l_project_rate_type := l_rollup_rec1.proj_cost_rate_type;
				l_project_exch_rate := l_rollup_rec1.proj_cost_exchange_rate;
				l_project_rate_date := l_rollup_rec1.proj_cost_rate_date;
				l_txn_currency_code := l_rollup_rec1.txn_currency_code;
				l_oth_quantity_to_date := l_rollup_rec1.oth_quantity_to_date;
				l_oth_etc_quantity  := l_rollup_rec1.oth_etc_quantity;
				l_oth_act_rawcost_to_date_tc := l_rollup_rec1.oth_act_rawcost_to_date_tc;
				l_oth_act_rawcost_to_date_fc := l_rollup_rec1.oth_act_rawcost_to_date_fc;
				l_oth_act_rawcost_to_date_pc := l_rollup_rec1.oth_act_rawcost_to_date_pc;
				l_oth_etc_rawcost_tc := l_rollup_rec1.oth_etc_rawcost_tc;
				l_oth_etc_rawcost_fc := l_rollup_rec1.oth_etc_rawcost_fc;
				l_oth_etc_rawcost_pc := l_rollup_rec1.oth_etc_rawcost_pc;
				l_act_raw_cost_to_date_tc := l_rollup_rec1.ppl_act_rawcost_to_date_tc;
				l_act_raw_cost_to_date_fc := l_rollup_rec1.ppl_act_rawcost_to_date_fc;
				l_act_raw_cost_to_date_pc := l_rollup_rec1.ppl_act_rawcost_to_date_pc;
				l_etc_raw_cost_tc := l_rollup_rec1.ppl_etc_rawcost_tc;
				l_etc_raw_cost_fc := l_rollup_rec1.ppl_etc_rawcost_fc;
				l_etc_raw_cost_pc := l_rollup_rec1.ppl_etc_rawcost_pc;
				l_eqpmt_act_rawcost_to_date_tc := l_rollup_rec1.eqpmt_act_rawcost_to_date_tc;
				l_eqpmt_act_rawcost_to_date_fc := l_rollup_rec1.eqpmt_act_rawcost_to_date_fc;
				l_eqpmt_act_rawcost_to_date_pc := l_rollup_rec1.eqpmt_act_rawcost_to_date_pc;
				l_eqpmt_etc_rawcost_tc := l_rollup_rec1.eqpmt_etc_rawcost_tc;
				l_eqpmt_etc_rawcost_fc := l_rollup_rec1.eqpmt_etc_rawcost_fc;
				l_eqpmt_etc_rawcost_pc := l_rollup_rec1.eqpmt_etc_rawcost_pc;
				-- bug 3796357 end
			ELSE
				l_eff_rollup_percent_comp       := l_base_percent_complete ; -- null; as per majid 21 may
				l_eff_rollup_prog_stat_code     := null;
			END IF;

			-- Bug 4506461 Begin
			IF nvl(l_rederive_base_pc,'N') = 'Y' THEN
				l_temp_base_pc := l_rollup_rec1.base_percent_complete;
			ELSE
				l_temp_base_pc := nvl(l_rollup_completed_percentage,l_eff_rollup_percent_comp);
			END IF;
			-- Bug 4506461 End


			-- changed this for effort to cost conversion
			PA_PROGRESS_ROLLUP_PKG.INSERT_ROW(
			x_progress_rollup_id		=> l_progress_rollup_id
			,x_project_id                   => p_project_id
			,x_object_id                    => p_object_id
			,x_object_type                  => p_object_type
			,x_as_of_date                   => p_as_of_date
			,x_object_version_id            => p_object_version_id
			,x_last_update_date             => sysdate
			,x_last_updated_by              => l_user_id
			,x_creation_date                => sysdate
			,x_created_by                   => l_user_id
			,x_progress_status_code         => nvl( l_rollup_progress_status, p_progress_status_code ) --copy to rollup table. maansari: fpm changes 3420093
			,x_last_update_login            => l_login_id
			,x_incremental_work_qty         => l_incremental_work_qty
			,x_cumulative_work_qty          => l_cumulative_work_qty
			--                      ,x_base_percent_complete           => l_base_percent_complete -- 4392189 phase 2
			-- bug 4506461          ,x_base_percent_complete           => nvl(l_rollup_rec1.base_percent_complete, l_eff_rollup_percent_comp)
			,x_base_percent_complete        => l_temp_base_pc -- 4506461
			,x_eff_rollup_percent_comp      => l_eff_rollup_percent_comp
			,x_completed_percentage         => nvl( l_rollup_completed_percentage, l_percent_complete ) --copy to rollup table. maansari: fpm changes 3420093
			,x_estimated_start_date         => l_estimated_start_date
			,x_estimated_finish_date        => l_estimated_finish_date
			,x_actual_start_date            => l_actual_start_date
			,x_actual_finish_date           => l_actual_finish_date
			,x_est_remaining_effort         => l_est_remaining_effort
			,x_base_percent_comp_deriv_code => l_base_percent_comp_deriv_code
			,x_base_progress_status_code    => l_date_override_flag -- 4533112 l_base_progress_status_code
			,x_eff_rollup_prog_stat_code    => l_eff_rollup_prog_stat_code
			,x_percent_complete_id          => l_percent_complete_id
			,x_structure_type               => p_structure_type
			,x_proj_element_id              => l_task_id
			,x_structure_version_id         => l_structure_version_id -- null fpm dev cr 3
			,x_ppl_act_effort_to_date	=> l_actual_effort
			,x_eqpmt_act_effort_to_date	=> l_eqpmt_act_effort_to_date -- bug 3796357 null   --since this is a task progress, there wont be eqpmt effort.
			,x_eqpmt_etc_effort             => l_eqpmt_etc_effort  -- bug 3796357 null
			,x_oth_act_cost_to_date_tc      => l_oth_act_cost_to_date_tc -- bug 3796357    null   --no transaction is avialbale at task.
			,x_oth_act_cost_to_date_fc      => l_oth_act_cost_to_date_fc -- bug 3796357    null
			,x_oth_act_cost_to_date_pc      => l_oth_act_cost_to_date_pc -- bug 3796357    null
			,x_oth_etc_cost_tc              => l_oth_etc_cost_tc -- bug 3796357   null   --no txn currency at task level.
			,x_oth_etc_cost_fc              => l_oth_etc_cost_fc -- bug 3796357    null
			,x_oth_etc_cost_pc              => l_oth_etc_cost_pc -- bug 3796357    null
			,x_ppl_act_cost_to_date_tc	=> l_act_bur_cost_to_date_tc   --3627315 issue 4
			,x_ppl_act_cost_to_date_fc	=> l_act_bur_cost_to_date_fc   --3627315 issue 4
			,x_ppl_act_cost_to_date_pc	=> l_act_bur_cost_to_date_pc   --3627315 issue 4
			,x_ppl_etc_cost_tc              => l_etc_bur_cost_tc   --3627315 issue 4
			,x_ppl_etc_cost_fc              => l_etc_bur_cost_fc   --3627315 issue 4
			,x_ppl_etc_cost_pc              => l_etc_bur_cost_pc   --3627315 issue 4
			,x_eqpmt_act_cost_to_date_tc    => l_eqpmt_act_cost_to_date_tc-- bug 3796357    null
			,x_eqpmt_act_cost_to_date_fc    => l_eqpmt_act_cost_to_date_fc-- bug 3796357        null
			,x_eqpmt_act_cost_to_date_pc    => l_eqpmt_act_cost_to_date_pc-- bug 3796357        null
			,x_eqpmt_etc_cost_tc            => l_eqpmt_etc_cost_tc -- bug 3796357    null
			,x_eqpmt_etc_cost_fc            => l_eqpmt_etc_cost_fc -- bug 3796357   null
			,x_eqpmt_etc_cost_pc            => l_eqpmt_etc_cost_pc -- bug 3796357   null
			,x_earned_value                 => l_earned_value
			,x_task_wt_basis_code           => l_task_weight_basis_code
			,x_subprj_ppl_act_effort        => null
			,x_subprj_eqpmt_act_effort      => null
			,x_subprj_ppl_etc_effort        => null
			,x_subprj_eqpmt_etc_effort      => null
			,x_sbpj_oth_act_cost_to_date_tc => null
			,x_sbpj_oth_act_cost_to_date_fc => null
			,x_sbpj_oth_act_cost_to_date_pc => null
			,x_subprj_ppl_act_cost_tc       => null
			,x_subprj_ppl_act_cost_fc       => null
			,x_subprj_ppl_act_cost_pc       => null
			,x_subprj_eqpmt_act_cost_tc     => null
			,x_subprj_eqpmt_act_cost_fc     => null
			,x_subprj_eqpmt_act_cost_pc     => null
			,x_subprj_oth_etc_cost_tc       => null
			,x_subprj_oth_etc_cost_fc       => null
			,x_subprj_oth_etc_cost_pc       => null
			,x_subprj_ppl_etc_cost_tc       => null
			,x_subprj_ppl_etc_cost_fc       => null
			,x_subprj_ppl_etc_cost_pc       => null
			,x_subprj_eqpmt_etc_cost_tc     => null
			,x_subprj_eqpmt_etc_cost_fc     => null
			,x_subprj_eqpmt_etc_cost_pc     => null
			,x_subprj_earned_value          => null
			,x_current_flag                 => l_rollup_current_flag
			,x_projfunc_cost_rate_type      => l_projfunc_cost_rate_type    --3627315 issue 4
			,x_projfunc_cost_exchange_rate  => l_projfunc_cost_exch_rate    --3627315 issue 4
			,x_projfunc_cost_rate_date      => l_projfunc_cost_rate_date    --3627315 issue 4
			,x_proj_cost_rate_type          => l_project_rate_type      --3627315 issue 4
			,x_proj_cost_exchange_rate      => l_project_exch_rate      --3627315 issue 4
			,x_proj_cost_rate_date          => l_project_rate_date      --3627315 issue 4
			,x_txn_currency_code            => l_txn_currency_code      --3627315 issue 4
			,x_prog_pa_period_name          => l_pa_period_name
			,x_prog_gl_period_name          => l_gl_period_name
			,x_oth_quantity_to_date         => l_oth_quantity_to_date -- bug 3796357 null
			,x_oth_etc_quantity             => l_oth_etc_quantity -- bug 3796357 null
			,x_oth_act_rawcost_to_date_tc   => l_oth_act_rawcost_to_date_tc-- bug 3796357  null
			,x_oth_act_rawcost_to_date_fc   => l_oth_act_rawcost_to_date_fc-- bug 3796357  null
			,x_oth_act_rawcost_to_date_pc   => l_oth_act_rawcost_to_date_pc-- bug 3796357  null
			,x_oth_etc_rawcost_tc		=> l_oth_etc_rawcost_tc-- bug 3796357  null
			,x_oth_etc_rawcost_fc		=> l_oth_etc_rawcost_fc-- bug 3796357  null
			,x_oth_etc_rawcost_pc		=> l_oth_etc_rawcost_pc-- bug 3796357  null
			,x_ppl_act_rawcost_to_date_tc   => l_act_raw_cost_to_date_tc --3627315 issue 4
			,x_ppl_act_rawcost_to_date_fc   => l_act_raw_cost_to_date_fc --3627315 issue 4
			,x_ppl_act_rawcost_to_date_pc   => l_act_raw_cost_to_date_pc --3627315 issue 4
			,x_ppl_etc_rawcost_tc		=> l_etc_raw_cost_tc  --3627315 issue 4
			,x_ppl_etc_rawcost_fc		=> l_etc_raw_cost_fc  --3627315 issue 4
			,x_ppl_etc_rawcost_pc		=> l_etc_raw_cost_pc  --3627315 issue 4
			,x_eqpmt_act_rawcost_to_date_tc => l_eqpmt_act_rawcost_to_date_tc -- bug 3796357 null
			,x_eqpmt_act_rawcost_to_date_fc => l_eqpmt_act_rawcost_to_date_fc -- bug 3796357 null
			,x_eqpmt_act_rawcost_to_date_pc => l_eqpmt_act_rawcost_to_date_pc -- bug 3796357 null
			,x_eqpmt_etc_rawcost_tc		=> l_eqpmt_etc_rawcost_tc-- bug 3796357 null
			,x_eqpmt_etc_rawcost_fc		=> l_eqpmt_etc_rawcost_fc-- bug 3796357 null
			,x_eqpmt_etc_rawcost_pc		=> l_eqpmt_etc_rawcost_pc-- bug 3796357  null
			,x_sp_oth_act_rawcost_todate_tc => null
			,x_sp_oth_act_rawcost_todate_fc => null
			,x_sp_oth_act_rawcost_todate_pc => null
			,x_subprj_ppl_act_rawcost_tc    => null
			,x_subprj_ppl_act_rawcost_fc    => null
			,x_subprj_ppl_act_rawcost_pc    => null
			,x_subprj_eqpmt_act_rawcost_tc  => null
			,x_subprj_eqpmt_act_rawcost_fc  => null
			,x_subprj_eqpmt_act_rawcost_pc  => null
			,x_subprj_oth_etc_rawcost_tc    => null
			,x_subprj_oth_etc_rawcost_fc    => null
			,x_subprj_oth_etc_rawcost_pc    => null
			,x_subprj_ppl_etc_rawcost_tc    => null
			,x_subprj_ppl_etc_rawcost_fc    => null
			,x_subprj_ppl_etc_rawcost_pc    => null
			,x_subprj_eqpmt_etc_rawcost_tc  => null
			,x_subprj_eqpmt_etc_rawcost_fc  => null
			,x_subprj_eqpmt_etc_rawcost_pc  => null
			);
		END IF; --2
	END IF;  --<l_db_action>


	--bug 3958686, insert assignment level records, start
	IF NVL( l_lowest_level_task, 'N')='Y' AND NVL(l_assignment_exists, 'N') = 'N'
	AND l_element_struc_type = 'WORKPLAN'
	AND (nvl(l_actual_effort,0) <> 0 OR nvl(l_est_remaining_effort,0) <> 0) -- Bug 4632744
	THEN
		IF l_resource_list_member_id is not null
		THEN
			-- Bug 4632744
			-- Commented below call
			-- Added new
			/*

			PA_PROGRESS_PVT.convert_task_prog_to_assgn
			   (   p_resource_list_mem_id  => l_resource_list_member_id
			  ,p_project_id            => p_project_id
			  ,p_task_id               => p_object_id
			  ,p_structure_version_id  => l_structure_version_id
			  ,p_as_of_date            => trunc(p_as_of_date)
			  ,p_action                => p_action
			  ,p_subprj_actual_exists  => l_subproject_act_found -- 4490532
			  ,p_object_version_id     => p_object_version_id -- 4490532
			  ,x_return_status         => l_return_status
			  ,x_msg_count             => l_msg_count
			  ,x_msg_data              => l_msg_data
			   );
			   */

			-- Bug 4632744
			-- Added code below to call assignment progress API
			-- with incremnetal actual


			OPEN c_get_last_ppl_effort_fr_assgn(l_resource_list_member_id);
			FETCH c_get_last_ppl_effort_fr_assgn INTO l_last_submitted_effort;
			CLOSE c_get_last_ppl_effort_fr_assgn;

			l_actual_effort_this_period := NVL(l_actual_effort,0) - nvl(l_last_submitted_effort,0);
                        ---5441402  introduced calling module as HIDDEN_ASGMT
                        if (p_calling_module <> 'AMG') then
                            l_calling_module := 'HIDDEN_ASGMT';
                        else
                            l_calling_module := p_calling_module;
                        end if;
			PA_ASSIGNMENT_PROGRESS_PUB.UPDATE_ASSIGNMENT_PROGRESS(
				     p_api_version                   => l_api_version
				     ,p_init_msg_list                => p_init_msg_list
				     ,p_commit                       => p_commit
				     ,p_validate_only                => p_validate_only
				     ,p_validation_level             => p_validation_level
				     ,p_calling_module               => l_calling_module
				     ,p_action                       => p_action
				     ,p_progress_mode                => p_progress_mode
				     ,p_percent_complete_id          => null
				     ,p_project_id                   => p_project_id
				     ,p_object_id                    => l_resource_list_member_id
				     ,p_object_version_id            => p_object_version_id
				     ,p_task_id                      => p_object_id
				     ,p_as_of_date                   => p_as_of_date
				     ,p_progress_comment             => p_progress_comment
				     ,p_brief_overview               => p_brief_overview
				     ,p_actual_start_date            => l_actual_start_date
				     ,p_actual_finish_date           => l_actual_finish_date
				     ,p_estimated_start_date         => l_estimated_start_date
				     ,p_estimated_finish_date        => l_estimated_finish_date
				     ,p_record_version_number        => null
				     ,p_pm_product_code              => p_pm_product_code
				     ,p_structure_type               => p_structure_type
				     ,p_structure_version_id         => p_structure_version_id
				     ,p_actual_cost_this_period      => null
				     ,p_actual_effort_this_period    => l_actual_effort_this_period
				     ,p_rate_based_flag              => l_rate_based_flag
				     ,p_resource_class_code          => l_resource_class_code
				     ,p_actual_cost                  => null
				     ,p_actual_effort                => l_last_submitted_effort
				     ,p_etc_cost_this_period         => null
				     ,p_etc_effort_this_period       => l_est_remaining_effort
				     ,p_txn_currency_code            => l_txn_currency_code
				     ,p_rbs_element_id               => l_rbs_element_id
				     ,p_resource_assignment_id       => l_resource_assignment_id
				     ,p_scheduled_start_date         => l_scheduled_start_date
				     ,p_scheduled_finish_date        => l_scheduled_finish_date
				     ,x_return_status                => l_return_status
				     ,x_msg_count                    => l_msg_count
				     ,x_msg_data                     => l_msg_data
				     );

                        -- Bug 8294708
                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                            x_msg_data := l_msg_data;
                            x_return_status := 'E';
                            RAISE FND_API.G_EXC_ERROR;
                        END IF;

		END IF;
	END IF;
	--bug 3958686, insert assignment level records, end


	IF p_action = 'PUBLISH'
	THEN
		-- Bug 4429929 : Now Cancel Status can only be changed thru Update Task
		/*
		--- call apis if the status is 'CANCELLED'
		IF PA_PROGRESS_UTILS.get_system_task_status( l_TASK_STATUS ) = 'CANCELLED'
		AND l_element_struc_type = 'WORKPLAN' --maansari: fpm changes
		THEN
		PA_PROJ_ELEMENTS_UTILS.Check_chg_stat_cancel_ok (
		   p_task_id             => p_object_id
		  ,p_task_version_id     => p_object_version_id
		  ,p_new_task_status     => l_task_status
		  ,x_return_status       => l_return_status
		  ,x_error_message_code  => l_error_message_code
		);

		IF (l_return_status <> 'S') THEN
		PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
				p_msg_name => l_error_message_code);
		raise FND_API.G_EXC_ERROR;
		END IF;
		END IF;
		*/

		-- Bug 3878024 : new Check is added below
		-- IF NVL( l_lowest_level_task, 'N' ) = 'N' AND p_object_type = 'PA_TASKS'
		--    AND l_element_struc_type = 'WORKPLAN' AND p_progress_mode <> 'BACKDATED'
		IF p_object_type = 'PA_TASKS'
		AND l_element_struc_type = 'WORKPLAN' AND p_progress_mode <> 'BACKDATED'
		THEN
			--- update % complete and prog stat for future rollup recs
			update pa_progress_rollup
			set completed_percentage = l_percent_complete,
			progress_status_code = p_progress_status_code
			where project_id = p_project_id
			and object_id = p_object_id
			and object_type = p_object_type
			and structure_type = p_structure_type
			and as_of_date > p_as_of_date
			and current_flag <> 'W' -- Bug 3879461
			and structure_version_id is null -- Bug 3879461
			;

			PA_PROGRESS_PUB.push_down_task_status(
			p_api_version               => p_api_version
			,p_init_msg_list             => p_init_msg_list
			,p_commit                    => p_commit
			,p_validate_only             => p_validate_only
			,p_validation_level          => p_validation_level
			,p_calling_module            => p_calling_module
			,p_debug_mode                => p_debug_mode
			,p_max_msg_count             => p_max_msg_count
			,p_project_id                => p_project_id
			,P_OBJECT_TYPE               => P_OBJECT_TYPE
			,P_OBJECT_ID                 => P_OBJECT_ID
			,p_as_of_date                => p_as_of_date
			,p_object_version_id         => p_object_version_id
			,p_actual_finish_date        => nvl(l_actual_finish_date, trunc(sysdate)) -- Bug 3922325 : Added sysdate
			,x_return_status             => l_return_status
			,x_msg_count                 => l_msg_count
			,x_msg_data                  => l_msg_data
			,p_task_status               => l_task_status
			);
		END IF;

		IF l_return_status <> FND_API.G_RET_STS_SUCCESS
		THEN
			PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
			     p_msg_name       => l_msg_data
			);
			x_msg_data := l_msg_data;
			x_return_status := 'E';
			RAISE  FND_API.G_EXC_ERROR;
		END IF;

		/* Bug 2751159 Moved the update task_status code out of IF condition for workplan
		It means updation of task status shd happen for financial also */

		IF (p_progress_mode <> 'BACKDATED')
		THEN
                        /* -- Bug#8213897  >> Starts -- */

                           declare

                                   task_status1 number;

                                   cursor cur_Task_Type is
                                   select type_id
                                   from   pa_proj_elements
                                   where  proj_element_id = p_object_id;

                                   cursor chk_task_type_ppc_enabled (p_task_type_id  number)is
                                   select percent_comp_enable_flag
                                   from pa_task_types
                                   where task_type_id = p_task_type_id ;

                                   cursor chk_structure_ppc_enabled is
                                   select percent_comp_enable_flag
                                   from pa_proj_progress_attr
                                   where project_id = p_project_id
                                   and structure_type = p_structure_type;

                                   l_task_type_id number;

                                   l_task_perc_comp_enable_flag varchar2(1);
                                   l_struc_perc_comp_enable_flag varchar2(1);

                            begin

                                   open  cur_Task_Type;
                                   fetch cur_Task_Type into l_task_type_id;
                                   close cur_Task_Type;

                                   open  chk_task_type_ppc_enabled(l_task_type_id);
                                   fetch chk_task_type_ppc_enabled into l_task_perc_comp_enable_flag;
                                   close chk_task_type_ppc_enabled;

                                   open  chk_structure_ppc_enabled;
                                   fetch chk_structure_ppc_enabled into l_struc_perc_comp_enable_flag;
                                   close chk_structure_ppc_enabled;

                                     select status_code
                                     into task_status1
                                     from pa_proj_elements
                                     WHERE proj_element_id = p_object_id
                                     AND project_id = p_project_id
                                     AND object_type = p_object_type;

                             If (nvl(l_struc_perc_comp_enable_flag, 'N') = 'N'  or
                                         nvl(l_task_perc_comp_enable_flag, 'N') = 'N' )
                                    and task_status1 = '127' then

                                      If l_task_status = 124 then

                                                UPDATE pa_progress_rollup
                                               SET actual_finish_date  = '',
                                                         actual_start_date    = '',
                                                         completed_percentage = ''
                                                     WHERE object_id = p_object_id
                                                     AND current_flag IN ('Y')
                                                     AND object_type = 'PA_TASKS'
                                                     AND proj_element_id = p_object_id
                                                     AND structure_version_id IS NULL
                                                     AND project_id = p_project_id
                                           AND structure_type = p_structure_type;

                                           Elsif l_task_status = 125 then

                                                UPDATE pa_progress_rollup
                                         SET actual_finish_date   = '',
                                             completed_percentage = ''
                                                     WHERE object_id = p_object_id
                                                     AND current_flag IN ('Y')
                                                     AND object_type = 'PA_TASKS'
                                                     AND proj_element_id = p_object_id
                                                     AND structure_version_id IS NULL
                                                     AND project_id = p_project_id
                                           AND structure_type = p_structure_type;

                                           End If;

                                    End If;

                           End;

                           /* -- Bug#8213897  >> Ends -- */



			--Update pa_proj_elements with the status
			UPDATE pa_proj_elements
			SET status_code = l_task_status
			,last_update_date = decode(status_code,l_task_status,last_update_date,sysdate) --Bug 5978904
 	                ,last_update_login = decode(status_code,l_task_status,last_update_login,l_login_id) --Bug 5978904
 	                ,last_updated_by = decode(status_code,l_task_status,last_updated_by,l_user_id)  --Bug 5978904
			WHERE proj_element_id = p_object_id
			AND project_id = p_project_id
			AND object_type = p_object_type;
		END IF;


		-- Bug 4429929 : Now Cancel Status can only be changed thru Update Task
		/*
		IF PA_PROGRESS_UTILS.get_system_task_status( l_TASK_STATUS ) = 'CANCELLED'
		THEN
			PA_TASK_PVT1.set_new_tasks_to_TBD(
			p_project_id               => p_project_id
			,p_task_id                  => p_object_id
			,p_task_status              => l_task_status
			,x_return_status            => l_return_status
			,x_msg_count                => l_msg_count
			,x_msg_data                 => l_msg_data);

			IF (l_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
				raise FND_API.G_EXC_ERROR;
			END IF;
		END IF;
		*/

		IF l_element_struc_type = 'WORKPLAN'
		THEN
			IF p_progress_mode <> 'BACKDATED' then
				/* Bug2756007 Begin */
				OPEN cur_sch_id( p_object_version_id ) ;
				FETCH cur_sch_id INTO l_pev_schedule_id, l_sch_rec_ver_number;
				CLOSE cur_sch_id;

				PA_TASK_PUB1.Update_Schedule_Version(
					  p_pev_schedule_id             => l_pev_schedule_id
					 ,p_calling_module              => p_calling_module
					 ,p_actual_start_date           => l_actual_start_date
					 ,p_actual_finish_date          => l_actual_finish_date
					 ,p_estimate_start_date         => l_estimated_start_date
					 ,p_estimate_finish_date        => l_estimated_finish_date
					 ,p_record_version_number       => l_sch_rec_ver_number
					 ,x_return_status               => l_return_status
					 ,x_msg_count                   => l_msg_count
					 ,x_msg_data                    => l_msg_data );

				IF l_return_status <> FND_API.G_RET_STS_SUCCESS
				THEN
					-- Bug 3248988 : Update_schedule_version adds the message, here message shd not be added
					--         PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
					--                             p_msg_name       => l_msg_data
					--                  );
					--           x_msg_data := l_msg_data;
					x_return_status := 'E';
					RAISE  FND_API.G_EXC_ERROR;
				END IF;
				/* Bug2756007 End */
			END IF;

                   /*****5466645
			IF(p_bulk_load_flag = 'N') Then

				IF p_progress_mode <> 'BACKDATED'
				AND l_element_struc_type = 'WORKPLAN'   --maansari fpm changes
				THEN

					--- bug 2756033
					-- Bug 2812855 : Added following procedure call to populate actual and estimated dates to all the task versions
					IF ( NVL( l_lowest_level_task, 'N' ) = 'Y' )
					THEN
						PA_TASK_PVT1.Update_Dates_To_All_Versions(
							 p_project_id           => p_project_id
							,p_element_version_id       => p_object_version_id
							,x_return_status               => l_return_status
							,x_msg_count                   => l_msg_count
							,x_msg_data                    => l_msg_data );
						IF l_return_status <> FND_API.G_RET_STS_SUCCESS
						THEN
							PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
							     p_msg_name       => l_msg_data
							);
							x_msg_data := l_msg_data;
							x_return_status := 'E';
							RAISE  FND_API.G_EXC_ERROR;
						END IF;

						BEGIN
							Select ppev1.proj_element_id
							into l_structure_id
							from pa_proj_element_versions ppev1, pa_proj_element_versions ppev2
							where ppev2.element_version_id = p_object_version_id
							and ppev2.project_id = ppev1.project_id
							and ppev2.parent_structure_version_id = ppev1.element_version_id;
						EXCEPTION WHEN OTHERS THEN
							l_structure_id := -999;
						END;

						IF ((PA_WORKPLAN_ATTR_UTILS.CHECK_AUTO_DATE_SYNC_ENABLED(l_structure_id) = 'Y')
						AND
						(PA_Proj_Elements_Utils.CHECK_IS_FINANCIAL_TASK(p_object_id) = 'Y')    --Bug 3784405  Satish
						AND
						(PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(p_project_id) = 'Y'))
						THEN
							--copy to transaction dates
							PA_PROJECT_DATES_PUB.COPY_PROJECT_DATES(
							p_validate_only => FND_API.G_FALSE
							,p_project_id => p_project_id
							,x_return_status => x_return_status
							,x_msg_count => x_msg_count
							,x_msg_data => x_msg_data);
						END IF;
					END IF;
				END IF; ------ p_progress_mode <> backdated
			END IF;  -------------- end p_bulk_load_flag = 'N'
                  5466645************/
		END IF;
	END IF;

	IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Update Task Progress Complete ', x_Log_Level=> 3);
	END IF;

	IF l_return_status <> FND_API.G_RET_STS_SUCCESS
	THEN
		PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
			     p_msg_name       => l_msg_data
		  );

		x_msg_data := l_msg_data;
		x_return_status := 'E';
		RAISE  FND_API.G_EXC_ERROR;
	END IF;

	x_resource_list_member_id := l_resource_list_member_id;

EXCEPTION
	WHEN FND_API.G_EXC_ERROR THEN
		IF p_commit = FND_API.G_TRUE
		THEN
			rollback to UPDATE_TASK_PROGRESS;
		END IF;
		x_return_status := FND_API.G_RET_STS_ERROR;
		x_msg_count := fnd_msg_pub.count_msg; -- FPM Dev CR 3
	WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
		IF p_commit = FND_API.G_TRUE
		THEN
			rollback to UPDATE_TASK_PROGRESS;
		END IF;
		x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
		fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_TASK_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
		x_msg_count := fnd_msg_pub.count_msg; -- FPM Dev CR 3
	WHEN OTHERS THEN
		IF p_commit = FND_API.G_TRUE THEN
			rollback to UPDATE_TASK_PROGRESS;
		END IF;
		x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
		fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
				      p_procedure_name => 'UPDATE_TASK_PROGRESS',
				      p_error_text     => SUBSTRB(SQLERRM,1,120));
		x_msg_count := fnd_msg_pub.count_msg; -- FPM Dev CR 3
		raise;
END UPDATE_TASK_PROGRESS;


-- Start of comments
--      API name        : ROLLUP_PROGRESS_PVT
--      Type            : Public
--      Pre-reqs        : For Program Rollup, the sub project buckets should be populated.
--      Purpose         : Rolls up the structure
--      Parameters Desc :
--              P_OBJECT_TYPE                   Possible values PA_ASSIGNMENTS, PA_DELIVERABLES, PA_TASKS
--              P_OBJECT_ID                     For assignments, pass resource_assignment_id, otherwise
--                                              proj_element_id of the deliverable and task
--              p_object_version_id             For Assignments, pass task_version_id, otherwise
--                                              element_version_id of the deliverable and task
--              p_task_version_id               For tasks, assignments, deliverables pass the task version id
--                                              , for struture pass null
--              p_lowest_level_task             Does not seem to be required
--              p_process_whole_tree            To indicate if whole tree rollup is not required. It will
--                                              do just 2 level rollup if N
--              p_structure_version_id          Structure version id of the publsihed or working structure version
--              p_structure_type                Possible values WORKPLAN, FINANCIAL
--              p_fin_rollup_method             Possible values are COST, EFFORT
--              p_wp_rollup_method              Possible values are COST, EFFORT, MANUAL, DURATION
--              p_rollup_entire_wbs             To indicate if it requires the whole structure rollup, in this
--                                              case it will ignore the passed object and starts with the lowest
--                                              task
--      History         : 17-MAR-04  amksingh   Rewritten For FPM Development Tracking Bug 3420093
--            08-SEP-2004 Rakesh Raghavan Bug # 3879910. Replaced code with call to API:
--                            PA_PROGRESS_PVT.ROLLUP_PROGRESS_PVT().
-- End of comments

PROCEDURE ROLLUP_PROGRESS_PVT(
 p_api_version                          IN      NUMBER          :=1.0
,p_init_msg_list                        IN      VARCHAR2        :=FND_API.G_TRUE
,p_commit                               IN      VARCHAR2        :=FND_API.G_FALSE
,p_validate_only                        IN      VARCHAR2        :=FND_API.G_TRUE
,p_validation_level                     IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
,p_calling_module                       IN      VARCHAR2        :='SELF_SERVICE'
,p_debug_mode                           IN      VARCHAR2        :='N'
,p_max_msg_count                        IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_progress_mode                        IN      VARCHAR2        := 'FUTURE'
,p_project_id                           IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_object_type                          IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
,p_object_id                            IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_object_version_id                    IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_task_version_id                      IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_as_of_date                           IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
,p_lowest_level_task                    IN      VARCHAR2        := 'N'
,p_process_whole_tree                   IN      VARCHAR2        := 'Y'
,p_structure_version_id                 IN      NUMBER
,p_structure_type                       IN      VARCHAR2        := 'WORKPLAN'
,p_fin_rollup_method                    IN      VARCHAR2        := 'COST'
,p_wp_rollup_method                     IN      VARCHAR2        := 'COST'
,p_rollup_entire_wbs                    IN      VARCHAR2        := 'N'
,p_working_wp_prog_flag                 IN      VARCHAR2        := 'N'  --maansari7/18  to be passed form apply lp progress to select regular planned amounts to send to schduling api for percent comnplete and earned value calculations.
,p_upd_new_elem_ver_id_flag             IN      VARCHAR2        := 'Y'  -- rtarway, for BUG 3951024
,x_return_status                        OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
,x_msg_count                            OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
,x_msg_data                             OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
 IS

   l_api_name                      CONSTANT VARCHAR(30) := 'ROLLUP_PROGRESS_PVT';
   l_api_version                   CONSTANT NUMBER      := 1.0                  ;
   l_return_status                 VARCHAR2(1)                                  ;
   l_msg_count                     NUMBER                                       ;
   l_msg_data                      VARCHAR2(250)                                ;
   l_data                          VARCHAR2(250)                                ;
   l_msg_index_out                 NUMBER                                       ;
   l_error_msg_code                VARCHAR2(250)                                ;
   l_user_id                       NUMBER := FND_GLOBAL.USER_ID                 ;
   l_login_id                      NUMBER := FND_GLOBAL.LOGIN_ID                ;
   g1_debug_mode                    VARCHAR2(1);

   -- Rollup Cases
   -- 1. Workplan Publsihed Version Rollup.
   -- 2. Workplan Working Version Rollup.
   -- 3. Financial Structure Rollup.
   -- 4. Entire WBS using structure version id.
   -- 5. Program Rollup

BEGIN

        -- Rollup Cases
        -- 1. Workplan Publsihed Version Rollup.
        -- 2. Workplan Working Version Rollup.
        -- 3. Financial Structure Rollup.
        -- 4. Entire WBS using structure version id.
        -- 5. Program Rollup


        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT');
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_init_msg_list='||p_init_msg_list, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_commit='||p_commit, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_validate_only='||p_validate_only, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_validation_level='||p_validation_level, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_calling_module='||p_calling_module, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_debug_mode='||p_debug_mode, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_max_msg_count='||p_max_msg_count, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'P_OBJECT_TYPE='||P_OBJECT_TYPE, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'P_OBJECT_ID='||P_OBJECT_ID, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_object_version_id='||p_object_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_task_version_id='||p_task_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_lowest_level_task='||p_lowest_level_task, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_process_whole_tree='||p_process_whole_tree, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_structure_version_id='||p_structure_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_structure_type='||p_structure_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_fin_rollup_method='||p_fin_rollup_method, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_wp_rollup_method='||p_wp_rollup_method, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'p_rollup_entire_wbs='||p_rollup_entire_wbs, x_Log_Level=> 3);
        END IF;

        -- 20 May : Amit : If Structure_version_id is null, then no processing shd be done
    -- Bug 3856161 : Added p_as_of_date check also
        IF p_structure_version_id IS NULL OR (p_as_of_date IS NULL OR p_as_of_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE ) THEN
                return;
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint ROLLUP_PROGRESS_PVT;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

    -- Bug # 3879910. Call corresponding API in package: PA_PROGRESS_PVT.

    PA_PROGRESS_PVT.ROLLUP_PROGRESS_PVT(
    p_api_version        => p_api_version
    ,p_init_msg_list     => p_init_msg_list
    ,p_commit        => p_commit
    ,p_validate_only     => p_validate_only
    ,p_validation_level  => p_validation_level
    ,p_calling_module    => p_calling_module
    ,p_debug_mode        => p_debug_mode
    ,p_max_msg_count     => p_max_msg_count
    ,p_progress_mode     => p_progress_mode
    ,p_project_id        => p_project_id
    ,p_object_type       => p_object_type
    ,p_object_id         => p_object_id
    ,p_object_version_id     => p_object_version_id
    ,p_task_version_id   => p_task_version_id
    ,p_as_of_date        => p_as_of_date
    ,p_lowest_level_task     => p_lowest_level_task
    ,p_process_whole_tree    => p_process_whole_tree
    ,p_structure_version_id  => p_structure_version_id
    ,p_structure_type    => p_structure_type
    ,p_fin_rollup_method     => p_fin_rollup_method
    ,p_wp_rollup_method  => p_wp_rollup_method
    ,p_rollup_entire_wbs     => p_rollup_entire_wbs
    ,p_working_wp_prog_flag  => p_working_wp_prog_flag
     ,p_upd_new_elem_ver_id_flag => p_upd_new_elem_ver_id_flag -- added by rtarway for 3951024
    ,x_return_status     => l_return_status
    ,x_msg_count         => l_msg_count
    ,x_msg_data      => l_msg_data);

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                             p_msg_name       => l_msg_data
                  );
           x_msg_data := l_msg_data;
           x_return_status := 'E';
           RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;


        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT', x_Msg => 'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT END', x_Log_Level=> 3);
        END IF;

EXCEPTION
        WHEN FND_API.G_EXC_ERROR THEN
                IF p_commit = FND_API.G_TRUE THEN
                        rollback to ROLLUP_PROGRESS_PVT;
                END IF;
                x_return_status := FND_API.G_RET_STS_ERROR;
        WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
                IF p_commit = FND_API.G_TRUE THEN
                        rollback to ROLLUP_PROGRESS_PVT;
                END IF;
                x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'ROLLUP_PROGRESS_PVT',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
        WHEN OTHERS THEN
                IF p_commit = FND_API.G_TRUE THEN
                        rollback to ROLLUP_PROGRESS_PVT;
                END IF;
                x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'ROLLUP_PROGRESS_PVT',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
                raise;
END ROLLUP_PROGRESS_PVT;

-- Start of comments
--      API name        : UPDATE_ROLLUP_PROGRESS_PVT
--      Type            : Private
--      Pre-reqs        : ROLLUP_PROGRESS_PVT shd have been called.
--      Purpose         : Updates the Rolled up data
--      Parameters Desc :
--              P_OBJECT_TYPE                   Possible values PA_ASSIGNMENTS, PA_DELIVERABLES, PA_TASKS
--              P_OBJECT_ID                     For assignments, pass resource_assignment_id, otherwise
--                                              proj_element_id of the deliverable and task
--              p_object_version_id             For Assignments, pass task_version_id, otherwise
--                                              element_version_id of the deliverable and task
--              p_task_version_id               For tasks, assignments, deliverables pass the task version id
--                                              , for struture pass null
--              p_lowest_level_task             Does not seem to be required
--              p_structure_version_id          Structure version id of the publsihed or working structure version
--              p_structure_type                Possible values WORKPLAN, FINANCIAL
--              p_fin_rollup_method             Possible values are COST, EFFORT
--              p_wp_rollup_method              Possible values are COST, EFFORT, MANUAL, DURATION
--              p_published_structure           To indicate if the passed structure version is published
--      History         : 17-MAR-04  amksingh   Rewritten For FPM Development Tracking Bug 3420093
--                        08-SEP-2004 Rakesh Raghavan Bug # 3879910. Replaced code with call to API:
--                                                    PA_PROGRESS_PVT.UPDATE_ROLLUP_PROGRESS_PVT().
-- End of comments

PROCEDURE UPDATE_ROLLUP_PROGRESS_PVT(
  p_api_version                         IN      NUMBER                  :=1.0
 ,p_init_msg_list                       IN      VARCHAR2                :=FND_API.G_TRUE
 ,p_commit                              IN      VARCHAR2                :=FND_API.G_FALSE
 ,p_validate_only                       IN      VARCHAR2                :=FND_API.G_TRUE
 ,p_validation_level                    IN      NUMBER                  :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module                      IN      VARCHAR2                :='SELF_SERVICE'
 ,p_debug_mode                          IN      VARCHAR2                :='N'
 ,p_max_msg_count                       IN      NUMBER                  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                          IN      NUMBER                  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_version_id                   IN      NUMBER                  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_as_of_date                          IN      DATE                    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_rollup_table                        IN      PA_SCHEDULE_OBJECTS_PVT.PA_SCHEDULE_OBJECTS_TBL_TYPE
 ,p_lowest_level_task                   IN      VARCHAR2                := 'N'
 ,p_task_version_id                     IN      NUMBER
 ,p_structure_version_id                IN      NUMBER
 ,p_structure_type                      IN      VARCHAR2                := 'WORKPLAN'
 ,p_fin_rollup_method                   IN      VARCHAR2                := 'COST'
 ,p_wp_rollup_method                    IN      VARCHAR2                := 'COST'
 ,p_published_structure                 IN      VARCHAR2
 ,p_rollup_entire_wbs                   IN      VARCHAR2                := 'N' -- FPM Dev CR 7
 ,p_working_wp_prog_flag                 IN      VARCHAR2        := 'N'  --bug 3829341
 ,p_upd_new_elem_ver_id_flag             IN      VARCHAR2        := 'Y'  -- rtarway, for BUG 3951024
 ,p_progress_mode           IN  VARCHAR2        := 'FUTURE'  -- 4091457
 ,x_return_status                       OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                           OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                            OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS
   l_api_name                      CONSTANT VARCHAR(30) := 'UPDATE_ROLLUP_PROGRESS_PVT' ;
   l_api_version                   CONSTANT NUMBER      := 1.0                          ;

   l_return_status                 VARCHAR2(1)                                          ;
   l_msg_count                     NUMBER                                               ;
   l_msg_data                      VARCHAR2(250)                                        ;
   l_data                          VARCHAR2(250)                                        ;
   l_msg_index_out                 NUMBER                                               ;
   l_error_msg_code                VARCHAR2(250)                                        ;
   l_user_id                       NUMBER                       := FND_GLOBAL.USER_ID   ;
   l_login_id                      NUMBER                       := FND_GLOBAL.LOGIN_ID  ;
   g1_debug_mode                    VARCHAR2(1);

BEGIN

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT');
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_init_msg_list='||p_init_msg_list, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_commit='||p_commit, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_validate_only='||p_validate_only, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_validation_level='||p_validation_level, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_calling_module='||p_calling_module, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_debug_mode='||p_debug_mode, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_max_msg_count='||p_max_msg_count, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_object_version_id='||p_object_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_task_version_id='||p_task_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_lowest_level_task='||p_lowest_level_task, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_structure_version_id='||p_structure_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_structure_type='||p_structure_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_fin_rollup_method='||p_fin_rollup_method, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_wp_rollup_method='||p_wp_rollup_method, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'p_published_structure='||p_published_structure, x_Log_Level=> 3);
        END IF;


        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint UPDATE_ROLLUP_PROGRESS_PVT;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        -- Bug # 3879910. Call corresponding API in package: PA_PROGRESS_PVT.

    PA_PROGRESS_PVT.UPDATE_ROLLUP_PROGRESS_PVT(
    p_api_version        => p_api_version
    ,p_init_msg_list     => p_init_msg_list
    ,p_commit        => p_commit
    ,p_validate_only     => p_validate_only
    ,p_validation_level  => p_validation_level
    ,p_calling_module    => p_calling_module
    ,p_debug_mode        => p_debug_mode
    ,p_max_msg_count     => p_max_msg_count
    ,p_project_id        => p_project_id
    ,p_object_version_id     => p_object_version_id
    ,p_as_of_date        => p_as_of_date
    ,p_rollup_table      => p_rollup_table
    ,p_lowest_level_task     => p_lowest_level_task
    ,p_task_version_id   => p_task_version_id
    ,p_structure_version_id  => p_structure_version_id
    ,p_structure_type    => p_structure_type
    ,p_fin_rollup_method     => p_fin_rollup_method
    ,p_wp_rollup_method  => p_wp_rollup_method
    ,p_published_structure   => p_published_structure
    ,p_rollup_entire_wbs     => p_rollup_entire_wbs
    ,p_working_wp_prog_flag  => p_working_wp_prog_flag
     ,p_upd_new_elem_ver_id_flag => p_upd_new_elem_ver_id_flag --BUG 3951024
        ,p_progress_mode     =>     p_progress_mode -- 4091457
    ,x_return_status     => l_return_status
    ,x_msg_count         => l_msg_count
    ,x_msg_data      => l_msg_data);

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                    p_msg_name       => l_msg_data);
               x_msg_data := l_msg_data;
               x_return_status := 'E';
               x_msg_count := l_msg_count;
               RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
            END IF;


        x_return_status := FND_API.G_RET_STS_SUCCESS;

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT End', x_Log_Level=> 3);
        END IF;

EXCEPTION
    WHEN FND_API.G_EXC_ERROR THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'FND_API.G_EXC_ERROR', x_Log_Level=> 3);
                END IF;

                IF p_commit = FND_API.G_TRUE THEN
                rollback to UPDATE_ROLLUP_PROGRESS_PVT;
                END IF;
             x_return_status := FND_API.G_RET_STS_ERROR;
    WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN

                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'FND_API.G_EXC_UNEXPECTED_ERROR', x_Log_Level=> 3);
                END IF;

                IF p_commit = FND_API.G_TRUE THEN
                        rollback to UPDATE_ROLLUP_PROGRESS_PVT;
                END IF;
                x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_ROLLUP_PROGRESS_PVT',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    WHEN OTHERS THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_ROLLUP_PROGRESS_PVT', x_Msg => 'OTHERS = '||sqlerrm, x_Log_Level=> 3);
                END IF;

                IF p_commit = FND_API.G_TRUE THEN
                        rollback to UPDATE_ROLLUP_PROGRESS_PVT;
                END IF;
                x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_ROLLUP_PROGRESS_PVT',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
                raise;
END UPDATE_ROLLUP_PROGRESS_PVT;


PROCEDURE CREATE_PROJ_PROG_ATTR(
  p_api_version       IN        NUMBER  :=1.0
 ,p_init_msg_list             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                  IN  VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level    IN      NUMBER  :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module            IN        VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode        IN        VARCHAR2        :='N'
 ,p_max_msg_count             IN        NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                      IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_OBJECT_TYPE                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_OBJECT_ID                       IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_PROGRESS_CYCLE_ID               IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_WQ_ENABLE_FLAG                  IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_REMAIN_EFFORT_ENABLE_FLAG       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_PERCENT_COMP_ENABLE_FLAG        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_NEXT_PROGRESS_UPDATE_DATE       IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_action_set_id                   IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_TASK_WEIGHT_BASIS_CODE          IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,X_PROJ_PROGRESS_ATTR_ID           IN OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,P_ALLOW_COLLAB_PROG_ENTRY         IN VARCHAR2 := 'N'
 ,P_ALLW_PHY_PRCNT_CMP_OVERRIDES    IN VARCHAR2 := 'N'
 ,P_STRUCTURE_TYPE                  IN VARCHAR2 := 'WORKPLAN'
 ,x_return_status             OUT       NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count         OUT       NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                OUT         NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS

   l_api_name                      CONSTANT VARCHAR(30) := 'CREATE_PROJ_PROG_ATTR';
   l_api_version                   CONSTANT NUMBER      := 1.0;

   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_data                          VARCHAR2(250);
   l_msg_index_out                 NUMBER;
   l_error_msg_code                VARCHAR2(250);

       l_PROGRESS_CYCLE_ID         NUMBER := null;
       l_WQ_ENABLE_FLAG            VARCHAR2(1) := null;
       l_REMAIN_EFFORT_ENABLE_FLAG VARCHAR2(1) := null;
       l_PERCENT_COMP_ENABLE_FLAG  VARCHAR2(1) := null;
       l_NEXT_PROGRESS_UPDATE_DATE DATE := null;

   --bug 3010538
   l_TASK_WEIGHT_BASIS_CODE         VARCHAR2(30);
   --end bug 3010538

BEGIN

    IF g1_debug_mode  = 'Y' THEN
       pa_debug.init_err_stack ('PA_PROGRESS_PUB.CREATE_PROJ_PROG_ATTR');
    END IF;

    IF (p_debug_mode = 'Y') THEN
      IF g1_debug_mode  = 'Y' THEN
         pa_debug.debug('PA_PROGRESS_PUB.CREATE_PROJ_PROG_ATTR');
      END IF;
    END IF;

    IF (p_commit = FND_API.G_TRUE) THEN
      savepoint CREATE_PROJ_PROG_ATTR;
    END IF;

    IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

    IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
      FND_MSG_PUB.initialize;
    END IF;

    IF P_PROGRESS_CYCLE_ID = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN
       l_PROGRESS_CYCLE_ID := null;
    ELSE
       l_PROGRESS_CYCLE_ID := P_PROGRESS_CYCLE_ID;
    END IF;

    IF p_WQ_ENABLE_FLAG = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_WQ_ENABLE_FLAG := 'N';
    ELSE
       l_WQ_ENABLE_FLAG := p_WQ_ENABLE_FLAG;
    END IF;

    IF p_REMAIN_EFFORT_ENABLE_FLAG = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_REMAIN_EFFORT_ENABLE_FLAG := 'N';
    ELSE
       l_REMAIN_EFFORT_ENABLE_FLAG := p_REMAIN_EFFORT_ENABLE_FLAG;
    END IF;

    IF p_PERCENT_COMP_ENABLE_FLAG = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_PERCENT_COMP_ENABLE_FLAG := 'N';
    ELSE
       l_PERCENT_COMP_ENABLE_FLAG := p_PERCENT_COMP_ENABLE_FLAG;
    END IF;

    IF p_NEXT_PROGRESS_UPDATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
    THEN
       l_NEXT_PROGRESS_UPDATE_DATE := null;
    ELSE
       l_NEXT_PROGRESS_UPDATE_DATE := p_NEXT_PROGRESS_UPDATE_DATE;
    END IF;

    --bug 3010538
    IF p_TASK_WEIGHT_BASIS_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_task_weight_basis_code := 'DURATION';
    ELSE
       l_task_weight_basis_code := p_TASK_WEIGHT_BASIS_CODE;
    END IF;
    --end bug 3010538

    PA_PROJ_PROGRESS_ATTR_PKG.INSERT_ROW(
           X_PROJ_PROGRESS_ATTR_ID           => X_PROJ_PROGRESS_ATTR_ID
          ,x_project_id                      => p_project_id
          ,X_OBJECT_TYPE                     => P_OBJECT_TYPE
          ,X_OBJECT_ID                       => P_OBJECT_ID
          ,X_LAST_UPDATE_DATE                => SYSDATE
          ,X_LAST_UPDATED_BY                 => FND_GLOBAL.user_id
          ,X_CREATION_DATE                   => SYSDATE
          ,X_CREATED_BY                      => FND_GLOBAL.user_id
          ,X_LAST_UPDATE_LOGIN               => FND_GLOBAL.login_id
          ,X_PROGRESS_CYCLE_ID               => l_PROGRESS_CYCLE_ID
          ,X_WQ_ENABLE_FLAG                  => l_WQ_ENABLE_FLAG
          ,X_REMAIN_EFFORT_ENABLE_FLAG       => l_REMAIN_EFFORT_ENABLE_FLAG
          ,X_PERCENT_COMP_ENABLE_FLAG        => l_PERCENT_COMP_ENABLE_FLAG
          ,X_NEXT_PROGRESS_UPDATE_DATE       => l_NEXT_PROGRESS_UPDATE_DATE
          ,X_TASK_WEIGHT_BASIS_CODE          => l_TASK_WEIGHT_BASIS_CODE
          ,X_ALLOW_COLLAB_PROG_ENTRY         => P_ALLOW_COLLAB_PROG_ENTRY
          ,X_ALLW_PHY_PRCNT_CMP_OVERRIDES    => P_ALLW_PHY_PRCNT_CMP_OVERRIDES
          ,X_STRUCTURE_TYPE                  => P_STRUCTURE_TYPE
        );

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    IF (p_commit = FND_API.G_TRUE) THEN
      COMMIT;
    END IF;

    IF (p_debug_mode = 'Y') THEN
      IF g1_debug_mode  = 'Y' THEN
         pa_debug.debug('PA_PROGRESS_PUB.CREATE_PROJ_PROG_ATTR END');
      END IF;
    END IF;

EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to CREATE_PROJ_PROG_ATTR;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to CREATE_PROJ_PROG_ATTR;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'CREATE_PROJ_PROG_ATTR',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to CREATE_PROJ_PROG_ATTR;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'CREATE_PROJ_PROG_ATTR',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END CREATE_PROJ_PROG_ATTR;


PROCEDURE UPDATE_PROJ_PROG_ATTR(
  p_api_version       IN        NUMBER  :=1.0
 ,p_init_msg_list             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                  IN  VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level    IN      NUMBER  :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module            IN        VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode        IN        VARCHAR2        :='N'
 ,p_max_msg_count             IN        NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                      IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_OBJECT_TYPE                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_OBJECT_ID                       IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_PROGRESS_CYCLE_ID               IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_WQ_ENABLE_FLAG                  IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_REMAIN_EFFORT_ENABLE_FLAG       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_PERCENT_COMP_ENABLE_FLAG        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_NEXT_PROGRESS_UPDATE_DATE       IN DATE     := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_action_set_id                   IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_TASK_WEIGHT_BASIS_CODE          IN VARCHAR2  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_PROJ_PROGRESS_ATTR_ID           IN NUMBER
 ,p_record_version_number           IN NUMBER
 ,p_allow_collab_prog_entry      IN     VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_allw_phy_prcnt_cmp_overrides IN     VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_structure_type               IN     VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,x_return_status             OUT       NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count         OUT       NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                OUT         NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS

   l_api_name                      CONSTANT VARCHAR(30) := 'CREATE_PROJ_PROG_ATTR';
   l_api_version                   CONSTANT NUMBER      := 1.0;

   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_data                          VARCHAR2(250);
   l_msg_index_out                 NUMBER;
   l_error_msg_code                VARCHAR2(250);

       l_PROGRESS_CYCLE_ID         NUMBER := null;
       l_WQ_ENABLE_FLAG            VARCHAR2(1) := null;
       l_REMAIN_EFFORT_ENABLE_FLAG VARCHAR2(1) := null;
       l_PERCENT_COMP_ENABLE_FLAG  VARCHAR2(1) := null;
       l_NEXT_PROGRESS_UPDATE_DATE DATE := null;

       l_old_enable_wq_flag            VARCHAR2(1) := null;
       l_old_REMAIN_EFF_ENABLE_FLAG VARCHAR2(1) := null;
       l_old_PERCENT_COMP_ENABLE_FLAG  VARCHAR2(1) := null;

   --bug 3010538
   l_TASK_WEIGHT_BASIS_CODE         VARCHAR2(30);

   CURSOR cur_task_weight_bas_code IS
     select task_weight_basis_code
       from pa_proj_progress_attr
      where proj_progress_attr_id = p_proj_progress_attr_id;
   l_old_tk_wght_basis_code         VARCHAR2(30);
   l_updt_struc_ver_id              NUMBER;

   --cursor to get structure version id of all non-published version
   CURSOR cur_get_wk_ver_struct_id IS
     select str.element_version_id
       from pa_proj_elem_ver_structure str,
            pa_proj_elements pe,
            pa_proj_structure_types pst
      where pe.project_id = p_project_id
        and pe.project_id = str.project_id
        and pe.proj_element_id = str.proj_element_id
        and str.status_code <> 'STRUCTURE_PUBLISHED'
        and pe.proj_element_id = pst.proj_element_id
        and pst.structure_type_id = 1;

   CURSOR cur_get_proj_temp_flag IS
     select template_flag from pa_projects_all where project_id = p_project_id;
   l_template_flag VARCHAR2(1);

   --cursor to get only structure version id (when version disabled)
   CURSOR cur_get_only_ver_struct_id IS
     select str.element_version_id
       from pa_proj_elem_ver_structure str,
            pa_proj_elements pe,
            pa_proj_structure_types pst
      where pe.project_id = p_project_id
        and pe.project_id = str.project_id
        and pe.proj_element_id = str.proj_element_id
        and pe.proj_element_id = pst.proj_element_id
        and pst.structure_type_id = 1;
   --end bug 3010538

  CURSOR cur_prg_attr
  IS
    SELECT WQ_ENABLE_FLAG, REMAIN_EFFORT_ENABLE_FLAG,
           PERCENT_COMP_ENABLE_FLAG
      FROM PA_PROJ_PROGRESS_ATTR
      WHERE PROJ_PROGRESS_ATTR_ID = p_PROJ_PROGRESS_ATTR_ID;

-- Bug # 4576303.
cursor cur_tasks_exist (c_str_ver_id NUMBER) is
select 'Y'
from pa_proj_element_versions ppev
where ppev.parent_structure_version_id = c_str_ver_id
and ppev.object_type = 'PA_TASKS';

l_tasks_exist VARCHAR2(1) := null;
-- Bug # 4576303.
BEGIN

    IF g1_debug_mode  = 'Y' THEN
       pa_debug.init_err_stack ('PA_PROGRESS_PUB.UPDATE_PROJ_PROG_ATTR');
    END IF;

    IF (p_debug_mode = 'Y') THEN
      IF g1_debug_mode  = 'Y' THEN
         pa_debug.debug('PA_PROGRESS_PUB.UPDATE_PROJ_PROG_ATTR');
      END IF;
    END IF;

    IF (p_commit = FND_API.G_TRUE) THEN
      savepoint UPDATE_PROJ_PROG_ATTR;
    END IF;

    IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

    IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
      FND_MSG_PUB.initialize;
    END IF;

/*    IF P_PROGRESS_CYCLE_ID = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN
       l_PROGRESS_CYCLE_ID := null;
    ELSE
       l_PROGRESS_CYCLE_ID := P_PROGRESS_CYCLE_ID;
    END IF;

    IF p_WQ_ENABLE_FLAG = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_WQ_ENABLE_FLAG := null;
    ELSE
       l_WQ_ENABLE_FLAG := p_WQ_ENABLE_FLAG;
    END IF;

    IF p_REMAIN_EFFORT_ENABLE_FLAG = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_REMAIN_EFFORT_ENABLE_FLAG := null;
    ELSE
       l_REMAIN_EFFORT_ENABLE_FLAG := p_REMAIN_EFFORT_ENABLE_FLAG;
    END IF;

    IF p_PERCENT_COMP_ENABLE_FLAG = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_PERCENT_COMP_ENABLE_FLAG := null;
    ELSE
       l_PERCENT_COMP_ENABLE_FLAG := p_PERCENT_COMP_ENABLE_FLAG;
    END IF;

    IF p_NEXT_PROGRESS_UPDATE_DATE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
    THEN
       l_NEXT_PROGRESS_UPDATE_DATE := null;
    ELSE
       l_NEXT_PROGRESS_UPDATE_DATE := p_NEXT_PROGRESS_UPDATE_DATE;
    END IF;
*/

/* Start commenting out as per Majid's email : 07-APR-2004.

    IF PA_PROGRESS_UTILS.PROJ_TASK_PROG_EXISTS( p_project_id, 0 ) = 'Y'
    THEN
        OPEN cur_prg_attr;
        FETCH cur_prg_attr INTO l_old_enable_wq_flag,
                                l_old_REMAIN_EFF_ENABLE_FLAG ,
                                l_old_PERCENT_COMP_ENABLE_FLAG;
        CLOSE cur_prg_attr;

        IF p_PERCENT_COMP_ENABLE_FLAG = 'N' AND
           l_old_PERCENT_COMP_ENABLE_FLAG = 'Y'
        THEN
            PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                 p_msg_name       => 'PA_TP_CANT_DIS_PC');
            x_msg_data := 'PA_TP_CANT_DIS_PC';
            x_return_status := 'E';
            RAISE  FND_API.G_EXC_ERROR;
        END IF;

       IF p_WQ_ENABLE_FLAG = 'N' AND
           l_old_enable_wq_flag = 'Y'
        THEN
            PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                 p_msg_name       => 'PA_TP_CANT_DIS_WQ');
            x_msg_data := 'PA_TP_CANT_DIS_WQ';
            x_return_status := 'E';
            RAISE  FND_API.G_EXC_ERROR;
        END IF;

       IF p_REMAIN_EFFORT_ENABLE_FLAG = 'N' AND
           l_old_REMAIN_EFF_ENABLE_FLAG = 'Y'
        THEN
            PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                 p_msg_name       => 'PA_TP_CANT_DIS_REM_EFF');
            x_msg_data := 'PA_TP_CANT_DIS_REM_EFF';
            x_return_status := 'E';
            RAISE  FND_API.G_EXC_ERROR;
        END IF;

    END IF;

   End commentng out as per Majid's email : 07-APR-2004. */

    --bug 3010538
    OPEN cur_task_weight_bas_code;
    FETCH cur_task_weight_bas_code into l_old_tk_wght_basis_code;
    CLOSE cur_task_weight_bas_code;
    IF p_TASK_WEIGHT_BASIS_CODE = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       --no value passed; same as old value
       l_task_weight_basis_code := l_old_tk_wght_basis_code;
    ELSE
--------------dbms_output.put_line('value passed '||p_task_weight_basis_code||','||l_old_tk_wght_basis_code);
       --value passed; check if different
       IF (p_task_weight_basis_code <> l_old_tk_wght_basis_code)
          AND p_structure_type = 'WORKPLAN'
       THEN
--------------dbms_output.put_line('old <> new');
         --different; check if changing to DURATION or EFFORT
         IF (p_task_weight_basis_code = 'DURATION')
	    -- OR  -- Bug # 4576303.
            -- (p_task_weight_basis_code = 'EFFORT')  -- Bug # 4576303.
	 THEN
           --basis change; set update flag to Y
--------------dbms_output.put_line('basis is duration or effort');
           OPEN cur_get_proj_temp_flag;
           FETCH cur_get_proj_temp_flag into l_template_flag;
           CLOSE cur_get_proj_temp_flag;
           IF ('Y'=PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(p_project_id) AND (l_template_flag = 'N')) THEN
--------------dbms_output.put_line('versioning enabled');
             --get all working version for project
             OPEN cur_get_wk_ver_struct_id;
             LOOP
--------------dbms_output.put_line('in loop '||p_project_id);
               FETCH cur_get_wk_ver_struct_id Into l_updt_struc_ver_id;
               EXIT when cur_get_wk_ver_struct_id%NOTFOUND;
               --call API to update flag
               -- Bug # 4576303.
               open cur_tasks_exist (l_updt_struc_ver_id);
               fetch cur_tasks_exist into l_tasks_exist;
               close cur_tasks_exist;
               if (nvl(l_tasks_exist, 'N') = 'Y') then
--------------dbms_output.put_line('update '||l_updt_struc_ver_id);
              		 PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG(
                               p_project_id => p_project_id,
                               p_structure_version_id => l_updt_struc_ver_id,
                               p_update_wbs_flag => 'Y',
                               x_return_status => l_return_status,
                               x_msg_count => l_msg_count,
                               x_msg_data => l_msg_data
                               );
              end if;
              -- Bug # 4576303.
--------------dbms_output.put_line('ret stat = '||l_return_status);
               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                      p_msg_name       => l_msg_data
                                     );
                 x_msg_data := l_msg_data;
                 x_return_status := 'E';
                 CLOSE cur_get_wk_ver_struct_id;
                 RAISE  FND_API.G_EXC_ERROR;
               END IF;
             END LOOP;
             CLOSE cur_get_wk_ver_struct_id;
           ELSE
--------------dbms_output.put_line('versioning disabled');
             --get only version, project or template
             OPEN cur_get_only_ver_struct_id;
             FETCH cur_get_only_ver_struct_id Into l_updt_struc_ver_id;
--------------dbms_output.put_line('update '||l_updt_struc_ver_id);
             CLOSE cur_get_only_ver_struct_id;
             -- Bug # 4576303.
             open cur_tasks_exist (l_updt_struc_ver_id);
             fetch cur_tasks_exist into l_tasks_exist;
             close cur_tasks_exist;
             if (nvl(l_tasks_exist, 'N') = 'Y') then
             --call API to update flag
             		PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG(
                               p_project_id => p_project_id,
                               p_structure_version_id => l_updt_struc_ver_id,
                               p_update_wbs_flag => 'Y',
                               x_return_status => l_return_status,
                               x_msg_count => l_msg_count,
                               x_msg_data => l_msg_data
                               );
              end if;
              -- Bug # 4576303.
--------------dbms_output.put_line('ret stat = '||l_return_status);
             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                    p_msg_name       => l_msg_data
                                   );
               x_msg_data := l_msg_data;
               x_return_status := 'E';
               RAISE  FND_API.G_EXC_ERROR;
             END IF;
           END IF;
         ELSE
           --3035902: process update flag changes; added check for
           --sharing disabled
           --set update flag to N when changing to MANUAL and
           --if this is split structure; otherwise no change
           IF ('Y'=PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(p_project_id) AND (l_template_flag = 'N') AND (PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(p_project_id) = 'N')) THEN
             --versioning enabled
             OPEN cur_get_wk_ver_struct_id;
             LOOP
--------------dbms_output.put_line('in loop '||p_project_id);
               FETCH cur_get_wk_ver_struct_id Into l_updt_struc_ver_id;
               EXIT when cur_get_wk_ver_struct_id%NOTFOUND;
               --call API to update flag
--------------dbms_output.put_line('update '||l_updt_struc_ver_id);
               PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG(
                               p_project_id => p_project_id,
                               p_structure_version_id => l_updt_struc_ver_id,
                               p_update_wbs_flag => 'N',
                               x_return_status => l_return_status,
                               x_msg_count => l_msg_count,
                               x_msg_data => l_msg_data
                               );
--------------dbms_output.put_line('ret stat = '||l_return_status);
               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                      p_msg_name       => l_msg_data
                                     );
                 x_msg_data := l_msg_data;
                 x_return_status := 'E';
                 CLOSE cur_get_wk_ver_struct_id;
                 RAISE  FND_API.G_EXC_ERROR;
               END IF;
             END LOOP;
             CLOSE cur_get_wk_ver_struct_id;
           ELSE
             -- Added if clause for bug#3066833
             IF PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(p_project_id) = 'N' THEN
                     --get only version, project or template
                     OPEN cur_get_only_ver_struct_id;
                     FETCH cur_get_only_ver_struct_id Into l_updt_struc_ver_id;
        --------------dbms_output.put_line('update '||l_updt_struc_ver_id);
                     CLOSE cur_get_only_ver_struct_id;
                     --call API to update flag
                     PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG(
                                       p_project_id => p_project_id,
                                       p_structure_version_id => l_updt_struc_ver_id,
                                       p_update_wbs_flag => 'N',
                                       x_return_status => l_return_status,
                                       x_msg_count => l_msg_count,
                                       x_msg_data => l_msg_data
                                       );
        --------------dbms_output.put_line('ret stat = '||l_return_status);
                     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                       PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                            p_msg_name       => l_msg_data
                                           );
                       x_msg_data := l_msg_data;
                       x_return_status := 'E';
                       RAISE  FND_API.G_EXC_ERROR;
                     END IF;
            END IF ;
           END IF;
         END IF;
       END IF;
       l_task_weight_basis_code := p_TASK_WEIGHT_BASIS_CODE;
    END IF;
    --end bug 3010538

    PA_PROJ_PROGRESS_ATTR_PKG.UPDATE_ROW(
           X_PROJ_PROGRESS_ATTR_ID           => P_PROJ_PROGRESS_ATTR_ID
          ,X_project_id                      => p_project_id
          ,X_OBJECT_TYPE                     => p_OBJECT_TYPE
          ,X_OBJECT_ID                       => p_OBJECT_ID
          ,X_LAST_UPDATE_DATE                => SYSDATE
          ,X_LAST_UPDATED_BY                 => FND_GLOBAL.user_id
          ,X_LAST_UPDATE_LOGIN               => FND_GLOBAL.login_id
          ,X_PROGRESS_CYCLE_ID               => p_PROGRESS_CYCLE_ID
          ,X_WQ_ENABLE_FLAG                  => p_WQ_ENABLE_FLAG
          ,X_REMAIN_EFFORT_ENABLE_FLAG       => p_REMAIN_EFFORT_ENABLE_FLAG
          ,X_PERCENT_COMP_ENABLE_FLAG        => p_PERCENT_COMP_ENABLE_FLAG
          ,X_NEXT_PROGRESS_UPDATE_DATE       => p_NEXT_PROGRESS_UPDATE_DATE
          ,X_record_version_number           => p_record_version_number
          ,X_TASK_WEIGHT_BASIS_CODE          => l_task_weight_basis_code
          ,X_ALLOW_COLLAB_PROG_ENTRY         => p_allow_collab_prog_entry
          ,X_ALLW_PHY_PRCNT_CMP_OVERRIDES    => p_allw_phy_prcnt_cmp_overrides
          ,X_STRUCTURE_TYPE                  => p_structure_type
        );

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    IF (p_commit = FND_API.G_TRUE) THEN
      COMMIT;
    END IF;

    IF (p_debug_mode = 'Y') THEN
      IF g1_debug_mode  = 'Y' THEN
         pa_debug.debug('PA_PROGRESS_PUB.UPDATE_PROJ_PROG_ATTR END');
      END IF;
    END IF;

EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_PROJ_PROG_ATTR;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_PROJ_PROG_ATTR;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_PROJ_PROG_ATTR',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_PROJ_PROG_ATTR;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_PROJ_PROG_ATTR',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END UPDATE_PROJ_PROG_ATTR;

PROCEDURE DELETE_PROJ_PROG_ATTR(
  p_api_version       IN        NUMBER  :=1.0
 ,p_init_msg_list             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                  IN  VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level    IN      NUMBER  :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module            IN        VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode        IN        VARCHAR2        :='N'
 ,p_max_msg_count             IN        NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                      IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_OBJECT_TYPE                     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_OBJECT_ID                       IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_structure_type                  IN VARCHAR2 := 'WORKPLAN' -- Amit
 ,x_return_status             OUT       NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count         OUT       NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                OUT         NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS

   l_api_name                      CONSTANT VARCHAR(30) := 'DELETE_PROJ_PROG_ATTR';
   l_api_version                   CONSTANT NUMBER      := 1.0;

   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_data                          VARCHAR2(250);
   l_msg_index_out                 NUMBER;
   l_error_msg_code                VARCHAR2(250);

   CURSOR cur_ppp
   IS
     SELECT rowid
       FROM pa_proj_progress_attr
      WHERE project_id = p_project_id
        AND object_type = p_object_type
        AND object_id = p_object_id
        AND structure_type = p_structure_type; -- Amit

   l_ppp_row_id     VARCHAR2(18);

BEGIN

    IF g1_debug_mode  = 'Y' THEN
       pa_debug.init_err_stack ('PA_PROGRESS_PUB.DELETE_PROJ_PROG_ATTR');
    END IF;

    IF (p_debug_mode = 'Y') THEN
      IF g1_debug_mode  = 'Y' THEN
         pa_debug.debug('PA_PROGRESS_PUB.DELETE_PROJ_PROG_ATTR');
      END IF;
    END IF;

    IF (p_commit = FND_API.G_TRUE) THEN
      savepoint DELETE_PROJ_PROG_ATTR; --Amit
    END IF;

    IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

    IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
      FND_MSG_PUB.initialize;
    END IF;

    OPEN cur_ppp;
    FETCH cur_ppp INTO l_ppp_row_id;
    CLOSE cur_ppp;

    PA_PROJ_PROGRESS_ATTR_PKG.DELETE_ROW( l_ppp_row_id
        );

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    IF (p_commit = FND_API.G_TRUE) THEN
      COMMIT;
    END IF;

    IF (p_debug_mode = 'Y') THEN
      IF g1_debug_mode  = 'Y' THEN
         pa_debug.debug('PA_PROGRESS_PUB.DELETE_PROJ_PROG_ATTR END');
      END IF;
    END IF;

EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to DELETE_PROJ_PROG_ATTR;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to DELETE_PROJ_PROG_ATTR;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'DELETE_PROJ_PROG_ATTR',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to DELETE_PROJ_PROG_ATTR;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'DELETE_PROJ_PROG_ATTR',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END DELETE_PROJ_PROG_ATTR;

PROCEDURE delete_progress_record(
  p_api_version       IN        NUMBER  :=1.0
 ,p_init_msg_list             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                  IN  VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level    IN      NUMBER  :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module            IN        VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode        IN        VARCHAR2        :='N'
 ,p_max_msg_count             IN        NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_structure_version_id         IN    NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_task_version_id              IN    NUMBER      := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,x_return_status             OUT       NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count         OUT       NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                OUT         NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS

   l_api_name                      CONSTANT VARCHAR(30) := 'CREATE_PROJ_PROG_ATTR';
   l_api_version                   CONSTANT NUMBER      := 1.0;

   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_data                          VARCHAR2(250);
   l_msg_index_out                 NUMBER;
   l_error_msg_code                VARCHAR2(250);

   CURSOR cur_pa_ppc_str( c_project_id NUMBER, c_proj_element_id NUMBER )
   IS
     SELECT rowid
       FROM pa_percent_completes
      WHERE object_version_id = p_structure_version_id
        AND object_id = c_proj_element_id
        AND project_id = c_project_id
        AND object_type = 'PA_STRUCTURES';

   CURSOR cur_pa_ppr_str( c_project_id NUMBER, c_proj_element_id NUMBER )
   IS
     SELECT rowid
       FROM pa_progress_rollup
      WHERE object_version_id = p_structure_version_id
        AND object_id = c_proj_element_id
        AND project_id = c_project_id
        AND object_type = 'PA_STRUCTURES';

   CURSOR cur_pa_ppc_tsk( c_project_id NUMBER, c_proj_element_id NUMBER )
   IS
     SELECT rowid
       FROM pa_percent_completes
      WHERE object_version_id = p_task_version_id
        AND object_id = c_proj_element_id
        AND project_id = c_project_id
        AND object_type = 'PA_TASKS';

   CURSOR cur_pa_ppr_tsk ( c_project_id NUMBER, c_proj_element_id NUMBER )
   IS
     SELECT rowid
       FROM pa_progress_rollup
      WHERE object_version_id = p_task_version_id
        AND object_id = c_proj_element_id
        AND project_id = c_project_id
        AND object_type = 'PA_TASKS';

   CURSOR cur_ppevs( c_element_version_id NUMBER )
   IS
     SELECT project_id, proj_element_id
       FROM pa_proj_element_versions
      WHERE element_version_id = c_element_version_id
     ;

  l_rollup_row_id  VARCHAR2(18);
  l_ppc_row_id     VARCHAR2(18);
  l_proj_element_id  NUMBER;
  l_project_id  NUMBER;
BEGIN

    IF g1_debug_mode  = 'Y' THEN
       pa_debug.init_err_stack ('PA_PROGRESS_PUB.delete_progress_record');
    END IF;

    IF (p_debug_mode = 'Y') THEN
      IF g1_debug_mode  = 'Y' THEN
         pa_debug.debug('PA_PROGRESS_PUB.delete_progress_record');
      END IF;
    END IF;

    IF (p_commit = FND_API.G_TRUE) THEN
      savepoint delete_progress_record;
    END IF;

    IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

    IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
      FND_MSG_PUB.initialize;
    END IF;

    IF p_task_version_id is NULL OR p_task_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN
        OPEN cur_ppevs( p_structure_version_id );
        FETCH cur_ppevs INTO l_project_id, l_proj_element_id;
        CLOSE cur_ppevs;

        OPEN cur_pa_ppc_str( l_project_id, l_proj_element_id );
        FETCH cur_pa_ppc_str INTO l_ppc_row_id;
        CLOSE cur_pa_ppc_str;

        OPEN cur_pa_ppr_str( l_project_id, l_proj_element_id );
        FETCH cur_pa_ppr_str INTO l_rollup_row_id;
        CLOSE cur_pa_ppr_str;
    ELSIF p_structure_version_id IS NOT NULL AND p_structure_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM AND
          p_task_version_id IS NOT NULL AND p_task_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN

        OPEN cur_ppevs( p_task_version_id );
        FETCH cur_ppevs INTO l_project_id, l_proj_element_id;
        CLOSE cur_ppevs;

        OPEN cur_pa_ppc_tsk( l_project_id, l_proj_element_id );
        FETCH cur_pa_ppc_tsk INTO l_ppc_row_id;
        CLOSE cur_pa_ppc_tsk;

        OPEN cur_pa_ppr_tsk( l_project_id, l_proj_element_id );
        FETCH cur_pa_ppr_tsk INTO l_rollup_row_id;
        CLOSE cur_pa_ppr_tsk;
    END IF;

    PA_PERCENT_COMPLETES_PKG.DELETE_ROW( l_ppc_row_id );
    PA_PROGRESS_ROLLUP_PKG.DELETE_ROW( l_rollup_row_id );

EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to delete_progress_record;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to delete_progress_record;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'delete_progress_record',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to delete_progress_record;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'delete_progress_record',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END delete_progress_record;


PROCEDURE push_down_task_status(
  p_api_version       IN        NUMBER  :=1.0
 ,p_init_msg_list             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                  IN  VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only             IN        VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level    IN      NUMBER  :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module            IN        VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode        IN        VARCHAR2        :='N'
 ,p_max_msg_count             IN        NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_task_status         IN    VARCHAR2
 ,p_project_id                IN NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_id         IN NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_version_id    IN NUMBER := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_type       IN Varchar2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_as_of_date          IN DATE   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_actual_finish_date  IN DATE := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_structure_type      IN VARCHAR2 := 'WORKPLAN'
 ,x_return_status             OUT       NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count         OUT       NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                OUT         NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS

   l_api_name                      CONSTANT VARCHAR(30) := 'push_down_task_status';
   l_api_version                   CONSTANT NUMBER      := 1.0;

   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_data                          VARCHAR2(250);
   l_msg_index_out                 NUMBER;
   l_error_msg_code                VARCHAR2(250);
   l_structure_version_id      NUMBER;

-- 3922325 : Added pa_proj_elem_ver_schedule join to get scheduled_start_date
-- 4743866, modified the cursor below as join with ppc is not required in most of the cases
   CURSOR cur_tasks
   IS
     SELECT pobj.object_id_to1, ppev1.proj_element_id,
            sch.scheduled_start_date
       FROM
     ( SELECT object_id_from1, object_id_to1
       FROM pa_object_relationships
       START WITH object_id_from1 = p_object_version_id
       and relationship_type = 'S'
       CONNECT BY object_id_from1 = PRIOR  object_id_to1
       and relationship_type = 'S'
       UNION -- Bug 3878024 : Added Union
       SELECT to_number(null) object_id_from1, p_object_version_id object_id_to1
       FROM DUAL
       ) pobj,
                                 pa_proj_element_versions ppev1,
                                 pa_proj_elem_ver_schedule sch
     WHERE pobj.object_id_to1 = ppev1.element_version_id
       AND ppev1.element_version_id = sch.element_version_id;

  ---4743866, added following cursor on ppc to get required info
    cursor get_task_pc_info(l_obj_id  number) is
     select completed_percentage, published_flag, current_flag,
            actual_start_date, actual_finish_date
      from
            pa_percent_completes ppc
     WHERE ppc.object_id = l_obj_id
       AND ppc.object_type = 'PA_TASKS'
       AND ppc.structure_type = 'WORKPLAN' -- FPM Dev CR 3
       AND ppc.project_id = p_project_id
       AND ((ppc.current_flag = 'N' AND ppc.published_flag = 'N') OR
           (ppc.current_flag = 'Y' AND ppc.published_flag = 'Y'))
       ;
     get_task_pc_info_rec   get_task_pc_info%rowtype;  ---4743866

   -- 3922325 : Added assignment_start_date
   -- Bug 3878024 Begin
   -- 4871809 removed union and added outer join to ppr
   CURSOR cur_task_assignments(c_task_version_id NUMBER, c_task_id NUMBER)
   IS
       SELECT ptav.resource_class_code, ptav.RESOURCE_ALIAS, ptav.resource_list_member_id, ptav.rate_based_flag, ptav.rbs_element_id
       , ptav.task_id proj_element_id, ptav.task_version_id, ptav.planned_quantity, ptav.planned_bur_cost_txn_cur
       , ptav.planned_bur_cost_projfunc, ptav.planned_bur_cost_proj_cur, ptav.planned_raw_cost_txn_cur
       , ptav.planned_raw_cost_proj_cur , ptav.planned_raw_cost_projfunc, ptav.txn_currency_code
       , ppr.current_flag, ppr.estimated_remaining_effort, ppr.PPL_ETC_COST_TC, ppr.PPL_ETC_COST_PC
       , ppr.PPL_ETC_COST_FC, ppr.PPL_ETC_RAWCOST_TC, ppr.PPL_ETC_RAWCOST_PC, ppr.PPL_ETC_RAWCOST_FC
       , ppr.PPL_ACT_EFFORT_TO_DATE, ppr.PPL_ACT_COST_TO_DATE_TC, ppr.PPL_ACT_COST_TO_DATE_PC, ppr.PPL_ACT_COST_TO_DATE_FC
       , ppr.PPL_ACT_RAWCOST_TO_DATE_TC, ppr.PPL_ACT_RAWCOST_TO_DATE_PC, ppr.PPL_ACT_RAWCOST_TO_DATE_FC
       , ppr.EQPMT_ETC_EFFORT, ppr.EQPMT_ETC_COST_TC, ppr.EQPMT_ETC_COST_PC, ppr.EQPMT_ETC_COST_FC
       , ppr.EQPMT_ETC_RAWCOST_TC, ppr.EQPMT_ETC_RAWCOST_PC, ppr.EQPMT_ETC_RAWCOST_FC
       , ppr.EQPMT_ACT_EFFORT_TO_DATE, ppr.EQPMT_ACT_COST_TO_DATE_TC, ppr.EQPMT_ACT_COST_TO_DATE_PC
       , ppr.EQPMT_ACT_COST_TO_DATE_FC, ppr.EQPMT_ACT_RAWCOST_TO_DATE_TC, ppr.EQPMT_ACT_RAWCOST_TO_DATE_PC
       , ppr.EQPMT_ACT_RAWCOST_TO_DATE_FC, ppr.OTH_ETC_QUANTITY, ppr.OTH_ETC_COST_TC, ppr.OTH_ETC_COST_PC, ppr.OTH_ETC_COST_FC
       , ppr.OTH_ETC_RAWCOST_TC, ppr.OTH_ETC_RAWCOST_PC, ppr.OTH_ETC_RAWCOST_FC, ppr.OTH_QUANTITY_TO_DATE
       , ppr.OTH_ACT_COST_TO_DATE_TC, ppr.OTH_ACT_COST_TO_DATE_PC, ppr.OTH_ACT_COST_TO_DATE_FC
       , ppr.OTH_ACT_RAWCOST_TO_DATE_TC, ppr.OTH_ACT_RAWCOST_TO_DATE_PC, ppr.OTH_ACT_RAWCOST_TO_DATE_FC
       , ppr.as_of_date
       , ptav.assignment_start_date
       FROM pa_task_asgmts_V ptav
          , pa_progress_rollup ppr
       WHERE ptav.task_version_id = c_task_version_id
--     AND ptav.structure_version_id = l_structure_version_id
       AND ptav.task_id = c_task_id
       AND ptav.project_id = p_project_id
       AND ptav.ta_display_flag = 'Y'
       AND ppr.object_id(+) = ptav.resource_list_member_id
       AND ppr.object_type(+) = 'PA_ASSIGNMENTS'
       AND ppr.proj_element_id(+) =  c_task_id
       AND ppr.current_flag(+) <> 'N' ---IN  ('Y', 'W')
       AND ppr.project_id(+) = p_project_id
       AND ppr.structure_type(+) = 'WORKPLAN'
       AND ppr.structure_version_id(+) is null
       ;

   l_old_status_code    VARCHAR2(150);
   l_status_code        VARCHAR2(150);
   g1_debug_mode        VARCHAR2(1);
   L_PUSH_AS_OF_DATE    Date;
   l_etc_txn_raw_cost_this_period      NUMBER                                        ;
   l_etc_prj_raw_cost_this_period      NUMBER                                        ;
   l_etc_pfc_raw_cost_this_period      NUMBER                                        ;
   l_etc_txn_bur_cost_this_period      NUMBER                                        ;
   l_etc_prj_bur_cost_this_period      NUMBER                                        ;
   l_etc_pfc_bur_cost_this_period      NUMBER                                        ;
   l_etc_effort_incr               NUMBER                                       ;
    l_etc_txn_raw_cost_last        NUMBER;
    l_etc_prj_raw_cost_last        NUMBER;
    l_etc_pfc_raw_cost_last        NUMBER;
    l_etc_txn_bur_cost_last        NUMBER;
    l_etc_prj_bur_cost_last        NUMBER;
    l_etc_pfc_bur_cost_last        NUMBER;
    L_ETC_EFFORT_LAST          NUMBER;
    l_msg_code             VARCHAR2(30);
    L_BASE_STRUCT_VER_ID       NUMBER;
    l_cur_task_old_status_code     VARCHAR2(150);
    L_LOWEST_LEVEL_TASK        VARCHAR2(1);
    L_ASSIGNMENT_EXISTS        VARCHAR2(1);

    l_percent_complete      NUMBER;
    l_percent_complete_id   NUMBER;

   -- 4490532 For Hidden assignment Progress record, now we should not be reading the
   -- Tasks progress record, instead ot shd be Assignments
   -- Because tasks Progress record store Cumulative amounts from subproject too
   -- 4871809 removed union and added outer join to ppr
   CURSOR cur_system_assignment(c_task_version_id NUMBER, c_task_id NUMBER)
   IS
       SELECT ptav.resource_class_code, ptav.RESOURCE_ALIAS, ptav.resource_list_member_id, ptav.rate_based_flag, ptav.rbs_element_id
       , ptav.task_id proj_element_id, ptav.task_version_id, ptav.planned_quantity, ptav.planned_bur_cost_txn_cur
       , ptav.planned_bur_cost_projfunc, ptav.planned_bur_cost_proj_cur, ptav.planned_raw_cost_txn_cur
       , ptav.planned_raw_cost_proj_cur , ptav.planned_raw_cost_projfunc, ptav.txn_currency_code
       , ppr.current_flag, ppr.estimated_remaining_effort, ppr.PPL_ETC_COST_TC, ppr.PPL_ETC_COST_PC
       , ppr.PPL_ETC_COST_FC, ppr.PPL_ETC_RAWCOST_TC, ppr.PPL_ETC_RAWCOST_PC, ppr.PPL_ETC_RAWCOST_FC
       , ppr.PPL_ACT_EFFORT_TO_DATE, ppr.PPL_ACT_COST_TO_DATE_TC, ppr.PPL_ACT_COST_TO_DATE_PC, ppr.PPL_ACT_COST_TO_DATE_FC
       , ppr.PPL_ACT_RAWCOST_TO_DATE_TC, ppr.PPL_ACT_RAWCOST_TO_DATE_PC, ppr.PPL_ACT_RAWCOST_TO_DATE_FC
       , ppr.EQPMT_ETC_EFFORT, ppr.EQPMT_ETC_COST_TC, ppr.EQPMT_ETC_COST_PC, ppr.EQPMT_ETC_COST_FC
       , ppr.EQPMT_ETC_RAWCOST_TC, ppr.EQPMT_ETC_RAWCOST_PC, ppr.EQPMT_ETC_RAWCOST_FC
       , ppr.EQPMT_ACT_EFFORT_TO_DATE, ppr.EQPMT_ACT_COST_TO_DATE_TC, ppr.EQPMT_ACT_COST_TO_DATE_PC
       , ppr.EQPMT_ACT_COST_TO_DATE_FC, ppr.EQPMT_ACT_RAWCOST_TO_DATE_TC, ppr.EQPMT_ACT_RAWCOST_TO_DATE_PC
       , ppr.EQPMT_ACT_RAWCOST_TO_DATE_FC, ppr.OTH_ETC_QUANTITY, ppr.OTH_ETC_COST_TC, ppr.OTH_ETC_COST_PC, ppr.OTH_ETC_COST_FC
       , ppr.OTH_ETC_RAWCOST_TC, ppr.OTH_ETC_RAWCOST_PC, ppr.OTH_ETC_RAWCOST_FC, ppr.OTH_QUANTITY_TO_DATE
       , ppr.OTH_ACT_COST_TO_DATE_TC, ppr.OTH_ACT_COST_TO_DATE_PC, ppr.OTH_ACT_COST_TO_DATE_FC
       , ppr.OTH_ACT_RAWCOST_TO_DATE_TC, ppr.OTH_ACT_RAWCOST_TO_DATE_PC, ppr.OTH_ACT_RAWCOST_TO_DATE_FC
       , ppr.as_of_date
       , ptav.assignment_start_date
       FROM pa_task_asgmts_V ptav
          , pa_progress_rollup ppr
       WHERE ptav.task_version_id = c_task_version_id
--       AND ptav.structure_version_id = l_structure_version_id
       AND ptav.task_id = c_task_id
       AND ptav.project_id = p_project_id
       AND ptav.ta_display_flag = 'N'
       -- 4490532AND ppr.object_id = c_task_id
       -- 4490532AND ppr.object_type = 'PA_TASKS'
       AND ppr.object_id(+) = ptav.resource_list_member_id -- 4490532
       AND ppr.object_type(+) = 'PA_ASSIGNMENTS' -- 4490532
       AND ppr.proj_element_id(+) =  c_task_id
       AND ppr.current_flag(+) <> 'N'  ----IN  ('Y', 'W')
       AND ppr.project_id(+) = p_project_id
       AND ppr.structure_type(+) = 'WORKPLAN'
       AND ppr.structure_version_id(+) is null
       ;

       L_PROGRESS_ROLLUP_ID NUMBER;
       L_PROG_PA_PERIOD_NAME    pa_progress_rollup.prog_pa_period_name%TYPE;
       L_PROG_GL_PERIOD_NAME    pa_progress_rollup.prog_gl_period_name%TYPE;
       l_user_id        NUMBER:= fnd_global.user_id;
       l_login_id       NUMBER:= fnd_global.login_id;
   -- Bug 3878024 End

-- Bug 4282618 Begin
CURSOR cur_prog_enabled(c_proj_element_id NUMBER)
IS
   SELECT nvl(ttype.PROG_ENTRY_ENABLE_FLAG, 'N')
     from pa_task_types ttype
     , pa_proj_elements elem
    where elem.project_id = p_project_id
     and elem.proj_element_id = c_proj_element_id
     and elem.object_type = 'PA_TASKS'
     and elem.type_id = ttype.task_type_id;

l_prog_enabled                  VARCHAR2(1);
l_prog_stats_code               VARCHAR2(150);
-- Bug 4282618 End


BEGIN

    g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

    IF g1_debug_mode  = 'Y' THEN
       pa_debug.init_err_stack ('PA_PROGRESS_PUB.push_down_task_status');
    END IF;

   IF g1_debug_mode  = 'Y' THEN
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'p_task_status='||p_task_status, x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'p_system_task_status='||PA_PROGRESS_UTILS.get_system_task_status( p_task_status ), x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'p_object_id='||p_object_id, x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'p_object_version_id='||p_object_version_id, x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'p_object_type='||p_object_type, x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'p_actual_finish_date='||p_actual_finish_date, x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'p_structure_type='||p_structure_type, x_Log_Level=> 3);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_structure_version_id='||l_structure_version_id, x_Log_Level=> 3);
   END IF;

    -- Initialize OUT params : 5209741
    x_return_status := FND_API.G_RET_STS_SUCCESS;
    x_msg_data := NULL ;
    x_msg_count := 0 ;
    -- End : 5209741

    IF (p_commit = FND_API.G_TRUE) THEN
      savepoint push_down_task_status;
    END IF;

    IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

    IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
      FND_MSG_PUB.initialize;
    END IF;

    -- Bug 3878024 : Begin
    BEGIN
    SELECT parent_structure_version_id INTO l_structure_version_id
    FROM pa_proj_element_versions
    WHERE element_version_id = p_object_version_id;
    EXCEPTION
    WHEN OTHERS THEN
           fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'PUSH_DOWN_TASK_STATUS',
                            p_error_text     => 'Unexpected Error : Structure Version Id can not be found. Please contact System Administrator.');

            RAISE FND_API.G_EXC_UNEXPECTED_ERROR ;
    END;
    -- Bug 3878024 : End;
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_structure_version_id='||l_structure_version_id, x_Log_Level=> 3);

    l_old_status_code := PA_PROGRESS_UTILS.get_task_status(p_project_id,p_object_id);

------------------  Added for FP_M changes : BEGIN

    IF PA_PROGRESS_UTILS.get_system_task_status( p_task_status ) in ( 'COMPLETED' )
    THEN


    -- Bug 3878024 : The following code is not needed. Now the passed task is taken in the cursosr itself.
        /*
        --Update pa_proj_elements
        UPDATE pa_proj_elements
           SET status_code = p_task_status
          WHERE proj_element_id = p_object_id
            AND project_id = p_project_id;

          -- Update Percent complete --
        UPDATE pa_percent_completes
        SET status_code = p_task_status,
            completed_percentage = 100,
            Actual_Finish_date   = p_actual_finish_date
        WHERE object_id = P_Object_ID
        AND project_id = p_project_id
        AND date_computed = p_as_of_date
        AND structure_type = p_structure_type
        ;

        --Update pa_progress_rollup
        UPDATE pa_progress_rollup
           SET completed_percentage = 100,
                   Actual_Finish_date  = p_actual_finish_date,
                   EQPMT_ETC_EFFORT = 0,
                   OTH_ETC_COST_TC = 0,
                   OTH_ETC_COST_FC = 0,
                   OTH_ETC_COST_PC = 0,
                   PPL_ETC_COST_TC= 0,
                   PPL_ETC_COST_FC= 0,
                   PPL_ETC_COST_PC = 0,
                   EQPMT_ETC_COST_TC = 0,
                   EQPMT_ETC_COST_FC = 0,
                   EQPMT_ETC_COST_PC = 0
          WHERE object_id = p_object_id
          and current_flag = 'Y'
          AND as_of_date = p_as_of_date
          AND structure_type = p_structure_type
      AND structure_version_id IS NULL -- Bug 3764224
          and current_flag <> 'W' -- Bug 3879461
          AND project_id = p_project_id;
      */

        FOR cur_tasks_rec in cur_tasks LOOP
        -- Bug 4282618 Begin
        l_prog_enabled := 'Y';
        OPEN cur_prog_enabled(cur_tasks_rec.proj_element_id);
        FETCH cur_prog_enabled INTO l_prog_enabled;
        CLOSE cur_prog_enabled;

        IF l_prog_enabled = 'N' THEN
            l_prog_stats_code := null;
        ELSE
            l_prog_stats_code := 'PROGRESS_STAT_ON_TRACK';
        END IF;
        -- Bug 4282618 End

        l_cur_task_old_status_code := PA_PROGRESS_UTILS.get_task_status(p_project_id,cur_tasks_rec.proj_element_id);
        -- Bug 3878024 : Begin
        FOR cur_task_assignments_rec in cur_task_assignments(cur_tasks_rec.object_id_to1, cur_tasks_rec.proj_element_id) LOOP
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'Looping cur_task_assignments', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.resource_list_member_id='||cur_task_assignments_rec.resource_list_member_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.current_flag='||cur_task_assignments_rec.current_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.proj_element_id='||cur_task_assignments_rec.proj_element_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.rbs_element_id='||cur_task_assignments_rec.rbs_element_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.resource_class_code='||cur_task_assignments_rec.resource_class_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.resource_class_code='||cur_task_assignments_rec.resource_class_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.rate_based_flag='||cur_task_assignments_rec.rate_based_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.txn_currency_code='||cur_task_assignments_rec.txn_currency_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.resource_alias='||cur_task_assignments_rec.resource_alias, x_Log_Level=> 3);
            END IF;

            IF cur_task_assignments_rec.current_flag = 'Y' THEN
                l_push_as_of_date := cur_task_assignments_rec.as_of_date;
                IF cur_task_assignments_rec.resource_class_code = 'PEOPLE' THEN
                    IF cur_task_assignments_rec.estimated_remaining_effort IS NOT NULL THEN
                        l_etc_effort_incr := NVL(cur_task_assignments_rec.estimated_remaining_effort,0);
                        l_etc_txn_bur_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_COST_TC,0);
                        l_etc_prj_bur_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_COST_PC,0);
                        l_etc_pfc_bur_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_COST_FC,0);
                        l_etc_txn_raw_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_RAWCOST_TC,0);
                        l_etc_prj_raw_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_RAWCOST_PC,0);
                        l_etc_pfc_raw_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_RAWCOST_FC,0);
                    ELSE
                        l_etc_effort_incr := nvl(cur_task_assignments_rec.planned_quantity,0)-nvl(cur_task_assignments_rec.PPL_ACT_EFFORT_TO_DATE,0);
                        IF l_etc_effort_incr < 0 THEN
                            l_etc_effort_incr := 0;
                        END IF;
                        l_etc_txn_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_txn_cur,0) - NVL(cur_task_assignments_rec.PPL_ACT_COST_TO_DATE_TC,0);
                        IF l_etc_txn_bur_cost_this_period < 0 THEN
                            l_etc_txn_bur_cost_this_period := 0;
                        END IF;
                        l_etc_prj_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_proj_cur,0) - NVL(cur_task_assignments_rec.PPL_ACT_COST_TO_DATE_PC,0);
                        IF l_etc_prj_bur_cost_this_period < 0 THEN
                            l_etc_prj_bur_cost_this_period := 0;
                        END IF;
                        l_etc_pfc_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_projfunc,0) - NVL(cur_task_assignments_rec.PPL_ACT_COST_TO_DATE_FC,0);
                        IF l_etc_pfc_bur_cost_this_period < 0 THEN
                            l_etc_pfc_bur_cost_this_period := 0;
                        END IF;
                        l_etc_txn_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_txn_cur,0) - NVL(cur_task_assignments_rec.PPL_ACT_RAWCOST_TO_DATE_TC,0);
                        IF l_etc_txn_raw_cost_this_period < 0 THEN
                            l_etc_txn_raw_cost_this_period := 0;
                        END IF;
                        l_etc_prj_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_proj_cur,0) - NVL(cur_task_assignments_rec.PPL_ACT_RAWCOST_TO_DATE_PC,0);
                        IF l_etc_prj_raw_cost_this_period < 0 THEN
                            l_etc_prj_raw_cost_this_period := 0;
                        END IF;
                        l_etc_pfc_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_projfunc,0) - NVL(cur_task_assignments_rec.PPL_ACT_RAWCOST_TO_DATE_FC,0);
                        IF l_etc_pfc_raw_cost_this_period < 0 THEN
                            l_etc_pfc_raw_cost_this_period := 0;
                        END IF;
                    END IF; -- cur_task_assignments_rec.estimated_remaining_effort IS NOT NULL THEN
                ELSIF cur_task_assignments_rec.resource_class_code = 'EQUIPMENT' THEN
                    IF cur_task_assignments_rec.EQPMT_ETC_EFFORT IS NOT NULL THEN
                        l_etc_effort_incr := NVL(cur_task_assignments_rec.EQPMT_ETC_EFFORT ,0);
                        l_etc_txn_bur_cost_this_period := NVL(cur_task_assignments_rec.EQPMT_ETC_COST_TC,0);
                        l_etc_prj_bur_cost_this_period := NVL(cur_task_assignments_rec.EQPMT_ETC_COST_PC,0);
                        l_etc_pfc_bur_cost_this_period := NVL(cur_task_assignments_rec.EQPMT_ETC_COST_FC,0);
                        l_etc_txn_raw_cost_this_period := NVL(cur_task_assignments_rec.EQPMT_ETC_RAWCOST_TC,0);
                        l_etc_prj_raw_cost_this_period := NVL(cur_task_assignments_rec.EQPMT_ETC_RAWCOST_PC,0);
                        l_etc_pfc_raw_cost_this_period := NVL(cur_task_assignments_rec.EQPMT_ETC_RAWCOST_FC,0);
                    ELSE
                        l_etc_effort_incr := nvl(cur_task_assignments_rec.planned_quantity,0)-nvl(cur_task_assignments_rec.EQPMT_ACT_EFFORT_TO_DATE,0);
                        IF l_etc_effort_incr < 0 THEN
                            l_etc_effort_incr := 0;
                        END IF;
                        l_etc_txn_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_txn_cur,0) - NVL(cur_task_assignments_rec.EQPMT_ACT_COST_TO_DATE_TC,0);
                        IF l_etc_txn_bur_cost_this_period < 0 THEN
                            l_etc_txn_bur_cost_this_period := 0;
                        END IF;
                        l_etc_prj_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_proj_cur,0) - NVL(cur_task_assignments_rec.EQPMT_ACT_COST_TO_DATE_PC,0);
                        IF l_etc_prj_bur_cost_this_period < 0 THEN
                            l_etc_prj_bur_cost_this_period := 0;
                        END IF;
                        l_etc_pfc_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_projfunc,0) - NVL(cur_task_assignments_rec.EQPMT_ACT_COST_TO_DATE_FC,0);
                        IF l_etc_pfc_bur_cost_this_period < 0 THEN
                            l_etc_pfc_bur_cost_this_period := 0;
                        END IF;
                        l_etc_txn_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_txn_cur,0) - NVL(cur_task_assignments_rec.EQPMT_ACT_RAWCOST_TO_DATE_TC,0);
                        IF l_etc_txn_raw_cost_this_period < 0 THEN
                            l_etc_txn_raw_cost_this_period := 0;
                        END IF;
                        l_etc_prj_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_proj_cur,0) - NVL(cur_task_assignments_rec.EQPMT_ACT_RAWCOST_TO_DATE_PC,0);
                        IF l_etc_prj_raw_cost_this_period < 0 THEN
                            l_etc_prj_raw_cost_this_period := 0;
                        END IF;
                        l_etc_pfc_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_projfunc,0) - NVL(cur_task_assignments_rec.EQPMT_ACT_RAWCOST_TO_DATE_FC,0);
                        IF l_etc_pfc_raw_cost_this_period < 0 THEN
                            l_etc_pfc_raw_cost_this_period := 0;
                        END IF;
                    END IF; -- cur_task_assignments_rec.EQPMT_ETC_EFFORT IS NOT NULL THEN
                ELSIF cur_task_assignments_rec.resource_class_code = 'FINANCIAL_ELEMENTS' OR cur_task_assignments_rec.resource_class_code = 'MATERIAL_ITEMS' THEN
                    IF cur_task_assignments_rec.OTH_ETC_QUANTITY IS NOT NULL THEN
                        l_etc_effort_incr := NVL(cur_task_assignments_rec.OTH_ETC_QUANTITY ,0);
                        l_etc_txn_bur_cost_this_period := NVL(cur_task_assignments_rec.OTH_ETC_COST_TC,0);
                        l_etc_prj_bur_cost_this_period := NVL(cur_task_assignments_rec.OTH_ETC_COST_PC,0);
                        l_etc_pfc_bur_cost_this_period := NVL(cur_task_assignments_rec.OTH_ETC_COST_FC,0);
                        l_etc_txn_raw_cost_this_period := NVL(cur_task_assignments_rec.OTH_ETC_RAWCOST_TC,0);
                        l_etc_prj_raw_cost_this_period := NVL(cur_task_assignments_rec.OTH_ETC_RAWCOST_PC,0);
                        l_etc_pfc_raw_cost_this_period := NVL(cur_task_assignments_rec.OTH_ETC_RAWCOST_FC,0);
                    ELSE
                        l_etc_effort_incr := nvl(cur_task_assignments_rec.planned_quantity,0)-nvl(cur_task_assignments_rec.OTH_QUANTITY_TO_DATE,0);
                        IF l_etc_effort_incr < 0 THEN
                            l_etc_effort_incr := 0;
                        END IF;
                        l_etc_txn_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_txn_cur,0) - NVL(cur_task_assignments_rec.OTH_ACT_COST_TO_DATE_TC,0);
                        IF l_etc_txn_bur_cost_this_period < 0 THEN
                            l_etc_txn_bur_cost_this_period := 0;
                        END IF;
                        l_etc_prj_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_proj_cur,0) - NVL(cur_task_assignments_rec.OTH_ACT_COST_TO_DATE_PC,0);
                        IF l_etc_prj_bur_cost_this_period < 0 THEN
                            l_etc_prj_bur_cost_this_period := 0;
                        END IF;
                        l_etc_pfc_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_projfunc,0) - NVL(cur_task_assignments_rec.OTH_ACT_COST_TO_DATE_FC,0);
                        IF l_etc_pfc_bur_cost_this_period < 0 THEN
                            l_etc_pfc_bur_cost_this_period := 0;
                        END IF;
                        l_etc_txn_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_txn_cur,0) - NVL(cur_task_assignments_rec.OTH_ACT_RAWCOST_TO_DATE_TC,0);
                        IF l_etc_txn_raw_cost_this_period < 0 THEN
                            l_etc_txn_raw_cost_this_period := 0;
                        END IF;
                        l_etc_prj_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_proj_cur,0) - NVL(cur_task_assignments_rec.OTH_ACT_RAWCOST_TO_DATE_PC,0);
                        IF l_etc_prj_raw_cost_this_period < 0 THEN
                            l_etc_prj_raw_cost_this_period := 0;
                        END IF;
                        l_etc_pfc_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_projfunc,0) - NVL(cur_task_assignments_rec.OTH_ACT_RAWCOST_TO_DATE_FC,0);
                        IF l_etc_pfc_raw_cost_this_period < 0 THEN
                            l_etc_pfc_raw_cost_this_period := 0;
                        END IF;
                    END IF; -- cur_task_assignments_rec.EQPMT_ETC_EFFORT IS NOT NULL THEN
                END IF; -- cur_task_assignments_rec.resource_class_code = 'PEOPLE' THEN
            ELSIF cur_task_assignments_rec.current_flag = 'X' THEN
                -- Record does not exist in rollup table. Push negative planned amount
                 l_push_as_of_date := p_as_of_date;
                 l_etc_effort_incr := cur_task_assignments_rec.planned_quantity;
                 l_etc_txn_bur_cost_this_period := cur_task_assignments_rec.planned_bur_cost_txn_cur;
                 l_etc_prj_bur_cost_this_period := cur_task_assignments_rec.planned_bur_cost_proj_cur;
                 l_etc_pfc_bur_cost_this_period := cur_task_assignments_rec.planned_bur_cost_projfunc;
                 l_etc_txn_raw_cost_this_period := cur_task_assignments_rec.planned_raw_cost_txn_cur;
                 l_etc_prj_raw_cost_this_period := cur_task_assignments_rec.planned_raw_cost_proj_cur;
                 l_etc_pfc_raw_cost_this_period := cur_task_assignments_rec.planned_raw_cost_projfunc;

                 -- This below code is under discussion with PM's.
                 l_PROGRESS_ROLLUP_ID := null;
                 l_prog_pa_period_name := PA_PROGRESS_UTILS.Prog_Get_Pa_Period_Name(l_push_as_of_date);
                 l_prog_gl_period_name := PA_PROGRESS_UTILS.Prog_Get_GL_Period_Name(l_push_as_of_date);

                 PA_PROGRESS_ROLLUP_PKG.INSERT_ROW(
                     X_PROGRESS_ROLLUP_ID              => l_PROGRESS_ROLLUP_ID
                    ,X_PROJECT_ID                      => p_project_id
                    ,X_OBJECT_ID                       => cur_task_assignments_rec.resource_list_member_id
                    ,X_OBJECT_TYPE                     => 'PA_ASSIGNMENTS'
                    ,X_AS_OF_DATE                      => l_push_as_of_date
                    ,X_OBJECT_VERSION_ID             => cur_tasks_rec.object_id_to1
                    ,X_LAST_UPDATE_DATE                => SYSDATE
                    ,X_LAST_UPDATED_BY                 => l_user_id
                    ,X_CREATION_DATE                   => SYSDATE
                    ,X_CREATED_BY                      => l_user_id
                    ,X_PROGRESS_STATUS_CODE            => l_prog_stats_code-- 'PROGRESS_STAT_ON_TRACK'
                    ,X_LAST_UPDATE_LOGIN               => l_login_id
                    ,X_INCREMENTAL_WORK_QTY            => null
                    ,X_CUMULATIVE_WORK_QTY             => null
                    ,X_BASE_PERCENT_COMPLETE           => null
                    ,X_EFF_ROLLUP_PERCENT_COMP         => null
                    ,X_COMPLETED_PERCENTAGE            => null
                    ,X_ESTIMATED_START_DATE            => null
                    ,X_ESTIMATED_FINISH_DATE           => null
                    ,X_ACTUAL_START_DATE               => null
                    ,X_ACTUAL_FINISH_DATE              => null
                    ,X_EST_REMAINING_EFFORT            => null
                    ,X_BASE_PERCENT_COMP_DERIV_CODE    => null
                    ,X_BASE_PROGRESS_STATUS_CODE       => null
                    ,X_EFF_ROLLUP_PROG_STAT_CODE       => null
                    ,x_percent_complete_id             => null
                    ,X_STRUCTURE_TYPE                  => 'WORKPLAN'
                    ,X_PROJ_ELEMENT_ID                 => cur_task_assignments_rec.proj_element_id
                    ,X_STRUCTURE_VERSION_ID            => null
                    ,X_PPL_ACT_EFFORT_TO_DATE          => null
                    ,X_EQPMT_ACT_EFFORT_TO_DATE        => null
                    ,X_EQPMT_ETC_EFFORT                => null
                    ,X_OTH_ACT_COST_TO_DATE_TC     => null
                    ,X_OTH_ACT_COST_TO_DATE_FC     => null
                    ,X_OTH_ACT_COST_TO_DATE_PC     => null
                    ,X_OTH_ETC_COST_TC                 => null
                    ,X_OTH_ETC_COST_FC                 => null
                    ,X_OTH_ETC_COST_PC                 => null
                    ,X_PPL_ACT_COST_TO_DATE_TC     => null
                    ,X_PPL_ACT_COST_TO_DATE_FC         => null
                    ,X_PPL_ACT_COST_TO_DATE_PC         => null
                    ,X_PPL_ETC_COST_TC                 => null
                    ,X_PPL_ETC_COST_FC                 => null
                    ,X_PPL_ETC_COST_PC                 => null
                    ,X_EQPMT_ACT_COST_TO_DATE_TC       => null
                    ,X_EQPMT_ACT_COST_TO_DATE_FC       => null
                    ,X_EQPMT_ACT_COST_TO_DATE_PC       => null
                    ,X_EQPMT_ETC_COST_TC               => null
                    ,X_EQPMT_ETC_COST_FC               => null
                    ,X_EQPMT_ETC_COST_PC               => null
                    ,X_EARNED_VALUE                    => null
                    ,X_TASK_WT_BASIS_CODE              => null
                    ,X_SUBPRJ_PPL_ACT_EFFORT           => null
                    ,X_SUBPRJ_EQPMT_ACT_EFFORT         => null
                    ,X_SUBPRJ_PPL_ETC_EFFORT           => null
                    ,X_SUBPRJ_EQPMT_ETC_EFFORT         => null
                    ,X_SBPJ_OTH_ACT_COST_TO_DATE_TC    => null
                    ,X_SBPJ_OTH_ACT_COST_TO_DATE_FC    => null
                    ,X_SBPJ_OTH_ACT_COST_TO_DATE_PC    => null
                    ,X_SUBPRJ_PPL_ACT_COST_TC          => null
                    ,X_SUBPRJ_PPL_ACT_COST_FC          => null
                    ,X_SUBPRJ_PPL_ACT_COST_PC          => null
                    ,X_SUBPRJ_EQPMT_ACT_COST_TC        => null
                    ,X_SUBPRJ_EQPMT_ACT_COST_FC        => null
                    ,X_SUBPRJ_EQPMT_ACT_COST_PC        => null
                    ,X_SUBPRJ_OTH_ETC_COST_TC          => null
                    ,X_SUBPRJ_OTH_ETC_COST_FC          => null
                    ,X_SUBPRJ_OTH_ETC_COST_PC          => null
                    ,X_SUBPRJ_PPL_ETC_COST_TC          => null
                    ,X_SUBPRJ_PPL_ETC_COST_FC          => null
                    ,X_SUBPRJ_PPL_ETC_COST_PC          => null
                    ,X_SUBPRJ_EQPMT_ETC_COST_TC        => null
                    ,X_SUBPRJ_EQPMT_ETC_COST_FC        => null
                    ,X_SUBPRJ_EQPMT_ETC_COST_PC        => null
                    ,X_SUBPRJ_EARNED_VALUE             => null
                    ,X_CURRENT_FLAG                    => 'Y'
                    ,X_PROJFUNC_COST_RATE_TYPE         => null
                    ,X_PROJFUNC_COST_EXCHANGE_RATE     => null
                    ,X_PROJFUNC_COST_RATE_DATE         => null
                    ,X_PROJ_COST_RATE_TYPE             => null
                    ,X_PROJ_COST_EXCHANGE_RATE         => null
                    ,X_PROJ_COST_RATE_DATE             => null
                    ,X_TXN_CURRENCY_CODE           => cur_task_assignments_rec.txn_currency_code
                    ,X_PROG_PA_PERIOD_NAME             => l_prog_pa_period_name
                    ,X_PROG_GL_PERIOD_NAME             => l_prog_gl_period_name
                    ,X_OTH_QUANTITY_TO_DATE            => null
                    ,X_OTH_ETC_QUANTITY                => null
                    ,X_OTH_ACT_RAWCOST_TO_DATE_TC      => null
                    ,X_OTH_ACT_RAWCOST_TO_DATE_FC      => null
                    ,X_OTH_ACT_RAWCOST_TO_DATE_PC      => null
                    ,X_OTH_ETC_RAWCOST_TC              => null
                    ,X_OTH_ETC_RAWCOST_FC              => null
                    ,X_OTH_ETC_RAWCOST_PC              => null
                    ,X_PPL_ACT_RAWCOST_TO_DATE_TC      => null
                    ,X_PPL_ACT_RAWCOST_TO_DATE_FC      => null
                    ,X_PPL_ACT_RAWCOST_TO_DATE_PC      => null
                    ,X_PPL_ETC_RAWCOST_TC              => null
                    ,X_PPL_ETC_RAWCOST_FC              => null
                    ,X_PPL_ETC_RAWCOST_PC          => null
                    ,X_EQPMT_ACT_RAWCOST_TO_DATE_TC    => null
                    ,X_EQPMT_ACT_RAWCOST_TO_DATE_FC    => null
                    ,X_EQPMT_ACT_RAWCOST_TO_DATE_PC    => null
                    ,X_EQPMT_ETC_RAWCOST_TC            => null
                    ,X_EQPMT_ETC_RAWCOST_FC            => null
                    ,X_EQPMT_ETC_RAWCOST_PC            => null
                    ,X_SP_OTH_ACT_RAWCOST_TODATE_TC    => null
                    ,X_SP_OTH_ACT_RAWCOST_TODATE_FC    => null
                    ,X_SP_OTH_ACT_RAWCOST_TODATE_PC    => null
                    ,X_SUBPRJ_PPL_ACT_RAWCOST_TC       => null
                    ,X_SUBPRJ_PPL_ACT_RAWCOST_FC       => null
                    ,X_SUBPRJ_PPL_ACT_RAWCOST_PC       => null
                    ,X_SUBPRJ_EQPMT_ACT_RAWCOST_TC     => null
                    ,X_SUBPRJ_EQPMT_ACT_RAWCOST_FC     => null
                    ,X_SUBPRJ_EQPMT_ACT_RAWCOST_PC     => null
                    ,X_SUBPRJ_OTH_ETC_RAWCOST_TC       => null
                    ,X_SUBPRJ_OTH_ETC_RAWCOST_FC       => null
                    ,X_SUBPRJ_OTH_ETC_RAWCOST_PC       => null
                    ,X_SUBPRJ_PPL_ETC_RAWCOST_TC       => null
                    ,X_SUBPRJ_PPL_ETC_RAWCOST_FC       => null
                    ,X_SUBPRJ_PPL_ETC_RAWCOST_PC       => null
                    ,X_SUBPRJ_EQPMT_ETC_RAWCOST_TC     => null
                    ,X_SUBPRJ_EQPMT_ETC_RAWCOST_FC     => null
                    ,X_SUBPRJ_EQPMT_ETC_RAWCOST_PC     => null
                    );

                    IF Fnd_Msg_Pub.count_msg > 0 THEN
                        RAISE  FND_API.G_EXC_ERROR;
                    END IF;
            END IF; --  cur_task_assignments_rec.current_flag = 'Y' THEN

            IF cur_task_assignments_rec.current_flag = 'Y' OR cur_task_assignments_rec.current_flag = 'X' THEN
                l_etc_effort_incr := l_etc_effort_incr * (-1);
                l_etc_txn_bur_cost_this_period := l_etc_txn_bur_cost_this_period * (-1);
                l_etc_prj_bur_cost_this_period := l_etc_prj_bur_cost_this_period * (-1);
                l_etc_pfc_bur_cost_this_period := l_etc_pfc_bur_cost_this_period * (-1);
                l_etc_txn_raw_cost_this_period := l_etc_txn_raw_cost_this_period * (-1);
                l_etc_prj_raw_cost_this_period := l_etc_prj_raw_cost_this_period * (-1);
                l_etc_pfc_raw_cost_this_period := l_etc_pfc_raw_cost_this_period * (-1);

                -- Bug 4144845 : Removed Completed check from push workplan actuals.
                --IF PA_PROGRESS_UTILS.get_system_task_status(l_cur_task_old_status_code) <>  'COMPLETED' THEN
                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'Pushing Negative Amounts To PJI', x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_txn_bur_cost_this_period='||l_etc_txn_bur_cost_this_period, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_prj_bur_cost_this_period='||l_etc_prj_bur_cost_this_period, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_pfc_bur_cost_this_period='||l_etc_pfc_bur_cost_this_period, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_effort_incr='||l_etc_effort_incr, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_txn_raw_cost_this_period='||l_etc_txn_raw_cost_this_period, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_prj_raw_cost_this_period='||l_etc_prj_raw_cost_this_period, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_pfc_raw_cost_this_period='||l_etc_pfc_raw_cost_this_period, x_Log_Level=> 3);
                END IF;

                PA_PROGRESS_PUB.push_workplan_actuals(
                      p_project_Id              => p_project_id,
                      p_structure_version_id        => l_structure_version_id,
                      p_proj_element_id         => cur_task_assignments_rec.proj_element_id,
                      p_object_id               => cur_task_assignments_rec.resource_list_member_id,
                      p_object_type             => 'PA_ASSIGNMENTS',
                      p_as_of_date              => l_push_as_of_date,
                      p_rbs_element_id          => cur_task_assignments_rec.rbs_element_id,
                      p_rate_based_flag         => cur_task_assignments_rec.rate_based_flag,
                      p_resource_class_code         => cur_task_assignments_rec.resource_class_code,
                      p_act_TXN_COST_this_period        => null,
                      p_act_PRJ_COST_this_period        => null,
                      p_act_POU_COST_this_period        => null,
                      p_act_effort_this_period      => null,
                      p_etc_TXN_COST_this_period        => l_etc_txn_bur_cost_this_period,
                      p_etc_PRJ_COST_this_period        => l_etc_prj_bur_cost_this_period,
                      p_etc_POU_COST_this_period        => l_etc_pfc_bur_cost_this_period,
                      p_etc_effort_this_period      => l_etc_effort_incr,
                      p_act_TXN_raw_COST_this_period    => null,
                      p_act_PRJ_raw_COST_this_period    => null,
                      p_act_POU_raw_COST_this_period    => null,
                      p_etc_TXN_raw_COST_this_period    => l_etc_txn_raw_cost_this_period,
                      p_etc_PRJ_raw_COST_this_period    => l_etc_prj_raw_cost_this_period,
                      p_etc_POU_raw_COST_this_period    => l_etc_pfc_raw_cost_this_period,
                      p_txn_currency_code           => cur_task_assignments_rec.txn_currency_code,
                      p_prj_currency_code           => null,
                      p_pfn_currency_code           => null,
                      p_pa_period_name          => null,
                      p_gl_period_name          => null,
                      p_call_pji_apis_flag          => 'N',
                      x_return_status           => x_return_status,
                      x_msg_count               => x_msg_count,
                      x_msg_data                => x_msg_data
                     );
                --END IF;-- PA_PROGRESS_UTILS.get_system_task_status(l_old_status_code) <>  'COMPLETED' THEN
            END IF; -- IF cur_task_assignments_rec.current_flag = 'Y' OR cur_task_assignments_rec.current_flag = 'X' THEN

            -- Update Percent complete --
            UPDATE pa_percent_completes
            SET Actual_Finish_date   = p_actual_finish_date
            WHERE object_id = cur_task_assignments_rec.resource_list_member_id
            AND project_id = p_project_id
            AND task_id = cur_task_assignments_rec.proj_element_id
            AND object_type = 'PA_ASSIGNMENTS'
            AND structure_type = p_structure_type
            AND ((current_flag = 'Y' and published_flag = 'Y') or
                (current_flag = 'N' and published_flag = 'N'))
            ;

            --Update pa_progress_rollup
            UPDATE pa_progress_rollup
            SET actual_start_date = decode(actual_start_date, null, cur_task_assignments_rec.assignment_start_date, actual_start_date),
               Actual_Finish_date  = p_actual_finish_date,
               estimated_remaining_effort = 0,
               EQPMT_ETC_EFFORT = 0,
               oth_etc_quantity = 0,
               OTH_ETC_COST_TC = 0,
               OTH_ETC_COST_FC = 0,
               OTH_ETC_COST_PC = 0,
               OTH_ETC_RAWCOST_TC = 0,
               OTH_ETC_RAWCOST_FC = 0,
               OTH_ETC_RAWCOST_PC = 0,
               PPL_ETC_COST_TC= 0,
               PPL_ETC_COST_FC= 0,
               PPL_ETC_COST_PC = 0,
               PPL_ETC_RAWCOST_TC= 0,
               PPL_ETC_RAWCOST_FC= 0,
               PPL_ETC_RAWCOST_PC = 0,
               EQPMT_ETC_COST_TC = 0,
               EQPMT_ETC_COST_FC = 0,
               EQPMT_ETC_COST_PC = 0,
               EQPMT_ETC_RAWCOST_TC = 0,
               EQPMT_ETC_RAWCOST_FC = 0,
               EQPMT_ETC_RAWCOST_PC = 0
            WHERE object_id = cur_task_assignments_rec.resource_list_member_id
            and current_flag IN ('Y', 'W')
            AND object_type = 'PA_ASSIGNMENTS'
            AND structure_type = p_structure_type
            AND proj_element_id = cur_task_assignments_rec.proj_element_id
            AND structure_version_id IS NULL
            AND project_id = p_project_id;

        END LOOP; -- cur_task_assignments_rec in cur_task_assignments(p_object_version_id, p_object_id) LOOP

        -- Now tasks processing starts
        -- 4490532 : changed from IS_LOWEST_TASK to is_summary_task_or_structure
                --l_lowest_level_task := PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(p_task_version_id => cur_tasks_rec.object_id_to1 );
        IF PA_PROJ_ELEMENTS_UTILS.is_summary_task_or_structure( cur_tasks_rec.object_id_to1) = 'Y' THEN
            l_lowest_level_task := 'N';
        ELSE
            l_lowest_level_task := 'Y';
        END IF;
        l_assignment_exists := PA_PROGRESS_UTILS.check_assignment_exists(p_project_id,cur_tasks_rec.object_id_to1,'PA_TASKS');
        IF NVL(l_lowest_level_task, 'N') = 'Y' AND NVL(l_assignment_exists,'Y') = 'N' THEN
            -- Find the hidden assignment and push the task progress value against it
            FOR cur_task_assignments_rec in cur_system_assignment(cur_tasks_rec.object_id_to1, cur_tasks_rec.proj_element_id) LOOP
                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'Looping cur_system_assignment', x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.resource_list_member_id='||cur_task_assignments_rec.resource_list_member_id, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.current_flag='||cur_task_assignments_rec.current_flag, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.proj_element_id='||cur_task_assignments_rec.proj_element_id, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.rbs_element_id='||cur_task_assignments_rec.rbs_element_id, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.resource_class_code='||cur_task_assignments_rec.resource_class_code, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.resource_class_code='||cur_task_assignments_rec.resource_class_code, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.rate_based_flag='||cur_task_assignments_rec.rate_based_flag, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.txn_currency_code='||cur_task_assignments_rec.txn_currency_code, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'cur_task_assignments_rec.resource_alias='||cur_task_assignments_rec.resource_alias, x_Log_Level=> 3);
                END IF;

                IF cur_task_assignments_rec.current_flag = 'Y' THEN
                    l_push_as_of_date := cur_task_assignments_rec.as_of_date;
                    -- Hidden assignment is people only
                    IF cur_task_assignments_rec.resource_class_code = 'PEOPLE' THEN
                        IF cur_task_assignments_rec.estimated_remaining_effort IS NOT NULL THEN
                            l_etc_effort_incr := NVL(cur_task_assignments_rec.estimated_remaining_effort,0);
                            l_etc_txn_bur_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_COST_TC,0);
                            l_etc_prj_bur_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_COST_PC,0);
                            l_etc_pfc_bur_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_COST_FC,0);
                            l_etc_txn_raw_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_RAWCOST_TC,0);
                            l_etc_prj_raw_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_RAWCOST_PC,0);
                            l_etc_pfc_raw_cost_this_period := NVL(cur_task_assignments_rec.PPL_ETC_RAWCOST_FC,0);
                        ELSE
                            l_etc_effort_incr := nvl(cur_task_assignments_rec.planned_quantity,0)-nvl(cur_task_assignments_rec.PPL_ACT_EFFORT_TO_DATE,0);
                            IF l_etc_effort_incr < 0 THEN
                                l_etc_effort_incr := 0;
                            END IF;
                            l_etc_txn_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_txn_cur,0) - NVL(cur_task_assignments_rec.PPL_ACT_COST_TO_DATE_TC,0);
                            IF l_etc_txn_bur_cost_this_period < 0 THEN
                                l_etc_txn_bur_cost_this_period := 0;
                            END IF;
                            l_etc_prj_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_proj_cur,0) - NVL(cur_task_assignments_rec.PPL_ACT_COST_TO_DATE_PC,0);
                            IF l_etc_prj_bur_cost_this_period < 0 THEN
                                l_etc_prj_bur_cost_this_period := 0;
                            END IF;
                            l_etc_pfc_bur_cost_this_period := NVL(cur_task_assignments_rec.planned_bur_cost_projfunc,0) - NVL(cur_task_assignments_rec.PPL_ACT_COST_TO_DATE_FC,0);
                            IF l_etc_pfc_bur_cost_this_period < 0 THEN
                                l_etc_pfc_bur_cost_this_period := 0;
                            END IF;
                            l_etc_txn_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_txn_cur,0) - NVL(cur_task_assignments_rec.PPL_ACT_RAWCOST_TO_DATE_TC,0);
                            IF l_etc_txn_raw_cost_this_period < 0 THEN
                                l_etc_txn_raw_cost_this_period := 0;
                            END IF;
                            l_etc_prj_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_proj_cur,0) - NVL(cur_task_assignments_rec.PPL_ACT_RAWCOST_TO_DATE_PC,0);
                            IF l_etc_prj_raw_cost_this_period < 0 THEN
                                l_etc_prj_raw_cost_this_period := 0;
                            END IF;
                            l_etc_pfc_raw_cost_this_period := NVL(cur_task_assignments_rec.planned_raw_cost_projfunc,0) - NVL(cur_task_assignments_rec.PPL_ACT_RAWCOST_TO_DATE_FC,0);
                            IF l_etc_pfc_raw_cost_this_period < 0 THEN
                                l_etc_pfc_raw_cost_this_period := 0;
                            END IF;
                        END IF; -- cur_task_assignments_rec.estimated_remaining_effort IS NOT NULL THEN
                    END IF; -- cur_task_assignments_rec.resource_class_code = 'PEOPLE' THEN
                ELSIF cur_task_assignments_rec.current_flag = 'X' THEN
                    -- Record does not exist in rollup table. Push negative planned amount
                     l_push_as_of_date := p_as_of_date;
                     l_etc_effort_incr := cur_task_assignments_rec.planned_quantity;
                     l_etc_txn_bur_cost_this_period := cur_task_assignments_rec.planned_bur_cost_txn_cur;
                     l_etc_prj_bur_cost_this_period := cur_task_assignments_rec.planned_bur_cost_proj_cur;
                     l_etc_pfc_bur_cost_this_period := cur_task_assignments_rec.planned_bur_cost_projfunc;
                     l_etc_txn_raw_cost_this_period := cur_task_assignments_rec.planned_raw_cost_txn_cur;
                     l_etc_prj_raw_cost_this_period := cur_task_assignments_rec.planned_raw_cost_proj_cur;
                     l_etc_pfc_raw_cost_this_period := cur_task_assignments_rec.planned_raw_cost_projfunc;

                     -- This below code is under discussion with PM's.
                     l_PROGRESS_ROLLUP_ID := null;
                     l_prog_pa_period_name := PA_PROGRESS_UTILS.Prog_Get_Pa_Period_Name(l_push_as_of_date);
                     l_prog_gl_period_name := PA_PROGRESS_UTILS.Prog_Get_GL_Period_Name(l_push_as_of_date);

                     PA_PROGRESS_ROLLUP_PKG.INSERT_ROW(
                         X_PROGRESS_ROLLUP_ID              => l_PROGRESS_ROLLUP_ID
                        ,X_PROJECT_ID                      => p_project_id
                        ,X_OBJECT_ID                       => cur_task_assignments_rec.proj_element_id
                        ,X_OBJECT_TYPE                     => 'PA_TASKS'
                        ,X_AS_OF_DATE                      => l_push_as_of_date
                        ,X_OBJECT_VERSION_ID           => cur_tasks_rec.object_id_to1
                        ,X_LAST_UPDATE_DATE                => SYSDATE
                        ,X_LAST_UPDATED_BY                 => l_user_id
                        ,X_CREATION_DATE                   => SYSDATE
                        ,X_CREATED_BY                      => l_user_id
                        ,X_PROGRESS_STATUS_CODE            => l_prog_stats_code--'PROGRESS_STAT_ON_TRACK'
                        ,X_LAST_UPDATE_LOGIN               => l_login_id
                        ,X_INCREMENTAL_WORK_QTY            => null
                        ,X_CUMULATIVE_WORK_QTY             => null
                        ,X_BASE_PERCENT_COMPLETE           => null
                        ,X_EFF_ROLLUP_PERCENT_COMP         => null
                        ,X_COMPLETED_PERCENTAGE            => 100
                        ,X_ESTIMATED_START_DATE            => null
                        ,X_ESTIMATED_FINISH_DATE           => null
                        ,X_ACTUAL_START_DATE               => null
                        ,X_ACTUAL_FINISH_DATE              => null
                        ,X_EST_REMAINING_EFFORT            => null
                        ,X_BASE_PERCENT_COMP_DERIV_CODE    => null
                        ,X_BASE_PROGRESS_STATUS_CODE       => null
                        ,X_EFF_ROLLUP_PROG_STAT_CODE       => null
                        ,x_percent_complete_id             => null
                        ,X_STRUCTURE_TYPE                  => 'WORKPLAN'
                        ,X_PROJ_ELEMENT_ID                 => cur_task_assignments_rec.proj_element_id
                        ,X_STRUCTURE_VERSION_ID            => null
                        ,X_PPL_ACT_EFFORT_TO_DATE          => null
                        ,X_EQPMT_ACT_EFFORT_TO_DATE        => null
                        ,X_EQPMT_ETC_EFFORT                => null
                        ,X_OTH_ACT_COST_TO_DATE_TC     => null
                        ,X_OTH_ACT_COST_TO_DATE_FC     => null
                        ,X_OTH_ACT_COST_TO_DATE_PC     => null
                        ,X_OTH_ETC_COST_TC                 => null
                        ,X_OTH_ETC_COST_FC                 => null
                        ,X_OTH_ETC_COST_PC                 => null
                        ,X_PPL_ACT_COST_TO_DATE_TC     => null
                        ,X_PPL_ACT_COST_TO_DATE_FC         => null
                        ,X_PPL_ACT_COST_TO_DATE_PC         => null
                        ,X_PPL_ETC_COST_TC                 => null
                        ,X_PPL_ETC_COST_FC                 => null
                        ,X_PPL_ETC_COST_PC                 => null
                        ,X_EQPMT_ACT_COST_TO_DATE_TC       => null
                        ,X_EQPMT_ACT_COST_TO_DATE_FC       => null
                        ,X_EQPMT_ACT_COST_TO_DATE_PC       => null
                        ,X_EQPMT_ETC_COST_TC               => null
                        ,X_EQPMT_ETC_COST_FC               => null
                        ,X_EQPMT_ETC_COST_PC               => null
                        ,X_EARNED_VALUE                    => null
                        ,X_TASK_WT_BASIS_CODE              => null
                        ,X_SUBPRJ_PPL_ACT_EFFORT           => null
                        ,X_SUBPRJ_EQPMT_ACT_EFFORT         => null
                        ,X_SUBPRJ_PPL_ETC_EFFORT           => null
                        ,X_SUBPRJ_EQPMT_ETC_EFFORT         => null
                        ,X_SBPJ_OTH_ACT_COST_TO_DATE_TC    => null
                        ,X_SBPJ_OTH_ACT_COST_TO_DATE_FC    => null
                        ,X_SBPJ_OTH_ACT_COST_TO_DATE_PC    => null
                        ,X_SUBPRJ_PPL_ACT_COST_TC          => null
                        ,X_SUBPRJ_PPL_ACT_COST_FC          => null
                        ,X_SUBPRJ_PPL_ACT_COST_PC          => null
                        ,X_SUBPRJ_EQPMT_ACT_COST_TC        => null
                        ,X_SUBPRJ_EQPMT_ACT_COST_FC        => null
                        ,X_SUBPRJ_EQPMT_ACT_COST_PC        => null
                        ,X_SUBPRJ_OTH_ETC_COST_TC          => null
                        ,X_SUBPRJ_OTH_ETC_COST_FC          => null
                        ,X_SUBPRJ_OTH_ETC_COST_PC          => null
                        ,X_SUBPRJ_PPL_ETC_COST_TC          => null
                        ,X_SUBPRJ_PPL_ETC_COST_FC          => null
                        ,X_SUBPRJ_PPL_ETC_COST_PC          => null
                        ,X_SUBPRJ_EQPMT_ETC_COST_TC        => null
                        ,X_SUBPRJ_EQPMT_ETC_COST_FC        => null
                        ,X_SUBPRJ_EQPMT_ETC_COST_PC        => null
                        ,X_SUBPRJ_EARNED_VALUE             => null
                        ,X_CURRENT_FLAG                    => 'Y'
                        ,X_PROJFUNC_COST_RATE_TYPE         => null
                        ,X_PROJFUNC_COST_EXCHANGE_RATE     => null
                        ,X_PROJFUNC_COST_RATE_DATE         => null
                        ,X_PROJ_COST_RATE_TYPE             => null
                        ,X_PROJ_COST_EXCHANGE_RATE         => null
                        ,X_PROJ_COST_RATE_DATE             => null
                        ,X_TXN_CURRENCY_CODE           => cur_task_assignments_rec.txn_currency_code
                        ,X_PROG_PA_PERIOD_NAME             => l_prog_pa_period_name
                        ,X_PROG_GL_PERIOD_NAME             => l_prog_gl_period_name
                        ,X_OTH_QUANTITY_TO_DATE            => null
                        ,X_OTH_ETC_QUANTITY                => null
                        ,X_OTH_ACT_RAWCOST_TO_DATE_TC      => null
                        ,X_OTH_ACT_RAWCOST_TO_DATE_FC      => null
                        ,X_OTH_ACT_RAWCOST_TO_DATE_PC      => null
                        ,X_OTH_ETC_RAWCOST_TC              => null
                        ,X_OTH_ETC_RAWCOST_FC              => null
                        ,X_OTH_ETC_RAWCOST_PC              => null
                        ,X_PPL_ACT_RAWCOST_TO_DATE_TC      => null
                        ,X_PPL_ACT_RAWCOST_TO_DATE_FC      => null
                        ,X_PPL_ACT_RAWCOST_TO_DATE_PC      => null
                        ,X_PPL_ETC_RAWCOST_TC              => null
                        ,X_PPL_ETC_RAWCOST_FC              => null
                        ,X_PPL_ETC_RAWCOST_PC          => null
                        ,X_EQPMT_ACT_RAWCOST_TO_DATE_TC    => null
                        ,X_EQPMT_ACT_RAWCOST_TO_DATE_FC    => null
                        ,X_EQPMT_ACT_RAWCOST_TO_DATE_PC    => null
                        ,X_EQPMT_ETC_RAWCOST_TC            => null
                        ,X_EQPMT_ETC_RAWCOST_FC            => null
                        ,X_EQPMT_ETC_RAWCOST_PC            => null
                        ,X_SP_OTH_ACT_RAWCOST_TODATE_TC    => null
                        ,X_SP_OTH_ACT_RAWCOST_TODATE_FC    => null
                        ,X_SP_OTH_ACT_RAWCOST_TODATE_PC    => null
                        ,X_SUBPRJ_PPL_ACT_RAWCOST_TC       => null
                        ,X_SUBPRJ_PPL_ACT_RAWCOST_FC       => null
                        ,X_SUBPRJ_PPL_ACT_RAWCOST_PC       => null
                        ,X_SUBPRJ_EQPMT_ACT_RAWCOST_TC     => null
                        ,X_SUBPRJ_EQPMT_ACT_RAWCOST_FC     => null
                        ,X_SUBPRJ_EQPMT_ACT_RAWCOST_PC     => null
                        ,X_SUBPRJ_OTH_ETC_RAWCOST_TC       => null
                        ,X_SUBPRJ_OTH_ETC_RAWCOST_FC       => null
                        ,X_SUBPRJ_OTH_ETC_RAWCOST_PC       => null
                        ,X_SUBPRJ_PPL_ETC_RAWCOST_TC       => null
                        ,X_SUBPRJ_PPL_ETC_RAWCOST_FC       => null
                        ,X_SUBPRJ_PPL_ETC_RAWCOST_PC       => null
                        ,X_SUBPRJ_EQPMT_ETC_RAWCOST_TC     => null
                        ,X_SUBPRJ_EQPMT_ETC_RAWCOST_FC     => null
                        ,X_SUBPRJ_EQPMT_ETC_RAWCOST_PC     => null
                        );

                        IF Fnd_Msg_Pub.count_msg > 0 THEN
                            RAISE  FND_API.G_EXC_ERROR;
                        END IF;

                        -- Bug 3922325 : Hidden Assignment record also shd get created

                        l_PROGRESS_ROLLUP_ID := null;

                     PA_PROGRESS_ROLLUP_PKG.INSERT_ROW(
                         X_PROGRESS_ROLLUP_ID              => l_PROGRESS_ROLLUP_ID
                        ,X_PROJECT_ID                      => p_project_id
                        ,X_OBJECT_ID                       => cur_task_assignments_rec.resource_list_member_id
                        ,X_OBJECT_TYPE                     => 'PA_ASSIGNMENTS'
                        ,X_AS_OF_DATE                      => l_push_as_of_date
                        ,X_OBJECT_VERSION_ID           => cur_tasks_rec.object_id_to1
                        ,X_LAST_UPDATE_DATE                => SYSDATE
                        ,X_LAST_UPDATED_BY                 => l_user_id
                        ,X_CREATION_DATE                   => SYSDATE
                        ,X_CREATED_BY                      => l_user_id
                        ,X_PROGRESS_STATUS_CODE            => l_prog_stats_code--'PROGRESS_STAT_ON_TRACK'
                        ,X_LAST_UPDATE_LOGIN               => l_login_id
                        ,X_INCREMENTAL_WORK_QTY            => null
                        ,X_CUMULATIVE_WORK_QTY             => null
                        ,X_BASE_PERCENT_COMPLETE           => null
                        ,X_EFF_ROLLUP_PERCENT_COMP         => null
                        ,X_COMPLETED_PERCENTAGE            => null
                        ,X_ESTIMATED_START_DATE            => null
                        ,X_ESTIMATED_FINISH_DATE           => null
                        ,X_ACTUAL_START_DATE               => null
                        ,X_ACTUAL_FINISH_DATE              => null
                        ,X_EST_REMAINING_EFFORT            => null
                        ,X_BASE_PERCENT_COMP_DERIV_CODE    => null
                        ,X_BASE_PROGRESS_STATUS_CODE       => null
                        ,X_EFF_ROLLUP_PROG_STAT_CODE       => null
                        ,x_percent_complete_id             => null
                        ,X_STRUCTURE_TYPE                  => 'WORKPLAN'
                        ,X_PROJ_ELEMENT_ID                 => cur_task_assignments_rec.proj_element_id
                        ,X_STRUCTURE_VERSION_ID            => null
                        ,X_PPL_ACT_EFFORT_TO_DATE          => null
                        ,X_EQPMT_ACT_EFFORT_TO_DATE        => null
                        ,X_EQPMT_ETC_EFFORT                => null
                        ,X_OTH_ACT_COST_TO_DATE_TC     => null
                        ,X_OTH_ACT_COST_TO_DATE_FC     => null
                        ,X_OTH_ACT_COST_TO_DATE_PC     => null
                        ,X_OTH_ETC_COST_TC                 => null
                        ,X_OTH_ETC_COST_FC                 => null
                        ,X_OTH_ETC_COST_PC                 => null
                        ,X_PPL_ACT_COST_TO_DATE_TC     => null
                        ,X_PPL_ACT_COST_TO_DATE_FC         => null
                        ,X_PPL_ACT_COST_TO_DATE_PC         => null
                        ,X_PPL_ETC_COST_TC                 => null
                        ,X_PPL_ETC_COST_FC                 => null
                        ,X_PPL_ETC_COST_PC                 => null
                        ,X_EQPMT_ACT_COST_TO_DATE_TC       => null
                        ,X_EQPMT_ACT_COST_TO_DATE_FC       => null
                        ,X_EQPMT_ACT_COST_TO_DATE_PC       => null
                        ,X_EQPMT_ETC_COST_TC               => null
                        ,X_EQPMT_ETC_COST_FC               => null
                        ,X_EQPMT_ETC_COST_PC               => null
                        ,X_EARNED_VALUE                    => null
                        ,X_TASK_WT_BASIS_CODE              => null
                        ,X_SUBPRJ_PPL_ACT_EFFORT           => null
                        ,X_SUBPRJ_EQPMT_ACT_EFFORT         => null
                        ,X_SUBPRJ_PPL_ETC_EFFORT           => null
                        ,X_SUBPRJ_EQPMT_ETC_EFFORT         => null
                        ,X_SBPJ_OTH_ACT_COST_TO_DATE_TC    => null
                        ,X_SBPJ_OTH_ACT_COST_TO_DATE_FC    => null
                        ,X_SBPJ_OTH_ACT_COST_TO_DATE_PC    => null
                        ,X_SUBPRJ_PPL_ACT_COST_TC          => null
                        ,X_SUBPRJ_PPL_ACT_COST_FC          => null
                        ,X_SUBPRJ_PPL_ACT_COST_PC          => null
                        ,X_SUBPRJ_EQPMT_ACT_COST_TC        => null
                        ,X_SUBPRJ_EQPMT_ACT_COST_FC        => null
                        ,X_SUBPRJ_EQPMT_ACT_COST_PC        => null
                        ,X_SUBPRJ_OTH_ETC_COST_TC          => null
                        ,X_SUBPRJ_OTH_ETC_COST_FC          => null
                        ,X_SUBPRJ_OTH_ETC_COST_PC          => null
                        ,X_SUBPRJ_PPL_ETC_COST_TC          => null
                        ,X_SUBPRJ_PPL_ETC_COST_FC          => null
                        ,X_SUBPRJ_PPL_ETC_COST_PC          => null
                        ,X_SUBPRJ_EQPMT_ETC_COST_TC        => null
                        ,X_SUBPRJ_EQPMT_ETC_COST_FC        => null
                        ,X_SUBPRJ_EQPMT_ETC_COST_PC        => null
                        ,X_SUBPRJ_EARNED_VALUE             => null
                        ,X_CURRENT_FLAG                    => 'Y'
                        ,X_PROJFUNC_COST_RATE_TYPE         => null
                        ,X_PROJFUNC_COST_EXCHANGE_RATE     => null
                        ,X_PROJFUNC_COST_RATE_DATE         => null
                        ,X_PROJ_COST_RATE_TYPE             => null
                        ,X_PROJ_COST_EXCHANGE_RATE         => null
                        ,X_PROJ_COST_RATE_DATE             => null
                        ,X_TXN_CURRENCY_CODE           => cur_task_assignments_rec.txn_currency_code
                        ,X_PROG_PA_PERIOD_NAME             => l_prog_pa_period_name
                        ,X_PROG_GL_PERIOD_NAME             => l_prog_gl_period_name
                        ,X_OTH_QUANTITY_TO_DATE            => null
                        ,X_OTH_ETC_QUANTITY                => null
                        ,X_OTH_ACT_RAWCOST_TO_DATE_TC      => null
                        ,X_OTH_ACT_RAWCOST_TO_DATE_FC      => null
                        ,X_OTH_ACT_RAWCOST_TO_DATE_PC      => null
                        ,X_OTH_ETC_RAWCOST_TC              => null
                        ,X_OTH_ETC_RAWCOST_FC              => null
                        ,X_OTH_ETC_RAWCOST_PC              => null
                        ,X_PPL_ACT_RAWCOST_TO_DATE_TC      => null
                        ,X_PPL_ACT_RAWCOST_TO_DATE_FC      => null
                        ,X_PPL_ACT_RAWCOST_TO_DATE_PC      => null
                        ,X_PPL_ETC_RAWCOST_TC              => null
                        ,X_PPL_ETC_RAWCOST_FC              => null
                        ,X_PPL_ETC_RAWCOST_PC          => null
                        ,X_EQPMT_ACT_RAWCOST_TO_DATE_TC    => null
                        ,X_EQPMT_ACT_RAWCOST_TO_DATE_FC    => null
                        ,X_EQPMT_ACT_RAWCOST_TO_DATE_PC    => null
                        ,X_EQPMT_ETC_RAWCOST_TC            => null
                        ,X_EQPMT_ETC_RAWCOST_FC            => null
                        ,X_EQPMT_ETC_RAWCOST_PC            => null
                        ,X_SP_OTH_ACT_RAWCOST_TODATE_TC    => null
                        ,X_SP_OTH_ACT_RAWCOST_TODATE_FC    => null
                        ,X_SP_OTH_ACT_RAWCOST_TODATE_PC    => null
                        ,X_SUBPRJ_PPL_ACT_RAWCOST_TC       => null
                        ,X_SUBPRJ_PPL_ACT_RAWCOST_FC       => null
                        ,X_SUBPRJ_PPL_ACT_RAWCOST_PC       => null
                        ,X_SUBPRJ_EQPMT_ACT_RAWCOST_TC     => null
                        ,X_SUBPRJ_EQPMT_ACT_RAWCOST_FC     => null
                        ,X_SUBPRJ_EQPMT_ACT_RAWCOST_PC     => null
                        ,X_SUBPRJ_OTH_ETC_RAWCOST_TC       => null
                        ,X_SUBPRJ_OTH_ETC_RAWCOST_FC       => null
                        ,X_SUBPRJ_OTH_ETC_RAWCOST_PC       => null
                        ,X_SUBPRJ_PPL_ETC_RAWCOST_TC       => null
                        ,X_SUBPRJ_PPL_ETC_RAWCOST_FC       => null
                        ,X_SUBPRJ_PPL_ETC_RAWCOST_PC       => null
                        ,X_SUBPRJ_EQPMT_ETC_RAWCOST_TC     => null
                        ,X_SUBPRJ_EQPMT_ETC_RAWCOST_FC     => null
                        ,X_SUBPRJ_EQPMT_ETC_RAWCOST_PC     => null
                        );

                        IF Fnd_Msg_Pub.count_msg > 0 THEN
                            RAISE  FND_API.G_EXC_ERROR;
                        END IF;

                END IF; --  cur_task_assignments_rec.current_flag = 'Y' THEN

                IF cur_task_assignments_rec.current_flag = 'Y' OR cur_task_assignments_rec.current_flag = 'X' THEN
                    l_etc_effort_incr := l_etc_effort_incr * (-1);
                    l_etc_txn_bur_cost_this_period := l_etc_txn_bur_cost_this_period * (-1);
                    l_etc_prj_bur_cost_this_period := l_etc_prj_bur_cost_this_period * (-1);
                    l_etc_pfc_bur_cost_this_period := l_etc_pfc_bur_cost_this_period * (-1);
                    l_etc_txn_raw_cost_this_period := l_etc_txn_raw_cost_this_period * (-1);
                    l_etc_prj_raw_cost_this_period := l_etc_prj_raw_cost_this_period * (-1);
                    l_etc_pfc_raw_cost_this_period := l_etc_pfc_raw_cost_this_period * (-1);

                        -- Bug 4144845 : Removed Completed check from push workplan actuals.
                    --IF PA_PROGRESS_UTILS.get_system_task_status(l_cur_task_old_status_code) <>  'COMPLETED' THEN
                    IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'Pushing Negative Amounts To PJI for Task', x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_txn_bur_cost_this_period='||l_etc_txn_bur_cost_this_period, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_prj_bur_cost_this_period='||l_etc_prj_bur_cost_this_period, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_pfc_bur_cost_this_period='||l_etc_pfc_bur_cost_this_period, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_effort_incr='||l_etc_effort_incr, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_txn_raw_cost_this_period='||l_etc_txn_raw_cost_this_period, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_prj_raw_cost_this_period='||l_etc_prj_raw_cost_this_period, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'l_etc_pfc_raw_cost_this_period='||l_etc_pfc_raw_cost_this_period, x_Log_Level=> 3);
                    END IF;

                    PA_PROGRESS_PUB.push_workplan_actuals(
                          p_project_Id              => p_project_id,
                          p_structure_version_id        => l_structure_version_id,
                          p_proj_element_id         => cur_task_assignments_rec.proj_element_id,
                          p_object_id               => cur_task_assignments_rec.proj_element_id,
                          p_object_type             => 'PA_TASKS',
                          p_as_of_date              => l_push_as_of_date,
                          p_rbs_element_id          => cur_task_assignments_rec.rbs_element_id,
                          p_rate_based_flag         => cur_task_assignments_rec.rate_based_flag,
                          p_resource_class_code         => cur_task_assignments_rec.resource_class_code,
                          p_act_TXN_COST_this_period        => null,
                          p_act_PRJ_COST_this_period        => null,
                          p_act_POU_COST_this_period        => null,
                          p_act_effort_this_period      => null,
                          p_etc_TXN_COST_this_period        => l_etc_txn_bur_cost_this_period,
                          p_etc_PRJ_COST_this_period        => l_etc_prj_bur_cost_this_period,
                          p_etc_POU_COST_this_period        => l_etc_pfc_bur_cost_this_period,
                          p_etc_effort_this_period      => l_etc_effort_incr,
                          p_act_TXN_raw_COST_this_period    => null,
                          p_act_PRJ_raw_COST_this_period    => null,
                          p_act_POU_raw_COST_this_period    => null,
                          p_etc_TXN_raw_COST_this_period    => l_etc_txn_raw_cost_this_period,
                          p_etc_PRJ_raw_COST_this_period    => l_etc_prj_raw_cost_this_period,
                          p_etc_POU_raw_COST_this_period    => l_etc_pfc_raw_cost_this_period,
                          p_txn_currency_code           => cur_task_assignments_rec.txn_currency_code,
                          p_prj_currency_code           => null,
                          p_pfn_currency_code           => null,
                          p_pa_period_name          => null,
                          p_gl_period_name          => null,
                          p_call_pji_apis_flag          => 'N',
                          x_return_status           => x_return_status,
                          x_msg_count               => x_msg_count,
                          x_msg_data                => x_msg_data
                         );
                    --END IF;-- PA_PROGRESS_UTILS.get_system_task_status(l_old_status_code) <>  'COMPLETED' THEN
                END IF; -- IF cur_task_assignments_rec.current_flag = 'Y' OR cur_task_assignments_rec.current_flag = 'X' THEN
                -- Bug 3922325 : Hidden Assignment records also shd be updated
                UPDATE pa_progress_rollup
                SET actual_start_date = decode(actual_start_date, null, cur_task_assignments_rec.assignment_start_date, actual_start_date),
                   Actual_Finish_date  = p_actual_finish_date,
                   estimated_remaining_effort = 0,
                   EQPMT_ETC_EFFORT = 0,
                   oth_etc_quantity = 0,
                   OTH_ETC_COST_TC = 0,
                   OTH_ETC_COST_FC = 0,
                   OTH_ETC_COST_PC = 0,
                   OTH_ETC_RAWCOST_TC = 0,
                   OTH_ETC_RAWCOST_FC = 0,
                   OTH_ETC_RAWCOST_PC = 0,
                   PPL_ETC_COST_TC= 0,
                   PPL_ETC_COST_FC= 0,
                   PPL_ETC_COST_PC = 0,
                   PPL_ETC_RAWCOST_TC= 0,
                   PPL_ETC_RAWCOST_FC= 0,
                   PPL_ETC_RAWCOST_PC = 0,
                   EQPMT_ETC_COST_TC = 0,
                   EQPMT_ETC_COST_FC = 0,
                   EQPMT_ETC_COST_PC = 0,
                   EQPMT_ETC_RAWCOST_TC = 0,
                   EQPMT_ETC_RAWCOST_FC = 0,
                   EQPMT_ETC_RAWCOST_PC = 0
                WHERE object_id = cur_task_assignments_rec.resource_list_member_id
                and current_flag IN ('Y', 'W')
                AND object_type = 'PA_ASSIGNMENTS'
                AND structure_type = p_structure_type
                AND proj_element_id = cur_task_assignments_rec.proj_element_id
                AND structure_version_id IS NULL
                AND project_id = p_project_id;
            END LOOP; -- cur_task_assignments_rec in cur_system_assignment(p_object_version_id, p_object_id) LOOP
        END IF; -- IF NVL(l_lowest_level_task, 'N') = 'Y' AND NVL(l_assignment_exists,'Y') = 'N' THEN

        --Update pa_proj_elements
        UPDATE pa_proj_elements
        SET status_code = p_task_status
	,last_update_date = decode(status_code,p_task_status,last_update_date,sysdate) --Bug 5978904
        ,last_update_login = decode(status_code,p_task_status,last_update_login,l_login_id) --Bug 5978904
        ,last_updated_by = decode(status_code,p_task_status,last_updated_by,l_user_id)  --Bug 5978904
        WHERE proj_element_id = cur_tasks_rec.proj_element_id
        AND project_id = p_project_id
        AND PA_PROGRESS_UTILS.get_system_task_status( status_code )
        NOT IN ( 'CANCELLED', 'COMPLETED' );


        -- Update Percent complete --
            UPDATE pa_percent_completes
                SET status_code = p_task_status,
                   completed_percentage = 100,
                   Actual_Finish_date   = p_actual_finish_date,
           actual_start_date = decode(actual_start_date, null, cur_tasks_rec.scheduled_start_date, actual_start_date)
        WHERE object_id = cur_tasks_rec.proj_element_id
        AND project_id = p_project_id
        AND task_id = cur_tasks_rec.proj_element_id
        AND object_type = 'PA_TASKS'
        AND structure_type = p_structure_type
        AND ((current_flag = 'Y' and published_flag = 'Y') or
            (current_flag = 'N' and published_flag = 'N'))
                AND PA_PROGRESS_UTILS.get_system_task_status( status_code )
                        NOT IN ( 'CANCELLED', 'COMPLETED' )
        ;

        --Update pa_progress_rollup
        UPDATE pa_progress_rollup
        SET Actual_Finish_date  = p_actual_finish_date,
           actual_start_date = decode(actual_start_date, null, cur_tasks_rec.scheduled_start_date, actual_start_date),
           completed_percentage = 100,
           estimated_remaining_effort = 0,
           EQPMT_ETC_EFFORT = 0,
           oth_etc_quantity = 0,
           OTH_ETC_COST_TC = 0,
           OTH_ETC_COST_FC = 0,
           OTH_ETC_COST_PC = 0,
           OTH_ETC_RAWCOST_TC = 0,
           OTH_ETC_RAWCOST_FC = 0,
           OTH_ETC_RAWCOST_PC = 0,
           PPL_ETC_COST_TC= 0,
           PPL_ETC_COST_FC= 0,
           PPL_ETC_COST_PC = 0,
           PPL_ETC_RAWCOST_TC= 0,
           PPL_ETC_RAWCOST_FC= 0,
           PPL_ETC_RAWCOST_PC = 0,
           EQPMT_ETC_COST_TC = 0,
           EQPMT_ETC_COST_FC = 0,
           EQPMT_ETC_COST_PC = 0,
           EQPMT_ETC_RAWCOST_TC = 0,
           EQPMT_ETC_RAWCOST_FC = 0,
           EQPMT_ETC_RAWCOST_PC = 0
        WHERE object_id = cur_tasks_rec.proj_element_id
        and current_flag IN ('Y', 'W')
        AND object_type = 'PA_TASKS'
        AND structure_type = p_structure_type
        AND proj_element_id = cur_tasks_rec.proj_element_id
        AND structure_version_id IS NULL
        AND project_id = p_project_id;

        -- 3922325 : Added code to create task record if they do not exists
        IF sql%notfound THEN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_DOWN_TASK_STATUS', x_Msg => 'Inserting Tasks Record in PA_PROGRESS_ROLLUP ', x_Log_Level=> 3);
            END IF;

            l_percent_complete := 100;
            l_PROGRESS_ROLLUP_ID := null;
            l_push_as_of_date    := p_as_of_date;
            l_prog_pa_period_name := PA_PROGRESS_UTILS.Prog_Get_Pa_Period_Name(l_push_as_of_date);
            l_prog_gl_period_name := PA_PROGRESS_UTILS.Prog_Get_GL_Period_Name(l_push_as_of_date);

                          PA_PROGRESS_ROLLUP_PKG.INSERT_ROW(
                   X_PROGRESS_ROLLUP_ID  =>  l_PROGRESS_ROLLUP_ID
                  ,X_PROJECT_ID          =>p_project_id
                  ,X_OBJECT_ID           => cur_tasks_rec.proj_element_id
                  ,X_OBJECT_TYPE         => 'PA_TASKS'
                  ,X_AS_OF_DATE                      => l_push_as_of_date
                  ,X_OBJECT_VERSION_ID               => cur_tasks_rec.object_id_to1
                  ,X_LAST_UPDATE_DATE                => SYSDATE
                  ,X_LAST_UPDATED_BY                 => l_user_id
                  ,X_CREATION_DATE                   => SYSDATE
                  ,X_CREATED_BY                      => l_user_id
                  ,X_PROGRESS_STATUS_CODE            => l_prog_stats_code--'PROGRESS_STAT_ON_TRACK'
                  ,X_LAST_UPDATE_LOGIN               => l_login_id
                  ,X_INCREMENTAL_WORK_QTY            => null
                  ,X_CUMULATIVE_WORK_QTY             => null
                  ,X_BASE_PERCENT_COMPLETE           => null
                  ,X_EFF_ROLLUP_PERCENT_COMP         => null
                  ,X_COMPLETED_PERCENTAGE            => l_percent_complete
                  ,X_ESTIMATED_START_DATE            => null
                  ,X_ESTIMATED_FINISH_DATE           => null
                  ,X_ACTUAL_START_DATE               => cur_tasks_rec.scheduled_start_date
                  ,X_ACTUAL_FINISH_DATE              => p_actual_finish_date
                  ,X_EST_REMAINING_EFFORT            => null
                  ,X_BASE_PERCENT_COMP_DERIV_CODE    => null
                  ,X_BASE_PROGRESS_STATUS_CODE       => l_prog_stats_code--'PROGRESS_STAT_ON_TRACK'
                  ,X_EFF_ROLLUP_PROG_STAT_CODE       => null
                  ,x_percent_complete_id             => null
                ,X_STRUCTURE_TYPE                   =>  'WORKPLAN'
                ,X_PROJ_ELEMENT_ID                  =>  cur_tasks_rec.proj_element_id
                ,X_STRUCTURE_VERSION_ID             =>  null
                ,X_PPL_ACT_EFFORT_TO_DATE           =>  null
                ,X_EQPMT_ACT_EFFORT_TO_DATE         =>  null
                ,X_EQPMT_ETC_EFFORT                 =>  null
                ,X_OTH_ACT_COST_TO_DATE_TC          =>  null
                ,X_OTH_ACT_COST_TO_DATE_FC          =>  null
                ,X_OTH_ACT_COST_TO_DATE_PC          =>  null
                ,X_OTH_ETC_COST_TC                  =>  null
                ,X_OTH_ETC_COST_FC                  =>  null
                ,X_OTH_ETC_COST_PC                  =>  null
                ,X_PPL_ACT_COST_TO_DATE_TC          =>  null
                ,X_PPL_ACT_COST_TO_DATE_FC          =>  null
                ,X_PPL_ACT_COST_TO_DATE_PC          =>  null
                ,X_PPL_ETC_COST_TC                  =>  null
                ,X_PPL_ETC_COST_FC                  =>  null
                ,X_PPL_ETC_COST_PC                  =>  null
                ,X_EQPMT_ACT_COST_TO_DATE_TC        =>  null
                ,X_EQPMT_ACT_COST_TO_DATE_FC        =>  null
                ,X_EQPMT_ACT_COST_TO_DATE_PC        =>  null
                ,X_EQPMT_ETC_COST_TC                =>  null
                ,X_EQPMT_ETC_COST_FC                =>  null
                ,X_EQPMT_ETC_COST_PC                =>  null
                ,X_EARNED_VALUE                     =>  null
                ,X_TASK_WT_BASIS_CODE               =>  null
                ,X_SUBPRJ_PPL_ACT_EFFORT            =>  null
                ,X_SUBPRJ_EQPMT_ACT_EFFORT          =>  null
                ,X_SUBPRJ_PPL_ETC_EFFORT            =>  null
                ,X_SUBPRJ_EQPMT_ETC_EFFORT          =>  null
                ,X_SBPJ_OTH_ACT_COST_TO_DATE_TC     =>  null
                ,X_SBPJ_OTH_ACT_COST_TO_DATE_FC     =>  null
                ,X_SBPJ_OTH_ACT_COST_TO_DATE_PC     =>  null
                ,X_SUBPRJ_PPL_ACT_COST_TC           =>  null
                ,X_SUBPRJ_PPL_ACT_COST_FC           =>  null
                ,X_SUBPRJ_PPL_ACT_COST_PC           =>  null
                ,X_SUBPRJ_EQPMT_ACT_COST_TC         =>  null
                ,X_SUBPRJ_EQPMT_ACT_COST_FC         =>  null
                ,X_SUBPRJ_EQPMT_ACT_COST_PC         =>  null
                ,X_SUBPRJ_OTH_ETC_COST_TC           =>  null
                ,X_SUBPRJ_OTH_ETC_COST_FC           =>  null
                ,X_SUBPRJ_OTH_ETC_COST_PC           =>  null
                ,X_SUBPRJ_PPL_ETC_COST_TC           =>  null
                ,X_SUBPRJ_PPL_ETC_COST_FC           =>  null
                ,X_SUBPRJ_PPL_ETC_COST_PC           =>  null
                ,X_SUBPRJ_EQPMT_ETC_COST_TC         =>  null
                ,X_SUBPRJ_EQPMT_ETC_COST_FC         =>  null
                ,X_SUBPRJ_EQPMT_ETC_COST_PC         =>  null
                ,X_SUBPRJ_EARNED_VALUE              =>  null
                ,X_CURRENT_FLAG                     =>  'Y'
                ,X_PROJFUNC_COST_RATE_TYPE       => null
                ,X_PROJFUNC_COST_EXCHANGE_RATE      => null
                ,X_PROJFUNC_COST_RATE_DATE       => null
                ,X_PROJ_COST_RATE_TYPE              => null
                ,X_PROJ_COST_EXCHANGE_RATE       => null
                ,X_PROJ_COST_RATE_DATE              => null
                ,X_TXN_CURRENCY_CODE                => null
                ,X_PROG_PA_PERIOD_NAME              => l_prog_pa_period_name
                ,X_PROG_GL_PERIOD_NAME              => l_prog_gl_period_name
                ,X_OTH_QUANTITY_TO_DATE             => null
                ,X_OTH_ETC_QUANTITY                 => null
                ,X_OTH_ACT_RAWCOST_TO_DATE_TC         => null
                ,X_OTH_ACT_RAWCOST_TO_DATE_FC         => null
                ,X_OTH_ACT_RAWCOST_TO_DATE_PC         => null
                ,X_OTH_ETC_RAWCOST_TC               => null
                ,X_OTH_ETC_RAWCOST_FC               => null
                ,X_OTH_ETC_RAWCOST_PC               => null
                ,X_PPL_ACT_RAWCOST_TO_DATE_TC         => null
                ,X_PPL_ACT_RAWCOST_TO_DATE_FC         => null
                ,X_PPL_ACT_RAWCOST_TO_DATE_PC         => null
                ,X_PPL_ETC_RAWCOST_TC             => null
                ,X_PPL_ETC_RAWCOST_FC             => null
                ,X_PPL_ETC_RAWCOST_PC             => null
                ,X_EQPMT_ACT_RAWCOST_TO_DATE_TC  => null
                ,X_EQPMT_ACT_RAWCOST_TO_DATE_FC  => null
                ,X_EQPMT_ACT_RAWCOST_TO_DATE_PC  => null
                ,X_EQPMT_ETC_RAWCOST_TC            => null
                ,X_EQPMT_ETC_RAWCOST_FC            => null
                ,X_EQPMT_ETC_RAWCOST_PC            => null
                ,X_SP_OTH_ACT_RAWCOST_TODATE_TC  => null
                ,X_SP_OTH_ACT_RAWCOST_TODATE_FC  => null
                ,X_SP_OTH_ACT_RAWCOST_TODATE_PC  => null
                ,X_SUBPRJ_PPL_ACT_RAWCOST_TC          => null
                ,X_SUBPRJ_PPL_ACT_RAWCOST_FC          => null
                ,X_SUBPRJ_PPL_ACT_RAWCOST_PC          => null
                ,X_SUBPRJ_EQPMT_ACT_RAWCOST_TC   => null
                ,X_SUBPRJ_EQPMT_ACT_RAWCOST_FC   => null
                ,X_SUBPRJ_EQPMT_ACT_RAWCOST_PC   => null
                ,X_SUBPRJ_OTH_ETC_RAWCOST_TC          => null
                ,X_SUBPRJ_OTH_ETC_RAWCOST_FC          => null
                ,X_SUBPRJ_OTH_ETC_RAWCOST_PC          => null
                ,X_SUBPRJ_PPL_ETC_RAWCOST_TC          => null
                ,X_SUBPRJ_PPL_ETC_RAWCOST_FC          => null
                ,X_SUBPRJ_PPL_ETC_RAWCOST_PC          => null
                ,X_SUBPRJ_EQPMT_ETC_RAWCOST_TC   => null
                ,X_SUBPRJ_EQPMT_ETC_RAWCOST_FC   => null
                ,X_SUBPRJ_EQPMT_ETC_RAWCOST_PC   => null
              );

                IF Fnd_Msg_Pub.count_msg > 0 THEN
                    RAISE  FND_API.G_EXC_ERROR;
                END IF;

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS', x_Msg => 'Inserted Tasks Record in PA_PROGRESS_ROLLUP ', x_Log_Level=> 3);
            END IF;
        END IF;

        END LOOP;
    -- Bug 3922325 : No Need to call plan_update here. It will be taken care in update_progress code
    /*
        BEGIN
            PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE (x_msg_code => l_msg_code,
                               x_return_status => x_return_status);
        EXCEPTION
           WHEN OTHERS THEN
            fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                    p_procedure_name => 'PUSH_DOWN_TASK_STATUS',
                    p_error_text     => SUBSTRB('Call PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE:'||SQLERRM,1,120));
            RAISE FND_API.G_EXC_ERROR;
        END;

        IF x_return_status <> 'S' THEN
            RAISE FND_API.G_EXC_ERROR;
        END IF;

        l_base_struct_ver_id := pa_project_structure_utils.get_baseline_struct_ver(p_project_id);

        IF (l_base_struct_ver_id = -1) THEN
            l_base_struct_ver_id := l_structure_version_id;
        END IF;

        BEGIN
            PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data(
                    p_project_id        => p_project_id,
                    p_struct_ver_id      => l_structure_version_id,
                    p_base_struct_ver_id => l_base_struct_ver_id,
                    x_return_status     => x_return_status,
                    x_msg_code          => l_msg_code
                    );
        EXCEPTION
           WHEN OTHERS THEN
            fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                    p_procedure_name => 'PUSH_DOWN_TASK_STATUS',
                    p_error_text     => SUBSTRB('Call PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data:'||SQLERRM,1,120));
            RAISE FND_API.G_EXC_ERROR;
        END;

        IF x_return_status <> 'S' THEN
            RAISE FND_API.G_EXC_ERROR;
        END IF;
    -- Bug 3878024 : End
    */
    END IF;
------------------  Added for FP_M changes : END

    IF PA_PROGRESS_UTILS.get_system_task_status( p_task_status ) in ( 'CANCELLED', 'ON_HOLD' )
    THEN
    -- Bug 3878024 : Commented the below code. Now cursor cur_tasks_rec will select the passed task too
    /*
        --Update pa_proj_elementso
        UPDATE pa_proj_elements
           SET status_code = p_task_status
          WHERE proj_element_id = p_object_id
            AND project_id = p_project_id;

        -- FP M : 3491609 : Project Execution Workflow

           -- Cancel the WF if its running.
           If p_task_status = 'CANCELLED' then
               PA_WORKPLAN_WORKFLOW.CANCEL_TASK_EXECUTION_WF
                 (  p_task_id      => p_object_id
                  ,x_msg_count     => x_msg_count
                  ,x_msg_data      => x_msg_data
                  ,x_return_status => x_return_status
                 ) ;

                if x_return_status <> FND_API.g_ret_sts_success then
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR ;
                end if ;
           end if ;

        -- FP M : 3491609 : Project Execution Workflow
    */


        FOR cur_tasks_rec in cur_tasks LOOP
            --Update pa_proj_elementso
            UPDATE  pa_proj_elements
               SET status_code = p_task_status
	       ,last_update_date = decode(status_code,p_task_status,last_update_date,sysdate) --Bug 5978904
               ,last_update_login = decode(status_code,p_task_status,last_update_login,l_login_id) --Bug 5978904
               ,last_updated_by = decode(status_code,p_task_status,last_updated_by,l_user_id)  --Bug 5978904
             WHERE proj_element_id = cur_tasks_rec.proj_element_id
               AND project_id = p_project_id
               and object_type = 'PA_TASKS'
                -- Taks Status does not drill down to Delievrables IN ('PA_TASKS', 'PA_DELIVERABLES')
               AND PA_PROGRESS_UTILS.get_system_task_status( status_code )
                        NOT IN ( 'CANCELLED', 'COMPLETED' );

            UPDATE pa_percent_completes
               SET status_code = p_task_status
             WHERE object_id = cur_tasks_rec.proj_element_id
               AND project_id = p_project_id
               and object_type = 'PA_TASKS'
               and structure_type = p_structure_type -- FPM Dev CR 3
                -- Taks Status does not drill down to Delievrables IN ('PA_TASKS', 'PA_DELIVERABLES')
               AND PA_PROGRESS_UTILS.get_system_task_status( status_code )
                        NOT IN ( 'CANCELLED', 'COMPLETED' )
               AND ((current_flag = 'Y' and published_flag = 'Y') or
                    (current_flag = 'N' and published_flag = 'N'));

             -- FP M : 3491609 : Project Execution Workflow

                -- Cancel the WF if its running.
                If p_task_status = 'CANCELLED' then
                        PA_WORKPLAN_WORKFLOW.CANCEL_TASK_EXECUTION_WF (
                            p_task_id      => cur_tasks_rec.proj_element_id
                           ,x_msg_count     => x_msg_count
                           ,x_msg_data      => x_msg_data
                           ,x_return_status => x_return_status
                        ) ;

                        if x_return_status <> FND_API.g_ret_sts_success then
                                RAISE FND_API.G_EXC_UNEXPECTED_ERROR ;
                        end if ;

                end if ;
             -- FP M : 3491609 : Project Execution Workflow
        END LOOP;
    ELSE

         IF PA_PROGRESS_UTILS.get_system_task_status ( l_old_status_code ) = 'ON_HOLD'
         THEN
           FOR cur_tasks_rec in cur_tasks LOOP
           IF p_object_id <> cur_tasks_rec.proj_element_id THEN -- Bug 3878024

           --- 4743866
               open get_task_pc_info(cur_tasks_rec.proj_element_id);
               fetch get_task_pc_info into get_task_pc_info_rec;
               close get_task_pc_info;
           --- 4743866 changed cur_tasks_rec to get_task_pc_info_rec in code below

                 IF get_task_pc_info_rec.completed_percentage = 0 AND
                    get_task_pc_info_rec.actual_start_date IS NULL
                 THEN
                     l_status_code := '124';
                 ELSIF get_task_pc_info_rec.completed_percentage > 0 AND
                       get_task_pc_info_rec.completed_percentage < 100 AND
                       get_task_pc_info_rec.actual_start_date IS NOT NULL AND
                       get_task_pc_info_rec.actual_finish_date IS NULL
                 THEN
                     l_status_code := '125';
                 ELSIF get_task_pc_info_rec.completed_percentage = 100 AND
                       get_task_pc_info_rec.actual_start_date IS NOT NULL AND
                       get_task_pc_info_rec.actual_finish_date IS NOT NULL
                 THEN
                     l_status_code := '127';
                 ELSE
                     l_status_code := '124';  --if p_as_of_date is g_miss_date
                 END IF;
                  --Update pa_proj_elementso
          if (nvl(get_task_pc_info_rec.published_flag,'X') <> 'N' and
              nvl(get_task_pc_info_rec.current_flag,'X') <> 'N') then
                 UPDATE pa_proj_elements
                    SET status_code = l_status_code
		    ,last_update_date = decode(status_code,l_status_code,last_update_date,sysdate) --Bug 5978904
                    ,last_update_login = decode(status_code,l_status_code,last_update_login,l_login_id) --Bug 5978904
                    ,last_updated_by = decode(status_code,l_status_code,last_updated_by,l_user_id)  --Bug 5978904
                  WHERE proj_element_id = cur_tasks_rec.proj_element_id
                    AND project_id = p_project_id
                    and Object_Type = 'PA_TASKS'  -- Bhumesh
                    AND PA_PROGRESS_UTILS.get_system_task_status( status_code )
                                NOT IN ( 'CANCELLED', 'COMPLETED' );

          end if;

          if (get_task_pc_info_rec.published_flag = 'Y' and get_task_pc_info_rec.current_flag = 'Y') then
                 UPDATE pa_percent_completes
                    SET status_code = l_status_code
                  WHERE object_id = cur_tasks_rec.proj_element_id
                    AND project_id = p_project_id
                    and Object_Type = 'PA_TASKS'  -- Bhumesh
                    and structure_type = p_structure_type -- FPM Dev CR 3
                    AND PA_PROGRESS_UTILS.get_system_task_status( status_code )
                        NOT IN ( 'CANCELLED', 'COMPLETED' )
                    AND current_flag = 'Y' and published_flag = 'Y';
          elsif (get_task_pc_info_rec.published_flag = 'N' and get_task_pc_info_rec.current_flag = 'N') then
                 UPDATE pa_percent_completes
                    SET status_code = l_status_code
                  WHERE object_id = cur_tasks_rec.proj_element_id
                    AND project_id = p_project_id
                    and Object_Type = 'PA_TASKS'  -- Bhumesh
                    and structure_type = p_structure_type -- FPM Dev CR 3
                    AND PA_PROGRESS_UTILS.get_system_task_status( status_code )
                        NOT IN ( 'CANCELLED', 'COMPLETED' )
                    AND current_flag = 'N' and published_flag = 'N';
          end if;
           END IF;-- p_object_id <> cur_tasks_rec.proj_element_id THEN -- Bug 3878024
             END LOOP;
         END IF;
    END IF;

EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to push_down_task_status;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to push_down_task_status;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'push_down_task_status',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to push_down_task_status;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'push_down_task_status',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END push_down_task_status;

PROCEDURE ROLLUP_FUTURE_PROGRESS_PVT(
 p_project_id              IN   NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,P_OBJECT_TYPE            IN   VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,P_OBJECT_ID              IN   NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_version_id      IN   NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_as_of_date             IN   DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_lowest_level_task      IN   VARCHAR2        := 'N'
 ,p_calling_module         IN   VARCHAR2        := 'SELF_SERVICE'
 ,p_structure_type         IN   VARCHAR2        := 'WORKPLAN'
 ,p_structure_version_id   IN   NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_fin_rollup_method      IN   VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_wp_rollup_method       IN   VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_rollup_entire_wbs      IN   VARCHAR2        := 'N' -- Bug 3606627
 ,x_return_status          OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count              OUT  NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data               OUT  NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
 IS

   l_return_status                 VARCHAR2(1)                                          ;
   l_msg_count                     NUMBER                                               ;
   l_msg_data                      VARCHAR2(250)                                        ;
   l_data                          VARCHAR2(250)                                        ;
   g1_debug_mode                    VARCHAR2(1);

BEGIN

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT');
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'P_OBJECT_TYPE='||P_OBJECT_TYPE, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'P_OBJECT_ID='||P_OBJECT_ID, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'p_object_version_id='||p_object_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'p_lowest_level_task='||p_lowest_level_task, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'p_structure_version_id='||p_structure_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'p_structure_type='||p_structure_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'p_fin_rollup_method='||p_fin_rollup_method, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'p_wp_rollup_method='||p_wp_rollup_method, x_Log_Level=> 3);
        END IF;

        -- Bug # 3879910. Call corresponding API in package: PA_PROGRESS_PVT.

    PA_PROGRESS_PVT.ROLLUP_FUTURE_PROGRESS_PVT(
    p_project_id         => p_project_id
    ,P_OBJECT_TYPE       => P_OBJECT_TYPE
    ,P_OBJECT_ID         => P_OBJECT_ID
    ,p_object_version_id     => p_object_version_id
    ,p_as_of_date        => p_as_of_date
    ,p_lowest_level_task     => p_lowest_level_task
    ,p_calling_module    => p_calling_module
    ,p_structure_type    => p_structure_type
    ,p_structure_version_id  => p_structure_version_id
    ,p_fin_rollup_method     => p_fin_rollup_method
    ,p_wp_rollup_method  => p_wp_rollup_method
    ,p_rollup_entire_wbs     => p_rollup_entire_wbs
    ,x_return_status     => l_return_status
    ,x_msg_count         => l_msg_count
    ,x_msg_data      => l_msg_data);

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                    p_msg_name       => l_msg_data);
               x_msg_data := l_msg_data;
               x_return_status := 'E';
               x_msg_count := l_msg_count;
               RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;


        x_return_status := FND_API.G_RET_STS_SUCCESS;

    IF g1_debug_mode  = 'Y' THEN
         pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ROLLUP_FUTURE_PROGRESS_PVT', x_Msg => 'End ', x_Log_Level=> 3);
    END IF;
EXCEPTION
        WHEN OTHERS THEN
                x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'ROLLUP_FUTURE_PROGRESS_PVT',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
                raise;
END ROLLUP_FUTURE_PROGRESS_PVT;

-- Update_PC_PARTY_MAERGE (PUBLIC)
--   This is the procedure being called during the Party Merge.
--   The input/output arguments format matches the document PartyMergeDD.doc.
--   The goal is to fix the PUBLISHED_BY_PARTY_ID in pa_percent_completes table to point to the
--   same party when two similar parties are begin merged.
--
-- Usage example in pl/sql
--   This procedure should only be called from the PartyMerge utility.
--
procedure Update_PC_PARTY_MERGE(p_entity_name in varchar2,
                                p_from_id in number,
                        p_to_id in out nocopy number,
                        p_from_fk_id in number,
                        p_to_fk_id in number,
                        p_parent_entity_name in varchar2,
                        p_batch_id in number,
                        p_batch_party_id in number,
                        p_return_status in out nocopy varchar2) is
begin
  p_return_status := FND_API.G_RET_STS_SUCCESS;

  if (p_from_fk_id <> p_to_fk_id) then

    update pa_percent_completes
    set PUBLISHED_BY_PARTY_ID = p_to_fk_id,
               last_update_date = hz_utility_pub.last_update_date,
               last_updated_by  = hz_utility_pub.user_id,
               last_update_login = hz_utility_pub.last_update_login
    where PUBLISHED_BY_PARTY_ID = p_from_fk_id
   ;
    p_to_id := p_from_id;

  end if;

end Update_PC_PARTY_MERGE;

-- Progress Management Changes. Bug # 3420093.

PROCEDURE APPLY_LP_PROG_ON_CWV(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER
 ,p_working_str_version_id      IN      NUMBER
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'APPLY_LP_PROG_ON_CWV';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_msg_code                      VARCHAR2(12000);
   l_etc_start_date                DATE;


CURSOR C1(p_project_id NUMBER, p_working_str_version_id NUMBER) is
--  Bug # 4581937.
        select ppr.*
        from pa_progress_rollup ppr, pa_proj_element_versions ppev --4871809
        where ppr.project_id = p_project_id
        and ppr.structure_version_id is null
        and ppr.object_type in ('PA_STRUCTURES','PA_ASSIGNMENTS','PA_TASKS')
        --and pa_proj_elements_utils.is_lowest_task(ppr.object_version_id) = 'Y'  --bug 4050532
        and structure_type = 'WORKPLAN' -- FPM Dev CR 3
        and current_flag = 'Y'
        and ppr.proj_element_id = ppev.proj_element_id
        and ppev.parent_structure_version_id = p_working_str_version_id
        and nvl(ppev.task_unpub_ver_status_code,'X') <>'TO_BE_DELETED' ;


CURSOR C2(p_project_id NUMBER) is
                select max(as_of_date)
                from pa_progress_rollup ppr
                where ppr.project_id = p_project_id
                and ppr.structure_version_id is null
                and ppr.structure_type = 'WORKPLAN'
            and ppr.current_flag <> 'W'   -- Bug 3879461
        ;

-- FPM Dev CR 4 : Added the cusrosr c_get_work_obj_ver_id
CURSOR c_get_work_obj_ver_id(c_proj_element_id NUMBER, c_structure_version_id NUMBER) IS
                select element_version_id
                from pa_proj_element_versions
                where project_id = p_project_id
                and proj_element_id = c_proj_element_id
                and parent_structure_version_id = c_structure_version_id;

-- Bug 3764224 : Changed the cusrosr c4 def'n
cursor c4 (p_project_id NUMBER, p_object_id NUMBER, p_working_str_version_id NUMBER, p_task_id NUMBER) is
    select ptav1.resource_assignment_id, ptav1.resource_list_member_id, ptav1.txn_currency_code
           ,ptav1.resource_class_code, ptav1.rate_based_flag, ptav1.rbs_element_id
    from pa_task_asgmts_v ptav1
    where ptav1.resource_list_member_id = p_object_id
    and ptav1.structure_version_id = p_working_str_version_id
    and ptav1.task_id = p_task_id
     ;

cursor c5 (p_project_id NUMBER, p_res_list_member_id NUMBER, p_task_id NUMBER,
           p_task_version_id NUMBER, p_structure_version_id NUMBER) is
    select rbs_element_id, rate_based_flag, resource_class_code, txn_currency_code
           ,resource_list_member_id ,resource_assignment_id--bug 3935699
    from pa_task_asgmts_v
    where project_id  = p_project_id
    and resource_list_member_id = p_res_list_member_id -- Commented out to fix Bug # 3815741.
                --uncommented the resource_list_member_id for bug 3839699
    and task_id = p_task_id
    and task_version_id = p_task_version_id
    and structure_version_id = p_structure_version_id;

    CURSOR cur_proj_elements(c_proj_element_id NUMBER)
IS

     SELECT decode( ppe.base_percent_comp_deriv_code, null, ptt.base_percent_comp_deriv_code, '^', ptt.base_percent_comp_deriv_code, ppe.base_percent_comp_deriv_code )
     from pa_proj_elements ppe
         ,pa_task_types ptt   --added during the bugfix 3962823.
    where ppe.project_id = p_project_id
     and ppe.proj_element_id = c_proj_element_id
     and ppe.type_id = ptt.task_type_id
     ;

--bug 3846474
cursor all_lowest_task
is
  select task_version_id, 'PA_ASSIGNMENTS' object_type,
         resource_assignment_id, TXN_CURRENCY_CODE
    from pa_task_asgmts_v ptav
   where ptav.project_id= p_project_id
     and ptav.structure_version_id = p_working_str_version_id
     and ptav.planning_start_date <= l_etc_start_date
-- Bug 3958686 : Commenting the ta_display_flag portion
     and NOT EXISTS ( select 'x' from pa_progress_rollup
                       where project_id=p_project_id
                       and object_id = ptav.resource_list_member_id
                       and proj_element_id = ptav.task_id
                       and object_type = 'PA_ASSIGNMENTS'
               and structure_type = 'WORKPLAN' -- Bug 3879461
                       and structure_version_id is null
                       and current_flag = 'Y'
                       );
cursor l_scheduled_dates_cur(p_project_id NUMBER, p_object_id NUMBER, p_object_version_id NUMBER) is
select scheduled_start_date
       ,scheduled_finish_date
from pa_proj_elem_ver_schedule
where project_id = p_project_id
      and proj_element_id = p_object_id
      and element_version_id = p_object_version_id;

cursor l_ptav_cur(p_project_id NUMBER, p_object_id NUMBER, p_task_id NUMBER, p_task_version_id NUMBER) is
select resource_class_code
       ,resource_list_member_id
       ,assignment_start_date
       ,assignment_end_date
       ,txn_currency_code
       ,resource_assignment_id
       -- Bug 3818439 : Added planned amount here
       ,planned_quantity
       ,planned_bur_cost_txn_cur
       ,planned_bur_cost_projfunc
       ,planned_bur_cost_proj_cur
       ,planned_raw_cost_txn_cur
       ,planned_raw_cost_proj_cur
       ,planned_raw_cost_projfunc
       ,rate_based_flag               --bug 3841547
       ,ta_display_flag               --bug 4021315
from pa_task_asgmts_v
where project_id = p_project_id
--      and resource_assignment_id = p_object_id Bug 3764224
      and resource_list_member_id = p_object_id -- Bug 3764224
      and task_id = p_task_id
      --and task_version_id = p_task_version_id    --bug 3911600
      and structure_version_id = pa_proj_elements_utils.latest_published_ver_id(p_project_id,'WORKPLAN');

cursor cur_proj_prog_attr
is
select pppa.task_weight_basis_code
from pa_proj_progress_attr pppa
where project_id=p_project_id
and structure_type ='WORKPLAN'
;

l_work_obj_ver_id    NUMBER; -- FPM Dev CR 4

l_c1rec c1%rowtype;
l_c4rec c4%rowtype;
l_c5rec c5%rowtype;

l_progress_rollup_id NUMBER := null;
l_max_as_of_date date;
l_as_of_date    date;

l_task_ver_id_tbl_task              SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_planned_effort_tbl_task           SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_start_date_tbl_task               SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();
l_end_date_tbl_task                 SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();

l_raw_cost_tbl_task                 SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_burdened_cost_tbl_task            SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();

l_task_ver_id_tbl_assgn              SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_planned_ppl_effort_tbl_assgn       SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_planned_eqp_effort_tbl_assgn       SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_planned_qty_tbl_assgn              SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_start_date_tbl_assgn               SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();
l_end_date_tbl_assgn                 SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();
l_res_list_mem_tbl_assgn             SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_res_assgn_id_tbl_assgn             SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_currency_code_tbl_assgn            SYSTEM.pa_varchar2_15_tbl_type := SYSTEM.pa_varchar2_15_tbl_type();

l_raw_cost_tbl_assgn            SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_burdened_cost_tbl_assgn       SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();


l_act_TXN_COST_this_period      NUMBER := 0;
l_act_PRJ_COST_this_period      NUMBER := 0;
l_act_POU_COST_this_period      NUMBER := 0;
l_act_effort_this_period        NUMBER := 0;
-- Bug 3621404 : Raw Cost Changes Begin
l_act_TXN_RAWCOST_this_period   NUMBER := 0;
l_act_PRJ_RAWCOST_this_period   NUMBER := 0;
l_act_POU_RAWCOST_this_period   NUMBER := 0;
l_etc_TXN_COST_this_period      NUMBER := 0;
l_etc_PRJ_COST_this_period      NUMBER := 0;
l_etc_POU_COST_this_period      NUMBER := 0;
l_etc_TXN_RAWCOST_this_period   NUMBER := 0;
l_etc_PRJ_RAWCOST_this_period   NUMBER := 0;
l_etc_POU_RAWCOST_this_period   NUMBER := 0;
l_etc_effort_this_period        NUMBER := 0;
-- Bug 3621404 : Raw Cost Changes End

l_version_enabled_flag VARCHAR2(1) := null;

l_project_ids                   SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_struture_version_ids          SYSTEM.pa_num_tbl_type := SYSTEM.pa_num_tbl_type();
l_proj_thru_dates_tbl           SYSTEM.pa_date_tbl_type := SYSTEM.pa_date_tbl_type();

l_res_assign_id_out             NUMBER := null;
l_task_version_id_out           NUMBER := null;
l_txn_curr_code_out             VARCHAR2(15) := null;
L_NEW_RESOURCE_LIST_MEM_ID  NUMBER; -- Bug 3764224
l_rate_based_flag_x             VARCHAR2(1);
l_rbs_element_id                NUMBER;

l_etc    NUMBER := 0;       --bug 3826599
l_assignment_exists   VARCHAR2(1); -- Bug 3834339
l_scheduled_dates_rec l_scheduled_dates_cur%rowtype;
l_ptav_rec l_ptav_cur%rowtype;
l_res_assgmt_id NUMBER; --bug 4021315
l_prev_act_effort NUMBER := null;
l_prev_etc_effort NUMBER := null;

l_task_weight_basis_code VARCHAR2(30);
l_baselined_str_ver_id   NUMBER;

--added for percent complete recalculation at the lowest level task as per the new planned effort.
l_EFF_ROLLUP_PERCENT_COMP  NUMBER;
l_planned_effort           NUMBER;
l_planned_cost             NUMBER;
l_BASE_PERCENT_COMP_DERIV_CODE   VARCHAR2(30);
l_earned_value            NUMBER;
g1_debug_mode             VARCHAR2(1);
l_track_wp_cost_flag  VARCHAR2(1) := 'Y'; -- Bug 3801745
l_task_assgn NUMBER := null;
l_new_resource_assignment_id  NUMBER;
l_new_object_id               NUMBER;
l_resource_class_code         NUMBER;
l_rate_based_flag             NUMBER;

--bug 4050532

 PROGRESS_ROLLUP_ID                       PA_PLSQL_DATATYPES.Num15TabTyp;
 PERCENT_COMPLETE_ID                      PA_PLSQL_DATATYPES.Num15TabTyp;
 PROJECT_ID                               PA_PLSQL_DATATYPES.Num15TabTyp;
 OBJECT_ID                                PA_PLSQL_DATATYPES.Num15TabTyp;
 OBJECT_TYPE                              PA_PLSQL_DATATYPES.Char30TabTyp;
 AS_OF_DATE                               PA_PLSQL_DATATYPES.DateTabTyp;
 OBJECT_VERSION_ID                        PA_PLSQL_DATATYPES.Num15TabTyp;
 LAST_UPDATE_DATE                         PA_PLSQL_DATATYPES.DateTabTyp;
 LAST_UPDATED_BY                          PA_PLSQL_DATATYPES.Num15TabTyp;
 CREATION_DATE                            PA_PLSQL_DATATYPES.DateTabTyp;
 CREATED_BY                               PA_PLSQL_DATATYPES.Num15TabTyp;
 PROGRESS_STATUS_CODE                     PA_PLSQL_DATATYPES.Char150TabTyp;
 LAST_UPDATE_LOGIN                        PA_PLSQL_DATATYPES.Num15TabTyp;
 INCREMENTAL_WORK_QUANTITY                PA_PLSQL_DATATYPES.QtyTabtyp;
 CUMULATIVE_WORK_QUANTITY                 PA_PLSQL_DATATYPES.QtyTabtyp;
 BASE_PERCENT_COMPLETE                    PA_PLSQL_DATATYPES.QtyTabtyp;
 EFF_ROLLUP_PERCENT_COMP                  PA_PLSQL_DATATYPES.QtyTabtyp;
 COMPLETED_PERCENTAGE                     PA_PLSQL_DATATYPES.QtyTabtyp;
 ESTIMATED_START_DATE                     PA_PLSQL_DATATYPES.DateTabTyp;
 ESTIMATED_FINISH_DATE                    PA_PLSQL_DATATYPES.DateTabTyp;
 ACTUAL_START_DATE                        PA_PLSQL_DATATYPES.DateTabTyp;
 ACTUAL_FINISH_DATE                       PA_PLSQL_DATATYPES.DateTabTyp;
 RECORD_VERSION_NUMBER                    PA_PLSQL_DATATYPES.Num15TabTyp;
 BASE_PERCENT_COMP_DERIV_CODE             PA_PLSQL_DATATYPES.Char30TabTyp;
 BASE_PROGRESS_STATUS_CODE                PA_PLSQL_DATATYPES.Char150TabTyp;
 EFF_ROLLUP_PROG_STAT_CODE                PA_PLSQL_DATATYPES.Char150TabTyp;
 STRUCTURE_TYPE                           PA_PLSQL_DATATYPES.Char30TabTyp;
 PROJ_ELEMENT_ID                          PA_PLSQL_DATATYPES.Num15TabTyp;
 STRUCTURE_VERSION_ID                     PA_PLSQL_DATATYPES.Num15TabTyp;
 PPL_ACT_EFFORT_TO_DATE                   PA_PLSQL_DATATYPES.QtyTabtyp;
 EQPMT_ACT_EFFORT_TO_DATE                 PA_PLSQL_DATATYPES.QtyTabtyp;
 OTH_QUANTITY_TO_DATE                     PA_PLSQL_DATATYPES.AmtTabTyp;

 OTH_ACT_COST_TO_DATE_TC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_RAWCOST_TO_DATE_TC               PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_COST_TO_DATE_FC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_RAWCOST_TO_DATE_FC               PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_COST_TO_DATE_PC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_RAWCOST_TO_DATE_PC               PA_PLSQL_DATATYPES.AmtTabTyp;

 PPL_ACT_COST_TO_DATE_TC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_RAWCOST_TO_DATE_TC               PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_COST_TO_DATE_FC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_RAWCOST_TO_DATE_FC               PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_COST_TO_DATE_PC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_RAWCOST_TO_DATE_PC               PA_PLSQL_DATATYPES.AmtTabTyp;

 EQPMT_ACT_COST_TO_DATE_TC                PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_RAWCOST_TO_DATE_TC             PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_COST_TO_DATE_FC                PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_RAWCOST_TO_DATE_FC             PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_COST_TO_DATE_PC                PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_RAWCOST_TO_DATE_PC             PA_PLSQL_DATATYPES.AmtTabTyp;

 EARNED_VALUE                             PA_PLSQL_DATATYPES.QtyTabtyp;
 TASK_WT_BASIS_CODE                       PA_PLSQL_DATATYPES.Char30TabTyp;
 CURRENT_FLAG                             PA_PLSQL_DATATYPES.Char1TabTyp;
 PROJFUNC_COST_RATE_TYPE                  PA_PLSQL_DATATYPES.Char30TabTyp;
 PROJFUNC_COST_EXCHANGE_RATE              PA_PLSQL_DATATYPES.AmtTabTyp;
 PROJFUNC_COST_RATE_DATE                  PA_PLSQL_DATATYPES.DateTabTyp;
 PROJ_COST_RATE_TYPE                      PA_PLSQL_DATATYPES.Char30TabTyp;
 PROJ_COST_EXCHANGE_RATE                  PA_PLSQL_DATATYPES.AmtTabTyp;
 PROJ_COST_RATE_DATE                      PA_PLSQL_DATATYPES.DateTabTyp;
 TXN_CURRENCY_CODE                        PA_PLSQL_DATATYPES.Char15TabTyp;
 PROG_PA_PERIOD_NAME                      PA_PLSQL_DATATYPES.Char30TabTyp;
 PROG_GL_PERIOD_NAME                      PA_PLSQL_DATATYPES.Char30TabTyp;

 l_index1  NUMBER := 0;
 l_index2  NUMBER := 0;
l_lowest_level_task      VARCHAR2(1);
  --bug 4050532

BEGIN

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV');
        END IF;

        IF (p_debug_mode = 'Y') THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.debug('PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV');
                END IF;
        END IF;
        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint APPLY_LP_PROG_ON_CWV;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'p_working_str_version_id='||p_working_str_version_id, x_Log_Level=> 3);
        END IF;

    -- Bug 3786612 : Added  check_txn_currency_diff call
    PA_PROGRESS_UTILS.check_txn_currency_diff
        (
            p_structure_version_id => p_working_str_version_id,
            p_context => 'APPLY_PROGRESS',
            x_return_status => x_return_status
        );

    IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        RAISE  FND_API.G_EXC_ERROR;
    END IF;

        l_version_enabled_flag := PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(p_project_id);
        --- setting this global var for PJI. In case of VD struct they won't touch ETC
        if (l_version_enabled_flag <> 'Y') then  --- APP
            pa_progress_pub.g_wbs_apply_prog := p_working_str_version_id;
        end if;

    IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_version_enabled_flag='||l_version_enabled_flag, x_Log_Level=> 3);
        END IF;

        -- Get max(as_of_date) for all progress records for the project.
        OPEN c2(p_project_id);
        FETCH c2 INTO l_max_as_of_date;
        IF l_max_as_of_date IS NULL
        THEN
                CLOSE c2;
                return;
        END IF;
        CLOSE c2;

        l_as_of_date := l_max_as_of_date;
        l_etc_start_date := l_max_as_of_date + 1;

    IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_as_of_date='||l_as_of_date, x_Log_Level=> 3);
        END IF;

        -- Set B and F package variable.
        PA_FP_CALC_PLAN_PKG.G_SPREAD_FROM_DATE := l_max_as_of_date;
        l_track_wp_cost_flag :=  pa_fp_wp_gen_amt_utils.get_wp_track_cost_amt_flag(p_project_id);  --Bug 3801745

        --moved from below to use it in % complete recalculation.
        OPEN cur_proj_prog_attr;
        FETCH cur_proj_prog_attr INTO l_task_weight_basis_code;
        CLOSE cur_proj_prog_attr;

        -- Loop through the cursor for each of the lowest tasks.
        OPEN c1(p_project_id,p_working_str_version_id);
          LOOP
              FETCH c1 INTO l_c1rec;
                EXIT WHEN c1%NOTFOUND;

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_c1rec.object_version_id='||l_c1rec.object_version_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_c1rec.object_id='||l_c1rec.object_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_c1rec.object_type='||l_c1rec.object_type, x_Log_Level=> 3);
        END IF;
                  -- Populate PL/SQL tables that will be used by the FP API:
                  -- pa_fp_planning_transaction_pub.update_planning_transactions.
                  -- This is done in both cases - if workplan versioning is enabled
                  -- or disabled.

                  -- Cursor cur_task_assgn is used to check if the lowest task has any
                  -- assignments or not.
          -- Bug 3834339 : Using function to decide whether assignment exists on task or not
          l_assignment_exists := 'N';
          IF l_c1rec.object_type = 'PA_TASKS' THEN
            l_assignment_exists := NVL(PA_PROGRESS_UTILS.check_assignment_exists(p_project_id,l_c1rec.object_version_id,l_c1rec.object_type),'N');
            l_lowest_level_task := NVL(pa_proj_elements_utils.is_lowest_task(l_c1rec.object_version_id),'N');   --bug 4050532
          END IF;


          IF g1_debug_mode  = 'Y' THEN
            --pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_task_assgn='||l_task_assgn, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_assignment_exists='||l_assignment_exists, x_Log_Level=> 3);
          END IF;

        /* Begin commenting out this code to fix bug # 4074299.

                  -- If the lowest task does not have assignments then populate the task data in the
                  -- "%_tbl_task" pl_sql tables.

          IF ((l_c1rec.object_type = 'PA_TASKS') AND (nvl(l_assignment_exists,'N') = 'N') AND
               nvl(l_lowest_level_task,'N')='Y')  --bug 4050532
                  THEN
              l_task_ver_id_tbl_task.extend;
              l_planned_effort_tbl_task.extend;
              l_start_date_tbl_task.extend;
              l_end_date_tbl_task.extend;

              l_raw_cost_tbl_task.extend;
              l_burdened_cost_tbl_task.extend;

              l_task_ver_id_tbl_task(l_task_ver_id_tbl_task.count) := l_c1rec.object_version_id;
                  l_planned_effort_tbl_task(l_planned_effort_tbl_task.count) := nvl(l_c1rec.ppl_act_effort_to_date,0)
                                                                  + nvl(l_c1rec.eqpmt_act_effort_to_date,0)
                                                                  + nvl(l_c1rec.subprj_ppl_act_effort,0)
                                                                  + nvl(l_c1rec.subprj_eqpmt_act_effort,0)
                                                                  + nvl(l_c1rec.estimated_remaining_effort,0)
                                                                  + nvl(l_c1rec.eqpmt_etc_effort,0)
                                                                  + nvl(l_c1rec.subprj_ppl_etc_effort,0)
                                                                  + nvl(l_c1rec.subprj_eqpmt_etc_effort,0);

             OPEN l_scheduled_dates_cur(l_c1rec.project_id, l_c1rec.object_id, l_c1rec.object_version_id);
             FETCH l_scheduled_dates_cur INTO l_scheduled_dates_rec;
             CLOSE l_scheduled_dates_cur;

             l_start_date_tbl_task(l_start_date_tbl_task.count) := l_scheduled_dates_rec.scheduled_start_date;
             l_end_date_tbl_task(l_end_date_tbl_task.count) := l_scheduled_dates_rec.scheduled_finish_date;

             l_burdened_cost_tbl_task(l_burdened_cost_tbl_task.count) := nvl(l_c1rec.oth_act_cost_to_date_pc,0)
                                                               +nvl(l_c1rec.ppl_act_cost_to_date_pc,0)
                                                               +nvl(l_c1rec.eqpmt_act_cost_to_date_pc,0)
                                                               +nvl(l_c1rec.subprj_oth_act_cost_to_date_pc,0)
                                                               +nvl(l_c1rec.subprj_ppl_act_cost_pc,0)
                                                               +nvl(l_c1rec.subprj_eqpmt_act_cost_pc,0)
                                                               +nvl(l_c1rec.ppl_etc_cost_pc,0)
                                                               +nvl(l_c1rec.eqpmt_etc_cost_pc,0)
                                                               +nvl(l_c1rec.oth_etc_cost_pc,0)
                                                               +nvl(l_c1rec.subprj_ppl_etc_cost_pc,0)
                                                               +nvl(l_c1rec.subprj_eqpmt_etc_cost_pc,0)
                                                               +nvl(l_c1rec.subprj_oth_etc_cost_pc,0);

             l_raw_cost_tbl_task(l_raw_cost_tbl_task.count) := nvl(l_c1rec.oth_act_rawcost_to_date_pc,0)
                                                              +nvl(l_c1rec.ppl_act_rawcost_to_date_pc,0)
                                                              +nvl(l_c1rec.eqpmt_act_rawcost_to_date_pc,0)
                                                              +nvl(l_c1rec.spj_oth_act_rawcost_to_date_pc,0)
                                                              +nvl(l_c1rec.subprj_ppl_act_rawcost_pc,0)
                                                              +nvl(l_c1rec.subprj_eqpmt_act_rawcost_pc,0)
                                                              +nvl(l_c1rec.ppl_etc_rawcost_pc,0)
                                                              +nvl(l_c1rec.eqpmt_etc_rawcost_pc,0)
                                                              +nvl(l_c1rec.oth_etc_rawcost_pc,0)
                                                              +nvl(l_c1rec.subprj_ppl_etc_rawcost_pc,0)
                                                              +nvl(l_c1rec.subprj_eqpmt_etc_rawcost_pc,0)
                                                              +nvl(l_c1rec.subprj_oth_etc_rawcost_pc,0);
            IF NVL(l_track_wp_cost_flag,'Y') = 'N' THEN -- Bug 3801745
                l_burdened_cost_tbl_task(l_burdened_cost_tbl_task.count) := null;
                l_raw_cost_tbl_task(l_raw_cost_tbl_task.count):= null;
            END IF;

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_planned_effort_tbl_task(l_planned_effort_tbl_task.count)='||l_planned_effort_tbl_task(l_planned_effort_tbl_task.count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_burdened_cost_tbl_task(l_burdened_cost_tbl_task.count)='||l_burdened_cost_tbl_task(l_burdened_cost_tbl_task.count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_raw_cost_tbl_task(l_raw_cost_tbl_task.count)='||l_raw_cost_tbl_task(l_raw_cost_tbl_task.count), x_Log_Level=> 3);
            END IF;
          END IF; -- ((l_c1rec.object_type = 'PA_TASKS') AND (nvl(l_assignment_exists,'N') = 'N')) THEN

                End commenting out this code to fix bug # 4074299. */

                  -- For all assignments populate the assignment data in the "%tbl_assgn" pl_sql tables.

          IF (l_c1rec.object_type = 'PA_ASSIGNMENTS') THEN

            l_task_ver_id_tbl_assgn.extend;
            l_planned_ppl_effort_tbl_assgn.extend;
            l_planned_eqp_effort_tbl_assgn.extend;
            l_planned_qty_tbl_assgn.extend;
            l_start_date_tbl_assgn.extend;
            l_end_date_tbl_assgn.extend;
            l_res_list_mem_tbl_assgn.extend;
            l_currency_code_tbl_assgn.extend;
            l_res_assgn_id_tbl_assgn.extend;
            l_raw_cost_tbl_assgn.extend;
            l_burdened_cost_tbl_assgn.extend;
            OPEN l_ptav_cur(l_c1rec.project_id, l_c1rec.object_id, l_c1rec.proj_element_id,l_c1rec.object_version_id);
            FETCH l_ptav_cur INTO l_ptav_rec;
            CLOSE l_ptav_cur;

            l_task_ver_id_tbl_assgn(l_task_ver_id_tbl_assgn.count) := l_c1rec.object_version_id;

            -- Bug 3818439 : Defaylting ETC to planned-Actual if ETC is null
            -- l_planned_ppl_effort_tbl_assgn and l_planned_eqp_effort_tbl_assgn is not used
            -- so no need to change it.
            -- Depending on resource_class_code, it should default ETC to planned-actual

            l_planned_ppl_effort_tbl_assgn(l_planned_ppl_effort_tbl_assgn.count):= nvl(l_c1rec.ppl_act_effort_to_date,0)
                                                                  + nvl(l_c1rec.subprj_ppl_act_effort,0)
                                                                  + nvl(l_c1rec.estimated_remaining_effort,nvl(l_ptav_rec.planned_quantity,0)-nvl(l_c1rec.ppl_act_effort_to_date,0))
                                                                  + nvl(l_c1rec.subprj_ppl_etc_effort,0);

            l_planned_eqp_effort_tbl_assgn(l_planned_eqp_effort_tbl_assgn.count):=nvl(l_c1rec.eqpmt_act_effort_to_date,0)
                                                                  + nvl(l_c1rec.eqpmt_etc_effort,nvl(l_ptav_rec.planned_quantity,0)-nvl(l_c1rec.eqpmt_act_effort_to_date,0))
                                                                  + nvl(l_c1rec.subprj_eqpmt_act_effort,0)
                                                                  + nvl(l_c1rec.subprj_eqpmt_etc_effort,0);


            ------5726773 removed all old code regarding l_etc (bug 4378391) and calling a function to calculate proper ETC if it is null
	    IF l_ptav_rec.resource_class_code = 'FINANCIAL_ELEMENTS' THEN
                IF l_c1rec.oth_etc_quantity IS NOT NULL THEN
                    l_etc := l_c1rec.oth_etc_quantity;
                ELSE
                   ---5726773
		   l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_quantity,0),nvl(l_c1rec.oth_quantity_to_date,0));
                                END IF;
                                l_planned_qty_tbl_assgn(l_planned_qty_tbl_assgn.count) := nvl(l_c1rec.oth_quantity_to_date,0) + l_etc;

                IF l_c1rec.oth_etc_cost_tc IS NOT NULL THEN
                    l_etc := l_c1rec.oth_etc_cost_tc;
                ELSE
                    ---5726773
		    l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_bur_cost_txn_cur,0),nvl(l_c1rec.oth_act_cost_to_date_tc,0));
                                END IF;
                                l_burdened_cost_tbl_assgn(l_burdened_cost_tbl_assgn.count) := nvl(l_c1rec.oth_act_cost_to_date_tc,0) + l_etc;

                IF l_c1rec.oth_etc_rawcost_tc IS NOT NULL THEN
                    l_etc := l_c1rec.oth_etc_rawcost_tc;
                ELSE
                    ---5726773
		    l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_raw_cost_txn_cur,0),nvl(l_c1rec.oth_act_rawcost_to_date_tc,0));
                                END IF;
                                l_raw_cost_tbl_assgn(l_raw_cost_tbl_assgn.count) := nvl(l_c1rec.oth_act_rawcost_to_date_tc,0) + l_etc;

            ELSIF l_ptav_rec.resource_class_code = 'MATERIAL_ITEMS' THEN
                IF l_c1rec.oth_etc_quantity IS NOT NULL THEN
                        l_etc := l_c1rec.oth_etc_quantity;
                ELSE
                   ---5726773
		   l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_quantity,0),nvl(l_c1rec.oth_quantity_to_date,0));
                                END IF;
                                l_planned_qty_tbl_assgn(l_planned_qty_tbl_assgn.count) := nvl(l_c1rec.oth_quantity_to_date,0) + l_etc;

                IF l_c1rec.oth_etc_cost_tc IS NOT NULL THEN
                    l_etc := l_c1rec.oth_etc_cost_tc;
                ELSE
                   ---5726773
		   l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_bur_cost_txn_cur,0),nvl(l_c1rec.oth_act_cost_to_date_tc,0));
                                END IF;
                                l_burdened_cost_tbl_assgn(l_burdened_cost_tbl_assgn.count) := nvl(l_c1rec.oth_act_cost_to_date_tc,0) + l_etc;

                IF l_c1rec.oth_etc_rawcost_tc IS NOT NULL THEN
                    l_etc := l_c1rec.oth_etc_rawcost_tc;
                ELSE
                    ---5726773
		    l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_raw_cost_txn_cur,0),nvl(l_c1rec.oth_act_rawcost_to_date_tc,0));
                                END IF;
                                l_raw_cost_tbl_assgn(l_raw_cost_tbl_assgn.count) := nvl(l_c1rec.oth_act_rawcost_to_date_tc,0) + l_etc;

            ELSIF l_ptav_rec.resource_class_code = 'PEOPLE' THEN
                IF l_c1rec.estimated_remaining_effort IS NOT NULL THEN
                    l_etc := l_c1rec.estimated_remaining_effort;
                ELSE
                    ---5726773
		    l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_quantity,0),nvl(l_c1rec.ppl_act_effort_to_date,0));
                                END IF;
                                l_planned_qty_tbl_assgn(l_planned_qty_tbl_assgn.count) := nvl(l_c1rec.ppl_act_effort_to_date,0) + l_etc;

                IF l_c1rec.ppl_etc_cost_tc IS NOT NULL THEN
                    l_etc := l_c1rec.ppl_etc_cost_tc;
                ELSE
                   ---5726773
		   l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_bur_cost_txn_cur,0),nvl(l_c1rec.ppl_act_cost_to_date_tc,0));
                                END IF;
                                l_burdened_cost_tbl_assgn(l_burdened_cost_tbl_assgn.count) := nvl(l_c1rec.ppl_act_cost_to_date_tc,0) + l_etc;

                IF l_c1rec.ppl_etc_rawcost_tc IS NOT NULL THEN
                    l_etc := l_c1rec.ppl_etc_rawcost_tc;
                ELSE
                    ---5726773
		    l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_raw_cost_txn_cur,0),nvl(l_c1rec.ppl_act_rawcost_to_date_tc,0));
                                END IF;
                                l_raw_cost_tbl_assgn(l_raw_cost_tbl_assgn.count) := nvl(l_c1rec.ppl_act_rawcost_to_date_tc,0) + l_etc;

            ELSIF l_ptav_rec.resource_class_code = 'EQUIPMENT' THEN
                IF l_c1rec.eqpmt_etc_effort IS NOT NULL THEN
                    l_etc := l_c1rec.eqpmt_etc_effort;
                ELSE
                   ---5726773
		   l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_quantity,0),nvl(l_c1rec.eqpmt_act_effort_to_date,0));
                                END IF;
                                l_planned_qty_tbl_assgn(l_planned_qty_tbl_assgn.count) := nvl(l_c1rec.eqpmt_act_effort_to_date,0) + l_etc;

                IF l_c1rec.eqpmt_etc_cost_tc IS NOT NULL THEN
                    l_etc := l_c1rec.eqpmt_etc_cost_tc;
                ELSE
                   ---5726773
		   l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_bur_cost_txn_cur,0),nvl(l_c1rec.eqpmt_act_cost_to_date_tc,0));
                                END IF;
				l_burdened_cost_tbl_assgn(l_burdened_cost_tbl_assgn.count) := nvl(l_c1rec.eqpmt_act_cost_to_date_tc,0) + l_etc;

                IF l_c1rec.eqpmt_etc_rawcost_tc IS NOT NULL THEN
                    l_etc := l_c1rec.eqpmt_etc_rawcost_tc;
                ELSE
                    ---5726773
		    l_etc := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(nvl(l_ptav_rec.planned_raw_cost_txn_cur,0),nvl(l_c1rec.eqpmt_act_rawcost_to_date_tc,0));
                                END IF;
                                l_raw_cost_tbl_assgn(l_raw_cost_tbl_assgn.count) := nvl(l_c1rec.eqpmt_act_rawcost_to_date_tc,0) + l_etc;

            END IF; -- l_ptav_rec.resource_class_code

            IF NVL(l_track_wp_cost_flag,'Y') = 'N' THEN -- Bug 3801745
                l_burdened_cost_tbl_assgn(l_burdened_cost_tbl_assgn.count) := null;
                l_raw_cost_tbl_assgn(l_raw_cost_tbl_assgn.count):= null;
            END IF;


            l_start_date_tbl_assgn(l_start_date_tbl_assgn.count) := l_ptav_rec.assignment_start_date;
            l_end_date_tbl_assgn(l_end_date_tbl_assgn.count) := l_ptav_rec.assignment_end_date;
            l_res_list_mem_tbl_assgn(l_res_list_mem_tbl_assgn.count) := l_ptav_rec.resource_list_member_id;
            l_currency_code_tbl_assgn(l_currency_code_tbl_assgn.count) := l_ptav_rec.txn_currency_code;
            l_res_assgn_id_tbl_assgn(l_res_assgn_id_tbl_assgn.count) := l_ptav_rec.resource_assignment_id;

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_start_date_tbl_assgn(l_start_date_tbl_assgn.count)='||l_start_date_tbl_assgn(l_start_date_tbl_assgn.count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_end_date_tbl_assgn(l_end_date_tbl_assgn.count)='||l_end_date_tbl_assgn(l_end_date_tbl_assgn.count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_res_list_mem_tbl_assgn(l_res_list_mem_tbl_assgn.count)='||l_res_list_mem_tbl_assgn(l_res_list_mem_tbl_assgn.count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_currency_code_tbl_assgn(l_currency_code_tbl_assgn.count)='||l_currency_code_tbl_assgn(l_currency_code_tbl_assgn.count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_res_assgn_id_tbl_assgn(l_res_assgn_id_tbl_assgn.count)='||l_res_assgn_id_tbl_assgn(l_res_assgn_id_tbl_assgn.count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_planned_qty_tbl_assgn(l_planned_qty_tbl_assgn.count)='||l_planned_qty_tbl_assgn(l_planned_qty_tbl_assgn.count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_burdened_cost_tbl_assgn(l_burdened_cost_tbl_assgn.count)='||l_burdened_cost_tbl_assgn(l_burdened_cost_tbl_assgn.count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_raw_cost_tbl_assgn(l_raw_cost_tbl_assgn.count)='||l_raw_cost_tbl_assgn(l_raw_cost_tbl_assgn.count), x_Log_Level=> 3);
            END IF;
          END IF; -- (l_c1rec.object_type = 'PA_ASSIGNMENTS') THEN

          -- The following actions are only performed if workplan versioning is enabled: 1
          IF (l_version_enabled_flag = 'Y') THEN

            -- 1.1). Make sure that all assignments in published version are also in the current_working version.
            -- maansari6/26
            IF l_c1rec.object_type = 'PA_ASSIGNMENTS' THEN
                OPEN c_get_work_obj_ver_id(l_c1rec.proj_element_id, p_working_str_version_id);
                FETCH c_get_work_obj_ver_id INTO l_work_obj_ver_id;
                CLOSE c_get_work_obj_ver_id;
                    ELSE
                OPEN c_get_work_obj_ver_id(l_c1rec.object_id, p_working_str_version_id);
                FETCH c_get_work_obj_ver_id INTO l_work_obj_ver_id;
                CLOSE c_get_work_obj_ver_id;
            END IF;
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Version Enabled l_work_obj_ver_id='||l_work_obj_ver_id, x_Log_Level=> 3);
            END IF;

                /* Begin commenting out this code to fix bug # 4074299.

            IF ((l_c1rec.object_type = 'PA_TASKS') AND (nvl(l_assignment_exists,'N') = 'N')) THEN
                l_task_ver_id_tbl_task(l_task_ver_id_tbl_task.count) := l_work_obj_ver_id;
            END IF;

                End commenting out this code to fix bug # 4074299. */

            -- maansari6/26

           IF l_c1rec.object_type = 'PA_ASSIGNMENTS' THEN
                            OPEN c4 (p_project_id, l_c1rec.object_id, p_working_str_version_id,l_c1rec.proj_element_id );
                            FETCH c4 INTO l_c4rec;
                            IF c4%notfound THEN
                     IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Calling DERIVE TASK ASSINGMENT for assignments:rlmid='||l_ptav_rec.resource_list_member_id , x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Task id='||l_c1rec.proj_element_id , x_Log_Level=> 3);
                  END IF;
                  --bug 4021315, start
                                  IF l_ptav_rec.ta_display_flag = 'Y'
                  THEN
                    l_res_assgmt_id := l_ptav_rec.resource_list_member_id;
                  ELSE
                    l_res_assgmt_id := null;
                  END IF;
                                  --bug 4021315, end
                    BEGIN
                    pa_task_assignments_pvt.derive_task_assignments
                    ( p_project_id             => l_c1rec.project_id
                    ,p_task_version_id         => l_work_obj_ver_id           --new task version id maansari6/26
                    ,p_scheduled_start         => l_ptav_rec.assignment_start_date
                    ,p_scheduled_end           => l_ptav_rec.assignment_end_date
                    ,p_resource_class_code     => l_ptav_rec.resource_class_code
                    ,p_resource_list_member_id => l_res_assgmt_id
                    ,p_unplanned_flag          => 'N'
                    ,x_resource_assignment_id  => l_res_assign_id_out
                                        ,x_rate_based_flag         => l_rate_based_flag_x
                    ,x_task_version_id         => l_task_version_id_out
                    ,x_currency_code           => l_txn_curr_code_out
                    ,x_resource_list_member_id => l_new_resource_list_mem_id -- Bug 3764224
                                        ,x_rbs_element_id          => l_rbs_element_id
                    ,x_msg_count               => l_msg_count
                    ,x_msg_data                => l_msg_data
                    ,x_return_status           => l_return_status);

                    l_currency_code_tbl_assgn(l_currency_code_tbl_assgn.count) := l_txn_curr_code_out;
                    l_res_assgn_id_tbl_assgn(l_res_assgn_id_tbl_assgn.count) := l_res_assign_id_out;

                     IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Done wiht DERIVE TASK ASSINGMENT for assignments:l_res_assign_id_out='||l_res_assign_id_out , x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Done wiht DERIVE TASK ASSINGMENT for assignments:l_new_resource_list_mem_id='||l_new_resource_list_mem_id , x_Log_Level=> 3);
                 END IF;

                --maansari6/26
                   EXCEPTION
                    WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                                    p_procedure_name => 'APPLY_LP_PROG_ON_CWV',
                                    p_error_text     => SUBSTRB('PA_TASK_ASSIGNMENTS_PUB.DERIVE_TASK_ASSIGNMENTS:'||SQLERRM,1,120));
                        raise fnd_api.g_exc_error;
                   END;

                -- BEGIN: Adding code to fix Bug # 3815741.

                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                            PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                    p_msg_name       => l_msg_data);
                            x_msg_data := l_msg_data;
                            x_return_status := 'E';
                            x_msg_count := l_msg_count;
                            RAISE  FND_API.G_EXC_ERROR;
                        END IF;

                -- END: Adding code to fix Bug # 3815741.
                --maansari6/26
                ELSE
                --Get the resource assignment id and currency code from the new structure version.
                l_currency_code_tbl_assgn(l_currency_code_tbl_assgn.count) := l_c4rec.txn_currency_code;
                l_res_assgn_id_tbl_assgn(l_res_assgn_id_tbl_assgn.count) := l_c4rec.resource_assignment_id;
                l_new_resource_list_mem_id := l_c4rec.resource_list_member_id; --Bug 3764224
                END IF; -- c4%notfound
                CLOSE c4;
            END IF; -- l_c1rec.object_type = 'PA_ASSIGNMENTS'


            -- 1.2). Check if working progress record exists for the current working version.

                        -- Bug 3621404 : Raw Cost Changes Begin
            IF l_c1rec.object_type = 'PA_ASSIGNMENTS' THEN
                --l_new_object_id := l_new_resource_assignment_id; Bug 3764224
                l_new_object_id := l_new_resource_list_mem_id; -- Bug 3764224 Basically this will be same as l_c1rec.object_id always
            ELSE
                        l_new_object_id := l_c1rec.object_id;
                END IF;

                        l_act_TXN_COST_this_period := null;
                        l_act_PRJ_COST_this_period := null;
                        l_act_POU_COST_this_period := null;
                        l_act_TXN_RAWCOST_this_period := null;
                        l_act_PRJ_RAWCOST_this_period := null;
                        l_act_POU_RAWCOST_this_period := null;
                        l_etc_TXN_COST_this_period := null;
                        l_etc_PRJ_COST_this_period := null;
                        l_etc_POU_COST_this_period := null;
                        l_etc_TXN_RAWCOST_this_period := null;
                        l_etc_PRJ_RAWCOST_this_period := null;
                        l_etc_POU_RAWCOST_this_period := null;
                        l_act_effort_this_period := null;
                        l_etc_effort_this_period := null;

                        --added to calculate effective rollup percent complete at the lowest level task as per the new
                        --planned value. Not required to calculate for assignments
                         --The earned value at task level should be based on baselined. earned value will be re-derived in rollup api.
                        --re-derive rollup percent complete at lowest level if % complete derivation code is changed bug 3906362
            --bug 4191360, dont check assignment exists for WQ
                        --IF l_c1rec.object_type in( 'PA_TASKS' , 'PA_STRUCTURES' ) AND NVL(l_assignment_exists, 'N') = 'N'
                        IF l_c1rec.object_type in( 'PA_TASKS' , 'PA_STRUCTURES' )
                   AND  NVL( l_lowest_level_task,'N') = 'Y' --bug 4050532
            THEN
                             OPEN cur_proj_elements(l_new_object_id);
                             FETCH cur_proj_elements INTO l_BASE_PERCENT_COMP_DERIV_CODE;
                             CLOSE cur_proj_elements;

                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Re-derive percent complete at lowest task level', x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_BASE_PERCENT_COMP_DERIV_CODE='||l_BASE_PERCENT_COMP_DERIV_CODE, x_Log_Level=> 3);
                END IF;

                              --bug 4191360, recalc %complete only if deriv. code has changed
                 IF NVL(l_c1rec.BASE_PERCENT_COMP_DERIV_CODE, 'N') <> l_BASE_PERCENT_COMP_DERIV_CODE
                 THEN
                 --bug 4191360, moved this from below
                     IF l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'
                     THEN
                     l_EFF_ROLLUP_PERCENT_COMP :=  round(PA_PROGRESS_UTILS.Calc_base_percent(
                                    p_task_id              => l_c1rec.object_id
                                   ,p_incr_work_qty        => l_c1rec.INCREMENTAL_WORK_QUANTITY
                                   ,p_cuml_work_qty        => l_c1rec.CUMULATIVE_WORK_QUANTITY
                                   ,p_est_remaining_effort => null
                                        ),8); --Bug 6854114
                     ELSIF NVL(l_assignment_exists, 'N') = 'N'
                     THEN
                         IF l_BASE_PERCENT_COMP_DERIV_CODE in( 'EFFORT')
                         THEN
            /* Begin commenting out this code to fix bug # 4074299.
                     l_planned_effort := l_planned_effort_tbl_task(l_planned_effort_tbl_task.count);
                     l_planned_cost   := l_burdened_cost_tbl_task(l_burdened_cost_tbl_task.count);
            End commenting out this code to fix bug # 4074299. */
            /* Begin fix for bug # 4074299. */
                         l_planned_effort := nvl(l_c1rec.ppl_act_effort_to_date,0)
                                  + nvl(l_c1rec.eqpmt_act_effort_to_date,0)
                                  + nvl(l_c1rec.subprj_ppl_act_effort,0)
                                  + nvl(l_c1rec.subprj_eqpmt_act_effort,0)
                                  + nvl(l_c1rec.estimated_remaining_effort,0)
                                  + nvl(l_c1rec.eqpmt_etc_effort,0)
                                  + nvl(l_c1rec.subprj_ppl_etc_effort,0)
                                  + nvl(l_c1rec.subprj_eqpmt_etc_effort,0);

            /* End fix for bug # 4074299. */
                         IF l_planned_effort = 0 OR l_planned_effort IS NULL
                         THEN
                            l_planned_effort := 1;
                         END iF;
                         l_EFF_ROLLUP_PERCENT_COMP :=  round((nvl(l_c1rec.PPL_ACT_EFFORT_TO_DATE,0)/l_planned_effort)*100,8); --Bug 6854114
                        IF g1_debug_mode  = 'Y' THEN
                            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_planned_effort='||l_planned_effort, x_Log_Level=> 3);
                            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_c1rec.PPL_ACT_EFFORT_TO_DATE='||l_c1rec.PPL_ACT_EFFORT_TO_DATE, x_Log_Level=> 3);
                        END IF;
                    --bug 4191360, calc % complete for cost also
                         ELSIF l_BASE_PERCENT_COMP_DERIV_CODE in( 'COST')
                         THEN
                             l_planned_cost := nvl(l_c1rec.oth_act_cost_to_date_pc,0)
                                  +nvl(l_c1rec.ppl_act_cost_to_date_pc,0)
                                  +nvl(l_c1rec.eqpmt_act_cost_to_date_pc,0)
                                  +nvl(l_c1rec.subprj_oth_act_cost_to_date_pc,0)
                                  +nvl(l_c1rec.subprj_ppl_act_cost_pc,0)
                                  +nvl(l_c1rec.subprj_eqpmt_act_cost_pc,0)
                                  +nvl(l_c1rec.ppl_etc_cost_pc,0)
                                  +nvl(l_c1rec.eqpmt_etc_cost_pc,0)
                                  +nvl(l_c1rec.oth_etc_cost_pc,0)
                                  +nvl(l_c1rec.subprj_ppl_etc_cost_pc,0)
                                  +nvl(l_c1rec.subprj_eqpmt_etc_cost_pc,0)
                                  +nvl(l_c1rec.subprj_oth_etc_cost_pc,0);
                         IF l_planned_cost = 0 OR l_planned_cost IS NULL
                         THEN
                            l_planned_cost := 1;
                         END iF;
                         l_EFF_ROLLUP_PERCENT_COMP :=  round((nvl(l_c1rec.PPL_ACT_COST_TO_DATE_PC,0)/l_planned_cost)*100,8); --Bug 6854114
                                             ELSE
                         l_EFF_ROLLUP_PERCENT_COMP := l_c1rec.eff_rollup_percent_comp;
                         END IF; -- IF l_BASE_PERCENT_COMP_DERIV_CODE in( 'EFFORT')
                      --bug 4191360, moved this code above
                     /*ELSIF l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'
                     THEN
                     l_EFF_ROLLUP_PERCENT_COMP :=  round(PA_PROGRESS_UTILS.Calc_base_percent(
                                    p_task_id              => l_c1rec.object_id
                                   ,p_incr_work_qty        => l_c1rec.INCREMENTAL_WORK_QUANTITY
                                   ,p_cuml_work_qty        => l_c1rec.CUMULATIVE_WORK_QUANTITY
                                   ,p_est_remaining_effort => null
                                        ),2);*/
                     ELSE
                      l_EFF_ROLLUP_PERCENT_COMP := l_c1rec.eff_rollup_percent_comp;
                     END IF; -- IF l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'
                 ELSE
                l_EFF_ROLLUP_PERCENT_COMP := l_c1rec.eff_rollup_percent_comp;
                 END IF; -- IF NVL(l_c1rec.BASE_PERCENT_COMP_DERIV_CODE, 'N') <> l_BASE_PERCENT_COMP_DERIV_CODE
                         ELSE
                              l_EFF_ROLLUP_PERCENT_COMP := l_c1rec.eff_rollup_percent_comp;
                              l_earned_value := l_c1rec.earned_value;
                         END IF;


                        -- 1.7). Calculate the incremental change in the workplan actuals for this period
                        -- between the recently inserted progress record and the previously existing progress
                        -- record (if any).

                        -- Bug 3621404 : Raw Cost Changes, Now they are derived in the code above

                        -- Assign the pl/sql tables bug 4050532

                      l_index2 := l_index2 + 1;

                      select pa_progress_rollup_s.nextval into progress_rollup_id(l_index2) from dual;
                      percent_complete_id(l_index2)        := to_number(null);
                      PROJECT_ID(l_index2)                 := p_project_Id;
                      OBJECT_ID(l_index2)                  := l_new_object_id;
                      OBJECT_TYPE(l_index2)                := l_c1rec.object_type;
                      AS_OF_DATE(l_index2)                 := l_as_of_date;
                      OBJECT_VERSION_ID(l_index2)          := l_work_obj_ver_id;
                      LAST_UPDATE_DATE(l_index2)           := sysdate;
                      LAST_UPDATED_BY(l_index2)            := fnd_global.user_id;
                      CREATION_DATE(l_index2)              := sysdate;
                      CREATED_BY(l_index2)                 := fnd_global.user_id;
                      PROGRESS_STATUS_CODE(l_index2)       := l_c1rec.progress_status_code;
                      LAST_UPDATE_LOGIN(l_index2)          := fnd_global.login_id ;
                      INCREMENTAL_WORK_QUANTITY(l_index2)  := l_c1rec.INCREMENTAL_WORK_QUANTITY;
                      CUMULATIVE_WORK_QUANTITY(l_index2)   := l_c1rec.CUMULATIVE_WORK_QUANTITY;
                      BASE_PERCENT_COMPLETE(l_index2)      := l_c1rec.BASE_PERCENT_COMPLETE;
                      EFF_ROLLUP_PERCENT_COMP(l_index2)    := l_EFF_ROLLUP_PERCENT_COMP;
                      COMPLETED_PERCENTAGE(l_index2)       := l_c1rec.COMPLETED_PERCENTAGE;
                      ESTIMATED_START_DATE(l_index2)       := l_c1rec.ESTIMATED_START_DATE;
                      ESTIMATED_FINISH_DATE(l_index2)      := l_c1rec.ESTIMATED_FINISH_DATE;
                      ACTUAL_START_DATE(l_index2)          := l_c1rec.ACTUAL_START_DATE;
                      ACTUAL_FINISH_DATE(l_index2)         := l_c1rec.ACTUAL_FINISH_DATE;
                      RECORD_VERSION_NUMBER(l_index2)      := 1;
                      BASE_PERCENT_COMP_DERIV_CODE(l_index2) := NVL(l_BASE_PERCENT_COMP_DERIV_CODE, l_c1rec.BASE_PERCENT_COMP_DERIV_CODE);
                      BASE_PROGRESS_STATUS_CODE(l_index2)    := l_c1rec.BASE_PROGRESS_STATUS_CODE;
                      EFF_ROLLUP_PROG_STAT_CODE(l_index2)    := l_c1rec.EFF_ROLLUP_PROG_STAT_CODE;
                      STRUCTURE_TYPE(l_index2)               := 'WORKPLAN';
                      PROJ_ELEMENT_ID(l_index2)              := l_c1rec.PROJ_ELEMENT_ID;
                      STRUCTURE_VERSION_ID(l_index2)         := p_working_str_version_id;
                      PPL_ACT_EFFORT_TO_DATE(l_index2)       := l_c1rec.PPL_ACT_EFFORT_TO_DATE;
                      EQPMT_ACT_EFFORT_TO_DATE(l_index2)     := l_c1rec.EQPMT_ACT_EFFORT_TO_DATE;
                      OTH_QUANTITY_TO_DATE(l_index2)         := l_c1rec.OTH_QUANTITY_TO_DATE;
                      OTH_ACT_COST_TO_DATE_TC(l_index2)      := l_c1rec.OTH_ACT_COST_TO_DATE_TC;
                      OTH_ACT_RAWCOST_TO_DATE_TC(l_index2)   := l_c1rec.OTH_ACT_RAWCOST_TO_DATE_TC;
                      OTH_ACT_COST_TO_DATE_FC(l_index2)      := l_c1rec.OTH_ACT_COST_TO_DATE_FC;
                      OTH_ACT_RAWCOST_TO_DATE_FC(l_index2)   := l_c1rec.OTH_ACT_RAWCOST_TO_DATE_FC;
                      OTH_ACT_COST_TO_DATE_PC(l_index2)      := l_c1rec.OTH_ACT_COST_TO_DATE_PC;
                      OTH_ACT_RAWCOST_TO_DATE_PC(l_index2)   := l_c1rec.OTH_ACT_RAWCOST_TO_DATE_PC;
                      PPL_ACT_COST_TO_DATE_TC(l_index2)      := l_c1rec.PPL_ACT_COST_TO_DATE_TC;
                      PPL_ACT_RAWCOST_TO_DATE_TC(l_index2)   := l_c1rec.PPL_ACT_RAWCOST_TO_DATE_TC;
                      PPL_ACT_COST_TO_DATE_FC(l_index2)      := l_c1rec.PPL_ACT_COST_TO_DATE_FC;
                      PPL_ACT_RAWCOST_TO_DATE_FC(l_index2)   := l_c1rec.PPL_ACT_RAWCOST_TO_DATE_FC;
                      PPL_ACT_COST_TO_DATE_PC(l_index2)      := l_c1rec.PPL_ACT_COST_TO_DATE_PC;
                      PPL_ACT_RAWCOST_TO_DATE_PC(l_index2)   := l_c1rec.PPL_ACT_RAWCOST_TO_DATE_PC;
                      EQPMT_ACT_COST_TO_DATE_TC(l_index2)    := l_c1rec.EQPMT_ACT_COST_TO_DATE_TC;
                      EQPMT_ACT_RAWCOST_TO_DATE_TC(l_index2) := l_c1rec.EQPMT_ACT_RAWCOST_TO_DATE_TC;
                      EQPMT_ACT_COST_TO_DATE_FC(l_index2)    := l_c1rec.EQPMT_ACT_COST_TO_DATE_FC;
                      EQPMT_ACT_RAWCOST_TO_DATE_FC(l_index2) := l_c1rec.EQPMT_ACT_RAWCOST_TO_DATE_FC;
                      EQPMT_ACT_COST_TO_DATE_PC(l_index2)    := l_c1rec.EQPMT_ACT_COST_TO_DATE_PC;
                      EQPMT_ACT_RAWCOST_TO_DATE_PC(l_index2) := l_c1rec.EQPMT_ACT_RAWCOST_TO_DATE_PC;
                      EARNED_VALUE(l_index2)                 := l_c1rec.earned_value;
                      TASK_WT_BASIS_CODE(l_index2)           := l_c1rec.TASK_WT_BASIS_CODE;
                      CURRENT_FLAG(l_index2)                 := 'Y';
                      PROJFUNC_COST_RATE_TYPE(l_index2)      := l_c1rec.PROJFUNC_COST_RATE_TYPE;
                      PROJFUNC_COST_EXCHANGE_RATE(l_index2)  := l_c1rec.PROJFUNC_COST_EXCHANGE_RATE;
                      PROJFUNC_COST_RATE_DATE(l_index2)      := l_c1rec.PROJFUNC_COST_RATE_DATE;
                      PROJ_COST_RATE_TYPE(l_index2)          := l_c1rec.PROJ_COST_RATE_TYPE;
                      PROJ_COST_EXCHANGE_RATE(l_index2)      := l_c1rec.PROJ_COST_EXCHANGE_RATE;
                      PROJ_COST_RATE_DATE(l_index2)          := l_c1rec.PROJ_COST_RATE_DATE;
                      TXN_CURRENCY_CODE(l_index2)            := l_c1rec.TXN_CURRENCY_CODE;
                      PROG_PA_PERIOD_NAME(l_index2)          := l_c1rec.PROG_PA_PERIOD_NAME;
                      PROG_GL_PERIOD_NAME(l_index2)          := l_c1rec.PROG_GL_PERIOD_NAME;
              --end bug 4050532

                  ELSE   --if versioning not enabled then

                        --re-derive rollup percent complete at lowest level if % complete derivation code is changed bug 3906362
            --bug 4191360
                        --IF l_c1rec.object_type in( 'PA_TASKS' , 'PA_STRUCTURES' ) AND NVL(l_assignment_exists, 'N') = 'N'
                        IF l_c1rec.object_type in( 'PA_TASKS' , 'PA_STRUCTURES' )
                    AND NVL( l_lowest_level_task,'N') = 'Y' --bug 4050532
            THEN

                             OPEN cur_proj_elements(l_c1rec.object_id);
                             FETCH cur_proj_elements INTO l_BASE_PERCENT_COMP_DERIV_CODE;
                             CLOSE cur_proj_elements;
                 IF g1_debug_mode  = 'Y' THEN
                   pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Re-derive percent complete at lowest task level', x_Log_Level=> 3);
                   pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_BASE_PERCENT_COMP_DERIV_CODE='||l_BASE_PERCENT_COMP_DERIV_CODE, x_Log_Level=> 3);
                 END IF;

                 --bug 4191360, calc % complete only if deriv. code has changed
                 IF NVL(l_c1rec.BASE_PERCENT_COMP_DERIV_CODE, 'N') <> l_BASE_PERCENT_COMP_DERIV_CODE
                 THEN
                     --bug 4191360, moved this code from below
                     IF l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'
                     THEN
                     l_EFF_ROLLUP_PERCENT_COMP :=  round(PA_PROGRESS_UTILS.Calc_base_percent(
                                    p_task_id              => l_c1rec.object_id
                                   ,p_incr_work_qty        => l_c1rec.INCREMENTAL_WORK_QUANTITY
                                   ,p_cuml_work_qty        => l_c1rec.CUMULATIVE_WORK_QUANTITY
                                   ,p_est_remaining_effort => null
                                        ),8); --Bug 6854114

                     ELSIF NVL(l_assignment_exists, 'N') = 'N'
                     THEN
                         IF l_BASE_PERCENT_COMP_DERIV_CODE in( 'EFFORT')
                         THEN
            /* Begin commenting out this code to fix bug # 4074299.
                     l_planned_effort := l_planned_effort_tbl_task(l_planned_effort_tbl_task.count);
                     l_planned_cost   := l_burdened_cost_tbl_task(l_burdened_cost_tbl_task.count);
            End commenting out this code to fix bug # 4074299. */
            /* Begin fix for bug # 4074299. */
                             l_planned_effort := nvl(l_c1rec.ppl_act_effort_to_date,0)
                                      + nvl(l_c1rec.eqpmt_act_effort_to_date,0)
                                      + nvl(l_c1rec.subprj_ppl_act_effort,0)
                                      + nvl(l_c1rec.subprj_eqpmt_act_effort,0)
                                      + nvl(l_c1rec.estimated_remaining_effort,0)
                                      + nvl(l_c1rec.eqpmt_etc_effort,0)
                                      + nvl(l_c1rec.subprj_ppl_etc_effort,0)
                                      + nvl(l_c1rec.subprj_eqpmt_etc_effort,0);

            /* End fix for bug # 4074299. */

                             IF l_planned_effort = 0 OR l_planned_effort IS NULL
                             THEN
                            l_planned_effort := 1;
                             END iF;
                             l_EFF_ROLLUP_PERCENT_COMP :=  round((nvl(l_c1rec.PPL_ACT_EFFORT_TO_DATE,0)/l_planned_effort)*100,8); --Bug 6854114
                         ELSIF l_BASE_PERCENT_COMP_DERIV_CODE in( 'COST')
                         THEN
                             l_planned_cost := nvl(l_c1rec.oth_act_cost_to_date_pc,0)
                                   +nvl(l_c1rec.ppl_act_cost_to_date_pc,0)
                                   +nvl(l_c1rec.eqpmt_act_cost_to_date_pc,0)
                                   +nvl(l_c1rec.subprj_oth_act_cost_to_date_pc,0)
                                   +nvl(l_c1rec.subprj_ppl_act_cost_pc,0)
                                   +nvl(l_c1rec.subprj_eqpmt_act_cost_pc,0)
                                   +nvl(l_c1rec.ppl_etc_cost_pc,0)
                                   +nvl(l_c1rec.eqpmt_etc_cost_pc,0)
                                   +nvl(l_c1rec.oth_etc_cost_pc,0)
                                   +nvl(l_c1rec.subprj_ppl_etc_cost_pc,0)
                                   +nvl(l_c1rec.subprj_eqpmt_etc_cost_pc,0)
                                   +nvl(l_c1rec.subprj_oth_etc_cost_pc,0);
                             IF l_planned_cost = 0 OR l_planned_cost IS NULL
                             THEN
                            l_planned_cost := 1;
                             END iF;
                             l_EFF_ROLLUP_PERCENT_COMP :=  round((nvl(l_c1rec.PPL_ACT_COST_TO_DATE_PC,0)/l_planned_cost)*100,8); --Bug 6854114
                         ELSE
                        l_EFF_ROLLUP_PERCENT_COMP := l_c1rec.eff_rollup_percent_comp;
                         END IF; --IF l_BASE_PERCENT_COMP_DERIV_CODE in( 'EFFORT')
                      --bug 4191360, moved this code above
                     /*ELSIF l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'
                     THEN
                     l_EFF_ROLLUP_PERCENT_COMP :=  round(PA_PROGRESS_UTILS.Calc_base_percent(
                                    p_task_id              => l_c1rec.object_id
                                   ,p_incr_work_qty        => l_c1rec.INCREMENTAL_WORK_QUANTITY
                                   ,p_cuml_work_qty        => l_c1rec.CUMULATIVE_WORK_QUANTITY
                                   ,p_est_remaining_effort => null
                                        ),2);*/
                     ELSE
                      l_EFF_ROLLUP_PERCENT_COMP := l_c1rec.eff_rollup_percent_comp;
                     END IF; -- IF l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'
                 ELSE
                 l_EFF_ROLLUP_PERCENT_COMP := l_c1rec.eff_rollup_percent_comp;
                 END IF; --IF NVL(l_c1rec.BASE_PERCENT_COMP_DERIV_CODE, 'N') <> l_BASE_PERCENT_COMP_DERIV_CODE


                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Before updating the rollup table wiht new pc', x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_EFF_ROLLUP_PERCENT_COMP='||l_EFF_ROLLUP_PERCENT_COMP, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_c1rec.progress_rollup_id='||l_c1rec.progress_rollup_id, x_Log_Level=> 3);
                END IF;

                             UPDATE pa_progress_rollup
                                SET EFF_ROLLUP_PERCENT_COMP = l_EFF_ROLLUP_PERCENT_COMP
                                   ,last_update_date = SYSDATE
                              WHERE progress_rollup_id =  l_c1rec.progress_rollup_id;
                                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Done updating the rollup table wiht new pc', x_Log_Level=> 3);
                                END IF;

                         END IF;
                         --uncommented the code for bug 3906362

          END IF; -- If workplan versioning is enabled: 1
        END LOOP;
        CLOSE C1;

       IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Outside main LOOP', x_Log_Level=> 3);
       END IF;


      IF (l_version_enabled_flag = 'Y') THEN

        --bug 4050532
         IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Before BULK insert l_EFF_ROLLUP_PERCENT_COMP='||l_EFF_ROLLUP_PERCENT_COMP, x_Log_Level=> 3);
     END IF;

     DELETE FROM pa_progress_rollup WHERE project_id = p_project_id and structure_version_id = p_working_str_version_id;

         forall l_index1 in 1..l_index2
            INSERT INTO pa_progress_rollup(
               PROGRESS_ROLLUP_ID
              ,PERCENT_COMPLETE_ID
              ,PROJECT_ID
              ,OBJECT_ID
              ,OBJECT_TYPE
              ,AS_OF_DATE
              ,OBJECT_VERSION_ID
              ,LAST_UPDATE_DATE
              ,LAST_UPDATED_BY
              ,CREATION_DATE
              ,CREATED_BY
              ,PROGRESS_STATUS_CODE
              ,LAST_UPDATE_LOGIN
              ,INCREMENTAL_WORK_QUANTITY
              ,CUMULATIVE_WORK_QUANTITY
              ,BASE_PERCENT_COMPLETE
              ,EFF_ROLLUP_PERCENT_COMP
              ,COMPLETED_PERCENTAGE
              ,ESTIMATED_START_DATE
              ,ESTIMATED_FINISH_DATE
              ,ACTUAL_START_DATE
              ,ACTUAL_FINISH_DATE
              ,RECORD_VERSION_NUMBER
              ,BASE_PERCENT_COMP_DERIV_CODE
              ,BASE_PROGRESS_STATUS_CODE
              ,EFF_ROLLUP_PROG_STAT_CODE
              ,STRUCTURE_TYPE
              ,PROJ_ELEMENT_ID
              ,STRUCTURE_VERSION_ID
              ,PPL_ACT_EFFORT_TO_DATE
              ,EQPMT_ACT_EFFORT_TO_DATE
              ,OTH_ACT_COST_TO_DATE_TC
              ,OTH_ACT_COST_TO_DATE_FC
              ,OTH_ACT_COST_TO_DATE_PC
              ,PPL_ACT_COST_TO_DATE_TC
              ,PPL_ACT_COST_TO_DATE_FC
              ,PPL_ACT_COST_TO_DATE_PC
              ,EQPMT_ACT_COST_TO_DATE_TC
              ,EQPMT_ACT_COST_TO_DATE_FC
              ,EQPMT_ACT_COST_TO_DATE_PC
              ,EARNED_VALUE
              ,TASK_WT_BASIS_CODE
              ,CURRENT_FLAG
              ,PROJFUNC_COST_RATE_TYPE
              ,PROJFUNC_COST_EXCHANGE_RATE
              ,PROJFUNC_COST_RATE_DATE
              ,PROJ_COST_RATE_TYPE
              ,PROJ_COST_EXCHANGE_RATE
              ,PROJ_COST_RATE_DATE
              ,TXN_CURRENCY_CODE
              ,PROG_PA_PERIOD_NAME
              ,PROG_GL_PERIOD_NAME
              ,OTH_QUANTITY_TO_DATE
              ,OTH_ACT_RAWCOST_TO_DATE_TC
              ,OTH_ACT_RAWCOST_TO_DATE_FC
              ,OTH_ACT_RAWCOST_TO_DATE_PC
              ,PPL_ACT_RAWCOST_TO_DATE_TC
              ,PPL_ACT_RAWCOST_TO_DATE_FC
              ,PPL_ACT_RAWCOST_TO_DATE_PC
              ,EQPMT_ACT_RAWCOST_TO_DATE_TC
              ,EQPMT_ACT_RAWCOST_TO_DATE_FC
              ,EQPMT_ACT_RAWCOST_TO_DATE_PC
              )
          VALUES(
               PROGRESS_ROLLUP_ID(l_index1)
              ,PERCENT_COMPLETE_ID(l_index1)
              ,PROJECT_ID(l_index1)
              ,OBJECT_ID(l_index1)
              ,OBJECT_TYPE(l_index1)
              ,AS_OF_DATE(l_index1)
              ,OBJECT_VERSION_ID(l_index1)
              ,LAST_UPDATE_DATE(l_index1)
              ,LAST_UPDATED_BY(l_index1)
              ,CREATION_DATE(l_index1)
              ,CREATED_BY(l_index1)
              ,PROGRESS_STATUS_CODE(l_index1)
              ,LAST_UPDATE_LOGIN(l_index1)
              ,INCREMENTAL_WORK_QUANTITY(l_index1)
              ,CUMULATIVE_WORK_QUANTITY(l_index1)
              ,BASE_PERCENT_COMPLETE(l_index1)
              ,EFF_ROLLUP_PERCENT_COMP(l_index1)
              ,COMPLETED_PERCENTAGE(l_index1)
              ,ESTIMATED_START_DATE(l_index1)
              ,ESTIMATED_FINISH_DATE(l_index1)
              ,ACTUAL_START_DATE(l_index1)
              ,ACTUAL_FINISH_DATE(l_index1)
              ,RECORD_VERSION_NUMBER(l_index1)
              ,BASE_PERCENT_COMP_DERIV_CODE(l_index1)
              ,BASE_PROGRESS_STATUS_CODE(l_index1)
              ,EFF_ROLLUP_PROG_STAT_CODE(l_index1)
              ,STRUCTURE_TYPE(l_index1)
              ,PROJ_ELEMENT_ID(l_index1)
              ,STRUCTURE_VERSION_ID(l_index1)
              ,PPL_ACT_EFFORT_TO_DATE(l_index1)
              ,EQPMT_ACT_EFFORT_TO_DATE(l_index1)
              ,OTH_ACT_COST_TO_DATE_TC(l_index1)
              ,OTH_ACT_COST_TO_DATE_FC(l_index1)
              ,OTH_ACT_COST_TO_DATE_PC(l_index1)
              ,PPL_ACT_COST_TO_DATE_TC(l_index1)
              ,PPL_ACT_COST_TO_DATE_FC(l_index1)
              ,PPL_ACT_COST_TO_DATE_PC(l_index1)
              ,EQPMT_ACT_COST_TO_DATE_TC(l_index1)
              ,EQPMT_ACT_COST_TO_DATE_FC(l_index1)
              ,EQPMT_ACT_COST_TO_DATE_PC(l_index1)
              ,EARNED_VALUE(l_index1)
              ,TASK_WT_BASIS_CODE(l_index1)
              ,CURRENT_FLAG(l_index1)
              ,PROJFUNC_COST_RATE_TYPE(l_index1)
              ,PROJFUNC_COST_EXCHANGE_RATE(l_index1)
              ,PROJFUNC_COST_RATE_DATE(l_index1)
              ,PROJ_COST_RATE_TYPE(l_index1)
              ,PROJ_COST_EXCHANGE_RATE(l_index1)
              ,PROJ_COST_RATE_DATE(l_index1)
              ,TXN_CURRENCY_CODE(l_index1)
              ,PROG_PA_PERIOD_NAME(l_index1)
              ,PROG_GL_PERIOD_NAME(l_index1)
              ,OTH_QUANTITY_TO_DATE(l_index1)
              ,OTH_ACT_RAWCOST_TO_DATE_TC(l_index1)
              ,OTH_ACT_RAWCOST_TO_DATE_FC(l_index1)
              ,OTH_ACT_RAWCOST_TO_DATE_PC(l_index1)
              ,PPL_ACT_RAWCOST_TO_DATE_TC(l_index1)
              ,PPL_ACT_RAWCOST_TO_DATE_FC(l_index1)
              ,PPL_ACT_RAWCOST_TO_DATE_PC(l_index1)
              ,EQPMT_ACT_RAWCOST_TO_DATE_TC(l_index1)
              ,EQPMT_ACT_RAWCOST_TO_DATE_FC(l_index1)
              ,EQPMT_ACT_RAWCOST_TO_DATE_PC(l_index1)
          );
    IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Done with  BULK insert into pa_progress_rollup', x_Log_Level=> 3);
        END IF;
  END IF;



    -- Bug 3956248 : Added call of copy_actuals_for_workplan

    BEGIN
        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Before calling pa_progress_pvt.copy_actuals_for_workplan ', x_Log_Level=> 3);
        END IF;
        --bug 4046422
        --pa_fp_copy_from_pkg.copy_actuals_for_workplan(

        pa_progress_pvt.copy_actuals_for_workplan(
           p_calling_context            => 'WP_APPLY_PROGRESS_TO_WORKING'
          ,p_project_id                 => p_project_id
          ,p_source_struct_ver_id       => PA_PROJ_ELEMENTS_UTILS.latest_published_ver_id(p_project_id)
          ,p_target_struct_ver_id       => p_working_str_version_id
          ,x_return_status              => l_return_status
          ,x_msg_count                  => l_msg_count
          ,x_msg_data                   => l_msg_data);


        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'After pa_progress_pvt.copy_actuals_for_workplan l_return_status='||l_return_status, x_Log_Level=> 3);
        END IF;
        EXCEPTION
                 WHEN OTHERS THEN
                     fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                                             p_procedure_name => 'APPLY_LP_PROG_ON_CWV',
                                             p_error_text     => SUBSTRB('PA_PROGRESS_PVT.COPY_ACTUALS_FOR_WORKPLAN:'||SQLERRM,1,120));
                     RAISE FND_API.G_EXC_ERROR;
        END;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                    p_msg_name       => l_msg_data);
               x_msg_data := l_msg_data;
               x_return_status := 'E';
               x_msg_count := l_msg_count;
               RAISE  FND_API.G_EXC_ERROR;
        END IF;


    --        end if;  -- If workplan versioning is enabled: 2

        --bug 3846474
        -- Populate pl/sql tables with the all other lowest tasks and assignments.
    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Populating pl/sql tables for extra assignments and tasks', x_Log_Level=> 3);
    END IF;

        FOR all_lowest_task_rec in all_lowest_task LOOP
        IF g1_debug_mode  = 'Y' THEN
            --pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'all_lowest_task_rec.object_type='||all_lowest_task_rec.object_type, x_Log_Level=> 3);
            --pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'all_lowest_task_rec.element_version_id='||all_lowest_task_rec.element_version_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'all_lowest_task_rec.resource_assignment_id='||all_lowest_task_rec.resource_assignment_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'all_lowest_task_rec.txn_currency_code='||all_lowest_task_rec.txn_currency_code, x_Log_Level=> 3);
        END IF;

        IF all_lowest_task_rec.object_type = 'PA_ASSIGNMENTS'  THEN
            l_res_assgn_id_tbl_assgn.extend;
            l_currency_code_tbl_assgn.extend;
            l_raw_cost_tbl_assgn.extend;
            l_burdened_cost_tbl_assgn.extend;
            l_planned_qty_tbl_assgn.extend;

            l_res_assgn_id_tbl_assgn(l_res_assgn_id_tbl_assgn.count):= all_lowest_task_rec.resource_assignment_id;
            l_currency_code_tbl_assgn(l_currency_code_tbl_assgn.count) := all_lowest_task_rec.txn_currency_code;
            l_planned_qty_tbl_assgn(l_planned_qty_tbl_assgn.count) := null;
            l_raw_cost_tbl_assgn(l_raw_cost_tbl_assgn.count) := null;
            l_burdened_cost_tbl_assgn(l_burdened_cost_tbl_assgn.count) := null;

        END IF;
    END LOOP;

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Printing PA_TASKS PL/SQL tables:count='||l_task_ver_id_tbl_task.count(), x_Log_Level=> 3);
            FOR i in 1..l_task_ver_id_tbl_task.count() LOOP
                IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_task_ver_id_tbl_task'||'('||i||')='||l_task_ver_id_tbl_task(i), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_planned_effort_tbl_task'||'('||i||')='||l_planned_effort_tbl_task(i), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_raw_cost_tbl_task'||'('||i||')='||l_raw_cost_tbl_task(i), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_burdened_cost_tbl_task'||'('||i||')='||l_burdened_cost_tbl_task(i), x_Log_Level=> 3);
                END IF;
        END LOOP;
    END IF;


        -- Call FP API to copy the Total Actual Effort + Total ETC Effort to planned effort

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Printing PA_ASSIGNMENTS PL/SQL tables:count='||l_res_assgn_id_tbl_assgn.count(), x_Log_Level=> 3);
        FOR i in 1..l_res_assgn_id_tbl_assgn.count() LOOP
                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_res_assgn_id_tbl_assgn'||'('||i||')='||l_res_assgn_id_tbl_assgn(i), x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_currency_code_tbl_assgn'||'('||i||')='||l_currency_code_tbl_assgn(i), x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_planned_qty_tbl_assgn'||'('||i||')='||l_planned_qty_tbl_assgn(i), x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_raw_cost_tbl_assgn'||'('||i||')='||l_raw_cost_tbl_assgn(i), x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_burdened_cost_tbl_assgn'||'('||i||')='||l_burdened_cost_tbl_assgn(i), x_Log_Level=> 3);
                END IF;
        END LOOP;
    END IF;

        -- Calling FP API for all assignments.
    -- IF (l_planned_ppl_effort_tbl_assgn.exists(1) OR l_planned_eqp_effort_tbl_assgn.exists(1) OR l_planned_qty_tbl_assgn.exists(1)) THEN
        IF (l_res_assgn_id_tbl_assgn.count > 0) then
        BEGIN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Before PA_FP_CALC_PLAN_PKG.calculate', x_Log_Level=> 3);
            END IF;
                      /*  Commnted for Perf Bug 4189762 and added Calculate API
              pa_fp_planning_transaction_pub.update_planning_transactions
                                (p_context                      => 'TASK_ASSIGNMENT'
                                ,p_struct_elem_version_id       => p_working_str_version_id
                                ,p_resource_assignment_id_tbl   => l_res_assgn_id_tbl_assgn
                                ,p_quantity_tbl                 => l_planned_qty_tbl_assgn
                                ,p_currency_code_tbl            => l_currency_code_tbl_assgn
                                ,p_apply_progress_flag          => 'Y'
                                ,p_raw_cost_tbl                 => l_raw_cost_tbl_assgn
                                ,p_burdened_cost_tbl            => l_burdened_cost_tbl_assgn
                                ,x_return_status                => l_return_status
                                ,x_msg_count                    => l_msg_count
                                ,x_msg_data                     => l_msg_data
                                );
            */

            PA_FP_CALC_PLAN_PKG.calculate
            (
             p_project_id           => p_project_id
            ,p_budget_version_id        => PA_PLANNING_TRANSACTION_UTILS.Get_Wp_Budget_Version_Id(p_working_str_version_id)
            ,p_source_context       => 'RESOURCE_ASSIGNMENT'
            ,p_apply_progress_flag      => 'Y'
            ,p_resource_assignment_tab  => l_res_assgn_id_tbl_assgn
            ,p_txn_currency_code_tab       => l_currency_code_tbl_assgn
            ,p_total_qty_tab               => l_planned_qty_tbl_assgn
            ,p_total_raw_cost_tab          => l_raw_cost_tbl_assgn
            ,p_total_burdened_cost_tab     => l_burdened_cost_tbl_assgn
            ,x_return_status               => l_return_status
            ,x_msg_count                   => l_msg_count
            ,x_msg_data                    => l_msg_data);
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'After PA_FP_CALC_PLAN_PKG.calculate l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;
                EXCEPTION
                WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                                        p_procedure_name => 'APPLY_LP_PROG_ON_CWV',
                                        p_error_text     => SUBSTRB('Call of PA_FP_CALC_PLAN_PKG.calculate Failed:'||SQLERRM,1,120));
                        RAISE FND_API.G_EXC_ERROR;
                END;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := 'E';
               RAISE  FND_API.G_EXC_ERROR;
        END IF;
        END IF;

        pa_progress_pub.g_wbs_apply_prog := null; --- resetting the var back to null
        -- The following actions are also only performed if workplan versioning is enabled: 3:
        IF (l_version_enabled_flag = 'Y') THEN

            -- 3.1). Calling PJI API: PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE() within it own PL/SQL Block
            -- to push progress actuals. This is done once here instead of, for each of the lowest tasks by calling
            -- PA_PROGRESS_PUB.push_workplan_actuals() with p_call_pji_apis_flag = 'Y'.

                 BEGIN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Before calling PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE', x_Log_Level=> 3);
            END IF;
            --               PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE(x_msg_code => l_msg_code
             --                                      ,x_return_status => l_return_status);
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Done with calling PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE:l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;


                 EXCEPTION
                    WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                                        p_procedure_name => 'APPLY_LP_PROG_ON_CWV',
                                        p_error_text     => SUBSTRB('PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE:'||SQLERRM,1,120));
                        RAISE FND_API.G_EXC_ERROR;
                END;

                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                        p_msg_name       => l_msg_code);
               x_msg_data := l_msg_code;
               x_return_status := 'E';
               RAISE  FND_API.G_EXC_ERROR;
                END IF;

                -- 3.2). Calling PJI API: PJI_FM_XBS_ACCUM_UTILS.POPULATE_WORKPLAN_DATA() to populate
                -- the temporary table: PJI_FM_XBS_ACCUM_TMP1.This is done once here instead of, for each of the lowest tasks by calling
                -- PA_PROGRESS_PUB.push_workplan_actuals() with p_call_pji_apis_flag = 'Y'.
        -- Bug 3834339 : reducing the scope of IF so that populate_workplan_data gets called in version disabled case too
    END IF; -- IF (l_version_enabled_flag = 'Y') THEN

        BEGIN

        -- Bug 3846353 : Baselined str version also need to be passed, otherwise it will be null at task level

        l_baselined_str_ver_id := PA_PROJECT_STRUCTURE_UTILS.Get_Baseline_Struct_Ver(p_project_id);

        IF l_baselined_str_ver_id = -1 OR l_baselined_str_ver_id IS NULL THEN
            l_baselined_str_ver_id := p_working_str_version_id;
        END IF;


        -- 4392189 : Program reporting Changes : We are calling populate_pji_tab_for_plan instead of directly calling populate_workplan_data
                IF g1_debug_mode  = 'Y' THEN
                       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Before populate_pji_tab_for_plan', x_Log_Level=> 3);
                       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'l_baselined_str_ver_id='||l_baselined_str_ver_id, x_Log_Level=> 3);
                END IF;

        PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN(
            p_calling_module    => p_calling_module
            ,p_project_id           => p_project_id
            ,p_structure_version_id => p_working_str_version_id
            ,p_baselined_str_ver_id => l_baselined_str_ver_id
            ,p_program_rollup_flag  => 'Y'
            ,p_calling_context  => 'ROLLUP'
            ,x_return_status        => l_return_status
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            );

        /*
                PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data (
                                        p_project_id => p_project_id
                                        ,p_struct_ver_id => p_working_str_version_id
                                ,p_base_struct_ver_id   =>  l_baselined_str_ver_id
                                        ,x_return_status => l_return_status
                                        ,x_msg_code      => l_msg_code );

        */

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'After populate_pji_tab_for_plan task l_return_status='||l_return_status, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'Reading actuals and planned from PJI tmp', x_Log_Level=> 3);

            DECLARE
                CURSOR tmp1 IS
                SELECT
                /*+ INDEX(pji_fm_xbs_accum_tmp1 pji_fm_xbs_accum_tmp1_n1)*/ -- Fix for Bug # 4162534.
                * FROM pji_fm_xbs_accum_tmp1 WHERE project_id = p_project_id
                AND struct_version_id =p_working_str_version_id
                ;
            BEGIN
                FOR tmp1_rec IN tmp1 LOOP
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'PROJECT_ELEMENT_ID='||tmp1_rec.PROJECT_ELEMENT_ID, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'ACT_LABOR_HRS='||tmp1_rec.ACT_LABOR_HRS, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'ACT_EQUIP_HRS='||tmp1_rec.ACT_EQUIP_HRS, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'ACT_PRJ_BRDN_COST='||tmp1_rec.ACT_PRJ_BRDN_COST, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'LABOR_HOURS='||tmp1_rec.LABOR_HOURS, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'EQUIPMENT_HOURS='||tmp1_rec.EQUIPMENT_HOURS, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'BASE_LABOR_HOURS='||tmp1_rec.BASE_LABOR_HOURS, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'BASE_EQUIP_HOURS='||tmp1_rec.BASE_EQUIP_HOURS, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'PRJ_BRDN_COST='||tmp1_rec.PRJ_BRDN_COST, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV', x_Msg => 'PRJ_BASE_BRDN_COST='||tmp1_rec.PRJ_BASE_BRDN_COST, x_Log_Level=> 3);
                END LOOP;
            END;
        END IF;
        EXCEPTION
                WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name  => 'PA_PROGRESS_PUB',
                                        p_procedure_name => 'APPLY_LP_PROG_ON_CWV',
                                        p_error_text     => SUBSTRB('PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN:'||SQLERRM,1,120));
                        RAISE FND_API.G_EXC_ERROR;
        END;

    IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        x_msg_data := l_msg_data;
        x_return_status := 'E';
        x_msg_count := l_msg_count;
        RAISE  FND_API.G_EXC_ERROR;
        END IF;

        -- 3.3). Update table: pa_proj_element_ver_structure
        -- 3.4). Call Rollup API for the whole structure, Pass working structure version_id.
        -- Bug 4346801, we should rollup even for VD projects to re-calc EV.
        -- IF (l_version_enabled_flag <> 'Y') THEN

                PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT(
                 p_init_msg_list             => p_init_msg_list
        --Added by rtarway for BUG 3696263
                ,p_calling_module       => p_calling_module
                ,p_commit                    => p_commit
                ,p_validate_only             => p_validate_only
                ,p_project_id                => p_project_id
                ,p_structure_version_id      => p_working_str_version_id
                ,p_as_of_date                => l_as_of_date--l_max_as_of_date -- FPM Dev CR 4
                ,p_wp_rollup_method          => l_task_weight_basis_code ---l_c1rec.TASK_WT_BASIS_CODE -- FPM Dev CR 4
                ,p_rollup_entire_wbs         => 'Y' -- FPM Dev CR 4
                ,p_working_wp_prog_flag      => 'N' ---bug 3846353 . pass 'N'. Use baselined BAC
                ,x_return_status             => l_return_status
                ,x_msg_count                 => l_msg_count
                ,x_msg_data                  => l_msg_data);

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_msg_data := l_msg_data;
            x_return_status := 'E';
            x_msg_count := l_msg_count;
            RAISE  FND_API.G_EXC_ERROR;
        END IF;

                -- Call of rollup future is not needed here as there will be only one record per object in working version

        --- END IF; -- If workplan versioning is enabled

        UPDATE pa_proj_elem_ver_structure
                set date_prog_applied_on_wver = sysdate
                  ,schedule_dirty_flag = decode( PA_Project_Structure_Utils.Check_Third_Party_Sch_Flag(p_project_id),  --bug 3844689
                                                   'Y', 'Y', schedule_dirty_flag )         --set this flag to indicate re-scheduling is required.
        WHERE project_id = p_project_id
        AND element_version_id = p_working_str_version_id;

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;

EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to APPLY_LP_PROG_ON_CWV;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := fnd_msg_pub.count_msg;

-- BEGIN: Commenting this code out to fix Bug # 3956275.
/*

      -- BEGIN: Adding code to fix Bug # 3815741.

      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'APPLY_LP_PROG_ON_CWV',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));

      -- END: Adding code to fix Bug # 3815741.

*/

-- END: Commenting this code out to fix Bug # 3956275.

    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to APPLY_LP_PROG_ON_CWV;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'APPLY_LP_PROG_ON_CWV',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      x_msg_count := fnd_msg_pub.count_msg;
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
        rollback to APPLY_LP_PROG_ON_CWV;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'APPLY_LP_PROG_ON_CWV',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      x_msg_count := fnd_msg_pub.count_msg;
      raise;
END APPLY_LP_PROG_ON_CWV;

-- Progress Management Changes. Bug # 3420093.

PROCEDURE delete_working_wp_progress(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_structure_version_id        IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_task_version_id             IN      SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type()
 ,p_calling_context             IN      VARCHAR2        := 'STRUCTURE_VERSION'
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'DELETE_WORKING_WP_PROGRESS';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   i                               NUMBER;
BEGIN
        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.DELETE_WORKING_WP_PROGRESS');
        END IF;

        IF (p_debug_mode = 'Y') THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.debug('PA_PROGRESS_PUB.DELETE_WORKING_WP_PROGRESS');
                END IF;
        END IF;
        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint DELETE_WORKING_WP_PROGRESS;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        if (p_calling_context = 'STRUCTURE_VERSION') then

                delete from pa_progress_rollup
                where project_id = p_project_id
                -- and object_version_id = p_structure_version_id -- Bug 4190086
        and structure_version_id = p_structure_version_id -- Bug 4190086
        ;

        elsif (p_calling_context = 'PROJECT_STRUCTURE') then

                delete from pa_progress_rollup
                where project_id = p_project_id;

                delete from pa_proj_progress_attr
                where project_id = p_project_id;

                delete from pa_proj_workplan_attr
                where project_id = p_project_id;

        elsif (p_calling_context = 'TASK_VERSION') then

                forall i in p_task_version_id.first..p_task_version_id.last
                delete from pa_progress_rollup
                where project_id = p_project_id
                  and object_version_id = p_task_version_id(i);

                forall i in p_task_version_id.first..p_task_version_id.last
                delete from pa_percent_completes
                where project_id = p_project_id
                  and object_version_id = p_task_version_id(i);

        end if;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                     p_msg_name       => l_msg_data);
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;
EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to DELETE_WORKING_WP_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to DELETE_WORKING_WP_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'DELETE_WORKING_WP_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to DELETE_WORKING_WP_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'DELETE_WORKING_WP_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END delete_working_wp_progress;

-- Progress Management Changes. Bug # 3420093.

Procedure PULL_SUMMARIZED_ACTUALS (
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
   ,P_Project_ID        IN  NUMBER
   ,P_Calling_Mode      IN  VARCHAR2
   ,x_return_status     OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
   ,x_msg_count         OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
   ,x_msg_data          OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'PULL_SUMMARIZED_ACTUALS';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_project_id_list               SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
   l_proj_pgm_level                SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
   l_msg_code           VARCHAR2(32);

  l_str_ver_id       NUMBER;
  Cursor cur_Summerized_Actuals
  IS
    Select ppevs.element_version_id
    FROM  PA_Proj_Elem_Ver_Structure ppevs,
          PA_Proj_Elements        ppe,
          PA_Proj_Structure_Types ppst,
          PA_Structure_types      pst
    WHERE ppevs.Project_ID        = P_Project_ID
    AND   ppevs.status_code       = 'STRUCTURE_PUBLISHED'
    AND   ppevs.proj_element_id   = ppe.Proj_Element_ID
    AND   ppe.Project_ID          = ppevs.Project_ID
    AND   ppe.Proj_Element_ID     = ppst.Proj_Element_ID
    AND   ppst.Structure_Type_ID  = pst.Structure_Type_ID
    AND   pst.structure_type      = 'WORKPLAN';
 -- Bug 4600547 Begin
 CURSOR c_check_prog_exists IS
 SELECT 'Y'
 FROM pa_progress_rollup
 where project_id = P_Project_ID
 AND structure_type = 'WORKPLAN'
 and structure_version_id is null;

 l_check_prog_exists VARCHAR2(1):='N';
 -- Bug 4600547 End

 -- Bug 5961235 Begin
  CURSOR c_check_prog_exists_prg IS
  SELECT 'Y' from dual
  where exists ( select DISTINCT ppev.PROJECT_ID
                 FROM pa_progress_rollup ppr,
                      pa_proj_element_versions ppev
                where  ppr.project_id=ppev.project_id
                 and    ppev.OBJECT_TYPE = 'PA_STRUCTURES'
                 and    ppr.structure_type = 'WORKPLAN'
                 and    ppr.structure_version_id is null
                 and exists (select null
                         from   PA_PROJ_ELEMENT_VERSIONS ppev2
                         where  ppev2.project_id=p_project_id
                         and    ppev.prg_group=ppev2.prg_group)
                 );

  l_program_enable_flag VARCHAR2(1):='N';
 -- Bug 5961235 end

BEGIN
        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.PULL_SUMMARIZED_ACTUALS');
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PULL_SUMMARIZED_ACTUALS', x_Msg => 'PA_PROGRESS_PUB.PULL_SUMMARIZED_ACTUALS Start : P_Project_ID='||P_Project_ID||', P_Calling_Mode='||P_Calling_Mode, x_Log_Level=> 3);
        END IF;

	IF (p_commit = FND_API.G_TRUE) THEN
                savepoint PULL_SUMMARIZED_ACTUALS;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        --bug 4573340
        IF NOT NVL(PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(P_Project_ID),'X') = 'SHARE_FULL'
        THEN
           return;
        END IF;
        --end bug 4573340 This check is not related to bugfix 4573340. This is added while fixing that bug.

    -- Check the record
        OPEN cur_Summerized_Actuals;
        FETCH cur_Summerized_Actuals INTO l_str_ver_id;
        fetch cur_Summerized_Actuals into l_str_ver_id;
        if cur_Summerized_Actuals%notfound then
           If p_calling_mode = 'PUBLISH' Then
             l_project_id_list.extend;
             l_proj_pgm_level.extend;
             l_project_id_list(1) := P_Project_ID;
             l_proj_pgm_level(1) := 1; ---setting to 2 so that pgm rollup is done
             -- 4600547 : We don't need to set it to 2 because PA_PROGRESS_PVT.ROLLUP_PROG_FROM_SUBPROJS
             -- will take care of program rollup part after this call

             IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PULL_SUMMARIZED_ACTUALS', x_Msg => 'Calling GET_SUMMARIZED_ACTUALS with p_plan_res_level Y', x_Log_Level=> 3);
             END IF;

             PA_PROGRESS_PUB.GET_SUMMARIZED_ACTUALS (
             p_project_id_list      => l_project_id_list
            --,p_extraction_type      => 'FULL' 4415960
            ,p_extraction_type      => 'PUBLISH'-- 4415960
            ,p_plan_res_level       => 'Y'
            ,p_proj_pgm_level       => l_proj_pgm_level
            ,x_return_status        => x_return_status
            ,x_msg_count            => x_msg_count
            ,x_msg_data             => x_msg_data
             );

	     IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PULL_SUMMARIZED_ACTUALS', x_Msg => 'After Call x_return_status='||x_return_status, x_Log_Level=> 3);
	     END IF;

   	    -- Added the if block for Bug#5659575
	    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
		 RAISE FND_API.G_EXC_ERROR;
	    END IF;

            begin
              PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE_ACT_ETC (
                   p_plan_wbs_ver_id     => l_str_ver_id
                 , x_msg_code => l_msg_code
                 , x_return_status => x_return_status);

            EXCEPTION
             WHEN OTHERS THEN
                                        fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                                            p_procedure_name => 'PULL_SUMMARIZED_ACTUALS',
                                            p_error_text     => SUBSTRB('Call of PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE failed: sqlerrm='||SQLERRM,1,120));
                RAISE FND_API.G_EXC_ERROR;
            END;

            -- Added the if block for Bug#5659575
	    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
		 RAISE FND_API.G_EXC_ERROR;
	    END IF;

            -- Bug 4600547 Begin
            -- Added thew following cursor call to avoid unnecessary creating rollup records
            -- whene there is no incremental amounts found in first run for assignments

            OPEN c_check_prog_exists;
            FETCH c_check_prog_exists INTO l_check_prog_exists;
            CLOSE c_check_prog_exists;

            -- Bug 5961235 : For programs if sub projects has progress then we need to rollup at program task level
                         IF  nvl(l_check_prog_exists,'N') = 'N' THEN
                                 l_program_enable_flag := PA_PROJECT_STRUCTURE_UTILS.check_program_flag_enable(P_Project_ID);

                                 If l_program_enable_flag = 'Y' then
                                         OPEN c_check_prog_exists_prg;
                                         FETCH c_check_prog_exists_prg INTO l_check_prog_exists;
                                         CLOSE c_check_prog_exists_prg;
                                 end if;
                         END IF;

            IF nvl(l_check_prog_exists,'N') = 'Y' THEN

		IF g1_debug_mode  = 'Y' THEN
			pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PULL_SUMMARIZED_ACTUALS', x_Msg => 'Calling GET_SUMMARIZED_ACTUALS with p_plan_res_level N', x_Log_Level=> 3);
                END IF;

            PA_PROGRESS_PUB.GET_SUMMARIZED_ACTUALS (
             p_project_id_list      => l_project_id_list
            --,p_extraction_type      => 'FULL' 4415960
	    ,p_extraction_type      => 'PUBLISH'-- 4415960
            ,p_plan_res_level       => 'N'
            ,p_proj_pgm_level       => l_proj_pgm_level
            ,x_return_status        => x_return_status
            ,x_msg_count            => x_msg_count
            ,x_msg_data             => x_msg_data
            );

            IF g1_debug_mode  = 'Y' THEN
		pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PULL_SUMMARIZED_ACTUALS', x_Msg => 'After Call x_return_status='||x_return_status, x_Log_Level=> 3);
	    END IF;

  	    -- Bug 5659575
	    IF (x_return_status <> FND_API.G_RET_STS_SUCCESS) THEN
		    RAISE FND_API.G_EXC_ERROR;
	    END IF;

            END IF;
          End If;
        end if;
        CLOSE cur_Summerized_Actuals;

  EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to PULL_SUMMARIZED_ACTUALS;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to PULL_SUMMARIZED_ACTUALS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'PULL_SUMMARIZED_ACTUALS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to DELETE_WORKING_WP_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'PULL_SUMMARIZED_ACTUALS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END PULL_SUMMARIZED_ACTUALS;

-- Progress Management Changes. Bug # 3420093.

PROCEDURE UPDATE_PROGRESS(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_action                      IN      VARCHAR2        :='SAVE'
 ,P_rollup_entire_wbs_flag      IN      VARCHAR2        :='N'
 ,p_progress_mode               IN      VARCHAR2        :='FUTURE'
 ,p_percent_complete_id         IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_id                   IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_version_id           IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_type                 IN      VARCHAR2        :='PA_TASKS'
 ,p_as_of_date                  IN      DATE            :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_percent_complete            IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_progress_status_code        IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_progress_comment            IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_brief_overview              IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_actual_start_date           IN      DATE            :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_actual_finish_date          IN      DATE            :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_estimated_start_date        IN      DATE            :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_estimated_finish_date       IN      DATE            :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_scheduled_start_date        IN      DATE            :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_scheduled_finish_date       IN      DATE            :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_record_version_number       IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_task_status                 IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_est_remaining_effort        IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_ETC_cost                    IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_actual_work_quantity        IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pm_product_code             IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_structure_type              IN      VARCHAR2        :='WORKPLAN'
 ,p_actual_effort               IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_actual_cost                 IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_actual_effort_this_period   IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_actual_cost_this_period     IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_sub_type             IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_task_id                     IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_structure_version_id        IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_prog_fom_wp_flag            IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_rollup_reporting_lines_flag IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_planned_cost                IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_planned_effort              IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_rate_based_flag             IN      VARCHAR         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_resource_class_code         IN      VARCHAR         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_transfer_wp_pc_flag         IN      VARCHAR         := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_txn_currency_code           IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_rbs_element_id              IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
-- ,p_resource_list_member_id     IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- Bug 3764224
 ,p_resource_assignment_id    IN        NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  -- Bug 3764224
,p_eff_rollup_percent_complete  IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  --    3910193
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'UPDATE_PROGRESSES'       ;
   l_api_version        CONSTANT   NUMBER          := p_api_version             ;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID        ;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID       ;
   l_return_status                 VARCHAR2(1)                                  ;
   l_msg_count                     NUMBER                                       ;
   l_msg_data                      VARCHAR2(250)                                ;
   l_object_type                   VARCHAR2(30)                                 ;
   l_structure_version_id          NUMBER                                       ;
   l_task_version_id               NUMBER                                       ;
   l_wp_rollup_method              pa_proj_progress_attr.task_weight_basis_code%TYPE;
   l_fin_rollup_method             pa_proj_progress_attr.task_weight_basis_code%TYPE;
   l_rollup_method                 pa_proj_progress_attr.task_weight_basis_code%TYPE;
   L_LOWEST_LEVEL_TASK             VARCHAR2(1);
   l_last_progress_date            DATE;
   l_plan_version_id               NUMBER;

   --BUG3632883
   l_flag                          VARCHAR2(1);

   CURSOR c_get_task_version_id(c_proj_element_id NUMBER, c_project_id NUMBER, c_structure_version_id NUMBER)
   IS
   SELECT element_version_id, parent_structure_version_id
   FROM pa_proj_element_versions
   WHERE proj_element_id = c_proj_element_id
   AND object_type = 'PA_TASKS'
   AND project_id = c_project_id
   AND parent_structure_version_id = c_structure_version_id;

   CURSOR c_get_task_weight_method(c_project_id NUMBER, c_structure_type VARCHAR2)
   IS
   SELECT task_weight_basis_code
   FROM pa_proj_progress_attr
   WHERE project_id = c_project_id
   AND structure_type = c_structure_type;

   CURSOR c_get_latest_pub_task_ver(c_proj_element_id NUMBER, c_project_id NUMBER)
   IS
   SELECT elemver.element_version_id, elemver.parent_structure_version_id
   FROM pa_proj_element_versions elemver, pa_proj_elem_ver_structure str
   WHERE elemver.proj_element_id = c_proj_element_id
   AND elemver.object_type = 'PA_TASKS'
   AND elemver.project_id = c_project_id
   AND str.project_id = c_project_id
   AND elemver.parent_structure_version_id = str.element_version_id
   AND str.latest_eff_published_flag = 'Y';

   --BUG3632883: Check for template, progress should not be allowed for template.
   --to be used only in AMG flow
   CURSOR c_get_template_flag
   IS
   SELECT TEMPLATE_FLAG
   FROM PA_PROJECTS_ALL
   WHERE PROJECT_ID = p_project_id;

   l_structure_sharing_code    pa_projects_all.structure_sharing_code%TYPE; -- Bug 3586648
   l_task_id                   NUMBER; --3603636
   -- Bug 3722011 Begin
   L_SHARING_ENABLED          VARCHAR2(1)                                               ;
   L_SPLIT_WORKPLAN           VARCHAR2(1)                                               ;
   l_project_ids              SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type()        ;
   l_struture_version_ids     SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type()        ;
   l_proj_thru_dates_tbl      SYSTEM.pa_date_tbl_type:= SYSTEM.pa_date_tbl_type()       ;
   -- Bug 3722011 End

   -- BEGIN: Code to fix Bug # 3821106.

   cursor cur_percent_complete(p_project_id NUMBER, p_object_id NUMBER
                               , p_object_version_id NUMBER, p_object_type VARCHAR2
                               , p_as_of_date DATE) is
   select 'Y'
   from pa_progress_rollup
   where project_id = p_project_id
   and object_id = p_object_id
   and object_type = p_object_type
   and as_of_date = p_as_of_date
   and structure_type = 'WORKPLAN'
   and current_flag = 'Y'
   and not exists (select 1
           from pa_percent_completes
           where project_id = p_project_id
           and object_id = p_object_id
           and object_type = p_object_type
           and date_computed = p_as_of_date
           and structure_type = 'WORKPLAN');

   cur_percent_complete_rec cur_percent_complete%rowtype;

   l_action VARCHAR2(30);

   l_resource_list_member_id NUMBER;
   l_prog_pa_period_name VARCHAR2(30);
   l_prog_gl_period_name VARCHAR2(30);

   -- END: Code to fix Bug # 3821106.
   l_base_struct_ver_id   NUMBER;
   l_msg_code             VARCHAR2(32);
   l_calling_mode     VARCHAR2(15);

-- Begin Bug # 4524977.

l_prev_prog_upd_date date; -- 7225884

cursor l_cur_publish(l_request_id NUMBER)  is
select substr(fcrsv.argument_text,1,(instr(fcrsv.argument_text,','))-1) process
from fnd_conc_req_summary_v fcrsv
where fcrsv.request_id = l_request_id;

l_rec_publish l_cur_publish%ROWTYPE;

l_wp_ver_enabled_flag VARCHAR2(1) := null;

l_request_id            NUMBER          := null;
l_process_code          VARCHAR2(30)    := null;
l_str_version_id        NUMBER          := null;
l_structure_id          NUMBER          := null;

-- End for Bug # 4524977.

BEGIN

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.UPDATE_PROGRESS');
        END IF;

        -- FPM Dev CR 3 : Added Debug messages
        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_init_msg_list='||p_init_msg_list, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_commit='||p_commit, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_validate_only='||p_validate_only, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_validation_level='||p_validation_level, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_calling_module='||p_calling_module, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_debug_mode='||p_debug_mode, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_max_msg_count='||p_max_msg_count, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_action='||p_action, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_progress_mode='||p_progress_mode, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_percent_complete_id='||p_percent_complete_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_object_id='||p_object_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_object_version_id='||p_object_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_object_type='||p_object_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_percent_complete='||p_percent_complete, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_eff_rollup_percent_complete='||p_eff_rollup_percent_complete, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_progress_status_code='||p_progress_status_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_progress_comment='||p_progress_comment, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_brief_overview='||p_brief_overview, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_actual_start_date='||p_actual_start_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_actual_finish_date='||p_actual_finish_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_estimated_start_date='||p_estimated_start_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_estimated_finish_date='||p_estimated_finish_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_scheduled_start_date='||p_scheduled_start_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_scheduled_finish_date='||p_scheduled_finish_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_record_version_number='||p_record_version_number, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_task_status='||p_task_status, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_est_remaining_effort='||p_est_remaining_effort, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_ETC_cost='||p_ETC_cost, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_actual_work_quantity='||p_actual_work_quantity, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_pm_product_code='||p_pm_product_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_structure_type='||p_structure_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_actual_effort='||p_actual_effort, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_actual_cost='||p_actual_cost, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_actual_effort_this_period='||p_actual_effort_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_actual_cost_this_period='||p_actual_cost_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_object_sub_type='||p_object_sub_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_task_id='||p_task_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_structure_version_id='||p_structure_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_prog_fom_wp_flag='||p_prog_fom_wp_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_rollup_reporting_lines_flag='||p_rollup_reporting_lines_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_planned_cost='||p_planned_cost, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_planned_effort='||p_planned_effort, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_rate_based_flag='||p_rate_based_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_resource_class_code='||p_resource_class_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_transfer_wp_pc_flag='||p_transfer_wp_pc_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_txn_currency_code='||p_txn_currency_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_rbs_element_id='||p_rbs_element_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_resource_assignment_id='||p_resource_assignment_id, x_Log_Level=> 3);
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint UPDATE_PROGRESS;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        -- Begin fix for Bug # 4524977.

        PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_DETAILS
        (p_project_id            => p_project_id
        ,p_structure_type        => p_structure_type
        ,x_request_id            => l_request_id
        ,x_process_code          => l_process_code
        ,x_structure_version_id  => l_str_version_id
        ,x_return_status         => l_return_status
        ,x_msg_count             => l_msg_count
        ,x_msg_data              => l_msg_data);


        if l_return_status <> FND_API.G_RET_STS_SUCCESS then

                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;

                raise FND_API.G_EXC_ERROR;

        end if;

        open l_cur_publish(l_request_id);
        fetch l_cur_publish into l_rec_publish;
        close l_cur_publish;

        l_wp_ver_enabled_flag := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED(p_project_id);

        if ((l_rec_publish.process = 'CONC_PUBLISH')
            and (l_process_code in ('WUP', 'WUE'))
            and (l_wp_ver_enabled_flag = 'Y')) then

                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
                                     ,p_msg_name      => 'PA_PS_PUBLISH_NO_PROG');

                x_msg_data := 'PA_PS_PUBLISH_NO_PROG';

                x_return_status := FND_API.G_RET_STS_ERROR;

                raise FND_API.G_EXC_ERROR;

        elsif ((l_rec_publish.process = 'CONC_UPDATE')
               and (l_process_code = 'WUP')
               and (l_wp_ver_enabled_flag = 'N')) then

                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
                                     ,p_msg_name      => 'PA_PS_UPDATE_NO_PROG');

                x_msg_data := 'PA_PS_UPDATE_NO_PROG';

                x_return_status := FND_API.G_RET_STS_ERROR;

                raise FND_API.G_EXC_ERROR;

        elsif ((l_rec_publish.process = 'APPLY_PROGRESS')
               and (l_process_code = 'WUP')
               and (l_wp_ver_enabled_flag = 'N')) then

                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
                                     ,p_msg_name      => 'PA_PS_APLPRG_NO_PROG');

                x_msg_data := 'PA_PS_APLPRG_NO_PROG';

                x_return_status := FND_API.G_RET_STS_ERROR;

                raise FND_API.G_EXC_ERROR;

        end if;

        -- End fix for Bug # 4524977.

         -- BEGIN: Code to fix Bug # 3821106.

     l_action := p_action;
     -- Bug 3879461 : Commented teporary code below.
        /*
         if (p_action = 'SAVE') then
            open cur_percent_complete(p_project_id, p_object_id
                                      , p_object_version_id, p_object_type
                                      , p_as_of_date);
            fetch cur_percent_complete into cur_percent_complete_rec;
            if cur_percent_complete%FOUND then
                    l_action := 'PUBLISH';
            end if;
            close cur_percent_complete;
         end if;
     */

         -- END: Code to fix Bug # 3821106.

        l_structure_sharing_code := PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(p_project_id); -- Bug 3586648
        -- Bug 3722011 Begin
        l_sharing_Enabled := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(p_project_id);
        IF (l_sharing_Enabled = 'N' OR (l_sharing_Enabled = 'Y' AND l_structure_sharing_code <> 'SHARE_FULL')) AND p_structure_type = 'WORKPLAN' THEN
                l_split_workplan := 'Y';
        ELSE
                l_split_workplan := 'N';
        END IF;
        -- Bug 3722011 End

        --BUG3632883
        IF (p_calling_module = 'AMG')
        THEN
            OPEN c_get_template_flag;
            FETCH c_get_template_flag INTO l_flag;
            CLOSE c_get_template_flag;

            IF (l_flag = 'Y')
            THEN
            --Raise Error
               PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                    ,p_msg_name       => 'PA_TEMPL_PROGRESS_NOT_ALLOWED');
               x_msg_data := 'PA_TEMPL_PROGRESS_NOT_ALLOWED';
               x_return_status := FND_API.G_RET_STS_ERROR;
               RAISE  FND_API.G_EXC_ERROR;
            END IF;
        END IF;

    -- Begin code fix for bug # 3974859.

	IF p_structure_type = 'WORKPLAN' THEN
	  -- bug 7225884
	  BEGIN
	     SELECT next_progress_update_date
	       INTO l_prev_prog_upd_date
	       FROM pa_proj_progress_attr
	      WHERE project_id = p_project_id
	    AND object_type    = 'PA_STRUCTURES'
	    AND structure_type = 'WORKPLAN';
	  EXCEPTION
	  WHEN OTHERS THEN
	    l_prev_prog_upd_date := p_as_of_date-1;
	  END;

	  IF NVL(l_prev_prog_upd_date,p_as_of_date-1) <> p_as_of_date THEN
	     UPDATE pa_proj_progress_attr
	    SET next_progress_update_date = p_as_of_date
	      WHERE project_id            = p_project_id
	    AND object_type               = 'PA_STRUCTURES'
	    AND structure_type            = 'WORKPLAN';
	  END IF;
	END IF;

    -- End code fix for bug # 3974859.

        -- FPM Dev CR 1 : Added call of UPDATE_FINANCIAL_TASK_PROGRESS for Financial Percent Complete
        IF p_structure_type = 'FINANCIAL'
        THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'Structure Type Financial ', x_Log_Level=> 3);
                END IF;

                l_last_progress_date := PA_PROGRESS_UTILS.GET_LATEST_AS_OF_DATE(
                                     p_task_id        => p_task_id
                                    ,p_project_id     => p_project_id
                                    ,p_object_id      => p_object_id
                                    ,p_object_type    => p_object_type
                                    ,p_structure_type => p_structure_type
                          );
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'l_last_progress_date='||l_last_progress_date, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'Calling UPDATE_FINANCIAL_TASK_PROGRESS', x_Log_Level=> 3);
                END IF;

                PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS(
                        p_api_version                   => l_api_version
                        ,p_init_msg_list                => p_init_msg_list
                        ,p_commit                       => p_commit
                        ,p_validate_only                => p_validate_only
                        ,p_validation_level             => p_validation_level
                        ,p_calling_module               => p_calling_module
                        ,p_action                       => l_action -- Code to fix Bug # 3821106.
                        ,P_rollup_entire_wbs_flag       => P_rollup_entire_wbs_flag
                        ,p_percent_complete_id          => p_percent_complete_id
                        ,p_project_id                   => p_project_id
                        ,p_object_id                    => p_object_id
                        ,p_object_version_id            => p_object_version_id
                        ,p_object_type                  => p_object_type
                        ,p_as_of_date                   => p_as_of_date
                        ,p_percent_complete             => p_percent_complete
                        ,p_structure_type               => p_structure_type
                        ,p_task_id                      => p_task_id
                        ,p_structure_version_id         => p_structure_version_id
                        ,p_record_version_number        => p_record_version_number
                        ,p_progress_comment             => p_progress_comment -- Bug 3595585
                        ,p_brief_overview               => p_brief_overview -- Bug 3595585
                        ,x_return_status                => l_return_status
                        ,x_msg_count                    => l_msg_count
                        ,x_msg_data                     => l_msg_data
                          );
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'After Calling UPDATE_FINANCIAL_TASK_PROGRESS l_return_status='||l_return_status, x_Log_Level=> 3);
                END IF;

        -- PA_ASSIGNMENTS
        ELSIF p_object_type = 'PA_ASSIGNMENTS'  AND p_structure_type = 'WORKPLAN' THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'Calling UPDATE_ASSIGNMENT_PROGRESS', x_Log_Level=> 3);
                END IF;

                PA_ASSIGNMENT_PROGRESS_PUB.UPDATE_ASSIGNMENT_PROGRESS(
                p_api_version                   => l_api_version
                ,p_init_msg_list                => p_init_msg_list
                ,p_commit                       => p_commit
                ,p_validate_only                => p_validate_only
                ,p_validation_level             => p_validation_level
                ,p_calling_module               => p_calling_module
                ,p_action                       => l_action -- Code to fix Bug # 3821106.
                ,p_bulk_load_flag               => p_rollup_entire_wbs_flag
                ,p_progress_mode                => p_progress_mode
                ,p_percent_complete_id          => p_percent_complete_id
                ,p_project_id                   => p_project_id
                ,p_object_id                    => p_object_id
                ,p_object_version_id            => p_object_version_id
                ,p_task_id                      => p_task_id
                ,p_as_of_date                   => p_as_of_date
                ,p_progress_comment             => p_progress_comment
                ,p_brief_overview               => p_brief_overview
                ,p_actual_start_date            => p_actual_start_date
                ,p_actual_finish_date           => p_actual_finish_date
                ,p_estimated_start_date         => p_estimated_start_date
                ,p_estimated_finish_date        => p_estimated_finish_date
                ,p_record_version_number        => p_record_version_number
                ,p_pm_product_code              => p_pm_product_code
                ,p_structure_type               => p_structure_type
                ,p_structure_version_id         => p_structure_version_id
                ,p_actual_cost_this_period      => p_actual_cost_this_period
                ,p_actual_effort_this_period    => p_actual_effort_this_period
                ,p_rate_based_flag              => p_rate_based_flag
                ,p_resource_class_code          => p_resource_class_code
                ,p_actual_cost                  => p_actual_cost
                ,p_actual_effort                => p_actual_effort
                ,p_etc_cost_this_period         => p_etc_cost
                ,p_etc_effort_this_period       =>  p_est_remaining_effort
                ,p_txn_currency_code            => p_txn_currency_code
                ,p_rbs_element_id               => p_rbs_element_id
--                ,p_resource_list_member_id      => p_resource_list_member_id -- Bug 3764224
                ,p_resource_assignment_id      => p_resource_assignment_id -- Bug 3764224
                ,p_scheduled_start_date         => p_scheduled_start_date -- Bug 3586648
                ,p_scheduled_finish_date        => p_scheduled_finish_date -- Bug 3586648
                ,x_return_status                => l_return_status
                ,x_msg_count                    => l_msg_count
                ,x_msg_data                     => l_msg_data
                );
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'After Calling UPDATE_ASSIGNMENT_PROGRESS l_return_status='||l_return_status, x_Log_Level=> 3);
                END IF;
        -- PA_DELIVERABLES
        ELSIF p_object_type = 'PA_DELIVERABLES'  AND p_structure_type = 'WORKPLAN' THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'Calling UPDATE_DELIVERABLE_PROGRESS', x_Log_Level=> 3);
                END IF;

                PA_DELIVERABLE_PROGRESS_PUB.UPDATE_DELIVERABLE_PROGRESS(
                p_api_version                   => l_api_version
                ,p_init_msg_list                => p_init_msg_list
                ,p_commit                       => p_commit
                ,p_validate_only                => p_validate_only
                ,p_validation_level             => p_validation_level
                ,p_calling_module               => p_calling_module
                ,p_action                       => l_action -- Code to fix Bug # 3821106.
                ,p_bulk_load_flag               => P_rollup_entire_wbs_flag
                ,p_progress_mode                => p_progress_mode
                ,p_percent_complete_id          => p_percent_complete_id
                ,p_project_id                   => p_project_id
                ,p_object_id                    => p_object_id
                ,p_object_type                  => p_object_type
                ,p_object_version_id            => p_object_version_id
                ,p_del_status                   => p_task_status -- FPM Dev CR 1
                ,p_task_id                      => p_task_id
                ,p_as_of_date                   => p_as_of_date
                ,p_percent_complete             => p_percent_complete
                ,p_progress_status_code         => p_progress_status_code
                ,p_progress_comment             => p_progress_comment
                ,p_brief_overview               => p_brief_overview
                ,p_actual_finish_date           => p_actual_finish_date
                ,p_record_version_number        => p_record_version_number
                ,p_pm_product_code              => p_pm_product_code
                ,p_structure_type               => p_structure_type
                ,x_return_status                => l_return_status
                ,x_msg_count                    => l_msg_count
                ,x_msg_data                     => l_msg_data
                );
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'After Calling UPDATE_DELIVERABLE_PROGRESS l_return_status='||l_return_status, x_Log_Level=> 3);
                END IF;

        -- PA_TASKS and PA_STRUCTURES
        ELSIF (p_object_type = 'PA_TASKS' OR p_object_type = 'PA_STRUCTURES')   AND p_structure_type = 'WORKPLAN'  THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'Calling UPDATE_TASK_PROGRESS', x_Log_Level=> 3);
                END IF;
                PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS(
                 p_api_version           => l_api_version
                ,p_init_msg_list         => p_init_msg_list
                ,p_commit                => p_commit
                ,p_validate_only         => p_validate_only
                ,p_validation_level      => p_validation_level
                ,p_calling_module        => p_calling_module
                ,p_debug_mode            => p_debug_mode
                ,p_max_msg_count         => p_max_msg_count
                ,p_action                => l_action -- Code to fix Bug # 3821106.
                ,p_bulk_load_flag        => p_rollup_entire_wbs_flag
                ,p_progress_mode         => p_progress_mode
                ,p_percent_complete_id   => p_percent_complete_id
                ,p_project_id            => p_project_id
                ,p_object_id             => p_object_id
                ,p_object_version_id     => p_object_version_id
                ,p_object_type           => p_object_type
                ,p_as_of_date            => p_as_of_date
                ,p_percent_complete      => p_percent_complete
                ,p_progress_status_code  => p_progress_status_code
                ,p_progress_comment      => p_progress_comment
                ,p_brief_overview        => p_brief_overview
                ,p_actual_start_date     => p_actual_start_date
                ,p_actual_finish_date    => p_actual_finish_date
                ,p_estimated_start_date  => p_estimated_start_date
                ,p_estimated_finish_date => p_estimated_finish_date
                ,p_record_version_number => p_record_version_number
                ,p_task_status           => p_task_status
                ,p_actual_work_quantity  => p_actual_work_quantity
                ,p_pm_product_code       => p_pm_product_code
                ,p_structure_type        => p_structure_type
                ,p_prog_fom_wp_flag      => p_prog_fom_wp_flag
                ,p_planned_cost          => p_planned_cost
                ,p_planned_effort        => p_planned_effort
                ,p_actual_effort         => p_actual_effort
                ,p_est_remaining_effort  => p_est_remaining_effort
                ,p_structure_version_id  => p_structure_version_id -- Bug 3608422 : Passing structure version id too
                ,p_eff_rollup_percent_complete => p_eff_rollup_percent_complete  --bug 3910193
                ,x_resource_list_member_id => l_resource_list_member_id
                ,x_return_status         => l_return_status
                ,x_msg_count             => l_msg_count
                ,x_msg_data              => l_msg_data
                );
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'After Calling UPDATE_TASK_PROGRESS l_return_status='||l_return_status, x_Log_Level=> 3);
                END IF;
        END IF;

         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
         END IF;

        -- Bug 3614828 : Moved the code to get local variables for object type, task version id, structure type etc..
        -- here, so that it is also accessible to ASGN_DLV_TO_TASK_ROLLUP_PVT
        IF (p_object_type = 'PA_ASSIGNMENTS' OR p_object_type = 'PA_DELIVERABLES'
        OR (p_structure_type = 'FINANCIAL' and p_object_type = 'PA_TASKS')) THEN

            l_object_type := 'PA_TASKS';
            l_task_version_id := null;
            -- FPM Dev CR 1 : Call of cursor c_get_latest_pub_task_ver
            IF   p_object_type = 'PA_DELIVERABLES' AND  (p_task_id IS NOT NULL AND p_task_id <>PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM )THEN
                -- In deliverable case, we may not get task's structure version id. So we need to derive it.
                    -- Bug 3957792 --  Proceed for roll-up only if task is not in cancelled status
                    IF ( PA_PROGRESS_UTILS.get_system_task_status(PA_PROGRESS_UTILS.get_task_status( p_project_id, p_task_id)) <> 'CANCELLED' ) THEN
                OPEN c_get_latest_pub_task_ver(p_task_id, p_project_id);
                FETCH c_get_latest_pub_task_ver INTO l_task_version_id, l_structure_version_id;
                CLOSE c_get_latest_pub_task_ver;
            END IF;

            ELSE
                    OPEN c_get_task_version_id(p_task_id, p_project_id ,p_structure_version_id);
                    FETCH c_get_task_version_id INTO l_task_version_id, l_structure_version_id;
                    CLOSE c_get_task_version_id;
            END IF;
            l_lowest_level_task := PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(p_task_version_id => l_task_version_id );
            l_task_id := p_task_id; -- 3603636
        ELSE
            l_object_type := p_object_type;
            l_task_version_id   := p_object_version_id;
            l_lowest_level_task := PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(p_task_version_id => l_task_version_id );
            l_structure_version_id := p_structure_version_id;
            l_task_id := p_object_id; -- 3603636
        END IF;

        OPEN c_get_task_weight_method(p_project_id, p_structure_type);
        FETCH c_get_task_weight_method INTO l_rollup_method;
        CLOSE c_get_task_weight_method;

        IF p_structure_type = 'WORKPLAN' THEN
                l_wp_rollup_method := l_rollup_method;
        ELSE
                l_fin_rollup_method := l_rollup_method;
        END IF;

        /* maansari 21-JUN-2004 */
        -- Begin commenting  out since we do not want this to be patched on pjd2qa unless this is tested

        -- Bug 3614828 : Added call of ASGN_DLV_TO_TASK_ROLLUP_PVT for partial rollup
        IF ((l_action = 'SAVE' AND p_calling_module = 'TASK_PROG_DET_PAGE' -- Code to fix Bug # 3821106.
                AND (p_task_id IS NOT NULL AND p_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                AND  (l_task_version_id IS NOT NULL AND l_task_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                AND (p_object_type = 'PA_ASSIGNMENTS' OR p_object_type = 'PA_DELIVERABLES' )  --bug 4097524 added PA_TASKS also
                -- This condition can be modified to make PA_TASKS if we can make sure that task records are getting inserted at the last after inserting assignment and delievarble progress from Task Progress Details page
                -- This will improve performance as it will be called once only i.e. for tasks
                -- as of now it will be called for each assignments and deliverables for a task
                AND p_structure_type = 'WORKPLAN')
        OR --bug 4101208
        (l_action = 'SAVE'
                AND (p_task_id IS NOT NULL AND p_task_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                AND  (l_task_version_id IS NOT NULL AND l_task_version_id <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)
                AND ( p_object_type = 'PA_TASKS')
                AND p_structure_type = 'WORKPLAN')
        )
        THEN
                pa_progress_pub.ASGN_DLV_TO_TASK_ROLLUP_PVT(
                        p_calling_module => p_calling_module,
                        p_project_id => p_project_id,
                        p_task_id => p_task_id,
                        p_task_version_id => l_task_version_id,
                        p_as_of_date => p_as_of_date,
                        p_structure_version_id => l_structure_version_id,
                        p_wp_rollup_method     => l_wp_rollup_method,
                        x_return_status                => l_return_status,
                        x_msg_count                     => l_msg_count,
                        x_msg_data                      => l_msg_data);


                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        x_msg_data := l_msg_data;
                        x_return_status := 'E';
                        x_msg_count := l_msg_count;
                        RAISE  FND_API.G_EXC_ERROR;
                END IF;
         END IF;


        --End commenting out since we do not want this to be patched on pjd2qa unless this is tested.
        /* maansari 21-JUN-2004 */

             -- Amit : 1. Call of Future Rollup Progress
             --        2. lowest task variable population
             --        3. object version id is of task to be passed
             --        4. p_process_whole_tree to be passed as Y
             --        5. structure type also to be passed
             --        6. p_fin_rollup_method and p_wp_rollup_method is to be passed
             --        7. l_structure_version_id is not having any value.
             --        8. Call of program rollup private API

    IF l_action = 'PUBLISH' -- Code to fix Bug # 3821106.
    THEN

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'p_action PUBLISH', x_Log_Level=> 3);
        END IF;

        IF ( p_rollup_entire_wbs_flag = 'N' AND l_object_type = 'PA_TASKS' AND l_task_version_id IS NOT NULL)
        THEN
            IF l_split_workplan = 'Y' AND p_object_type <> 'PA_DELIVERABLES' THEN -- Bug 4370820 : Added <> DELIVERABLES
                BEGIN
                    Pa_Task_Pub1.G_CALL_PJI_ROLLUP := 'N'; -- Bug 4186007
                    -- This flag is set so that plan_update from MAINTAIN_ACTUAL_AMT_WRP
                    -- is not called. Actually it gets called but PJI code does not do anything.

                    l_project_ids.extend(1);
                    l_project_ids(1) := p_project_id;
                    l_struture_version_ids.extend(1);
                    l_struture_version_ids(1) := l_structure_version_id;
                    l_proj_thru_dates_tbl.extend(1);
                    l_proj_thru_dates_tbl(1) := p_as_of_date;
                    PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP
                           (P_PROJECT_ID_TAB                   => l_project_ids,
                        P_WP_STR_VERSION_ID_TAB            => l_struture_version_ids,
                        P_ACTUALS_THRU_DATE                => l_proj_thru_dates_tbl,
                        P_CALLING_CONTEXT                  => 'WP_PROGRESS',
                        P_EXTRACTION_TYPE                  => 'INCREMENTAL', -- Bug 4186007
                        X_RETURN_STATUS                    => l_return_status,
                        X_MSG_COUNT                        => l_msg_count,
                        X_MSG_DATA                         => l_msg_data
                         );

                    Pa_Task_Pub1.G_CALL_PJI_ROLLUP := null ; -- Bug 4186007
                    delete from PA_PROG_ACT_BY_PERIOD_TEMP where project_id = p_project_id
                    AND structure_version_id = l_structure_version_id;
                    -- 3994165 : Deletion is now moved here.
                EXCEPTION
                     WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                         p_procedure_name => 'update_progress',
                         p_error_text     => SUBSTRB('PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP:'||SQLERRM,1,120));
                        RAISE FND_API.G_EXC_ERROR;
                END;

                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                              p_msg_name       => l_msg_data);
                    x_msg_data := l_msg_data;
                    x_return_status := 'E';
                    x_msg_count := l_msg_count;
                    RAISE  FND_API.G_EXC_ERROR;
                END IF;

            END IF; -- l_split_workplan = 'Y' THEN

            IF p_structure_type = 'WORKPLAN' THEN
                BEGIN
                    --- getting plan id
                    l_plan_version_id := Pa_Fp_wp_gen_amt_utils.get_wp_version_id(
                              p_project_id => p_project_id,
                              p_plan_type_id => -1,
                              p_proj_str_ver_id => l_structure_version_id) ;
                    PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE(
                            p_plan_version_id => l_plan_version_id,
                            x_msg_code => l_msg_code,
                            x_return_status => x_return_status);
                EXCEPTION
                    WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                        p_procedure_name => 'update_progress',
                        p_error_text     => SUBSTRB('Call PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE:'||SQLERRM,1,120));
                        RAISE FND_API.G_EXC_ERROR;
                END;
                IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                              p_msg_name       => l_msg_code);
                    x_return_status := 'E';
                    RAISE  FND_API.G_EXC_ERROR;
                END IF;


                l_base_struct_ver_id := pa_project_structure_utils.get_baseline_struct_ver(p_project_id);

                IF (l_base_struct_ver_id = -1) THEN
                    l_base_struct_ver_id := l_structure_version_id; --maansari7/6 bug 3742356
                END IF;
                -- 4392189 : Instead of populate_workplan_data call, POPULATE_PJI_TAB_FOR_PLAN
                PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN(
                    p_calling_module    => p_calling_module
                    ,p_project_id           => p_project_id
                    ,p_structure_version_id => l_structure_version_id
                    ,p_baselined_str_ver_id => l_base_struct_ver_id
                    ,p_program_rollup_flag  => 'Y'
                    ,p_calling_context  => 'SUMMARIZE'
                    ,p_as_of_date       => p_as_of_date
                    ,x_return_status        => l_return_status
                    ,x_msg_count            => l_msg_count
                    ,x_msg_data             => l_msg_data
                    );
                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    x_msg_data := l_msg_data;
                    x_return_status := 'E';
                    x_msg_count := l_msg_count;
                    RAISE  FND_API.G_EXC_ERROR;
                END IF;

                /*
                BEGIN
                    PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data(
                        p_project_id        => p_project_id,
                        p_struct_ver_id     => l_structure_version_id,
                        p_base_struct_ver_id => l_base_struct_ver_id,
                        p_as_of_date    => p_as_of_date, -- Fix for Bug # 4251406.
                        x_return_status     => x_return_status,
                        x_msg_code          => l_msg_code
                        );
                EXCEPTION
                    WHEN OTHERS THEN
                        fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'update_progress',
                            p_error_text     => SUBSTRB('Call PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data:'||SQLERRM,1,120));
                        RAISE FND_API.G_EXC_ERROR;
                END;
                */
            END IF;-- p_structure_type = 'WORKPLAN' THEN

            PA_PROGRESS_PVT.ROLLUP_PROGRESS_PVT(
             p_init_msg_list                => 'F'
            ,p_commit                       => 'F'
            ,p_validate_only                => 'F'
            ,p_calling_module       => p_calling_module
            ,p_progress_mode                => p_progress_mode
            ,p_project_id                   => p_project_id
            ,P_OBJECT_TYPE                  => 'PA_TASKS'
            ,P_OBJECT_ID                    => l_task_id -- p_task_id 3603636
            ,p_object_version_id            => l_task_version_id
            ,p_as_of_date                   => p_as_of_date
            ,p_lowest_level_task            => nvl(l_lowest_level_task, 'N')
            ,p_process_whole_tree           => 'Y'
            ,p_structure_version_id         => l_structure_version_id
            ,p_rollup_entire_wbs             => p_rollup_entire_wbs_flag
            ,p_fin_rollup_method             => l_fin_rollup_method
            ,p_wp_rollup_method     => l_wp_rollup_method
            ,p_task_version_id      => l_task_version_id
            ,p_structure_type               => p_structure_type
            ,x_return_status                => l_return_status
            ,x_msg_count                    => l_msg_count
            ,x_msg_data                     => l_msg_data);

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'After Calling ROLLUP_PROGRESS_PVT l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
            END IF;

            -----5466645
        IF p_progress_mode <> 'BACKDATED' AND p_object_type = 'PA_TASKS'
	   AND p_structure_type = 'WORKPLAN'   --maansari fpm changes
	THEN
          IF ( NVL( l_lowest_level_task, 'N' ) = 'Y' ) THEN
                   PA_TASK_PVT1.Update_Dates_To_All_Versions(
                       p_project_id           => p_project_id
                      ,p_element_version_id       => l_task_version_id
                      ,x_return_status               => l_return_status
                      ,x_msg_count                   => l_msg_count
                      ,x_msg_data                    => l_msg_data );
		IF l_return_status <> FND_API.G_RET_STS_SUCCESS
		THEN
		PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
			     p_msg_name       => l_msg_data);
			x_msg_data := l_msg_data;
			x_return_status := 'E';
			RAISE  FND_API.G_EXC_ERROR;
		END IF;

		BEGIN
			Select ppev1.proj_element_id
			into l_structure_id
			from pa_proj_element_versions ppev1, pa_proj_element_versions ppev2
			where ppev2.element_version_id = l_task_version_id
			and ppev2.project_id = ppev1.project_id
			and ppev2.parent_structure_version_id = ppev1.element_version_id;
		EXCEPTION WHEN OTHERS THEN
			l_structure_id := -999;
		END;

		IF ((PA_WORKPLAN_ATTR_UTILS.CHECK_AUTO_DATE_SYNC_ENABLED(l_structure_id) = 'Y')
		AND
		(PA_Proj_Elements_Utils.CHECK_IS_FINANCIAL_TASK(p_task_id) = 'Y')    --Bug 3784405  Satish
		AND
		(PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(p_project_id) = 'Y'))
		THEN
		--copy to transaction dates
			PA_PROJECT_DATES_PUB.COPY_PROJECT_DATES(
			p_validate_only => FND_API.G_FALSE
			,p_project_id => p_project_id
			,x_return_status => x_return_status
			,x_msg_count => x_msg_count
			,x_msg_data => x_msg_data);
		END IF;
           END IF;
	END IF; ------ p_progress_mode <> backdated
            -----5466645

            IF p_progress_mode <> 'BACKDATED' THEN
                IF p_structure_type = 'WORKPLAN' OR
                    (p_structure_type = 'FINANCIAL' AND p_as_of_date < NVL( l_last_progress_date, p_as_of_date ))
                THEN
                    IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'Calling ROLLUP_FUTURE_PROGRESS_PVT', x_Log_Level=> 3);
                    END IF;
                        IF p_object_type IN ('PA_ASSIGNMENTS', 'PA_DELIVERABLES') THEN
                        l_calling_mode := null;
                    ELSE
                        l_calling_mode := 'FUTURE_ROLLUP';
                    END IF;

                    PA_PROGRESS_PVT.ROLLUP_FUTURE_PROGRESS_PVT(
                          p_project_id               => p_project_id
                         ,P_OBJECT_TYPE              => l_object_type
                         ,P_OBJECT_ID                => l_task_id -- p_task_id 3603636
                         ,p_object_version_id        => l_task_version_id
                         ,p_as_of_date               => p_as_of_date
                         ,p_lowest_level_task        => NVL( l_lowest_level_task, 'N' )
                         ,p_calling_module           => p_calling_module
                         ,p_calling_mode             => l_calling_mode -- Bug 4097710
                         ,p_structure_type           => p_structure_type
                         ,p_structure_version_id     => l_structure_version_id
                         ,p_fin_rollup_method        => l_fin_rollup_method
                         ,p_wp_rollup_method         => l_wp_rollup_method
                         ,x_return_status            => l_return_status
                         ,x_msg_count                => l_msg_count
                         ,x_msg_data                 => l_msg_data
                       );

                    IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'After Calling ROLLUP_FUTURE_PROGRESS_PVT l_return_status='||l_return_status, x_Log_Level=> 3);
                    END IF;
                    IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        x_msg_data := l_msg_data;
                        x_return_status := 'E';
                        x_msg_count := l_msg_count;
                        RAISE  FND_API.G_EXC_ERROR;
                    END IF;
            END IF; -- IF p_progress_mode <> 'BACKDATED'
                END IF; -- ( p_rollup_entire_wbs_flag = 'N' AND l_object_type = 'PA_TASKS' AND l_task_version_id IS NOT NULL)
     END IF; -- p_action='PUBLISH'

    -- Bug 4392189 : Uncommenting and chaning the code for program rollup
     -- Bug 3807299 Calling program_rollup_pvt always
      --Added by rtarway for BUG 3668168, l_structure_version_id IS NOT NULL
      --program roll up should not be called in case of null structure version id
       --Program Rollup is not supported in FPM
       --bug 4033869
       --Need not be called in backdate mode, as per saima's mail

         IF p_progress_mode <> 'BACKDATED' AND p_structure_type = 'WORKPLAN'
            AND p_rollup_entire_wbs_flag = 'N'
            AND l_structure_version_id IS NOT NULL THEN
                    IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'Calling program_rollup_pvt', x_Log_Level=> 3);
                    END IF;
                pa_progress_pvt.program_rollup_pvt(
                         p_init_msg_list        => 'F'
                        ,p_commit               => 'F'
                        ,p_validate_only        => 'F'
                        ,p_project_id           => p_project_id
                        ,p_as_of_date           => p_as_of_date
                        ,p_structure_type       => p_structure_type
                        ,p_structure_ver_id     => l_structure_version_id
                        ,x_return_status        => l_return_status
                        ,x_msg_count            => l_msg_count
                        ,x_msg_data             => l_msg_data);
                    IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS', x_Msg => 'After Calling program_rollup_pvt l_return_status='||l_return_status, x_Log_Level=> 3);
                    END IF;
         END IF;


         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
         END IF;


     -- Bug 3807299 Calling new API update_link_proj_rollup_dates
      -- ADDed by rtarway for 3668168, l_structure_version_id IS NOT NULL and l_task_version_id IS NOT NULL
      -- Bug 3957792 : Removed the call of update_link_proj_rollup_dates. It is not implemnted as part of FPM
      --Uncommented as per Majid's Mail, BUG 4080922, rtarway
      --Need not be called in backdate mode, as per saima's mail

      IF p_progress_mode <> 'BACKDATED' AND p_structure_type = 'WORKPLAN'
         --AND p_rollup_entire_wbs_flag = 'N' --4080922, rtarway, removed this check because it needs to be called from AMG for each task too
        AND p_object_type = 'PA_TASKS'
         AND l_structure_version_id IS NOT NULL
         AND l_task_version_id IS NOT NULL
     THEN
        pa_progress_pub.update_link_proj_rollup_dates(
             p_init_msg_list    => 'F'
            ,p_commit       => 'F'
            ,p_calling_module   => p_calling_module
            ,p_project_id       => p_project_id
            ,p_task_id      => l_task_id
            ,p_task_version_id  => l_task_version_id
            ,p_as_of_date           => p_as_of_date
            ,p_structure_version_id => l_structure_version_id
            ,x_return_status        => l_return_status
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            );
      END IF;

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
          END IF;

     END IF;


         IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
         END IF;
EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := fnd_msg_pub.count_msg;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      x_msg_count := fnd_msg_pub.count_msg;
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      x_msg_count := fnd_msg_pub.count_msg;
      raise;
END update_progress;

-- Progress Management Changes. Bug # 3420093.

PROCEDURE populate_pji_tab_for_plan(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER
 ,p_project_element_id          IN      NUMBER   DEFAULT NULL --bug 4183307
 ,p_structure_version_id        IN      NUMBER   DEFAULT NULL
 ,p_baselined_str_ver_id        IN      NUMBER   DEFAULT NULL
 ,p_structure_type              IN      VARCHAR2        := 'WORKPLAN' -- Bug 3627315
 ,p_populate_tmp_tab_flag       IN      VARCHAR2        := 'Y'   --bug 4290593
 ,p_program_rollup_flag     IN      VARCHAR2        := 'Y'   --bug 4392189
 ,p_calling_context     IN      VARCHAR2        := 'ROLLUP'  -- bug 4392189 , Possible values are ROLLUP and SUMMARIZE
 ,p_as_of_date          IN      DATE        := null  -- bug 4392189
 ,x_return_status       OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count           OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data            OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) AS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'populate_pji_tab_for_plan';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_baselined_str_ver_id          NUMBER; -- FPM Dev CR 7
   l_plan_version_id               NUMBER; -- Bug 3627315
   l_structure_version_id          NUMBER; -- Bug 3627315
BEGIN

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN');
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'Starts', x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'p_project_element_id='||p_project_element_id, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'p_structure_version_id='||p_structure_version_id, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'p_baselined_str_ver_id='||p_baselined_str_ver_id, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'p_structure_type='||p_structure_type, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'p_populate_tmp_tab_flag='||p_populate_tmp_tab_flag, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'p_program_rollup_flag='||p_program_rollup_flag, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'p_calling_context='||p_calling_context, x_Log_Level=> 3);
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint plan_qtys;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        --bug 4290593
        IF p_populate_tmp_tab_flag = 'N' AND PA_PROJ_STRUCTURE_UTILS.CHECK_PJI_TEMP_TAB_POPULATED(p_project_id) = 'Y'
        THEN
           return;
        END IF;
        --end bug 4290593

        -- FPM Dev CR 7 : Passing null if baseline structure version id is -1
        IF p_baselined_str_ver_id = -1 THEN
                l_baselined_str_ver_id := null;
        ELSE
                l_baselined_str_ver_id := p_baselined_str_ver_id;
        END IF;
        -- Bug 3627315 : Added coce to get baseline plan version id and structure version id
        IF p_structure_type = 'FINANCIAL' THEN

        /* Begin Fix for Bug # 4115607. */

                -- l_plan_version_id := PA_FIN_PLAN_UTILS.Get_app_budget_cost_cb_ver(p_project_id);

        l_plan_version_id := pa_progress_utils.get_app_cost_budget_cb_wor_ver(p_project_id);

        /* End fix for Bug # 4115607. */

                l_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.GET_LATEST_FIN_STRUC_VER_ID(p_project_id);
        END IF;

        BEGIN
                -- Bug 3627315 : Added code to conditionally call PJI API with diff parameters
                IF p_structure_type = 'WORKPLAN' THEN
                  PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data (
                    p_project_id        => p_project_id,
                    p_struct_ver_id     => p_structure_version_id,
                    p_base_struct_ver_id    => l_baselined_str_ver_id,
                    p_project_element_id    => p_project_element_id, ----bug 4183307
            p_program_rollup_flag   => p_program_rollup_flag, -- bug 4392189
            p_calling_context       => p_calling_context, -- bug 4392189
            p_as_of_date        => p_as_of_date, -- bug 4392189
                    x_return_status     => l_return_status,
                    x_msg_code          => l_msg_data
                    );
                ELSE --FINANCIAL

          IF (l_plan_version_id is not null) THEN  -- Added to fix Bug # 3813130.

                    PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data(
                            p_project_id        => p_project_id,
                            p_struct_ver_id     => l_structure_version_id,
                            p_workplan_flag     => 'N',                    --This will populate financial data in pji tmp1 table.
                            p_plan_version_id   => l_plan_version_id,
                            x_return_status     => l_return_status,
                            x_msg_code          => l_msg_data
                            );

         end if; -- Added to fix Bug # 3813130.

                END IF;
        EXCEPTION
           WHEN OTHERS THEN
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'POPULATE_PJI_TAB_FOR_PLAN',
                            p_error_text     => SUBSTRB('Call of PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data Failed. SQLERRM='||SQLERRM,1,120));
                RAISE FND_API.G_EXC_ERROR;
        END;

     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                     p_msg_name       => l_msg_data);
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
          END IF;


EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to plan_qtys;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to plan_qtys;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'populate_pji_tab_for_plan',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to plan_qtys;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'populate_pji_tab_for_plan',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END populate_pji_tab_for_plan;

-- This API takes Actual and ETC incrmental amounts to update in PJI data model

PROCEDURE push_workplan_actuals(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_Id                          NUMBER
 ,p_structure_version_id                NUMBER
 ,p_proj_element_id                     NUMBER
 ,p_object_id                           NUMBER
 ,p_object_type                         VARCHAR2
 ,p_as_of_date                          DATE
 ,p_resource_assignment_id      NUMBER      :=null -- Bug 4186007
 ,p_resource_list_member_id     NUMBER      :=null-- Bug 4186007
 ,p_rbs_element_id                      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_rate_based_flag                     VARCHAR2        := 'Y' -- Default for Task
 ,p_resource_class_code                 VARCHAR2        :='PEOPLE' -- Default for Task
-- ,p_TXN_CURRENCY_CODE                 VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR Bug 3595585 Removed not needed
 ,p_act_TXN_COST_this_period            NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_act_PRJ_COST_this_period            NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_act_POU_COST_this_period            NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_act_effort_this_period              NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_etc_TXN_COST_this_period            NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM-- Bug 3595585
 ,p_etc_PRJ_COST_this_period            NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM-- Bug 3595585
 ,p_etc_POU_COST_this_period            NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM-- Bug 3595585
 ,p_etc_effort_this_period              NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM-- Bug 3595585
 ,p_call_pji_apis_flag                  VARCHAR2        := 'Y'
 ,p_act_TXN_raw_COST_this_period        NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- Bug 3621404
 ,p_act_PRJ_raw_COST_this_period        NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- Bug 3621404
 ,p_act_POU_raw_COST_this_period        NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- Bug 3621404
 ,p_etc_TXN_raw_COST_this_period        NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- Bug 3621404
 ,p_etc_PRJ_raw_COST_this_period        NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- Bug 3621404
 ,p_etc_POU_raw_COST_this_period        NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- Bug 3621404
 -- BUG # 3659659.
 ,p_txn_currency_code                   VARCHAR2        := null
 ,p_prj_currency_code                   VARCHAR2        := null
 ,p_pfn_currency_code                   VARCHAR2        := null
 -- BUG # 3659659.
--bug3675107
 ,p_pa_period_name                      VARCHAR2    :=null
 ,p_gl_period_name                      VARCHAR2    :=null
--bug3675107
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS
-- Bug 3621404 : Added parameters for raw cost fields. Existing fields will work as burdened cost
   l_api_name           CONSTANT   VARCHAR2(30)    := 'push_workplan_actuals';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);


   CURSOR cur_rollup(c_period_type VARCHAR2)
   IS
     SELECT decode(c_period_type, 'P', PROG_PA_PERIOD_NAME, 'G', PROG_GL_PERIOD_NAME, null )
      FROM pa_progress_rollup
      WHERE project_id = p_project_id
        AND object_id = p_object_id
        AND proj_element_id = p_proj_element_id
        AND as_of_date = p_as_of_date
        AND structure_type = 'WORKPLAN'
      ;

   l_period_name                VARCHAR2(150);
   l_period_TYPE                VARCHAR2(1);
   l_RBS_VERSION_ID             NUMBER;
   l_structure_version_id       NUMBER;
   l_RBS_ELEMENT_ID             NUMBER;
   l_TXN_BRDN_COST              NUMBER;
   l_PRJ_BRDN_COST              NUMBER;
   l_PFC_BRDN_COST              NUMBER;
   l_etc_quantity               NUMBER; -- Bug 3595585
   l_org_id                     NUMBER; -- Bug 3595585
   l_rate_based_flag            VARCHAR2(1); -- Bug 3595585
   l_ETC_TXN_BURDENED_COST      NUMBER; -- Bug 3595585
   l_ETC_PRJ_BURDENED_COST      NUMBER; -- Bug 3595585
   l_ETC_PFC_BURDENED_COST      NUMBER; -- Bug 3595585
   l_resource_class_code        pa_resource_assignments.resource_class_code%TYPE; -- Bug 3595585
   l_PLAN_TYPE_ID               NUMBER; -- Bug 3595585
   l_PLAN_VERSION_ID            NUMBER; -- Bug 3595585
   L_BASE_STRUCT_VER_ID         NUMBER; -- Bug 3595585
   l_msg_code                   VARCHAR2(32);
   -- Bug 3621404 : Raw Cost Changes
   l_etc_TXN_raw_COST_this_period       NUMBER;
   l_etc_PRJ_raw_COST_this_period       NUMBER;
   l_etc_POU_raw_COST_this_period       NUMBER;

   -- BUG # 3659659.

   l_txn_currency_code                   VARCHAR2(15)        := null;
   l_prj_currency_code                   VARCHAR2(15)        := null;
   l_pfn_currency_code                   VARCHAR2(15)        := null;

   cursor proj_all(p_project_id NUMBER) is
   select project_currency_code, projfunc_currency_code
   from pa_projects_all
   where project_id = p_project_id;

   -- BUG # 3659659.

    cursor cur_org_id(p_project_id NUMBER) is
    select org_id
    from pa_projects
    where project_id = p_project_Id;

--bug3675107
 l_pa_period_name                      VARCHAR2(30)    :=null;
 l_gl_period_name                      VARCHAR2(30)    :=null;
--bug3675107
l_track_wp_cost_flag  VARCHAR2(1) := 'Y'; -- Bug 3801745

-- Bug 4186007 Begin
l_structure_sharing_code        VARCHAR2(30);
l_sharing_Enabled VARCHAR2(1);
l_split_workplan VARCHAR2(1);
-- Bug 4186007 End

BEGIN

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');
        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.push_workplan_actuals');
        END IF;

        IF (p_debug_mode = 'Y') THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.debug('PA_PROGRESS_PUB.push_workplan_actuals');
                END IF;
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint push_actuals;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;
        l_track_wp_cost_flag :=  pa_fp_wp_gen_amt_utils.get_wp_track_cost_amt_flag(p_project_id);  --Bug 3801745

        IF NVL(p_structure_version_id,PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM)  = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM  --bug 3625085
        THEN
           l_structure_version_id := PA_PROJECT_STRUCTURE_UTILS.GET_LATEST_WP_VERSION(p_project_id);
        ELSE
           l_structure_version_id := p_structure_version_id;
        END IF;

        IF p_RBS_ELEMENT_ID  = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
           l_RBS_ELEMENT_ID := null;
        ELSE
           l_RBS_ELEMENT_ID := p_RBS_ELEMENT_ID;
        END IF;

       -- Bug 3595585 : Added following checks


        IF p_etc_effort_this_period  = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
           l_ETC_QUANTITY := null;
        ELSE
           l_ETC_QUANTITY := p_etc_effort_this_period;
        END IF;

        IF p_etc_TXN_COST_this_period  = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
           l_ETC_TXN_BURDENED_COST := null;
        ELSE
           l_ETC_TXN_BURDENED_COST := p_etc_TXN_COST_this_period;
        END IF;

        IF p_etc_PRJ_COST_this_period  = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
           l_ETC_PRJ_BURDENED_COST := null;
        ELSE
           l_ETC_PRJ_BURDENED_COST := p_etc_PRJ_COST_this_period;
        END IF;

        IF p_etc_POU_COST_this_period  = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
           l_ETC_PFC_BURDENED_COST := null;
        ELSE
           l_ETC_PFC_BURDENED_COST := p_etc_POU_COST_this_period;
        END IF;

        IF p_resource_class_code  IS NULL
        THEN
           l_resource_class_code := 'PEOPLE';
        ELSE
           l_resource_class_code := p_resource_class_code;
        END IF;

        IF p_rate_based_flag  IS NULL
        THEN
           l_rate_based_flag := 'Y';
        ELSE
           l_rate_based_flag := p_rate_based_flag;
        END IF;
        -- Bug 3621404 : Raw Cost Changes


        IF p_etc_TXN_raw_COST_this_period  = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
           l_etc_TXN_raw_COST_this_period := null;
        ELSE
           l_etc_TXN_raw_COST_this_period := p_etc_TXN_raw_COST_this_period;
        END IF;

        IF p_etc_PRJ_raw_COST_this_period  = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
           l_etc_PRJ_raw_COST_this_period := null;
        ELSE
           l_etc_PRJ_raw_COST_this_period := p_etc_PRJ_raw_COST_this_period;
        END IF;

        IF p_etc_POU_raw_COST_this_period  = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
           l_etc_POU_raw_COST_this_period := null;
        ELSE
           l_etc_POU_raw_COST_this_period := p_etc_POU_raw_COST_this_period;
        END IF;

        BEGIN
                open cur_org_id(p_project_id);
                fetch cur_org_id into l_org_id;
                close cur_org_id;
        END;

        BEGIN
          l_period_type := PA_FIN_PLAN_UTILS.Get_wp_bv_time_phase( l_structure_version_id ); -- Bug 3608422 : passing l_ instead of p_
        EXCEPTION
           WHEN OTHERS THEN
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'push_workplan_actuals',
                            p_error_text     => SUBSTRB('PA_FIN_PLAN_UTILS.Get_wp_bv_time_phase:'||SQLERRM,1,120));
                RAISE FND_API.G_EXC_ERROR;
        END;


        IF l_period_type = 'P' AND p_pa_period_name IS NOT NULL
        THEN
            l_PERIOD_NAME := p_pa_period_name;
        ELSIF l_period_type = 'P' AND p_pa_period_name IS NULL
        THEN
            l_PERIOD_NAME := PA_PROGRESS_UTILS.Prog_Get_Pa_Period_Name(p_as_of_date);
        END IF;

        IF l_period_type = 'G' AND p_gl_period_name IS NOT NULL
        THEN
           l_PERIOD_NAME := p_gl_period_name;
        ELSIF l_period_type = 'G' AND p_gl_period_name IS NULL
        THEN
           l_PERIOD_NAME := PA_PROGRESS_UTILS.Prog_Get_gl_Period_Name(p_as_of_date);
        END IF;

--bug 3675107

        BEGIN
                l_plan_type_id := Pa_Fp_wp_gen_amt_utils.get_wp_ptype_id(p_project_id => p_project_id);
        EXCEPTION
                WHEN OTHERS THEN
                fnd_msg_pub.add_exc_msg(p_pkg_name      => 'PA_PROGRESS_PUB',
                                    p_procedure_name    => 'PUSH_WORKPLAN_ACTUALS',
                                    p_error_text     => SUBSTRB('Call Pa_Fp_wp_gen_amt_utils.get_wp_ptype_id:'||SQLERRM,1,120));
                RAISE FND_API.G_EXC_ERROR;
        END;

        BEGIN
                l_plan_version_id := Pa_Fp_wp_gen_amt_utils.get_wp_version_id(
                                                      p_project_id => p_project_id,
                                                      p_plan_type_id => -1,
                                                      p_proj_str_ver_id => l_structure_version_id) ;
        EXCEPTION
                WHEN OTHERS THEN
                fnd_msg_pub.add_exc_msg(p_pkg_name      => 'PA_PROGRESS_PUB',
                                    p_procedure_name    => 'PUSH_WORKPLAN_ACTUALS',
                                    p_error_text     => SUBSTRB('Call Pa_Fp_wp_gen_amt_utils.get_wp_version_id:'||SQLERRM,1,120));
                RAISE FND_API.G_EXC_ERROR;
        END;

        BEGIN

                --  BUG # 3659659. Obtain proper values of currency codes if they are null.

                if (p_prj_currency_code is null or p_pfn_currency_code is null) then
                        open proj_all(p_project_id);
                        fetch proj_all INTO l_prj_currency_code, l_pfn_currency_code;
                        close proj_all;
                end if;

                if (p_prj_currency_code is not null) then
                        l_prj_currency_code := p_prj_currency_code;
                end if;

                if (p_pfn_currency_code is not null) then
                        l_pfn_currency_code := p_pfn_currency_code;
                end if;

                if (p_txn_currency_code is null) then
                        l_txn_currency_code := l_prj_currency_code;
                else
                        l_txn_currency_code := p_txn_currency_code;
                end if;

        -- Bug 3801745 : Commneted below code, not required now
        --IF l_rate_based_flag = 'N' THEN -- Bug 3836485
        --  l_act_quantity := null;
        --  l_ETC_QUANTITY := null;
        --END IF;

        IF NVL(l_track_wp_cost_flag,'Y') = 'N' THEN -- Bug 3801745
            l_TXN_BRDN_COST := null;
            l_PRJ_BRDN_COST := null;
            l_PFC_BRDN_COST := null;
            l_ETC_TXN_BURDENED_COST := null;
            l_ETC_PRJ_BURDENED_COST := null;
            l_ETC_PFC_BURDENED_COST := null;
            l_etc_TXN_raw_COST_this_period := null;
            l_etc_PRJ_raw_COST_this_period := null;
            l_etc_POU_raw_COST_this_period := null;
        END IF;



        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'p_PROJECT_ID='||p_PROJECT_ID, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_org_id='||l_org_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'p_PROJ_ELEMENT_ID='||p_PROJ_ELEMENT_ID, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_structure_version_id='||l_structure_version_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_PERIOD_NAME='||l_PERIOD_NAME, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_period_TYPE='||l_period_TYPE, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_RBS_ELEMENT_ID='||l_RBS_ELEMENT_ID, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_plan_version_id='||l_plan_version_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_plan_type_id='||l_plan_type_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_txn_currency_code='||l_txn_currency_code, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_prj_currency_code='||l_prj_currency_code, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_pfn_currency_code='||l_pfn_currency_code, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_resource_class_code='||l_resource_class_code, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_rate_based_flag='||l_rate_based_flag, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_TXN_BRDN_COST='||l_TXN_BRDN_COST, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_PRJ_BRDN_COST='||l_PRJ_BRDN_COST, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_PFC_BRDN_COST='||l_PFC_BRDN_COST, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_ETC_QUANTITY='||l_ETC_QUANTITY, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_ETC_TXN_BURDENED_COST='||l_ETC_TXN_BURDENED_COST, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_ETC_PRJ_BURDENED_COST='||l_ETC_PRJ_BURDENED_COST, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_ETC_PFC_BURDENED_COST='||l_ETC_PFC_BURDENED_COST, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_etc_TXN_raw_COST_this_period='||l_etc_TXN_raw_COST_this_period, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_etc_PRJ_raw_COST_this_period='||l_etc_PRJ_raw_COST_this_period, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUSH_WORKPLAN_ACTUALS', x_Msg => 'l_etc_POU_raw_COST_this_period='||l_etc_POU_raw_COST_this_period, x_Log_Level=> 3);
        END IF;


                INSERT INTO PJI_FM_EXTR_PLAN_LINES (
                         PROJECT_ID
                        ,PROJECT_ORG_ID
                        ,PROJECT_ELEMENT_ID
                        ,STRUCT_VER_ID
                        ,PERIOD_NAME
                        ,CALENDAR_TYPE
                        ,START_DATE
                        ,END_DATE
                        ,RBS_ELEMENT_ID
                        ,RBS_VERSION_ID
                        ,PLAN_VERSION_ID
                        ,PLAN_TYPE_ID
                        ,WP_VERSION_FLAG
                        ,ROLLUP_TYPE
                        ,TXN_CURRENCY_CODE
                        ,TXN_RAW_COST
                        ,TXN_BURDENED_COST
                        ,TXN_REVENUE
                        ,PRJ_CURRENCY_CODE
                        ,PRJ_RAW_COST
                        ,PRJ_BURDENED_COST
                        ,PRJ_REVENUE
                        ,PFC_CURRENCY_CODE
                        ,PFC_RAW_COST
                        ,PFC_BURDENED_COST
                        ,PFC_REVENUE
                        ,QUANTITY
                        ,RESOURCE_CLASS_CODE
                        ,RATE_BASED_FLAG
                        ,ETC_QUANTITY
                        ,ETC_TXN_BURDENED_COST
                        ,ETC_PRJ_BURDENED_COST
                        ,ETC_PFC_BURDENED_COST
                        ,ETC_TXN_RAW_COST
                        ,ETC_PRJ_RAW_COST
                        ,ETC_PFC_RAW_COST
                )
                values(
                         p_PROJECT_ID
                        ,l_org_id
                        ,p_PROJ_ELEMENT_ID
                        ,l_structure_version_id
                        ,l_PERIOD_NAME
                        ,l_period_TYPE
                        ,null
                        ,p_as_of_date
                        ,l_RBS_ELEMENT_ID
                        ,null
                        ,l_plan_version_id
                        ,l_plan_type_id
                        ,'Y'
                        ,'W'
                        ,l_txn_currency_code
                        ,null
                        ,null
                        ,null
                        ,l_prj_currency_code
                        ,null
                        ,null
                        ,null
                        ,l_pfn_currency_code
                        ,null
                        ,null
                        ,null
                        ,null
                        ,l_resource_class_code
                        ,l_rate_based_flag
                        ,l_ETC_QUANTITY
                        ,l_ETC_TXN_BURDENED_COST
                        ,l_ETC_PRJ_BURDENED_COST
                        ,l_ETC_PFC_BURDENED_COST
                        ,l_etc_TXN_raw_COST_this_period
                        ,l_etc_PRJ_raw_COST_this_period
                        ,l_etc_POU_raw_COST_this_period
                );
        EXCEPTION
           WHEN OTHERS THEN
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'push_workplan_actuals',
                            p_error_text     => SUBSTRB('INSERT INTO PJI_FM_EXTR_PLAN_LINES:'||SQLERRM,1,120));
                RAISE FND_API.G_EXC_ERROR;
        END;

    -- Bug 4186007 Begin
    -- Now we will not use POPULATE_PRG_ACT_TBL_SINGLE to poulate the PA_PROG_ACT_BY_PERIOD_TEMP
    -- it was populating the cumulative amount.
    -- Now we will populate the incrmental amount and will call API MAINTAIN_ACTUAL_AMT_WRP
    -- with p_extraction_type as INCRMENTAL
        l_structure_sharing_code := PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(p_project_id); -- Bug 3586648
        l_sharing_Enabled := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(p_project_id);
        IF (l_sharing_Enabled = 'N' OR (l_sharing_Enabled = 'Y' AND l_structure_sharing_code <> 'SHARE_FULL'))  THEN
                l_split_workplan := 'Y';
        ELSE
                l_split_workplan := 'N';
        END IF;

    IF NVL(l_split_workplan, 'N') = 'Y'  AND p_resource_assignment_id IS NOT NULL THEN
                       --delete from PA_PROG_ACT_BY_PERIOD_TEMP;
               -- 3994165 : Deletion is now moved to the wrapper Bulk API.

            INSERT INTO PA_PROG_ACT_BY_PERIOD_TEMP(
                  project_id
                , structure_version_id
                , task_id
                , resource_assignment_id
                , as_of_date
                , actual_cost
                , actual_effort
                , period_name
                , txn_currency_code
                , actual_cost_pc
                , actual_cost_fc
                , actual_rawcost
                , actual_rawcost_pc
                , actual_rawcost_fc
                , hidden_res_assgn_id
                , resource_list_member_id
                , current_flag
                , object_type
                , percent_complete_id
                , attribute1
                , attribute2
                , attribute3
                , attribute4
                , attribute5
                , attribute6
                , start_date -- 4310021
                , finish_date -- 4310021
                )
            VALUES (
                  p_PROJECT_ID
                        , l_structure_version_id
                        , p_PROJ_ELEMENT_ID
                        , p_resource_assignment_id
                        , p_as_of_date
                        , p_act_TXN_COST_this_period
                        , p_act_effort_this_period
                , l_PERIOD_NAME
                        , l_txn_currency_code
                        , p_act_PRJ_COST_this_period
                        , p_act_POU_COST_this_period
                        , p_act_TXN_raw_COST_this_period
                        , p_act_PRJ_raw_COST_this_period
                        , p_act_POU_raw_COST_this_period
                        , to_number(null)
                        , p_resource_list_member_id
                , to_char(null)
                , p_object_type
                , to_number(null)
                , to_char(null)
                , to_char(null)
                , to_char(null)
                , to_number(null)
                , to_number(null)
                , to_number(null)
                , p_as_of_date -- 4310021
                , p_as_of_date -- 4310021
                );

    END IF; -- NVL(l_split_workplan, 'N') = 'Y'
    -- Bug 4186007 End


        -- Call PJI API's if p_call_pji_apis_flag is set.

       --  NO NEED TO CALL PLAN_UPDATE HERE. IT IS CALLED IN UPDATE_PROGRESS ONLY


        IF x_return_status <> 'S' THEN
                RAISE FND_API.G_EXC_ERROR;
        END IF;

EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to push_actuals;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to push_actuals;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'push_workplan_actuals',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to push_actuals;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'push_workplan_actuals',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END push_workplan_actuals;

-- Progress Management Change for bug # 3420093.

PROCEDURE program_rollup_pvt(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_as_of_date                  IN      DATE            := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_structure_type              IN      VARCHAR2        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_structure_ver_id            IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'PROGRAM_ROLLUP_PVT';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   g1_debug_mode                    VARCHAR2(1);

BEGIN

--Open Question:
--1. The parent Project progress record should go to the parent project cycle date.
--As of now it is going with just passed as of date.
--2.
        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.PROGRAM_ROLLUP_PVT');
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PROGRAM_ROLLUP_PVT', x_Msg => 'PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PROGRAM_ROLLUP_PVT', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PROGRAM_ROLLUP_PVT', x_Msg => 'p_structure_ver_id='||p_structure_ver_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PROGRAM_ROLLUP_PVT', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PROGRAM_ROLLUP_PVT', x_Msg => 'p_structure_type='||p_structure_type, x_Log_Level=> 3);
        END IF;

    IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.PROGRAM_ROLLUP_PVT');
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint PROGRAM_ROLLUP_PVT;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        -- Bug # 3879910. Call corresponding API in package: PA_PROGRESS_PVT.

    PA_PROGRESS_PVT.program_rollup_pvt(
    p_api_version        => p_api_version
    ,p_init_msg_list     => p_init_msg_list
    ,p_commit        => p_commit
    ,p_validate_only     => p_validate_only
    ,p_validation_level  => p_validation_level
    ,p_calling_module    => p_calling_module
    ,p_debug_mode        => p_debug_mode
    ,p_max_msg_count     => p_max_msg_count
    ,p_project_id        => p_project_id
    ,p_as_of_date        => p_as_of_date
    ,p_structure_type    => p_structure_type
    ,p_structure_ver_id  => p_structure_ver_id
    ,x_return_status     => l_return_status
    ,x_msg_count         => l_msg_count
    ,x_msg_data      => l_msg_data);

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;

EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to PROGRAM_ROLLUP_PVT;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to PROGRAM_ROLLUP_PVT;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'PROGRAM_ROLLUP_PVT',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to PROGRAM_ROLLUP_PVT;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'PROGRAM_ROLLUP_PVT',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END program_rollup_pvt;

PROCEDURE transfer_wp_percent_to_fin(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'TRANSFER_WP_PERCENT_TO_FIN';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);

   l_structure_sharing_code        VARCHAR2(30);
   l_structure_version_id          NUMBER;
   l_fin_structure_version_id      NUMBER;

   l_percent_bac                   NUMBER    := 0;
   l_sum_bac                       NUMBER    := 0;
   l_bac_task                      NUMBER    := 0;
   l_percent_complete              NUMBER    := 0;
   l_wp_rollup_method              VARCHAR2(30);
   g1_debug_mode                   VARCHAR2(1);


   CURSOR cur_fin_low_tasks(c_structure_type VARCHAR, c_structure_version_id number ) -- Bug 3957457 : Added c_structure_version_id
   IS
      -- Bug 3957457 : get percent complete from pa_progress_rollup instead of pa_percent_complete
      -- 4392189 : Program Reporting Changes - Phase 2 : Get base % complete rather rollup % complete
     -- SELECT ppv.proj_element_id, ppv.element_version_id, ppv.record_version_number, nvl(ppr.completed_percentage, ppr.eff_rollup_percent_comp) completed_percentage
      SELECT ppv.proj_element_id, ppv.element_version_id, ppv.record_version_number, nvl(ppr.completed_percentage, ppr.base_percent_complete) completed_percentage
      FROM   pa_proj_element_versions ppv, pa_progress_rollup ppr
      WHERE  ppv.project_id = p_project_id
      AND    ppv.financial_task_flag = 'Y'
      AND    ppv.parent_structure_version_id = c_structure_version_id -- Bug 3957457
--      AND    PA_PROJ_ELEMENTS_UTILS.check_child_element_exist(ppv.element_version_id) = 'N' bug 4086613
      AND    ppv.project_id = ppr.project_id(+)
--      AND    ppv.element_version_id = ppc.object_version_id(+)
      AND    ppv.proj_element_id = ppr.object_id(+) -- Bug 3696820
      AND    ppr.current_flag(+) = 'Y'
      AND    ppr.structure_type(+) = c_structure_type
      AND    ppr.structure_version_id(+) is null -- Bug 3957457
      and not exists (select 1
                        from pa_object_relationships por,
                             pa_proj_element_versions ppv1
                       where por.object_id_from1 = ppv.element_version_id
                         and relationship_type = 'S'
                         and ppv1.element_version_id = por.object_id_to1
                         and ppv1.financial_task_flag = 'Y')
      ;

   -- 4392189 : Program Reporting Changes - Phase 2 : Get base % complete rather rollup % complete
   CURSOR cur_wp_task( c_object_version_id NUMBER, c_structure_version_id number ) -- Bug 3952006 : Added c_structure_version_id
   IS
      -- Bug 3952006 : get percent complete from pa_progress_rollup instead of pa_percent_complete
      --SELECT ppv.proj_element_id, ppv.element_version_id, ppv.record_version_number, nvl(ppr.completed_percentage, ppr.eff_rollup_percent_comp) completed_percentage
      SELECT ppv.proj_element_id, ppv.element_version_id, ppv.record_version_number, nvl(ppr.completed_percentage, ppr.base_percent_complete) completed_percentage
      FROM   pa_proj_element_versions ppv, pa_progress_rollup ppr, pa_object_relationships por
      WHERE  ppv.project_id = p_project_id
      AND    ppv.parent_structure_version_id = c_structure_version_id -- Bug 3952006
      AND    ppv.project_id = ppr.project_id(+)
      AND    por.object_id_to1 = c_object_version_id
      AND    por.relationship_type = 'M'
      AND    ppv.element_version_id = por.object_id_from1
--      AND    ppv.element_version_id = ppc.object_version_id(+)
      AND    ppv.proj_element_id = ppr.object_id(+) -- Bug 3696820
      AND    ppr.current_flag(+) = 'Y'
      AND    ppr.structure_type(+) = 'WORKPLAN'
      AND    ppr.structure_version_id(+) is null -- Bug 3696820
      ;

   -- Bug 3603636 : Added cusrosr c_get_task_weight_method and variable l_rollup_method

   CURSOR c_get_task_weight_method(c_project_id NUMBER, c_structure_type VARCHAR2)
   IS
   SELECT task_weight_basis_code
   FROM pa_proj_progress_attr
   WHERE project_id = c_project_id
   AND structure_type = c_structure_type;

   l_rollup_method                 pa_proj_progress_attr.task_weight_basis_code%TYPE                    ;
   l_baselined_str_ver_id          NUMBER                                                               ;
   -- Bug 4136239 : Added l_call_rollup, l_call_update_progress
   l_call_rollup                   VARCHAR2(1):='N'                         ;
   l_call_update_progress      VARCHAR2(1):='N'                         ;

   -- Bug 4284353 Begin
   l_as_of_date                    DATE;

   CURSOR c_max_date IS
--   4487630 : Now Date will be derived as max of existing financial as of date, workplan as of date, sysdate
--   select max(decode(structure_type, 'WORKPLAN', as_of_date, as_of_date+1))
   select max(as_of_date)
   from pa_progress_rollup
   where project_id = p_project_id
   and structure_version_id is null
   and structure_type IN('WORKPLAN', 'FINANCIAL')
   and current_flag = 'Y';
   -- Bug 4284353 End
BEGIN
        g1_debug_mode  := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN');
        END IF;


        IF g1_debug_mode  = 'Y' THEN
               pa_debug.debug('PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN');
        END IF;


        IF g1_debug_mode  = 'Y' THEN
              pa_debug.write(x_Module=>'PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN', x_Msg => 'p_project_id : '||p_project_id, x_Log_Level=> 3);
        END IF;


        IF (p_commit = FND_API.G_TRUE) THEN
                SAVEPOINT TRANSFER_WP_PERCENT_TO_FIN;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) THEN
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;


        x_return_status := FND_API.G_RET_STS_SUCCESS;

         IF g1_debug_mode  = 'Y' THEN
               pa_debug.write(x_Module=>'PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN', x_Msg => 'getting the structure sharing code', x_Log_Level=> 3);
         END IF;

        SELECT structure_sharing_code
        INTO l_structure_sharing_code
        FROM pa_projects_all
        WHERE project_id = p_project_id;


        l_fin_structure_version_id := PA_PROJ_ELEMENTS_UTILS.latest_published_ver_id(p_project_id, 'FINANCIAL');


        IF PA_PROJECT_STRUCTURE_UTILS.check_workplan_enabled(p_project_id) = 'N'
        THEN
            PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                 ,p_msg_name       => 'PA_PS_WORKPLAN_DISABLED');
            x_msg_data := 'PA_PS_WORKPLAN_DISABLED';
            x_return_status := 'E';
            RAISE  FND_API.G_EXC_ERROR;
        END IF;


        IF ((l_structure_sharing_code = 'SPLIT_NO_MAPPING') or l_structure_sharing_code is null) -- Added OR condition for Bug no 4767821.
        THEN
                PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                     ,p_msg_name       => 'PA_TRAN_SHCODE_INV');
                x_msg_data := 'PA_TRAN_SHCODE_INV';
                x_return_status := 'E';
        RAISE  FND_API.G_EXC_ERROR;
        END IF;

    OPEN c_max_date;
    FETCH c_max_date INTO l_as_of_date;
    CLOSE c_max_date;

    	-- Bug 4284353
	-- Bug 7184046  - Reverted this change done as part of the bug 4284353 as copying progress from workplan is displaying sysdate rather than work plan as of date when workplan as of date < sysdate
	/*IF trunc(nvl(l_as_of_date,sysdate)) <= trunc(sysdate) THEN
		l_as_of_date := trunc(sysdate);
	END IF; */


         IF g1_debug_mode  = 'Y' THEN
               pa_debug.write(x_Module=>'PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN', x_Msg => 'l_fin_structure_version_id : '||l_fin_structure_version_id, x_Log_Level=> 3);
         END IF;

         IF g1_debug_mode  = 'Y' THEN
               pa_debug.write(x_Module=>'PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN', x_Msg => 'l_structure_sharing_code : '||l_structure_sharing_code, x_Log_Level=> 3);
         END IF;

        IF l_structure_sharing_code = 'SHARE_FULL' OR l_structure_sharing_code = 'SHARE_PARTIAL'
        THEN
            FOR cur_task IN cur_fin_low_tasks('WORKPLAN', l_fin_structure_version_id) -- Bug 3957457 : Passed l_fin_structure_version_id
            LOOP

            IF g1_debug_mode  = 'Y' THEN
               pa_debug.write(x_Module=>'PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN', x_Msg => 'percent complete : '||cur_task.completed_percentage, x_Log_Level=> 3);
            END IF;

            IF g1_debug_mode  = 'Y' THEN
               pa_debug.write(x_Module=>'PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN', x_Msg => 'element version id : '||cur_task.element_version_id, x_Log_Level=> 3);
            END IF;

            IF cur_task.completed_percentage IS NOT NULL
            THEN
        l_call_rollup := 'Y'; -- Bug 4136239
                PA_PROGRESS_PUB.UPDATE_PROGRESS(
                        p_action                        => 'PUBLISH'
                       ,P_rollup_entire_wbs_flag        => 'Y'
                       ,p_progress_mode                 => 'FUTURE'
                       ,p_project_id                    => p_project_id
                       ,p_object_id                     => cur_task.proj_element_id
                       ,p_object_version_id             => cur_task.element_version_id
                       ,p_object_type                   => 'PA_TASKS'
                       ,p_as_of_date                    => trunc(l_as_of_date) -- Bug 3603636 Used Trunc
                       ,p_percent_complete              => cur_task.completed_percentage
                       ,p_structure_type                => 'FINANCIAL'
                       ,p_structure_version_id          => l_fin_structure_version_id
                       ,p_task_id                       => cur_task.proj_element_id -- FPM Dev CR 2
                       ,p_record_version_number         => cur_task.record_version_number
                       ,p_transfer_wp_pc_flag           => 'Y'
                       ,x_return_status                 => l_return_status
                       ,x_msg_count                     => l_msg_count
                       ,x_msg_data                      => l_msg_data
                );
            END IF;

            END LOOP;

        ELSIF l_structure_sharing_code = 'SPLIT_MAPPING'
        THEN
            l_structure_version_id := PA_PROJ_ELEMENTS_UTILS.latest_published_ver_id(p_project_id);

            IF l_structure_version_id = -1
            THEN
                PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                     ,p_msg_name       => 'PA_NO_PUBLISHED_VERSION');
                x_msg_data := 'PA_NO_PUBLISHED_VERSION';
                x_return_status := 'E';
                RAISE  FND_API.G_EXC_ERROR;
            END IF;
            -- Bug 3696820 : begin
            BEGIN
                l_baselined_str_ver_id := PA_PROJECT_STRUCTURE_UTILS.Get_Baseline_Struct_Ver(p_project_id);
            EXCEPTION
                WHEN OTHERS THEN
                        l_baselined_str_ver_id := null;
            END;

            pa_progress_pub.populate_pji_tab_for_plan(
                        p_init_msg_list         => FND_API.G_FALSE,
                        p_calling_module        => p_calling_module,
                        p_project_id            => p_project_id,
                        p_structure_version_id  => l_structure_version_id,
                        p_baselined_str_ver_id  => l_baselined_str_ver_id,
                        p_structure_type        => 'WORKPLAN',
                        x_return_status         => l_return_status,
                        x_msg_count             => l_msg_count,
                        x_msg_data              => l_msg_data
                        );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                        x_msg_data := l_msg_data;
                        x_return_status := 'E';
                        x_msg_count := l_msg_count;
                        RAISE  FND_API.G_EXC_ERROR;
            END IF;
            -- Bug 3696820 : end

        -- Bug 3952006 : Begin
        -- Commented the below code and added cursor call
            --SELECT task_weight_basis_code
            --INTO l_wp_rollup_method
            --FROM PA_PROJ_PROGRESS_ATTR
            --WHERE project_id = p_project_id
            --AND STRUCTURE_TYPE = 'FINANCIAL';

            OPEN c_get_task_weight_method(p_project_id, 'WORKPLAN');
            FETCH c_get_task_weight_method INTO l_wp_rollup_method;
            CLOSE c_get_task_weight_method;
        -- Bug 3952006 : End

            FOR cur_task IN cur_fin_low_tasks('FINANCIAL', l_fin_structure_version_id) -- Bug 3957457 : Passed l_fin_structure_version_id
            LOOP
                   IF g1_debug_mode  = 'Y' THEN
                       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN', x_Msg => 'fin element version id : '||cur_task.element_version_id, x_Log_Level=> 3);
                   END IF;
           l_sum_bac := null; -- Bug 3952006
           l_percent_bac := null; -- Bug 3952006
           l_percent_complete := null; -- Bug 4136239
           l_call_update_progress := 'N'; -- Bug 4136239

                   FOR cur_per IN cur_wp_task(cur_task.element_version_id, l_structure_version_id) -- Bug 3952006 : Added l_structure_version_id
                   LOOP

                         IF g1_debug_mode  = 'Y' THEN
                               pa_debug.write(x_Module=>'PA_PROGRESS_PUB.TRANSFER_WP_PERCENT_TO_FIN', x_Msg => 'wp element version id : '||cur_per.element_version_id, x_Log_Level=> 3);
                         END IF;
            l_bac_task := null; -- Bug 3952006
                        l_bac_task := PA_PROGRESS_UTILS.Get_BAC_Value(
                                                p_project_id           => p_project_id
                                               ,p_task_weight_method   => l_wp_rollup_method
                                               ,p_proj_element_id      => cur_per.proj_element_id
                                               ,p_structure_version_id => l_structure_version_id
                                               ,p_structure_type       => 'WORKPLAN'
                                               );
                        -- Bug 3696820 : Used nvl
                        l_percent_bac := nvl(l_percent_bac,0) + nvl(cur_per.completed_percentage,0) * nvl(l_bac_task,0);
                        l_sum_bac := nvl(l_sum_bac,0) + nvl(l_bac_task,0);
            IF cur_per.completed_percentage IS NOT NULL THEN -- Bug 4136239
            -- If % complete is there on mapped tasks, then only for financial task update_progress shd be called
                l_call_update_progress := 'Y';
            END IF;
                   END LOOP;

                  IF l_sum_bac <> 0
                  THEN
                      l_percent_complete := l_percent_bac/l_sum_bac;
              --Commented by rtarway, for BUG 3950574
                --l_percent_complete := round(l_percent_complete,2);
                  END IF;

                  IF l_percent_complete IS NOT NULL AND l_call_update_progress = 'Y' -- Bug 4136239 Added l_call_update_progress
                  THEN
           l_call_rollup := 'Y'; -- Bug 4136239
                   PA_PROGRESS_PUB.UPDATE_PROGRESS(
                                p_action                        => 'PUBLISH'
                               ,P_rollup_entire_wbs_flag        => 'Y'
                               ,p_progress_mode                 => 'FUTURE'
                               ,p_project_id                    => p_project_id
                               ,p_object_id                     => cur_task.proj_element_id
                               ,p_object_version_id             => cur_task.element_version_id
                               ,p_object_type                   => 'PA_TASKS'
                               ,p_as_of_date                    => trunc(l_as_of_date) -- Bug 3603636 Used Trunc
                               ,p_percent_complete              => l_percent_complete
                               ,p_structure_type                => 'FINANCIAL'
                               ,p_structure_version_id          => l_fin_structure_version_id
                               ,p_task_id                       => cur_task.proj_element_id -- FPM Dev CR 2
                               ,p_record_version_number         => cur_task.record_version_number
                               ,p_transfer_wp_pc_flag           => 'Y'
                               ,x_return_status                 => l_return_status
                               ,x_msg_count                     => l_msg_count
                               ,x_msg_data                      => l_msg_data
                   );
                  END IF;
            END LOOP;
        END IF;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
        END IF;
        -- Bug 3603636 : Added call of Rollup API

        IF l_call_rollup = 'Y' THEN  -- Bug 4136239

                        -- 4609910 : We need to call PJI temp table population here
                        -- It is strange that the table did not find any data here
                        -- so need to call it here
                        PA_PROGRESS_PUB.populate_pji_tab_for_plan(
                                p_project_id              => p_project_id,
                                p_structure_type          => 'FINANCIAL',
                                x_return_status           => l_return_status,
                                x_msg_count               => l_msg_count,
                                x_msg_data                => l_msg_data
                                );

                        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                                x_msg_data := l_msg_data;
                                x_return_status := 'E';
                                x_msg_count := l_msg_count;
                                RAISE  FND_API.G_EXC_ERROR;
                        END IF;

            OPEN c_get_task_weight_method(p_project_id, 'FINANCIAL');
            FETCH c_get_task_weight_method INTO l_rollup_method;
            CLOSE c_get_task_weight_method;


            PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT(
             p_init_msg_list             => p_init_msg_list
            ,p_commit                    => p_commit
            --Added by rtarway for BUG 3696263
            ,p_calling_module       => p_calling_module
                        ,p_progress_mode        => 'TRANSFER_WP_PC'    --bug 4284353

            ,p_validate_only             => p_validate_only
            ,p_project_id                => p_project_id
            ,p_structure_version_id      => l_fin_structure_version_id
            ,p_as_of_date                => trunc(l_as_of_date)
            ,p_fin_rollup_method         => l_rollup_method
            ,p_rollup_entire_wbs         => 'Y'
            ,p_structure_type            => 'FINANCIAL'
            ,x_return_status             => l_return_status
            ,x_msg_count                 => l_msg_count
            ,x_msg_data                  => l_msg_data);


            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
            END IF;
        END IF; --IF l_call_rollup = 'Y'

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;
EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to TRANSFER_WP_PERCENT_TO_FIN;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to TRANSFER_WP_PERCENT_TO_FIN;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'TRANSFER_WP_PERCENT_TO_FIN',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to TRANSFER_WP_PERCENT_TO_FIN;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'TRANSFER_WP_PERCENT_TO_FIN',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END transfer_wp_percent_to_fin;

-- Bug 3839288 : Rewritten this procedure.
--Bug 5027965. Made sure that the ETC cost is copied from current working version
--if the latest progress is already  applied
PROCEDURE publish_progress(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER
 ,p_working_str_ver_id          IN      NUMBER    -- Bug 4190086
 ,p_pub_structure_version_id    IN      NUMBER          -- Bug 3839288
 ,x_upd_new_elem_ver_id_flag    OUT     NOCOPY VARCHAR2    -- BUG 3951024, rtarway --File.Sql.39 bug 4440895
 ,x_as_of_date                 OUT     NOCOPY DATE      -- Bug 3839288   --File.Sql.39 bug 4440895
 ,x_task_weight_basis_code      OUT     NOCOPY VARCHAR2 -- Bug 3839288   --File.Sql.39 bug 4440895
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'PUBLISH_PROGRESS';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   p_baseline_flag                 VARCHAR2(1):='N';

CURSOR C2(p_project_id NUMBER) is
                select max(trunc(as_of_date)) -- 5294838 truncate
                from pa_progress_rollup ppr
                where ppr.project_id = p_project_id
                and ppr.structure_version_id is null
                and ppr.structure_type = 'WORKPLAN'
        and current_flag = 'Y';

CURSOR cur_proj_prog_attr IS
SELECT pppa.task_weight_basis_code
FROM pa_proj_progress_attr pppa
WHERE project_id=p_project_id
AND structure_type ='WORKPLAN'
;


CURSOR c_get_working_wp_progress is
                select ppr.*
                from pa_progress_rollup ppr
                where ppr.project_id = p_project_id
--                and ppr.structure_version_id is not null -- Bug 4190086
                and ppr.structure_version_id = p_working_str_ver_id -- Bug 4190086
                and ppr.structure_type = 'WORKPLAN';

-- Bug 4111107 : Added c_get_all_progress
-- Bug 4871809, replaced ppr.* with column names to reduce sharable memory
CURSOR c_get_all_progress is
          select PROJECT_ID,
                 OBJECT_ID ,
                 OBJECT_TYPE,
                 AS_OF_DATE ,
                 OBJECT_VERSION_ID,
                 PROGRESS_STATUS_CODE,
                 INCREMENTAL_WORK_QUANTITY ,
                 CUMULATIVE_WORK_QUANTITY ,
                 BASE_PERCENT_COMPLETE ,
                 EFF_ROLLUP_PERCENT_COMP,
                 COMPLETED_PERCENTAGE ,
                 ESTIMATED_START_DATE ,
                 ESTIMATED_FINISH_DATE ,
                 ACTUAL_START_DATE ,
                 ACTUAL_FINISH_DATE ,
                 ESTIMATED_REMAINING_EFFORT ,
                 BASE_PERCENT_COMP_DERIV_CODE,
                 STRUCTURE_TYPE ,
                 PROJ_ELEMENT_ID,
                 STRUCTURE_VERSION_ID ,
                 PPL_ACT_EFFORT_TO_DATE ,
                 EQPMT_ACT_EFFORT_TO_DATE,
                 OTH_ACT_COST_TO_DATE_TC ,
                 OTH_ACT_COST_TO_DATE_FC,
                 OTH_ACT_COST_TO_DATE_PC ,
                 PPL_ACT_COST_TO_DATE_TC ,
                 PPL_ACT_COST_TO_DATE_FC,
                 PPL_ACT_COST_TO_DATE_PC ,
                 EQPMT_ACT_COST_TO_DATE_TC,
                 EQPMT_ACT_COST_TO_DATE_FC,
                 EQPMT_ACT_COST_TO_DATE_PC,
                 EARNED_VALUE
                from pa_progress_rollup ppr
                where ppr.project_id = p_project_id
                and ppr.structure_version_id = p_working_str_ver_id -- Bug 4190086
                and ppr.structure_type = 'WORKPLAN'
        and ppr.proj_element_id <> 0 -- 4398411
        and ppr.proj_element_id is not null -- 4398411
        UNION ALL
                select PROJECT_ID,
                 OBJECT_ID ,
                 OBJECT_TYPE,
                 AS_OF_DATE ,
                 OBJECT_VERSION_ID,
                 PROGRESS_STATUS_CODE,
                 INCREMENTAL_WORK_QUANTITY ,
                 CUMULATIVE_WORK_QUANTITY ,
                 BASE_PERCENT_COMPLETE ,
                 EFF_ROLLUP_PERCENT_COMP,
                 COMPLETED_PERCENTAGE ,
                 ESTIMATED_START_DATE ,
                 ESTIMATED_FINISH_DATE ,
                 ACTUAL_START_DATE ,
                 ACTUAL_FINISH_DATE ,
                 ESTIMATED_REMAINING_EFFORT ,
                 BASE_PERCENT_COMP_DERIV_CODE,
                 STRUCTURE_TYPE ,
                 PROJ_ELEMENT_ID,
                 STRUCTURE_VERSION_ID ,
                 PPL_ACT_EFFORT_TO_DATE ,
                 EQPMT_ACT_EFFORT_TO_DATE,
                 OTH_ACT_COST_TO_DATE_TC ,
                 OTH_ACT_COST_TO_DATE_FC,
                 OTH_ACT_COST_TO_DATE_PC ,
                 PPL_ACT_COST_TO_DATE_TC ,
                 PPL_ACT_COST_TO_DATE_FC,
                 PPL_ACT_COST_TO_DATE_PC ,
                 EQPMT_ACT_COST_TO_DATE_TC,
                 EQPMT_ACT_COST_TO_DATE_FC,
                 EQPMT_ACT_COST_TO_DATE_PC,
                 EARNED_VALUE
                from pa_progress_rollup ppr1
                where ppr1.project_id = p_project_id
                and ppr1.structure_version_id IS NULL
                and ppr1.structure_type = 'WORKPLAN'
        and ppr1.current_flag = 'Y'
        and ppr1.proj_element_id <> 0 -- 4398411
        and ppr1.proj_element_id is not null -- 4398411
        and not exists
        (select 'xyz' from pa_progress_rollup ppr2
         where ppr2.project_id = ppr1.project_id
         and ppr2.object_id = ppr1.object_id
         and nvl(ppr2.proj_element_id,0) = nvl(ppr1.proj_element_id,0)
         and ppr2.structure_version_id = p_working_str_ver_id
         and ppr2.structure_type = 'WORKPLAN'
        )
        ;


 CURSOR c_get_ppc_rec(c_project_id NUMBER, c_object_id NUMBER, c_proj_element_id NUMBER, c_object_type VARCHAR2, c_as_of_date DATE) is
                select rowid, ppc.*
                from pa_percent_completes ppc
                where ppc.project_id = c_project_id
                and ppc.structure_type = 'WORKPLAN'
        --and trunc(ppc.date_computed) = trunc(c_as_of_date) -- Bug 4227280
        and ppc.published_flag = 'N' -- Bug 4227280
        and ppc.object_id = c_object_id
        and ppc.task_id = c_proj_element_id
        and ppc.object_type = c_object_type;

 CURSOR c_get_last_ppc_rec(c_project_id NUMBER, c_object_id NUMBER, c_proj_element_id NUMBER, c_object_type VARCHAR2, c_as_of_date DATE) is
                select ppc.*
                from pa_percent_completes ppc
                where ppc.project_id = c_project_id
                and ppc.structure_type = 'WORKPLAN'
        ---and trunc(ppc.date_computed) <= trunc(c_as_of_date)
        and ppc.object_id = c_object_id
        and ppc.task_id = c_proj_element_id
        and ppc.object_type = c_object_type
        and ppc.current_flag = 'Y'
        and ppc.published_flag = 'Y';

CURSOR c_get_work_obj_ver_id(c_proj_element_id NUMBER, c_structure_version_id NUMBER, c_object_type VARCHAR2) IS
                select element_version_id
                from pa_proj_element_versions
                where project_id = p_project_id
                and proj_element_id = c_proj_element_id
                and ((c_object_type <> 'PA_DELIVERABLES' and parent_structure_version_id = c_structure_version_id)
            OR c_object_type = 'PA_DELIVERABLES'); -- 4398411 : Added Deliverable condition

CURSOR c_get_progress_status(c_proj_element_id NUMBER) IS
                select initial_progress_status_code
                from pa_proj_elements
        , pa_task_types
                where project_id = p_project_id
                and proj_element_id = c_proj_element_id
        and type_id = task_type_id;

CURSOR c_get_ppr_rec(c_project_id NUMBER, c_object_id NUMBER, c_proj_element_id NUMBER, c_object_type VARCHAR2, c_as_of_date DATE) is
                select rowid, ppr.*
                from pa_progress_rollup ppr
                where ppr.project_id = c_project_id
                and ppr.structure_type = 'WORKPLAN'
        and ppr.structure_version_id is null
        --and trunc(ppr.as_of_date) = trunc(c_as_of_date) -- Bug 4227280
        and ppr.current_flag = 'W' -- Bug 4227280
        and ppr.object_id = c_object_id
        and ppr.proj_element_id = c_proj_element_id
        and ppr.object_type = c_object_type;

CURSOR c_get_last_ppr_rec(c_project_id NUMBER, c_object_id NUMBER, c_proj_element_id NUMBER, c_object_type VARCHAR2, c_as_of_date DATE) is
                select ppr.*
                from pa_progress_rollup ppr
                where ppr.project_id = c_project_id
                and ppr.structure_type = 'WORKPLAN'
        and ppr.structure_version_id is null
  ------ and trunc(ppr.as_of_date) < trunc(c_as_of_date) redundant cond. 4743866
        and ppr.object_id = c_object_id
        and ppr.proj_element_id = c_proj_element_id
        and ppr.object_type = c_object_type
        and ppr.current_flag = 'Y';

CURSOR get_prev_published_ver  IS
  SELECT a.element_version_id
  FROM pa_proj_elem_ver_structure a
  WHERE a.project_id = p_project_id
  AND a.LATEST_EFF_PUBLISHED_FLAG <> 'Y'
  AND a.STATUS_CODE = 'STRUCTURE_PUBLISHED'
  ORDER BY published_date desc;

CURSOR c_get_sch_dates(c_project_id NUMBER, c_object_version_id NUMBER) IS
                select scheduled_start_date, scheduled_finish_date
                from pa_proj_elem_ver_schedule
                where project_id = c_project_id
                and element_version_id = c_object_version_id ;

CURSOR c_ptav_cur(c_project_id NUMBER, c_object_id NUMBER, c_task_id NUMBER, c_task_version_id NUMBER, c_structure_version_id NUMBER, c_ta_display_flag VARCHAR2) IS
SELECT resource_class_code
       ,resource_list_member_id
       ,assignment_start_date
       ,assignment_end_date
       ,txn_currency_code
       ,resource_assignment_id
       ,planned_quantity
       ,planned_bur_cost_txn_cur
       ,planned_bur_cost_projfunc
       ,planned_bur_cost_proj_cur
       ,planned_raw_cost_txn_cur
       ,planned_raw_cost_proj_cur
       ,planned_raw_cost_projfunc
       ,rate_based_flag
       ,budget_version_id        --- 4372462
FROM pa_task_asgmts_v
WHERE project_id = c_project_id
      AND resource_list_member_id = c_object_id
      AND task_id = c_task_id
      AND task_version_id = c_task_version_id
      AND structure_version_id = c_structure_version_id ;
      --AND ta_display_flag = c_ta_display_flag;  bug 3958686, now select all assignments

l_ptav_rec      c_ptav_cur%ROWTYPE;

   l_ppc_rec                c_get_ppc_rec%ROWTYPE;
   l_ppr_rec                c_get_ppr_rec%ROWTYPE;
   l_last_ppc_rec           c_get_last_ppc_rec%ROWTYPE;
   l_last_ppr_rec           c_get_last_ppr_rec%ROWTYPE;
   l_as_of_date             DATE := NULL;
   l_max_as_of_date         DATE := NULL;
   l_user_id                NUMBER := fnd_global.user_id;
   l_login_id               NUMBER := fnd_global.login_id;
   l_published_by_party_id      NUMBER := PA_UTILS.get_party_id(l_user_id);
   L_LATEST_PUB_WP_VERSION_ID       NUMBER;
   L_PRE_PUB_STR_VER_ID         NUMBER;
   L_TASK_WEIGHT_BASIS_CODE     pa_proj_progress_attr.task_weight_basis_code%TYPE;
   L_OBJECT_VERSION_ID          NUMBER;
   L_PROGRESS_STATUS_CODE       pa_progress_rollup.progress_status_code%TYPE;
   L_ACTUAL_START_DATE          DATE;
   L_ACTUAL_FINISH_DATE         DATE;
   L_ESTIMATED_START_DATE       DATE;
   L_ESTIMATED_FINISH_DATE      DATE;
   L_TASK_STATUS            pa_percent_completes.status_code%TYPE;
   L_PERCENT_COMPLETE_ID        NUMBER;
   L_SYSTEM_STATUS_CODE         pa_project_statuses.project_system_status_code%TYPE;
   L_PROGRESS_ROLLUP_ID         NUMBER;
   L_BAC_VALUE              NUMBER;
   L_EARNED_VALUE           NUMBER;
   L_PROG_PA_PERIOD_NAME        pa_progress_rollup.PROG_PA_PERIOD_NAME%TYPE;
   L_PROG_GL_PERIOD_NAME        pa_progress_rollup.PROG_GL_PERIOD_NAME%TYPE;
   l_scheduled_start_date       DATE;
   l_scheduled_finish_date      DATE;
   l_baselined_str_ver_id               NUMBER;
   l_oth_etc_quantity           NUMBER;
   l_oth_etc_cost_tc            NUMBER;
   l_oth_etc_cost_pc            NUMBER;
   l_oth_etc_cost_fc            NUMBER;
   l_oth_etc_rawcost_tc         NUMBER;
   l_oth_etc_rawcost_pc         NUMBER;
   l_oth_etc_rawcost_fc         NUMBER;
   l_estimated_remaining_effort     NUMBER;
   l_ppl_etc_cost_tc            NUMBER;
   l_ppl_etc_cost_pc            NUMBER;
   l_ppl_etc_cost_fc            NUMBER;
   l_ppl_etc_rawcost_tc         NUMBER;
   l_ppl_etc_rawcost_pc         NUMBER;
   l_ppl_etc_rawcost_fc         NUMBER;
   l_eqpmt_etc_effort           NUMBER;
   l_eqpmt_etc_cost_tc          NUMBER;
   l_eqpmt_etc_cost_pc          NUMBER;
   l_eqpmt_etc_cost_fc          NUMBER;
   l_eqpmt_etc_rawcost_tc       NUMBER;
   l_eqpmt_etc_rawcost_pc       NUMBER;
   l_eqpmt_etc_rawcost_fc       NUMBER;

--reset ETC whenever workplan gets published.

   l_etc_reset_flag             VARCHAR2(1) := 'Y';
   --Added by rtarway for BUG 3951024
   l_upd_new_elem_ver_id_flag   VARCHAR2(1) := 'Y';

        CURSOR cur_lp_progress is
        select *
        from pa_progress_rollup ppr
        where ppr.project_id = p_project_id
        and ppr.structure_version_id is null
        and ppr.object_type = 'PA_TASKS'
        and structure_type = 'WORKPLAN'
        and pa_proj_elements_utils.is_lowest_task(ppr.object_version_id) = 'Y' -- Bug 3627315 issue 8 Added this condition
        and pa_progress_utils.check_assignment_exists(p_project_id,ppr.object_version_id,ppr.object_type) = 'N' -- Bug 3627315 issue 8 Added this condition
        and current_flag = 'Y'
        Union
        select *
        from pa_progress_rollup ppr
        where ppr.project_id = p_project_id
        and ppr.structure_version_id is null
        and ppr.object_type = 'PA_ASSIGNMENTS'
        and structure_type = 'WORKPLAN'
        and current_flag = 'Y';

CURSOR c_ptav_cur_task(c_project_id NUMBER, c_object_id NUMBER, c_task_id NUMBER, c_task_version_id NUMBER, c_structure_version_id NUMBER, c_ta_display_flag VARCHAR2) IS
SELECT resource_class_code
       ,resource_list_member_id
       ,assignment_start_date
       ,assignment_end_date
       ,txn_currency_code
       ,resource_assignment_id
       ,planned_quantity
       ,planned_bur_cost_txn_cur
       ,planned_bur_cost_projfunc
       ,planned_bur_cost_proj_cur
       ,planned_raw_cost_txn_cur
       ,planned_raw_cost_proj_cur
       ,planned_raw_cost_projfunc
       ,rate_based_flag
       ,budget_version_id        --- 4372462
FROM pa_task_asgmts_v
WHERE project_id = c_project_id
      AND task_id = c_task_id
      AND task_version_id = c_task_version_id
      AND structure_version_id = c_structure_version_id
      AND ta_display_flag = c_ta_display_flag;

-- Bug 3865516 : Added c_get_task_status
CURSOR c_get_task_status(c_project_id NUMBER, c_proj_element_id NUMBER) IS
    select status_code
    from pa_proj_elements
    where project_id = c_project_id
    and proj_element_id = c_proj_element_id;


l_track_wp_cost_flag  VARCHAR2(1) := 'Y'; -- Bug 3801745

--bug 3906362
l_EFF_ROLLUP_PERCENT_COMP         NUMBER;
l_planned_effort                  NUMBER;
l_BASE_PERCENT_COMP_DERIV_CODE    VARCHAR2(30);

CURSOR cur_proj_elements(c_proj_element_id NUMBER)
IS
   SELECT BASE_PERCENT_COMP_DERIV_CODE
     from pa_proj_elements
    where project_id = p_project_id
     and proj_element_id = c_proj_element_id;

CURSOR cur_task_plan (c_proj_element_id NUMBER)
IS
   SELECT labor_effort
     FROM pji_xbs_plans_v
    WHERE project_id = p_project_id
     AND  proj_element_id = c_proj_element_id
     AND  STRUCTURE_VERSION_ID = p_pub_structure_version_id
     AND  STRUCTURE_TYPE = 'WORKPLAN'
     ;
--end bug 3906362

--bug 4191360, start
/*CURSOR cur_task_plan_cost (c_proj_element_id NUMBER)
IS
   SELECT nvl(BRDN_COST, 0)
     FROM pji_xbs_plans_v
    WHERE project_id = p_project_id
     AND  proj_element_id = c_proj_element_id
     AND  STRUCTURE_VERSION_ID = p_pub_structure_version_id
     AND  STRUCTURE_TYPE = 'WORKPLAN'
     ;*/
l_planned_cost             NUMBER;
l_assignment_exists   VARCHAR2(1);
--bug 4191360, end

-- ETC Changes

l_task_id_tbl                   PA_PLSQL_DATATYPES.Num15TabTyp;
l_completed_percentage_tbl          PA_PLSQL_DATATYPES.NumTabTyp;
l_project_id_tbl                PA_PLSQL_DATATYPES.Num15TabTyp;
l_object_type_tbl               PA_PLSQL_DATATYPES.Char30TabTyp;
l_object_id_tbl                 PA_PLSQL_DATATYPES.Num15TabTyp;
l_object_version_id_tbl             PA_PLSQL_DATATYPES.Num15TabTyp;
l_progress_status_code_tbl          PA_PLSQL_DATATYPES.Char30TabTyp;
l_act_start_date_tbl                PA_PLSQL_DATATYPES.DateTabTyp;
l_act_finish_date_tbl               PA_PLSQL_DATATYPES.DateTabTyp;
l_est_start_date_tbl                PA_PLSQL_DATATYPES.DateTabTyp;
l_est_finish_date_tbl               PA_PLSQL_DATATYPES.DateTabTyp;
l_task_status_code_tbl              PA_PLSQL_DATATYPES.Char30TabTyp;
l_earned_value_tbl              PA_PLSQL_DATATYPES.AmtTabTyp;
l_incr_work_quantity_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_cumu_work_quantity_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_eff_rollup_percent_comp_tbl           PA_PLSQL_DATATYPES.NumTabTyp;
l_base_prog_status_code_tbl         PA_PLSQL_DATATYPES.Char30TabTyp;
l_eff_roll_prog_stat_code_tbl           PA_PLSQL_DATATYPES.Char30TabTyp;
l_percent_complete_id_tbl           PA_PLSQL_DATATYPES.Num15TabTyp;
l_base_per_comp_deriv_code_tbl          PA_PLSQL_DATATYPES.Char30TabTyp;
l_base_perc_comp_tbl                            PA_PLSQL_DATATYPES.NumTabTyp; -- 4604661

l_ppl_act_effort_to_date_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_act_effort_to_date_tbl          PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_quantity_to_date_tbl          PA_PLSQL_DATATYPES.AmtTabTyp;

l_eqpmt_etc_effort_tbl              PA_PLSQL_DATATYPES.AmtTabTyp;
l_est_remaining_effort_tbl          PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_etc_quantity_tbl              PA_PLSQL_DATATYPES.AmtTabTyp;

l_ppl_etc_cost_tc_tbl               PA_PLSQL_DATATYPES.AmtTabTyp;
l_ppl_etc_cost_fc_tbl               PA_PLSQL_DATATYPES.AmtTabTyp;
l_ppl_etc_cost_pc_tbl               PA_PLSQL_DATATYPES.AmtTabTyp;
l_ppl_etc_rawcost_tc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_ppl_etc_rawcost_fc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_ppl_etc_rawcost_pc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_etc_cost_tc_tbl             PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_etc_cost_fc_tbl             PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_etc_cost_pc_tbl             PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_etc_rawcost_tc_tbl          PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_etc_rawcost_fc_tbl          PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_etc_rawcost_pc_tbl          PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_etc_cost_tc_tbl               PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_etc_cost_fc_tbl               PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_etc_cost_pc_tbl               PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_etc_rawcost_tc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_etc_rawcost_fc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_etc_rawcost_pc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;

l_ppl_act_cost_to_date_tc_tbl           PA_PLSQL_DATATYPES.AmtTabTyp;
l_ppl_act_cost_to_date_fc_tbl           PA_PLSQL_DATATYPES.AmtTabTyp;
l_ppl_act_cost_to_date_pc_tbl           PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqp_act_cost_to_date_tc_tbl           PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqp_act_cost_to_date_fc_tbl           PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqp_act_cost_to_date_pc_tbl           PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_act_cost_to_date_tc_tbl           PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_act_cost_to_date_fc_tbl           PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_act_cost_to_date_pc_tbl           PA_PLSQL_DATATYPES.AmtTabTyp;

l_ppl_act_raw_to_date_tc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_ppl_act_raw_to_date_fc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_ppl_act_raw_to_date_pc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_act_raw_to_date_tc_tbl          PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_act_raw_to_date_fc_tbl          PA_PLSQL_DATATYPES.AmtTabTyp;
l_eqpmt_act_raw_to_date_pc_tbl          PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_act_raw_to_date_tc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_act_raw_to_date_fc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;
l_oth_act_raw_to_date_pc_tbl            PA_PLSQL_DATATYPES.AmtTabTyp;

l_projfunc_cost_rate_type_tbl           PA_PLSQL_DATATYPES.Char30TabTyp;
l_projfunc_cost_exc_rate_tbl            PA_PLSQL_DATATYPES.NumTabTyp;
l_projfunc_cost_rate_date_tbl           PA_PLSQL_DATATYPES.DateTabTyp;
l_proj_cost_rate_type_tbl           PA_PLSQL_DATATYPES.Char30TabTyp;
l_proj_cost_exchange_rate_tbl           PA_PLSQL_DATATYPES.NumTabTyp;
l_proj_cost_rate_date_tbl           PA_PLSQL_DATATYPES.DateTabTyp;
l_txn_currency_code_tbl             PA_PLSQL_DATATYPES.Char15TabTyp;
l_progress_rollup_id_tbl            PA_PLSQL_DATATYPES.Num15TabTyp;

l_description                       PA_PLSQL_DATATYPES.Char250TabTyp;
TYPE pa_varchar2_4000_tbl_type IS TABLE OF VARCHAR2(4000);
l_progress_comment                  pa_varchar2_4000_tbl_type:= pa_varchar2_4000_tbl_type();


l_count                     Number;
l_index                     Number;


-- Bug 4282618 Begin
CURSOR cur_prog_enabled(c_proj_element_id NUMBER)
IS
   SELECT nvl(ttype.PROG_ENTRY_ENABLE_FLAG, 'N')
     from pa_task_types ttype
     , pa_proj_elements elem
    where elem.project_id = p_project_id
     and elem.proj_element_id = c_proj_element_id
     and elem.object_type = 'PA_TASKS'
     and elem.type_id = ttype.task_type_id;

l_prog_enabled_tbl              PA_PLSQL_DATATYPES.Char1TabTyp;
l_prog_enabled                  VARCHAR2(1);
-- Bug 4282618 End
l_prog_rec_found VARCHAR2(1):='N';      --4600547

--Bug 5027965
l_etc_cost_calc_mode            VARCHAR2(30);
l_latest_prog_applied_flag      VARCHAR2(1);
l_plan_version_id               pa_budget_versions.budget_version_id%TYPE;
l_curr_workplan_ver_bv_id       pa_budget_versions.budget_version_id%TYPE;

l_upd_rollup_prog               varchar2(1) := 'N';  --5212999

--Bug 6499700
l_last_ppc_pub_flag             VARCHAR2(1);

BEGIN

-- LOGIAL FLOW OF API: PUBLISH_PROGRESS():
-- ---------------------------------------
--
-- 1). Update current_flag in rollup table to 'N' for old records before inserting published records.
-- 2). Find max(as_of_date) for all progress records for the project.
-- 3). Find the next_progress_cycle date for the max(as_of_date).
-- 4). Insert published progress records with the above next_progress_cycle date as as_of_date.

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',l_user_id,l_login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.PUBLISH_PROGRESS');
        END IF;

        IF g1_debug_mode  = 'Y' THEN
              pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'p_project_id : '||p_project_id, x_Log_Level=> 3);
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                SAVEPOINT PUBLISH_PROGRESS;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) THEN
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    -- Bug 4111107
    -- Now it will create Progress records for all objects
    -- for which they have progress records for working wp version
    -- or for published wp version

    -- We should not be resetting ETC if ETC is overidden in publish wp version.
    -- This change will be done later


        -- Get max(as_of_date) for all progress records for the project.

        OPEN c2(p_project_id);
        FETCH c2 INTO l_max_as_of_date;
        CLOSE c2;

        IF g1_debug_mode  = 'Y' THEN
              pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_max_as_of_date='||l_max_as_of_date, x_Log_Level=> 3);
        END IF;

        -- Get next_progress_cycle_date for max(as_of_date).

        --- date should not move if it is in future 5226910(5212999)
           if (l_max_as_of_date >= trunc(sysdate)) then
              l_as_of_date := l_max_as_of_date;
              l_upd_rollup_prog := 'Y';
           else
              l_as_of_date := pa_progress_utils.get_next_progress_cycle(
                           p_project_id => p_project_id
                           ,p_task_id => null
                           ,p_start_date => l_max_as_of_date);
	     l_as_of_date := trunc(l_as_of_date);  -- 5294838
           end if;


    -- On this l_as_of_date, there can be working progress record which we will update
    -- with working wp version progress

    l_latest_pub_wp_version_id := p_pub_structure_version_id;--PA_PROJ_ELEMENTS_UTILS.latest_published_ver_id(p_project_id, 'WORKPLAN');
        l_track_wp_cost_flag :=  pa_fp_wp_gen_amt_utils.get_wp_track_cost_amt_flag(p_project_id);  --Bug 3801745

        IF g1_debug_mode  = 'Y' THEN
              pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_as_of_date='||l_as_of_date, x_Log_Level=> 3);
              pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_latest_pub_wp_version_id='||l_latest_pub_wp_version_id, x_Log_Level=> 3);
        END IF;

        OPEN cur_proj_prog_attr;
        FETCH cur_proj_prog_attr INTO l_task_weight_basis_code;
        CLOSE cur_proj_prog_attr;

    -- ETC Changes Begin
    l_index := 0;
    l_prog_pa_period_name := PA_PROGRESS_UTILS.Prog_Get_Pa_Period_Name(l_as_of_date);
    l_prog_gl_period_name := PA_PROGRESS_UTILS.Prog_Get_GL_Period_Name(l_as_of_date);

        -- Bug 4111107 : Delete all Working Progress Records
    -- Previously it was getting deleted inside the curosr

    DELETE from pa_percent_completes
    where project_id = p_project_id
    and structure_type = 'WORKPLAN'
    and published_flag = 'N';

    DELETE from pa_progress_rollup
    where project_id = p_project_id
    and structure_type = 'WORKPLAN'
    and structure_version_id is null
    and current_flag = 'W';

    --Bug 5027965. If the latest progress is applied on current working version then the ETC cost should be
     --copied from the working version. Otherwise, it shoule be derived based on the rate setup on as_of_date
     l_latest_prog_applied_flag := pa_progress_utils.check_wwp_prog_publishing_ok(p_project_id            =>p_project_id,
                                                                                  p_structure_version_id  =>p_working_str_ver_id);
     IF (l_latest_prog_applied_flag = 'Y') THEN

         l_etc_cost_calc_mode := 'COPY';

         SELECT budget_version_id
         INTO   l_curr_workplan_ver_bv_id
         FROM   pa_budget_versions
         WHERE  project_structure_version_id=p_working_str_ver_id;

     ELSE

         l_etc_cost_calc_mode:= 'DERIVE';

     END IF;

        -- Bug 4111107 : Replaced c_get_working_wp_progress to c_get_all_progress
    FOR l_rec IN c_get_all_progress LOOP
        l_index := l_index+1;
        l_eff_rollup_percent_comp := l_rec.eff_rollup_percent_comp; -- 4604661 : Initialize
        l_prog_rec_found :='Y'; --4600547
            IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.object_id='||l_rec.object_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.proj_element_id='||l_rec.proj_element_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.object_type='||l_rec.object_type, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.object_version_id='||l_rec.object_version_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.EFF_ROLLUP_PERCENT_COMP='||l_rec.EFF_ROLLUP_PERCENT_COMP, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.COMPLETED_PERCENTAGE='|| l_rec.COMPLETED_PERCENTAGE, x_Log_Level=> 3);
        END IF;
        -- Bug 4111107 : Now deletion of working record is moved above
        -- Check if ppc record is there on max as of date
        --l_ppc_rec := null;
        --OPEN c_get_ppc_rec(l_rec.project_id, l_rec.object_id, l_rec.proj_element_id, l_rec.object_type, l_as_of_date);
        --FETCH c_get_ppc_rec INTO l_ppc_rec;
        --CLOSE c_get_ppc_rec;

        --IF l_ppc_rec.project_id IS NOT NULL THEN
              -- If this is found, it means there exists working progress record
              -- delete it
        --  IF g1_debug_mode  = 'Y' THEN
        --      pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'Working PPC Record Found, Deleting it', x_Log_Level=> 3);
        --  END IF;
        --    PA_PERCENT_COMPLETES_PKG.DELETE_ROW(l_ppc_rec.rowid);
        --END IF;

        l_last_ppc_rec := null;
        OPEN c_get_last_ppc_rec(l_rec.project_id, l_rec.object_id, l_rec.proj_element_id, l_rec.object_type, l_as_of_date);
        FETCH c_get_last_ppc_rec INTO l_last_ppc_rec;
        CLOSE c_get_last_ppc_rec;

        --Bug 3956234 : Now rollup record is opened here instead of below in the code.
        -- This was required to get the rollup progress status code.

        -- Bug 4111107 : Now deletion of working record is moved above
        -- Check if ppr record is there on max as of date
        --l_ppr_rec := null;
        --OPEN c_get_ppr_rec(l_rec.project_id, l_rec.object_id, l_rec.proj_element_id, l_rec.object_type, l_as_of_date);
        --FETCH c_get_ppr_rec INTO l_ppr_rec;
        --CLOSE c_get_ppr_rec;

        --IF l_ppr_rec.project_id IS NOT NULL THEN
              -- If this is found, it means there exists working progress record
              -- delete it
        --  IF g1_debug_mode  = 'Y' THEN
        --      pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'Working PPR Record Found, Deleting it', x_Log_Level=> 3);
        --  END IF;
        --      PA_PROGRESS_ROLLUP_PKG.DELETE_ROW(l_ppr_rec.rowid);
        --END IF;

        l_last_ppr_rec := null;
        OPEN c_get_last_ppr_rec(l_rec.project_id, l_rec.object_id, l_rec.proj_element_id, l_rec.object_type, l_as_of_date);
        FETCH c_get_last_ppr_rec INTO l_last_ppr_rec;
        CLOSE c_get_last_ppr_rec;

        --Bug 6499700 .For already published records, incremental_work_quantity should not be considered.
        BEGIN
            SELECT published_flag
            INTO   l_last_ppc_pub_flag
            FROM   pa_percent_completes
            WHERE  percent_complete_id=l_last_ppr_rec.percent_complete_id;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
            l_last_ppc_pub_flag:='N';
        END;

        IF l_last_ppc_pub_flag='Y' THEN
            l_last_ppr_rec.incremental_work_quantity:=to_number(null);
        END IF;
        --End of fix for bug Bug 6499700

        l_object_version_id := null;
        l_progress_status_code := null;
        l_actual_start_date := null;
        l_actual_finish_date := null;
        l_estimated_start_date := null;
        l_estimated_finish_date := null;
        l_task_status := null;
        l_percent_complete_id := null;

        -- Bug 4398411 : Added object_type in following cursor
        OPEN c_get_work_obj_ver_id(l_rec.proj_element_id, l_latest_pub_wp_version_id, l_rec.object_type);
        FETCH c_get_work_obj_ver_id INTO l_object_version_id;
        CLOSE c_get_work_obj_ver_id;

        IF l_last_ppc_rec.progress_status_code IS NOT NULL THEN
            l_progress_status_code := l_last_ppc_rec.progress_status_code;
        --Bug 3956234 : Introduced rollup status code below.
        ELSIF NVL(l_last_ppr_rec.progress_status_code, l_last_ppr_rec.eff_rollup_prog_stat_code) IS NOT NULL THEN
            l_progress_status_code := NVL(l_last_ppr_rec.progress_status_code, l_last_ppr_rec.eff_rollup_prog_stat_code);
        ELSE
            OPEN c_get_progress_status(l_rec.proj_element_id);
            FETCH c_get_progress_status INTO l_progress_status_code;
            CLOSE c_get_progress_status;
        END IF;

        l_estimated_start_date := l_rec.estimated_start_date;
        l_estimated_finish_date := l_rec.estimated_finish_date;

        l_actual_start_date := l_rec.actual_start_date;
        l_actual_finish_date := l_rec.actual_finish_date;

        -- Bug 3865516 : l_rec.completed_percentage and l_rec.EFF_ROLLUP_PERCENT_COMP shd not have OR
        -- it shd be NVL
        IF (NVL(l_rec.completed_percentage,l_rec.EFF_ROLLUP_PERCENT_COMP) > 0 AND  l_actual_start_date IS null) THEN
            OPEN c_get_sch_dates(p_project_id, l_rec.object_version_id);
            FETCH c_get_sch_dates INTO l_scheduled_start_date, l_scheduled_finish_date;
            CLOSE c_get_sch_dates;
            l_actual_start_date := nvl(l_estimated_start_date,l_scheduled_start_date);
        END IF;

        IF (NVL(l_rec.completed_percentage,l_rec.EFF_ROLLUP_PERCENT_COMP) = 100 AND l_actual_finish_date IS null) THEN
            l_actual_finish_date := nvl(l_estimated_finish_date,l_scheduled_finish_date);
        END IF;
        -- Bug 3865516 Begin
        IF l_rec.object_type = 'PA_TASKS' THEN
            IF l_last_ppc_rec.status_code IS NOT NULL THEN
                l_task_status := l_last_ppc_rec.status_code;
            ELSE
                OPEN c_get_task_status(p_project_id,l_rec.proj_element_id);
                FETCH c_get_task_status INTO l_task_status;
                CLOSE c_get_task_status;
            END IF;
            l_system_status_code := PA_PROGRESS_UTILS.get_system_task_status(l_task_status);

            IF (NVL(l_rec.completed_percentage,l_rec.EFF_ROLLUP_PERCENT_COMP) = 100  AND l_system_status_code <> 'COMPLETED')
            THEN
                l_task_status := '127';
            ELSIF (NVL(l_rec.completed_percentage,l_rec.EFF_ROLLUP_PERCENT_COMP) > 0 AND (l_system_status_code = 'NOT_STARTED' OR l_system_status_code IS NULL OR l_system_status_code = ''))
            THEN
                l_task_status := '125';
            END IF;
        -- Bug 3865516 End
        -- Bug 4343997 rtarway Begin
        ELSIF l_rec.object_type = 'PA_DELIVERABLES' THEN
            IF l_last_ppc_rec.status_code IS NOT NULL THEN
                l_task_status := l_last_ppc_rec.status_code;
            ELSE
                OPEN c_get_task_status(p_project_id,l_rec.proj_element_id);
                FETCH c_get_task_status INTO l_task_status;
                CLOSE c_get_task_status;
            END IF;
            l_system_status_code := PA_PROGRESS_UTILS.get_system_task_status(l_task_status,'PA_DELIVERABLES');
        END IF;
        -- Bug 4343997 rtarway End

            IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_object_version_id='||l_object_version_id, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_last_ppc_rec.progress_status_code='||l_last_ppc_rec.progress_status_code, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_progress_status_code='||l_progress_status_code, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_estimated_start_date='||l_estimated_start_date, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_estimated_finish_date='||l_estimated_finish_date, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_actual_start_date='||l_actual_start_date, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.actual_start_date='||l_rec.actual_start_date, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_actual_finish_date='||l_actual_finish_date, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.actual_finish_date='||l_rec.actual_finish_date, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_system_status_code='||l_system_status_code, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_task_status='||l_task_status, x_Log_Level=> 3);
        END IF;


        l_task_id_tbl(l_index)          := l_rec.proj_element_id;
        l_completed_percentage_tbl(l_index) := l_rec.completed_percentage;
        l_project_id_tbl(l_index)       := l_rec.project_id;
        l_object_type_tbl(l_index)      := l_rec.object_type;
        l_object_id_tbl(l_index)                := l_rec.object_id;
--      l_object_version_id_tbl(l_index)        := l_rec.object_version_id; Bug 4227280
        l_object_version_id_tbl(l_index)        := l_object_version_id; -- Bug 4227280
        l_progress_status_code_tbl(l_index) := l_progress_status_code;
        l_act_start_date_tbl(l_index)       := l_actual_start_date;
        l_act_finish_date_tbl(l_index)      := l_actual_finish_date;
        l_est_start_date_tbl(l_index)       := l_estimated_start_date;
        l_est_finish_date_tbl(l_index)      := l_estimated_finish_date;
        l_task_status_code_tbl(l_index)     := l_task_status;
        l_earned_value_tbl(l_index)     := l_rec.earned_value;
        l_base_per_comp_deriv_code_tbl(l_index) := l_last_ppr_rec.BASE_PERCENT_COMP_DERIV_CODE;
        l_base_perc_comp_tbl(l_index)           := l_rec.base_percent_complete; -- 4604661
        l_description(l_index) := l_last_ppc_rec.description;
        l_progress_comment.extend(1);
        l_progress_comment(l_index) := l_last_ppc_rec.progress_comment;

        -- Bug 4282618 Begin
        l_prog_enabled := 'Y';
        OPEN cur_prog_enabled(l_rec.proj_element_id);
        FETCH cur_prog_enabled INTO l_prog_enabled;
        CLOSE cur_prog_enabled;

        l_prog_enabled_tbl(l_index)     := l_prog_enabled;
                -- Bug 4282618 End


        l_oth_etc_quantity := null;
        l_oth_etc_cost_tc := null;
        l_oth_etc_cost_pc := null;
        l_oth_etc_cost_fc := null;
        l_oth_etc_rawcost_tc := null;
        l_oth_etc_rawcost_pc := null;
        l_oth_etc_rawcost_fc := null;
        l_estimated_remaining_effort := null;
        l_ppl_etc_cost_tc := null;
        l_ppl_etc_cost_pc := null;
        l_ppl_etc_cost_fc := null;
        l_ppl_etc_rawcost_tc := null;
        l_ppl_etc_rawcost_pc := null;
        l_ppl_etc_rawcost_fc := null;
        l_eqpmt_etc_effort := null;
        l_eqpmt_etc_cost_tc := null;
        l_eqpmt_etc_cost_pc := null;
        l_eqpmt_etc_cost_fc := null;
        l_eqpmt_etc_rawcost_tc := null;
        l_eqpmt_etc_rawcost_pc := null;
        l_eqpmt_etc_rawcost_fc := null;


        -- We need to derive ETC as new planned-actual for assignments and lowest tasks which do not have assignments
        -- For summary level rollup API will take care

        IF l_rec.object_type = 'PA_ASSIGNMENTS' THEN
            l_ptav_rec := null;
            OPEN c_ptav_cur(p_project_id, l_rec.object_id, l_rec.proj_element_id, l_object_version_id, l_latest_pub_wp_version_id, 'Y');
            FETCH c_ptav_cur INTO l_ptav_rec;
            CLOSE c_ptav_cur;

            IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'After openign cursor c_ptav_cur', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.resource_class_cod='||l_ptav_rec.resource_class_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_quantity='||l_ptav_rec.planned_quantity, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_bur_cost_txn_cur='||l_ptav_rec.planned_bur_cost_txn_cur, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.l_ptav_rec.planned_bur_cost_proj_cur='||l_ptav_rec.planned_bur_cost_proj_cur, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.l_ptav_rec.planned_bur_cost_projfunc='||l_ptav_rec.planned_bur_cost_projfunc, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_raw_cost_txn_cur='||l_ptav_rec.planned_raw_cost_txn_cur, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_raw_cost_proj_cur='||l_ptav_rec.planned_raw_cost_proj_cur, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_raw_cost_projfunc='||l_ptav_rec.planned_raw_cost_projfunc, x_Log_Level=> 3);
                END IF;

            IF l_ptav_rec.resource_class_code = 'FINANCIAL_ELEMENTS' THEN
                --5726773
       --adding the below code for Bug 7185549
            l_oth_etc_quantity := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(NVL(l_ptav_rec.planned_quantity,0),NVL(l_last_ppr_rec.oth_quantity_to_date,0));

	        /* 5726773 l_oth_etc_quantity := nvl(l_ptav_rec.planned_quantity,0)-nvl(l_last_ppr_rec.oth_quantity_to_date,0);
                IF l_oth_etc_quantity < 0 THEN
                    l_oth_etc_quantity := 0;
                END IF; */
            ELSIF l_ptav_rec.resource_class_code = 'MATERIAL_ITEMS' THEN
                --5726773
 	        l_oth_etc_quantity := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_ptav_rec.planned_quantity,l_last_ppr_rec.oth_quantity_to_date);
 	        /* 5726773 l_oth_etc_quantity := nvl(l_ptav_rec.planned_quantity,0)-nvl(l_last_ppr_rec.oth_quantity_to_date,0);
                IF l_oth_etc_quantity < 0 THEN
                    l_oth_etc_quantity := 0;
                END IF; */
            ELSIF l_ptav_rec.resource_class_code = 'PEOPLE' THEN
                --5726773
 	        l_estimated_remaining_effort := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_ptav_rec.planned_quantity,l_last_ppr_rec.ppl_act_effort_to_date);
 	        /*5726773 l_estimated_remaining_effort := nvl(l_ptav_rec.planned_quantity,0)-nvl(l_last_ppr_rec.ppl_act_effort_to_date,0);
                IF l_estimated_remaining_effort < 0 THEN
                    l_estimated_remaining_effort := 0;
                END IF; */
            ELSIF l_ptav_rec.resource_class_code = 'EQUIPMENT' THEN
                --5726773
 	        l_eqpmt_etc_effort := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_ptav_rec.planned_quantity,l_last_ppr_rec.eqpmt_act_effort_to_date);
 	        /* 5726773        l_eqpmt_etc_effort := nvl(l_ptav_rec.planned_quantity,0)-nvl(l_last_ppr_rec.eqpmt_act_effort_to_date,0);
                IF l_eqpmt_etc_effort < 0 THEN
                    l_eqpmt_etc_effort := 0;
                END IF; */
            END IF;
                        l_EFF_ROLLUP_PERCENT_COMP := l_rec.eff_rollup_percent_comp;  --bug 3906362
                --bug 4191360, consider for lowest level task only
        --ELSIF l_rec.object_type = 'PA_TASKS' AND NVL(PA_PROGRESS_UTILS.check_assignment_exists(p_project_id,l_object_version_id,l_rec.object_type),'N') = 'N' THEN
        ELSIF l_rec.object_type = 'PA_TASKS' AND NVL(pa_proj_elements_utils.is_lowest_task(l_object_version_id),'N') = 'Y' THEN
            l_ptav_rec := null;
            --bug 4191360, added IF NVL(l_assignment_exists, 'N')
            l_assignment_exists := PA_PROGRESS_UTILS.check_assignment_exists(p_project_id,l_object_version_id,l_rec.object_type);
            IF NVL(l_assignment_exists, 'N') = 'N'
            THEN
                OPEN c_ptav_cur_task(p_project_id, l_rec.object_id, l_rec.proj_element_id, l_object_version_id, l_latest_pub_wp_version_id, 'N');
                FETCH c_ptav_cur_task INTO l_ptav_rec;
                CLOSE c_ptav_cur_task;

                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'After openign cursor c_ptav_cur_task', x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.resource_class_cod='||l_ptav_rec.resource_class_code, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_quantity='||l_ptav_rec.planned_quantity, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_bur_cost_txn_cur='||l_ptav_rec.planned_bur_cost_txn_cur, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.l_ptav_rec.planned_bur_cost_proj_cur='||l_ptav_rec.planned_bur_cost_proj_cur, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.l_ptav_rec.planned_bur_cost_projfunc='||l_ptav_rec.planned_bur_cost_projfunc, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_raw_cost_txn_cur='||l_ptav_rec.planned_raw_cost_txn_cur, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_raw_cost_proj_cur='||l_ptav_rec.planned_raw_cost_proj_cur, x_Log_Level=> 3);
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ptav_rec.planned_raw_cost_projfunc='||l_ptav_rec.planned_raw_cost_projfunc, x_Log_Level=> 3);
                END IF;

                /*l_estimated_remaining_effort := nvl(l_ptav_rec.planned_quantity,0)-nvl(l_last_ppr_rec.ppl_act_effort_to_date,0);
                IF l_estimated_remaining_effort < 0 THEN
                    l_estimated_remaining_effort := 0;
                END IF; */
              -- Commented above and added below for Bug# 6713712
              -- Used PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act to calculate
              -- l_estimated_remaining_effort.
              l_estimated_remaining_effort := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(NVL(l_ptav_rec.planned_quantity,0),NVL(l_last_ppr_rec.ppl_act_effort_to_date,0));
            END IF;
            --bug 3906362

            l_BASE_PERCENT_COMP_DERIV_CODE := null;

                        OPEN cur_proj_elements(l_rec.object_id);
                        FETCH cur_proj_elements INTO l_BASE_PERCENT_COMP_DERIV_CODE;
                        CLOSE cur_proj_elements;

            l_base_per_comp_deriv_code_tbl(l_index) := l_BASE_PERCENT_COMP_DERIV_CODE;

                        IF g1_debug_mode  = 'Y' THEN
                          pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'Re-derive percent complete at lowest task level', x_Log_Level=> 3);
                          pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_BASE_PERCENT_COMP_DERIV_CODE='||l_BASE_PERCENT_COMP_DERIV_CODE, x_Log_Level=> 3);
                        END IF;

                        --bug 4191360, rederive rollup percent only if %complete derv. code has changed
            IF NVL(l_rec.BASE_PERCENT_COMP_DERIV_CODE,'N') <> l_BASE_PERCENT_COMP_DERIV_CODE
            OR l_estimated_remaining_effort <> l_last_ppr_rec.estimated_remaining_effort -- Bug 4111107 : this should be done when ETC changes too
	    OR l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED' -- 4617909
            THEN
                --bug 4191360, for lowest level task calculate percent complete if der code is WQ based, irrespective of assignment
                IF l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'
                THEN
                     l_EFF_ROLLUP_PERCENT_COMP :=  PA_PROGRESS_UTILS.Calc_base_percent(
                              p_task_id              => l_rec.object_id
                        --4617909     ,p_incr_work_qty        => l_rec.INCREMENTAL_WORK_QUANTITY
                        --4617909      ,p_cuml_work_qty        => l_rec.CUMULATIVE_WORK_QUANTITY
			-- Using l_last_ppr_rec values as working ver progress might be old
                            ,p_incr_work_qty        => l_last_ppr_rec.INCREMENTAL_WORK_QUANTITY
                            ,p_cuml_work_qty        => l_last_ppr_rec.CUMULATIVE_WORK_QUANTITY
                             ,p_est_remaining_effort => null
                                     );
                     IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_EFF_ROLLUP_PERCENT_COMP='||l_EFF_ROLLUP_PERCENT_COMP, x_Log_Level=> 3);
                     END IF;
                --for lowest level task calc percent complete if assignment doesnt exist
                ELSIF NVL(l_assignment_exists, 'N') = 'N' THEN
                    l_planned_effort := null;
                    l_planned_cost := null;
                    IF l_BASE_PERCENT_COMP_DERIV_CODE in( 'EFFORT')
                    THEN
                        --bug 4191360, get the planned directly from cursor c_ptav_cur_task
                        /*IF l_rec.estimated_remaining_effort IS NULL
                        THEN
                        OPEN cur_task_plan(l_rec.object_id);
                        FETCH cur_task_plan INTO l_planned_effort;
                        CLOSE cur_task_plan;
                        END IF;
                        l_planned_effort := nvl( l_rec.PPL_ACT_EFFORT_TO_DATE,0) + nvl(l_rec.estimated_remaining_effort,nvl(l_planned_effort,0)-nvl( l_rec.PPL_ACT_EFFORT_TO_DATE,0));*/
                        l_planned_effort := l_ptav_rec.planned_quantity;
                        IF l_planned_effort = 0 OR l_planned_effort IS NULL
                        THEN
                           l_planned_effort := 1;
                        END iF;
                        l_EFF_ROLLUP_PERCENT_COMP :=  round((nvl(l_rec.PPL_ACT_EFFORT_TO_DATE,0)/l_planned_effort)*100,8); --Bug 6854114
                        IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.PPL_ACT_EFFORT_TO_DATE='||l_rec.PPL_ACT_EFFORT_TO_DATE, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_rec.estimated_remaining_effort='||l_rec.estimated_remaining_effort, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_planned_effort='||l_planned_effort, x_Log_Level=> 3);
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_EFF_ROLLUP_PERCENT_COMP='||l_EFF_ROLLUP_PERCENT_COMP, x_Log_Level=> 3);
                        END IF;
                    --bug 4191360, consider cost as well
                    ELSIF l_BASE_PERCENT_COMP_DERIV_CODE in('COST')
                    THEN
                        --bug 4191360, get the planned cost directly from cursor c_ptav_cur_task
                        /*IF l_rec.PPL_ETC_COST_PC IS NULL
                        THEN
                        OPEN cur_task_plan_cost(l_rec.object_id);
                        FETCH cur_task_plan_cost INTO l_planned_cost;
                        CLOSE cur_task_plan_cost;
                        END IF;
                        l_planned_cost := nvl( l_rec.PPL_ACT_COST_TO_DATE_PC,0) + nvl(l_rec.PPL_ETC_COST_PC,nvl(l_planned_cost,0)-nvl( l_rec.PPL_ACT_COST_TO_DATE_PC,0));*/
                        l_planned_cost := l_ptav_rec.planned_bur_cost_proj_cur;
                        IF l_planned_cost = 0 OR l_planned_cost IS NULL
                        THEN
                           l_planned_cost := 1;
                        END iF;
                        l_EFF_ROLLUP_PERCENT_COMP :=  round((nvl(l_rec.PPL_ACT_COST_TO_DATE_PC,0)/l_planned_cost)*100,8); --Bug 6854114
                                        ELSE
                                            l_EFF_ROLLUP_PERCENT_COMP := l_rec.eff_rollup_percent_comp;
                    END IF; -- IF l_BASE_PERCENT_COMP_DERIV_CODE in( 'EFFORT')
                 --bug 4191360, moved this code above
                 /*ELSIF l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'
                 THEN
                     l_EFF_ROLLUP_PERCENT_COMP :=  PA_PROGRESS_UTILS.Calc_base_percent(
                              p_task_id              => l_rec.object_id
                             ,p_incr_work_qty        => l_rec.INCREMENTAL_WORK_QUANTITY
                             ,p_cuml_work_qty        => l_rec.CUMULATIVE_WORK_QUANTITY
                             ,p_est_remaining_effort => null
                                     );
                     IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_EFF_ROLLUP_PERCENT_COMP='||l_EFF_ROLLUP_PERCENT_COMP, x_Log_Level=> 3);
                     END IF;*/
                  ELSE
                     l_EFF_ROLLUP_PERCENT_COMP := l_rec.eff_rollup_percent_comp;
                  END IF; -- IF l_BASE_PERCENT_COMP_DERIV_CODE = 'WQ_DERIVED'
            ELSE
                l_EFF_ROLLUP_PERCENT_COMP := l_rec.eff_rollup_percent_comp;
            END IF;  -- IF NVL(l_rec.BASE_PERCENT_COMP_DERIV_CODE,'N') <> l_BASE_PERCENT_COMP_DERIV_CODE
            --bug 3906362
        END IF; -- IF l_rec.object_type = 'PA_ASSIGNMENTS' THEN

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'Before Costing out ETC', x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_oth_etc_quantity='||l_oth_etc_quantity, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_estimated_remaining_effort='||l_estimated_remaining_effort, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eqpmt_etc_effort='||l_eqpmt_etc_effort, x_Log_Level=> 3);
        END IF;

        IF NVL(l_track_wp_cost_flag,'Y') = 'N' THEN -- Bug 3801745
                l_ppl_etc_cost_tc := null;
                l_ppl_etc_cost_fc := null;
                l_ppl_etc_cost_pc := null;
                l_ppl_etc_rawcost_tc := null;
                l_ppl_etc_rawcost_fc := null;
                l_ppl_etc_rawcost_pc := null;
                l_eqpmt_etc_cost_tc := null;
                l_eqpmt_etc_cost_fc := null;
                l_eqpmt_etc_cost_pc := null;
                l_eqpmt_etc_rawcost_tc := null;
                l_eqpmt_etc_rawcost_fc := null;
                l_eqpmt_etc_rawcost_pc := null;
                l_oth_etc_cost_tc := null;
                l_oth_etc_cost_fc := null;
                l_oth_etc_cost_pc := null;
                l_oth_etc_rawcost_tc := null;
                l_oth_etc_rawcost_fc := null;
                l_oth_etc_rawcost_pc := null;
        ELSE -- ETC Changes : Costing out ETC always
            IF l_oth_etc_quantity IS NOT NULL THEN
                IF l_oth_etc_quantity = 0 THEN
                    l_oth_etc_cost_tc := 0;
                    l_oth_etc_cost_fc := 0;
                    l_oth_etc_cost_pc := 0;
                    l_oth_etc_rawcost_tc := 0;
                    l_oth_etc_rawcost_fc := 0;
                    l_oth_etc_rawcost_pc := 0;
                ELSE
                    --Bug 5027965.
                    IF l_etc_cost_calc_mode ='COPY' THEN
                        l_plan_version_id := l_curr_workplan_ver_bv_id;
                    ELSE
                        l_plan_version_id := l_ptav_rec.budget_version_id;
                    END IF;
                    pa_progress_utils.get_plan_costs_for_qty
                        ( p_etc_cost_calc_mode     => l_etc_cost_calc_mode --Bug 5027965
                          ,p_resource_list_mem_id    => l_ptav_rec.resource_list_member_id
                          ,p_project_id         => p_project_id
                          ,p_task_id            => l_rec.proj_element_id
                          ,p_as_of_date         => l_as_of_date
                          ,p_structure_version_id       => l_latest_pub_wp_version_id
                          ,p_txn_currency_code          => l_ptav_rec.txn_currency_code
                          ,p_rate_based_flag            => l_ptav_rec.rate_based_flag
                          ,p_quantity                   => l_oth_etc_quantity
                          ,p_budget_version_id          => l_plan_version_id ---5027965 ---4372462
                          ,p_res_assignment_id          => l_ptav_rec.resource_assignment_id
                          ,x_rawcost_tc                 => l_oth_etc_rawcost_tc
                          ,x_brdncost_tc                => l_oth_etc_cost_tc
                          ,x_rawcost_pc                 => l_oth_etc_rawcost_pc
                          ,x_brdncost_pc                => l_oth_etc_cost_pc
                          ,x_rawcost_fc                 => l_oth_etc_rawcost_fc
                          ,x_brdncost_fc                => l_oth_etc_cost_fc
                          ,x_return_status      => x_return_status
                          ,x_msg_count          => x_msg_count
                          ,x_msg_data           => x_msg_data
                        );
                    IF x_return_status <> 'S' THEN
                        raise FND_API.G_EXC_ERROR;
                    END IF;
                END IF;
            ELSIF l_estimated_remaining_effort IS NOT NULL THEN
                IF l_estimated_remaining_effort = 0 THEN
                    l_ppl_etc_cost_tc := 0;
                    l_ppl_etc_cost_fc := 0;
                    l_ppl_etc_cost_pc := 0;
                    l_ppl_etc_rawcost_tc := 0;
                    l_ppl_etc_rawcost_fc := 0;
                    l_ppl_etc_rawcost_pc := 0;
                ELSE
                    --Bug 5027965.
                    IF l_etc_cost_calc_mode ='COPY' THEN
                        l_plan_version_id := l_curr_workplan_ver_bv_id;
                    ELSE
                        l_plan_version_id := l_ptav_rec.budget_version_id;
                    END IF;
                    pa_progress_utils.get_plan_costs_for_qty
                        ( p_etc_cost_calc_mode     => l_etc_cost_calc_mode --Bug 5027965
                          ,p_resource_list_mem_id    => l_ptav_rec.resource_list_member_id
                          ,p_project_id         => p_project_id
                          ,p_task_id            => l_rec.proj_element_id
                          ,p_as_of_date         => l_as_of_date
                          ,p_structure_version_id       => l_latest_pub_wp_version_id
                          ,p_txn_currency_code          => l_ptav_rec.txn_currency_code
                          ,p_rate_based_flag            => l_ptav_rec.rate_based_flag
                          ,p_quantity                   => l_estimated_remaining_effort
                          ,p_budget_version_id          => l_plan_version_id   ---4372462 --Bug 5027965
                          ,p_res_assignment_id          => l_ptav_rec.resource_assignment_id
                          ,x_rawcost_tc                 => l_ppl_etc_rawcost_tc
                          ,x_brdncost_tc                => l_ppl_etc_cost_tc
                          ,x_rawcost_pc                 => l_ppl_etc_rawcost_pc
                          ,x_brdncost_pc                => l_ppl_etc_cost_pc
                          ,x_rawcost_fc                 => l_ppl_etc_rawcost_fc
                          ,x_brdncost_fc                => l_ppl_etc_cost_fc
                          ,x_return_status      => x_return_status
                          ,x_msg_count          => x_msg_count
                          ,x_msg_data           => x_msg_data
                        );
                    IF x_return_status <> 'S' THEN
                        raise FND_API.G_EXC_ERROR;
                    END IF;
                END IF;
            ELSIF l_eqpmt_etc_effort IS NOT NULL THEN
                IF l_eqpmt_etc_effort = 0 THEN
                    l_eqpmt_etc_cost_tc := 0;
                    l_eqpmt_etc_cost_fc := 0;
                    l_eqpmt_etc_cost_pc := 0;
                    l_eqpmt_etc_rawcost_tc := 0;
                    l_eqpmt_etc_rawcost_fc := 0;
                    l_eqpmt_etc_rawcost_pc := 0;
                ELSE
                    --Bug 5027965.
                    IF l_etc_cost_calc_mode ='COPY' THEN
                        l_plan_version_id := l_curr_workplan_ver_bv_id;
                    ELSE
                        l_plan_version_id := l_ptav_rec.budget_version_id;
                    END IF;
                    pa_progress_utils.get_plan_costs_for_qty
                        ( p_etc_cost_calc_mode     => l_etc_cost_calc_mode --Bug 5027965
                          ,p_resource_list_mem_id    => l_ptav_rec.resource_list_member_id
                          ,p_project_id         => p_project_id
                          ,p_task_id            => l_rec.proj_element_id
                          ,p_as_of_date         => l_as_of_date
                          ,p_structure_version_id       => l_latest_pub_wp_version_id
                          ,p_txn_currency_code          => l_ptav_rec.txn_currency_code
                          ,p_rate_based_flag            => l_ptav_rec.rate_based_flag
                          ,p_quantity                   => l_eqpmt_etc_effort
                          ,p_budget_version_id          => l_plan_version_id   ---4372462 --Bug 5027965
                          ,p_res_assignment_id          => l_ptav_rec.resource_assignment_id
                          ,x_rawcost_tc                 => l_eqpmt_etc_rawcost_tc
                          ,x_brdncost_tc                => l_eqpmt_etc_cost_tc
                          ,x_rawcost_pc                 => l_eqpmt_etc_rawcost_pc
                          ,x_brdncost_pc                => l_eqpmt_etc_cost_pc
                          ,x_rawcost_fc                 => l_eqpmt_etc_rawcost_fc
                          ,x_brdncost_fc                => l_eqpmt_etc_cost_fc
                          ,x_return_status      => x_return_status
                          ,x_msg_count          => x_msg_count
                          ,x_msg_data           => x_msg_data
                        );
                    IF x_return_status <> 'S' THEN
                        raise FND_API.G_EXC_ERROR;
                    END IF;
                END IF;
            END IF;
        END IF;

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'After Costing out ETC', x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_oth_etc_quantity='||l_oth_etc_quantity, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_oth_etc_cost_tc='||l_oth_etc_cost_tc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_oth_etc_cost_pc='||l_oth_etc_cost_pc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_oth_etc_cost_fc='||l_oth_etc_cost_fc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_oth_etc_rawcost_tc='||l_oth_etc_rawcost_tc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_oth_etc_rawcost_pc='||l_oth_etc_rawcost_pc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_oth_etc_rawcost_fc='||l_oth_etc_rawcost_fc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_estimated_remaining_effort='||l_estimated_remaining_effort, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ppl_etc_cost_tc='||l_ppl_etc_cost_tc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ppl_etc_cost_pc='||l_ppl_etc_cost_pc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ppl_etc_cost_fc='||l_ppl_etc_cost_fc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ppl_etc_rawcost_tc='||l_ppl_etc_rawcost_tc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ppl_etc_rawcost_pc='||l_ppl_etc_rawcost_pc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_ppl_etc_rawcost_fc='||l_ppl_etc_rawcost_fc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eqpmt_etc_effort='||l_eqpmt_etc_effort, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eqpmt_etc_cost_tc='||l_eqpmt_etc_cost_tc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eqpmt_etc_cost_pc='||l_eqpmt_etc_cost_pc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eqpmt_etc_cost_fc='||l_eqpmt_etc_cost_fc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eqpmt_etc_rawcost_tc='||l_eqpmt_etc_rawcost_tc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eqpmt_etc_rawcost_pc='||l_eqpmt_etc_rawcost_pc, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eqpmt_etc_rawcost_fc='||l_eqpmt_etc_rawcost_fc, x_Log_Level=> 3);
        END IF;

        l_incr_work_quantity_tbl(l_index)       := l_last_ppr_rec.INCREMENTAL_WORK_Quantity;
        l_cumu_work_quantity_tbl(l_index)       := l_last_ppr_rec.CUMULATIVE_WORK_Quantity;
        l_eff_rollup_percent_comp_tbl(l_index)      := l_EFF_ROLLUP_PERCENT_COMP;

        l_base_prog_status_code_tbl(l_index)        := l_last_ppr_rec.BASE_PROGRESS_STATUS_CODE;
        l_eff_roll_prog_stat_code_tbl(l_index)      := l_last_ppr_rec.EFF_ROLLUP_PROG_STAT_CODE;

        l_ppl_act_effort_to_date_tbl(l_index)       := l_last_ppr_rec.PPL_ACT_EFFORT_TO_DATE;
        l_PPL_ACT_COST_TO_DATE_TC_tbl(l_index)      := l_last_ppr_rec.PPL_ACT_COST_TO_DATE_TC;
        l_PPL_ACT_COST_TO_DATE_FC_tbl(l_index)      := l_last_ppr_rec.PPL_ACT_COST_TO_DATE_FC;
        l_PPL_ACT_COST_TO_DATE_PC_tbl(l_index)      := l_last_ppr_rec.PPL_ACT_COST_TO_DATE_PC;
        l_ppl_act_raw_to_date_tc_tbl(l_index)       := l_last_ppr_rec.PPL_ACT_RAWCOST_TO_DATE_TC;
        l_ppl_act_raw_to_date_fc_tbl(l_index)       := l_last_ppr_rec.PPL_ACT_RAWCOST_TO_DATE_FC;
        l_ppl_act_raw_to_date_pc_tbl(l_index)       := l_last_ppr_rec.PPL_ACT_RAWCOST_TO_DATE_PC;

        l_est_remaining_effort_tbl(l_index)     := l_estimated_remaining_effort;
        l_ppl_etc_cost_tc_tbl(l_index)          := l_ppl_etc_cost_tc;
        l_ppl_etc_cost_fc_tbl(l_index)          := l_ppl_etc_cost_fc;
        l_ppl_etc_cost_pc_tbl(l_index)          := l_ppl_etc_cost_pc;
        l_ppl_etc_rawcost_tc_tbl(l_index)       := l_ppl_etc_rawcost_tc;
        l_ppl_etc_rawcost_fc_tbl(l_index)       := l_ppl_etc_rawcost_fc;
        l_ppl_etc_rawcost_pc_tbl(l_index)       := l_ppl_etc_rawcost_pc;

        l_eqpmt_act_effort_to_date_tbl(l_index)     := l_last_ppr_rec.EQPMT_ACT_EFFORT_TO_DATE;
        l_eqp_act_cost_to_date_tc_tbl(l_index)      := l_last_ppr_rec.EQPMT_ACT_COST_TO_DATE_TC;
        l_eqp_act_cost_to_date_fc_tbl(l_index)      := l_last_ppr_rec.EQPMT_ACT_COST_TO_DATE_FC;
        l_eqp_act_cost_to_date_pc_tbl(l_index)      := l_last_ppr_rec.EQPMT_ACT_COST_TO_DATE_PC;
        l_eqpmt_act_raw_to_date_tc_tbl(l_index)     := l_last_ppr_rec.EQPMT_ACT_RAWCOST_TO_DATE_TC;
        l_eqpmt_act_raw_to_date_fc_tbl(l_index)     := l_last_ppr_rec.EQPMT_ACT_RAWCOST_TO_DATE_FC;
        l_eqpmt_act_raw_to_date_pc_tbl(l_index)     := l_last_ppr_rec.EQPMT_ACT_RAWCOST_TO_DATE_PC;

        l_eqpmt_etc_effort_tbl(l_index)         := l_eqpmt_etc_effort;
        l_eqpmt_etc_cost_tc_tbl(l_index)        := l_eqpmt_etc_cost_tc;
        l_eqpmt_etc_cost_fc_tbl(l_index)        := l_eqpmt_etc_cost_fc;
        l_eqpmt_etc_cost_pc_tbl(l_index)        := l_eqpmt_etc_cost_pc;
        l_eqpmt_etc_rawcost_tc_tbl(l_index)     := l_eqpmt_etc_rawcost_tc;
        l_eqpmt_etc_rawcost_fc_tbl(l_index)     := l_eqpmt_etc_rawcost_fc;
        l_eqpmt_etc_rawcost_pc_tbl(l_index)     := l_eqpmt_etc_rawcost_pc;

        l_oth_quantity_to_date_tbl(l_index)     := l_last_ppr_rec.oth_quantity_to_date;
        l_OTH_ACT_COST_TO_DATE_TC_tbl(l_index)      := l_last_ppr_rec.OTH_ACT_COST_TO_DATE_TC;
        l_OTH_ACT_COST_TO_DATE_FC_tbl(l_index)      := l_last_ppr_rec.OTH_ACT_COST_TO_DATE_FC;
        l_OTH_ACT_COST_TO_DATE_PC_tbl(l_index)      := l_last_ppr_rec.OTH_ACT_COST_TO_DATE_PC;
        l_oth_act_raw_to_date_tc_tbl(l_index)       := l_last_ppr_rec.OTH_ACT_RAWCOST_TO_DATE_TC;
        l_oth_act_raw_to_date_fc_tbl(l_index)       := l_last_ppr_rec.OTH_ACT_RAWCOST_TO_DATE_FC;
        l_oth_act_raw_to_date_pc_tbl(l_index)       := l_last_ppr_rec.OTH_ACT_RAWCOST_TO_DATE_PC;

        l_oth_etc_quantity_tbl(l_index)         := l_oth_etc_quantity;
        l_oth_etc_cost_tc_tbl(l_index)          := l_oth_etc_cost_tc;
        l_oth_etc_cost_fc_tbl(l_index)          := l_oth_etc_cost_fc;
        l_oth_etc_cost_pc_tbl(l_index)          := l_oth_etc_cost_pc;
        l_oth_etc_rawcost_tc_tbl(l_index)       := l_oth_etc_rawcost_tc;
        l_oth_etc_rawcost_fc_tbl(l_index)       := l_oth_etc_rawcost_fc;
        l_oth_etc_rawcost_pc_tbl(l_index)       := l_oth_etc_rawcost_pc;

        l_PROJFUNC_COST_RATE_TYPE_tbl(l_index)      := l_last_ppr_rec.PROJFUNC_COST_RATE_TYPE;
        l_projfunc_cost_exc_rate_tbl(l_index)       := l_last_ppr_rec.PROJFUNC_COST_EXCHANGE_RATE;
        l_PROJFUNC_COST_RATE_DATE_tbl(l_index)      := l_last_ppr_rec.PROJFUNC_COST_RATE_DATE;
        l_PROJ_COST_RATE_TYPE_tbl(l_index)      := l_last_ppr_rec.PROJ_COST_RATE_TYPE;
        l_PROJ_COST_EXCHANGE_RATE_tbl(l_index)      := l_last_ppr_rec.PROJ_COST_EXCHANGE_RATE;
        l_PROJ_COST_RATE_DATE_tbl(l_index)      := l_last_ppr_rec.PROJ_COST_RATE_DATE;
        l_TXN_CURRENCY_CODE_tbl(l_index)        := l_last_ppr_rec.TXN_CURRENCY_CODE;

        -- Bug 4111107 : Now l_etc_reset_flag is not used anymore
        --l_etc_reset_flag              := 'N'; -- Bug 4227280

        -- Bug 4282618 Begin
        IF l_prog_enabled = 'N' THEN
            l_completed_percentage_tbl(l_index) := null;
            l_progress_status_code_tbl(l_index) := null;
            l_earned_value_tbl(l_index)     := null;
            l_eff_rollup_percent_comp_tbl(l_index)  := null;
            l_eff_roll_prog_stat_code_tbl(l_index)  := null;
        END IF;
        -- Bug 4282618 End
    END LOOP;

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'After plsql table is built l_index='||l_index, x_Log_Level=> 3);
    END IF;

        FORALL i IN 1..l_index
            update pa_percent_completes
        set current_flag = 'N'
            where project_id = l_project_id_tbl(i)
        and current_flag = 'Y'
        and structure_type = 'WORKPLAN'
        and object_type = l_object_type_tbl(i)
        and object_id = l_object_id_tbl(i)
        and task_id = l_task_id_tbl(i)
        and l_prog_enabled_tbl(i) = 'Y' -- Bug 4282618
        ;
    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'After first bulk update' , x_Log_Level=> 3);
    END IF;


        FORALL i IN 1..l_index
            update pa_proj_elements
        set status_code = l_task_status_code_tbl(i)
            where project_id = l_project_id_tbl(i)
        and proj_element_id = l_task_id_tbl(i)
        and l_object_type_tbl(i) = 'PA_TASKS'
        ;

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'After second bulk update' , x_Log_Level=> 3);
    END IF;

        FORALL i IN 1..l_index
        insert into pa_percent_completes(TASK_ID,
                      DATE_COMPUTED,
                      LAST_UPDATE_DATE,
                      LAST_UPDATED_BY,
                      CREATION_DATE,
                      CREATED_BY,
                      LAST_UPDATE_LOGIN,
                      COMPLETED_PERCENTAGE,
                      PROJECT_ID,
                      CURRENT_FLAG,
                      PERCENT_COMPLETE_ID,
                      object_VERSION_ID,
                      OBJECT_TYPE,
                      OBJECT_id,
                      PROGRESS_STATUS_CODE,
                      ACTUAL_START_DATE,
                      ACTUAL_FINISH_DATE,
                      ESTIMATED_START_DATE,
                      ESTIMATED_FINISH_DATE,
                      PUBLISHED_FLAG,
                      published_BY_party_ID,
                      history_flag,
                      status_code,
                      RECORD_VERSION_NUMBER,
                      structure_type,
                      description,
                      progress_comment
        ) values
             (  l_task_id_tbl(i)
                          ,l_as_of_date
                          ,sysdate
                          ,l_user_id
                          ,sysdate
                          ,l_user_id
                          ,l_login_id
                          ,l_completed_percentage_tbl(i)
                          ,l_project_id_tbl(i)
                          ,'Y'
                          ,PA_PERCENT_COMPLETES_S.nextval
                          ,l_object_version_id_tbl(i)
                          ,l_object_type_tbl(i)
                          ,l_object_id_tbl(i)
                          ,l_progress_status_code_tbl(i)
                          ,l_act_start_date_tbl(i)
                          ,l_act_finish_date_tbl(i)
                          ,l_est_start_date_tbl(i)
                          ,l_est_finish_date_tbl(i)
                          ,'Y'
                          ,l_published_by_party_id
              ,'N'
              ,l_task_status_code_tbl(i)
              ,to_number(1)
              ,'WORKPLAN'
              ,l_description(i)
              ,l_progress_comment(i)
              )
                     RETURNING PERCENT_COMPLETE_ID
                         BULK COLLECT INTO l_percent_complete_id_tbl;

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'After first bulk insert' , x_Log_Level=> 3);
    END IF;

    -- Bug 4282618 Begin
    -- The seprate delete is added after the insertion
    -- This is because of Bulk returning clause, we can not use select .. from dual ..where with bulk returning
        FOR i IN 1..l_index LOOP
        IF l_prog_enabled_tbl(i) = 'N' THEN
            DELETE pa_percent_completes
            where percent_complete_id = l_percent_complete_id_tbl(i);

            l_percent_complete_id_tbl(i):=null;
        END IF;
    END LOOP;
    -- Bug 4282618 End


    ---5212999
    if (l_upd_rollup_prog = 'N') then
        FORALL i IN 1..l_index
            update pa_progress_rollup
            set current_flag = 'N'
            where project_id = l_project_id_tbl(i)
        and current_flag = 'Y'
        and structure_version_id is null
        and structure_type = 'WORKPLAN'
        and object_type = l_object_type_tbl(i)
        and object_id = l_object_id_tbl(i)
        and proj_element_id = l_task_id_tbl(i);

    else
        FORALL i IN 1..l_index
        delete from pa_progress_rollup
        where project_id = l_project_id_tbl(i)
        and current_flag = 'Y'
        and structure_version_id is null
        and structure_type = 'WORKPLAN'
        and object_type = l_object_type_tbl(i)
        and object_id = l_object_id_tbl(i)
        and proj_element_id = l_task_id_tbl(i);
    end if;

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'After third bulk update' , x_Log_Level=> 3);
        /* For Debug Purposes, Can be removed
        FOR i IN 1..l_index LOOP
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_project_id_tbl(i)='||l_project_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_object_id_tbl(i)='||l_object_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_object_type_tbl(i)='||l_object_type_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_object_version_id_tbl(i)='||l_object_version_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_progress_status_code_tbl(i)='||l_progress_status_code_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_incr_work_quantity_tbl(i)='||l_incr_work_quantity_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_cumu_work_quantity_tbl(i)='||l_cumu_work_quantity_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eff_rollup_percent_comp_tbl(i)='||l_eff_rollup_percent_comp_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_completed_percentage_tbl(i)='||l_completed_percentage_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_est_start_date_tbl(i)='||l_est_start_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_est_finish_date_tbl(i)='||l_est_finish_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_act_start_date_tbl(i)='||l_act_start_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_act_finish_date_tbl(i)='||l_act_finish_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_est_remaining_effort_tbl(i)='||l_est_remaining_effort_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_base_per_comp_deriv_code_tbl(i)='||l_base_per_comp_deriv_code_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_base_prog_status_code_tbl(i)='||l_base_prog_status_code_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_eff_roll_prog_stat_code_tbl(i)='||l_eff_roll_prog_stat_code_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_percent_complete_id_tbl(i)='||l_percent_complete_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_task_id_tbl(i)='||l_task_id_tbl(i), x_Log_Level=> 3);
        END LOOP;
        */
    END IF;



        FORALL i IN 1..l_index
         insert into pa_progress_rollup(
                    PROGRESS_ROLLUP_ID
                   ,PROJECT_ID
                   ,OBJECT_ID
                   ,OBJECT_TYPE
                   ,AS_OF_DATE
                   ,OBJECT_VERSION_ID
                   ,LAST_UPDATE_DATE
                   ,LAST_UPDATED_BY
                   ,CREATION_DATE
                   ,CREATED_BY
                   ,PROGRESS_STATUS_CODE
                   ,LAST_UPDATE_LOGIN
                   ,INCREMENTAL_WORK_QUANTITY
                   ,CUMULATIVE_WORK_QUANTITY
                   ,EFF_ROLLUP_PERCENT_COMP
                   ,COMPLETED_PERCENTAGE
                   ,ESTIMATED_START_DATE
                   ,ESTIMATED_FINISH_DATE
                   ,ACTUAL_START_DATE
                   ,ACTUAL_FINISH_DATE
                   ,ESTIMATED_REMAINING_EFFORT
                   ,RECORD_VERSION_NUMBER
                   ,BASE_PERCENT_COMP_DERIV_CODE
                   ,BASE_PROGRESS_STATUS_CODE
                   ,EFF_ROLLUP_PROG_STAT_CODE
                   ,PERCENT_COMPLETE_ID
           ,STRUCTURE_TYPE
           ,PROJ_ELEMENT_ID
           ,PPL_ACT_EFFORT_TO_DATE
           ,EQPMT_ACT_EFFORT_TO_DATE
           ,EQPMT_ETC_EFFORT
           ,OTH_ACT_COST_TO_DATE_TC
           ,OTH_ACT_COST_TO_DATE_FC
           ,OTH_ACT_COST_TO_DATE_PC
           ,OTH_ETC_COST_TC
           ,OTH_ETC_COST_FC
           ,OTH_ETC_COST_PC
           ,PPL_ACT_COST_TO_DATE_TC
           ,PPL_ACT_COST_TO_DATE_FC
           ,PPL_ACT_COST_TO_DATE_PC
           ,PPL_ETC_COST_TC
           ,PPL_ETC_COST_FC
           ,PPL_ETC_COST_PC
           ,EQPMT_ACT_COST_TO_DATE_TC
           ,EQPMT_ACT_COST_TO_DATE_FC
           ,EQPMT_ACT_COST_TO_DATE_PC
           ,EQPMT_ETC_COST_TC
           ,EQPMT_ETC_COST_FC
           ,EQPMT_ETC_COST_PC
           ,EARNED_VALUE
           ,TASK_WT_BASIS_CODE
           ,CURRENT_FLAG
           ,PROJFUNC_COST_RATE_TYPE
           ,PROJFUNC_COST_EXCHANGE_RATE
           ,PROJFUNC_COST_RATE_DATE
           ,PROJ_COST_RATE_TYPE
           ,PROJ_COST_EXCHANGE_RATE
           ,PROJ_COST_RATE_DATE
           ,TXN_CURRENCY_CODE
           ,PROG_PA_PERIOD_NAME
           ,PROG_GL_PERIOD_NAME
                   ,OTH_QUANTITY_TO_DATE
                   ,OTH_ETC_QUANTITY
                   ,OTH_ACT_RAWCOST_TO_DATE_TC
                   ,OTH_ACT_RAWCOST_TO_DATE_FC
                   ,OTH_ACT_RAWCOST_TO_DATE_PC
                   ,OTH_ETC_RAWCOST_TC
                   ,OTH_ETC_RAWCOST_FC
                   ,OTH_ETC_RAWCOST_PC
                   ,PPL_ACT_RAWCOST_TO_DATE_TC
                   ,PPL_ACT_RAWCOST_TO_DATE_FC
                   ,PPL_ACT_RAWCOST_TO_DATE_PC
                   ,PPL_ETC_RAWCOST_TC
                   ,PPL_ETC_RAWCOST_FC
                   ,PPL_ETC_RAWCOST_PC
                   ,EQPMT_ACT_RAWCOST_TO_DATE_TC
                   ,EQPMT_ACT_RAWCOST_TO_DATE_FC
                   ,EQPMT_ACT_RAWCOST_TO_DATE_PC
                   ,EQPMT_ETC_RAWCOST_TC
                   ,EQPMT_ETC_RAWCOST_FC
                   ,EQPMT_ETC_RAWCOST_PC
                   ,BASE_PERCENT_COMPLETE -- 4604661
             ) VALUES (
                    PA_PROGRESS_ROLLUP_S.nextval
                   ,l_project_id_tbl(i)
                   ,l_object_id_tbl(i)
                   ,l_object_type_tbl(i)
                   ,l_as_of_date
                   ,l_object_version_id_tbl(i)
                   ,sysdate
                   ,l_user_id
                   ,sysdate
                   ,l_user_id
                   ,l_progress_status_code_tbl(i)
                   ,l_login_id
                   ,l_incr_work_quantity_tbl(i)
                   ,l_cumu_work_quantity_tbl(i)
                   ,l_eff_rollup_percent_comp_tbl(i)
                   ,l_completed_percentage_tbl(i)
                   ,l_est_start_date_tbl(i)
                   ,l_est_finish_date_tbl(i)
                   ,l_act_start_date_tbl(i)
                   ,l_act_finish_date_tbl(i)
                   ,l_est_remaining_effort_tbl(i)
           ,to_number(1)
                   ,l_base_per_comp_deriv_code_tbl(i)
           ,l_base_prog_status_code_tbl(i)
           ,l_eff_roll_prog_stat_code_tbl(i)
                   ,l_percent_complete_id_tbl(i)
           ,'WORKPLAN'
           ,l_task_id_tbl(i)
           ,l_ppl_act_effort_to_date_tbl(i)
           ,l_eqpmt_act_effort_to_date_tbl(i)
           ,l_eqpmt_etc_effort_tbl(i)
           ,l_oth_act_cost_to_date_tc_tbl(i)
           ,l_oth_act_cost_to_date_fc_tbl(i)
           ,l_oth_act_cost_to_date_pc_tbl(i)
           ,l_oth_etc_cost_tc_tbl(i)
           ,l_oth_etc_cost_fc_tbl(i)
           ,l_oth_etc_cost_pc_tbl(i)
           ,l_ppl_act_cost_to_date_tc_tbl(i)
           ,l_ppl_act_cost_to_date_fc_tbl(i)
           ,l_ppl_act_cost_to_date_pc_tbl(i)
           ,l_ppl_etc_cost_tc_tbl(i)
           ,l_ppl_etc_cost_fc_tbl(i)
           ,l_ppl_etc_cost_pc_tbl(i)
           ,l_eqp_act_cost_to_date_tc_tbl(i)
           ,l_eqp_act_cost_to_date_fc_tbl(i)
           ,l_eqp_act_cost_to_date_pc_tbl(i)
           ,l_eqpmt_etc_cost_tc_tbl(i)
           ,l_eqpmt_etc_cost_fc_tbl(i)
           ,l_eqpmt_etc_cost_pc_tbl(i)
           ,l_earned_value_tbl(i)
           ,l_task_weight_basis_code
           ,'Y'
                   ,l_projfunc_cost_rate_type_tbl(i)
                   ,l_projfunc_cost_exc_rate_tbl(i)
                   ,l_projfunc_cost_rate_date_tbl(i)
                   ,l_proj_cost_rate_type_tbl(i)
                   ,l_proj_cost_exchange_rate_tbl(i)
                   ,l_proj_cost_rate_date_tbl(i)
                   ,l_txn_currency_code_tbl(i)
                   ,l_prog_pa_period_name
                   ,l_prog_gl_period_name
           ,l_oth_quantity_to_date_tbl(i)
           ,l_oth_etc_quantity_tbl(i)
                   ,l_oth_act_raw_to_date_tc_tbl(i)
                   ,l_oth_act_raw_to_date_fc_tbl(i)
                   ,l_oth_act_raw_to_date_pc_tbl(i)
                   ,l_oth_etc_rawcost_tc_tbl(i)
                   ,l_oth_etc_rawcost_fc_tbl(i)
                   ,l_oth_etc_rawcost_pc_tbl(i)
                   ,l_ppl_act_raw_to_date_tc_tbl(i)
                   ,l_ppl_act_raw_to_date_fc_tbl(i)
                   ,l_ppl_act_raw_to_date_pc_tbl(i)
                   ,l_ppl_etc_rawcost_tc_tbl(i)
                   ,l_ppl_etc_rawcost_fc_tbl(i)
                   ,l_ppl_etc_rawcost_pc_tbl(i)
                   ,l_eqpmt_act_raw_to_date_tc_tbl(i)
                   ,l_eqpmt_act_raw_to_date_fc_tbl(i)
                   ,l_eqpmt_act_raw_to_date_pc_tbl(i)
                   ,l_eqpmt_etc_rawcost_tc_tbl(i)
                   ,l_eqpmt_etc_rawcost_fc_tbl(i)
                   ,l_eqpmt_etc_rawcost_pc_tbl(i)
                   ,l_base_perc_comp_tbl(i) -- 4604661
                 );

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'After second bulk insert' , x_Log_Level=> 3);
    END IF;

    -- ETC Changes End

    --reset the ETC whenever workplan gets published.
    -- This code is removed now. Now we select all progress record from published or working wp version

    -- Now l_upd_new_elem_ver_id_flag wil not be used as we are creating progress records always,
    -- irrespective whether Apply Progress id Done or not.

    IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_as_of_date='||l_as_of_date, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'l_upd_new_elem_ver_id_flag='||l_upd_new_elem_ver_id_flag, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.PUBLISH_PROGRESS', x_Msg => 'x_return_status='||x_return_status, x_Log_Level=> 3);
    END IF;

     -- 4600547 : We should only assign x_as_of_date to next cycle date only if progress records are found.
     -- otherwise it was doing unnecessary calling rollup api in process_wbs_updates and creating prog records
        IF nvl(l_prog_rec_found,'N') = 'Y' THEN
                x_as_of_date := l_as_of_date;
        ELSE
                x_as_of_date := null;
        END IF;

    x_task_weight_basis_code := l_task_weight_basis_code;
    --rtarway, BUG 3951024
    x_upd_new_elem_ver_id_flag := l_upd_new_elem_ver_id_flag;

    IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        x_return_status := 'E';
        x_msg_count := x_msg_count;
        RAISE  FND_API.G_EXC_ERROR;
    END IF;


        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;
EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to PUBLISH_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to PUBLISH_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'PUBLISH_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to PUBLISH_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'PUBLISH_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;

END PUBLISH_PROGRESS;

PROCEDURE GET_SUMMARIZED_ACTUALS(p_project_id_list IN SYSTEM.pa_num_tbl_type,
                                 p_extraction_type IN VARCHAR2,
                                 p_plan_res_level  IN VARCHAR2,
                                 p_proj_pgm_level  IN SYSTEM.pa_num_tbl_type:=SYSTEM.pa_num_tbl_type(),
                                 x_return_status     OUT NOCOPY VARCHAR2, --File.Sql.39 bug 4440895
                                 x_msg_count         OUT NOCOPY NUMBER, --File.Sql.39 bug 4440895
                                 x_msg_data          OUT NOCOPY VARCHAR2) IS --File.Sql.39 bug 4440895

l_project_id                       NUMBER;
l_object_id                        NUMBER;
l_object_version_id                NUMBER;
l_task_version_id                  NUMBER;
l_object_Type                      VARCHAR2(80);
l_base_pc_deriv_code               VARCHAR2(150);
l_task_wt_basis_code               VARCHAR2(30);
l_txn_curr_code                    VARCHAR2(30);
l_org_id                           NUMBER;
l_shared_structure                 VARCHAR2(30);
l_db_case                          VARCHAR2(1);
l_last_projelemid                  NUMBER:=0;
l_last_res_list_mem_id             NUMBER:=0;
l_new_res_list_member_id           NUMBER; -- Bug 3764224 : RLM Id Changes
l_last_object_Type                 VARCHAR2(80);
l_txn_raw_cost                     NUMBER(22,5); --start 5343956
l_txn_brdn_cost                    NUMBER(22,5);
l_txn_raw_cost_tot                 NUMBER(22,5);
l_txn_brdn_cost_tot                NUMBER(22,5); --end 5343956
l_sch_start_date                   DATE;
l_sch_end_date                     DATE;
l_asgn_sch_start_date              DATE;
l_asgn_sch_finish_date             DATE;
l_res_list_member_id               NUMBER;
l_res_assignment_id                NUMBER;
l_res_class_code                   VARCHAR2(30);
l_task_id                          NUMBER;
l_planned_eff                      NUMBER;
l_planned_cost                     NUMBER(22,5); --5343956
l_percent_comp                     NUMBER;
l_eff_rollup_pc                    NUMBER;
l_earned_val                       NUMBER;
l_rate_based_flag                  VARCHAR2(1);
l_init_prog_stat_code              VARCHAR2(150);
l_uncategorized_flag               VARCHAR2(1);
l_ppl_res_list_mem_id              NUMBER;
l_plan_type                        VARCHAR2(1);
l_plan_type_id                     NUMBER;
l_plan_version_id                  NUMBER;
l_rbs_element_id                   NUMBER;

x_txn_rate_type                    VARCHAR2(30);
x_txn_rate_date                    DATE;
x_txn_exch_rate                    NUMBER(22,5); --start 5343956
x_txn_raw_cost                     NUMBER(22,5);
x_txn_brdn_cost                    NUMBER(22,5);
x_txn_raw_cost_tot                 NUMBER(22,5);
x_txn_brdn_cost_tot                NUMBER(22,5); --end 5343956
x_projfunc_curr_code               VARCHAR2(30);
x_projfunc_cost_rate_type          VARCHAR2(30);
x_projfunc_cost_rate_date          DATE;
x_projfunc_cost_exch_rate          NUMBER(22,5);  --5343956
x_projfunc_raw_cost                NUMBER(22,5);  --5343956
x_msg_code                         VARCHAR2(80);

l_init_vars                        VARCHAR2(1);
l_ignore_rec                       VARCHAR2(1);
l_match_found                      VARCHAR2(1);
l_index                            NUMBER;
l_index1                           NUMBER;
l_index2                           NUMBER;
l_index3                           NUMBER;
l_index4                           NUMBER;
l_temp_index2                      NUMBER;
l_latest_wp_struct_ver_id          NUMBER;
l_base_struct_ver_id               NUMBER;
l_period_start_date                DATE;
l_temp_as_of_date                  DATE;
l_conv_rate_date                   DATE;
l_max_as_of_date                   DATE;
l_max_as_of_date_assign            DATE;
l_pa_period_name                   VARCHAR2(80);
l_gl_period_name                   VARCHAR2(80);
l_period_name                      VARCHAR2(80);
l_working_rec_found                VARCHAR2(1);
l_return_status                    VARCHAR2(1);
l_track_wp_cost_flag               VARCHAR2(1) := 'Y'; -- Bug 3801745
l_proj_curr_code                   VARCHAR2(15);
l_proj_func_curr_code              VARCHAR2(15);


L_ACT_COST_TO_DATE_TC              NUMBER(22,5);  --start 5343956
L_ACT_RAWCOST_TO_DATE_TC           NUMBER(22,5);
L_PPL_ACT_COST_TO_DATE_TC          NUMBER(22,5);
L_PPL_ACT_RAWCOST_TO_DATE_TC       NUMBER(22,5);
L_EQPMT_ACT_COST_TO_DATE_TC        NUMBER(22,5);
L_EQPMT_ACT_RAWCOST_TO_DATE_TC     NUMBER(22,5);
l_asgn_plan_quantity               NUMBER(22,5);
l_asgn_plan_bur_cost_tc            NUMBER(22,5);
l_asgn_plan_bur_cost_fc            NUMBER(22,5);
l_asgn_plan_bur_cost_pc            NUMBER(22,5);
l_asgn_plan_raw_cost_tc            NUMBER(22,5);
l_asgn_plan_raw_cost_fc            NUMBER(22,5);
l_asgn_plan_raw_cost_pc            NUMBER(22,5);  --end 5343956

l_no_rate_exception                Exception;
cursor projects_in_range is
   select ppa.org_id, ppa.project_currency_code, ppa.projfunc_currency_code,
          PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(ppa.project_id) shared_structure
     from pa_projects_all ppa
    where ppa.project_id = l_project_id;

-- tables to hold project_ids, latest WP ids and res list ids.
proj_ids_tbl                       SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
latest_wp_struct_ver_ids_tbl       SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
res_list_ids_tbl                   SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
proj_org_ids_tbl                   SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
proj_thru_dates_tbl                SYSTEM.pa_date_tbl_type:= SYSTEM.pa_date_tbl_type();
calendar_type_tbl                  SYSTEM.pa_varchar2_1_tbl_type:= SYSTEM.pa_varchar2_1_tbl_type();
proj_curr_code_tbl                 SYSTEM.pa_varchar2_15_tbl_type:= SYSTEM.pa_varchar2_15_tbl_type();
proj_func_curr_code_tbl            SYSTEM.pa_varchar2_15_tbl_type:= SYSTEM.pa_varchar2_15_tbl_type();
proj_pgm_level_tbl                 SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();

-- Added for bug 5464875
base_struct_ver_ids_tbl            SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
populate_in_tbl                    PJI_FM_XBS_ACCUM_UTILS.populate_in_tbl_type;

/* Begin: Fix for Bug # 5526638. */
l_act_err_flag                     SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
l_act_err_msg                      SYSTEM.pa_varchar2_240_tbl_type:= SYSTEM.pa_varchar2_240_tbl_type();
l_act_out_report                   VARCHAR2(1) := 'N';
l_err_msg                          VARCHAR2(255);
l_skip_exception                   Exception;
l_pji_wp_exception                 Exception;
skip_proj_ids_tbl                  SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
skip_latest_wp_str_ver_id_tbl      SYSTEM.pa_num_tbl_type:= SYSTEM.pa_num_tbl_type();
skip_proj_thru_dates_tbl           SYSTEM.pa_date_tbl_type:= SYSTEM.pa_date_tbl_type();
/* End: Fix for Bug # 5526638. */

cursor max_as_of_Date is
select max(date_computed) from pa_percent_completes ppc
where project_id = l_project_id
  and published_flag ='Y'
  and current_flag = 'Y'
  and object_type = 'PA_TASKS'
  and structure_type = 'WORKPLAN'
  and not exists (select '1'   --- 4871809,5503428
                    from pa_object_relationships
                   where object_Type_from = 'PA_TASKS'
                     and relationship_type = 'S'
                     and object_id_from1 = ppc.object_version_id);

cursor max_as_of_date_assign is
select max(date_computed) from pa_percent_completes
where project_id = l_project_id
  and published_flag ='Y'
  and current_flag = 'Y'
  and object_type = 'PA_ASSIGNMENTS'
  and structure_type = 'WORKPLAN';

cursor max_as_of_date_rollup is
select max(as_of_date) from pa_progress_rollup
where project_id = l_project_id
  and structure_type = 'WORKPLAN'
  and structure_version_id is null
  and current_flag = 'Y';

cursor max_as_of_date_rollup_tsk is
select max(as_of_date) from pa_progress_rollup
where project_id = l_project_id
  and object_type = 'PA_TASKS'
  and structure_type = 'WORKPLAN'
  and structure_version_id is null
  and current_flag = 'Y';

-- table for rollup records
 PROGRESS_ROLLUP_ID                       PA_PLSQL_DATATYPES.Num15TabTyp;
 PERCENT_COMPLETE_ID                      PA_PLSQL_DATATYPES.Num15TabTyp;
 PROJECT_ID                               PA_PLSQL_DATATYPES.Num15TabTyp;
 OBJECT_ID                                PA_PLSQL_DATATYPES.Num15TabTyp;
 OBJECT_TYPE                              PA_PLSQL_DATATYPES.Char30TabTyp;
 AS_OF_DATE                               PA_PLSQL_DATATYPES.DateTabTyp;
 OBJECT_VERSION_ID                        PA_PLSQL_DATATYPES.Num15TabTyp;
 LAST_UPDATE_DATE                         PA_PLSQL_DATATYPES.DateTabTyp;
 LAST_UPDATED_BY                          PA_PLSQL_DATATYPES.Num15TabTyp;
 CREATION_DATE                            PA_PLSQL_DATATYPES.DateTabTyp;
 CREATED_BY                               PA_PLSQL_DATATYPES.Num15TabTyp;
 PROGRESS_STATUS_CODE                     PA_PLSQL_DATATYPES.Char150TabTyp;
 LAST_UPDATE_LOGIN                        PA_PLSQL_DATATYPES.Num15TabTyp;
 INCREMENTAL_WORK_QUANTITY                PA_PLSQL_DATATYPES.QtyTabtyp;
 CUMULATIVE_WORK_QUANTITY                 PA_PLSQL_DATATYPES.QtyTabtyp;
 BASE_PERCENT_COMPLETE                    PA_PLSQL_DATATYPES.QtyTabtyp;
 EFF_ROLLUP_PERCENT_COMP                  PA_PLSQL_DATATYPES.QtyTabtyp;
 COMPLETED_PERCENTAGE                     PA_PLSQL_DATATYPES.QtyTabtyp;
 ESTIMATED_START_DATE                     PA_PLSQL_DATATYPES.DateTabTyp;
 ESTIMATED_FINISH_DATE                    PA_PLSQL_DATATYPES.DateTabTyp;
 ACTUAL_START_DATE                        PA_PLSQL_DATATYPES.DateTabTyp;
 ACTUAL_FINISH_DATE                       PA_PLSQL_DATATYPES.DateTabTyp;
 ESTIMATED_REMAINING_EFFORT               PA_PLSQL_DATATYPES.QtyTabtyp;
 RECORD_VERSION_NUMBER                    PA_PLSQL_DATATYPES.Num15TabTyp;
 BASE_PERCENT_COMP_DERIV_CODE             PA_PLSQL_DATATYPES.Char30TabTyp;
 BASE_PROGRESS_STATUS_CODE                PA_PLSQL_DATATYPES.Char150TabTyp;
 EFF_ROLLUP_PROG_STAT_CODE                PA_PLSQL_DATATYPES.Char150TabTyp;
 STRUCTURE_TYPE                           PA_PLSQL_DATATYPES.Char30TabTyp;
 PROJ_ELEMENT_ID                          PA_PLSQL_DATATYPES.Num15TabTyp;
 STRUCTURE_VERSION_ID                     PA_PLSQL_DATATYPES.Num15TabTyp;
 PPL_ACT_EFFORT_TO_DATE                   PA_PLSQL_DATATYPES.QtyTabtyp;
 EQPMT_ACT_EFFORT_TO_DATE                 PA_PLSQL_DATATYPES.QtyTabtyp;
 EQPMT_ETC_EFFORT                         PA_PLSQL_DATATYPES.QtyTabtyp;
 OTH_QTY                                  PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ETC_QTY                              PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_COST_TO_DATE_TC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_RAWCOST_TO_DATE_TC               PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_COST_TO_DATE_FC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_RAWCOST_TO_DATE_FC               PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_COST_TO_DATE_PC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ACT_RAWCOST_TO_DATE_PC               PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ETC_COST_TC                          PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ETC_RAWCOST_TC                       PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ETC_COST_FC                          PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ETC_RAWCOST_FC                       PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ETC_COST_PC                          PA_PLSQL_DATATYPES.AmtTabTyp;
 OTH_ETC_RAWCOST_PC                       PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_COST_TO_DATE_TC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_RAWCOST_TO_DATE_TC               PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_COST_TO_DATE_FC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_RAWCOST_TO_DATE_FC               PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_COST_TO_DATE_PC                  PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ACT_RAWCOST_TO_DATE_PC               PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ETC_COST_TC                          PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ETC_RAWCOST_TC                       PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ETC_COST_FC                          PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ETC_RAWCOST_FC                       PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ETC_COST_PC                          PA_PLSQL_DATATYPES.AmtTabTyp;
 PPL_ETC_RAWCOST_PC                       PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_COST_TO_DATE_TC                PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_RAWCOST_TO_DATE_TC             PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_COST_TO_DATE_FC                PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_RAWCOST_TO_DATE_FC             PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_COST_TO_DATE_PC                PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ACT_RAWCOST_TO_DATE_PC             PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ETC_COST_TC                        PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ETC_RAWCOST_TC                     PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ETC_COST_FC                        PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ETC_RAWCOST_FC                     PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ETC_COST_PC                        PA_PLSQL_DATATYPES.AmtTabTyp;
 EQPMT_ETC_RAWCOST_PC                     PA_PLSQL_DATATYPES.AmtTabTyp;
 EARNED_VALUE                             PA_PLSQL_DATATYPES.QtyTabtyp;
 TASK_WT_BASIS_CODE                       PA_PLSQL_DATATYPES.Char30TabTyp;
 SUBPRJ_PPL_ACT_EFFORT                    PA_PLSQL_DATATYPES.QtyTabtyp;
 SUBPRJ_EQPMT_ACT_EFFORT                  PA_PLSQL_DATATYPES.QtyTabtyp;
 SUBPRJ_PPL_ETC_EFFORT                    PA_PLSQL_DATATYPES.QtyTabtyp;
 SUBPRJ_EQPMT_ETC_EFFORT                  PA_PLSQL_DATATYPES.QtyTabtyp;
 SUBPRJ_OTH_ACT_COST_TO_DATE_TC           PA_PLSQL_DATATYPES.AmtTabTyp;
 SPJ_OTH_ACT_RAWCOST_TO_DATE_TC           PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_OTH_ACT_COST_TO_DATE_FC           PA_PLSQL_DATATYPES.AmtTabTyp;
 SPJ_OTH_ACT_RAWCOST_TO_DATE_FC           PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_OTH_ACT_COST_TO_DATE_PC           PA_PLSQL_DATATYPES.AmtTabTyp;
 SPJ_OTH_ACT_RAWCOST_TO_DATE_PC           PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ACT_COST_TC                   PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ACT_RAWCOST_TC                PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ACT_COST_FC                   PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ACT_RAWCOST_FC                PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ACT_COST_PC                   PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ACT_RAWCOST_PC                PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ACT_COST_TC                 PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ACT_RAWCOST_TC              PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ACT_COST_FC                 PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ACT_RAWCOST_FC              PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ACT_COST_PC                 PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ACT_RAWCOST_PC              PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_OTH_ETC_COST_TC                   PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_OTH_ETC_RAWCOST_TC                PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_OTH_ETC_COST_FC                   PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_OTH_ETC_RAWCOST_FC                PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_OTH_ETC_COST_PC                   PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_OTH_ETC_RAWCOST_PC                PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ETC_COST_TC                   PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ETC_RAWCOST_TC                PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ETC_COST_PC                   PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ETC_RAWCOST_PC                PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ETC_COST_FC                   PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_PPL_ETC_RAWCOST_FC                PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ETC_COST_TC                 PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ETC_RAWCOST_TC              PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ETC_COST_FC                 PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ETC_RAWCOST_FC              PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ETC_COST_PC                 PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EQPMT_ETC_RAWCOST_PC              PA_PLSQL_DATATYPES.AmtTabTyp;
 SUBPRJ_EARNED_VALUE                      PA_PLSQL_DATATYPES.QtyTabtyp;
 CURRENT_FLAG                             PA_PLSQL_DATATYPES.Char1TabTyp;
 PROJFUNC_COST_RATE_TYPE                  PA_PLSQL_DATATYPES.Char30TabTyp;
 PROJFUNC_COST_EXCHANGE_RATE              PA_PLSQL_DATATYPES.AmtTabTyp;
 PROJFUNC_COST_RATE_DATE                  PA_PLSQL_DATATYPES.DateTabTyp;
 PROJ_COST_RATE_TYPE                      PA_PLSQL_DATATYPES.Char30TabTyp;
 PROJ_COST_EXCHANGE_RATE                  PA_PLSQL_DATATYPES.AmtTabTyp;
 PROJ_COST_RATE_DATE                      PA_PLSQL_DATATYPES.DateTabTyp;
 TXN_CURRENCY_CODE                        PA_PLSQL_DATATYPES.Char15TabTyp;
 PROG_PA_PERIOD_NAME                      PA_PLSQL_DATATYPES.Char30TabTyp;
 PROG_GL_PERIOD_NAME                      PA_PLSQL_DATATYPES.Char30TabTyp;

 u_progress_rollup_id                     PA_PLSQL_DATATYPES.Num15TabTyp;
 u_object_version_id                      PA_PLSQL_DATATYPES.Num15TabTyp;
 u_completed_percentage                   PA_PLSQL_DATATYPES.QtyTabtyp;
 u_eff_rollup_percent_comp                PA_PLSQL_DATATYPES.QtyTabtyp;
 u_earned_val                             PA_PLSQL_DATATYPES.QtyTabtyp;
 u_actual_finish_date                     PA_PLSQL_DATATYPES.DateTabTyp;
 u_oth_qty                                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_act_cost_to_date_tc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_act_rawcost_to_date_tc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_act_cost_to_date_pc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_act_rawcost_to_date_pc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_act_cost_to_date_fc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_act_rawcost_to_date_fc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_etc_qty                            PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_etc_cost_to_date_tc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_etc_rawcost_to_date_tc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_etc_cost_to_date_pc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_etc_rawcost_to_date_pc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_etc_cost_to_date_fc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_oth_etc_rawcost_to_date_fc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_act_effort_to_date                 PA_PLSQL_DATATYPES.QtyTabtyp;
 u_ppl_act_cost_to_date_tc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_act_rawcost_to_date_tc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_act_cost_to_date_pc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_act_rawcost_to_date_pc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_act_cost_to_date_fc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_act_rawcost_to_date_fc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_etc_effort_to_date                 PA_PLSQL_DATATYPES.QtyTabtyp;
 u_ppl_etc_cost_to_date_tc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_etc_rawcost_to_date_tc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_etc_cost_to_date_pc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_etc_rawcost_to_date_pc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_etc_cost_to_date_fc                PA_PLSQL_DATATYPES.AmtTabTyp;
 u_ppl_etc_rawcost_to_date_fc             PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_act_effort_to_date               PA_PLSQL_DATATYPES.QtyTabtyp;
 u_eqpmt_act_cost_to_date_tc              PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_act_rawcost_to_date_tc           PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_act_cost_to_date_pc              PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_act_rawcost_to_date_pc           PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_act_cost_to_date_fc              PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_act_rawcost_to_date_fc           PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_etc_effort_to_date               PA_PLSQL_DATATYPES.QtyTabtyp;
 u_eqpmt_etc_cost_to_date_tc              PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_etc_rawcost_to_date_tc           PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_etc_cost_to_date_pc              PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_etc_rawcost_to_date_pc           PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_etc_cost_to_date_fc              PA_PLSQL_DATATYPES.AmtTabTyp;
 u_eqpmt_etc_rawcost_to_date_fc           PA_PLSQL_DATATYPES.AmtTabTyp;

 u1_progress_rollup_id                    PA_PLSQL_DATATYPES.Num15TabTyp;

 ETC_PROJECT_ID                           PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PROJECT_ORG_ID                       PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PROJECT_ELEMENT_ID                   PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_STRUCT_VER_ID                        PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PERIOD_NAME                          PA_PLSQL_DATATYPES.Char80TabTyp;
 ETC_CALENDAR_TYPE                        PA_PLSQL_DATATYPES.Char1TabTyp;
 ETC_START_DATE                           PA_PLSQL_DATATYPES.DateTabTyp;
 ETC_END_DATE                             PA_PLSQL_DATATYPES.DateTabTyp;
 ETC_RBS_ELEMENT_ID                       PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_RBS_VERSION_ID                       PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PLAN_VERSION_ID                      PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PLAN_TYPE_ID                         PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_WP_VERSION_FLAG                      PA_PLSQL_DATATYPES.Char1TabTyp;
 ETC_ROLLUP_TYPE                          PA_PLSQL_DATATYPES.Char1TabTyp;
 ETC_TXN_CURRENCY_CODE                    PA_PLSQL_DATATYPES.Char30TabTyp;
 ETC_QUANTITY                             PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_TXN_BURDENED_COST                    PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_PRJ_BURDENED_COST                    PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_PFC_BURDENED_COST                    PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_TXN_RAW_COST                         PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_PRJ_RAW_COST                         PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_PFC_RAW_COST                         PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_RESOURCE_CLASS_CODE                  PA_PLSQL_DATATYPES.Char30TabTyp;
 ETC_RATE_BASED_FLAG                      PA_PLSQL_DATATYPES.Char1TabTyp;
 ETC_PRJ_CURRENCY_CODE                    PA_PLSQL_DATATYPES.Char30TabTyp;
 ETC_PFC_CURRENCY_CODE                    PA_PLSQL_DATATYPES.Char30TabTyp;

-- BEGIN: Changes to take care of period flagged rows from the pji temporary table: pji_fm_xbs_accum_tmp1.

 t_PROJECT_ID                               PA_PLSQL_DATATYPES.Num15TabTyp;
 t_STRUCTURE_VERSION_ID                     PA_PLSQL_DATATYPES.Num15TabTyp;
 t_TASK_ID                                  PA_PLSQL_DATATYPES.Num15TabTyp;
 t_RESOURCE_ASSIGNMENT_ID                   PA_PLSQL_DATATYPES.Num15TabTyp;
 t_AS_OF_DATE                               PA_PLSQL_DATATYPES.DateTabTyp;
 t_ACTUAL_COST                              PA_PLSQL_DATATYPES.AmtTabTyp;
 t_ACTUAL_EFFORT                            PA_PLSQL_DATATYPES.QtyTabTyp;
 t_PERIOD_NAME                              PA_PLSQL_DATATYPES.Char30TabTyp;
 t_TXN_CURRENCY_CODE                        PA_PLSQL_DATATYPES.Char15TabTyp;
 t_ACTUAL_COST_PC                           PA_PLSQL_DATATYPES.AmtTabTyp;
 t_ACTUAL_COST_FC                           PA_PLSQL_DATATYPES.AmtTabTyp;
 t_ACTUAL_RAWCOST                           PA_PLSQL_DATATYPES.AmtTabTyp;
 t_ACTUAL_RAWCOST_PC                        PA_PLSQL_DATATYPES.AmtTabTyp;
 t_ACTUAL_RAWCOST_FC                        PA_PLSQL_DATATYPES.AmtTabTyp;
 t_HIDDEN_RES_ASSGN_ID                      PA_PLSQL_DATATYPES.Num15TabTyp;
 t_RESOURCE_LIST_MEMBER_ID                  PA_PLSQL_DATATYPES.Num15TabTyp;
 t_CURRENT_FLAG                             PA_PLSQL_DATATYPES.Char1TabTyp;
 t_OBJECT_TYPE                              PA_PLSQL_DATATYPES.Char30TabTyp;
 t_PERCENT_COMPLETE_ID                      PA_PLSQL_DATATYPES.Num15TabTyp;
 t_track_wp_cost_flag                       PA_PLSQL_DATATYPES.Char1TabTyp;
 t_min_start_date                           PA_PLSQL_DATATYPES.DateTabTyp;
 t_max_end_date                             PA_PLSQL_DATATYPES.DateTabTyp;

 l_t_index                           NUMBER:=0;
 l_index_etc                         NUMBER:=0;
 l_t_temp_index                      NUMBER:=0;
 i                   NUMBER;
 l_period_flag               VARCHAR2(1);
 l_last_period_flag                  VARCHAR2(1);
 l_extraction_type                   VARCHAR2(30);

-- END: Changes to take care of period flagged rows from the pji temporary table: pji_fm_xbs_accum_tmp1.

-- cursor to get rollup record for as of date
cursor rollup_rec_asofdate is
select PROGRESS_ROLLUP_ID,
       PERCENT_COMPLETE_ID,
       PROJECT_ID,
       OBJECT_ID,
       OBJECT_TYPE,
       AS_OF_DATE,
       OBJECT_VERSION_ID,
       LAST_UPDATE_DATE,
       LAST_UPDATED_BY,
       CREATION_DATE,
       CREATED_BY,
       PROGRESS_STATUS_CODE,
       LAST_UPDATE_LOGIN,
       INCREMENTAL_WORK_QUANTITY,
       CUMULATIVE_WORK_QUANTITY,
       BASE_PERCENT_COMPLETE,
       EFF_ROLLUP_PERCENT_COMP,
       COMPLETED_PERCENTAGE,
       ESTIMATED_START_DATE,
       ESTIMATED_FINISH_DATE,
       ACTUAL_START_DATE,
       ACTUAL_FINISH_DATE,
       ESTIMATED_REMAINING_EFFORT,
       RECORD_VERSION_NUMBER,
       BASE_PERCENT_COMP_DERIV_CODE,
       BASE_PROGRESS_STATUS_CODE,
       EFF_ROLLUP_PROG_STAT_CODE,
       STRUCTURE_TYPE,
       PROJ_ELEMENT_ID,
       STRUCTURE_VERSION_ID,
       PPL_ACT_EFFORT_TO_DATE,
       EQPMT_ACT_EFFORT_TO_DATE,
       EQPMT_ETC_EFFORT,
       OTH_ACT_COST_TO_DATE_TC,
       OTH_ACT_RAWCOST_TO_DATE_TC,
       OTH_ACT_COST_TO_DATE_FC,
       OTH_ACT_RAWCOST_TO_DATE_FC,
       OTH_ACT_COST_TO_DATE_PC,
       OTH_ACT_RAWCOST_TO_DATE_PC,
       OTH_ETC_COST_TC,
       OTH_ETC_RAWCOST_TC,
       OTH_ETC_COST_FC,
       OTH_ETC_RAWCOST_FC,
       OTH_ETC_COST_PC,
       OTH_ETC_RAWCOST_PC,
       PPL_ACT_COST_TO_DATE_TC,
       PPL_ACT_RAWCOST_TO_DATE_TC,
       PPL_ACT_COST_TO_DATE_FC,
       PPL_ACT_RAWCOST_TO_DATE_FC,
       PPL_ACT_COST_TO_DATE_PC,
       PPL_ACT_RAWCOST_TO_DATE_PC,
       PPL_ETC_COST_TC,
       PPL_ETC_RAWCOST_TC,
       PPL_ETC_COST_FC,
       PPL_ETC_RAWCOST_FC,
       PPL_ETC_COST_PC,
       PPL_ETC_RAWCOST_PC,
       EQPMT_ACT_COST_TO_DATE_TC,
       EQPMT_ACT_RAWCOST_TO_DATE_TC,
       EQPMT_ACT_COST_TO_DATE_FC,
       EQPMT_ACT_RAWCOST_TO_DATE_FC,
       EQPMT_ACT_COST_TO_DATE_PC,
       EQPMT_ACT_RAWCOST_TO_DATE_PC,
       EQPMT_ETC_COST_TC,
       EQPMT_ETC_RAWCOST_TC,
       EQPMT_ETC_COST_FC,
       EQPMT_ETC_RAWCOST_FC,
       EQPMT_ETC_COST_PC,
       EQPMT_ETC_RAWCOST_PC,
       EARNED_VALUE,
       TASK_WT_BASIS_CODE,
       SUBPRJ_PPL_ACT_EFFORT,
       SUBPRJ_EQPMT_ACT_EFFORT,
       SUBPRJ_PPL_ETC_EFFORT,
       SUBPRJ_EQPMT_ETC_EFFORT,
       SUBPRJ_OTH_ACT_COST_TO_DATE_TC,
       SPJ_OTH_ACT_RAWCOST_TO_DATE_TC,
       SUBPRJ_OTH_ACT_COST_TO_DATE_FC,
       SPJ_OTH_ACT_RAWCOST_TO_DATE_FC,
       SUBPRJ_OTH_ACT_COST_TO_DATE_PC,
       SPJ_OTH_ACT_RAWCOST_TO_DATE_PC,
       SUBPRJ_PPL_ACT_COST_TC,
       SUBPRJ_PPL_ACT_RAWCOST_TC,
       SUBPRJ_PPL_ACT_COST_FC,
       SUBPRJ_PPL_ACT_RAWCOST_FC,
       SUBPRJ_PPL_ACT_COST_PC,
       SUBPRJ_PPL_ACT_RAWCOST_PC,
       SUBPRJ_EQPMT_ACT_COST_TC,
       SUBPRJ_EQPMT_ACT_RAWCOST_TC,
       SUBPRJ_EQPMT_ACT_COST_FC,
       SUBPRJ_EQPMT_ACT_RAWCOST_FC,
       SUBPRJ_EQPMT_ACT_COST_PC,
       SUBPRJ_EQPMT_ACT_RAWCOST_PC,
       SUBPRJ_OTH_ETC_COST_TC,
       SUBPRJ_OTH_ETC_RAWCOST_TC,
       SUBPRJ_OTH_ETC_COST_FC,
       SUBPRJ_OTH_ETC_RAWCOST_FC,
       SUBPRJ_OTH_ETC_COST_PC,
       SUBPRJ_OTH_ETC_RAWCOST_PC,
       SUBPRJ_PPL_ETC_COST_TC,
       SUBPRJ_PPL_ETC_RAWCOST_TC,
       SUBPRJ_PPL_ETC_COST_FC,
       SUBPRJ_PPL_ETC_RAWCOST_FC,
       SUBPRJ_PPL_ETC_COST_PC,
       SUBPRJ_PPL_ETC_RAWCOST_PC,
       SUBPRJ_EQPMT_ETC_COST_TC,
       SUBPRJ_EQPMT_ETC_RAWCOST_TC,
       SUBPRJ_EQPMT_ETC_COST_FC,
       SUBPRJ_EQPMT_ETC_RAWCOST_FC,
       SUBPRJ_EQPMT_ETC_COST_PC,
       SUBPRJ_EQPMT_ETC_RAWCOST_PC,
       SUBPRJ_EARNED_VALUE,
       CURRENT_FLAG,
       PROJFUNC_COST_RATE_TYPE,
       PROJFUNC_COST_EXCHANGE_RATE,
       PROJFUNC_COST_RATE_DATE,
       PROJ_COST_RATE_TYPE,
       PROJ_COST_EXCHANGE_RATE,
       PROJ_COST_RATE_DATE,
       TXN_CURRENCY_CODE,
       PROG_PA_PERIOD_NAME,
       PROG_GL_PERIOD_NAME,
       OTH_QUANTITY_TO_DATE,
       OTH_ETC_QUANTITY
  from pa_progress_rollup
 where  project_id = l_project_id
     and object_id = l_object_id
     and object_Type = l_object_type
     and structure_type = 'WORKPLAN'
     and structure_version_id is null
     and proj_element_id = l_task_id
     AND current_flag <> 'W'   -- Bug 3879461
     and trunc(as_of_date) = (select max(trunc(as_of_Date))
                                from pa_progress_rollup
                               where project_id = l_project_id
                                 and object_id = l_object_id
                                 and object_Type = l_object_type
                                 and structure_type = 'WORKPLAN'
                                 and structure_version_id is null
                                 and proj_element_id = l_task_id
                                 AND current_flag <> 'W'   -- Bug 3879461
                                 and trunc(as_of_Date) <= l_temp_as_of_date);

l_rollup_rec_asofdate     rollup_rec_asofdate%rowtype;

-- cursor to get working rollup record for as of date
cursor w_rollup_rec_asofdate is
select PROGRESS_ROLLUP_ID,
       PERCENT_COMPLETE_ID,
       PROJECT_ID,
       OBJECT_ID,
       OBJECT_TYPE,
       AS_OF_DATE,
       OBJECT_VERSION_ID,
       LAST_UPDATE_DATE,
       LAST_UPDATED_BY,
       CREATION_DATE,
       CREATED_BY,
       PROGRESS_STATUS_CODE,
       LAST_UPDATE_LOGIN,
       INCREMENTAL_WORK_QUANTITY,
       CUMULATIVE_WORK_QUANTITY,
       BASE_PERCENT_COMPLETE,
       EFF_ROLLUP_PERCENT_COMP,
       COMPLETED_PERCENTAGE,
       ESTIMATED_START_DATE,
       ESTIMATED_FINISH_DATE,
       ACTUAL_START_DATE,
       ACTUAL_FINISH_DATE,
       ESTIMATED_REMAINING_EFFORT,
       RECORD_VERSION_NUMBER,
       BASE_PERCENT_COMP_DERIV_CODE,
       BASE_PROGRESS_STATUS_CODE,
       EFF_ROLLUP_PROG_STAT_CODE,
       STRUCTURE_TYPE,
       PROJ_ELEMENT_ID,
       STRUCTURE_VERSION_ID,
       PPL_ACT_EFFORT_TO_DATE,
       EQPMT_ACT_EFFORT_TO_DATE,
       EQPMT_ETC_EFFORT,
       OTH_ACT_COST_TO_DATE_TC,
       OTH_ACT_RAWCOST_TO_DATE_TC,
       OTH_ACT_COST_TO_DATE_FC,
       OTH_ACT_RAWCOST_TO_DATE_FC,
       OTH_ACT_COST_TO_DATE_PC,
       OTH_ACT_RAWCOST_TO_DATE_PC,
       OTH_ETC_COST_TC,
       OTH_ETC_RAWCOST_TC,
       OTH_ETC_COST_FC,
       OTH_ETC_RAWCOST_FC,
       OTH_ETC_COST_PC,
       OTH_ETC_RAWCOST_PC,
       PPL_ACT_COST_TO_DATE_TC,
       PPL_ACT_RAWCOST_TO_DATE_TC,
       PPL_ACT_COST_TO_DATE_FC,
       PPL_ACT_RAWCOST_TO_DATE_FC,
       PPL_ACT_COST_TO_DATE_PC,
       PPL_ACT_RAWCOST_TO_DATE_PC,
       PPL_ETC_COST_TC,
       PPL_ETC_RAWCOST_TC,
       PPL_ETC_COST_FC,
       PPL_ETC_RAWCOST_FC,
       PPL_ETC_COST_PC,
       PPL_ETC_RAWCOST_PC,
       EQPMT_ACT_COST_TO_DATE_TC,
       EQPMT_ACT_RAWCOST_TO_DATE_TC,
       EQPMT_ACT_COST_TO_DATE_FC,
       EQPMT_ACT_RAWCOST_TO_DATE_FC,
       EQPMT_ACT_COST_TO_DATE_PC,
       EQPMT_ACT_RAWCOST_TO_DATE_PC,
       EQPMT_ETC_COST_TC,
       EQPMT_ETC_RAWCOST_TC,
       EQPMT_ETC_COST_FC,
       EQPMT_ETC_RAWCOST_FC,
       EQPMT_ETC_COST_PC,
       EQPMT_ETC_RAWCOST_PC,
       EARNED_VALUE,
       TASK_WT_BASIS_CODE,
       SUBPRJ_PPL_ACT_EFFORT,
       SUBPRJ_EQPMT_ACT_EFFORT,
       SUBPRJ_PPL_ETC_EFFORT,
       SUBPRJ_EQPMT_ETC_EFFORT,
       SUBPRJ_OTH_ACT_COST_TO_DATE_TC,
       SPJ_OTH_ACT_RAWCOST_TO_DATE_TC,
       SUBPRJ_OTH_ACT_COST_TO_DATE_FC,
       SPJ_OTH_ACT_RAWCOST_TO_DATE_FC,
       SUBPRJ_OTH_ACT_COST_TO_DATE_PC,
       SPJ_OTH_ACT_RAWCOST_TO_DATE_PC,
       SUBPRJ_PPL_ACT_COST_TC,
       SUBPRJ_PPL_ACT_RAWCOST_TC,
       SUBPRJ_PPL_ACT_COST_FC,
       SUBPRJ_PPL_ACT_RAWCOST_FC,
       SUBPRJ_PPL_ACT_COST_PC,
       SUBPRJ_PPL_ACT_RAWCOST_PC,
       SUBPRJ_EQPMT_ACT_COST_TC,
       SUBPRJ_EQPMT_ACT_RAWCOST_TC,
       SUBPRJ_EQPMT_ACT_COST_FC,
       SUBPRJ_EQPMT_ACT_RAWCOST_FC,
       SUBPRJ_EQPMT_ACT_COST_PC,
       SUBPRJ_EQPMT_ACT_RAWCOST_PC,
       SUBPRJ_OTH_ETC_COST_TC,
       SUBPRJ_OTH_ETC_RAWCOST_TC,
       SUBPRJ_OTH_ETC_COST_FC,
       SUBPRJ_OTH_ETC_RAWCOST_FC,
       SUBPRJ_OTH_ETC_COST_PC,
       SUBPRJ_OTH_ETC_RAWCOST_PC,
       SUBPRJ_PPL_ETC_COST_TC,
       SUBPRJ_PPL_ETC_RAWCOST_TC,
       SUBPRJ_PPL_ETC_COST_FC,
       SUBPRJ_PPL_ETC_RAWCOST_FC,
       SUBPRJ_PPL_ETC_COST_PC,
       SUBPRJ_PPL_ETC_RAWCOST_PC,
       SUBPRJ_EQPMT_ETC_COST_TC,
       SUBPRJ_EQPMT_ETC_RAWCOST_TC,
       SUBPRJ_EQPMT_ETC_COST_FC,
       SUBPRJ_EQPMT_ETC_RAWCOST_FC,
       SUBPRJ_EQPMT_ETC_COST_PC,
       SUBPRJ_EQPMT_ETC_RAWCOST_PC,
       SUBPRJ_EARNED_VALUE,
       CURRENT_FLAG,
       PROJFUNC_COST_RATE_TYPE,
       PROJFUNC_COST_EXCHANGE_RATE,
       PROJFUNC_COST_RATE_DATE,
       PROJ_COST_RATE_TYPE,
       PROJ_COST_EXCHANGE_RATE,
       PROJ_COST_RATE_DATE,
       TXN_CURRENCY_CODE,
       PROG_PA_PERIOD_NAME,
       PROG_GL_PERIOD_NAME,
       OTH_QUANTITY_TO_DATE,
       OTH_ETC_QUANTITY
  from pa_progress_rollup
 where  project_id = l_project_id
     and object_id = l_object_id
     and object_Type = l_object_type
     and structure_type = 'WORKPLAN'
     and structure_version_id is null
     and proj_element_id = l_task_id
     AND current_flag = 'W';   -- Bug 3879461

l_w_rollup_rec_asofdate     w_rollup_rec_asofdate%rowtype;

-- cursor to get rollup records after as of date
cursor future_rollup_recs is
select PROGRESS_ROLLUP_ID,
       PERCENT_COMPLETE_ID,
       PROJECT_ID,
       OBJECT_ID,
       OBJECT_TYPE,
       AS_OF_DATE,
       OBJECT_VERSION_ID,
       LAST_UPDATE_DATE,
       LAST_UPDATED_BY,
       CREATION_DATE,
       CREATED_BY,
       PROGRESS_STATUS_CODE,
       LAST_UPDATE_LOGIN,
       INCREMENTAL_WORK_QUANTITY,
       CUMULATIVE_WORK_QUANTITY,
       BASE_PERCENT_COMPLETE,
       EFF_ROLLUP_PERCENT_COMP,
       COMPLETED_PERCENTAGE,
       ESTIMATED_START_DATE,
       ESTIMATED_FINISH_DATE,
       ACTUAL_START_DATE,
       ACTUAL_FINISH_DATE,
       ESTIMATED_REMAINING_EFFORT,
       RECORD_VERSION_NUMBER,
       BASE_PERCENT_COMP_DERIV_CODE,
       BASE_PROGRESS_STATUS_CODE,
       EFF_ROLLUP_PROG_STAT_CODE,
       STRUCTURE_TYPE,
       PROJ_ELEMENT_ID,
       STRUCTURE_VERSION_ID,
       PPL_ACT_EFFORT_TO_DATE,
       EQPMT_ACT_EFFORT_TO_DATE,
       EQPMT_ETC_EFFORT,
       OTH_ACT_COST_TO_DATE_TC,
       OTH_ACT_RAWCOST_TO_DATE_TC,
       OTH_ACT_COST_TO_DATE_FC,
       OTH_ACT_RAWCOST_TO_DATE_FC,
       OTH_ACT_COST_TO_DATE_PC,
       OTH_ACT_RAWCOST_TO_DATE_PC,
       OTH_ETC_COST_TC,
       OTH_ETC_RAWCOST_TC,
       OTH_ETC_COST_FC,
       OTH_ETC_RAWCOST_FC,
       OTH_ETC_COST_PC,
       OTH_ETC_RAWCOST_PC,
       PPL_ACT_COST_TO_DATE_TC,
       PPL_ACT_RAWCOST_TO_DATE_TC,
       PPL_ACT_COST_TO_DATE_FC,
       PPL_ACT_RAWCOST_TO_DATE_FC,
       PPL_ACT_COST_TO_DATE_PC,
       PPL_ACT_RAWCOST_TO_DATE_PC,
       PPL_ETC_COST_TC,
       PPL_ETC_RAWCOST_TC,
       PPL_ETC_COST_FC,
       PPL_ETC_RAWCOST_FC,
       PPL_ETC_COST_PC,
       PPL_ETC_RAWCOST_PC,
       EQPMT_ACT_COST_TO_DATE_TC,
       EQPMT_ACT_RAWCOST_TO_DATE_TC,
       EQPMT_ACT_COST_TO_DATE_FC,
       EQPMT_ACT_RAWCOST_TO_DATE_FC,
       EQPMT_ACT_COST_TO_DATE_PC,
       EQPMT_ACT_RAWCOST_TO_DATE_PC,
       EQPMT_ETC_COST_TC,
       EQPMT_ETC_RAWCOST_TC,
       EQPMT_ETC_COST_FC,
       EQPMT_ETC_RAWCOST_FC,
       EQPMT_ETC_COST_PC,
       EQPMT_ETC_RAWCOST_PC,
       EARNED_VALUE,
       TASK_WT_BASIS_CODE,
       SUBPRJ_PPL_ACT_EFFORT,
       SUBPRJ_EQPMT_ACT_EFFORT,
       SUBPRJ_PPL_ETC_EFFORT,
       SUBPRJ_EQPMT_ETC_EFFORT,
       SUBPRJ_OTH_ACT_COST_TO_DATE_TC,
       SPJ_OTH_ACT_RAWCOST_TO_DATE_TC,
       SUBPRJ_OTH_ACT_COST_TO_DATE_FC,
       SPJ_OTH_ACT_RAWCOST_TO_DATE_FC,
       SUBPRJ_OTH_ACT_COST_TO_DATE_PC,
       SPJ_OTH_ACT_RAWCOST_TO_DATE_PC,
       SUBPRJ_PPL_ACT_COST_TC,
       SUBPRJ_PPL_ACT_RAWCOST_TC,
       SUBPRJ_PPL_ACT_COST_FC,
       SUBPRJ_PPL_ACT_RAWCOST_FC,
       SUBPRJ_PPL_ACT_COST_PC,
       SUBPRJ_PPL_ACT_RAWCOST_PC,
       SUBPRJ_EQPMT_ACT_COST_TC,
       SUBPRJ_EQPMT_ACT_RAWCOST_TC,
       SUBPRJ_EQPMT_ACT_COST_FC,
       SUBPRJ_EQPMT_ACT_RAWCOST_FC,
       SUBPRJ_EQPMT_ACT_COST_PC,
       SUBPRJ_EQPMT_ACT_RAWCOST_PC,
       SUBPRJ_OTH_ETC_COST_TC,
       SUBPRJ_OTH_ETC_RAWCOST_TC,
       SUBPRJ_OTH_ETC_COST_FC,
       SUBPRJ_OTH_ETC_RAWCOST_FC,
       SUBPRJ_OTH_ETC_COST_PC,
       SUBPRJ_OTH_ETC_RAWCOST_PC,
       SUBPRJ_PPL_ETC_COST_TC,
       SUBPRJ_PPL_ETC_RAWCOST_TC,
       SUBPRJ_PPL_ETC_COST_FC,
       SUBPRJ_PPL_ETC_RAWCOST_FC,
       SUBPRJ_PPL_ETC_COST_PC,
       SUBPRJ_PPL_ETC_RAWCOST_PC,
       SUBPRJ_EQPMT_ETC_COST_TC,
       SUBPRJ_EQPMT_ETC_RAWCOST_TC,
       SUBPRJ_EQPMT_ETC_COST_FC,
       SUBPRJ_EQPMT_ETC_RAWCOST_FC,
       SUBPRJ_EQPMT_ETC_COST_PC,
       SUBPRJ_EQPMT_ETC_RAWCOST_PC,
       SUBPRJ_EARNED_VALUE,
       CURRENT_FLAG,
       PROJFUNC_COST_RATE_TYPE,
       PROJFUNC_COST_EXCHANGE_RATE,
       PROJFUNC_COST_RATE_DATE,
       PROJ_COST_RATE_TYPE,
       PROJ_COST_EXCHANGE_RATE,
       PROJ_COST_RATE_DATE,
       TXN_CURRENCY_CODE,
       PROG_PA_PERIOD_NAME,
       PROG_GL_PERIOD_NAME,
       OTH_QUANTITY_TO_DATE,
       OTH_ETC_QUANTITY
  from pa_progress_rollup
 where project_id = l_project_id
   and object_id = l_object_id
   and object_type = l_object_type
   and structure_type = 'WORKPLAN'
   and structure_version_id is null
   and proj_element_id = l_task_id
   and as_of_Date > l_temp_as_of_date;

l_future_rollup_recs     future_rollup_recs%rowtype;

-- cursor to get all assignment records for that as of date
cursor all_assignments_asofdate is
select *
  from pa_progress_rollup
 where project_id = l_project_id
   and object_type = 'PA_ASSIGNMENTS'
   and structure_version_id is null
   and structure_Type = 'WORKPLAN'
   --- and nvl(ppl_act_effort_to_date,0) + nvl(eqpmt_act_effort_to_date,0) + nvl(oth_quantity_to_date,0) > 0
   AND current_flag <> 'W'   -- Bug 3879461
   and as_of_date = l_temp_as_of_Date;

-- cursor to get all assignment records for the previous as of date
cursor all_assign_prev_asofdate is
select *
  from pa_progress_rollup ppr
 where ppr.project_id = l_project_id
   and ppr.object_type = 'PA_ASSIGNMENTS'
   and ppr.structure_version_id is null
   and ppr.structure_Type = 'WORKPLAN'
   AND current_flag <> 'W'   -- Bug 3879461
   and ppr.as_of_date = (select max(as_of_date)
                         from pa_progress_rollup ppr1
                        where ppr1.project_id = l_project_id
                          and ppr1.object_type = 'PA_ASSIGNMENTS'
                          and ppr1.object_id = ppr.object_id
                          and ppr1.proj_element_id = ppr.proj_element_id
                          and ppr1.structure_version_id is null
                          and ppr1.structure_Type = 'WORKPLAN'
                          AND current_flag <> 'W'   -- Bug 3879461
                          and ppr1.as_of_date < l_temp_as_of_Date
                          and not exists (select 1  ---4871809 performance bug
                                          from pa_progress_rollup ppr2
                                         where ppr2.project_id = l_project_id
                                           and ppr2.object_type = 'PA_ASSIGNMENTS'
                                           and ppr2.object_id = ppr.object_id
                                           and ppr2.proj_element_id = ppr.proj_element_id
                                           and ppr2.structure_version_id is null
                                           and ppr2.structure_Type = 'WORKPLAN'
                                           AND current_flag <> 'W'   -- Bug 3879461
                                           and ppr2.as_of_date = l_temp_as_of_Date));

-- cursor to get all objects from summ temp table
cursor all_objects_in_temp is
select
       /*+ INDEX(pji_fm_xbs_accum_tmp1 pji_fm_xbs_accum_tmp1_n1)*/ -- Bug # 4162534.
       *
  from pji_fm_xbs_accum_tmp1
 where project_id = l_project_id
   and struct_version_id = l_latest_wp_struct_ver_id
   and nvl(plan_version_id,-1) = decode(p_plan_res_level,'Y',-1,nvl(plan_version_id,-1))
   and project_element_id > 0
   -- and nvl(act_labor_hrs,0)+nvl(act_equip_hrs,0)+nvl(act_prj_raw_cost,0) > 0 --4654495,5091800
 order by project_id,struct_version_id,project_element_id,res_list_member_id,period_name;

-- cursor to get resource_list_member_id's resource_class code
cursor get_resource_class_code is
select resource_class_code
  from pa_resource_list_members
 where resource_list_member_id = l_res_list_member_id;

-- cursor to check if resource_list_memebr_id is that of a planned assignment
cursor get_assignment_info is
select resource_assignment_id,
       rbs_element_id,
       resource_class_code,
       rate_based_flag,
       txn_currency_code,
       assignment_start_date,
       assignment_end_date,
       planned_quantity,
       planned_bur_cost_txn_cur,
       planned_bur_cost_projfunc,
       planned_bur_cost_proj_cur,
       planned_raw_cost_txn_cur,
       planned_raw_cost_projfunc,
       planned_raw_cost_proj_cur
  from pa_task_asgmts_v
 where project_id = l_project_id
   and structure_version_id = l_latest_wp_struct_ver_id
   and task_id = l_task_id
   and resource_list_member_id = l_res_list_member_id;

l_get_assignment_info             get_assignment_info%rowtype;

-- cursor to get task information
cursor task_info(l_obj number) is
select ppev.element_version_id,
       decode(ppe.base_percent_comp_deriv_code,null,ptt.BASE_PERCENT_COMP_DERIV_CODE,'^',ptt.BASE_PERCENT_COMP_DERIV_CODE,ppe.base_percent_comp_deriv_code) base_percent_comp_deriv_code,
       ptt.initial_progress_status_code,
       ppevs.scheduled_start_date,
       ppevs.scheduled_finish_date
  from pa_proj_elements ppe,
       pa_proj_element_versions ppev,
       pa_proj_elem_ver_schedule ppevs,
       pa_task_types ptt
 where ppev.proj_element_id = l_obj
   and ppev.parent_structure_version_id = l_latest_wp_struct_ver_id
   and ppev.proj_element_id = ppe.proj_element_id
   and ppevs.element_version_id = ppev.element_version_id
   and ppe.type_id = ptt.task_type_id(+);

-- cursor to get progress rollup attrs
cursor rollup_method is
select TASK_WEIGHT_BASIS_CODE
  from pa_proj_progress_attr
 where project_id = l_project_id
   and structure_type = 'WORKPLAN';

-- cursor to get planned value for task
cursor get_planned_val_for_task is
select labor_effort, labor_brdn_cost
  from pji_xbs_plans_v
 where project_id = l_project_id
   and structure_version_id = l_latest_wp_struct_ver_id
   and proj_element_id = l_object_id
   and structure_type = 'WORKPLAN';

/* Begin: Fix for Bug # 4018249. */

cursor cur_record_count(l_cur_project_id NUMBER) is
select
/*+ INDEX(pji_fm_xbs_accum_tmp1 pji_fm_xbs_accum_tmp1_n1)*/ -- Fix for Bug # 4162534.
count(*)
from pji_fm_xbs_accum_tmp1
where project_id = l_cur_project_id;

l_record_count  NUMBER := null;

/* End: Fix for Bug # 4018249. CURSOR NOT USED ANYMORE, PJI passes period dates*/
--- this cursor is used to get start_date for periods
--- need this for converting act txn curr to plan txn curr
CURSOR get_gl_pa_st_date_csr IS
SELECT gp.START_DATE
  FROM gl_periods gp,
       gl_sets_of_books gsb,
       pa_implementations_all pia,
       pa_projects_all ppa
 WHERE ppa.project_id      = l_project_id
   and nvl(ppa.org_id,-99) = nvl(pia.org_id,-99)
   and gsb.set_of_books_id = pia.set_of_books_id
   and gp.period_set_name  = gsb.period_set_name
   AND gp.period_name      = l_period_name
   AND gp.period_type      = decode(l_plan_type,'G',gsb.accounted_period_type,'P',pia.pa_period_type)
   AND gp.adjustment_period_flag = 'N'
 ORDER BY gp.start_date;

CURSOR cur_prog_setup(c_proj_element_id NUMBER, c_project_id number)
IS
   SELECT nvl(ttype.PROG_ENTRY_ENABLE_FLAG, 'N'),initial_progress_status_code
     from pa_task_types ttype
     , pa_proj_elements elem
     where elem.project_id = c_project_id
       and elem.proj_element_id = c_proj_element_id
       and elem.object_type = 'PA_TASKS'
       and elem.type_id = ttype.task_type_id;
l_prog_stat_code varchar2(240);
l_prog_enable_flag varchar2(30);

-- Added for Bug 6917961

CURSOR c_get_prog_roll(c_progress_rollup_id NUMBER) IS
SELECT ppr.progress_status_code
, ppr.actual_start_date
, ppr.actual_finish_date
, ppr.proj_element_id
, ppr.object_type
, ppr.project_id
FROM pa_progress_rollup ppr
, pa_proj_elements ppe
WHERE ppr.progress_rollup_id = c_progress_rollup_id
AND ppr.proj_element_id = ppe.proj_element_id
;

l_t_progress_status_code varchar2(240);
l_t_actual_start_date date;
l_t_actual_finish_date date;
l_t_proj_element_id number;
l_t_object_type varchar2(100);
l_t_project_id number;

U_PROGRESS_STATUS_CODE                PA_PLSQL_DATATYPES.Char150TabTyp;

-- Added for Bug 6917961

l_get_summ_call_contxt VARCHAR2(1) := 'W'; -- 4415960

-- 4533112 Begin
CURSOR c_get_dates_overrides(c_project_id number, c_object_id number, c_object_type varchar2, c_as_of_date Date) IS
SELECT decode(ppr.base_progress_status_code,'Y','Y','N') date_override_flag
, ppr.estimated_start_date
, ppr.estimated_finish_date
, ppr.actual_start_date
, ppr.actual_finish_date
, ppe.status_code
FROM pa_progress_rollup ppr
, pa_proj_elements ppe
WHERE ppr.project_id = c_project_id
AND ppr.object_id = c_object_id
AND ppr.object_type = c_object_type
AND ppr.structure_type = 'WORKPLAN'
AND ppr.structure_version_id is null
AND trunc(ppr.as_of_date) <= trunc(c_as_of_date)
AND ppr.current_flag IN ('Y', 'N')
AND ppr.proj_element_id = ppe.proj_element_id
ORDER by as_of_date desc;

CURSOR c_get_rec_overrides(c_progress_rollup_id NUMBER) IS
SELECT decode(ppr.base_progress_status_code,'Y','Y','N') date_override_flag
, ppr.estimated_start_date
, ppr.estimated_finish_date
, ppr.actual_start_date
, ppr.actual_finish_date
, ppe.status_code
, ppr.object_id
, ppr.object_version_id
, ppr.proj_element_id
, ppr.object_type
, ppr.as_of_date
, ppr.project_id
, ppr.current_flag
FROM pa_progress_rollup ppr
, pa_proj_elements ppe
WHERE ppr.progress_rollup_id = c_progress_rollup_id
AND ppr.proj_element_id = ppe.proj_element_id
;

l_date_override_flag            VARCHAR2(1):='N';
l_db_date_override_flag         VARCHAR2(1):='N';
l_db_estimated_start_date       DATE;
l_db_estimated_finish_date      DATE;
l_db_actual_start_date          DATE;
l_db_actual_finish_date         DATE;
l_clex_estimated_start_date     DATE;
l_clex_estimated_finish_date    DATE;
l_clex_actual_start_date        DATE;
l_clex_actual_finish_date       DATE;
l_task_status_code              VARCHAR2(150);
u_actual_start_date             PA_PLSQL_DATATYPES.DateTabTyp;
u_estimated_start_date          PA_PLSQL_DATATYPES.DateTabTyp;
u_estimated_finish_date         PA_PLSQL_DATATYPES.DateTabTyp;
u_base_progress_status_code     PA_PLSQL_DATATYPES.Char150TabTyp;
l_db_object_id                  NUMBER;
l_db_object_version_id          NUMBER;
l_db_proj_element_id            NUMBER;
l_db_object_type                VARCHAR2(30);
l_db_as_of_date                 DATE;
l_db_project_id                 NUMBER;
l_db_current_flag               VARCHAR2(1);
l_clex_pc                       NUMBER;
-- 4533112 End

-- 4654495
cursor some_progress_exists is
select 'Y'
  from pa_progress_rollup
 where project_id = l_project_id
   and proj_element_id = l_task_id
   and object_type in ('PA_TASKS','PA_ASSIGNMENTS');

l_some_progress_exists          some_progress_exists%rowtype;
-- Bug 6321238
cursor check_pup_pue(c_project_id number,
                 c_latest_published_version_id number) is
select 'Y'
  from pa_proj_elem_ver_structure
 where project_id = c_project_id
   and element_version_id = c_latest_published_version_id
   and process_code = 'PUE';

l_check_pup_pue          VARCHAR2(1);


l_data VARCHAR2(1000);-- 4746476
l_msg_index_out NUMBER;	-- 4746476

l_conc_request_id NUMBER; -- Added for Bug#5659575

BEGIN
  pa_debug.set_process('PLSQL');
  pa_debug.log_message('Begin GET_SUMM_ACT: p_extraction: '||p_extraction_type||' p_res_level: '||p_plan_res_level, 1);

  x_return_status := 'S';
  l_return_status := 'S';
  l_index := 0;
  l_extraction_type := p_extraction_type;
  if (p_extraction_type = 'INITIAL' OR p_extraction_type = 'PUBLISH') then -- 4415960 Added PUBLISH
     l_extraction_type := 'FULL';
  end if;
  -- 4415960
  if p_extraction_type = 'PUBLISH' then
     l_get_summ_call_contxt := 'P';
  end if;

  for l_index2 in 1..p_project_id_list.COUNT loop
    l_project_id := p_project_id_list(l_index2);
    l_org_id := to_number(null);
    l_shared_structure := 'N';

    open projects_in_range;
    fetch projects_in_range into l_org_id, l_proj_curr_code, l_proj_func_curr_code, l_shared_structure;
    close projects_in_range;

    if l_shared_structure = 'SHARE_FULL' then

             /* Commented for Bug 6414995  and reverted as above.

     if p_extraction_type = 'PUBLISH' then -- Added If block for bug#5659575
      l_latest_wp_struct_ver_id := pa_project_structure_utils.get_latest_wp_version(l_project_id);
     else
      l_latest_wp_struct_ver_id := pa_project_structure_utils.GET_LATEST_FIN_STRUC_VER_ID(l_project_id);
     end if;
           Bug 6414995 */
     l_latest_wp_struct_ver_id := pa_project_structure_utils.get_latest_wp_version(l_project_id); --  Bug 6414995
      if l_latest_wp_struct_ver_id is not null then
         IF g1_debug_mode  = 'Y' THEN
           pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Project:'||l_project_id||' Structure:'||l_latest_wp_struct_ver_id,
                    x_Log_Level=> 3);
         END IF;
         l_index := l_index + 1;
         --- find the max published as_of_date for all lowest level tasks
         open max_as_of_date;
         fetch max_as_of_date into l_max_as_of_Date;
         close max_as_of_date;

         open max_as_of_date_assign;
         fetch max_as_of_date_assign into l_max_as_of_Date_assign;
         close max_as_of_date_assign;

         if (l_max_as_of_Date is null and l_max_as_of_Date_assign is null) then
            if (p_plan_res_level = 'Y') then
               open max_as_of_date_rollup;
               fetch max_as_of_date_rollup into l_max_as_of_Date;
               if (l_max_as_of_Date is not null) then
                 l_max_as_of_Date := l_max_as_of_Date;  ---5226910(5212999)
               end if;
               close max_as_of_date_rollup;
            else
               open max_as_of_date_rollup_tsk;
               fetch max_as_of_date_rollup_tsk into l_max_as_of_Date;
               if (l_max_as_of_Date is not null) then
                 l_max_as_of_Date := l_max_as_of_Date;  ---5226910(5212999)
               end if;
               close max_as_of_date_rollup_tsk;
            end if;
         end if;

         if nvl(l_max_as_of_date,trunc(sysdate)) <= trunc(sysdate) then
           l_max_as_of_date := trunc(sysdate) - 1;
         end if;

         if nvl(l_max_as_of_Date_assign,l_max_as_of_date) > l_max_as_of_date then
           l_max_as_of_date := l_max_as_of_Date_assign;
         end if;

         --- 5226910(5212999)
         if (l_max_as_of_date >= trunc(sysdate)) then
             l_temp_as_of_date := l_max_as_of_date;
         else
             --- get next cycle date after l_max_as_of_date
             l_temp_as_of_date := trunc(pa_progress_utils.get_next_progress_cycle(p_project_id => l_project_id,
                                              p_task_id           => to_number(null),
                                              p_start_date        => l_max_as_of_date));
         end if;
         proj_ids_tbl.extend;
         latest_wp_struct_ver_ids_tbl.extend;
         res_list_ids_tbl.extend;
         proj_org_ids_tbl.extend;
         proj_thru_dates_tbl.extend;
         calendar_type_tbl.extend;
         proj_curr_code_tbl.extend;
         proj_func_curr_code_tbl.extend;
         proj_pgm_level_tbl.extend;
         base_struct_ver_ids_tbl.extend;  -- Added for bug 5464875

         proj_ids_tbl(l_index) := l_project_id;
         latest_wp_struct_ver_ids_tbl(l_index) := l_latest_wp_struct_ver_id;
         res_list_ids_tbl(l_index) := pa_fin_plan_utils.Get_wp_bv_res_list_id(l_latest_wp_struct_ver_id);
         proj_org_ids_tbl(l_index) := l_org_id;
         proj_thru_dates_tbl(l_index) := trunc(l_temp_as_of_date);
         calendar_type_tbl(l_index) := pa_progress_utils.get_time_phase_period(l_latest_wp_struct_ver_id, l_project_id);
         proj_curr_code_tbl(l_index) := l_proj_curr_code;
         proj_func_curr_code_tbl(l_index) := l_proj_func_curr_code;
         if (p_proj_pgm_level.exists(l_index2)) then
            proj_pgm_level_tbl(l_index) := p_proj_pgm_level(l_index2);
         else
            proj_pgm_level_tbl(l_index) := 1;
         end if;

         -- Added for bug 5464875
         if (p_plan_res_level = 'N') then
            base_struct_ver_ids_tbl(l_index) := pa_project_structure_utils.get_baseline_struct_ver(l_project_id);
            if (base_struct_ver_ids_tbl(l_index) = -1) then
               base_struct_ver_ids_tbl(l_index) := null;
            end if;
         end if;
      end if;
    end if;
  end loop;

  --- update next_progress_cycle_date column to stamp the date upto which
  --- actuals are pulled in
  forall l_index in 1..proj_ids_tbl.count
     update pa_proj_progress_attr
        set next_progress_update_date = proj_thru_dates_tbl(l_index)
      where project_id = proj_ids_tbl(l_index)
        and object_type = 'PA_STRUCTURES'
        and structure_type = 'WORKPLAN';

  begin
    if (p_plan_res_level = 'Y') then
      pa_debug.log_message('GET_SUMM_ACT: Calling pji_fm_xbs_accum_utils.get_summarized_data', 1);
      --- Call Reporting API to populate temp table with summarized actuals
      pji_fm_xbs_accum_utils.get_summarized_data(p_project_ids  => proj_ids_tbl,
                                             p_resource_list_ids => res_list_ids_tbl,
                                             p_struct_ver_ids => latest_wp_struct_ver_ids_tbl,
                                             p_end_Date => proj_thru_dates_tbl,
                                             p_calendar_type => calendar_type_tbl,
                                             p_record_type => 'NYN',
                                             p_currency_type => 6,
                                             --p_calling_context => 'W',
					     p_calling_context => l_get_summ_call_contxt, -- 4415960
                                             p_extraction_type => l_extraction_type,
                                             x_return_status => x_return_status,
                                             x_msg_code => x_msg_code);

      /* Begin: Added for bug 5526638*/
      /* Added and condition for bug#5659575*/
	 IF (x_return_status <> FND_API.G_RET_STS_SUCCESS and p_extraction_type <> 'PUBLISH') then
          PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                 p_msg_name       => x_msg_code);
          x_msg_data := x_msg_code;
          x_return_status := 'E';
          pa_debug.log_message('GET_SUMM_ACT: Error in pji_fm_xbs_accum_utils.get_summarized_data', 1);
                  RAISE  l_pji_wp_exception;
        END IF;
     /* End: Added for bug 5526638*/

      IF g1_debug_mode  = 'Y' THEN
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Done with pji_fm_xbs_accum_utils.get_summarized_data',
                    x_Log_Level=> 3);
      END IF;
    end if;
  exception when others then
    pa_debug.log_message('GET_SUMM_ACT: get_summarized_data failed with exception', 1);
    fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'GET_SUMMARIZED_ACTUALS',
                            p_error_text     => SUBSTRB('pji_fm_xbs_accum_utils.get_summarized_data:'||SQLERRM,1,120));
    raise;
  end;

  -- Added for bug 5464875. Used Bulk Processing
  --- here call populate_workplan_data when plan_res_level is 'N'
  if (p_plan_res_level = 'N') then
    begin
      for i in 1..proj_ids_tbl.COUNT loop
        populate_in_tbl(i).project_id         := proj_ids_tbl(i);
        populate_in_tbl(i).struct_ver_id      := latest_wp_struct_ver_ids_tbl(i);
        populate_in_tbl(i).base_struct_ver_id := base_struct_ver_ids_tbl(i);
        populate_in_tbl(i).plan_version_id    := Null;
        populate_in_tbl(i).as_of_date         := proj_thru_dates_tbl(i);
        populate_in_tbl(i).project_element_id := Null;

        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'Starts', x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'populate_in_tbl(i).project_id='||populate_in_tbl(i).project_id, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'populate_in_tbl(i).struct_ver_id='||populate_in_tbl(i).struct_ver_id, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'populate_in_tbl(i).base_struct_ver_id='||populate_in_tbl(i).base_struct_ver_id, x_Log_Level=>3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'populate_in_tbl(i).plan_version_id='||populate_in_tbl(i).plan_version_id, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'populate_in_tbl(i).as_of_date='||populate_in_tbl(i).as_of_date, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN', x_Msg => 'populate_in_tbl(i).project_element_id='||populate_in_tbl(i).project_element_id, x_Log_Level=> 3);

      end loop;

      pa_debug.log_message('GET_SUMM_ACT: Calling pji_fm_xbs_accum_utils.populate_workplan_data', 1);
      --- Call Reporting API to populate temp table with workplan data
      PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data(p_populate_in_tbl      => populate_in_tbl,
                                 p_calling_context      => 'SUMMARIZE',
                                 p_program_rollup_flag  => 'Y',
                                 x_return_status        => x_return_status,
                                 x_msg_code             => x_msg_code );
      /* Begin: Added for bug 5526638*/
	 /* Added and condition for bug#5659575*/
	 IF (x_return_status <> FND_API.G_RET_STS_SUCCESS and p_extraction_type <> 'PUBLISH') THEN
            PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                 p_msg_name       => x_msg_code);
            x_msg_data := x_msg_code;
            x_return_status := 'E';
            pa_debug.log_message('GET_SUMM_ACT: Error in pji_fm_xbs_accum_utils.populate_workplan_data', 1);
            RAISE  l_pji_wp_exception;
         END IF;
     /* End: Added for bug 5526638*/

      IF g1_debug_mode  = 'Y' THEN
         pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                        x_Msg => 'Done with pji_fm_xbs_accum_utils.populate_workplan_data',
                        x_Log_Level=> 3);
      END IF;
    exception when others then
     pa_debug.log_message('GET_SUMM_ACT: populate_workplan_data failed with exception', 1);
     fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                             p_procedure_name => 'GET_SUMMARIZED_ACTUALS',
                             p_error_text     => SUBSTRB('PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data:'||SQLERRM,1,120));
     raise;
   end;
  end if;

  --- Once the temp table is populated we need to update progress rollup
  --- records with the summarized actuals.

  if (x_return_status = 'S') then
    l_t_index := 0;  -- init here because this can be for range of projects
    l_index_etc := 0;  -- init here because this can be for range of projects
    for l_index in 1..proj_ids_tbl.COUNT loop  --- FOR each PROJECT
      /* Begin: Fix for Bug # 5526638. */
       Begin
        l_act_err_flag.extend;
        l_act_err_msg.extend;
        l_err_msg := null;
        l_act_err_flag(l_index) := 0;
        l_act_err_msg(l_index)  := l_err_msg;
        SAVEPOINT ACT_PROJECT;
      /* End: Fix for Bug # 5526638. */

      l_project_id := proj_ids_tbl(l_index);
      l_temp_as_of_date := proj_thru_dates_tbl(l_index);
      pa_debug.log_message('GET_SUMM_ACT: Project Id: '||l_project_id||' As of Date: '||l_temp_as_of_date||' Project Level: '||proj_pgm_level_tbl(l_index), 1);
      l_latest_wp_struct_ver_id := latest_wp_struct_ver_ids_tbl(l_index);

       /* Added for Bug 6414995 */
      l_check_pup_pue := 'N';
      if p_extraction_type <> 'PUBLISH' then
          open check_pup_pue(l_project_id, l_latest_wp_struct_ver_id);
          fetch check_pup_pue into l_check_pup_pue;
          close check_pup_pue;

          if (l_check_pup_pue = 'Y') then
            l_err_msg := 'Workplan publish for this project has failed.';
            raise l_skip_exception;
          end if;
      end if;
      /* End for Bug 6414995 */

      l_track_wp_cost_flag :=  pa_fp_wp_gen_amt_utils.get_wp_track_cost_amt_flag(l_project_id);  --Bug 3801745
      l_plan_type := calendar_type_tbl(l_index);
      l_plan_type_id := Pa_Fp_wp_gen_amt_utils.get_wp_ptype_id(p_project_id => l_project_id);
      l_plan_version_id := Pa_Fp_wp_gen_amt_utils.get_wp_version_id(
                                                      p_project_id => l_project_id,
                                                      p_plan_type_id => -1,
                                                      p_proj_str_ver_id => l_latest_wp_struct_ver_id) ;
      l_proj_curr_code := proj_curr_code_tbl(l_index);
      l_proj_func_curr_code := proj_func_curr_code_tbl(l_index);

        /* Begin: Fix for Bug # 4018249. */

        open cur_record_count(l_project_id);
        fetch cur_record_count into l_record_count;
        close cur_record_count;

        if (nvl(l_record_count,0) <> 0) then

        /* End: Fix for Bug # 4018249. */

      --- call api to get pa and gl period names for this date

            begin

                l_pa_period_name := pa_utils2.get_pa_period_name(P_TXN_DATE => l_temp_as_of_date,
                                                          p_org_id => proj_org_ids_tbl(l_index));
                l_gl_period_name := pa_utils2.get_gl_period_name(p_gl_date => l_temp_as_of_date,
                                                          p_org_id => proj_org_ids_tbl(l_index));

            exception when others then
                pa_debug.log_message('GET_SUMM_ACT: Project Id:'||l_project_id||' Issue in finding periods.', 1);
                /* Begin: Fix for Bug # 5526638. */
                -- l_return_status := 'W';
                -- l_project_id := -99999; --- so that the next loop won't get executed

		/* Added If condition for Bug#5659575*/
		if p_extraction_type = 'PUBLISH' then
			fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
			    p_procedure_name => 'GET_SUMMARIZED_ACTUALS',
			    p_error_text     => SUBSTRB('Call of pa_utils2.get_gl_period_name failed: x_msg_data='||SQLERRM,1,120));
			x_return_status := 'E';
			RAISE;
                else
	                l_err_msg := 'Periods are not defined for the transaction date :'||l_temp_as_of_date;
		        raise l_skip_exception;
   	        end if;
                /* End: Fix for Bug # 5526638. */
            end;

        end if;

      IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'project id:'||l_project_id||'structure_id:'||l_latest_wp_struct_ver_id||'as of date:'||to_char(l_temp_as_of_date),
                    x_Log_Level=> 3);
      END IF;

      /**** Commented for bug 5464875 and moved above for batch processing
      --- here call populate_workplan_data when plan_res_level is 'N'
      if (p_plan_res_level = 'N' and l_return_status = 'S') then
        l_base_struct_ver_id := pa_project_structure_utils.get_baseline_struct_ver(l_project_id);
        if (l_base_struct_ver_id = -1) then
           l_base_struct_ver_id := null;
        end if;
        begin
          PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data(p_project_id => l_project_id,
                                    p_struct_ver_id => l_latest_wp_struct_ver_id,
                                    p_base_struct_ver_id => l_base_struct_ver_id,
                                    p_as_of_date        => l_temp_as_of_date,
                                    p_program_rollup_flag  => 'Y',
                                    p_calling_context      => 'SUMMARIZE',
                                    x_return_status => x_return_status,
                                    x_msg_code => x_msg_code );
        exception when others then
          pa_debug.log_message('GET_SUMM_ACT: populate_workplan_data failed with exception', 1);
          fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                                  p_procedure_name => 'GET_SUMMARIZED_ACTUALS',
                                  p_error_text     => SUBSTRB('PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data:'||SQLERRM,1,120));
          raise;
        end;
      end if;
      ****/
      --- here check if resource_list assigned to project is 'None' i.e. uncategorized
      --- ignore all RLMIds for such project other than 'PEOPLE' class RLMId.
      begin
         select uncategorized_flag
           into l_uncategorized_flag
           from pa_resource_lists_all_bg ---4355004
          where resource_list_id = res_list_ids_tbl(l_index);

          if (l_uncategorized_flag = 'Y') then
             select resource_list_member_id
               into l_ppl_res_list_mem_id
               from pa_resource_list_members
              where resource_class_code = 'PEOPLE'
                and resource_class_flag = 'Y'
                and resource_list_id = res_list_ids_tbl(l_index);
          end if;
       exception
          when others then
          l_uncategorized_flag := 'N';
       end;

      --- for all objects in summ temp table
      l_index2 := 0;
      l_index3 := 0;
      l_index4 := 0;
      l_temp_index2 := 0;
      l_db_case := '0';

      for all_objects_in_temp_rec in all_objects_in_temp loop  -- FOR each OBJECT
        l_ignore_rec := 'N';
        l_latest_wp_struct_ver_id := all_objects_in_temp_rec.struct_version_id;
    l_period_flag := all_objects_in_temp_rec.period_flag;
        l_period_name := all_objects_in_temp_rec.period_name;

        if (l_last_projelemid <> all_objects_in_temp_rec.project_element_id) then
           open task_info(all_objects_in_temp_rec.project_element_id);
           fetch task_info into l_object_version_id, l_base_pc_deriv_code, l_init_prog_stat_code, l_sch_start_date, l_sch_end_date;
           close task_info;
        end if;
        L_PPL_ACT_COST_TO_DATE_TC := all_objects_in_temp_rec.act_txn_labor_brdn_cost;
        L_PPL_ACT_RAWCOST_TO_DATE_TC := all_objects_in_temp_rec.act_txn_labor_raw_cost;
        L_EQPMT_ACT_COST_TO_DATE_TC := all_objects_in_temp_rec.act_txn_equip_brdn_cost;
        L_EQPMT_ACT_RAWCOST_TO_DATE_TC := all_objects_in_temp_rec.act_txn_equip_raw_cost;
        L_ACT_COST_TO_DATE_TC := all_objects_in_temp_rec.act_txn_brdn_cost;
        L_ACT_RAWCOST_TO_DATE_TC := all_objects_in_temp_rec.act_txn_raw_cost;
        l_task_id := all_objects_in_temp_rec.project_element_id;
        l_txn_curr_code := all_objects_in_temp_rec.txn_currency_code;
        l_percent_comp := to_number(null);
        l_earned_val := to_number(null);
        l_planned_eff := 0;
        l_planned_cost := 0;

        -- 4654495
        if (p_plan_res_level = 'N' and
           (nvl(all_objects_in_temp_rec.act_labor_hrs,0)+nvl(all_objects_in_temp_rec.act_equip_hrs,0)+nvl(all_objects_in_temp_rec.act_prj_raw_cost,0) = 0)) then
           --- check in pa_progress_rollup table if data already exists for this task
           open some_progress_exists;
           fetch some_progress_exists into l_some_progress_exists;
           if (some_progress_exists%notfound) then
              l_ignore_rec := 'Y';
           end if;
           close some_progress_exists;
        end if;

        if (all_objects_in_temp_rec.res_list_member_id is not null and
            l_uncategorized_flag = 'Y' and
            all_objects_in_temp_rec.res_list_member_id <> l_ppl_res_list_mem_id) then
           l_ignore_rec := 'Y';
        end if;

        if (l_ignore_rec = 'N') then
           if (all_objects_in_temp_rec.res_list_member_id is not null) then --11
              l_res_list_member_id := all_objects_in_temp_rec.res_list_member_id;

              -- check if assignment exists
              open get_assignment_info;
              fetch get_assignment_info into l_get_assignment_info;

              if get_assignment_info%found then
                 l_object_type := 'PA_ASSIGNMENTS';
                 l_object_id := l_res_list_member_id;
                 l_res_assignment_id := l_get_assignment_info.resource_assignment_id;
                 l_txn_curr_code     := l_get_assignment_info.txn_currency_code;
                 l_new_res_list_member_id := l_res_list_member_id;
                 l_task_version_id   := l_object_version_id;
                 l_rate_based_flag   := l_get_assignment_info.rate_based_flag;
                 l_res_class_code := l_get_assignment_info.resource_class_code;
                 l_rbs_element_id := l_get_assignment_info.rbs_element_id;
                 l_asgn_sch_start_date := l_get_assignment_info.assignment_start_date;
                 l_asgn_sch_finish_date := l_get_assignment_info.assignment_end_date;
                 l_asgn_plan_quantity := nvl(l_get_assignment_info.planned_quantity,0);
                 l_asgn_plan_bur_cost_tc := nvl(l_get_assignment_info.planned_bur_cost_txn_cur,0);
                 l_asgn_plan_bur_cost_fc := nvl(l_get_assignment_info.planned_bur_cost_projfunc,0);
                 l_asgn_plan_bur_cost_pc := nvl(l_get_assignment_info.planned_bur_cost_proj_cur,0);
                 l_asgn_plan_raw_cost_tc := nvl(l_get_assignment_info.planned_raw_cost_txn_cur,0);
                 l_asgn_plan_raw_cost_fc := nvl(l_get_assignment_info.planned_raw_cost_projfunc,0);
                 l_asgn_plan_raw_cost_pc := nvl(l_get_assignment_info.planned_raw_cost_proj_cur,0);
                 close get_assignment_info; -- Bug 6595475

              else
                 close get_assignment_info; -- Bug 6595475
                 open get_resource_class_code;
                 fetch get_resource_class_code into l_res_class_code;
                 close get_resource_class_code;

                 begin
                    pa_task_assignments_pvt.Derive_Task_Assignments
                    ( p_project_id           => l_project_id
                     ,p_task_version_id      => l_object_version_id
                     ,p_scheduled_start      => l_sch_start_date
                     ,p_scheduled_end        => l_sch_end_date
                     ,p_resource_class_code  => l_res_class_code
                     ,p_resource_list_member_id => l_res_list_member_id
                     ,p_unplanned_flag          => 'Y'
                     ,x_resource_assignment_id  => l_res_assignment_id
                     ,x_task_version_id         => l_task_version_id
                     ,x_currency_code           => l_txn_curr_code
             ,x_resource_list_member_id => l_new_res_list_member_id -- Bug 3764224 RLM ID Changes
                     ,x_rate_based_flag         => l_rate_based_flag
                     ,x_rbs_element_id          => l_rbs_element_id
                     ,x_msg_count               => x_msg_count
                     ,x_msg_data                => x_msg_data
                     ,x_return_status           => x_return_status);
                 exception when others then
                      x_return_status := 'E';
                      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'GET_SUMMARIZED_ACTUALS',
                            p_error_text     => SUBSTRB('pa_task_assignments_pvt.Derive_Task_Assignments:'||SQLERRM,1,120));
                            -- Added for Bug # 5526638
                            l_err_msg := substrb('Derive task assignment to track actuals failed:'||SQLERRM,1,240)    ;
                      raise;
                 end;

                 if (x_return_status = 'S' and l_res_assignment_id is not null) then
                    l_object_type := 'PA_ASSIGNMENTS';
                    l_object_id := l_new_res_list_member_id; ---l_res_assignment_id;
                    l_asgn_sch_start_date := l_sch_start_date;
                    l_asgn_sch_finish_date := l_sch_end_date;
                    l_asgn_plan_quantity := 0;
                    l_asgn_plan_bur_cost_tc := 0;
                    l_asgn_plan_bur_cost_fc := 0;
                    l_asgn_plan_bur_cost_pc := 0;
                    l_asgn_plan_raw_cost_tc := 0;
                    l_asgn_plan_raw_cost_fc := 0;
                    l_asgn_plan_raw_cost_pc := 0;
                 else
                    l_ignore_rec := 'Y';
                    --- l_return_status := 'W';  bug 5526638
       		    l_return_status := 'E'; -- Added for bug#5659575
                    pa_debug.log_message('GET_SUMM_ACT: Derive task assignment failed for Res Id: '||l_res_list_member_id||' Task version id: '||l_object_version_id, 1);
                    PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                 p_msg_name       => 'Derive Task Assignment failed for RLMId: '||l_res_list_member_id);
                    /* Begin: Fix for Bug # 5526638. */
      		    if p_extraction_type <> 'PUBLISH' then
	                    l_err_msg := 'Derive task assignment to track actuals failed for resource list member id :'||l_res_list_member_id||' and Task version id :'||l_object_version_id;
		            raise l_skip_exception;
		    end if;
                    /* End: Fix for Bug # 5526638. */
                 end if;

               end if;
              -- close get_assignment_info; Commented for bug 6730979
               --- assignment is found but check if txn curr is same or not
               if l_txn_curr_code <> all_objects_in_temp_rec.txn_currency_code
                  and l_ignore_rec = 'N' then --33

                  if (l_txn_curr_code <> l_proj_curr_code) THEN   -- Added an extra check to stop the conversion if the transaction currency code is the same as project currency code. -- 7282850

                  l_conv_rate_date := l_temp_as_of_date;
                  --- find period_start_date to be used for currency conversion
                  if (l_plan_type = 'G' or l_plan_type = 'P') then
                     l_conv_rate_date := all_objects_in_temp_rec.min_start_date;
                  end if;

                  --- convert txn curr into planned txn curr and then process
                  if (all_objects_in_temp_rec.act_txn_labor_brdn_cost <> 0 or
                      all_objects_in_temp_rec.act_txn_labor_raw_cost <> 0) then
                     l_txn_brdn_cost := all_objects_in_temp_rec.act_txn_labor_brdn_cost;
                     l_txn_raw_cost := all_objects_in_temp_rec.act_txn_labor_raw_cost;
                  else
                     l_txn_brdn_cost := all_objects_in_temp_rec.act_txn_equip_brdn_cost;
                     l_txn_raw_cost := all_objects_in_temp_rec.act_txn_equip_raw_cost;
                  end if;
                  l_txn_brdn_cost_tot := all_objects_in_temp_rec.act_txn_brdn_cost;
                  l_txn_raw_cost_tot  := all_objects_in_temp_rec.act_txn_raw_cost;
                  -- convert both raw and burdened costs
                  begin
                     pa_progress_utils.convert_currency_amounts(
                     p_project_id         => l_project_id
                    ,p_task_id            => all_objects_in_temp_rec.project_element_id
                    ,p_structure_version_id => all_objects_in_temp_rec.struct_version_id
                    ,p_as_of_date         => l_conv_rate_date
                    ,P_txn_cost           => l_txn_brdn_cost
                    ,P_txn_curr_code      => all_objects_in_temp_rec.txn_currency_code
                    ,P_project_curr_code  => l_txn_curr_code
                    ,P_project_rate_type       => x_txn_rate_type
                    ,P_project_rate_date       => x_txn_rate_date
                    ,P_project_exch_rate       => x_txn_exch_rate
                    ,P_project_raw_cost        => x_txn_brdn_cost
                    ,P_projfunc_curr_code      => x_projfunc_curr_code
                    ,P_projfunc_cost_rate_type => x_projfunc_cost_rate_type
                    ,P_projfunc_cost_rate_date => x_projfunc_cost_rate_date
                    ,P_projfunc_cost_exch_rate => x_projfunc_cost_exch_rate
                    ,P_projfunc_raw_cost       => x_projfunc_raw_cost
                    ,x_return_status           => x_return_status
                    ,x_msg_count               => x_msg_count
                    ,x_msg_data                => x_msg_data) ;

                     pa_progress_utils.convert_currency_amounts(
                     p_project_id         => l_project_id
                    ,p_task_id            => all_objects_in_temp_rec.project_element_id
                    ,p_structure_version_id => all_objects_in_temp_rec.struct_version_id
                    ,p_as_of_date         => l_conv_rate_date
                    ,P_txn_cost           => l_txn_raw_cost
                    ,P_txn_curr_code      => all_objects_in_temp_rec.txn_currency_code
                    ,P_project_curr_code  => l_txn_curr_code
                    ,P_project_rate_type       => x_txn_rate_type
                    ,P_project_rate_date       => x_txn_rate_date
                    ,P_project_exch_rate       => x_txn_exch_rate
                    ,P_project_raw_cost        => x_txn_raw_cost
                    ,P_projfunc_curr_code      => x_projfunc_curr_code
                    ,P_projfunc_cost_rate_type => x_projfunc_cost_rate_type
                    ,P_projfunc_cost_rate_date => x_projfunc_cost_rate_date
                    ,P_projfunc_cost_exch_rate => x_projfunc_cost_exch_rate
                    ,P_projfunc_raw_cost       => x_projfunc_raw_cost
                    ,x_return_status           => x_return_status
                    ,x_msg_count               => x_msg_count
                    ,x_msg_data                => x_msg_data) ;

                     pa_progress_utils.convert_currency_amounts(
                     p_project_id         => l_project_id
                    ,p_task_id            => all_objects_in_temp_rec.project_element_id
                    ,p_structure_version_id => all_objects_in_temp_rec.struct_version_id
                    ,p_as_of_date         => l_conv_rate_date
                    ,P_txn_cost           => l_txn_raw_cost_tot
                    ,P_txn_curr_code      => all_objects_in_temp_rec.txn_currency_code
                    ,P_project_curr_code  => l_txn_curr_code
                    ,P_project_rate_type       => x_txn_rate_type
                    ,P_project_rate_date       => x_txn_rate_date
                    ,P_project_exch_rate       => x_txn_exch_rate
                    ,P_project_raw_cost        => x_txn_raw_cost_tot
                    ,P_projfunc_curr_code      => x_projfunc_curr_code
                    ,P_projfunc_cost_rate_type => x_projfunc_cost_rate_type
                    ,P_projfunc_cost_rate_date => x_projfunc_cost_rate_date
                    ,P_projfunc_cost_exch_rate => x_projfunc_cost_exch_rate
                    ,P_projfunc_raw_cost       => x_projfunc_raw_cost
                    ,x_return_status           => x_return_status
                    ,x_msg_count               => x_msg_count
                    ,x_msg_data                => x_msg_data) ;

                     pa_progress_utils.convert_currency_amounts(
                     p_project_id         => l_project_id
                    ,p_task_id            => all_objects_in_temp_rec.project_element_id
                    ,p_structure_version_id => all_objects_in_temp_rec.struct_version_id
                    ,p_as_of_date         => l_conv_rate_date
                    ,P_txn_cost           => l_txn_brdn_cost_tot
                    ,P_txn_curr_code      => all_objects_in_temp_rec.txn_currency_code
                    ,P_project_curr_code  => l_txn_curr_code
                    ,P_project_rate_type       => x_txn_rate_type
                    ,P_project_rate_date       => x_txn_rate_date
                    ,P_project_exch_rate       => x_txn_exch_rate
                    ,P_project_raw_cost        => x_txn_brdn_cost_tot
                    ,P_projfunc_curr_code      => x_projfunc_curr_code
                    ,P_projfunc_cost_rate_type => x_projfunc_cost_rate_type
                    ,P_projfunc_cost_rate_date => x_projfunc_cost_rate_date
                    ,P_projfunc_cost_exch_rate => x_projfunc_cost_exch_rate
                    ,P_projfunc_raw_cost       => x_projfunc_raw_cost
                    ,x_return_status           => x_return_status
                    ,x_msg_count               => x_msg_count
                    ,x_msg_data                => x_msg_data) ;
                 exception when others then
                    l_err_msg := substrb('Currency conversion failed '||sqlerrm,1,240);  -- Added for bug 5526638
                    raise;
                 end;

                 if (x_return_status <> 'S') then
                    ----l_return_status := 'W';   5526638
       		    l_return_status := 'E';  -- Added for Bug #5659575
                    pa_debug.log_message('GET_SUMM_ACT: Currency conversion failed for Project Id: '||l_project_id||' Task Id: '||all_objects_in_temp_rec.project_element_id||', Res Id: '||l_res_list_member_id||
                    ' Message code: '||x_msg_data||' From currency: '||all_objects_in_temp_rec.txn_currency_code||' To currency: '||l_txn_curr_code, 1);
                    pa_debug.log_message('GET_SUMM_ACT: Currency conversion failed for Project Id: '||l_project_id||' Task Id: '||all_objects_in_temp_rec.project_element_id||', Res Id: '||l_res_list_member_id||
                    ' Message code: '||x_msg_data||' From currency: '||all_objects_in_temp_rec.txn_currency_code||' To currency: '||l_txn_curr_code, 1);
                    l_ignore_rec := 'Y';
                    /* Begin: Fix for Bug # 5526638. */
       		    /* Added for Bug #5659575 */
	            if p_extraction_type <> 'PUBLISH' then
			    l_err_msg := 'Currency conversion failed for Task Id: '||all_objects_in_temp_rec.project_element_id||', Res Id: '||l_res_list_member_id||
			    ' Message code: '||x_msg_data||' From currency: '||all_objects_in_temp_rec.txn_currency_code||' To currency: '||l_txn_curr_code;
			    raise l_skip_exception;
		    end if;
                    /* End: Fix for Bug # 5526638. */
                 else
                    if (all_objects_in_temp_rec.act_txn_labor_brdn_cost <> 0 or
                        all_objects_in_temp_rec.act_txn_labor_raw_cost <> 0) then
                       L_PPL_ACT_COST_TO_DATE_TC := x_txn_brdn_cost;
                       L_PPL_ACT_RAWCOST_TO_DATE_TC := x_txn_raw_cost;
                    else
                       L_EQPMT_ACT_COST_TO_DATE_TC := x_txn_brdn_cost;
                       L_EQPMT_ACT_RAWCOST_TO_DATE_TC := x_txn_raw_cost;
                    end if;
                    L_ACT_COST_TO_DATE_TC := x_txn_brdn_cost_tot;
                    L_ACT_RAWCOST_TO_DATE_TC := x_txn_raw_cost_Tot;
                 end if;
                   else -- 7282850

                       if (all_objects_in_temp_rec.txn_labor_brdn_cost > 0 or
                           all_objects_in_temp_rec.txn_labor_raw_cost > 0) then

                          /*L_PPL_ACT_COST_TO_DATE_TC := x_txn_brdn_cost;
                          L_PPL_ACT_RAWCOST_TO_DATE_TC := x_txn_raw_cost;*/

                          L_PPL_ACT_COST_TO_DATE_TC    := all_objects_in_temp_rec.txn_labor_brdn_cost;
                          L_PPL_ACT_RAWCOST_TO_DATE_TC := all_objects_in_temp_rec.txn_labor_raw_cost;

                       else
                          /*L_EQPMT_ACT_COST_TO_DATE_TC := x_txn_brdn_cost;
                          L_EQPMT_ACT_RAWCOST_TO_DATE_TC := x_txn_raw_cost;*/

                          L_EQPMT_ACT_COST_TO_DATE_TC    := all_objects_in_temp_rec.txn_equip_brdn_cost;
                          L_EQPMT_ACT_RAWCOST_TO_DATE_TC := all_objects_in_temp_rec.txn_equip_raw_cost;



                       end if;
                      /*  L_ACT_COST_TO_DATE_TC := x_txn_brdn_cost_tot;
                       L_ACT_RAWCOST_TO_DATE_TC := x_txn_raw_cost_Tot;*/

                       L_ACT_COST_TO_DATE_TC    := all_objects_in_temp_rec.PRJ_BRDN_COST;
                       L_ACT_RAWCOST_TO_DATE_TC := all_objects_in_temp_rec.PRJ_RAW_COST;



                   end if; --7282850

              end if;  --33
           else  --11 res_list_mem_id is null
              l_object_id := all_objects_in_temp_rec.project_element_id;
              l_object_type := 'PA_TASKS';
              --- here get the planned value if task is lowest level and PC deriv is EFFORT based and no assignments for the task
              if (l_base_pc_deriv_code = 'EFFORT' or l_base_pc_deriv_code = 'COST') and
                 (PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(p_task_version_id => l_object_version_id ) = 'Y') and
                 (PA_PROGRESS_UTILS.check_assignment_exists(l_project_id,l_object_version_id,'PA_TASKS') <> 'Y') then
                 open get_planned_val_for_task;
                 fetch get_planned_val_for_task into l_planned_eff, l_planned_cost;
                 close get_planned_val_for_task;
              end if;
           end if;  --11

           if (l_object_version_id = l_latest_wp_struct_ver_id) then
              l_object_type := 'PA_STRUCTURES';
           end if;
       end if;
       if (l_ignore_rec = 'N') then  --11
         if (l_last_projelemid <> all_objects_in_temp_rec.project_element_id or
          l_object_type <> l_last_object_Type or
          nvl(l_period_flag,'N') <> nvl(l_last_period_flag,'N') or
          (l_object_Type = 'PA_ASSIGNMENTS' and (nvl(l_last_res_list_mem_id,-99) <> nvl(l_new_res_list_member_id,-99)))) then  --22

           -- BEGIN: Changes to take care of period flagged rows from the pji temporary table: pji_fm_xbs_accum_tmp1.

       if (l_object_Type = 'PA_ASSIGNMENTS') then

              -- create a new record in the temp table:
              l_db_case := '0';
          l_t_index := l_t_index + 1;

              t_PROJECT_ID(l_t_index) := l_project_id;
              t_STRUCTURE_VERSION_ID(l_t_index) := l_latest_wp_struct_ver_id;
              t_TASK_ID(l_t_index) := all_objects_in_temp_rec.project_element_id;
              t_RESOURCE_ASSIGNMENT_ID(l_t_index) := l_res_assignment_id;
              t_AS_OF_DATE(l_t_index) := l_temp_as_of_date;
              t_ACTUAL_COST(l_t_index) := L_ACT_COST_TO_DATE_TC;
              if (l_rate_based_flag = 'N') then
                 t_ACTUAL_EFFORT(l_t_index) := (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)) +
                 (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)));
              else
                 t_ACTUAL_EFFORT(l_t_index) := (nvl(all_objects_in_temp_rec.act_labor_hrs,0)+nvl(all_objects_in_temp_rec.act_equip_hrs,0)+
                 (nvl(all_objects_in_temp_rec.quantity,0)-nvl(all_objects_in_temp_rec.act_labor_hrs,0)-nvl(all_objects_in_temp_rec.act_equip_hrs,0)));
              end if;
              t_PERIOD_NAME(l_t_index) := all_objects_in_temp_rec.period_name;
              t_TXN_CURRENCY_CODE(l_t_index) := l_txn_curr_code;
              t_ACTUAL_COST_PC(l_t_index) := nvl(all_objects_in_temp_rec.act_PRJ_BRDN_COST,0);
              t_ACTUAL_COST_FC(l_t_index) := nvl(all_objects_in_temp_rec.act_POU_BRDN_COST,0);
              t_ACTUAL_RAWCOST(l_t_index) := L_ACT_RAWCOST_TO_DATE_TC;
              t_ACTUAL_RAWCOST_PC(l_t_index) := nvl(all_objects_in_temp_rec.act_PRJ_RAW_COST,0);
              t_ACTUAL_RAWCOST_FC(l_t_index) := nvl(all_objects_in_temp_rec.act_POU_RAW_COST,0);
              t_HIDDEN_RES_ASSGN_ID(l_t_index) := l_res_assignment_id;
              t_RESOURCE_LIST_MEMBER_ID(l_t_index) := l_new_res_list_member_id;
              t_CURRENT_FLAG(l_t_index) := 'Y';
              t_OBJECT_TYPE(l_t_index) :=   l_object_type;
              t_PERCENT_COMPLETE_ID(l_t_index) := to_number(null);
              t_track_wp_cost_flag(l_t_index) := l_track_wp_cost_flag;
              t_min_start_date(l_t_index) := all_objects_in_temp_rec.min_start_date;
              t_max_end_date(l_t_index) := all_objects_in_temp_rec.max_end_date;

           end if;

           -- END: Changes to take care of period flagged rows from the pji temporary table: pji_fm_xbs_accum_tmp1.

           open w_rollup_rec_asofdate;
           fetch w_rollup_rec_asofdate into l_w_rollup_rec_asofdate;
           if w_rollup_rec_asofdate%notfound then
              l_working_rec_found := 'N';
           else
              l_working_rec_found := 'Y';
              l_index3 := l_index3 + 1;
              if (p_extraction_type = 'FULL' or p_extraction_type = 'INITIAL') then
                 u_ppl_act_effort_to_date(l_index3) :=0;
                 u_eqpmt_act_effort_to_date(l_index3) :=0;
                 u_oth_qty(l_index3) :=0;
                 u_oth_act_cost_to_date_tc(l_index3) :=0;
                 u_oth_act_rawcost_to_date_tc(l_index3) :=0;
                 u_oth_act_cost_to_date_pc(l_index3) :=0;
                 u_oth_act_rawcost_to_date_pc(l_index3) :=0;
                 u_oth_act_cost_to_date_fc(l_index3) :=0;
                 u_oth_act_rawcost_to_date_fc(l_index3) :=0;
                 u_ppl_act_cost_to_date_tc(l_index3) :=0;
                 u_ppl_act_rawcost_to_date_tc(l_index3) :=0;
                 u_ppl_act_cost_to_date_pc(l_index3) :=0;
                 u_ppl_act_rawcost_to_date_pc(l_index3) :=0;
                 u_ppl_act_cost_to_date_fc(l_index3) :=0;
                 u_ppl_act_rawcost_to_date_fc(l_index3) :=0;
                 u_eqpmt_act_cost_to_date_tc(l_index3) :=0;
                 u_eqpmt_act_rawcost_to_date_tc(l_index3) :=0;
                 u_eqpmt_act_cost_to_date_pc(l_index3) :=0;
                 u_eqpmt_act_rawcost_to_date_pc(l_index3) :=0;
                 u_eqpmt_act_cost_to_date_fc(l_index3) :=0;
                 u_eqpmt_act_rawcost_to_date_fc(l_index3) :=0;
                 u_oth_etc_qty(l_index3) :=0;
                 u_oth_etc_cost_to_date_tc(l_index3) :=0;
                 u_oth_etc_rawcost_to_date_tc(l_index3) :=0;
                 u_oth_etc_cost_to_date_pc(l_index3) :=0;
                 u_oth_etc_rawcost_to_date_pc(l_index3) :=0;
                 u_oth_etc_cost_to_date_fc(l_index3) :=0;
                 u_oth_etc_rawcost_to_date_fc(l_index3) :=0;
                 u_ppl_etc_cost_to_date_tc(l_index3) :=0;
                 u_ppl_etc_rawcost_to_date_tc(l_index3) :=0;
                 u_ppl_etc_cost_to_date_pc(l_index3) :=0;
                 u_ppl_etc_rawcost_to_date_pc(l_index3) :=0;
                 u_ppl_etc_cost_to_date_fc(l_index3) :=0;
                 u_ppl_etc_rawcost_to_date_fc(l_index3) :=0;
                 u_eqpmt_etc_cost_to_date_tc(l_index3) :=0;
                 u_eqpmt_etc_rawcost_to_date_tc(l_index3) :=0;
                 u_eqpmt_etc_cost_to_date_pc(l_index3) :=0;
                 u_eqpmt_etc_rawcost_to_date_pc(l_index3) :=0;
                 u_eqpmt_etc_cost_to_date_fc(l_index3) :=0;
                 u_eqpmt_etc_rawcost_to_date_fc(l_index3) :=0;
              else
                 u_ppl_act_effort_to_date(l_index3) :=l_w_rollup_rec_asofdate.ppl_act_effort_to_date;
                 u_eqpmt_act_effort_to_date(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_act_effort_to_date;
                 u_oth_qty(l_index3) :=l_w_rollup_rec_asofdate.oth_quantity_to_date;
                 u_oth_act_cost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.oth_act_cost_to_date_tc;
                 u_oth_act_rawcost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.oth_act_rawcost_to_date_tc;
                 u_oth_act_cost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.oth_act_cost_to_date_pc;
                 u_oth_act_rawcost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.oth_act_rawcost_to_date_pc;
                 u_oth_act_cost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.oth_act_cost_to_date_fc;
                 u_oth_act_rawcost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.oth_act_rawcost_to_date_fc;
                 u_ppl_act_cost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.ppl_act_cost_to_date_tc;
                 u_ppl_act_rawcost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.ppl_act_rawcost_to_date_tc;
                 u_ppl_act_cost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.ppl_act_cost_to_date_pc;
                 u_ppl_act_rawcost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.ppl_act_rawcost_to_date_pc;
                 u_ppl_act_cost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.ppl_act_cost_to_date_fc;
                 u_ppl_act_rawcost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.ppl_act_rawcost_to_date_fc;
                 u_eqpmt_act_cost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_act_cost_to_date_tc;
                 u_eqpmt_act_rawcost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_act_rawcost_to_date_tc;
                 u_eqpmt_act_cost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_act_cost_to_date_pc;
                 u_eqpmt_act_rawcost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_act_rawcost_to_date_pc;
                 u_eqpmt_act_cost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_act_cost_to_date_fc;
                 u_eqpmt_act_rawcost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_act_rawcost_to_date_fc;
                 u_oth_etc_qty(l_index3) :=l_w_rollup_rec_asofdate.oth_etc_quantity;
                 u_oth_etc_cost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.oth_etc_cost_tc;
                 u_oth_etc_rawcost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.oth_etc_rawcost_tc;
                 u_oth_etc_cost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.oth_etc_cost_pc;
                 u_oth_etc_rawcost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.oth_etc_rawcost_pc;
                 u_oth_etc_cost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.oth_etc_cost_fc;
                 u_oth_etc_rawcost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.oth_etc_rawcost_fc;
                 u_ppl_etc_cost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.ppl_etc_cost_tc;
                 u_ppl_etc_rawcost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.ppl_etc_rawcost_tc;
                 u_ppl_etc_cost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.ppl_etc_cost_pc;
                 u_ppl_etc_rawcost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.ppl_etc_rawcost_pc;
                 u_ppl_etc_cost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.ppl_etc_cost_fc;
                 u_ppl_etc_rawcost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.ppl_etc_rawcost_fc;
                 u_eqpmt_etc_cost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_etc_cost_tc;
                 u_eqpmt_etc_rawcost_to_date_tc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
                 u_eqpmt_etc_cost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_etc_cost_pc;
                 u_eqpmt_etc_rawcost_to_date_pc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
                 u_eqpmt_etc_cost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_etc_cost_fc;
                 u_eqpmt_etc_rawcost_to_date_fc(l_index3) :=l_w_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
              end if;
           end if;
           close w_rollup_rec_asofdate;

           -- End fix for bug # 4041048.

           open rollup_rec_asofdate;
           fetch rollup_rec_asofdate into l_rollup_rec_asofdate;
           if rollup_rec_asofdate%notfound then   --44
              --- if it is an assignment rec we should check if it is
              --- already processed or not. if it is then just update for that index
              --- and reset the index back
              l_temp_index2 := l_index2;
              l_init_vars := 'Y';
              if l_object_Type = 'PA_ASSIGNMENTS' and l_index2 > 0 then
                 --- find the assignment
                 l_index2 := 1;
                 loop
                    if project_id(l_index2) = l_project_id and
                    object_id(l_index2) = l_object_id and
                    object_type(l_index2) = l_object_Type and
                    proj_element_id(l_index2) = l_task_id  then
                       l_init_vars := 'N';
                       exit;
                    end if;
                    if l_index2 >= l_temp_index2 then
                       exit;
                    end if;
                    l_index2 := l_index2 + 1;
                 end loop;
                 l_index_etc := l_index_etc + 1;
              elsif l_object_Type = 'PA_ASSIGNMENTS' and l_index2 = 0 then
                 l_index_etc := l_index_etc + 1;
              end if;
              --- set l_index2 to index of found assignment
              if l_index2 >= l_temp_index2 or l_object_Type <> 'PA_ASSIGNMENTS' or l_index2 = 0 then
                 l_index2 := l_index2 + 1;
                 l_temp_index2 := l_index2;
                 l_db_case := '1';
                 if (l_init_vars = 'Y') then
                    ppl_act_effort_to_date(l_index2) :=0;
                    eqpmt_act_effort_to_date(l_index2) :=0;
                    oth_qty(l_index2) :=0;
                    oth_act_cost_to_date_tc(l_index2) :=0;
                    oth_act_rawcost_to_date_tc(l_index2) :=0;
                    oth_act_cost_to_date_pc(l_index2) :=0;
                    oth_act_rawcost_to_date_pc(l_index2) :=0;
                    oth_act_cost_to_date_fc(l_index2) :=0;
                    oth_act_rawcost_to_date_fc(l_index2) :=0;
                    ppl_act_cost_to_date_tc(l_index2) :=0;
                    ppl_act_rawcost_to_date_tc(l_index2) :=0;
                    ppl_act_cost_to_date_pc(l_index2) :=0;
                    ppl_act_rawcost_to_date_pc(l_index2) :=0;
                    ppl_act_cost_to_date_fc(l_index2) :=0;
                    ppl_act_rawcost_to_date_fc(l_index2) :=0;
                    eqpmt_act_cost_to_date_tc(l_index2) :=0;
                    eqpmt_act_rawcost_to_date_tc(l_index2) :=0;
                    eqpmt_act_cost_to_date_pc(l_index2) :=0;
                    eqpmt_act_rawcost_to_date_pc(l_index2) :=0;
                    eqpmt_act_cost_to_date_fc(l_index2) :=0;
                    eqpmt_act_rawcost_to_date_fc(l_index2) :=0;
                 end if;
              end if;
           else   --44
              if trunc(l_rollup_rec_asofdate.as_of_Date) = trunc(l_temp_as_of_date) then --55
                 l_index3 := l_index3 + 1;
                 if (l_object_Type = 'PA_ASSIGNMENTS') then
                    l_index_etc := l_index_etc + 1;
                 end if;
                 l_db_case := '2';
                 if (p_extraction_type = 'FULL' or p_extraction_type = 'INITIAL') then
                    u_ppl_act_effort_to_date(l_index3) :=0;
                    u_eqpmt_act_effort_to_date(l_index3) :=0;
                    u_oth_qty(l_index3) :=0;
                    u_oth_act_cost_to_date_tc(l_index3) :=0;
                    u_oth_act_rawcost_to_date_tc(l_index3) :=0;
                    u_oth_act_cost_to_date_pc(l_index3) :=0;
                    u_oth_act_rawcost_to_date_pc(l_index3) :=0;
                    u_oth_act_cost_to_date_fc(l_index3) :=0;
                    u_oth_act_rawcost_to_date_fc(l_index3) :=0;
                    u_ppl_act_cost_to_date_tc(l_index3) :=0;
                    u_ppl_act_rawcost_to_date_tc(l_index3) :=0;
                    u_ppl_act_cost_to_date_pc(l_index3) :=0;
                    u_ppl_act_rawcost_to_date_pc(l_index3) :=0;
                    u_ppl_act_cost_to_date_fc(l_index3) :=0;
                    u_ppl_act_rawcost_to_date_fc(l_index3) :=0;
                    u_eqpmt_act_cost_to_date_tc(l_index3) :=0;
                    u_eqpmt_act_rawcost_to_date_tc(l_index3) :=0;
                    u_eqpmt_act_cost_to_date_pc(l_index3) :=0;
                    u_eqpmt_act_rawcost_to_date_pc(l_index3) :=0;
                    u_eqpmt_act_cost_to_date_fc(l_index3) :=0;
                    u_eqpmt_act_rawcost_to_date_fc(l_index3) :=0;
                    u_oth_etc_qty(l_index3) :=0;
                    u_oth_etc_cost_to_date_tc(l_index3) :=0;
                    u_oth_etc_rawcost_to_date_tc(l_index3) :=0;
                    u_oth_etc_cost_to_date_pc(l_index3) :=0;
                    u_oth_etc_rawcost_to_date_pc(l_index3) :=0;
                    u_oth_etc_cost_to_date_fc(l_index3) :=0;
                    u_oth_etc_rawcost_to_date_fc(l_index3) :=0;
                    u_ppl_etc_cost_to_date_tc(l_index3) :=0;
                    u_ppl_etc_rawcost_to_date_tc(l_index3) :=0;
                    u_ppl_etc_cost_to_date_pc(l_index3) :=0;
                    u_ppl_etc_rawcost_to_date_pc(l_index3) :=0;
                    u_ppl_etc_cost_to_date_fc(l_index3) :=0;
                    u_ppl_etc_rawcost_to_date_fc(l_index3) :=0;
                    u_eqpmt_etc_cost_to_date_tc(l_index3) :=0;
                    u_eqpmt_etc_rawcost_to_date_tc(l_index3) :=0;
                    u_eqpmt_etc_cost_to_date_pc(l_index3) :=0;
                    u_eqpmt_etc_rawcost_to_date_pc(l_index3) :=0;
                    u_eqpmt_etc_cost_to_date_fc(l_index3) :=0;
                    u_eqpmt_etc_rawcost_to_date_fc(l_index3) :=0;
                 else
                    u_ppl_act_effort_to_date(l_index3) :=l_rollup_rec_asofdate.ppl_act_effort_to_date;
                    u_eqpmt_act_effort_to_date(l_index3) :=l_rollup_rec_asofdate.eqpmt_act_effort_to_date;
                    u_oth_qty(l_index3) :=l_rollup_rec_asofdate.oth_quantity_to_date;
                    u_oth_act_cost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.oth_act_cost_to_date_tc;
                    u_oth_act_rawcost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.oth_act_rawcost_to_date_tc;
                    u_oth_act_cost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.oth_act_cost_to_date_pc;
                    u_oth_act_rawcost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.oth_act_rawcost_to_date_pc;
                    u_oth_act_cost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.oth_act_cost_to_date_fc;
                    u_oth_act_rawcost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.oth_act_rawcost_to_date_fc;
                    u_ppl_act_cost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.ppl_act_cost_to_date_tc;
                    u_ppl_act_rawcost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.ppl_act_rawcost_to_date_tc;
                    u_ppl_act_cost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.ppl_act_cost_to_date_pc;
                    u_ppl_act_rawcost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.ppl_act_rawcost_to_date_pc;
                    u_ppl_act_cost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.ppl_act_cost_to_date_fc;
                    u_ppl_act_rawcost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.ppl_act_rawcost_to_date_fc;
                    u_eqpmt_act_cost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.eqpmt_act_cost_to_date_tc;
                    u_eqpmt_act_rawcost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.eqpmt_act_rawcost_to_date_tc;
                    u_eqpmt_act_cost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.eqpmt_act_cost_to_date_pc;
                    u_eqpmt_act_rawcost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.eqpmt_act_rawcost_to_date_pc;
                    u_eqpmt_act_cost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.eqpmt_act_cost_to_date_fc;
                    u_eqpmt_act_rawcost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.eqpmt_act_rawcost_to_date_fc;
                    u_oth_etc_qty(l_index3) :=l_rollup_rec_asofdate.oth_etc_quantity;
                    u_oth_etc_cost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.oth_etc_cost_tc;
                    u_oth_etc_rawcost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.oth_etc_rawcost_tc;
                    u_oth_etc_cost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.oth_etc_cost_pc;
                    u_oth_etc_rawcost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.oth_etc_rawcost_pc;
                    u_oth_etc_cost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.oth_etc_cost_fc;
                    u_oth_etc_rawcost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.oth_etc_rawcost_fc;
                    u_ppl_etc_cost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.ppl_etc_cost_tc;
                    u_ppl_etc_rawcost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.ppl_etc_rawcost_tc;
                    u_ppl_etc_cost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.ppl_etc_cost_pc;
                    u_ppl_etc_rawcost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.ppl_etc_rawcost_pc;
                    u_ppl_etc_cost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.ppl_etc_cost_fc;
                    u_ppl_etc_rawcost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.ppl_etc_rawcost_fc;
                    u_eqpmt_etc_cost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.eqpmt_etc_cost_tc;
                    u_eqpmt_etc_rawcost_to_date_tc(l_index3) :=l_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
                    u_eqpmt_etc_cost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.eqpmt_etc_cost_pc;
                    u_eqpmt_etc_rawcost_to_date_pc(l_index3) :=l_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
                    u_eqpmt_etc_cost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.eqpmt_etc_cost_fc;
                    u_eqpmt_etc_rawcost_to_date_fc(l_index3) :=l_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
                 end if;
              else  --55
                 --- if it is an assignment rec we should check if it is
                 --- already processed or not. if it is, just update for that index
                 --- and reset the index back
                 l_temp_index2 := l_index2;
                 l_init_vars := 'Y';
                 if l_object_Type = 'PA_ASSIGNMENTS' and l_index2 > 0 then
                    --- find the assignment
                    l_index2 := 1;
                    loop
                       if project_id(l_index2) = l_project_id and
                       object_id(l_index2) = l_object_id and
                       OBJECT_TYPE(l_index2) = l_object_Type and
                       proj_element_id(l_index2) = l_task_id  then
                          l_init_vars := 'N';
                          exit;
                       end if;
                       if l_index2 >= l_temp_index2 then
                          exit;
                       end if;
                       l_index2 := l_index2 + 1;
                    end loop;
                    l_index_etc := l_index_etc + 1;
                 elsif l_object_Type = 'PA_ASSIGNMENTS' and l_index2 = 0 then
                    l_index_etc := l_index_etc + 1;
                 end if;
                 --- set l_index2 to index of found assignment
                 if l_index2 >= l_temp_index2 or l_object_Type <> 'PA_ASSIGNMENTS' or l_index2 = 0 then
                    l_index2 := l_index2 + 1;
                    l_temp_index2 := l_index2;
                    l_db_case := '3';
                    if (l_init_vars = 'Y' and (p_extraction_type = 'FULL' or p_extraction_type = 'INITIAL')) then
                       ppl_act_effort_to_date(l_index2) :=0;
                       eqpmt_act_effort_to_date(l_index2) :=0;
                       oth_qty(l_index2) := 0;
                       oth_act_cost_to_date_tc(l_index2) :=0;
                       oth_act_rawcost_to_date_tc(l_index2) :=0;
                       oth_act_cost_to_date_pc(l_index2) := 0;
                       oth_act_rawcost_to_date_pc(l_index2) := 0;
                       oth_act_cost_to_date_fc(l_index2) := 0;
                       oth_act_rawcost_to_date_fc(l_index2) := 0;
                       ppl_act_cost_to_date_tc(l_index2) :=0;
                       ppl_act_rawcost_to_date_tc(l_index2) :=0;
                       ppl_act_cost_to_date_pc(l_index2) :=0;
                       ppl_act_rawcost_to_date_pc(l_index2) :=0;
                       ppl_act_cost_to_date_fc(l_index2) :=0;
                       ppl_act_rawcost_to_date_fc(l_index2) :=0;
                       eqpmt_act_cost_to_date_tc(l_index2) :=0;
                       eqpmt_act_rawcost_to_date_tc(l_index2) :=0;
                       eqpmt_act_cost_to_date_pc(l_index2) :=0;
                       eqpmt_act_rawcost_to_date_pc(l_index2) :=0;
                       eqpmt_act_cost_to_date_fc(l_index2) :=0;
                       eqpmt_act_rawcost_to_date_fc(l_index2) :=0;
                    elsif (l_init_vars = 'Y') then
                       ppl_act_effort_to_date(l_index2) :=l_rollup_rec_asofdate.ppl_act_effort_to_date;
                       eqpmt_act_effort_to_date(l_index2) :=l_rollup_rec_asofdate.eqpmt_act_effort_to_date;
                       oth_qty(l_index2) := l_rollup_rec_asofdate.oth_quantity_to_date;
                       oth_act_cost_to_date_tc(l_index2) :=l_rollup_rec_asofdate.oth_act_cost_to_date_tc;
                       oth_act_rawcost_to_date_tc(l_index2) :=l_rollup_rec_asofdate.oth_act_rawcost_to_date_tc;
                       oth_act_cost_to_date_pc(l_index2) := l_rollup_rec_asofdate.oth_act_cost_to_date_pc;
                       oth_act_rawcost_to_date_pc(l_index2) := l_rollup_rec_asofdate.oth_act_rawcost_to_date_pc;
                       oth_act_cost_to_date_fc(l_index2) := l_rollup_rec_asofdate.oth_act_cost_to_date_fc;
                       oth_act_rawcost_to_date_fc(l_index2) := l_rollup_rec_asofdate.oth_act_rawcost_to_date_fc;
                       ppl_act_cost_to_date_tc(l_index2) :=l_rollup_rec_asofdate.ppl_act_cost_to_date_tc;
                       ppl_act_rawcost_to_date_tc(l_index2) :=l_rollup_rec_asofdate.ppl_act_rawcost_to_date_tc;
                       ppl_act_cost_to_date_pc(l_index2) :=l_rollup_rec_asofdate.ppl_act_cost_to_date_pc;
                       ppl_act_rawcost_to_date_pc(l_index2) :=l_rollup_rec_asofdate.ppl_act_rawcost_to_date_pc;
                       ppl_act_cost_to_date_fc(l_index2) :=l_rollup_rec_asofdate.ppl_act_cost_to_date_fc;
                       ppl_act_rawcost_to_date_fc(l_index2) :=l_rollup_rec_asofdate.ppl_act_rawcost_to_date_fc;
                       eqpmt_act_cost_to_date_tc(l_index2) :=l_rollup_rec_asofdate.eqpmt_act_cost_to_date_tc;
                       eqpmt_act_rawcost_to_date_tc(l_index2) :=l_rollup_rec_asofdate.eqpmt_act_rawcost_to_date_tc;
                       eqpmt_act_cost_to_date_pc(l_index2) :=l_rollup_rec_asofdate.eqpmt_act_cost_to_date_pc;
                       eqpmt_act_rawcost_to_date_pc(l_index2) :=l_rollup_rec_asofdate.eqpmt_act_rawcost_to_date_pc;
                       eqpmt_act_cost_to_date_fc(l_index2) :=l_rollup_rec_asofdate.eqpmt_act_cost_to_date_fc;
                       eqpmt_act_rawcost_to_date_fc(l_index2) :=l_rollup_rec_asofdate.eqpmt_act_rawcost_to_date_fc;
                    end if;
                 end if;   --55
              end if;  --44
           end if;  --33
           close rollup_rec_asofdate;
        else --22
           if (l_period_flag = 'Y') then
              -- or (l_plan_type = 'N' and l_object_Type = 'PA_ASSIGNMENTS')) then
              -- Check if the period name is the same as the current record.
              if (t_period_name(l_t_index) <> all_objects_in_temp_rec.period_name) then
             -- create a new record in the temp table:
                 l_t_index := l_t_index + 1;
                 t_PROJECT_ID(l_t_index) := l_project_id;
                 t_STRUCTURE_VERSION_ID(l_t_index) := l_latest_wp_struct_ver_id;
                 t_TASK_ID(l_t_index) := all_objects_in_temp_rec.project_element_id;
                 t_RESOURCE_ASSIGNMENT_ID(l_t_index) := l_res_assignment_id;
                 t_AS_OF_DATE(l_t_index) := l_temp_as_of_date;
                 t_ACTUAL_COST(l_t_index) := L_ACT_COST_TO_DATE_TC;
                 if (l_rate_based_flag = 'N') then
                    t_ACTUAL_EFFORT(l_t_index) := (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)) +
                    (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)));
                 else
                    t_ACTUAL_EFFORT(l_t_index) := (nvl(all_objects_in_temp_rec.act_labor_hrs,0)+nvl(all_objects_in_temp_rec.act_equip_hrs,0)+
                    (nvl(all_objects_in_temp_rec.quantity,0)-nvl(all_objects_in_temp_rec.act_labor_hrs,0)-nvl(all_objects_in_temp_rec.act_equip_hrs,0)));
                 end if;
                 t_PERIOD_NAME(l_t_index) := all_objects_in_temp_rec.period_name;
                 t_TXN_CURRENCY_CODE(l_t_index) := l_txn_curr_code;
                 t_ACTUAL_COST_PC(l_t_index) := nvl(all_objects_in_temp_rec.act_PRJ_BRDN_COST,0);
                 t_ACTUAL_COST_FC(l_t_index) := nvl(all_objects_in_temp_rec.act_POU_BRDN_COST,0);
                 t_ACTUAL_RAWCOST(l_t_index) := L_ACT_RAWCOST_TO_DATE_TC;
                 t_ACTUAL_RAWCOST_PC(l_t_index) := nvl(all_objects_in_temp_rec.act_PRJ_RAW_COST,0);
                 t_ACTUAL_RAWCOST_FC(l_t_index) := nvl(all_objects_in_temp_rec.act_POU_RAW_COST,0);
                 t_HIDDEN_RES_ASSGN_ID(l_t_index) := l_res_assignment_id;
                 t_RESOURCE_LIST_MEMBER_ID(l_t_index) := l_new_res_list_member_id;
                 t_CURRENT_FLAG(l_t_index) := 'Y';
                 t_OBJECT_TYPE(l_t_index) := l_object_type;
                 t_PERCENT_COMPLETE_ID(l_t_index) := to_number(null);
                 t_track_wp_cost_flag(l_t_index) := l_track_wp_cost_flag;
                 t_min_start_date(l_t_index) := all_objects_in_temp_rec.min_start_date;
                 t_max_end_date(l_t_index) := all_objects_in_temp_rec.max_end_date;

              else

                 -- Update the current record in the temp table.

                 t_AS_OF_DATE(l_t_index) := l_temp_as_of_date;
                 t_ACTUAL_COST(l_t_index) := (t_ACTUAL_COST(l_t_index) + L_ACT_COST_TO_DATE_TC);
                 if (l_rate_based_flag = 'N') then
                     t_ACTUAL_EFFORT(l_t_index) := t_ACTUAL_EFFORT(l_t_index) + (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)) +
                     (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)));
                 else
                     t_ACTUAL_EFFORT(l_t_index) := t_ACTUAL_EFFORT(l_t_index) + (nvl(all_objects_in_temp_rec.act_labor_hrs,0)+nvl(all_objects_in_temp_rec.act_equip_hrs,0)+
                     (nvl(all_objects_in_temp_rec.quantity,0)-nvl(all_objects_in_temp_rec.act_labor_hrs,0)-nvl(all_objects_in_temp_rec.act_equip_hrs,0)));
                 end if;
                 t_PERIOD_NAME(l_t_index) := all_objects_in_temp_rec.period_name;
                 t_TXN_CURRENCY_CODE(l_t_index) := l_txn_curr_code;
                 t_ACTUAL_COST_PC(l_t_index) := (t_ACTUAL_COST_PC(l_t_index) + nvl(all_objects_in_temp_rec.act_PRJ_BRDN_COST,0));
                 t_ACTUAL_COST_FC(l_t_index) := (t_ACTUAL_COST_FC(l_t_index) + nvl(all_objects_in_temp_rec.act_POU_BRDN_COST,0));
                 t_ACTUAL_RAWCOST(l_t_index) := (t_ACTUAL_RAWCOST(l_t_index) + L_ACT_RAWCOST_TO_DATE_TC);
                 t_ACTUAL_RAWCOST_PC(l_t_index) := (t_ACTUAL_RAWCOST_PC(l_t_index) + nvl(all_objects_in_temp_rec.act_PRJ_RAW_COST,0));
                 t_ACTUAL_RAWCOST_FC(l_t_index) := (t_ACTUAL_RAWCOST_FC(l_t_index) + nvl(all_objects_in_temp_rec.act_POU_RAW_COST,0));
                 t_HIDDEN_RES_ASSGN_ID(l_t_index) := l_res_assignment_id;
                 t_RESOURCE_LIST_MEMBER_ID(l_t_index) :=    l_new_res_list_member_id;
                 t_CURRENT_FLAG(l_t_index) := 'Y';
                 t_track_wp_cost_flag(l_t_index) := l_track_wp_cost_flag;
              end if;
           end if;
        end if; -- 44

    -- Begin fix for bug # 4041048.
        if (l_working_rec_found = 'Y') then
          --- update working record on that date
          l_working_rec_found := 'N';
          if (l_db_case = '2') then
             l_index3 := l_index3 - 1;
          end if;
          u_actual_finish_date(l_index3) := l_w_rollup_rec_asofdate.actual_finish_date;
          u_earned_val(l_index3) := l_earned_val;
          u_progress_rollup_id(l_index3) := l_w_rollup_rec_asofdate.progress_rollup_id;
          u_object_version_id(l_index3) := l_object_version_id;
          if (l_object_Type = 'PA_ASSIGNMENTS') then
             if (l_rate_based_flag = 'N') then
                u_oth_qty(l_index3) := nvl(u_oth_qty(l_index3),0) + (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)));
             else
                u_oth_qty(l_index3) := nvl(u_oth_qty(l_index3),0) + nvl(all_objects_in_temp_rec.quantity,0) - nvl(all_objects_in_temp_rec.act_labor_hrs,0) - nvl(all_objects_in_temp_rec.act_equip_hrs,0);
             end if;
          end if;
          u_oth_act_cost_to_date_tc(l_index3) := nvl(u_oth_act_cost_to_date_tc(l_index3),0) + (nvl(L_ACT_COST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_COST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_COST_TO_DATE_TC,0)));
          u_oth_act_rawcost_to_date_tc(l_index3) := nvl(u_oth_act_rawcost_to_date_tc(l_index3),0) + (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)));
          u_oth_act_cost_to_date_pc(l_index3) := nvl(u_oth_act_cost_to_date_pc(l_index3),0) + (nvl(all_objects_in_temp_rec.act_prj_brdn_cost,0) - (nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0)
                   + nvl(all_objects_in_temp_rec.act_prj_equip_brdn_cost,0)));
          u_oth_act_rawcost_to_date_pc(l_index3) := nvl(u_oth_act_rawcost_to_date_pc(l_index3),0) + (nvl(all_objects_in_temp_rec.act_prj_raw_cost,0) - (nvl(all_objects_in_temp_rec.act_prj_labor_raw_cost,0)
                   + nvl(all_objects_in_temp_rec.act_prj_equip_raw_cost,0)));
          u_oth_act_cost_to_date_fc(l_index3) := nvl(u_oth_act_cost_to_date_fc(l_index3),0) + (nvl(all_objects_in_temp_rec.act_pou_brdn_cost,0) - (nvl(all_objects_in_temp_rec.act_pou_labor_brdn_cost,0)
                   + nvl(all_objects_in_temp_rec.act_pou_equip_brdn_cost,0)));
          u_oth_act_rawcost_to_date_fc(l_index3) := nvl(u_oth_act_rawcost_to_date_fc(l_index3),0) + (nvl(all_objects_in_temp_rec.act_pou_raw_cost,0) - (nvl(all_objects_in_temp_rec.act_pou_labor_raw_cost,0)
                   + nvl(all_objects_in_temp_rec.act_pou_equip_raw_cost,0)));
          u_oth_etc_qty(l_index3) := l_w_rollup_rec_asofdate.oth_etc_quantity;
          u_OTH_ETC_COST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.OTH_ETC_COST_TC;
          u_OTH_ETC_RAWCOST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.OTH_ETC_RAWCOST_TC;
          u_OTH_ETC_COST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.OTH_ETC_COST_FC;
          u_OTH_ETC_RAWCOST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.OTH_ETC_RAWCOST_FC;
          u_OTH_ETC_COST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.OTH_ETC_COST_PC;
          u_OTH_ETC_RAWCOST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.OTH_ETC_RAWCOST_PC;
          if l_object_type = 'PA_ASSIGNMENTS' and
             l_res_class_code in ('FINANCIAL_ELEMENTS', 'MATERIAL_ITEMS') then
              ---5726773
	      if (pa_progress_utils.check_etc_overridden(l_asgn_plan_quantity,l_w_rollup_rec_asofdate.oth_quantity_to_date,l_w_rollup_rec_asofdate.oth_etc_quantity) = 'N') then
                 u_oth_etc_qty(l_index3) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,u_oth_qty(l_index3));
 	         if (u_oth_etc_qty(l_index3) <> 0) then
                    u_oth_etc_qty(l_index3) := l_asgn_plan_quantity - u_oth_qty(l_index3);
                    pa_progress_utils.get_plan_costs_for_qty
                    ( p_resource_list_mem_id  => l_object_id
                     ,p_project_id            => l_project_id
                     ,p_task_id               => all_objects_in_temp_rec.project_element_id
                     ,p_as_of_date            => l_temp_as_of_date
                     ,p_structure_version_id  => l_latest_wp_struct_ver_id
                     ,p_txn_currency_code     => l_txn_curr_code
                     ,p_rate_based_flag       => l_rate_based_flag
                     ,p_quantity              => u_oth_etc_qty(l_index3)
                     ,p_budget_version_id     => l_plan_version_id --4372462
                     ,p_res_assignment_id     => l_res_assignment_id
                     ,x_rawcost_tc            => u_OTH_ETC_RAWCOST_to_date_TC(l_index3)
                     ,x_brdncost_tc           => u_OTH_ETC_COST_to_date_TC(l_index3)
                     ,x_rawcost_pc            => u_OTH_ETC_RAWCOST_to_date_PC(l_index3)
                     ,x_brdncost_pc           => u_OTH_ETC_COST_to_date_PC(l_index3)
                     ,x_rawcost_fc            => u_OTH_ETC_RAWCOST_to_date_FC(l_index3)
                     ,x_brdncost_fc           => u_OTH_ETC_COST_to_date_FC(l_index3)
                     ,x_return_status         => x_return_status
                     ,x_msg_count             => x_msg_count
                     ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then -- bug 6712595
                        if (u_OTH_ETC_RAWCOST_to_date_TC(l_index3) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    u_actual_finish_date(l_index3) := to_date(null);
                 else
                    u_oth_etc_qty(l_index3) := 0;
                    u_OTH_ETC_COST_to_date_TC(l_index3) := 0;
                    u_OTH_ETC_RAWCOST_to_date_TC(l_index3) := 0;
                    u_OTH_ETC_COST_to_date_FC(l_index3) := 0;
                    u_OTH_ETC_RAWCOST_to_date_FC(l_index3) := 0;
                    u_OTH_ETC_COST_to_date_PC(l_index3) := 0;
                    u_OTH_ETC_RAWCOST_to_date_PC(l_index3) := 0;
                    u_actual_finish_date(l_index3) := l_asgn_sch_finish_date;
                 end if;
              else
                 u_oth_etc_qty(l_index3) := l_w_rollup_rec_asofdate.oth_etc_quantity;
                 u_OTH_ETC_COST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.oth_etc_cost_tc;
                 u_OTH_ETC_RAWCOST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.oth_etc_rawcost_tc;
                 u_OTH_ETC_COST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.oth_etc_cost_fc;
                 u_OTH_ETC_RAWCOST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.oth_etc_rawcost_fc;
                 u_OTH_ETC_COST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.oth_etc_cost_pc;
                 u_OTH_ETC_RAWCOST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.oth_etc_rawcost_pc;
                 u_actual_finish_date(l_index3) := l_w_rollup_rec_asofdate.actual_finish_date;
              end if;
          end if;
          u_ppl_act_effort_to_date(l_index3) := nvl(u_ppl_act_effort_to_date(l_index3),0) + nvl(all_objects_in_temp_rec.act_labor_hrs,0);
          u_ppl_act_cost_to_date_tc(l_index3) := nvl(u_ppl_act_cost_to_date_tc(l_index3),0) + nvl(l_ppl_act_cost_to_date_tc,0);
          u_ppl_act_rawcost_to_date_tc(l_index3) := nvl(u_ppl_act_rawcost_to_date_tc(l_index3),0) + nvl(l_ppl_act_rawcost_to_date_tc,0);
          u_ppl_act_cost_to_date_pc(l_index3) := nvl(u_ppl_act_cost_to_date_pc(l_index3),0) + nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0);
          u_ppl_act_rawcost_to_date_pc(l_index3) := nvl(u_ppl_act_rawcost_to_date_pc(l_index3),0) + nvl(all_objects_in_temp_rec.act_prj_labor_raw_cost,0);
          u_ppl_act_cost_to_date_fc(l_index3) := nvl(u_ppl_act_cost_to_date_fc(l_index3),0) + nvl(all_objects_in_temp_rec.act_pou_labor_brdn_cost,0);
          u_ppl_act_rawcost_to_date_fc(l_index3) := nvl(u_ppl_act_rawcost_to_date_fc(l_index3),0) + nvl(all_objects_in_temp_rec.act_pou_labor_raw_cost,0);
          u_ppl_etc_effort_to_date(l_index3) := l_w_rollup_rec_asofdate.estimated_remaining_effort;
          u_ppl_ETC_COST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_cost_tc;
          u_ppl_ETC_RAWCOST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_rawcost_tc;
          u_ppl_ETC_COST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_cost_fc;
          u_ppl_ETC_RAWCOST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_rawcost_fc;
          u_ppl_ETC_COST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_cost_pc;
          u_ppl_ETC_RAWCOST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_rawcost_pc;
          if l_object_type = 'PA_ASSIGNMENTS' and
             l_res_class_code = 'PEOPLE' then
              ---5726773
	      if (pa_progress_utils.check_etc_overridden(l_asgn_plan_quantity,l_w_rollup_rec_asofdate.ppl_act_effort_to_date,l_w_rollup_rec_asofdate.estimated_remaining_effort) = 'N') then
                 u_ppl_etc_effort_to_date(l_index3) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,u_ppl_act_effort_to_date(l_index3));
 	         if (u_ppl_etc_effort_to_date(l_index3) <> 0) then
                    pa_progress_utils.get_plan_costs_for_qty
                    (p_resource_list_mem_id  => l_object_id
                    ,p_project_id            => l_project_id
                    ,p_task_id               => all_objects_in_temp_rec.project_element_id
                    ,p_as_of_date            => l_temp_as_of_date
                    ,p_structure_version_id  => l_latest_wp_struct_ver_id
                    ,p_txn_currency_code     => l_txn_curr_code
                    ,p_rate_based_flag       => l_rate_based_flag
                    ,p_quantity              => u_ppl_etc_effort_to_date(l_index3)
                    ,p_budget_version_id     => l_plan_version_id --4372462
                    ,p_res_assignment_id     => l_res_assignment_id
                    ,x_rawcost_tc            => u_ppl_ETC_RAWCOST_to_date_TC(l_index3)
                    ,x_brdncost_tc           => u_ppl_ETC_COST_to_date_TC(l_index3)
                    ,x_rawcost_pc            => u_ppl_ETC_RAWCOST_to_date_PC(l_index3)
                    ,x_brdncost_pc           => u_ppl_ETC_COST_to_date_PC(l_index3)
                    ,x_rawcost_fc            => u_ppl_ETC_RAWCOST_to_date_FC(l_index3)
                    ,x_brdncost_fc           => u_ppl_ETC_COST_to_date_FC(l_index3)
                    ,x_return_status         => x_return_status
                    ,x_msg_count             => x_msg_count
                    ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then  -- bug 6712595
                        if (u_ppl_ETC_RAWCOST_to_date_TC(l_index3) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
                    u_actual_finish_date(l_index3) := to_date(null);
                 else
                    u_ppl_etc_effort_to_date(l_index3) := 0;
                    u_ppl_ETC_COST_to_date_TC(l_index3) := 0;
                    u_ppl_ETC_RAWCOST_to_date_TC(l_index3) := 0;
                    u_ppl_ETC_COST_to_date_FC(l_index3) := 0;
                    u_ppl_ETC_RAWCOST_to_date_FC(l_index3) := 0;
                    u_ppl_ETC_COST_to_date_PC(l_index3) := 0;
                    u_ppl_ETC_RAWCOST_to_date_PC(l_index3) := 0;
                    u_actual_finish_date(l_index3) := l_asgn_sch_finish_date;
                 end if;
              else
                 u_ppl_etc_effort_to_date(l_index3) := l_w_rollup_rec_asofdate.estimated_remaining_effort;
                 u_ppl_ETC_COST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_cost_tc;
                 u_ppl_ETC_RAWCOST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_rawcost_tc;
                 u_ppl_ETC_COST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_cost_fc;
                 u_ppl_ETC_RAWCOST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_rawcost_fc;
                 u_ppl_ETC_COST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_cost_pc;
                 u_ppl_ETC_RAWCOST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.ppl_etc_rawcost_pc;
                 u_actual_finish_date(l_index3) := l_w_rollup_rec_asofdate.actual_finish_date;
              end if;
          end if;
          u_eqpmt_act_effort_to_date(l_index3) := nvl(u_eqpmt_act_effort_to_date(l_index3),0) + nvl(all_objects_in_temp_rec.act_equip_hrs,0);
          u_eqpmt_act_cost_to_date_tc(l_index3) := nvl(u_eqpmt_act_cost_to_date_tc(l_index3),0) + nvl(l_eqpmt_act_cost_to_date_tc,0);
          u_eqpmt_act_rawcost_to_date_tc(l_index3) := nvl(u_eqpmt_act_rawcost_to_date_tc(l_index3),0) + nvl(l_eqpmt_act_rawcost_to_date_tc,0);
          u_eqpmt_act_cost_to_date_pc(l_index3) := nvl(u_eqpmt_act_cost_to_date_pc(l_index3),0) + nvl(all_objects_in_temp_rec.act_prj_equip_brdn_cost,0);
          u_eqpmt_act_rawcost_to_date_pc(l_index3) := nvl(u_eqpmt_act_rawcost_to_date_pc(l_index3),0) + nvl(all_objects_in_temp_rec.act_prj_equip_raw_cost,0);
          u_eqpmt_act_cost_to_date_fc(l_index3) := nvl(u_eqpmt_act_cost_to_date_fc(l_index3),0) + nvl(all_objects_in_temp_rec.act_pou_equip_brdn_cost,0);
          u_eqpmt_act_rawcost_to_date_fc(l_index3) := nvl(u_eqpmt_act_rawcost_to_date_fc(l_index3),0) + nvl(all_objects_in_temp_rec.act_pou_equip_raw_cost,0);
          u_eqpmt_etc_effort_to_date(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_effort;
          u_eqpmt_ETC_COST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_cost_tc;
          u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
          u_eqpmt_ETC_COST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_cost_fc;
          u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
          u_eqpmt_ETC_COST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_cost_pc;
          u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
          if l_object_type = 'PA_ASSIGNMENTS' and
             l_res_class_code = 'EQUIPMENT' then
              ---5726773
	      if (pa_progress_utils.check_etc_overridden(l_asgn_plan_quantity,l_w_rollup_rec_asofdate.eqpmt_act_effort_to_date,l_w_rollup_rec_asofdate.eqpmt_etc_effort) = 'N') then
                 u_eqpmt_etc_effort_to_date(l_index3) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,u_eqpmt_act_effort_to_date(l_index3));
 	         if (u_eqpmt_etc_effort_to_date(l_index3) <> 0) then
                    pa_progress_utils.get_plan_costs_for_qty
                    (p_resource_list_mem_id  => l_object_id
                    ,p_project_id            => l_project_id
                    ,p_task_id               => all_objects_in_temp_rec.project_element_id
                    ,p_as_of_date            => l_temp_as_of_date
                    ,p_structure_version_id  => l_latest_wp_struct_ver_id
                    ,p_txn_currency_code     => l_txn_curr_code
                    ,p_rate_based_flag       => l_rate_based_flag
                    ,p_quantity              => u_eqpmt_etc_effort_to_date(l_index3)
                    ,p_budget_version_id     => l_plan_version_id --4372462
                    ,p_res_assignment_id     => l_res_assignment_id
                    ,x_rawcost_tc            => u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3)
                    ,x_brdncost_tc           => u_eqpmt_ETC_COST_to_date_TC(l_index3)
                    ,x_rawcost_pc            => u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3)
                    ,x_brdncost_pc           => u_eqpmt_ETC_COST_to_date_PC(l_index3)
                    ,x_rawcost_fc            => u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3)
                    ,x_brdncost_fc           => u_eqpmt_ETC_COST_to_date_FC(l_index3)
                    ,x_return_status         => x_return_status
                    ,x_msg_count             => x_msg_count
                    ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then-- bug 6712595
                        if (u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    u_actual_finish_date(l_index3) := to_date(null);
                 else
                    u_eqpmt_etc_effort_to_date(l_index3) := 0;
                    u_eqpmt_ETC_COST_to_date_TC(l_index3) := 0;
                    u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) := 0;
                    u_eqpmt_ETC_COST_to_date_FC(l_index3) := 0;
                    u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3) := 0;
                    u_eqpmt_ETC_COST_to_date_PC(l_index3) := 0;
                    u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3) := 0;
                    u_actual_finish_date(l_index3) := l_asgn_sch_finish_date;
                 end if;
              else
                 u_eqpmt_etc_effort_to_date(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_effort;
                 u_eqpmt_ETC_COST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_cost_tc;
                 u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
                 u_eqpmt_ETC_COST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_cost_fc;
                 u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
                 u_eqpmt_ETC_COST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_cost_pc;
                 u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3) := l_w_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
                  u_actual_finish_date(l_index3) := l_rollup_rec_asofdate.actual_finish_date;
              end if;
          end if;
          --5726773
	  --since ETC is already calculated we can calculate % complete as
	  --(act / act + etc)
	  if (l_planned_eff <> 0 and l_base_pc_deriv_code = 'EFFORT') then
             l_percent_comp := (u_ppl_act_effort_to_date(l_index3)/(u_ppl_act_effort_to_date(l_index3) + u_ppl_etc_effort_to_date(l_index3)))*100;
             if (l_percent_comp > 100) then
                l_percent_comp := 100;
             elsif (l_percent_comp < 0) then
                l_percent_comp := 0;
             end if;
             l_earned_val := l_percent_comp * l_planned_eff;
             l_eff_rollup_pc := l_percent_comp;
          elsif (l_planned_cost <> 0 and l_base_pc_deriv_code = 'COST') then -- COSTbased
	     l_percent_comp := (u_ppl_act_cost_to_date_pc(l_index3)/(u_ppl_act_cost_to_date_pc(l_index3) + u_ppl_etc_cost_to_date_pc(l_index3)))*100;
             if (l_percent_comp > 100) then
                l_percent_comp := 100;
             elsif (l_percent_comp < 0) then
                l_percent_comp := 0;
             end if;
             l_earned_val := l_percent_comp * l_planned_cost;
             l_eff_rollup_pc := l_percent_comp;
          else
             l_percent_comp := l_w_rollup_rec_asofdate.completed_percentage;
             l_eff_rollup_pc := l_w_rollup_rec_asofdate.eff_rollup_percent_comp;
             l_earned_val := l_w_rollup_rec_asofdate.earned_value;
          end if;
          u_completed_percentage(l_index3) := l_w_rollup_rec_asofdate.completed_percentage;
          u_eff_rollup_percent_comp(l_index3) := l_eff_rollup_pc;
          u_earned_val(l_index3) := l_earned_val;
          if (l_db_case = '2') then
             l_index3 := l_index3 + 1;
          end if;
        end if;

    -- End fix for bug # 4041048.

        --- if rollup record exists on the as_of_date then populate the
        --- u_ tables else populate the insert tables, for bulk processing
        --- call an api to check if a record exists on that date
        if (l_db_case = '1') then
          --- insert with defaults
          select pa_progress_rollup_s.nextval into progress_rollup_id(l_index2) from dual;
          percent_complete_id(l_index2) := to_number(null);
          project_id(l_index2) := l_project_id;
          object_id(l_index2) := l_object_id;
          OBJECT_TYPE(l_index2) := l_object_Type;
          as_of_Date(l_index2) := l_temp_as_of_date;
          object_version_id(l_index2) := l_object_version_id;
          LAST_UPDATE_DATE(l_index2) := sysdate;
          LAST_UPDATED_BY(l_index2) := fnd_global.user_id;
          CREATION_DATE(l_index2) := sysdate;
          CREATED_BY(l_index2) := fnd_global.user_id;
          PROGRESS_STATUS_CODE(l_index2) := null;
          LAST_UPDATE_LOGIN(l_index2) := fnd_global.login_id ;
          INCREMENTAL_WORK_QUANTITY(l_index2) := to_number(null);
          CUMULATIVE_WORK_QUANTITY(l_index2) := to_number(null);
          base_percent_complete(l_index2) := to_number(null);
          ESTIMATED_START_DATE(l_index2) := to_date(null);
          ESTIMATED_FINISH_DATE(l_index2) := to_date(null);
          if (l_object_Type = 'PA_ASSIGNMENTS') then
             actual_start_date(l_index2) := l_asgn_sch_start_date;

             -- Bug 6917961
             OPEN cur_prog_setup(all_objects_in_temp_rec.project_element_id,l_project_id);
             FETCH cur_prog_setup INTO l_prog_enable_flag, l_prog_stat_code;
             CLOSE cur_prog_setup;
             if (l_prog_enable_flag = 'Y') then
                 PROGRESS_STATUS_CODE(l_index2) := l_prog_stat_code;
             end if;
             -- Bug 6917961
          else
             actual_start_date(l_index2) := l_sch_start_date; -- set actual start
          end if;
          actual_finish_date(l_index2) := to_date(null);
          RECORD_VERSION_NUMBER(l_index2) := 1;
          base_percent_comp_deriv_code(l_index2) := l_base_pc_deriv_code;
          BASE_PROGRESS_STATUS_CODE(l_index2) := null;
          EFF_ROLLUP_PROG_STAT_CODE(l_index2) := null;
          STRUCTURE_TYPE(l_index2) := 'WORKPLAN';
          PROJ_ELEMENT_ID(l_index2) := all_objects_in_temp_rec.project_element_id;
          STRUCTURE_VERSION_ID(l_index2) := to_number(null);
          if (l_object_type = 'PA_ASSIGNMENTS') then
             if (l_rate_based_flag = 'N') then
               oth_qty(l_index2) := nvl(oth_qty(l_index2),0) + (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)));
             else
               oth_qty(l_index2) := nvl(oth_qty(l_index2),0) + (nvl(all_objects_in_temp_rec.quantity,0) - nvl(all_objects_in_temp_rec.act_labor_hrs,0) - nvl(all_objects_in_temp_rec.act_equip_hrs,0));
             end if;
          end if;
          oth_act_cost_to_date_tc(l_index2) := nvl(oth_act_cost_to_date_tc(l_index2),0) + (nvl(L_ACT_COST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_COST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_COST_TO_DATE_TC,0)));
          oth_act_rawcost_to_date_tc(l_index2) := nvl(oth_act_rawcost_to_date_tc(l_index2),0) + (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)));
          oth_act_cost_to_date_pc(l_index2) := nvl(oth_act_cost_to_date_pc(l_index2),0) + (nvl(all_objects_in_temp_rec.act_prj_brdn_cost,0) - (nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0)
              + nvl(all_objects_in_temp_rec.act_prj_equip_brdn_cost,0)));
          oth_act_rawcost_to_date_pc(l_index2) := nvl(oth_act_rawcost_to_date_pc(l_index2),0) + (nvl(all_objects_in_temp_rec.act_prj_raw_cost,0) - (nvl(all_objects_in_temp_rec.act_prj_labor_raw_cost,0)
              + nvl(all_objects_in_temp_rec.act_prj_equip_raw_cost,0)));
          oth_act_cost_to_date_fc(l_index2) := nvl(oth_act_cost_to_date_fc(l_index2),0) + (nvl(all_objects_in_temp_rec.act_pou_brdn_cost,0) - (nvl(all_objects_in_temp_rec.act_pou_labor_brdn_cost,0)
              + nvl(all_objects_in_temp_rec.act_pou_equip_brdn_cost,0)));
          oth_act_rawcost_to_date_fc(l_index2) := nvl(oth_act_rawcost_to_date_fc(l_index2),0) + (nvl(all_objects_in_temp_rec.act_pou_raw_cost,0) - (nvl(all_objects_in_temp_rec.act_pou_labor_raw_cost,0)
              + nvl(all_objects_in_temp_rec.act_pou_equip_raw_cost,0)));
          oth_etc_qty(l_index2) := to_number(null);
          OTH_ETC_COST_TC(l_index2) := to_number(null);
          OTH_ETC_RAWCOST_TC(l_index2) := to_number(null);
          OTH_ETC_COST_FC(l_index2) := to_number(null);
          OTH_ETC_RAWCOST_FC(l_index2) := to_number(null);
          OTH_ETC_COST_PC(l_index2) := to_number(null);
          OTH_ETC_RAWCOST_PC(l_index2) := to_number(null);
          if l_object_type = 'PA_ASSIGNMENTS' and l_res_class_code in ('FINANCIAL_ELEMENTS', 'MATERIAL_ITEMS') then
             ---5726773
	     oth_etc_qty(l_index2) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,oth_qty(l_index2));
 	     if (oth_etc_qty(l_index2) <> 0) then
                oth_etc_qty(l_index2) := l_asgn_plan_quantity - oth_qty(l_index2);
                pa_progress_utils.get_plan_costs_for_qty
                ( p_resource_list_mem_id  => l_object_id
                 ,p_project_id            => l_project_id
                 ,p_task_id               => all_objects_in_temp_rec.project_element_id
                 ,p_as_of_date            => l_temp_as_of_date
                 ,p_structure_version_id  => l_latest_wp_struct_ver_id
                 ,p_txn_currency_code     => l_txn_curr_code
                 ,p_rate_based_flag       => l_rate_based_flag
                 ,p_quantity              => oth_etc_qty(l_index2)
                 ,p_budget_version_id     => l_plan_version_id --4372462
                 ,p_res_assignment_id     => l_res_assignment_id
                 ,x_rawcost_tc            => OTH_ETC_RAWCOST_TC(l_index2)
                 ,x_brdncost_tc           => OTH_ETC_COST_TC(l_index2)
                 ,x_rawcost_pc            => OTH_ETC_RAWCOST_PC(l_index2)
                 ,x_brdncost_pc           => OTH_ETC_COST_PC(l_index2)
                 ,x_rawcost_fc            => OTH_ETC_RAWCOST_FC(l_index2)
                 ,x_brdncost_fc           => OTH_ETC_COST_FC(l_index2)
                 ,x_return_status         => x_return_status
                 ,x_msg_count             => x_msg_count
                 ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then  -- bug 6712595
                        if (OTH_ETC_RAWCOST_TC(l_index2) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    actual_finish_date(l_index2) := to_date(null);
             else
                oth_etc_qty(l_index2) := 0;
                OTH_ETC_COST_TC(l_index2) := 0;
                OTH_ETC_RAWCOST_TC(l_index2) := 0;
                OTH_ETC_COST_FC(l_index2) := 0;
                OTH_ETC_RAWCOST_FC(l_index2) := 0;
                OTH_ETC_COST_PC(l_index2) := 0;
                OTH_ETC_RAWCOST_PC(l_index2) := 0;
                actual_finish_date(l_index2) := l_asgn_sch_finish_date;
             end if;
             -- here insert in PJI temp table for ETC
             ETC_PROJECT_ID(l_index_etc) := l_project_id;
             ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
             ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
             ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
             if (l_plan_type = 'P') then
                ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
             elsif (l_plan_type = 'G') then
                ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
             else
                ETC_PERIOD_NAME(l_index_etc) := null;
             end if;
             ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
             ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
             ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
             ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
             ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
             ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
             ETC_ROLLUP_TYPE(l_index_etc) := 'W';
             ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
             ETC_QUANTITY(l_index_etc) := oth_etc_qty(l_index2) - l_asgn_plan_quantity;
             ETC_TXN_BURDENED_COST(l_index_etc) := OTH_ETC_COST_TC(l_index2) - l_asgn_plan_bur_cost_tc;
             ETC_PRJ_BURDENED_COST(l_index_etc) := OTH_ETC_COST_PC(l_index2) - l_asgn_plan_bur_cost_pc;
             ETC_PFC_BURDENED_COST(l_index_etc) := OTH_ETC_COST_FC(l_index2) - l_asgn_plan_bur_cost_fc;
             ETC_TXN_RAW_COST(l_index_etc) := OTH_ETC_RAWCOST_TC(l_index2) - l_asgn_plan_raw_cost_tc;
             ETC_PRJ_RAW_COST(l_index_etc) := OTH_ETC_RAWCOST_PC(l_index2) - l_asgn_plan_raw_cost_pc;
             ETC_PFC_RAW_COST(l_index_etc) := OTH_ETC_RAWCOST_FC(l_index2) - l_asgn_plan_raw_cost_fc;
             ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
             ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
             ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
             ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
          end if;
          ppl_act_effort_to_date(l_index2) := nvl(ppl_act_effort_to_date(l_index2),0) + nvl(all_objects_in_temp_rec.act_labor_hrs,0);
          ppl_act_cost_to_date_tc(l_index2) := nvl(ppl_act_cost_to_date_tc(l_index2),0) + nvl(l_ppl_act_cost_to_date_tc,0);
          ppl_act_rawcost_to_date_tc(l_index2) := nvl(ppl_act_rawcost_to_date_tc(l_index2),0) + nvl(l_ppl_act_rawcost_to_date_tc,0);
          ppl_act_cost_to_date_pc(l_index2) := nvl(ppl_act_cost_to_date_pc(l_index2),0) + nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0);
          ppl_act_rawcost_to_date_pc(l_index2) := nvl(ppl_act_rawcost_to_date_pc(l_index2),0) + nvl(all_objects_in_temp_rec.act_prj_labor_raw_cost,0);
          ppl_act_cost_to_date_fc(l_index2) := nvl(ppl_act_cost_to_date_fc(l_index2),0) + nvl(all_objects_in_temp_rec.act_pou_labor_brdn_cost,0);
          ppl_act_rawcost_to_date_fc(l_index2) := nvl(ppl_act_rawcost_to_date_fc(l_index2),0) + nvl(all_objects_in_temp_rec.act_pou_labor_raw_cost,0);
          ESTIMATED_REMAINING_EFFORT(l_index2) := to_number(null);
          PPL_ETC_COST_TC(l_index2) := to_number(null);
          PPL_ETC_RAWCOST_TC(l_index2) := to_number(null);
          PPL_ETC_COST_PC(l_index2) := to_number(null);
          PPL_ETC_RAWCOST_PC(l_index2) := to_number(null);
          PPL_ETC_COST_FC(l_index2) := to_number(null);
          PPL_ETC_RAWCOST_FC(l_index2) := to_number(null);
          if l_object_type = 'PA_ASSIGNMENTS' and l_res_class_code = 'PEOPLE' then
             ---5726773
	     ESTIMATED_REMAINING_EFFORT(l_index2) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,ppl_act_effort_to_date(l_index2));
             if (ESTIMATED_REMAINING_EFFORT(l_index2) <> 0) then
                pa_progress_utils.get_plan_costs_for_qty
                ( p_resource_list_mem_id  => l_object_id
                 ,p_project_id            => l_project_id
                 ,p_task_id               => all_objects_in_temp_rec.project_element_id
                 ,p_as_of_date            => l_temp_as_of_date
                 ,p_structure_version_id  => l_latest_wp_struct_ver_id
                 ,p_txn_currency_code     => l_txn_curr_code
                 ,p_rate_based_flag       => l_rate_based_flag
                 ,p_quantity              => ESTIMATED_REMAINING_EFFORT(l_index2)
                 ,p_budget_version_id     => l_plan_version_id --4372462
                 ,p_res_assignment_id     => l_res_assignment_id
                 ,x_rawcost_tc            => PPL_ETC_RAWCOST_TC(l_index2)
                 ,x_brdncost_tc           => PPL_ETC_COST_TC(l_index2)
                 ,x_rawcost_pc            => PPL_ETC_RAWCOST_PC(l_index2)
                 ,x_brdncost_pc           => PPL_ETC_COST_PC(l_index2)
                 ,x_rawcost_fc            => PPL_ETC_RAWCOST_FC(l_index2)
                 ,x_brdncost_fc           => PPL_ETC_COST_FC(l_index2)
                 ,x_return_status         => x_return_status
                 ,x_msg_count             => x_msg_count
                 ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then  -- bug 6712595
                        if (PPL_ETC_RAWCOST_TC(l_index2) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    actual_finish_date(l_index2) := to_date(null);
             else
                ESTIMATED_REMAINING_EFFORT(l_index2) := 0;
                PPL_ETC_COST_TC(l_index2) := 0;
                PPL_ETC_RAWCOST_TC(l_index2) := 0;
                PPL_ETC_COST_PC(l_index2) := 0;
                PPL_ETC_RAWCOST_PC(l_index2) := 0;
                PPL_ETC_COST_FC(l_index2) := 0;
                PPL_ETC_RAWCOST_FC(l_index2) := 0;
                actual_finish_date(l_index2) := l_asgn_sch_finish_date;
             end if;
             ETC_PROJECT_ID(l_index_etc) := l_project_id;
             ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
             ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
             ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
             if (l_plan_type = 'P') then
                ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
             elsif (l_plan_type = 'G') then
                ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
             else
                ETC_PERIOD_NAME(l_index_etc) := null;
             end if;
             ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
             ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
             ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
             ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
             ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
             ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
             ETC_ROLLUP_TYPE(l_index_etc) := 'W';
             ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
             ETC_QUANTITY(l_index_etc) := estimated_remaining_effort(l_index2) - l_asgn_plan_quantity;
             ETC_TXN_BURDENED_COST(l_index_etc) := PPL_ETC_COST_TC(l_index2) - l_asgn_plan_bur_cost_tc;
             ETC_PRJ_BURDENED_COST(l_index_etc) := PPL_ETC_COST_PC(l_index2) - l_asgn_plan_bur_cost_pc;
             ETC_PFC_BURDENED_COST(l_index_etc) := PPL_ETC_COST_FC(l_index2) - l_asgn_plan_bur_cost_fc;
             ETC_TXN_RAW_COST(l_index_etc) := PPL_ETC_RAWCOST_TC(l_index2) - l_asgn_plan_raw_cost_tc;
             ETC_PRJ_RAW_COST(l_index_etc) := PPL_ETC_RAWCOST_PC(l_index2) - l_asgn_plan_raw_cost_tc;
             ETC_PFC_RAW_COST(l_index_etc) := PPL_ETC_RAWCOST_FC(l_index2) - l_asgn_plan_raw_cost_tc;
             ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
             ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
             ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
             ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
          end if;
          eqpmt_act_effort_to_date(l_index2) := nvl(eqpmt_act_effort_to_date(l_index2),0) + nvl(all_objects_in_temp_rec.act_equip_hrs,0);
          eqpmt_act_cost_to_date_tc(l_index2) := nvl(eqpmt_act_cost_to_date_tc(l_index2),0) + nvl(l_eqpmt_act_cost_to_date_tc,0);
          eqpmt_act_rawcost_to_date_tc(l_index2) := nvl(eqpmt_act_rawcost_to_date_tc(l_index2),0) + nvl(l_eqpmt_act_rawcost_to_date_tc,0);
          eqpmt_act_cost_to_date_pc(l_index2) := nvl(eqpmt_act_cost_to_date_pc(l_index2),0) + nvl(all_objects_in_temp_rec.act_prj_equip_brdn_cost,0);
          eqpmt_act_rawcost_to_date_pc(l_index2) := nvl(eqpmt_act_rawcost_to_date_pc(l_index2),0) + nvl(all_objects_in_temp_rec.act_prj_equip_raw_cost,0);
          eqpmt_act_cost_to_date_fc(l_index2) := nvl(eqpmt_act_cost_to_date_fc(l_index2),0) + nvl(all_objects_in_temp_rec.act_pou_equip_brdn_cost,0);
          eqpmt_act_rawcost_to_date_fc(l_index2) := nvl(eqpmt_act_rawcost_to_date_fc(l_index2),0) + nvl(all_objects_in_temp_rec.act_pou_equip_raw_cost,0);
          EQPMT_ETC_EFFORT(l_index2) := to_number(null);
          EQPMT_ETC_COST_TC(l_index2) := to_number(null);
          EQPMT_ETC_RAWCOST_TC(l_index2) := to_number(null);
          EQPMT_ETC_COST_PC(l_index2) := to_number(null);
          EQPMT_ETC_RAWCOST_PC(l_index2) := to_number(null);
          EQPMT_ETC_COST_FC(l_index2) := to_number(null);
          EQPMT_ETC_RAWCOST_FC(l_index2) := to_number(null);
          if l_object_type = 'PA_ASSIGNMENTS' and l_res_class_code = 'EQUIPMENT' then
             ---5726773
	     EQPMT_ETC_EFFORT(l_index2) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,eqpmt_act_effort_to_date(l_index2));
 	     if (EQPMT_ETC_EFFORT(l_index2) <> 0) then
                pa_progress_utils.get_plan_costs_for_qty
                ( p_resource_list_mem_id  => l_object_id
                 ,p_project_id            => l_project_id
                 ,p_task_id               => all_objects_in_temp_rec.project_element_id
                 ,p_as_of_date            => l_temp_as_of_date
                 ,p_structure_version_id  => l_latest_wp_struct_ver_id
                 ,p_txn_currency_code     => l_txn_curr_code
                 ,p_rate_based_flag       => l_rate_based_flag
                 ,p_quantity              => EQPMT_ETC_EFFORT(l_index2)
                 ,p_budget_version_id     => l_plan_version_id --4372462
                 ,p_res_assignment_id     => l_res_assignment_id
                 ,x_rawcost_tc            => EQPMT_ETC_RAWCOST_TC(l_index2)
                 ,x_brdncost_tc           => EQPMT_ETC_COST_TC(l_index2)
                 ,x_rawcost_pc            => EQPMT_ETC_RAWCOST_PC(l_index2)
                 ,x_brdncost_pc           => EQPMT_ETC_COST_PC(l_index2)
                 ,x_rawcost_fc            => EQPMT_ETC_RAWCOST_FC(l_index2)
                 ,x_brdncost_fc           => EQPMT_ETC_COST_FC(l_index2)
                 ,x_return_status         => x_return_status
                 ,x_msg_count             => x_msg_count
                 ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then
                        if (EQPMT_ETC_RAWCOST_TC(l_index2) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    actual_finish_date(l_index2) := to_date(null);
             else
                EQPMT_ETC_EFFORT(l_index2) := 0;
                EQPMT_ETC_COST_TC(l_index2) := 0;
                EQPMT_ETC_RAWCOST_TC(l_index2) := 0;
                EQPMT_ETC_COST_PC(l_index2) := 0;
                EQPMT_ETC_RAWCOST_PC(l_index2) := 0;
                EQPMT_ETC_COST_FC(l_index2) := 0;
                EQPMT_ETC_RAWCOST_FC(l_index2) := 0;
                actual_finish_date(l_index2) := l_asgn_sch_finish_date;
             end if;
             ETC_PROJECT_ID(l_index_etc) := l_project_id;
             ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
             ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
             ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
             if (l_plan_type = 'P') then
                ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
             elsif (l_plan_type = 'G') then
                ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
             else
                ETC_PERIOD_NAME(l_index_etc) := null;
             end if;
             ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
             ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
             ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
             ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
             ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
             ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
             ETC_ROLLUP_TYPE(l_index_etc) := 'W';
             ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
             ETC_QUANTITY(l_index_etc) := EQPMT_ETC_EFFORT(l_index2) - l_asgn_plan_quantity;
             ETC_TXN_BURDENED_COST(l_index_etc) := EQPMT_ETC_COST_TC(l_index2) - l_asgn_plan_bur_cost_tc;
             ETC_PRJ_BURDENED_COST(l_index_etc) := EQPMT_ETC_COST_PC(l_index2) - l_asgn_plan_bur_cost_pc;
             ETC_PFC_BURDENED_COST(l_index_etc) := EQPMT_ETC_COST_FC(l_index2) - l_asgn_plan_bur_cost_fc;
             ETC_TXN_RAW_COST(l_index_etc) := EQPMT_ETC_RAWCOST_TC(l_index2) - l_asgn_plan_raw_cost_tc;
             ETC_PRJ_RAW_COST(l_index_etc) := EQPMT_ETC_RAWCOST_PC(l_index2) - l_asgn_plan_raw_cost_tc;
             ETC_PFC_RAW_COST(l_index_etc) := EQPMT_ETC_RAWCOST_FC(l_index2) - l_asgn_plan_raw_cost_tc;
             ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
             ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
             ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
             ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
          end if;
           --- if task is lowest and flag for calc PC and EV is true then
          --- 5726773  changed > 0 condition to <> 0
 	  if (l_base_pc_deriv_code = 'EFFORT' and l_planned_eff <> 0) then
             -- Bug 3830673 : Calculate % Complete, multiplication with 100 was missing
            l_percent_comp := (ppl_act_effort_to_date(l_index2)/l_planned_eff)*100;
            if (l_percent_comp > 100) then
               l_percent_comp := 100;
            elsif (l_percent_comp < 0) then
               l_percent_comp := 0;
            end if;
            l_earned_val := l_percent_comp * l_planned_eff;
          elsif (l_base_pc_deriv_code = 'COST' and l_planned_cost <> 0) then
            l_percent_comp := (ppl_act_cost_to_date_pc(l_index2)/l_planned_cost)*100;
            if (l_percent_comp > 100) then
               l_percent_comp := 100;
            elsif (l_percent_comp < 0) then
               l_percent_comp := 0;
            end if;
            l_earned_val := l_percent_comp * l_planned_cost;
          else
            l_percent_comp := to_number(null);
            l_earned_val   := to_number(null);
          end if;
          completed_percentage(l_index2) := to_number(null);
          EFF_ROLLUP_PERCENT_COMP(l_index2) := l_percent_comp;
          earned_value(l_index2) := l_earned_val;
          TASK_WT_BASIS_CODE(l_index2) := null;
          SUBPRJ_PPL_ACT_EFFORT(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ACT_EFFORT(l_index2) := to_number(null);
          SUBPRJ_PPL_ETC_EFFORT(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ETC_EFFORT(l_index2) := to_number(null);
          SUBPRJ_OTH_ACT_COST_TO_DATE_TC(l_index2) := to_number(null);
          SPJ_OTH_ACT_RAWCOST_TO_DATE_TC(l_index2) := to_number(null);
          SUBPRJ_OTH_ACT_COST_TO_DATE_FC(l_index2) := to_number(null);
          SPJ_OTH_ACT_RAWCOST_TO_DATE_FC(l_index2) := to_number(null);
          SUBPRJ_OTH_ACT_COST_TO_DATE_PC(l_index2) := to_number(null);
          SPJ_OTH_ACT_RAWCOST_TO_DATE_PC(l_index2) := to_number(null);
          SUBPRJ_PPL_ACT_COST_TC(l_index2) := to_number(null);
          SUBPRJ_PPL_ACT_RAWCOST_TC(l_index2) := to_number(null);
          SUBPRJ_PPL_ACT_COST_FC(l_index2) := to_number(null);
          SUBPRJ_PPL_ACT_RAWCOST_FC(l_index2) := to_number(null);
          SUBPRJ_PPL_ACT_COST_PC(l_index2) := to_number(null);
          SUBPRJ_PPL_ACT_RAWCOST_PC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ACT_COST_TC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ACT_RAWCOST_TC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ACT_COST_FC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ACT_RAWCOST_FC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ACT_COST_PC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ACT_RAWCOST_PC(l_index2) := to_number(null);
          SUBPRJ_OTH_ETC_COST_TC(l_index2) := to_number(null);
          SUBPRJ_OTH_ETC_RAWCOST_TC(l_index2) := to_number(null);
          SUBPRJ_OTH_ETC_COST_FC(l_index2) := to_number(null);
          SUBPRJ_OTH_ETC_RAWCOST_FC(l_index2) := to_number(null);
          SUBPRJ_OTH_ETC_COST_PC(l_index2) := to_number(null);
          SUBPRJ_OTH_ETC_RAWCOST_PC(l_index2) := to_number(null);
          SUBPRJ_PPL_ETC_COST_TC(l_index2) := to_number(null);
          SUBPRJ_PPL_ETC_RAWCOST_TC(l_index2) := to_number(null);
          SUBPRJ_PPL_ETC_COST_FC(l_index2) := to_number(null);
          SUBPRJ_PPL_ETC_RAWCOST_FC(l_index2) := to_number(null);
          SUBPRJ_PPL_ETC_COST_PC(l_index2) := to_number(null);
          SUBPRJ_PPL_ETC_RAWCOST_PC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ETC_COST_TC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ETC_RAWCOST_TC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ETC_COST_FC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ETC_RAWCOST_FC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ETC_COST_PC(l_index2) := to_number(null);
          SUBPRJ_EQPMT_ETC_RAWCOST_PC(l_index2) := to_number(null);
          SUBPRJ_EARNED_VALUE(l_index2) := to_number(null);
          PROJFUNC_COST_RATE_TYPE(l_index2) := null;
          PROJFUNC_COST_EXCHANGE_RATE(l_index2) := to_number(null);
          PROJFUNC_COST_RATE_DATE(l_index2) := to_date(null);
          PROJ_COST_RATE_TYPE(l_index2) := null;
          PROJ_COST_EXCHANGE_RATE(l_index2) := to_number(null);
          PROJ_COST_RATE_DATE(l_index2) := to_date(null);
          TXN_CURRENCY_CODE(l_index2) := l_txn_curr_code;
          PROG_PA_PERIOD_NAME(l_index2) := l_pa_period_name;
          PROG_GL_PERIOD_NAME(l_index2) := l_gl_period_name;
          --- here we check if future rollup records exist. if they do current_flag
          --- should be 'N' else 'Y'
          open future_rollup_recs;
          fetch future_rollup_recs into l_future_rollup_recs;
          if future_rollup_recs%found then
             CURRENT_FLAG(l_index2) := 'N';
          else
             CURRENT_FLAG(l_index2) := 'Y';
          end if;
          close future_rollup_recs;
          l_index2 := l_temp_index2;
        else
          if (l_db_case = '2') then
            u_actual_finish_date(l_index3) := l_rollup_rec_asofdate.actual_finish_date;
            u_progress_rollup_id(l_index3) := l_rollup_rec_asofdate.progress_rollup_id;
            u_object_version_id(l_index3) := l_object_version_id;
            u_ppl_act_effort_to_date(l_index3) := nvl(u_ppl_act_effort_to_date(l_index3),0) + nvl(all_objects_in_temp_rec.act_labor_hrs,0);
            u_eqpmt_act_effort_to_date(l_index3) := nvl(u_eqpmt_act_effort_to_date(l_index3),0) + nvl(all_objects_in_temp_rec.act_equip_hrs,0);
            if (l_object_Type = 'PA_ASSIGNMENTS') then
               if (l_rate_based_flag = 'N') then
                 u_oth_qty(l_index3) := nvl(u_oth_qty(l_index3),0) + (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)));
               else
                 u_oth_qty(l_index3) := nvl(u_oth_qty(l_index3),0) + nvl(all_objects_in_temp_rec.quantity,0) - nvl(all_objects_in_temp_rec.act_labor_hrs,0) - nvl(all_objects_in_temp_rec.act_equip_hrs,0);
               end if;
            end if;
            u_oth_act_cost_to_date_tc(l_index3) := nvl(u_oth_act_cost_to_date_tc(l_index3),0) + (nvl(L_ACT_COST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_COST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_COST_TO_DATE_TC,0)));
            u_oth_act_rawcost_to_date_tc(l_index3) := nvl(u_oth_act_rawcost_to_date_tc(l_index3),0) + (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(L_EQPMT_ACT_RAWCOST_TO_DATE_TC,0)));
            u_oth_act_cost_to_date_pc(l_index3) := nvl(u_oth_act_cost_to_date_pc(l_index3),0) + (nvl(all_objects_in_temp_rec.act_prj_brdn_cost,0) - (nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0)
               + nvl(all_objects_in_temp_rec.act_prj_equip_brdn_cost,0)));
            u_oth_act_rawcost_to_date_pc(l_index3) := nvl(u_oth_act_rawcost_to_date_pc(l_index3),0) + (nvl(all_objects_in_temp_rec.act_prj_raw_cost,0) - (nvl(all_objects_in_temp_rec.act_prj_labor_raw_cost,0)
              + nvl(all_objects_in_temp_rec.act_prj_equip_raw_cost,0)));
            u_oth_act_cost_to_date_fc(l_index3) := nvl(u_oth_act_cost_to_date_fc(l_index3),0) + (nvl(all_objects_in_temp_rec.act_pou_brdn_cost,0) - (nvl(all_objects_in_temp_rec.act_pou_labor_brdn_cost,0)
             + nvl(all_objects_in_temp_rec.act_pou_equip_brdn_cost,0)));
            u_oth_act_rawcost_to_date_fc(l_index3) := nvl(u_oth_act_rawcost_to_date_fc(l_index3),0) + (nvl(all_objects_in_temp_rec.act_pou_raw_cost,0) - (nvl(all_objects_in_temp_rec.act_pou_labor_raw_cost,0) +
               nvl(all_objects_in_temp_rec.act_pou_equip_raw_cost,0)));
            u_oth_etc_qty(l_index3) := l_rollup_rec_asofdate.oth_etc_quantity;
            u_OTH_ETC_COST_to_date_TC(l_index3) := l_rollup_rec_asofdate.oth_etc_cost_tc;
            u_OTH_ETC_RAWCOST_to_date_TC(l_index3) := l_rollup_rec_asofdate.oth_etc_rawcost_tc;
            u_OTH_ETC_COST_to_date_FC(l_index3) := l_rollup_rec_asofdate.oth_etc_cost_fc;
            u_OTH_ETC_RAWCOST_to_date_FC(l_index3) := l_rollup_rec_asofdate.oth_etc_rawcost_fc;
            u_OTH_ETC_COST_to_date_PC(l_index3) := l_rollup_rec_asofdate.oth_etc_cost_pc;
            u_OTH_ETC_RAWCOST_to_date_PC(l_index3) := l_rollup_rec_asofdate.oth_etc_rawcost_pc;
            if (l_object_type = 'PA_ASSIGNMENTS' and
                l_res_class_code in ('FINANCIAL_ELEMENTS', 'MATERIAL_ITEMS')) then
                ---5726773
		if (pa_progress_utils.check_etc_overridden(l_asgn_plan_quantity,l_rollup_rec_asofdate.oth_quantity_to_date,l_rollup_rec_asofdate.oth_etc_quantity) = 'N') then
		  u_oth_etc_qty(l_index3) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,u_oth_qty(l_index3));
 	          if (u_oth_etc_qty(l_index3) <> 0) then
                     pa_progress_utils.get_plan_costs_for_qty
                     ( p_resource_list_mem_id  => l_object_id
                      ,p_project_id            => l_project_id
                      ,p_task_id               => all_objects_in_temp_rec.project_element_id
                      ,p_as_of_date            => l_temp_as_of_date
                      ,p_structure_version_id  => l_latest_wp_struct_ver_id
                      ,p_txn_currency_code     => l_txn_curr_code
                      ,p_rate_based_flag       => l_rate_based_flag
                      ,p_quantity              => u_oth_etc_qty(l_index3)
                      ,p_budget_version_id     => l_plan_version_id --4372462
                      ,p_res_assignment_id     => l_res_assignment_id
                      ,x_rawcost_tc            => u_OTH_ETC_RAWCOST_to_date_TC(l_index3)
                      ,x_brdncost_tc           => u_OTH_ETC_COST_to_date_TC(l_index3)
                      ,x_rawcost_pc            => u_OTH_ETC_RAWCOST_to_date_PC(l_index3)
                      ,x_brdncost_pc           => u_OTH_ETC_COST_to_date_PC(l_index3)
                      ,x_rawcost_fc            => u_OTH_ETC_RAWCOST_to_date_FC(l_index3)
                      ,x_brdncost_fc           => u_OTH_ETC_COST_to_date_FC(l_index3)
                      ,x_return_status         => x_return_status
                      ,x_msg_count             => x_msg_count
                      ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then -- bug 6712595
                        if (u_OTH_ETC_RAWCOST_to_date_TC(l_index3) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    u_actual_finish_date(l_index3) := to_date(null);
                  else
                     u_oth_etc_qty(l_index3) := 0;
                     u_OTH_ETC_COST_to_date_TC(l_index3) := 0;
                     u_OTH_ETC_RAWCOST_to_date_TC(l_index3) := 0;
                     u_OTH_ETC_COST_to_date_FC(l_index3) := 0;
                     u_OTH_ETC_RAWCOST_to_date_FC(l_index3) := 0;
                     u_OTH_ETC_COST_to_date_PC(l_index3) := 0;
                     u_OTH_ETC_RAWCOST_to_date_PC(l_index3) := 0;
                     u_actual_finish_date(l_index3) := l_asgn_sch_finish_date;
                  end if;
                  ETC_PROJECT_ID(l_index_etc) := l_project_id;
                  ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                  ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                  ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                  if (l_plan_type = 'P') then
                    ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                  elsif (l_plan_type = 'G') then
                    ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                  else
                    ETC_PERIOD_NAME(l_index_etc) := null;
                  end if;
                  ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                  ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                  ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                  ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                  ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                  ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                  ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                  ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                  ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                  ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                  ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                  ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                  -- here if extraction type is FULL we pass to_date values otherwise
                  -- incremental values only
                  if (p_extraction_type = 'FULL') then
                     ---5726773 ETC_QUANTITY(l_index_etc) := -u_oth_qty(l_index3);
 	             ETC_QUANTITY(l_index_etc) := u_oth_etc_qty(l_index3) - l_asgn_plan_quantity;
                     ETC_TXN_BURDENED_COST(l_index_etc) := u_OTH_ETC_COST_to_date_TC(l_index3) - l_asgn_plan_bur_cost_tc;
                     ETC_PRJ_BURDENED_COST(l_index_etc) := u_OTH_ETC_COST_to_date_PC(l_index3) - l_asgn_plan_bur_cost_pc;
                     ETC_PFC_BURDENED_COST(l_index_etc) := u_OTH_ETC_COST_to_date_FC(l_index3) - l_asgn_plan_bur_cost_fc;
                     ETC_TXN_RAW_COST(l_index_etc) := u_OTH_ETC_RAWCOST_to_date_TC(l_index3) - l_asgn_plan_raw_cost_tc;
                     ETC_PRJ_RAW_COST(l_index_etc) := u_OTH_ETC_RAWCOST_to_date_PC(l_index3) - l_asgn_plan_raw_cost_pc;
                     ETC_PFC_RAW_COST(l_index_etc) := u_OTH_ETC_RAWCOST_to_date_FC(l_index3) - l_asgn_plan_raw_cost_fc;
                  else
                     if (u_oth_qty(l_index3) >= l_asgn_plan_quantity and l_asgn_plan_quantity > 0) or (u_oth_qty(l_index3) <= l_asgn_plan_quantity and l_asgn_plan_quantity < 0) then  ---5726773
                        ETC_QUANTITY(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_quantity;
                        ETC_TXN_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_cost_tc;
                        ETC_PRJ_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_cost_pc;
                        ETC_PFC_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_cost_fc;
                        ETC_TXN_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_rawcost_tc;
                        ETC_PRJ_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_rawcost_pc;
                        ETC_PFC_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_rawcost_fc;
                     else
                        ---5726773 ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.oth_quantity_to_date - u_oth_qty(l_index3);
 	                ETC_QUANTITY(l_index_etc) := u_oth_etc_qty(l_index3) - l_rollup_rec_asofdate.oth_etc_quantity;
                        ETC_TXN_BURDENED_COST(l_index_etc) := u_OTH_ETC_COST_to_date_TC(l_index3) - l_rollup_rec_asofdate.oth_etc_cost_tc;
                        ETC_PRJ_BURDENED_COST(l_index_etc) := u_OTH_ETC_COST_to_date_PC(l_index3) - l_rollup_rec_asofdate.oth_etc_cost_pc;
                        ETC_PFC_BURDENED_COST(l_index_etc) := u_OTH_ETC_COST_to_date_FC(l_index3) - l_rollup_rec_asofdate.oth_etc_cost_fc;
                        ETC_TXN_RAW_COST(l_index_etc) := u_OTH_ETC_RAWCOST_to_date_TC(l_index3) - l_rollup_rec_asofdate.oth_etc_rawcost_tc;
                        ETC_PRJ_RAW_COST(l_index_etc) := u_OTH_ETC_RAWCOST_to_date_PC(l_index3) - l_rollup_rec_asofdate.oth_etc_rawcost_pc;
                        ETC_PFC_RAW_COST(l_index_etc) := u_OTH_ETC_RAWCOST_to_date_FC(l_index3) - l_rollup_rec_asofdate.oth_etc_rawcost_fc;
                     end if;
                  end if;
                else
                  u_oth_etc_qty(l_index3) := l_rollup_rec_asofdate.oth_etc_quantity;
                  u_OTH_ETC_COST_to_date_TC(l_index3) := l_rollup_rec_asofdate.oth_etc_cost_tc;
                  u_OTH_ETC_RAWCOST_to_date_TC(l_index3) := l_rollup_rec_asofdate.oth_etc_rawcost_tc;
                  u_OTH_ETC_COST_to_date_FC(l_index3) := l_rollup_rec_asofdate.oth_etc_cost_fc;
                  u_OTH_ETC_RAWCOST_to_date_FC(l_index3) := l_rollup_rec_asofdate.oth_etc_rawcost_fc;
                  u_OTH_ETC_COST_to_date_PC(l_index3) := l_rollup_rec_asofdate.oth_etc_cost_pc;
                  u_OTH_ETC_RAWCOST_to_date_PC(l_index3) := l_rollup_rec_asofdate.oth_etc_rawcost_pc;
                  u_actual_finish_date(l_index3) := l_rollup_rec_asofdate.actual_finish_date;
                  if (p_extraction_type = 'FULL') then
                     ETC_PROJECT_ID(l_index_etc) := l_project_id;
                     ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                     ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                     ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                     if (l_plan_type = 'P') then
                       ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                     elsif (l_plan_type = 'G') then
                       ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                     else
                       ETC_PERIOD_NAME(l_index_etc) := null;
                     end if;
                     ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                     ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                     ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                     ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                     ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                     ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                     ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                     ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                     ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                     ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                     ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                     ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                     ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.oth_etc_quantity - l_asgn_plan_quantity;
                     ETC_TXN_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                     ETC_PRJ_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                     ETC_PFC_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                     ETC_TXN_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                     ETC_PRJ_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                     ETC_PFC_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
                  else
                     l_index_etc := l_index_etc - 1;
                  end if;
                end if;
            end if;
            u_ppl_act_cost_to_date_tc(l_index3) := nvl(u_ppl_act_cost_to_date_tc(l_index3),0) + nvl(l_ppl_act_cost_to_date_tc,0);
            u_ppl_act_rawcost_to_date_tc(l_index3) := nvl(u_ppl_act_rawcost_to_date_tc(l_index3),0) + nvl(l_ppl_act_rawcost_to_date_tc,0);
            u_ppl_act_cost_to_date_pc(l_index3) := nvl(u_ppl_act_cost_to_date_pc(l_index3),0) + nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0);
            u_ppl_act_rawcost_to_date_pc(l_index3) := nvl(u_ppl_act_rawcost_to_date_pc(l_index3),0) + nvl(all_objects_in_temp_rec.act_prj_labor_raw_cost,0);
            u_ppl_act_cost_to_date_fc(l_index3) := nvl(u_ppl_act_cost_to_date_fc(l_index3),0) + nvl(all_objects_in_temp_rec.act_pou_labor_brdn_cost,0);
            u_ppl_act_rawcost_to_date_fc(l_index3) := nvl(u_ppl_act_rawcost_to_date_fc(l_index3),0) + nvl(all_objects_in_temp_rec.act_pou_labor_raw_cost,0);
            u_ppl_etc_effort_to_date(l_index3) := l_rollup_rec_asofdate.estimated_remaining_effort;
            u_ppl_ETC_COST_to_date_TC(l_index3) := l_rollup_rec_asofdate.ppl_etc_cost_tc;
            u_ppl_ETC_RAWCOST_to_date_TC(l_index3) := l_rollup_rec_asofdate.ppl_etc_rawcost_tc;
            u_ppl_ETC_COST_to_date_FC(l_index3) := l_rollup_rec_asofdate.ppl_etc_cost_fc;
            u_ppl_ETC_RAWCOST_to_date_FC(l_index3) := l_rollup_rec_asofdate.ppl_etc_rawcost_fc;
            u_ppl_ETC_COST_to_date_PC(l_index3) := l_rollup_rec_asofdate.ppl_etc_cost_pc;
            u_ppl_ETC_RAWCOST_to_date_PC(l_index3) := l_rollup_rec_asofdate.ppl_etc_rawcost_pc;
            if l_object_type = 'PA_ASSIGNMENTS' and
               l_res_class_code = 'PEOPLE' then
                ---5726773
		if (pa_progress_utils.check_etc_overridden(l_asgn_plan_quantity,l_rollup_rec_asofdate.ppl_act_effort_to_date,l_rollup_rec_asofdate.estimated_remaining_effort) = 'N') then
		   u_ppl_etc_effort_to_date(l_index3) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,u_ppl_act_effort_to_date(l_index3));
		   if (u_ppl_etc_effort_to_date(l_index3) <> 0) then
                      pa_progress_utils.get_plan_costs_for_qty
                      (p_resource_list_mem_id  => l_object_id
                      ,p_project_id            => l_project_id
                      ,p_task_id               => all_objects_in_temp_rec.project_element_id
                      ,p_as_of_date            => l_temp_as_of_date
                      ,p_structure_version_id  => l_latest_wp_struct_ver_id
                      ,p_txn_currency_code     => l_txn_curr_code
                      ,p_rate_based_flag       => l_rate_based_flag
                      ,p_quantity              => u_ppl_etc_effort_to_date(l_index3)
                      ,p_budget_version_id     => l_plan_version_id --4372462
                      ,p_res_assignment_id     => l_res_assignment_id
                      ,x_rawcost_tc            => u_ppl_ETC_RAWCOST_to_date_TC(l_index3)
                      ,x_brdncost_tc           => u_ppl_ETC_COST_to_date_TC(l_index3)
                      ,x_rawcost_pc            => u_ppl_ETC_RAWCOST_to_date_PC(l_index3)
                      ,x_brdncost_pc           => u_ppl_ETC_COST_to_date_PC(l_index3)
                      ,x_rawcost_fc            => u_ppl_ETC_RAWCOST_to_date_FC(l_index3)
                      ,x_brdncost_fc           => u_ppl_ETC_COST_to_date_FC(l_index3)
                      ,x_return_status         => x_return_status
                      ,x_msg_count             => x_msg_count
                      ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then  -- bug 6712595
                        if (u_ppl_ETC_RAWCOST_to_date_TC(l_index3) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    u_actual_finish_date(l_index3) := to_date(null);
                   else
                      u_ppl_etc_effort_to_date(l_index3) := 0;
                      u_ppl_ETC_COST_to_date_TC(l_index3) := 0;
                      u_ppl_ETC_RAWCOST_to_date_TC(l_index3) := 0;
                      u_ppl_ETC_COST_to_date_FC(l_index3) := 0;
                      u_ppl_ETC_RAWCOST_to_date_FC(l_index3) := 0;
                      u_ppl_ETC_COST_to_date_PC(l_index3) := 0;
                      u_ppl_ETC_RAWCOST_to_date_PC(l_index3) := 0;
                      u_actual_finish_date(l_index3) := l_asgn_sch_finish_date;
                   end if;
                   ETC_PROJECT_ID(l_index_etc) := l_project_id;
                   ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                   ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                   ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                   if (l_plan_type = 'P') then
                     ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                   elsif (l_plan_type = 'G') then
                     ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                   else
                     ETC_PERIOD_NAME(l_index_etc) := null;
                   end if;
                   ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                   ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                   ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                   ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                   ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                   ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                   ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                   ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                   ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                   ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                   ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                   ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                   -- here if extraction type is FULL we pass to_date values otherwise
                   -- incremental values only
                   if (p_extraction_type = 'FULL') then
                      ---5726773 ETC_QUANTITY(l_index_etc) := -u_ppl_act_effort_to_date(l_index3);
 	              ETC_QUANTITY(l_index_etc) := u_ppl_etc_effort_to_date(l_index3) - l_asgn_plan_quantity;
                      ETC_TXN_BURDENED_COST(l_index_etc) := u_ppl_ETC_COST_to_date_TC(l_index3) - l_asgn_plan_bur_cost_tc;
                      ETC_PRJ_BURDENED_COST(l_index_etc) := u_ppl_ETC_COST_to_date_PC(l_index3) - l_asgn_plan_bur_cost_pc;
                      ETC_PFC_BURDENED_COST(l_index_etc) := u_ppl_ETC_COST_to_date_FC(l_index3) - l_asgn_plan_bur_cost_fc;
                      ETC_TXN_RAW_COST(l_index_etc) := u_ppl_ETC_RAWCOST_to_date_TC(l_index3) - l_asgn_plan_raw_cost_tc;
                      ETC_PRJ_RAW_COST(l_index_etc) := u_ppl_ETC_RAWCOST_to_date_PC(l_index3) - l_asgn_plan_raw_cost_pc;
                      ETC_PFC_RAW_COST(l_index_etc) := u_ppl_ETC_RAWCOST_to_date_FC(l_index3) - l_asgn_plan_raw_cost_fc;
                   else
                      if (u_ppl_act_effort_to_date(l_index3) >= l_asgn_plan_quantity and l_asgn_plan_quantity > 0) or (u_ppl_act_effort_to_date(l_index3) <= l_asgn_plan_quantity and l_asgn_plan_quantity < 0) then  ---5726773
                         ETC_QUANTITY(l_index_etc) := -l_rollup_rec_asofdate.estimated_remaining_effort;
                         ETC_TXN_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_cost_tc;
                         ETC_PRJ_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_cost_pc;
                         ETC_PFC_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_cost_fc;
                         ETC_TXN_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_rawcost_tc;
                         ETC_PRJ_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_rawcost_pc;
                         ETC_PFC_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_rawcost_fc;
                      else
                         ---5726773 ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.ppl_act_effort_to_date - u_ppl_act_effort_to_date(l_index3);
 	                 ETC_QUANTITY(l_index_etc) := u_ppl_etc_effort_to_date(l_index3) - l_rollup_rec_asofdate.estimated_remaining_effort;
                         ETC_TXN_BURDENED_COST(l_index_etc) := u_ppl_ETC_COST_to_date_TC(l_index3) - l_rollup_rec_asofdate.ppl_etc_cost_tc;
                         ETC_PRJ_BURDENED_COST(l_index_etc) := u_ppl_ETC_COST_to_date_PC(l_index3) - l_rollup_rec_asofdate.ppl_etc_cost_pc;
                         ETC_PFC_BURDENED_COST(l_index_etc) := u_ppl_ETC_COST_to_date_FC(l_index3) - l_rollup_rec_asofdate.ppl_etc_cost_fc;
                         ETC_TXN_RAW_COST(l_index_etc) := u_ppl_ETC_RAWCOST_to_date_TC(l_index3) - l_rollup_rec_asofdate.ppl_etc_rawcost_tc;
                         ETC_PRJ_RAW_COST(l_index_etc) := u_ppl_ETC_RAWCOST_to_date_PC(l_index3) - l_rollup_rec_asofdate.ppl_etc_rawcost_pc;
                         ETC_PFC_RAW_COST(l_index_etc) := u_ppl_ETC_RAWCOST_to_date_FC(l_index3) - l_rollup_rec_asofdate.ppl_etc_rawcost_fc;
                      end if;
                   end if;
                else
                   u_ppl_etc_effort_to_date(l_index3) := l_rollup_rec_asofdate.estimated_remaining_effort;
                   u_ppl_ETC_COST_to_date_TC(l_index3) := l_rollup_rec_asofdate.ppl_etc_cost_tc;
                   u_ppl_ETC_RAWCOST_to_date_TC(l_index3) := l_rollup_rec_asofdate.ppl_etc_rawcost_tc;
                   u_ppl_ETC_COST_to_date_FC(l_index3) := l_rollup_rec_asofdate.ppl_etc_cost_fc;
                   u_ppl_ETC_RAWCOST_to_date_FC(l_index3) := l_rollup_rec_asofdate.ppl_etc_rawcost_fc;
                   u_ppl_ETC_COST_to_date_PC(l_index3) := l_rollup_rec_asofdate.ppl_etc_cost_pc;
                   u_ppl_ETC_RAWCOST_to_date_PC(l_index3) := l_rollup_rec_asofdate.ppl_etc_rawcost_pc;
                   u_actual_finish_date(l_index3) := l_rollup_rec_asofdate.actual_finish_date;
                   if (p_extraction_type = 'FULL') then
                      ETC_PROJECT_ID(l_index_etc) := l_project_id;
                      ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                      ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                      ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                      if (l_plan_type = 'P') then
                        ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                      elsif (l_plan_type = 'G') then
                        ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                      else
                        ETC_PERIOD_NAME(l_index_etc) := null;
                      end if;
                      ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                      ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                      ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                      ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                      ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                      ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                      ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                      ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                      ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                      ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                      ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                      ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                      ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.estimated_remaining_effort - l_asgn_plan_quantity;
                      ETC_TXN_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                      ETC_PRJ_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                      ETC_PFC_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                      ETC_TXN_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                      ETC_PRJ_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                      ETC_PFC_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
                   else
                      l_index_etc := l_index_etc - 1;
                   end if;
                end if;
            end if;
            u_eqpmt_act_cost_to_date_tc(l_index3) := nvl(u_eqpmt_act_cost_to_date_tc(l_index3),0) + nvl(l_eqpmt_act_cost_to_date_tc,0);
            u_eqpmt_act_rawcost_to_date_tc(l_index3) := nvl(u_eqpmt_act_rawcost_to_date_tc(l_index3),0) + nvl(l_eqpmt_act_rawcost_to_date_tc,0);
            u_eqpmt_act_cost_to_date_pc(l_index3) := nvl(u_eqpmt_act_cost_to_date_pc(l_index3),0) + nvl(all_objects_in_temp_rec.act_prj_equip_brdn_cost,0);
            u_eqpmt_act_rawcost_to_date_pc(l_index3) := nvl(u_eqpmt_act_rawcost_to_date_pc(l_index3),0) + nvl(all_objects_in_temp_rec.act_prj_equip_raw_cost,0);
            u_eqpmt_act_cost_to_date_fc(l_index3) := nvl(u_eqpmt_act_cost_to_date_fc(l_index3),0) + nvl(all_objects_in_temp_rec.act_pou_equip_brdn_cost,0);
            u_eqpmt_act_rawcost_to_date_fc(l_index3) := nvl(u_eqpmt_act_rawcost_to_date_fc(l_index3),0) + nvl(all_objects_in_temp_rec.act_pou_equip_raw_cost,0);
            u_eqpmt_etc_effort_to_date(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_effort;
            u_eqpmt_ETC_COST_to_date_TC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_cost_tc;
            u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
            u_eqpmt_ETC_COST_to_date_FC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_cost_fc;
            u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
            u_eqpmt_ETC_COST_to_date_PC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_cost_pc;
            u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
            if l_object_type = 'PA_ASSIGNMENTS' and
               l_res_class_code = 'EQUIPMENT' then
                ---5726773
		if (pa_progress_utils.check_etc_overridden(l_asgn_plan_quantity,l_rollup_rec_asofdate.eqpmt_act_effort_to_date,l_rollup_rec_asofdate.eqpmt_etc_effort) = 'N') then
		   u_eqpmt_etc_effort_to_date(l_index3) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,u_eqpmt_act_effort_to_date(l_index3));
		   if (u_eqpmt_etc_effort_to_date(l_index3) <> 0) then
                     pa_progress_utils.get_plan_costs_for_qty
                     (p_resource_list_mem_id  => l_object_id
                     ,p_project_id            => l_project_id
                     ,p_task_id               => all_objects_in_temp_rec.project_element_id
                     ,p_as_of_date            => l_temp_as_of_date
                     ,p_structure_version_id  => l_latest_wp_struct_ver_id
                     ,p_txn_currency_code     => l_txn_curr_code
                     ,p_rate_based_flag       => l_rate_based_flag
                     ,p_quantity              => u_eqpmt_etc_effort_to_date(l_index3)
                     ,p_budget_version_id     => l_plan_version_id --4372462
                     ,p_res_assignment_id     => l_res_assignment_id
                     ,x_rawcost_tc            => u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3)
                     ,x_brdncost_tc           => u_eqpmt_ETC_COST_to_date_TC(l_index3)
                     ,x_rawcost_pc            => u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3)
                     ,x_brdncost_pc           => u_eqpmt_ETC_COST_to_date_PC(l_index3)
                     ,x_rawcost_fc            => u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3)
                     ,x_brdncost_fc           => u_eqpmt_ETC_COST_to_date_FC(l_index3)
                     ,x_return_status         => x_return_status
                     ,x_msg_count             => x_msg_count
                     ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then  -- bug 6712595
                        if (u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    u_actual_finish_date(l_index3) := to_date(null);
                  else
                     u_eqpmt_etc_effort_to_date(l_index3) := 0;
                     u_eqpmt_ETC_COST_to_date_TC(l_index3) := 0;
                     u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) := 0;
                     u_eqpmt_ETC_COST_to_date_FC(l_index3) := 0;
                     u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3) := 0;
                     u_eqpmt_ETC_COST_to_date_PC(l_index3) := 0;
                     u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3) := 0;
                     u_actual_finish_date(l_index3) := l_asgn_sch_finish_date;
                  end if;
                  ETC_PROJECT_ID(l_index_etc) := l_project_id;
                  ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                  ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                  ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                  if (l_plan_type = 'P') then
                    ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                  elsif (l_plan_type = 'G') then
                    ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                  else
                    ETC_PERIOD_NAME(l_index_etc) := null;
                  end if;
                  ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                  ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                  ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                  ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                  ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                  ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                  ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                  ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                  ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                  ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                  ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                  ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                  -- here if extraction type is FULL we pass to_date values otherwise
                  -- incremental values only
                  if (p_extraction_type = 'FULL') then
                      ---5726773 ETC_QUANTITY(l_index_etc) := -u_eqpmt_act_effort_to_date(l_index3);
 	              ETC_QUANTITY(l_index_etc) := u_eqpmt_etc_effort_to_date(l_index3) - l_asgn_plan_quantity;
                      ETC_TXN_BURDENED_COST(l_index_etc) := u_eqpmt_ETC_COST_to_date_TC(l_index3) - l_asgn_plan_bur_cost_tc;
                      ETC_PRJ_BURDENED_COST(l_index_etc) := u_eqpmt_ETC_COST_to_date_PC(l_index3) - l_asgn_plan_bur_cost_pc;
                      ETC_PFC_BURDENED_COST(l_index_etc) := u_eqpmt_ETC_COST_to_date_FC(l_index3) - l_asgn_plan_bur_cost_fc;
                      ETC_TXN_RAW_COST(l_index_etc) := u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) - l_asgn_plan_raw_cost_tc;
                      ETC_PRJ_RAW_COST(l_index_etc) := u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3) - l_asgn_plan_raw_cost_pc;
                      ETC_PFC_RAW_COST(l_index_etc) := u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3) - l_asgn_plan_raw_cost_fc;
                   else
                      if (u_eqpmt_act_effort_to_date(l_index3) >= l_asgn_plan_quantity and l_asgn_plan_quantity > 0) or (u_eqpmt_act_effort_to_date(l_index3) <= l_asgn_plan_quantity and l_asgn_plan_quantity < 0) then  ---5726773
                         ETC_QUANTITY(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_effort;
                         ETC_TXN_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_cost_tc;
                         ETC_PRJ_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_cost_pc;
                         ETC_PFC_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_cost_fc;
                         ETC_TXN_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
                         ETC_PRJ_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
                         ETC_PFC_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
                      else
                         ---5726773 ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.eqpmt_act_effort_to_date - u_eqpmt_act_effort_to_date(l_index3);
 	                 ETC_QUANTITY(l_index_etc) := u_eqpmt_etc_effort_to_date(l_index3) - l_rollup_rec_asofdate.eqpmt_etc_effort;
                         ETC_TXN_BURDENED_COST(l_index_etc) := u_eqpmt_ETC_COST_to_date_TC(l_index3) - l_rollup_rec_asofdate.eqpmt_etc_cost_tc;
                         ETC_PRJ_BURDENED_COST(l_index_etc) := u_eqpmt_ETC_COST_to_date_PC(l_index3) - l_rollup_rec_asofdate.eqpmt_etc_cost_pc;
                         ETC_PFC_BURDENED_COST(l_index_etc) := u_eqpmt_ETC_COST_to_date_FC(l_index3) - l_rollup_rec_asofdate.eqpmt_etc_cost_fc;
                         ETC_TXN_RAW_COST(l_index_etc) := u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) - l_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
                         ETC_PRJ_RAW_COST(l_index_etc) := u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3) - l_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
                         ETC_PFC_RAW_COST(l_index_etc) := u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3) - l_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
                      end if;
                   end if;
               else
                  u_eqpmt_etc_effort_to_date(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_effort;
                  u_eqpmt_ETC_COST_to_date_TC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_cost_tc;
                  u_eqpmt_ETC_RAWCOST_to_date_TC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
                  u_eqpmt_ETC_COST_to_date_FC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_cost_fc;
                  u_eqpmt_ETC_RAWCOST_to_date_FC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
                  u_eqpmt_ETC_COST_to_date_PC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_cost_pc;
                  u_eqpmt_ETC_RAWCOST_to_date_PC(l_index3) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
                  u_actual_finish_date(l_index3) := l_rollup_rec_asofdate.actual_finish_date;
                  if (p_extraction_type = 'FULL') then
                     ETC_PROJECT_ID(l_index_etc) := l_project_id;
                     ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                     ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                     ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                     if (l_plan_type = 'P') then
                        ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                     elsif (l_plan_type = 'G') then
                        ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                     else
                        ETC_PERIOD_NAME(l_index_etc) := null;
                     end if;
                     ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                     ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                     ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                     ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                     ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                     ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                     ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                     ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                     ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                     ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                     ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                     ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                     ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_effort - l_asgn_plan_quantity;
                     ETC_TXN_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                     ETC_PRJ_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                     ETC_PFC_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                     ETC_TXN_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                     ETC_PRJ_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                     ETC_PFC_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
                  else
                     l_index_etc := l_index_etc - 1;
                  end if;
               end if;
            end if;
            --- here we need to calc PC and EV
            --- 5726773
	    if (l_planned_eff <> 0 and l_base_pc_deriv_code = 'EFFORT') then
	      l_percent_comp := (u_ppl_act_effort_to_date(l_index3)/(u_ppl_act_effort_to_date(l_index3) + u_ppl_etc_effort_to_date(l_index3)))*100;
               if (l_percent_comp > 100) then
                  l_percent_comp := 100;
               elsif (l_percent_comp < 0) then
                  l_percent_comp := 0;
               end if;
               l_eff_rollup_pc := l_percent_comp;
               l_earned_val := l_percent_comp * l_planned_eff;
            elsif (l_planned_cost <> 0 and l_base_pc_deriv_code = 'COST') then  -- COST based
	       l_percent_comp := (u_ppl_act_cost_to_date_pc(l_index3)/(u_ppl_act_cost_to_date_pc(l_index3) + u_ppl_etc_cost_to_date_pc(l_index3)))*100;
               if (l_percent_comp > 100) then
                 l_percent_comp := 100;
               elsif (l_percent_comp < 0) then
                 l_percent_comp := 0;
               end if;
               l_eff_rollup_pc := l_percent_comp;
               l_earned_val := l_percent_comp * l_planned_cost;
            else
               l_percent_comp := l_rollup_rec_asofdate.completed_percentage;
               l_eff_rollup_pc := l_rollup_rec_asofdate.eff_rollup_percent_comp;
               l_earned_val := l_rollup_rec_asofdate.earned_value;
            end if;
            u_completed_percentage(l_index3) := l_rollup_rec_asofdate.completed_percentage;
            u_eff_rollup_percent_comp(l_index3) := l_eff_rollup_pc;
            u_earned_val(l_index3) := l_earned_val;

          elsif (l_db_case = '3') then
            --- get progress attrs for the task/assignment

            select pa_progress_rollup_s.nextval into progress_rollup_id(l_index2) from dual;
            percent_complete_id(l_index2) := to_number(null);
            project_id(l_index2) := l_project_id;
            object_id(l_index2) := l_object_id;
            OBJECT_TYPE(l_index2) := l_rollup_rec_asofdate.object_Type;
            as_of_Date(l_index2) := l_temp_as_of_date;
            object_version_id(l_index2) := l_object_version_id;
            LAST_UPDATE_DATE(l_index2) := sysdate;
            LAST_UPDATED_BY(l_index2) := fnd_global.user_id;
            CREATION_DATE(l_index2) := sysdate;
            CREATED_BY(l_index2) := fnd_global.user_id;
            PROGRESS_STATUS_CODE(l_index2) := l_rollup_rec_asofdate.progress_status_code;
            LAST_UPDATE_LOGIN(l_index2) := fnd_global.login_id ;
            INCREMENTAL_WORK_QUANTITY(l_index2) := l_rollup_rec_asofdate.INCREMENTAL_WORK_QUANTITY;
            CUMULATIVE_WORK_QUANTITY(l_index2) := l_rollup_rec_asofdate.CUMULATIVE_WORK_QUANTITY;
            base_percent_complete(l_index2) := l_rollup_rec_asofdate.base_percent_complete;
            ESTIMATED_START_DATE(l_index2) := l_rollup_rec_asofdate.ESTIMATED_START_DATE;
            ESTIMATED_FINISH_DATE(l_index2) := l_rollup_rec_asofdate.ESTIMATED_FINISH_DATE;
            actual_start_date(l_index2) := l_rollup_rec_asofdate.actual_start_date;
            actual_finish_date(l_index2) := l_rollup_rec_asofdate.actual_finish_date;
            RECORD_VERSION_NUMBER(l_index2) := 1;
            base_percent_comp_deriv_code(l_index2) := l_rollup_rec_asofdate.base_percent_comp_deriv_code;
            BASE_PROGRESS_STATUS_CODE(l_index2) := l_rollup_rec_asofdate.BASE_PROGRESS_STATUS_CODE;
            EFF_ROLLUP_PROG_STAT_CODE(l_index2) := l_rollup_rec_asofdate.EFF_ROLLUP_PROG_STAT_CODE;
            STRUCTURE_TYPE(l_index2) := l_rollup_rec_asofdate.STRUCTURE_TYPE;
            PROJ_ELEMENT_ID(l_index2) := l_rollup_rec_asofdate.PROJ_ELEMENT_ID;
            STRUCTURE_VERSION_ID(l_index2) := l_rollup_rec_asofdate.STRUCTURE_VERSION_ID;
            if (l_object_Type = 'PA_ASSIGNMENTS') then
               if (l_rate_based_flag = 'N') then
                  oth_qty(l_index2) := nvl(oth_qty(l_index2),0) + (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(l_eqpmt_act_rawcost_to_date_tc,0)));
               else
                  oth_qty(l_index2) := nvl(oth_qty(l_index2),0) + nvl(all_objects_in_temp_rec.quantity,0) - nvl(all_objects_in_temp_rec.act_labor_hrs,0) - nvl(all_objects_in_temp_rec.act_equip_hrs,0);
               end if;
               --  Bug 6917961
               if (PROGRESS_STATUS_CODE(l_index2) is null and actual_start_date(l_index2) is not null
                and actual_finish_date(l_index2) is null) then
                  l_prog_enable_flag := 'N';
                  l_prog_stat_code := null;
                  OPEN cur_prog_setup(l_rollup_rec_asofdate.PROJ_ELEMENT_ID,l_project_id);
                  FETCH cur_prog_setup INTO l_prog_enable_flag, l_prog_stat_code;
                  CLOSE cur_prog_setup;
                  if (l_prog_enable_flag = 'Y') then
                     PROGRESS_STATUS_CODE(l_index2) := l_prog_stat_code;
                  end if;
               end if;
               -- Bug 6917961
            end if;
            oth_act_cost_to_date_tc(l_index2) := nvl(oth_act_cost_to_date_tc(l_index2),0) + (nvl(L_ACT_COST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_COST_TO_DATE_TC,0) + nvl(all_objects_in_temp_rec.act_txn_equip_brdn_cost,0)));
            oth_act_rawcost_to_date_tc(l_index2) := nvl(oth_act_rawcost_to_date_tc(l_index2),0) + (nvl(L_ACT_RAWCOST_TO_DATE_TC,0) - (nvl(L_PPL_ACT_RAWCOST_TO_DATE_TC,0) + nvl(l_eqpmt_act_rawcost_to_date_tc,0)));
            oth_act_cost_to_date_pc(l_index2) := nvl(oth_act_cost_to_date_pc(l_index2),0) + (nvl(all_objects_in_temp_rec.act_prj_brdn_cost,0) - (nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0)
                + nvl(all_objects_in_temp_rec.act_prj_equip_brdn_cost,0)));
            oth_act_rawcost_to_date_pc(l_index2) := nvl(oth_act_rawcost_to_date_pc(l_index2),0) + (nvl(all_objects_in_temp_rec.act_prj_raw_cost,0) - (nvl(all_objects_in_temp_rec.act_prj_labor_raw_cost,0)
                + nvl(all_objects_in_temp_rec.act_prj_equip_raw_cost,0)));
            oth_act_cost_to_date_fc(l_index2) := nvl(oth_act_cost_to_date_fc(l_index2),0) + (nvl(all_objects_in_temp_rec.act_pou_brdn_cost,0) - (nvl(all_objects_in_temp_rec.act_pou_labor_brdn_cost,0)
                + nvl(all_objects_in_temp_rec.act_pou_equip_brdn_cost,0)));
            oth_act_rawcost_to_date_fc(l_index2) := nvl(oth_act_rawcost_to_date_fc(l_index2),0) + (nvl(all_objects_in_temp_rec.act_pou_raw_cost,0) - (nvl(all_objects_in_temp_rec.act_pou_labor_raw_cost,0)
                + nvl(all_objects_in_temp_rec.act_pou_equip_raw_cost,0)));
            oth_etc_qty(l_index2) := l_rollup_rec_asofdate.oth_etc_quantity;
            OTH_ETC_COST_TC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_COST_TC;
            OTH_ETC_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_RAWCOST_TC;
            OTH_ETC_COST_FC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_COST_FC;
            OTH_ETC_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_RAWCOST_FC;
            OTH_ETC_COST_PC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_COST_PC;
            OTH_ETC_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_RAWCOST_PC;
            if l_object_type = 'PA_ASSIGNMENTS' and
               l_res_class_code in ('FINANCIAL_ELEMENTS', 'MATERIAL_ITEMS') then
               ---5726773
	       if (pa_progress_utils.check_etc_overridden(l_asgn_plan_quantity,l_rollup_rec_asofdate.oth_quantity_to_date,l_rollup_rec_asofdate.OTH_ETC_QUANTITY) = 'N') then
	          oth_etc_qty(l_index2) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,oth_qty(l_index2));
		  if (oth_etc_qty(l_index2) <> 0) then
                     pa_progress_utils.get_plan_costs_for_qty
                     ( p_resource_list_mem_id  => l_object_id
                     ,p_project_id            => l_project_id
                     ,p_task_id               => all_objects_in_temp_rec.project_element_id
                     ,p_as_of_date            => l_temp_as_of_date
                     ,p_structure_version_id  => l_latest_wp_struct_ver_id
                     ,p_txn_currency_code     => l_txn_curr_code
                     ,p_rate_based_flag       => l_rate_based_flag
                     ,p_quantity              => oth_etc_qty(l_index2)
                     ,p_budget_version_id     => l_plan_version_id --4372462
                     ,p_res_assignment_id     => l_res_assignment_id
                     ,x_rawcost_tc            => OTH_ETC_RAWCOST_TC(l_index2)
                     ,x_brdncost_tc           => OTH_ETC_COST_TC(l_index2)
                     ,x_rawcost_pc            => OTH_ETC_RAWCOST_PC(l_index2)
                     ,x_brdncost_pc           => OTH_ETC_COST_PC(l_index2)
                     ,x_rawcost_fc            => OTH_ETC_RAWCOST_FC(l_index2)
                     ,x_brdncost_fc           => OTH_ETC_COST_FC(l_index2)
                     ,x_return_status         => x_return_status
                     ,x_msg_count             => x_msg_count
                     ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then  -- bug 6712595
                        if (OTH_ETC_RAWCOST_TC(l_index2) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    actual_finish_date(l_index2) := to_date(null);
                  else
                     oth_etc_qty(l_index2) := 0;
                     OTH_ETC_COST_TC(l_index2) := 0;
                     OTH_ETC_RAWCOST_TC(l_index2) := 0;
                     OTH_ETC_COST_FC(l_index2) := 0;
                     OTH_ETC_RAWCOST_FC(l_index2) := 0;
                     OTH_ETC_COST_PC(l_index2) := 0;
                     OTH_ETC_RAWCOST_PC(l_index2) := 0;
                     actual_finish_date(l_index2) := l_asgn_sch_finish_date;
                  end if;
                  ETC_PROJECT_ID(l_index_etc) := l_project_id;
                  ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                  ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                  ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                  if (l_plan_type = 'P') then
                    ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                  elsif (l_plan_type = 'G') then
                    ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                  else
                    ETC_PERIOD_NAME(l_index_etc) := null;
                  end if;
                  ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                  ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                  ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                  ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                  ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                  ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                  ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                  ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                  ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                  ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                  ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                  ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                  -- here if extraction type is FULL we pass to_date values otherwise
                  -- incremental values only
                  if (p_extraction_type = 'FULL') then
                     --- 5726773 ETC_QUANTITY(l_index_etc) := -oth_qty(l_index2);
 	             ETC_QUANTITY(l_index_etc) := oth_etc_qty(l_index2) - l_asgn_plan_quantity;
                     ETC_TXN_BURDENED_COST(l_index_etc) := OTH_ETC_COST_TC(l_index2) - l_asgn_plan_bur_cost_tc;
                     ETC_PRJ_BURDENED_COST(l_index_etc) := OTH_ETC_COST_PC(l_index2) - l_asgn_plan_bur_cost_pc;
                     ETC_PFC_BURDENED_COST(l_index_etc) := OTH_ETC_COST_FC(l_index2) - l_asgn_plan_bur_cost_fc;
                     ETC_TXN_RAW_COST(l_index_etc) := OTH_ETC_RAWCOST_TC(l_index2) - l_asgn_plan_raw_cost_tc;
                     ETC_PRJ_RAW_COST(l_index_etc) := OTH_ETC_RAWCOST_PC(l_index2) - l_asgn_plan_raw_cost_pc;
                     ETC_PFC_RAW_COST(l_index_etc) := OTH_ETC_RAWCOST_FC(l_index2) - l_asgn_plan_raw_cost_fc;
                  else
                     if (oth_qty(l_index2) >= l_asgn_plan_quantity and l_asgn_plan_quantity > 0) or (oth_qty(l_index2) <= l_asgn_plan_quantity and l_asgn_plan_quantity < 0) then  ---5726773
                        ETC_QUANTITY(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_quantity;
                        ETC_TXN_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_cost_tc;
                        ETC_PRJ_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_cost_pc;
                        ETC_PFC_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_cost_fc;
                        ETC_TXN_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_rawcost_tc;
                        ETC_PRJ_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_rawcost_pc;
                        ETC_PFC_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.oth_etc_rawcost_fc;
                     else
                        ETC_QUANTITY(l_index_etc) := oth_etc_qty(l_index2) - l_rollup_rec_asofdate.oth_etc_quantity;
                        ETC_TXN_BURDENED_COST(l_index_etc) := OTH_ETC_COST_TC(l_index2) - l_rollup_rec_asofdate.oth_etc_cost_tc;
                        ETC_PRJ_BURDENED_COST(l_index_etc) := OTH_ETC_COST_PC(l_index2) - l_rollup_rec_asofdate.oth_etc_cost_pc;
                        ETC_PFC_BURDENED_COST(l_index_etc) := OTH_ETC_COST_FC(l_index2) - l_rollup_rec_asofdate.oth_etc_cost_fc;
                        ETC_TXN_RAW_COST(l_index_etc) := OTH_ETC_RAWCOST_TC(l_index2) - l_rollup_rec_asofdate.oth_etc_rawcost_tc;
                        ETC_PRJ_RAW_COST(l_index_etc) := OTH_ETC_RAWCOST_PC(l_index2) - l_rollup_rec_asofdate.oth_etc_rawcost_pc;
                        ETC_PFC_RAW_COST(l_index_etc) := OTH_ETC_RAWCOST_FC(l_index2) - l_rollup_rec_asofdate.oth_etc_rawcost_fc;
                     end if;
                  end if;
               else
                  oth_etc_qty(l_index2) := l_rollup_rec_asofdate.oth_etc_quantity;
                  OTH_ETC_COST_TC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_COST_TC;
                  OTH_ETC_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_RAWCOST_TC;
                  OTH_ETC_COST_FC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_COST_FC;
                  OTH_ETC_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_RAWCOST_FC;
                  OTH_ETC_COST_PC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_COST_PC;
                  OTH_ETC_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.OTH_ETC_RAWCOST_PC;
                  actual_finish_date(l_index2) := l_rollup_rec_asofdate.actual_finish_date;
                  if (p_extraction_type = 'FULL') then
                     ETC_PROJECT_ID(l_index_etc) := l_project_id;
                     ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                     ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                     ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                     if (l_plan_type = 'P') then
                       ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                     elsif (l_plan_type = 'G') then
                       ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                     else
                       ETC_PERIOD_NAME(l_index_etc) := null;
                     end if;
                     ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                     ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                     ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                     ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                     ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                     ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                     ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                     ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                     ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                     ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                     ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                     ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                     ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.oth_etc_quantity - l_asgn_plan_quantity;
                     ETC_TXN_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                     ETC_PRJ_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                     ETC_PFC_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                     ETC_TXN_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                     ETC_PRJ_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                     ETC_PFC_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.oth_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
                  else
                     l_index_etc := l_index_etc - 1;
                  end if;
               end if;
            end if;
            ppl_act_effort_to_date(l_index2) := nvl(ppl_act_effort_to_date(l_index2),0) + nvl(all_objects_in_temp_rec.act_labor_hrs,0);
            ppl_act_cost_to_date_tc(l_index2) := nvl(ppl_act_cost_to_date_tc(l_index2),0) + nvl(l_ppl_act_cost_to_date_tc,0);
            ppl_act_rawcost_to_date_tc(l_index2) := nvl(ppl_act_rawcost_to_date_tc(l_index2),0) + nvl(l_ppl_act_rawcost_to_date_tc,0);
            ppl_act_cost_to_date_pc(l_index2) := nvl(ppl_act_cost_to_date_pc(l_index2),0) + nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0);
            ppl_act_rawcost_to_date_pc(l_index2) := nvl(ppl_act_rawcost_to_date_pc(l_index2),0) + nvl(all_objects_in_temp_rec.act_prj_labor_raw_cost,0);
            ppl_act_cost_to_date_fc(l_index2) := nvl(ppl_act_cost_to_date_fc(l_index2),0) + nvl(all_objects_in_temp_rec.act_pou_labor_brdn_cost,0);
            ppl_act_rawcost_to_date_fc(l_index2) := nvl(ppl_act_rawcost_to_date_fc(l_index2),0) + nvl(all_objects_in_temp_rec.act_pou_labor_raw_cost,0);
            ESTIMATED_REMAINING_EFFORT(l_index2) := l_rollup_rec_asofdate.ESTIMATED_REMAINING_EFFORT;
            PPL_ETC_COST_TC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_COST_TC;
            PPL_ETC_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_RAWCOST_TC;
            PPL_ETC_COST_PC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_COST_PC;
            PPL_ETC_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_RAWCOST_PC;
            PPL_ETC_COST_FC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_COST_FC;
            PPL_ETC_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_RAWCOST_FC;
            if l_object_type = 'PA_ASSIGNMENTS' and l_res_class_code = 'PEOPLE' then
               ---5726773
	       if (pa_progress_utils.check_etc_overridden(l_asgn_plan_quantity,l_rollup_rec_asofdate.ppl_act_effort_to_date,l_rollup_rec_asofdate.estimated_remaining_effort) = 'N') then
	          ESTIMATED_REMAINING_EFFORT(l_index2) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,ppl_act_effort_to_date(l_index2));
		  if (ESTIMATED_REMAINING_EFFORT(l_index2) <> 0) then
                     pa_progress_utils.get_plan_costs_for_qty
                     ( p_resource_list_mem_id  => l_object_id
                     ,p_project_id            => l_project_id
                     ,p_task_id               => all_objects_in_temp_rec.project_element_id
                     ,p_as_of_date            => l_temp_as_of_date
                     ,p_structure_version_id  => l_latest_wp_struct_ver_id
                     ,p_txn_currency_code     => l_txn_curr_code
                     ,p_rate_based_flag       => l_rate_based_flag
                     ,p_quantity              => ESTIMATED_REMAINING_EFFORT(l_index2)
                     ,p_budget_version_id     => l_plan_version_id --4372462
                     ,p_res_assignment_id     => l_res_assignment_id
                     ,x_rawcost_tc            => PPL_ETC_RAWCOST_TC(l_index2)
                     ,x_brdncost_tc           => PPL_ETC_COST_TC(l_index2)
                     ,x_rawcost_pc            => PPL_ETC_RAWCOST_PC(l_index2)
                     ,x_brdncost_pc           => PPL_ETC_COST_PC(l_index2)
                     ,x_rawcost_fc            => PPL_ETC_RAWCOST_FC(l_index2)
                     ,x_brdncost_fc           => PPL_ETC_COST_FC(l_index2)
                     ,x_return_status         => x_return_status
                     ,x_msg_count             => x_msg_count
                     ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then  -- bug 6712595
                        if (PPL_ETC_RAWCOST_TC(l_index2) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    actual_finish_date(l_index2) := to_date(null);
                  else
                     ESTIMATED_REMAINING_EFFORT(l_index2) := 0;
                     PPL_ETC_COST_TC(l_index2) := 0;
                     PPL_ETC_RAWCOST_TC(l_index2) := 0;
                     PPL_ETC_COST_PC(l_index2) := 0;
                     PPL_ETC_RAWCOST_PC(l_index2) := 0;
                     PPL_ETC_COST_FC(l_index2) := 0;
                     PPL_ETC_RAWCOST_FC(l_index2) := 0;
                     actual_finish_date(l_index2) := l_asgn_sch_finish_date;
                  end if;
                  ETC_PROJECT_ID(l_index_etc) := l_project_id;
                  ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                  ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                  ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                  if (l_plan_type = 'P') then
                    ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                  elsif (l_plan_type = 'G') then
                    ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                  else
                    ETC_PERIOD_NAME(l_index_etc) := null;
                  end if;
                  ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                  ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                  ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                  ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                  ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                  ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                  ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                  ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                  ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                  ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                  ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                  ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                  -- here if extraction type is FULL we pass to_date values otherwise
                  -- incremental values only
                  if (p_extraction_type = 'FULL') then
                      ---5726773 ETC_QUANTITY(l_index_etc) := -ppl_act_effort_to_date(l_index2);
 	              ETC_QUANTITY(l_index_etc) := estimated_remaining_effort(l_index2) - l_asgn_plan_quantity;
                      ETC_TXN_BURDENED_COST(l_index_etc) := ppl_ETC_COST_TC(l_index2) - l_asgn_plan_bur_cost_tc;
                      ETC_PRJ_BURDENED_COST(l_index_etc) := ppl_ETC_COST_PC(l_index2) - l_asgn_plan_bur_cost_pc;
                      ETC_PFC_BURDENED_COST(l_index_etc) := ppl_ETC_COST_FC(l_index2) - l_asgn_plan_bur_cost_fc;
                      ETC_TXN_RAW_COST(l_index_etc) := ppl_ETC_RAWCOST_TC(l_index2) - l_asgn_plan_raw_cost_tc;
                      ETC_PRJ_RAW_COST(l_index_etc) := ppl_ETC_RAWCOST_PC(l_index2) - l_asgn_plan_raw_cost_pc;
                      ETC_PFC_RAW_COST(l_index_etc) := ppl_ETC_RAWCOST_FC(l_index2) - l_asgn_plan_raw_cost_fc;
                  else
                      if (ppl_act_effort_to_date(l_index2) >= l_asgn_plan_quantity and l_asgn_plan_quantity > 0) or (ppl_act_effort_to_date(l_index2) <= l_asgn_plan_quantity and l_asgn_plan_quantity < 0) then  ---5726773
                         ETC_QUANTITY(l_index_etc) := -l_rollup_rec_asofdate.estimated_remaining_effort;
                         ETC_TXN_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_cost_tc;
                         ETC_PRJ_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_cost_pc;
                         ETC_PFC_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_cost_fc;
                         ETC_TXN_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_rawcost_tc;
                         ETC_PRJ_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_rawcost_pc;
                         ETC_PFC_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.ppl_etc_rawcost_fc;
                      else
                         ---5726773 ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.ppl_act_effort_to_date - ppl_act_effort_to_date(l_index2);
 	                 ETC_QUANTITY(l_index_etc) := estimated_remaining_effort(l_index2) - l_rollup_rec_asofdate.estimated_remaining_effort;
                         ETC_TXN_BURDENED_COST(l_index_etc) := ppl_ETC_COST_TC(l_index2) - l_rollup_rec_asofdate.ppl_etc_cost_tc;
                         ETC_PRJ_BURDENED_COST(l_index_etc) := ppl_ETC_COST_PC(l_index2) - l_rollup_rec_asofdate.ppl_etc_cost_pc;
                         ETC_PFC_BURDENED_COST(l_index_etc) := ppl_ETC_COST_FC(l_index2) - l_rollup_rec_asofdate.ppl_etc_cost_fc;
                         ETC_TXN_RAW_COST(l_index_etc) := ppl_ETC_RAWCOST_TC(l_index2) - l_rollup_rec_asofdate.ppl_etc_rawcost_tc;
                         ETC_PRJ_RAW_COST(l_index_etc) := ppl_ETC_RAWCOST_PC(l_index2) - l_rollup_rec_asofdate.ppl_etc_rawcost_pc;
                         ETC_PFC_RAW_COST(l_index_etc) := ppl_ETC_RAWCOST_FC(l_index2) - l_rollup_rec_asofdate.ppl_etc_rawcost_fc;
                      end if;
                  end if;
               else
                  ESTIMATED_REMAINING_EFFORT(l_index2) := l_rollup_rec_asofdate.ESTIMATED_REMAINING_EFFORT;
                  PPL_ETC_COST_TC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_COST_TC;
                  PPL_ETC_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_RAWCOST_TC;
                  PPL_ETC_COST_PC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_COST_PC;
                  PPL_ETC_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_RAWCOST_PC;
                  PPL_ETC_COST_FC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_COST_FC;
                  PPL_ETC_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.PPL_ETC_RAWCOST_FC;
                  actual_finish_date(l_index2) := l_rollup_rec_asofdate.actual_finish_date;
                  if (p_extraction_type = 'FULL') then
                     ETC_PROJECT_ID(l_index_etc) := l_project_id;
                     ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                     ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                     ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                     if (l_plan_type = 'P') then
                       ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                     elsif (l_plan_type = 'G') then
                       ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                     else
                       ETC_PERIOD_NAME(l_index_etc) := null;
                     end if;
                     ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                     ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                     ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                     ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                     ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                     ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                     ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                     ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                     ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                     ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                     ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                     ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                     ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.estimated_remaining_effort - l_asgn_plan_quantity;
                     ETC_TXN_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                     ETC_PRJ_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                     ETC_PFC_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                     ETC_TXN_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                     ETC_PRJ_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                     ETC_PFC_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.ppl_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
                  else
                     l_index_etc := l_index_etc - 1;
                  end if;
               end if;
            end if;
            eqpmt_act_effort_to_date(l_index2) := nvl(eqpmt_act_effort_to_date(l_index2),0) + nvl(all_objects_in_temp_rec.act_equip_hrs,0);
            eqpmt_act_cost_to_date_tc(l_index2) := nvl(eqpmt_act_cost_to_date_tc(l_index2),0) + nvl(l_eqpmt_act_cost_to_date_tc,0);
            eqpmt_act_rawcost_to_date_tc(l_index2) := nvl(eqpmt_act_rawcost_to_date_tc(l_index2),0) + nvl(l_eqpmt_act_rawcost_to_date_tc,0);
            eqpmt_act_cost_to_date_pc(l_index2) := nvl(eqpmt_act_cost_to_date_pc(l_index2),0) + nvl(all_objects_in_temp_rec.act_prj_equip_brdn_cost,0);
            eqpmt_act_rawcost_to_date_pc(l_index2) := nvl(eqpmt_act_rawcost_to_date_pc(l_index2),0) + nvl(all_objects_in_temp_rec.act_prj_equip_raw_cost,0);
            eqpmt_act_cost_to_date_fc(l_index2) := nvl(eqpmt_act_cost_to_date_fc(l_index2),0) + nvl(all_objects_in_temp_rec.act_pou_equip_brdn_cost,0);
            eqpmt_act_rawcost_to_date_fc(l_index2) := nvl(eqpmt_act_rawcost_to_date_fc(l_index2),0) + nvl(all_objects_in_temp_rec.act_pou_equip_raw_cost,0);
            EQPMT_ETC_EFFORT(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_EFFORT;
            EQPMT_ETC_COST_TC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_COST_TC;
            EQPMT_ETC_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_RAWCOST_TC;
            EQPMT_ETC_COST_PC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_COST_PC;
            EQPMT_ETC_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_RAWCOST_PC;
            EQPMT_ETC_COST_FC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_COST_FC;
            EQPMT_ETC_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_RAWCOST_FC;
            if l_object_type = 'PA_ASSIGNMENTS' and l_res_class_code = 'EQUIPMENT' then
               ---5726773
	       if (pa_progress_utils.check_etc_overridden(l_asgn_plan_quantity,l_rollup_rec_asofdate.eqpmt_act_effort_to_date,l_rollup_rec_asofdate.eqpmt_etc_effort) = 'N') then
	          EQPMT_ETC_EFFORT(l_index2) := PA_FP_FCST_GEN_AMT_UTILS.get_etc_from_plan_act(l_asgn_plan_quantity,eqpmt_act_effort_to_date(l_index2));
		  if (EQPMT_ETC_EFFORT(l_index2) <> 0) then
                     pa_progress_utils.get_plan_costs_for_qty
                     ( p_resource_list_mem_id  => l_object_id
                     ,p_project_id            => l_project_id
                     ,p_task_id               => all_objects_in_temp_rec.project_element_id
                     ,p_as_of_date            => l_temp_as_of_date
                     ,p_structure_version_id  => l_latest_wp_struct_ver_id
                     ,p_txn_currency_code     => l_txn_curr_code
                     ,p_rate_based_flag       => l_rate_based_flag
                     ,p_quantity              => EQPMT_ETC_EFFORT(l_index2)
                     ,p_budget_version_id     => l_plan_version_id --4372462
                     ,p_res_assignment_id     => l_res_assignment_id
                     ,x_rawcost_tc            => EQPMT_ETC_RAWCOST_TC(l_index2)
                     ,x_brdncost_tc           => EQPMT_ETC_COST_TC(l_index2)
                     ,x_rawcost_pc            => EQPMT_ETC_RAWCOST_PC(l_index2)
                     ,x_brdncost_pc           => EQPMT_ETC_COST_PC(l_index2)
                     ,x_rawcost_fc            => EQPMT_ETC_RAWCOST_FC(l_index2)
                     ,x_brdncost_fc           => EQPMT_ETC_COST_FC(l_index2)
                     ,x_return_status         => x_return_status
                     ,x_msg_count             => x_msg_count
                     ,x_msg_data              => x_msg_data);
		    if (x_return_status <> 'S') then  -- bug 6712595
                        if (EQPMT_ETC_RAWCOST_TC(l_index2) is null) then
			  pa_debug.log_message('The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                          l_err_msg := 'The planned amount is missing a raw cost. Actualls will not map to the Planned amounts if Planned amounts have missing Cost amounts. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			else
			  pa_debug.log_message('ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||'
                          , Res Assign Id:'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||'
                          , Txn Curr:'||l_txn_curr_code,1,'PLAIN','OUT');
                           -- Added for bug 5526638
                          l_err_msg := 'ETC cost calculation failed. Task:'||all_objects_in_temp_rec.project_element_id||
                                  ' , Res Assign Id :'||l_res_assignment_id||' , Budget Ver Id:'||l_plan_version_id||' , Txn Curr:'||l_txn_curr_code;
			 end if;
                        raise l_no_rate_exception;
                    end if;
		    actual_finish_date(l_index2) := to_date(null);
                  else
                     EQPMT_ETC_EFFORT(l_index2) := 0;
                     eqpmt_ETC_COST_TC(l_index2) := 0;
                     eqpmt_ETC_RAWCOST_TC(l_index2) := 0;
                     eqpmt_ETC_COST_PC(l_index2) := 0;
                     eqpmt_ETC_RAWCOST_PC(l_index2) := 0;
                     eqpmt_ETC_COST_FC(l_index2) := 0;
                     eqpmt_ETC_RAWCOST_FC(l_index2) := 0;
                     actual_finish_date(l_index2) := l_asgn_sch_finish_date;
                  end if;
                  ETC_PROJECT_ID(l_index_etc) := l_project_id;
                  ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                  ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                  ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                  if (l_plan_type = 'P') then
                    ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                  elsif (l_plan_type = 'G') then
                    ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                  else
                    ETC_PERIOD_NAME(l_index_etc) := null;
                  end if;
                  ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                  ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                  ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                  ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                  ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                  ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                  ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                  ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                  ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                  ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                  ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                  ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                  -- here if extraction type is FULL we pass to_date values otherwise
                  -- incremental values only
                  if (p_extraction_type = 'FULL') then
                      ---5726773 ETC_QUANTITY(l_index_etc) := -eqpmt_act_effort_to_date(l_index2);
 	              ETC_QUANTITY(l_index_etc) := eqpmt_etc_effort(l_index2) - l_asgn_plan_quantity;
                      ETC_TXN_BURDENED_COST(l_index_etc) := eqpmt_ETC_COST_TC(l_index2) - l_asgn_plan_bur_cost_tc;
                      ETC_PRJ_BURDENED_COST(l_index_etc) := eqpmt_ETC_COST_PC(l_index2) - l_asgn_plan_bur_cost_pc;
                      ETC_PFC_BURDENED_COST(l_index_etc) := eqpmt_ETC_COST_FC(l_index2) - l_asgn_plan_bur_cost_fc;
                      ETC_TXN_RAW_COST(l_index_etc) := eqpmt_ETC_RAWCOST_TC(l_index2) - l_asgn_plan_raw_cost_tc;
                      ETC_PRJ_RAW_COST(l_index_etc) := eqpmt_ETC_RAWCOST_PC(l_index2) - l_asgn_plan_raw_cost_pc;
                      ETC_PFC_RAW_COST(l_index_etc) := eqpmt_ETC_RAWCOST_FC(l_index2) - l_asgn_plan_raw_cost_fc;
                   else
                      if (eqpmt_act_effort_to_date(l_index2) >= l_asgn_plan_quantity and l_asgn_plan_quantity > 0) or (eqpmt_act_effort_to_date(l_index2) <= l_asgn_plan_quantity and l_asgn_plan_quantity < 0) then  ---5726773
                         ETC_QUANTITY(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_effort;
                         ETC_TXN_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_cost_tc;
                         ETC_PRJ_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_cost_pc;
                         ETC_PFC_BURDENED_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_cost_fc;
                         ETC_TXN_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
                         ETC_PRJ_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
                         ETC_PFC_RAW_COST(l_index_etc) := -l_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
                      else
                         ---5726773 ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.eqpmt_act_effort_to_date - eqpmt_act_effort_to_date(l_index2);
 	                 ETC_QUANTITY(l_index_etc) := eqpmt_etc_effort(l_index2) - l_rollup_rec_asofdate.eqpmt_etc_effort;
                         ETC_TXN_BURDENED_COST(l_index_etc) := eqpmt_ETC_COST_TC(l_index2) - l_rollup_rec_asofdate.eqpmt_etc_cost_tc;
                         ETC_PRJ_BURDENED_COST(l_index_etc) := eqpmt_ETC_COST_PC(l_index2) - l_rollup_rec_asofdate.eqpmt_etc_cost_pc;
                         ETC_PFC_BURDENED_COST(l_index_etc) := eqpmt_ETC_COST_FC(l_index2) - l_rollup_rec_asofdate.eqpmt_etc_cost_fc;
                         ETC_TXN_RAW_COST(l_index_etc) := eqpmt_ETC_RAWCOST_TC(l_index2) - l_rollup_rec_asofdate.eqpmt_etc_rawcost_tc;
                         ETC_PRJ_RAW_COST(l_index_etc) := eqpmt_ETC_RAWCOST_PC(l_index2) - l_rollup_rec_asofdate.eqpmt_etc_rawcost_pc;
                         ETC_PFC_RAW_COST(l_index_etc) := eqpmt_ETC_RAWCOST_FC(l_index2) - l_rollup_rec_asofdate.eqpmt_etc_rawcost_fc;
                      end if;
                   end if;
               else
                  EQPMT_ETC_EFFORT(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_EFFORT;
                  EQPMT_ETC_COST_TC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_COST_TC;
                  EQPMT_ETC_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_RAWCOST_TC;
                  EQPMT_ETC_COST_PC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_COST_PC;
                  EQPMT_ETC_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_RAWCOST_PC;
                  EQPMT_ETC_COST_FC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_COST_FC;
                  EQPMT_ETC_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.EQPMT_ETC_RAWCOST_FC;
                  actual_finish_date(l_index2) := l_rollup_rec_asofdate.actual_finish_date;
                  if (p_extraction_type = 'FULL') then
                     ETC_PROJECT_ID(l_index_etc) := l_project_id;
                     ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
                     ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_objects_in_temp_rec.project_element_id;
                     ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
                     if (l_plan_type = 'P') then
                       ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
                     elsif (l_plan_type = 'G') then
                       ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
                     else
                       ETC_PERIOD_NAME(l_index_etc) := null;
                     end if;
                     ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
                     ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
                     ETC_RBS_ELEMENT_ID(l_index_etc) := l_rbs_element_id;
                     ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
                     ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
                     ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
                     ETC_ROLLUP_TYPE(l_index_etc) := 'W';
                     ETC_TXN_CURRENCY_CODE(l_index_etc) := l_txn_curr_code;
                     ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_res_class_code;
                     ETC_RATE_BASED_FLAG(l_index_etc) := l_rate_based_flag;
                     ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
                     ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
                     ETC_QUANTITY(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_effort - l_asgn_plan_quantity;
                     ETC_TXN_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                     ETC_PRJ_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                     ETC_PFC_BURDENED_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                     ETC_TXN_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                     ETC_PRJ_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                     ETC_PFC_RAW_COST(l_index_etc) := l_rollup_rec_asofdate.eqpmt_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
                  else
                     l_index_etc := l_index_etc - 1;
                  end if;
               end if;
            end if;
            --- here we need to calc PC and EV
            --- 5726773
	    if (l_planned_eff <> 0 and l_base_pc_deriv_code = 'EFFORT') then
	      l_percent_comp := (ppl_act_effort_to_date(l_index2)/(ppl_act_effort_to_date(l_index2) + estimated_remaining_effort(l_index2)))*100;
              if (l_percent_comp > 100) then
                 l_percent_comp := 100;
              elsif (l_percent_comp < 0) then
                 l_percent_comp := 0;
              end if;
              l_earned_val := l_percent_comp * l_planned_eff;
              l_eff_rollup_pc := l_percent_comp;
            elsif (l_planned_cost <> 0 and l_base_pc_deriv_code = 'COST') then -- COST based
	      l_percent_comp := (ppl_act_cost_to_date_pc(l_index2)/(ppl_act_cost_to_date_pc(l_index2) + ppl_etc_cost_pc(l_index2)))*100;
              if (l_percent_comp > 100) then
                 l_percent_comp := 100;
              elsif (l_percent_comp < 0) then
                 l_percent_comp := 0;
              end if;
              l_earned_val := l_percent_comp * l_planned_cost;
              l_eff_rollup_pc := l_percent_comp;
            else
               l_percent_comp := l_rollup_rec_asofdate.completed_percentage;
               l_earned_val := l_rollup_rec_asofdate.earned_value;
               l_eff_rollup_pc := l_rollup_rec_asofdate.EFF_ROLLUP_PERCENT_COMP;
            end if;
            completed_percentage(l_index2) := l_rollup_rec_asofdate.completed_percentage;
            EFF_ROLLUP_PERCENT_COMP(l_index2) := l_eff_rollup_pc;
            earned_value(l_index2) := l_earned_val;
            TASK_WT_BASIS_CODE(l_index2) := l_rollup_rec_asofdate.TASK_WT_BASIS_CODE;
            SUBPRJ_PPL_ACT_EFFORT(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ACT_EFFORT;
            SUBPRJ_EQPMT_ACT_EFFORT(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ACT_EFFORT;
            SUBPRJ_PPL_ETC_EFFORT(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ETC_EFFORT;
            SUBPRJ_EQPMT_ETC_EFFORT(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ETC_EFFORT;
            SUBPRJ_OTH_ACT_COST_TO_DATE_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_OTH_ACT_COST_TO_DATE_TC;
            SPJ_OTH_ACT_RAWCOST_TO_DATE_TC(l_index2) := l_rollup_rec_asofdate.SPJ_OTH_ACT_RAWCOST_TO_DATE_TC;
            SUBPRJ_OTH_ACT_COST_TO_DATE_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_OTH_ACT_COST_TO_DATE_FC;
            SPJ_OTH_ACT_RAWCOST_TO_DATE_FC(l_index2) := l_rollup_rec_asofdate.SPJ_OTH_ACT_RAWCOST_TO_DATE_FC;
            SUBPRJ_OTH_ACT_COST_TO_DATE_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_OTH_ACT_COST_TO_DATE_PC;
            SPJ_OTH_ACT_RAWCOST_TO_DATE_PC(l_index2) := l_rollup_rec_asofdate.SPJ_OTH_ACT_RAWCOST_TO_DATE_PC;
            SUBPRJ_PPL_ACT_COST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ACT_COST_TC;
            SUBPRJ_PPL_ACT_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ACT_RAWCOST_TC;
            SUBPRJ_PPL_ACT_COST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ACT_COST_FC;
            SUBPRJ_PPL_ACT_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ACT_RAWCOST_FC;
            SUBPRJ_PPL_ACT_COST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ACT_COST_PC;
            SUBPRJ_PPL_ACT_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ACT_RAWCOST_PC;
            SUBPRJ_EQPMT_ACT_COST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ACT_COST_TC;
            SUBPRJ_EQPMT_ACT_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ACT_RAWCOST_TC;
            SUBPRJ_EQPMT_ACT_COST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ACT_COST_FC;
            SUBPRJ_EQPMT_ACT_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ACT_RAWCOST_FC;
            SUBPRJ_EQPMT_ACT_COST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ACT_COST_PC;
            SUBPRJ_EQPMT_ACT_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ACT_RAWCOST_PC;
            SUBPRJ_OTH_ETC_COST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_OTH_ETC_COST_TC;
            SUBPRJ_OTH_ETC_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_OTH_ETC_RAWCOST_TC;
            SUBPRJ_OTH_ETC_COST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_OTH_ETC_COST_FC;
            SUBPRJ_OTH_ETC_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_OTH_ETC_RAWCOST_FC;
            SUBPRJ_OTH_ETC_COST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_OTH_ETC_COST_PC;
            SUBPRJ_OTH_ETC_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_OTH_ETC_RAWCOST_PC;
            SUBPRJ_PPL_ETC_COST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ETC_COST_TC;
            SUBPRJ_PPL_ETC_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ETC_RAWCOST_TC;
            SUBPRJ_PPL_ETC_COST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ETC_COST_FC;
            SUBPRJ_PPL_ETC_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ETC_RAWCOST_FC;
            SUBPRJ_PPL_ETC_COST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ETC_COST_PC;
            SUBPRJ_PPL_ETC_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_PPL_ETC_RAWCOST_PC;
            SUBPRJ_EQPMT_ETC_COST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ETC_COST_TC;
            SUBPRJ_EQPMT_ETC_RAWCOST_TC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ETC_RAWCOST_TC;
            SUBPRJ_EQPMT_ETC_COST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ETC_COST_FC;
            SUBPRJ_EQPMT_ETC_RAWCOST_FC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ETC_RAWCOST_FC;
            SUBPRJ_EQPMT_ETC_COST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ETC_COST_PC;
            SUBPRJ_EQPMT_ETC_RAWCOST_PC(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EQPMT_ETC_RAWCOST_PC;
            SUBPRJ_EARNED_VALUE(l_index2) := l_rollup_rec_asofdate.SUBPRJ_EARNED_VALUE;
            CURRENT_FLAG(l_index2) := l_rollup_rec_asofdate.CURRENT_FLAG; -- if last rec is 'Y' this should be 'Y' else it should be 'N'
            if (l_rollup_rec_asofdate.CURRENT_FLAG = 'Y') then
              l_index4 := l_index4 + 1;
              u1_progress_rollup_id(l_index4) := l_rollup_rec_asofdate.PROGRESS_ROLLUP_ID;
            end if;
            PROJFUNC_COST_RATE_TYPE(l_index2) := l_rollup_rec_asofdate.PROJFUNC_COST_RATE_TYPE;
            PROJFUNC_COST_EXCHANGE_RATE(l_index2) := l_rollup_rec_asofdate.PROJFUNC_COST_EXCHANGE_RATE;
            PROJFUNC_COST_RATE_DATE(l_index2) := l_rollup_rec_asofdate.PROJFUNC_COST_RATE_DATE;
            PROJ_COST_RATE_TYPE(l_index2) := l_rollup_rec_asofdate.PROJ_COST_RATE_TYPE;
            PROJ_COST_EXCHANGE_RATE(l_index2) := l_rollup_rec_asofdate.PROJ_COST_EXCHANGE_RATE;
            PROJ_COST_RATE_DATE(l_index2) := l_rollup_rec_asofdate.PROJ_COST_RATE_DATE;
            TXN_CURRENCY_CODE(l_index2) := l_rollup_rec_asofdate.TXN_CURRENCY_CODE;
            PROG_PA_PERIOD_NAME(l_index2) := l_pa_period_name;
            PROG_GL_PERIOD_NAME(l_index2) := l_gl_period_name;
            l_index2 := l_temp_index2;
          end if;
        end if;
        /*
        --- here just update the future rollup recs if exist.
        open future_rollup_recs;
        loop
           fetch future_rollup_recs into l_rollup_rec_asofdate;
           if future_rollup_recs%notfound then
              exit;
           else
              l_index3 := l_index3 + 1;
              if (l_planned_eff > 0 and l_base_pc_deriv_code = 'EFFORT') then
                if (nvl(l_rollup_rec_asofdate.estimated_remaining_effort,0) = 0 or
                    nvl(l_rollup_rec_asofdate.estimated_remaining_effort,0) = l_planned_eff - nvl(l_rollup_rec_asofdate.ppl_act_effort_to_date,0)) then
                  l_percent_comp := (nvl(all_objects_in_temp_rec.act_labor_hrs,0)/l_planned_eff)*100;
                else
                  l_percent_comp := (nvl(all_objects_in_temp_rec.act_labor_hrs,0)/(nvl(all_objects_in_temp_rec.act_labor_hrs,0) + l_rollup_rec_asofdate.estimated_remaining_effort))*100;
                end if;
                if (l_percent_comp > 100) then
                   l_percent_comp := 100;
                elsif (l_percent_comp < 0) then
                   l_percent_comp := 0;
                end if;
                l_earned_val := l_percent_comp * l_planned_eff;
                l_eff_rollup_pc := l_percent_comp;
              elsif (l_planned_cost > 0 and l_base_pc_deriv_code = 'COST') then -- COST based
                if (nvl(l_rollup_rec_asofdate.estimated_remaining_effort,0) = 0 or
                    nvl(l_rollup_rec_asofdate.estimated_remaining_effort,0) = l_planned_eff - nvl(l_rollup_rec_asofdate.ppl_act_effort_to_date,0)) then
                   l_percent_comp := (nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0)/l_planned_cost)*100;
                else
                   l_percent_comp := (nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0)/(nvl(all_objects_in_temp_rec.act_prj_labor_brdn_cost,0) + l_rollup_rec_asofdate.ppl_etc_cost_pc))*100;
                end if;
                if (l_percent_comp > 100) then
                   l_percent_comp := 100;
                elsif (l_percent_comp < 0) then
                   l_percent_comp := 0;
                end if;
                l_earned_val := l_percent_comp * l_planned_cost;
                l_eff_rollup_pc := l_percent_comp;
              else
                l_percent_comp := l_rollup_rec_asofdate.completed_percentage;
                l_earned_val := l_rollup_rec_asofdate.earned_value;
                l_eff_rollup_pc := l_rollup_rec_asofdate.eff_rollup_percent_comp;
              end if;
              u_completed_percentage(l_index3) := l_rollup_rec_asofdate.completed_percentage;
              u_eff_rollup_percent_comp(l_index3) := l_eff_rollup_pc;
              u_earned_val(l_index3) := l_earned_val;
              u_progress_rollup_id(l_index3) := l_rollup_rec_asofdate.progress_rollup_id;
              u_object_version_id(l_index3) := l_object_version_id;
              u_ppl_act_effort_to_date(l_index3) := all_objects_in_temp_rec.act_labor_hrs;
              u_eqpmt_act_effort_to_date(l_index3) := all_objects_in_temp_rec.act_equip_hrs;
              if (l_object_Type = 'PA_ASSIGNMENTS') then
                 if (l_rate_based_flag = 'N') then
                    u_oth_qty(l_index3) := all_objects_in_temp_rec.act_txn_raw_cost - (all_objects_in_temp_rec.act_txn_labor_raw_cost + all_objects_in_temp_rec.act_txn_equip_raw_cost);
                 else
                    u_oth_qty(l_index3) := all_objects_in_temp_rec.quantity - all_objects_in_temp_rec.act_labor_hrs - all_objects_in_temp_rec.act_equip_hrs;
                 end if;
              end if;
              u_oth_act_cost_to_date_tc(l_index3) := all_objects_in_temp_rec.act_txn_brdn_cost - (all_objects_in_temp_rec.act_txn_labor_brdn_cost + all_objects_in_temp_rec.act_txn_equip_brdn_cost);
              u_oth_act_rawcost_to_date_tc(l_index3) := all_objects_in_temp_rec.act_txn_raw_cost - (all_objects_in_temp_rec.act_txn_labor_raw_cost + all_objects_in_temp_rec.act_txn_equip_raw_cost);
              u_oth_act_cost_to_date_pc(l_index3) := all_objects_in_temp_rec.act_prj_brdn_cost - (all_objects_in_temp_rec.act_prj_labor_brdn_cost + all_objects_in_temp_rec.act_prj_equip_brdn_cost);
              u_oth_act_rawcost_to_date_pc(l_index3) := all_objects_in_temp_rec.act_prj_raw_cost - (all_objects_in_temp_rec.act_prj_labor_raw_cost + all_objects_in_temp_rec.act_prj_equip_raw_cost);
              u_oth_act_cost_to_date_fc(l_index3) := all_objects_in_temp_rec.act_pou_brdn_cost - (all_objects_in_temp_rec.act_pou_labor_brdn_cost + all_objects_in_temp_rec.act_pou_equip_brdn_cost);
              u_oth_act_rawcost_to_date_fc(l_index3) := all_objects_in_temp_rec.act_pou_raw_cost - (all_objects_in_temp_rec.act_pou_labor_raw_cost + all_objects_in_temp_rec.act_pou_equip_raw_cost);
              u_ppl_act_cost_to_date_tc(l_index3) := all_objects_in_temp_rec.act_txn_labor_brdn_cost;
              u_ppl_act_rawcost_to_date_tc(l_index3) := all_objects_in_temp_rec.act_txn_labor_raw_cost;
              u_ppl_act_cost_to_date_pc(l_index3) := all_objects_in_temp_rec.act_prj_labor_brdn_cost;
              u_ppl_act_rawcost_to_date_pc(l_index3) := all_objects_in_temp_rec.act_prj_labor_raw_cost;
              u_ppl_act_cost_to_date_fc(l_index3) := all_objects_in_temp_rec.act_pou_labor_brdn_cost;
              u_ppl_act_rawcost_to_date_fc(l_index3) := all_objects_in_temp_rec.act_pou_labor_raw_cost;
              u_eqpmt_act_cost_to_date_tc(l_index3) := all_objects_in_temp_rec.act_txn_equip_brdn_cost;
              u_eqpmt_act_rawcost_to_date_tc(l_index3) := all_objects_in_temp_rec.act_txn_equip_raw_cost;
              u_eqpmt_act_cost_to_date_pc(l_index3) := all_objects_in_temp_rec.act_prj_equip_brdn_cost;
              u_eqpmt_act_rawcost_to_date_pc(l_index3) := all_objects_in_temp_rec.act_prj_equip_raw_cost;
              u_eqpmt_act_cost_to_date_fc(l_index3) := all_objects_in_temp_rec.act_pou_equip_brdn_cost;
              u_eqpmt_act_rawcost_to_date_fc(l_index3) := all_objects_in_temp_rec.act_pou_equip_raw_cost;
           end if;
        end loop;
        close future_rollup_recs;
        */
       l_last_projelemid := all_objects_in_temp_rec.project_element_id;
       l_last_res_list_mem_id := l_new_res_list_member_id; ---all_objects_in_temp_rec.res_list_member_id;
       l_last_object_Type := l_object_Type;
       l_last_period_flag := l_period_flag;
     end if; --- 33 ignore rec

    end loop;
    pa_debug.log_message('GET_SUMM_ACT: Done looping thru all the records. Inserts = '||l_index2||' Updates = '||l_index3, 1);

    IF g1_debug_mode  = 'Y' THEN
      pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Done with updating pl/sql tables for summarized actuals',
                    x_Log_Level=> 3);
    END IF;
    --- here we check if any actuals are mapped to a different assignment
    --- from last time.
    if (p_plan_res_level = 'Y' and p_extraction_type = 'FULL') then
      for all_assignments_asofdate_rec in all_assignments_asofdate loop
        l_match_found := 'N';
        for l_index1 in 1..l_index3 loop
            if all_assignments_asofdate_rec.progress_rollup_id = u_progress_rollup_id(l_index1) then
                l_match_found := 'Y';
                exit;
            end if;
        end loop;
        if (l_match_found = 'N') then
          if (nvl(all_assignments_asofdate_rec.ppl_act_effort_to_date,0) + nvl(all_assignments_asofdate_rec.eqpmt_act_effort_to_date,0) + nvl(all_assignments_asofdate_rec.oth_quantity_to_date,0)
             + nvl(all_assignments_asofdate_rec.ppl_act_cost_to_date_tc,0) + nvl(all_assignments_asofdate_rec.eqpmt_act_cost_to_date_tc,0) + nvl(all_assignments_asofdate_rec.oth_act_cost_to_date_tc,0) <> 0) then  ---4461052
            l_index3 := l_index3 + 1;
            u_completed_percentage(l_index3) := to_number(null);
            u_eff_rollup_percent_comp(l_index3) := to_number(null);
            u_earned_val(l_index3) := to_number(null);
            u_actual_finish_date(l_index3) := to_date(null);
            u_progress_rollup_id(l_index3) := all_assignments_asofdate_rec.progress_rollup_id;
            u_object_version_id(l_index3) := all_assignments_asofdate_rec.object_version_id;
            u_ppl_act_effort_to_date(l_index3) := 0;
            u_eqpmt_act_effort_to_date(l_index3) := 0;
            u_oth_qty(l_index3) := 0;
            u_oth_act_cost_to_date_tc(l_index3) := 0;
            u_oth_act_rawcost_to_date_tc(l_index3) := 0;
            u_oth_act_cost_to_date_pc(l_index3) := 0;
            u_oth_act_rawcost_to_date_pc(l_index3) := 0;
            u_oth_act_cost_to_date_fc(l_index3) := 0;
            u_oth_act_rawcost_to_date_fc(l_index3) := 0;
            u_ppl_act_cost_to_date_tc(l_index3) := 0;
            u_ppl_act_rawcost_to_date_tc(l_index3) := 0;
            u_ppl_act_cost_to_date_pc(l_index3) := 0;
            u_ppl_act_rawcost_to_date_pc(l_index3) := 0;
            u_ppl_act_cost_to_date_fc(l_index3) := 0;
            u_ppl_act_rawcost_to_date_fc(l_index3) := 0;
            u_eqpmt_act_cost_to_date_tc(l_index3) := 0;
            u_eqpmt_act_rawcost_to_date_tc(l_index3) := 0;
            u_eqpmt_act_cost_to_date_pc(l_index3) := 0;
            u_eqpmt_act_rawcost_to_date_pc(l_index3) := 0;
            u_eqpmt_act_cost_to_date_fc(l_index3) := 0;
            u_eqpmt_act_rawcost_to_date_fc(l_index3) := 0;
            u_oth_etc_cost_to_date_tc(l_index3) := null;
            u_oth_etc_rawcost_to_date_tc(l_index3) := null;
            u_oth_etc_cost_to_date_pc(l_index3) := null;
            u_oth_etc_rawcost_to_date_pc(l_index3) := null;
            u_oth_etc_cost_to_date_fc(l_index3) := null;
            u_oth_etc_rawcost_to_date_fc(l_index3) := null;
            u_ppl_etc_cost_to_date_tc(l_index3) := null;
            u_ppl_etc_rawcost_to_date_tc(l_index3) := null;
            u_ppl_etc_cost_to_date_pc(l_index3) := null;
            u_ppl_etc_rawcost_to_date_pc(l_index3) := null;
            u_ppl_etc_cost_to_date_fc(l_index3) := null;
            u_ppl_etc_rawcost_to_date_fc(l_index3) := null;
            u_eqpmt_etc_cost_to_date_tc(l_index3) := null;
            u_eqpmt_etc_rawcost_to_date_tc(l_index3) := null;
            u_eqpmt_etc_cost_to_date_pc(l_index3) := null;
            u_eqpmt_etc_rawcost_to_date_pc(l_index3) := null;
            u_eqpmt_etc_cost_to_date_fc(l_index3) := null;
            u_eqpmt_etc_rawcost_to_date_fc(l_index3) := null;
            u_ppl_etc_effort_to_date(l_index3) := null;
            u_eqpmt_etc_effort_to_date(l_index3) := null;
            u_oth_etc_qty(l_index3) := null;
          else

            --- if a progress record is there and no actuals exist then this means maybe            --- ETC is overridden. We will pass ETC to PJI if this is FULL mode.
            if (p_extraction_type = 'FULL') then
              l_index_etc := l_index_etc + 1;
              ETC_PROJECT_ID(l_index_etc) := l_project_id;
              ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
              ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_assignments_asofdate_rec.proj_element_id;
              ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
              if (l_plan_type = 'P') then
                 ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
              elsif (l_plan_type = 'G') then
                 ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
              else
                 ETC_PERIOD_NAME(l_index_etc) := null;
              end if;
              ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
              ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
              ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
              ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
              ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
              ETC_ROLLUP_TYPE(l_index_etc) := 'W';
              l_task_id := all_assignments_asofdate_rec.proj_element_id;
              l_res_list_member_id := all_assignments_asofdate_rec.object_id;
              open get_assignment_info;
              fetch get_assignment_info into l_get_assignment_info;
              close get_assignment_info;
              l_asgn_plan_quantity := nvl(l_get_assignment_info.planned_quantity,0);
              l_asgn_plan_bur_cost_tc := nvl(l_get_assignment_info.planned_bur_cost_txn_cur,0);
              l_asgn_plan_bur_cost_fc := nvl(l_get_assignment_info.planned_bur_cost_projfunc,0);
              l_asgn_plan_bur_cost_pc := nvl(l_get_assignment_info.planned_bur_cost_proj_cur,0);
              l_asgn_plan_raw_cost_tc := nvl(l_get_assignment_info.planned_raw_cost_txn_cur,0);
              l_asgn_plan_raw_cost_fc := nvl(l_get_assignment_info.planned_raw_cost_projfunc,0);
              l_asgn_plan_raw_cost_pc := nvl(l_get_assignment_info.planned_raw_cost_proj_cur,0);
              ETC_RBS_ELEMENT_ID(l_index_etc) := l_get_assignment_info.rbs_element_id;
              ETC_TXN_CURRENCY_CODE(l_index_etc) := l_get_assignment_info.txn_currency_code;
              ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_get_assignment_info.resource_class_code;

              ETC_RATE_BASED_FLAG(l_index_etc) := l_get_assignment_info.rate_based_flag;
              ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
              ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
              if (l_get_assignment_info.resource_class_code = 'EQUIPMENT') then
                ETC_QUANTITY(l_index_etc) := all_assignments_asofdate_rec.eqpmt_etc_effort - l_asgn_plan_quantity;
                ETC_TXN_BURDENED_COST(l_index_etc) := all_assignments_asofdate_rec.eqpmt_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                ETC_PRJ_BURDENED_COST(l_index_etc) := all_assignments_asofdate_rec.eqpmt_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                ETC_PFC_BURDENED_COST(l_index_etc) := all_assignments_asofdate_rec.eqpmt_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                ETC_TXN_RAW_COST(l_index_etc) := all_assignments_asofdate_rec.eqpmt_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                ETC_PRJ_RAW_COST(l_index_etc) := all_assignments_asofdate_rec.eqpmt_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                ETC_PFC_RAW_COST(l_index_etc) := all_assignments_asofdate_rec.eqpmt_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
              elsif (l_get_assignment_info.resource_class_code = 'PEOPLE') then
                ETC_QUANTITY(l_index_etc) := all_assignments_asofdate_rec.estimated_remaining_effort - l_asgn_plan_quantity;
                ETC_TXN_BURDENED_COST(l_index_etc) := all_assignments_asofdate_rec.ppl_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                ETC_PRJ_BURDENED_COST(l_index_etc) := all_assignments_asofdate_rec.ppl_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                ETC_PFC_BURDENED_COST(l_index_etc) := all_assignments_asofdate_rec.ppl_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                ETC_TXN_RAW_COST(l_index_etc) := all_assignments_asofdate_rec.ppl_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                ETC_PRJ_RAW_COST(l_index_etc) := all_assignments_asofdate_rec.ppl_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                ETC_PFC_RAW_COST(l_index_etc) := all_assignments_asofdate_rec.ppl_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
              else
                ETC_QUANTITY(l_index_etc) := all_assignments_asofdate_rec.oth_etc_quantity - l_asgn_plan_quantity;
                ETC_TXN_BURDENED_COST(l_index_etc) := all_assignments_asofdate_rec.oth_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                ETC_PRJ_BURDENED_COST(l_index_etc) := all_assignments_asofdate_rec.oth_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                ETC_PFC_BURDENED_COST(l_index_etc) := all_assignments_asofdate_rec.oth_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                ETC_TXN_RAW_COST(l_index_etc) := all_assignments_asofdate_rec.oth_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                ETC_PRJ_RAW_COST(l_index_etc) := all_assignments_asofdate_rec.oth_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                ETC_PFC_RAW_COST(l_index_etc) := all_assignments_asofdate_rec.oth_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
              end if;
            end if;
          end if;
        end if;
      end loop;


      for all_assign_prev_asofdate_rec in all_assign_prev_asofdate loop
        l_match_found := 'N';
        for l_index1 in 1..l_index2 loop
          if all_assign_prev_asofdate_rec.object_id = object_id(l_index1) and
             all_assign_prev_asofdate_rec.proj_element_id = proj_element_id(l_index1) and
             all_assign_prev_asofdate_rec.object_type = object_type(l_index1) then
             l_match_found := 'Y';
             exit;
          end if;
        end loop;
        if (l_match_found = 'N') then
          if (nvl(all_assign_prev_asofdate_rec.ppl_act_effort_to_date,0) + nvl(all_assign_prev_asofdate_rec.eqpmt_act_effort_to_date,0) + nvl(all_assign_prev_asofdate_rec.oth_quantity_to_date,0)
             + nvl(all_assign_prev_asofdate_rec.ppl_act_cost_to_date_tc,0) + nvl(all_assign_prev_asofdate_rec.eqpmt_act_cost_to_date_tc,0) + nvl(all_assign_prev_asofdate_rec.oth_act_cost_to_date_tc,0) <> 0) then  ---4461052
            l_index2 := l_index2 + 1;
            select pa_progress_rollup_s.nextval into progress_rollup_id(l_index2) from dual;
            percent_complete_id(l_index2) := to_number(null);
            project_id(l_index2) := l_project_id;
            object_id(l_index2) := all_assign_prev_asofdate_rec.object_id;
            OBJECT_TYPE(l_index2) := all_assign_prev_asofdate_rec.object_Type;
            as_of_Date(l_index2) := l_temp_as_of_date;
            object_version_id(l_index2) := all_assign_prev_asofdate_rec.object_version_id;
            LAST_UPDATE_DATE(l_index2) := sysdate;
            LAST_UPDATED_BY(l_index2) := fnd_global.user_id;
            CREATION_DATE(l_index2) := sysdate;
            CREATED_BY(l_index2) := fnd_global.user_id;
            PROGRESS_STATUS_CODE(l_index2) := all_assign_prev_asofdate_rec.progress_status_code;
            LAST_UPDATE_LOGIN(l_index2) := fnd_global.login_id ;
            INCREMENTAL_WORK_QUANTITY(l_index2) := all_assign_prev_asofdate_rec.INCREMENTAL_WORK_QUANTITY;
            CUMULATIVE_WORK_QUANTITY(l_index2) := all_assign_prev_asofdate_rec.CUMULATIVE_WORK_QUANTITY;
            base_percent_complete(l_index2) := all_assign_prev_asofdate_rec.base_percent_complete;
            EFF_ROLLUP_PERCENT_COMP(l_index2) := all_assign_prev_asofdate_rec.EFF_ROLLUP_PERCENT_COMP;
            completed_percentage(l_index2) := 0;
            ESTIMATED_START_DATE(l_index2) := all_assign_prev_asofdate_rec.ESTIMATED_START_DATE;
            ESTIMATED_FINISH_DATE(l_index2) := all_assign_prev_asofdate_rec.ESTIMATED_FINISH_DATE;
            actual_start_date(l_index2) := all_assign_prev_asofdate_rec.actual_start_date;
            actual_finish_date(l_index2) := all_assign_prev_asofdate_rec.actual_finish_date;
            ESTIMATED_REMAINING_EFFORT(l_index2) := null;
            RECORD_VERSION_NUMBER(l_index2) := 1;
            base_percent_comp_deriv_code(l_index2) := all_assign_prev_asofdate_rec.base_percent_comp_deriv_code;
            BASE_PROGRESS_STATUS_CODE(l_index2) := all_assign_prev_asofdate_rec.BASE_PROGRESS_STATUS_CODE;
            EFF_ROLLUP_PROG_STAT_CODE(l_index2) := all_assign_prev_asofdate_rec.EFF_ROLLUP_PROG_STAT_CODE;
            STRUCTURE_TYPE(l_index2) := all_assign_prev_asofdate_rec.STRUCTURE_TYPE;
            PROJ_ELEMENT_ID(l_index2) := all_assign_prev_asofdate_rec.PROJ_ELEMENT_ID;
            STRUCTURE_VERSION_ID(l_index2) := all_assign_prev_asofdate_rec.STRUCTURE_VERSION_ID;

	    -- Bug 6917961
            if (OBJECT_TYPE(l_index2) = 'PA_ASSIGNMENTS') then
               if (PROGRESS_STATUS_CODE(l_index2) is null and actual_start_date(l_index2) is not null
                and actual_finish_date(l_index2) is null) then
                  l_prog_enable_flag := 'N';
                  l_prog_stat_code := null;
                  OPEN cur_prog_setup(PROJ_ELEMENT_ID(l_index2),l_project_id);
                  FETCH cur_prog_setup INTO l_prog_enable_flag, l_prog_stat_code;
                  CLOSE cur_prog_setup;
                  if (l_prog_enable_flag = 'Y') then
                     PROGRESS_STATUS_CODE(l_index2) := l_prog_stat_code;
                  end if;
               end if;
            end if;
            -- Bug 6917961

            ppl_act_effort_to_date(l_index2) := 0;
            eqpmt_act_effort_to_date(l_index2) := 0;
            oth_qty(l_index2) := 0;
            EQPMT_ETC_EFFORT(l_index2) := null;
            oth_etc_qty(l_index2) := null;
            oth_act_cost_to_date_tc(l_index2) := 0;
            oth_act_rawcost_to_date_tc(l_index2) := 0;
            oth_act_cost_to_date_pc(l_index2) := 0;
            oth_act_rawcost_to_date_pc(l_index2) := 0;
            oth_act_cost_to_date_fc(l_index2) := 0;
            oth_act_rawcost_to_date_fc(l_index2) := 0;
            OTH_ETC_COST_TC(l_index2) := null;
            OTH_ETC_RAWCOST_TC(l_index2) := null;
            OTH_ETC_COST_FC(l_index2) := null;
            OTH_ETC_RAWCOST_FC(l_index2) := null;
            OTH_ETC_COST_PC(l_index2) := null;
            OTH_ETC_RAWCOST_PC(l_index2) := null;
            ppl_act_cost_to_date_tc(l_index2) := 0;
            ppl_act_rawcost_to_date_tc(l_index2) := 0;
            ppl_act_cost_to_date_pc(l_index2) := 0;
            ppl_act_rawcost_to_date_pc(l_index2) := 0;
            ppl_act_cost_to_date_fc(l_index2) := 0;
            ppl_act_rawcost_to_date_fc(l_index2) := 0;
            PPL_ETC_COST_TC(l_index2) := null;
            PPL_ETC_RAWCOST_TC(l_index2) := null;
            PPL_ETC_COST_PC(l_index2) := null;
            PPL_ETC_RAWCOST_PC(l_index2) := null;
            PPL_ETC_COST_FC(l_index2) := null;
            PPL_ETC_RAWCOST_FC(l_index2) := null;
            eqpmt_act_cost_to_date_tc(l_index2) := 0;
            eqpmt_act_rawcost_to_date_tc(l_index2) := 0;
            eqpmt_act_cost_to_date_pc(l_index2) := 0;
            eqpmt_act_rawcost_to_date_pc(l_index2) := 0;
            eqpmt_act_cost_to_date_fc(l_index2) := 0;
            eqpmt_act_rawcost_to_date_fc(l_index2) := 0;
            EQPMT_ETC_COST_TC(l_index2) := null;
            EQPMT_ETC_RAWCOST_TC(l_index2) := null;
            EQPMT_ETC_COST_PC(l_index2) := null;
            EQPMT_ETC_RAWCOST_PC(l_index2) := null;
            EQPMT_ETC_COST_FC(l_index2) := null;
            EQPMT_ETC_RAWCOST_FC(l_index2) := null;
            earned_value(l_index2) := 0;
            TASK_WT_BASIS_CODE(l_index2) := all_assign_prev_asofdate_rec.TASK_WT_BASIS_CODE;
            SUBPRJ_PPL_ACT_EFFORT(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ACT_EFFORT;
            SUBPRJ_EQPMT_ACT_EFFORT(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ACT_EFFORT;
            SUBPRJ_PPL_ETC_EFFORT(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ETC_EFFORT;
            SUBPRJ_EQPMT_ETC_EFFORT(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ETC_EFFORT;
            SUBPRJ_OTH_ACT_COST_TO_DATE_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_OTH_ACT_COST_TO_DATE_TC;
            SPJ_OTH_ACT_RAWCOST_TO_DATE_TC(l_index2) := all_assign_prev_asofdate_rec.SPJ_OTH_ACT_RAWCOST_TO_DATE_TC;
            SUBPRJ_OTH_ACT_COST_TO_DATE_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_OTH_ACT_COST_TO_DATE_FC;
            SPJ_OTH_ACT_RAWCOST_TO_DATE_FC(l_index2) := all_assign_prev_asofdate_rec.SPJ_OTH_ACT_RAWCOST_TO_DATE_FC;
            SUBPRJ_OTH_ACT_COST_TO_DATE_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_OTH_ACT_COST_TO_DATE_PC;
            SPJ_OTH_ACT_RAWCOST_TO_DATE_PC(l_index2) := all_assign_prev_asofdate_rec.SPJ_OTH_ACT_RAWCOST_TO_DATE_PC;
            SUBPRJ_PPL_ACT_COST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ACT_COST_TC;
            SUBPRJ_PPL_ACT_RAWCOST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ACT_RAWCOST_TC;
            SUBPRJ_PPL_ACT_COST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ACT_COST_FC;
            SUBPRJ_PPL_ACT_RAWCOST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ACT_RAWCOST_FC;
            SUBPRJ_PPL_ACT_COST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ACT_COST_PC;
            SUBPRJ_PPL_ACT_RAWCOST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ACT_RAWCOST_PC;
            SUBPRJ_EQPMT_ACT_COST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ACT_COST_TC;
            SUBPRJ_EQPMT_ACT_RAWCOST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ACT_RAWCOST_TC;
            SUBPRJ_EQPMT_ACT_COST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ACT_COST_FC;
            SUBPRJ_EQPMT_ACT_RAWCOST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ACT_RAWCOST_FC;
            SUBPRJ_EQPMT_ACT_COST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ACT_COST_PC;
            SUBPRJ_EQPMT_ACT_RAWCOST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ACT_RAWCOST_PC;
            SUBPRJ_OTH_ETC_COST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_OTH_ETC_COST_TC;
            SUBPRJ_OTH_ETC_RAWCOST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_OTH_ETC_RAWCOST_TC;
            SUBPRJ_OTH_ETC_COST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_OTH_ETC_COST_FC;
            SUBPRJ_OTH_ETC_RAWCOST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_OTH_ETC_RAWCOST_FC;
            SUBPRJ_OTH_ETC_COST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_OTH_ETC_COST_PC;
            SUBPRJ_OTH_ETC_RAWCOST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_OTH_ETC_RAWCOST_PC;
            SUBPRJ_PPL_ETC_COST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ETC_COST_TC;
            SUBPRJ_PPL_ETC_RAWCOST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ETC_RAWCOST_TC;
            SUBPRJ_PPL_ETC_COST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ETC_COST_FC;
            SUBPRJ_PPL_ETC_RAWCOST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ETC_RAWCOST_FC;
            SUBPRJ_PPL_ETC_COST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ETC_COST_PC;
            SUBPRJ_PPL_ETC_RAWCOST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_PPL_ETC_RAWCOST_PC;
            SUBPRJ_EQPMT_ETC_COST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ETC_COST_TC;
            SUBPRJ_EQPMT_ETC_RAWCOST_TC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ETC_RAWCOST_TC;
            SUBPRJ_EQPMT_ETC_COST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ETC_COST_FC;
            SUBPRJ_EQPMT_ETC_RAWCOST_FC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ETC_RAWCOST_FC;
            SUBPRJ_EQPMT_ETC_COST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ETC_COST_PC;
            SUBPRJ_EQPMT_ETC_RAWCOST_PC(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EQPMT_ETC_RAWCOST_PC;
            SUBPRJ_EARNED_VALUE(l_index2) := all_assign_prev_asofdate_rec.SUBPRJ_EARNED_VALUE;
            CURRENT_FLAG(l_index2) := all_assign_prev_asofdate_rec.CURRENT_FLAG; -- if last rec is 'Y' this should be 'Y' else it should be 'N'
            if (all_assign_prev_asofdate_rec.CURRENT_FLAG = 'Y') then
              l_index4 := l_index4 + 1;
              u1_progress_rollup_id(l_index4) := all_assign_prev_asofdate_rec.PROGRESS_ROLLUP_ID;
            end if;
            PROJFUNC_COST_RATE_TYPE(l_index2) := all_assign_prev_asofdate_rec.PROJFUNC_COST_RATE_TYPE;
            PROJFUNC_COST_EXCHANGE_RATE(l_index2) := all_assign_prev_asofdate_rec.PROJFUNC_COST_EXCHANGE_RATE;
            PROJFUNC_COST_RATE_DATE(l_index2) := all_assign_prev_asofdate_rec.PROJFUNC_COST_RATE_DATE;
            PROJ_COST_RATE_TYPE(l_index2) := all_assign_prev_asofdate_rec.PROJ_COST_RATE_TYPE;
            PROJ_COST_EXCHANGE_RATE(l_index2) := all_assign_prev_asofdate_rec.PROJ_COST_EXCHANGE_RATE;
            PROJ_COST_RATE_DATE(l_index2) := all_assign_prev_asofdate_rec.PROJ_COST_RATE_DATE;
            TXN_CURRENCY_CODE(l_index2) := all_assign_prev_asofdate_rec.TXN_CURRENCY_CODE;
            PROG_PA_PERIOD_NAME(l_index2) := l_pa_period_name;
            PROG_GL_PERIOD_NAME(l_index2) := l_gl_period_name;
          else
            --- if a progress record is there and no actuals exist then this means maybe            --- ETC is overridden. We will pass ETC to PJI if this is FULL mode.
            if (p_extraction_type = 'FULL') then
              l_index_etc := l_index_etc + 1;
              ETC_PROJECT_ID(l_index_etc) := l_project_id;
              ETC_PROJECT_ORG_ID(l_index_etc) := proj_org_ids_tbl(l_index);
              ETC_PROJECT_ELEMENT_ID(l_index_etc) := all_assign_prev_asofdate_rec.proj_element_id;
              ETC_STRUCT_VER_ID(l_index_etc) := l_latest_wp_struct_ver_id;
              if (l_plan_type = 'P') then
                 ETC_PERIOD_NAME(l_index_etc) := l_pa_period_name;
              elsif (l_plan_type = 'G') then
                 ETC_PERIOD_NAME(l_index_etc) := l_gl_period_name;
              else
                 ETC_PERIOD_NAME(l_index_etc) := null;
              end if;
              ETC_CALENDAR_TYPE(l_index_etc) := l_plan_type;
              ETC_END_DATE(l_index_etc) := l_temp_as_of_date;
              ETC_PLAN_VERSION_ID(l_index_etc) := l_plan_version_id;
              ETC_PLAN_TYPE_ID(l_index_etc) := l_plan_type_id;
              ETC_WP_VERSION_FLAG(l_index_etc) := 'Y';
              ETC_ROLLUP_TYPE(l_index_etc) := 'W';
              l_task_id := all_assign_prev_asofdate_rec.proj_element_id;
              l_res_list_member_id := all_assign_prev_asofdate_rec.object_id;
              open get_assignment_info;
              fetch get_assignment_info into l_get_assignment_info;
              close get_assignment_info;
              l_asgn_plan_quantity := nvl(l_get_assignment_info.planned_quantity,0);
              l_asgn_plan_bur_cost_tc := nvl(l_get_assignment_info.planned_bur_cost_txn_cur,0);
              l_asgn_plan_bur_cost_fc := nvl(l_get_assignment_info.planned_bur_cost_projfunc,0);
              l_asgn_plan_bur_cost_pc := nvl(l_get_assignment_info.planned_bur_cost_proj_cur,0);
              l_asgn_plan_raw_cost_tc := nvl(l_get_assignment_info.planned_raw_cost_txn_cur,0);
              l_asgn_plan_raw_cost_fc := nvl(l_get_assignment_info.planned_raw_cost_projfunc,0);
              l_asgn_plan_raw_cost_pc := nvl(l_get_assignment_info.planned_raw_cost_proj_cur,0);
              ETC_RBS_ELEMENT_ID(l_index_etc) := l_get_assignment_info.rbs_element_id;
              ETC_TXN_CURRENCY_CODE(l_index_etc) := l_get_assignment_info.txn_currency_code;
              ETC_RESOURCE_CLASS_CODE(l_index_etc) := l_get_assignment_info.resource_class_code;

              ETC_RATE_BASED_FLAG(l_index_etc) := l_get_assignment_info.rate_based_flag;
              ETC_PRJ_CURRENCY_CODE(l_index_etc) := l_proj_curr_code;
              ETC_PFC_CURRENCY_CODE(l_index_etc) := l_proj_func_curr_code;
               if (l_get_assignment_info.resource_class_code = 'EQUIPMENT') then
                 ETC_QUANTITY(l_index_etc) := all_assign_prev_asofdate_rec.eqpmt_etc_effort - l_asgn_plan_quantity;
                 ETC_TXN_BURDENED_COST(l_index_etc) := all_assign_prev_asofdate_rec.eqpmt_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                 ETC_PRJ_BURDENED_COST(l_index_etc) := all_assign_prev_asofdate_rec.eqpmt_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                 ETC_PFC_BURDENED_COST(l_index_etc) := all_assign_prev_asofdate_rec.eqpmt_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                 ETC_TXN_RAW_COST(l_index_etc) := all_assign_prev_asofdate_rec.eqpmt_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                 ETC_PRJ_RAW_COST(l_index_etc) := all_assign_prev_asofdate_rec.eqpmt_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                 ETC_PFC_RAW_COST(l_index_etc) := all_assign_prev_asofdate_rec.eqpmt_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
               elsif (l_get_assignment_info.resource_class_code = 'PEOPLE') then
                 ETC_QUANTITY(l_index_etc) := all_assign_prev_asofdate_rec.estimated_remaining_effort - l_asgn_plan_quantity;
                 ETC_TXN_BURDENED_COST(l_index_etc) := all_assign_prev_asofdate_rec.ppl_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                 ETC_PRJ_BURDENED_COST(l_index_etc) := all_assign_prev_asofdate_rec.ppl_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                 ETC_PFC_BURDENED_COST(l_index_etc) := all_assign_prev_asofdate_rec.ppl_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                 ETC_TXN_RAW_COST(l_index_etc) := all_assign_prev_asofdate_rec.ppl_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                 ETC_PRJ_RAW_COST(l_index_etc) := all_assign_prev_asofdate_rec.ppl_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                 ETC_PFC_RAW_COST(l_index_etc) := all_assign_prev_asofdate_rec.ppl_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
               else
                 ETC_QUANTITY(l_index_etc) := all_assign_prev_asofdate_rec.oth_etc_quantity - l_asgn_plan_quantity;
                 ETC_TXN_BURDENED_COST(l_index_etc) := all_assign_prev_asofdate_rec.oth_etc_cost_tc - l_asgn_plan_bur_cost_tc;
                 ETC_PRJ_BURDENED_COST(l_index_etc) := all_assign_prev_asofdate_rec.oth_etc_cost_pc - l_asgn_plan_bur_cost_pc;
                 ETC_PFC_BURDENED_COST(l_index_etc) := all_assign_prev_asofdate_rec.oth_etc_cost_fc - l_asgn_plan_bur_cost_fc;
                 ETC_TXN_RAW_COST(l_index_etc) := all_assign_prev_asofdate_rec.oth_etc_rawcost_tc - l_asgn_plan_raw_cost_tc;
                 ETC_PRJ_RAW_COST(l_index_etc) := all_assign_prev_asofdate_rec.oth_etc_rawcost_pc - l_asgn_plan_raw_cost_pc;
                 ETC_PFC_RAW_COST(l_index_etc) := all_assign_prev_asofdate_rec.oth_etc_rawcost_fc - l_asgn_plan_raw_cost_fc;
               end if;
             end if;
          end if;
        end if;
      end loop;
    end if;

    pa_debug.log_message('GET_SUMM_ACT: Done looping thru all assignments which are now re-mapped.', 1);

    -- Bug 4533112 Begin
        pa_debug.log_message('GET_SUMM_ACT: Calling Progress Client Extension.', 1);
        FOR l_index1 IN 1..l_index2 LOOP

                IF OBJECT_TYPE(l_index1) = 'PA_ASSIGNMENTS' OR (OBJECT_TYPE(l_index1) = 'PA_TASKS' AND PA_PROJ_ELEMENTS_UTILS.is_summary_task_or_structure(OBJECT_VERSION_ID(l_index1))= 'N')
                THEN

                        l_db_date_override_flag := 'N';
                        l_db_estimated_start_date := null;
                        l_db_estimated_finish_date := null;
                        l_db_actual_start_date := null;
                        l_db_actual_finish_date := null;
                        l_clex_estimated_start_date := null;
                        l_clex_estimated_finish_date := null;
                        l_clex_actual_start_date := null;
                        l_clex_actual_finish_date := null;
                        l_task_status_code := null;
                        l_clex_pc := null;

                        OPEN c_get_dates_overrides(PROJECT_ID(l_index1),OBJECT_ID(l_index1),OBJECT_TYPE(l_index1),AS_OF_DATE(l_index1));
                        FETCH c_get_dates_overrides INTO
                        l_db_date_override_flag
                        , l_db_estimated_start_date
                        , l_db_estimated_finish_date
                        , l_db_actual_start_date
                        , l_db_actual_finish_date
                        , l_task_status_code;
                        CLOSE c_get_dates_overrides;

                        IF g1_debug_mode  = 'Y' THEN
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'Insert Case : Client Extension Logic starts here', x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_date_override_flag='||l_db_date_override_flag, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_estimated_start_date='||l_db_estimated_start_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_estimated_finish_date='||l_db_estimated_finish_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_actual_start_date='||l_db_actual_start_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_actual_finish_date='||l_db_actual_finish_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_task_status_code='||l_task_status_code, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'ESTIMATED_START_DATE(l_index1)='||ESTIMATED_START_DATE(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'ESTIMATED_FINISH_DATE(l_index1)='||ESTIMATED_FINISH_DATE(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'ACTUAL_START_DATE(l_index1)='||ACTUAL_START_DATE(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'ACTUAL_FINISH_DATE(l_index1)='||ACTUAL_FINISH_DATE(l_index1), x_Log_Level=> 3);
                        END IF;


                        l_date_override_flag := 'N';
                        l_clex_pc := null;
                        IF OBJECT_TYPE(l_index1) = 'PA_TASKS' THEN
                                l_clex_pc := nvl(COMPLETED_PERCENTAGE(l_index1), EFF_ROLLUP_PERCENT_COMP(l_index1));
                        END IF;

                        IF nvl(l_db_date_override_flag, 'N') = 'Y' THEN
                                l_date_override_flag := 'Y';
                                ESTIMATED_START_DATE(l_index1) := l_db_estimated_start_date;
                                ESTIMATED_FINISH_DATE(l_index1) := l_db_estimated_finish_date;
                                ACTUAL_START_DATE(l_index1) := l_db_actual_start_date;
                                ACTUAL_FINISH_DATE(l_index1) := l_db_actual_finish_date;
                        END IF;

                        IF g1_debug_mode  = 'Y' THEN
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'Calling PA_PROGRESS_CLIENT_EXTN.GET_TASK_RES_OVERRIDE_INFO with following params', x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_date_override_flag='||l_db_date_override_flag, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'PROJECT_ID(l_index1)='||PROJECT_ID(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'latest_wp_struct_ver_ids_tbl(l_index)='||latest_wp_struct_ver_ids_tbl(l_index), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'OBJECT_TYPE(l_index1)='||OBJECT_TYPE(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'OBJECT_ID(l_index1)='||OBJECT_ID(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'OBJECT_VERSION_ID(l_index1)='||OBJECT_VERSION_ID(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'PROJ_ELEMENT_ID(l_index1)='||PROJ_ELEMENT_ID(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_pc='||l_clex_pc, x_Log_Level=> 3);
                        END IF;


                        PA_PROGRESS_CLIENT_EXTN.GET_TASK_RES_OVERRIDE_INFO(
                                p_project_id            => PROJECT_ID(l_index1),
                                p_structure_type        => 'WORKPLAN',
                                p_structure_version_id  => latest_wp_struct_ver_ids_tbl(l_index),
                                p_object_type           => OBJECT_TYPE(l_index1),
                                p_object_id             => OBJECT_ID(l_index1),
                                p_object_version_id     => OBJECT_VERSION_ID(l_index1),
                                p_proj_element_id       => PROJ_ELEMENT_ID(l_index1),
                                p_task_status           => l_task_status_code,
                                p_percent_complete      => l_clex_pc,
                                p_estimated_start_date  => ESTIMATED_START_DATE(l_index1),
                                p_estimated_finish_date => ESTIMATED_FINISH_DATE(l_index1),
                                p_actual_start_date     => ACTUAL_START_DATE(l_index1),
                                p_actual_finish_date    => ACTUAL_FINISH_DATE(l_index1),
                                x_estimated_start_date  => l_clex_estimated_start_date,
                                x_estimated_finish_date => l_clex_estimated_finish_date,
                                x_actual_start_date     => l_clex_actual_start_date,
                                x_actual_finish_date    => l_clex_actual_finish_date,
                                x_return_status         => x_return_status,
                                x_msg_count             => x_msg_count,
                                x_msg_data              => x_msg_data
                                );

                        IF g1_debug_mode  = 'Y' THEN
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'After Call PA_PROGRESS_CLIENT_EXTN.GET_TASK_RES_OVERRIDE_INFO x_return_status='||x_return_status, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_estimated_start_date='||l_clex_estimated_start_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_estimated_finish_date='||l_clex_estimated_finish_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_actual_start_date='||l_clex_actual_start_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_actual_finish_date='||l_clex_actual_finish_date, x_Log_Level=> 3);
                        END IF;

                        IF x_return_status <> 'S' THEN
                                pa_debug.log_message('GET_SUMM_ACT: For Insert GET_TASK_RES_OVERRIDE_INFO returned error for object_id='||OBJECT_ID(l_index1), 1);
                                -- Added for bug 5526638
                                l_err_msg := 'Progress Client extension returned error for object_id='||OBJECT_ID(l_index1);
                                raise FND_API.G_EXC_ERROR;
                        END IF;

                        IF nvl(ESTIMATED_START_DATE(l_index1),FND_API.g_miss_date) <> nvl(l_clex_estimated_start_date,FND_API.g_miss_date)
                        OR nvl(ESTIMATED_FINISH_DATE(l_index1),FND_API.g_miss_date) <> nvl(l_clex_estimated_finish_date,FND_API.g_miss_date)
                        OR nvl(ACTUAL_START_DATE(l_index1),FND_API.g_miss_date) <> nvl(l_clex_actual_start_date,FND_API.g_miss_date)
                        OR nvl(ACTUAL_FINISH_DATE(l_index1),FND_API.g_miss_date) <> nvl(l_clex_actual_finish_date,FND_API.g_miss_date)
                        THEN
                                l_date_override_flag := 'Y';
                                ESTIMATED_START_DATE(l_index1) := l_clex_estimated_start_date;
                                ESTIMATED_FINISH_DATE(l_index1) := l_clex_estimated_finish_date;
                                ACTUAL_START_DATE(l_index1) := l_clex_actual_start_date;
                                ACTUAL_FINISH_DATE(l_index1) := l_clex_actual_finish_date;
                                IF ESTIMATED_REMAINING_EFFORT(l_index1) > 0 OR EQPMT_ETC_EFFORT(l_index1) > 0 OR oth_etc_qty(l_index1) > 0 THEN
                                        ACTUAL_FINISH_DATE(l_index1) := null;
                                END IF;
                        END IF;

                        BASE_PROGRESS_STATUS_CODE(l_index1)  := l_date_override_flag;
                        IF g1_debug_mode  = 'Y' THEN
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_date_override_flag='||l_date_override_flag, x_Log_Level=> 3);
                        END IF;
                END IF;
        END LOOP;

        FOR l_index1 IN 1..l_index3 LOOP

                l_db_date_override_flag := 'N';
                l_db_estimated_start_date := null;
                l_db_estimated_finish_date := null;
                l_db_actual_start_date := null;
                l_db_actual_finish_date := null;
                l_clex_estimated_start_date := null;
                l_clex_estimated_finish_date := null;
                l_clex_actual_start_date := null;
                l_clex_actual_finish_date := null;
                l_task_status_code := null;
                l_date_override_flag := 'N';
                l_db_object_id := null;
                l_db_object_version_id := null;
                l_db_proj_element_id := null;
                l_db_object_type := null;
                l_db_as_of_date := null;
                l_db_project_id := null;
                l_db_current_flag := null;
                l_clex_pc := null;

                OPEN c_get_rec_overrides(u_progress_rollup_id(l_index1));
                FETCH c_get_rec_overrides INTO
                l_db_date_override_flag
                , l_db_estimated_start_date
                , l_db_estimated_finish_date
                , l_db_actual_start_date
                , l_db_actual_finish_date
                , l_task_status_code
                , l_db_object_id
                , l_db_object_version_id
                , l_db_proj_element_id
                , l_db_object_type
                , l_db_as_of_date
                , l_db_project_id
                , l_db_current_flag;
                CLOSE c_get_rec_overrides;

                        IF g1_debug_mode  = 'Y' THEN
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'Update Case : Client Extension Logic starts here', x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'u_progress_rollup_id(l_index1)='||u_progress_rollup_id(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_date_override_flag='||l_db_date_override_flag, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_estimated_start_date='||l_db_estimated_start_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_estimated_finish_date='||l_db_estimated_finish_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_actual_start_date='||l_db_actual_start_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_actual_finish_date='||l_db_actual_finish_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_task_status_code='||l_task_status_code, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_object_id='||l_db_object_id, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_object_version_id='||l_db_object_version_id, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_proj_element_id='||l_db_proj_element_id, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_object_type='||l_db_object_type, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_as_of_date='||l_db_as_of_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_project_id='||l_db_project_id, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_current_flag='||l_db_current_flag, x_Log_Level=> 3);
                        END IF;


                u_estimated_start_date(l_index1) := l_db_estimated_start_date;
                u_estimated_finish_date(l_index1) := l_db_estimated_finish_date;
                u_actual_start_date(l_index1) := l_db_actual_start_date;
                u_base_progress_status_code(l_index1) := l_db_date_override_flag;


                IF (l_db_object_type = 'PA_ASSIGNMENTS' OR (l_db_object_type = 'PA_TASKS' AND PA_PROJ_ELEMENTS_UTILS.is_summary_task_or_structure(l_db_object_version_id)= 'N'))
                AND l_db_current_flag IN ('Y','N')
                THEN

                        IF nvl(l_db_date_override_flag, 'N') = 'Y' THEN
                                l_date_override_flag := 'Y';
                                u_actual_finish_date(l_index1) := l_db_actual_finish_date;
                        END IF;

                        IF l_db_object_type = 'PA_TASKS' THEN
                                l_clex_pc := nvl(u_completed_percentage(l_index1), u_eff_rollup_percent_comp(l_index1));
                        END IF;

                        IF g1_debug_mode  = 'Y' THEN
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'Calling PA_PROGRESS_CLIENT_EXTN.GET_TASK_RES_OVERRIDE_INFO with following params', x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_db_date_override_flag='||l_db_date_override_flag, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'latest_wp_struct_ver_ids_tbl(l_index)='||latest_wp_struct_ver_ids_tbl(l_index), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_pc='||l_clex_pc, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'u_estimated_start_date(l_index1)='||u_estimated_start_date(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'u_estimated_finish_date(l_index1)='||u_estimated_finish_date(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'u_actual_start_date(l_index1)='||u_actual_start_date(l_index1), x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => ' u_actual_finish_date(l_index1)='|| u_actual_finish_date(l_index1), x_Log_Level=> 3);
                        END IF;

                        PA_PROGRESS_CLIENT_EXTN.GET_TASK_RES_OVERRIDE_INFO(
                                p_project_id            => l_db_project_id,
                                p_structure_type        => 'WORKPLAN',
                                p_structure_version_id  => latest_wp_struct_ver_ids_tbl(l_index),
                                p_object_type           => l_db_object_type,
                                p_object_id             => l_db_object_id,
                                p_object_version_id     => l_db_object_version_id,
                                p_proj_element_id       => l_db_proj_element_id,
                                p_task_status           => l_task_status_code,
                                p_percent_complete      => l_clex_pc,
                                p_estimated_start_date  => u_estimated_start_date(l_index1),
                                p_estimated_finish_date => u_estimated_finish_date(l_index1),
                                p_actual_start_date     => u_actual_start_date(l_index1),
                                p_actual_finish_date    => u_actual_finish_date(l_index1),
                                x_estimated_start_date  => l_clex_estimated_start_date,
                                x_estimated_finish_date => l_clex_estimated_finish_date,
                                x_actual_start_date     => l_clex_actual_start_date,
                                x_actual_finish_date    => l_clex_actual_finish_date,
                                x_return_status         => x_return_status,
                                x_msg_count             => x_msg_count,
                                x_msg_data              => x_msg_data
                                );

                        IF g1_debug_mode  = 'Y' THEN
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'After Call PA_PROGRESS_CLIENT_EXTN.GET_TASK_RES_OVERRIDE_INFO x_return_status='||x_return_status, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_estimated_start_date='||l_clex_estimated_start_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_estimated_finish_date='||l_clex_estimated_finish_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_actual_start_date='||l_clex_actual_start_date, x_Log_Level=> 3);
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_clex_actual_finish_date='||l_clex_actual_finish_date, x_Log_Level=> 3);
                        END IF;

                        IF x_return_status <> 'S' THEN
                                pa_debug.log_message('GET_SUMM_ACT: For Update GET_TASK_RES_OVERRIDE_INFO returned error for object_id='||OBJECT_ID(l_index1), 1);
                                -- Added for bug 5526638
                                l_err_msg := 'Progress client extension returned error for object_id='||OBJECT_ID(l_index1);
                                raise FND_API.G_EXC_ERROR;
                        END IF;

                        IF nvl(u_estimated_start_date(l_index1),FND_API.g_miss_date) <> nvl(l_clex_estimated_start_date,FND_API.g_miss_date)
                        OR nvl(u_estimated_finish_date(l_index1),FND_API.g_miss_date) <> nvl(l_clex_estimated_finish_date,FND_API.g_miss_date)
                        OR nvl(u_actual_start_date(l_index1),FND_API.g_miss_date) <> nvl(l_clex_actual_start_date,FND_API.g_miss_date)
                        OR nvl(u_actual_finish_date(l_index1),FND_API.g_miss_date) <> nvl(l_clex_actual_finish_date,FND_API.g_miss_date)
                        THEN
                                l_date_override_flag := 'Y';
                                u_estimated_start_date(l_index1) := l_clex_estimated_start_date;
                                u_estimated_finish_date(l_index1) := l_clex_estimated_finish_date;
                                u_actual_start_date(l_index1) := l_clex_actual_start_date;
                                u_actual_finish_date(l_index1) := l_clex_actual_finish_date;
                                IF u_ppl_etc_effort_to_date(l_index1) > 0 OR u_eqpmt_etc_effort_to_date(l_index1) > 0 OR u_oth_etc_qty(l_index1) > 0 THEN
                                        u_actual_finish_date(l_index1) := null;
                                END IF;
                        END IF;

                        u_base_progress_status_code(l_index1)  := l_date_override_flag;
                        IF g1_debug_mode  = 'Y' THEN
                                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals', x_Msg => 'l_date_override_flag='||l_date_override_flag, x_Log_Level=> 3);
                        END IF;
                END IF;
        END LOOP;

        pa_debug.log_message('GET_SUMM_ACT: End Progress Client Extension.', 1);
    -- Bug 4533112 End


    --- do bulk insert
    forall l_index1 in 1..l_index2
      insert into pa_progress_rollup(
                    PROGRESS_ROLLUP_ID
                   ,PROJECT_ID
                   ,OBJECT_ID
                   ,OBJECT_TYPE
                   ,AS_OF_DATE
                   ,OBJECT_VERSION_ID
                   ,LAST_UPDATE_DATE
                   ,LAST_UPDATED_BY
                   ,CREATION_DATE
                   ,CREATED_BY
                   ,PROGRESS_STATUS_CODE
                   ,LAST_UPDATE_LOGIN
                   ,INCREMENTAL_WORK_QUANTITY
                   ,CUMULATIVE_WORK_QUANTITY
                   ,BASE_PERCENT_COMPLETE
                   ,EFF_ROLLUP_PERCENT_COMP
                   ,COMPLETED_PERCENTAGE
                   ,ESTIMATED_START_DATE
                   ,ESTIMATED_FINISH_DATE
                   ,ACTUAL_START_DATE
                   ,ACTUAL_FINISH_DATE
                   ,ESTIMATED_REMAINING_EFFORT
                   ,RECORD_VERSION_NUMBER
                   ,BASE_PERCENT_COMP_DERIV_CODE
                   ,BASE_PROGRESS_STATUS_CODE
                   ,EFF_ROLLUP_PROG_STAT_CODE
                   ,PERCENT_COMPLETE_ID
                   ,STRUCTURE_TYPE
                   ,PROJ_ELEMENT_ID
                   ,STRUCTURE_VERSION_ID
                   ,PPL_ACT_EFFORT_TO_DATE
                   ,EQPMT_ACT_EFFORT_TO_DATE
                   ,EQPMT_ETC_EFFORT
                   ,OTH_ACT_COST_TO_DATE_TC
                   ,OTH_ACT_RAWCOST_TO_DATE_TC
                   ,OTH_ACT_COST_TO_DATE_FC
                   ,OTH_ACT_RAWCOST_TO_DATE_FC
                   ,OTH_ACT_COST_TO_DATE_PC
                   ,OTH_ACT_RAWCOST_TO_DATE_PC
                   ,OTH_ETC_COST_TC
                   ,OTH_ETC_RAWCOST_TC
                   ,OTH_ETC_COST_FC
                   ,OTH_ETC_RAWCOST_FC
                   ,OTH_ETC_COST_PC
                   ,OTH_ETC_RAWCOST_PC
                   ,PPL_ACT_COST_TO_DATE_TC
                   ,PPL_ACT_RAWCOST_TO_DATE_TC
                   ,PPL_ACT_COST_TO_DATE_FC
                   ,PPL_ACT_RAWCOST_TO_DATE_FC
                   ,PPL_ACT_COST_TO_DATE_PC
                   ,PPL_ACT_RAWCOST_TO_DATE_PC
                   ,PPL_ETC_COST_TC
                   ,PPL_ETC_RAWCOST_TC
                   ,PPL_ETC_COST_FC
                   ,PPL_ETC_RAWCOST_FC
                   ,PPL_ETC_COST_PC
                   ,PPL_ETC_RAWCOST_PC
                   ,EQPMT_ACT_COST_TO_DATE_TC
                   ,EQPMT_ACT_RAWCOST_TO_DATE_TC
                   ,EQPMT_ACT_COST_TO_DATE_FC
                   ,EQPMT_ACT_RAWCOST_TO_DATE_FC
                   ,EQPMT_ACT_COST_TO_DATE_PC
                   ,EQPMT_ACT_RAWCOST_TO_DATE_PC
                   ,EQPMT_ETC_COST_TC
                   ,EQPMT_ETC_RAWCOST_TC
                   ,EQPMT_ETC_COST_FC
                   ,EQPMT_ETC_RAWCOST_FC
                   ,EQPMT_ETC_COST_PC
                   ,EQPMT_ETC_RAWCOST_PC
                   ,EARNED_VALUE
                   ,TASK_WT_BASIS_CODE
                   ,SUBPRJ_PPL_ACT_EFFORT
                   ,SUBPRJ_EQPMT_ACT_EFFORT
                   ,SUBPRJ_PPL_ETC_EFFORT
                   ,SUBPRJ_EQPMT_ETC_EFFORT
                   ,SUBPRJ_OTH_ACT_COST_TO_DATE_TC
                   ,SPJ_OTH_ACT_RAWCOST_TO_DATE_TC
                   ,SUBPRJ_OTH_ACT_COST_TO_DATE_FC
                   ,SPJ_OTH_ACT_RAWCOST_TO_DATE_FC
                   ,SUBPRJ_OTH_ACT_COST_TO_DATE_PC
                   ,SPJ_OTH_ACT_RAWCOST_TO_DATE_PC
                   ,SUBPRJ_PPL_ACT_COST_TC
                   ,SUBPRJ_PPL_ACT_RAWCOST_TC
                   ,SUBPRJ_PPL_ACT_COST_FC
                   ,SUBPRJ_PPL_ACT_RAWCOST_FC
                   ,SUBPRJ_PPL_ACT_COST_PC
                   ,SUBPRJ_PPL_ACT_RAWCOST_PC
                   ,SUBPRJ_EQPMT_ACT_COST_TC
                   ,SUBPRJ_EQPMT_ACT_RAWCOST_TC
                   ,SUBPRJ_EQPMT_ACT_COST_FC
                   ,SUBPRJ_EQPMT_ACT_RAWCOST_FC
                   ,SUBPRJ_EQPMT_ACT_COST_PC
                   ,SUBPRJ_EQPMT_ACT_RAWCOST_PC
                   ,SUBPRJ_OTH_ETC_COST_TC
                   ,SUBPRJ_OTH_ETC_RAWCOST_TC
                   ,SUBPRJ_OTH_ETC_COST_FC
                   ,SUBPRJ_OTH_ETC_RAWCOST_FC
                   ,SUBPRJ_OTH_ETC_COST_PC
                   ,SUBPRJ_OTH_ETC_RAWCOST_PC
                   ,SUBPRJ_PPL_ETC_COST_TC
                   ,SUBPRJ_PPL_ETC_RAWCOST_TC
                   ,SUBPRJ_PPL_ETC_COST_FC
                   ,SUBPRJ_PPL_ETC_RAWCOST_FC
                   ,SUBPRJ_PPL_ETC_COST_PC
                   ,SUBPRJ_PPL_ETC_RAWCOST_PC
                   ,SUBPRJ_EQPMT_ETC_COST_TC
                   ,SUBPRJ_EQPMT_ETC_RAWCOST_TC
                   ,SUBPRJ_EQPMT_ETC_COST_FC
                   ,SUBPRJ_EQPMT_ETC_RAWCOST_FC
                   ,SUBPRJ_EQPMT_ETC_COST_PC
                   ,SUBPRJ_EQPMT_ETC_RAWCOST_PC
                   ,SUBPRJ_EARNED_VALUE
                   ,CURRENT_FLAG
                   ,PROJFUNC_COST_RATE_TYPE
                   ,PROJFUNC_COST_EXCHANGE_RATE
                   ,PROJFUNC_COST_RATE_DATE
                   ,PROJ_COST_RATE_TYPE
                   ,PROJ_COST_EXCHANGE_RATE
                   ,PROJ_COST_RATE_DATE
                   ,TXN_CURRENCY_CODE
                   ,PROG_PA_PERIOD_NAME
                   ,PROG_GL_PERIOD_NAME
                   ,OTH_QUANTITY_TO_DATE
                   ,OTH_ETC_QUANTITY
             ) VALUES (PROGRESS_ROLLUP_ID(l_index1)
                   ,PROJECT_ID(l_index1)
                   ,OBJECT_ID(l_index1)
                   ,OBJECT_TYPE(l_index1)
                   ,AS_OF_DATE(l_index1)
                   ,OBJECT_VERSION_ID(l_index1)
                   ,LAST_UPDATE_DATE(l_index1)
                   ,LAST_UPDATED_BY(l_index1)
                   ,CREATION_DATE(l_index1)
                   ,CREATED_BY(l_index1)
                   ,PROGRESS_STATUS_CODE(l_index1)
                   ,LAST_UPDATE_LOGIN(l_index1)
                   ,INCREMENTAL_WORK_QUANTITY(l_index1)
                   ,CUMULATIVE_WORK_QUANTITY(l_index1)
                   ,BASE_PERCENT_COMPLETE(l_index1)
                   ,EFF_ROLLUP_PERCENT_COMP(l_index1)
                   ,COMPLETED_PERCENTAGE(l_index1)
                   ,ESTIMATED_START_DATE(l_index1)
                   ,ESTIMATED_FINISH_DATE(l_index1)
                   ,ACTUAL_START_DATE(l_index1)
                   ,ACTUAL_FINISH_DATE(l_index1)
                   ,ESTIMATED_REMAINING_EFFORT(l_index1)
                   ,record_version_number(l_index1)
                   ,BASE_PERCENT_COMP_DERIV_CODE(l_index1)
                   ,BASE_PROGRESS_STATUS_CODE(l_index1)
                   ,EFF_ROLLUP_PROG_STAT_CODE(l_index1)
                   ,PERCENT_COMPLETE_ID(l_index1)
                   ,STRUCTURE_TYPE(l_index1)
                   ,PROJ_ELEMENT_ID(l_index1)
                   ,STRUCTURE_VERSION_ID(l_index1)
                   ,PPL_ACT_EFFORT_TO_DATE(l_index1)
                   ,EQPMT_ACT_EFFORT_TO_DATE(l_index1)
                   ,EQPMT_ETC_EFFORT(l_index1)
                   --Bug 3801745 Begin
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ACT_COST_TO_DATE_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ACT_RAWCOST_TO_DATE_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ACT_COST_TO_DATE_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ACT_RAWCOST_TO_DATE_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ACT_COST_TO_DATE_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ACT_RAWCOST_TO_DATE_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ETC_COST_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ETC_RAWCOST_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ETC_COST_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ETC_RAWCOST_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ETC_COST_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', OTH_ETC_RAWCOST_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ACT_COST_TO_DATE_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ACT_RAWCOST_TO_DATE_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ACT_COST_TO_DATE_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ACT_RAWCOST_TO_DATE_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ACT_COST_TO_DATE_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ACT_RAWCOST_TO_DATE_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ETC_COST_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ETC_RAWCOST_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ETC_COST_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ETC_RAWCOST_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ETC_COST_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', PPL_ETC_RAWCOST_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ACT_COST_TO_DATE_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ACT_RAWCOST_TO_DATE_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ACT_COST_TO_DATE_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ACT_RAWCOST_TO_DATE_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ACT_COST_TO_DATE_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ACT_RAWCOST_TO_DATE_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ETC_COST_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ETC_RAWCOST_TC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ETC_COST_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ETC_RAWCOST_FC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ETC_COST_PC(l_index1), null)
                   ,decode(l_track_wp_cost_flag, 'Y', EQPMT_ETC_RAWCOST_PC(l_index1), null)
                   --Bug 3801745 End
                   ,EARNED_VALUE(l_index1)
                   ,TASK_WT_BASIS_CODE(l_index1)
                   ,SUBPRJ_PPL_ACT_EFFORT(l_index1)
                   ,SUBPRJ_EQPMT_ACT_EFFORT(l_index1)
                   ,SUBPRJ_PPL_ETC_EFFORT(l_index1)
                   ,SUBPRJ_EQPMT_ETC_EFFORT(l_index1)
                   ,SUBPRJ_OTH_ACT_COST_TO_DATE_TC(l_index1)
                   ,SPJ_OTH_ACT_RAWCOST_TO_DATE_TC(l_index1)
                   ,SUBPRJ_OTH_ACT_COST_TO_DATE_FC(l_index1)
                   ,SPJ_OTH_ACT_RAWCOST_TO_DATE_FC(l_index1)
                   ,SUBPRJ_OTH_ACT_COST_TO_DATE_PC(l_index1)
                   ,SPJ_OTH_ACT_RAWCOST_TO_DATE_PC(l_index1)
                   ,SUBPRJ_PPL_ACT_COST_TC(l_index1)
                   ,SUBPRJ_PPL_ACT_RAWCOST_TC(l_index1)
                   ,SUBPRJ_PPL_ACT_COST_FC(l_index1)
                   ,SUBPRJ_PPL_ACT_RAWCOST_FC(l_index1)
                   ,SUBPRJ_PPL_ACT_COST_PC(l_index1)
                   ,SUBPRJ_PPL_ACT_RAWCOST_PC(l_index1)
                   ,SUBPRJ_EQPMT_ACT_COST_TC(l_index1)
                   ,SUBPRJ_EQPMT_ACT_RAWCOST_TC(l_index1)
                   ,SUBPRJ_EQPMT_ACT_COST_FC(l_index1)
                   ,SUBPRJ_EQPMT_ACT_RAWCOST_FC(l_index1)
                   ,SUBPRJ_EQPMT_ACT_COST_PC(l_index1)
                   ,SUBPRJ_EQPMT_ACT_RAWCOST_PC(l_index1)
                   ,SUBPRJ_OTH_ETC_COST_TC(l_index1)
                   ,SUBPRJ_OTH_ETC_RAWCOST_TC(l_index1)
                   ,SUBPRJ_OTH_ETC_COST_FC(l_index1)
                   ,SUBPRJ_OTH_ETC_RAWCOST_FC(l_index1)
                   ,SUBPRJ_OTH_ETC_COST_PC(l_index1)
                   ,SUBPRJ_OTH_ETC_RAWCOST_PC(l_index1)
                   ,SUBPRJ_PPL_ETC_COST_TC(l_index1)
                   ,SUBPRJ_PPL_ETC_RAWCOST_TC(l_index1)
                   ,SUBPRJ_PPL_ETC_COST_FC(l_index1)
                   ,SUBPRJ_PPL_ETC_RAWCOST_FC(l_index1)
                   ,SUBPRJ_PPL_ETC_COST_PC(l_index1)
                   ,SUBPRJ_PPL_ETC_RAWCOST_PC(l_index1)
                   ,SUBPRJ_EQPMT_ETC_COST_TC(l_index1)
                   ,SUBPRJ_EQPMT_ETC_RAWCOST_TC(l_index1)
                   ,SUBPRJ_EQPMT_ETC_COST_FC(l_index1)
                   ,SUBPRJ_EQPMT_ETC_RAWCOST_FC(l_index1)
                   ,SUBPRJ_EQPMT_ETC_COST_PC(l_index1)
                   ,SUBPRJ_EQPMT_ETC_RAWCOST_PC(l_index1)
                   ,SUBPRJ_EARNED_VALUE(l_index1)
                   ,CURRENT_FLAG(l_index1)
                   ,PROJFUNC_COST_RATE_TYPE(l_index1)
                   ,PROJFUNC_COST_EXCHANGE_RATE(l_index1)
                   ,PROJFUNC_COST_RATE_DATE(l_index1)
                   ,PROJ_COST_RATE_TYPE(l_index1)
                   ,PROJ_COST_EXCHANGE_RATE(l_index1)
                   ,PROJ_COST_RATE_DATE(l_index1)
                   ,TXN_CURRENCY_CODE(l_index1)
                   ,PROG_PA_PERIOD_NAME(l_index1)
                   ,PROG_GL_PERIOD_NAME(l_index1)
                   ,oth_qty(l_index1)
                   ,oth_etc_qty(l_index1)
                 );
     IF g1_debug_mode  = 'Y' THEN
     pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Done with bulk insert into pa_progress_rollup',
                    x_Log_Level=> 3);
     END IF;

     -- Bug 6917961
     FOR l_index1 IN 1..l_index3 LOOP
         l_t_progress_status_code := null;
         l_t_actual_start_date := null;
         l_t_actual_finish_date := null;
         l_t_proj_element_id := null;
         l_t_object_type := null;
         l_t_project_id := null;

     OPEN c_get_prog_roll(u_progress_rollup_id(l_index1));
     FETCH c_get_prog_roll INTO
           l_t_progress_status_code
           , l_t_actual_start_date
           , l_t_actual_finish_date
           , l_t_proj_element_id
           , l_t_object_type
           , l_t_project_id;
     CLOSE c_get_prog_roll;
     u_progress_status_code(l_index1) := l_t_progress_status_code;

     if (l_t_object_type = 'PA_ASSIGNMENTS') then
       if (l_t_progress_status_code is null and l_t_actual_start_date is not null
        and l_t_actual_finish_date is null) then
           l_prog_enable_flag := 'N';
           l_prog_stat_code := null;
           OPEN cur_prog_setup(l_t_proj_element_id,l_t_project_id);
           FETCH cur_prog_setup INTO l_prog_enable_flag, l_prog_stat_code;
           CLOSE cur_prog_setup;
           if (l_prog_enable_flag = 'Y') then
              u_progress_status_code(l_index1) := l_prog_stat_code;
           end if;
       end if;
     end if;

     end loop;
     -- Bug 6917961

     --- do bulk update
     forall l_index1 in 1..l_index3
        update pa_progress_rollup set
                    OBJECT_VERSION_ID = u_object_version_id(l_index1)
                   ,LAST_UPDATE_DATE = sysdate
                   ,LAST_UPDATED_BY = fnd_global.user_id
                   ,LAST_UPDATE_LOGIN = fnd_global.login_id
                   ,record_version_number = record_version_number + 1
                   ,completed_percentage = u_completed_percentage(l_index1)
                   ,progress_status_code = u_progress_status_code(l_index1)  -- Bug 6917961
                   ,eff_rollup_percent_comp = u_eff_rollup_percent_comp(l_index1)
                   ,earned_value = u_earned_val(l_index1)
                        --4533112
                   ,actual_start_date = u_actual_start_date(l_index1)
                   ,estimated_start_date = u_estimated_start_date(l_index1)
                   ,estimated_finish_date = u_estimated_finish_date(l_index1)
                   ,base_progress_status_code = u_base_progress_status_code(l_index1)
                        --4533112
                   ,actual_finish_date = u_actual_finish_date(l_index1)
                   ,PPL_ACT_EFFORT_TO_DATE = u_PPL_ACT_EFFORT_TO_DATE(l_index1)
                   ,EQPMT_ACT_EFFORT_TO_DATE = u_EQPMT_ACT_EFFORT_TO_DATE(l_index1)
                   --Bug 3801745 Begin
                   ,OTH_ACT_COST_TO_DATE_TC = decode(l_track_wp_cost_flag, 'Y', u_OTH_ACT_COST_TO_DATE_TC(l_index1), null)
                   ,OTH_ACT_RAWCOST_TO_DATE_TC = decode(l_track_wp_cost_flag, 'Y', u_OTH_ACT_RAWCOST_TO_DATE_TC(l_index1), null)
                   ,OTH_ACT_COST_TO_DATE_FC = decode(l_track_wp_cost_flag, 'Y', u_OTH_ACT_COST_TO_DATE_FC(l_index1), null)
                   ,OTH_ACT_RAWCOST_TO_DATE_FC = decode(l_track_wp_cost_flag, 'Y', u_OTH_ACT_RAWCOST_TO_DATE_FC(l_index1), null)
                   ,OTH_ACT_COST_TO_DATE_PC = decode(l_track_wp_cost_flag, 'Y', u_OTH_ACT_COST_TO_DATE_PC(l_index1), null)
                   ,OTH_ACT_RAWCOST_TO_DATE_PC = decode(l_track_wp_cost_flag, 'Y', u_OTH_ACT_RAWCOST_TO_DATE_PC(l_index1), null)
                   ,PPL_ACT_COST_TO_DATE_TC = decode(l_track_wp_cost_flag, 'Y', u_PPL_ACT_COST_TO_DATE_TC(l_index1), null)
                   ,PPL_ACT_RAWCOST_TO_DATE_TC = decode(l_track_wp_cost_flag, 'Y', u_PPL_ACT_RAWCOST_TO_DATE_TC(l_index1), null)
                   ,PPL_ACT_COST_TO_DATE_FC = decode(l_track_wp_cost_flag, 'Y', u_PPL_ACT_COST_TO_DATE_FC(l_index1), null)
                   ,PPL_ACT_RAWCOST_TO_DATE_FC = decode(l_track_wp_cost_flag, 'Y', u_PPL_ACT_RAWCOST_TO_DATE_FC(l_index1), null)
                   ,PPL_ACT_COST_TO_DATE_PC = decode(l_track_wp_cost_flag, 'Y', u_PPL_ACT_COST_TO_DATE_PC(l_index1), null)
                   ,PPL_ACT_RAWCOST_TO_DATE_PC = decode(l_track_wp_cost_flag, 'Y', u_PPL_ACT_RAWCOST_TO_DATE_PC(l_index1), null)
                   ,EQPMT_ACT_COST_TO_DATE_TC = decode(l_track_wp_cost_flag, 'Y', u_EQPMT_ACT_COST_TO_DATE_TC(l_index1), null)
                   ,EQPMT_ACT_RAWCOST_TO_DATE_TC = decode(l_track_wp_cost_flag, 'Y', u_EQPMT_ACT_RAWCOST_TO_DATE_TC(l_index1), null)
                   ,EQPMT_ACT_COST_TO_DATE_FC = decode(l_track_wp_cost_flag, 'Y', u_EQPMT_ACT_COST_TO_DATE_FC(l_index1), null)
                   ,EQPMT_ACT_RAWCOST_TO_DATE_FC = decode(l_track_wp_cost_flag, 'Y', u_EQPMT_ACT_RAWCOST_TO_DATE_FC(l_index1), null)
                   ,EQPMT_ACT_COST_TO_DATE_PC = decode(l_track_wp_cost_flag, 'Y', u_EQPMT_ACT_COST_TO_DATE_PC(l_index1), null)
                   ,EQPMT_ACT_RAWCOST_TO_DATE_PC = decode(l_track_wp_cost_flag, 'Y', u_EQPMT_ACT_RAWCOST_TO_DATE_PC(l_index1), null)
                   --Bug 3801745 End
                   ,OTH_QUANTITY_TO_DATE = u_oth_qty(l_index1)
                   ,oth_etc_cost_tc = u_oth_etc_cost_to_date_tc(l_index1)
                   ,oth_etc_rawcost_tc = u_oth_etc_rawcost_to_date_tc(l_index1)
                   ,oth_etc_cost_pc = u_oth_etc_cost_to_date_pc(l_index1)
                   ,oth_etc_rawcost_pc = u_oth_etc_rawcost_to_date_pc(l_index1)
                   ,oth_etc_cost_fc = u_oth_etc_cost_to_date_fc(l_index1)
                   ,oth_etc_rawcost_fc = u_oth_etc_rawcost_to_date_fc(l_index1)
                   ,ppl_etc_cost_tc = u_ppl_etc_cost_to_date_tc(l_index1)
                   ,ppl_etc_rawcost_tc = u_ppl_etc_rawcost_to_date_tc(l_index1)
                   ,ppl_etc_cost_pc = u_ppl_etc_cost_to_date_pc(l_index1)
                   ,ppl_etc_rawcost_pc = u_ppl_etc_rawcost_to_date_pc(l_index1)
                   ,ppl_etc_cost_fc = u_ppl_etc_cost_to_date_fc(l_index1)
                   ,ppl_etc_rawcost_fc = u_ppl_etc_rawcost_to_date_fc(l_index1)
                   ,eqpmt_etc_cost_tc = u_eqpmt_etc_cost_to_date_tc(l_index1)
                   ,eqpmt_etc_rawcost_tc = u_eqpmt_etc_rawcost_to_date_tc(l_index1)
                   ,eqpmt_etc_cost_pc = u_eqpmt_etc_cost_to_date_pc(l_index1)
                   ,eqpmt_etc_rawcost_pc = u_eqpmt_etc_rawcost_to_date_pc(l_index1)
                   ,eqpmt_etc_cost_fc = u_eqpmt_etc_cost_to_date_fc(l_index1)
                   ,eqpmt_etc_rawcost_fc = u_eqpmt_etc_rawcost_to_date_fc(l_index1)
                   ,estimated_remaining_effort = u_ppl_etc_effort_to_date(l_index1)
                   ,eqpmt_etc_effort = u_eqpmt_etc_effort_to_date(l_index1)
                   ,oth_etc_quantity = u_oth_etc_qty(l_index1)
            where progress_rollup_id = u_progress_rollup_id(l_index1);

     IF g1_debug_mode  = 'Y' THEN
     pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Done with bulk update into pa_progress_rollup',
                    x_Log_Level=> 3);
     END IF;

     forall l_index1 in 1..l_index4
        update pa_progress_rollup set
                    CURRENT_FLAG = 'N'
            where progress_rollup_id = u1_progress_rollup_id(l_index1);

     IF g1_debug_mode  = 'Y' THEN
     pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Done with bulk update of current flag in pa_progress_rollup',
                    x_Log_Level=> 3);
     END IF;

     pa_debug.log_message('GET_SUMM_ACT: Done insert/update of pa_progress_rollup.', 1);

     if ((l_index2 > 0 or l_index3 > 0) and p_plan_res_level = 'N') then
        --- now we are done with updating all actuals
        --- we need to rollup data for the l_temp_as_of_date
        open rollup_method;
        fetch rollup_method into l_task_wt_basis_code;
        close rollup_method;

        begin
             pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Calling rollup_progress_pvt l_project_id='||l_project_id||', str ver id='||latest_wp_struct_ver_ids_tbl(l_index)||',l_temp_as_of_date='||l_temp_as_of_date ,
                    x_Log_Level=> 3);

          pa_progress_pub.rollup_progress_pvt(P_INIT_MSG_LIST  => FND_API.G_FALSE,
                                         P_VALIDATE_ONLY  => FND_API.G_FALSE,
                                         P_PROGRESS_MODE  => 'FUTURE',
                                         P_PROJECT_ID     => l_project_id,
                                         P_OBJECT_TYPE    => 'PA_STRUCTURES',
                                         P_AS_OF_DATE     => l_temp_as_of_date,
                                         P_PROCESS_WHOLE_TREE  => 'Y',
                                         P_STRUCTURE_VERSION_ID => latest_wp_struct_ver_ids_tbl(l_index),
                                         P_STRUCTURE_TYPE    => 'WORKPLAN',
                                         P_WP_ROLLUP_METHOD  => l_task_wt_basis_code,
                                         P_ROLLUP_ENTIRE_WBS => 'Y',
                                         X_RETURN_STATUS  => x_return_status,
                                         X_MSG_COUNT     => x_msg_count,
                                         X_MSG_DATA => x_msg_data);
             pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'After call x_return_status='||x_return_status ,
                    x_Log_Level=> 3);


         IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              pa_debug.log_message('GET_SUMM_ACT: Rollup_Progress_Pvt returned error.', 1);
              -- Added for bug 5526638
              l_err_msg := 'Error in rollup of progress attributes';
              RAISE  FND_API.G_EXC_ERROR;
           END IF;

         IF g1_debug_mode  = 'Y' THEN
           pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Done with rollup for this project.',
                    x_Log_Level=> 3);
         END IF;
       EXCEPTION when others then
         x_return_status := 'E';
         pa_debug.log_message('GET_SUMM_ACT: Exception in rollup of progress attributes.', 1);
         fnd_msg_pub.add_exc_msg(p_pkg_name    => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'GET_SUMMARIZED_ACTUALS',
                            p_error_text     => SUBSTRB('pa_progress_pub.rollup_progress_pvt:'||SQLERRM,1,120));
         -- Added for bug 5526638
         l_err_msg := substrb('Exception in rollup of progress attributes :'||SQLERRM,1,240);
         raise;
       end;
       if (proj_pgm_level_tbl(l_index) > 1) then
         begin
           --- call program rollup api only when project level is > 1
             pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Calling program_rollup_pvt l_project_id='||l_project_id||', str ver id='||latest_wp_struct_ver_ids_tbl(l_index)||',l_temp_as_of_date='||l_temp_as_of_date ,
                    x_Log_Level=> 3);

           pa_progress_pvt.program_rollup_pvt(p_init_msg_list    => 'F'
                                  ,p_validate_only        => 'F'
                                  ,p_project_id           => l_project_id
                                  ,p_as_of_date           => l_temp_as_of_date
                                  ,p_structure_type       => 'WORKPLAN'
                                  ,p_structure_ver_id     => latest_wp_struct_ver_ids_tbl(l_index)
                                  ,x_return_status        => x_return_status
                                  ,x_msg_count            => x_msg_count
                                  ,x_msg_data             => x_msg_data);
             pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'After call x_return_status='||x_return_status ,
                    x_Log_Level=> 3);


           IF g1_debug_mode  = 'Y' THEN
              pa_debug.write(x_Module=>'PA_PROGRESS_PUB.GET_SUMMMARIZED_ACTUALS',
              x_Msg => 'After Calling program_rollup_pvt return_status='||x_return_status,            x_Log_Level=> 3);
           END IF;
           IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              pa_debug.log_message('GET_SUMM_ACT: Program_Rollup_Pvt returned error.', 1);
              -- Added for bug 5526638
              l_err_msg := 'Error in program rollup';
              RAISE  FND_API.G_EXC_ERROR;
           END IF;
         EXCEPTION when others then
           x_return_status := 'E';
           pa_debug.log_message('GET_SUMM_ACT: Exception in program rollup.', 1);
           fnd_msg_pub.add_exc_msg(p_pkg_name  => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'GET_SUMMARIZED_ACTUALS',
                              p_error_text     => SUBSTRB('pa_progress_pub.program_rollup_pvt:'||SQLERRM,1,120));
           -- Added for bug 5526638
           l_err_msg := substrb('Exception in program rollup :'||SQLERRM,1,240);
           raise;
         end;
       end if;
     end if;
    --- and also for future as of dates, call future rollup api ??
    --- we insert ETC in plan lines table for those assignments which have progress records but no actuals

       /* Begin: Fix for Bug # 5526638. */
     EXCEPTION when others then
     /* Added for Bug #5659575 */
      if p_extraction_type = 'PUBLISH' then
        raise;
      else
        l_act_err_flag(l_index) := 1;
        /* Commented and Modified for Bug #6156129
        l_act_err_msg(l_index)  := l_err_msg; */
        l_act_err_msg(l_index)  := nvl(l_err_msg, SUBSTRB('PA_PROGRESS_PUB.GET_SUMMARIZED_ACTUALS: '|| SQLERRM,1,240));
        l_act_out_report        := 'Y';
        Rollback to ACT_PROJECT;
      end if;
     END; --- Skipping Begin
    /* End: Fix for Bug # 5526638. */

    end loop;  --- for each project

  else
    pa_debug.log_message('GET_SUMM_ACT: Get_summarized_data returned error.', 1);
    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'pji_fm_xbs_accum_utils.get_summarized_data returned error',
                    x_Log_Level=> 3);
  end if; -- if status is not success

   ---here call the budget lines api
   IF g1_debug_mode  = 'Y' THEN
     pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                    x_Msg => 'Calling PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP',
                    x_Log_Level=> 3);
   END IF;

   FORALL i IN 1..l_index_etc
      INSERT INTO PJI_FM_EXTR_PLAN_LINES(
            PROJECT_ID
           ,PROJECT_ORG_ID
           ,PROJECT_ELEMENT_ID
           ,STRUCT_VER_ID
           ,PERIOD_NAME
           ,CALENDAR_TYPE
           ,END_DATE
           ,RBS_ELEMENT_ID
           ,PLAN_VERSION_ID
           ,PLAN_TYPE_ID
           ,WP_VERSION_FLAG
           ,ROLLUP_TYPE
           ,TXN_CURRENCY_CODE
           ,ETC_QUANTITY
           ,ETC_TXN_BURDENED_COST
           ,ETC_PRJ_BURDENED_COST
           ,ETC_PFC_BURDENED_COST
           ,ETC_TXN_RAW_COST
           ,ETC_PRJ_RAW_COST
           ,ETC_PFC_RAW_COST
           ,RESOURCE_CLASS_CODE
           ,RATE_BASED_FLAG
           ,PRJ_CURRENCY_CODE
           ,PFC_CURRENCY_CODE)
       VALUES( ETC_PROJECT_ID(i)
              ,ETC_PROJECT_ORG_ID(i)
              ,ETC_PROJECT_ELEMENT_ID(i)
              ,ETC_STRUCT_VER_ID(i)
              ,ETC_PERIOD_NAME(i)
              ,ETC_CALENDAR_TYPE(i)
              ,ETC_END_DATE(i)
              ,ETC_RBS_ELEMENT_ID(i)
              ,ETC_PLAN_VERSION_ID(i)
              ,ETC_PLAN_TYPE_ID(i)
              ,ETC_WP_VERSION_FLAG(i)
              ,ETC_ROLLUP_TYPE(i)
              ,ETC_TXN_CURRENCY_CODE(i)
              ,ETC_QUANTITY(i)
              ,ETC_TXN_BURDENED_COST(i)
              ,ETC_PRJ_BURDENED_COST(i)
              ,ETC_PFC_BURDENED_COST(i)
              ,ETC_TXN_RAW_COST(i)
              ,ETC_PRJ_RAW_COST(i)
              ,ETC_PFC_RAW_COST(i)
              ,ETC_RESOURCE_CLASS_CODE(i)
              ,ETC_RATE_BASED_FLAG(i)
              ,ETC_PRJ_CURRENCY_CODE(i)
              ,ETC_PFC_CURRENCY_CODE(i));

   -- BEGIN: Changes to take care of period flagged rows from the pji temporary table: pji_fm_xbs_accum_tmp1.

   -- Bulk insert into the table: PA_PROG_ACT_BY_PERIOD_TEMP.
   pa_debug.log_message('GET_SUMM_ACT: Before inserting records in PA_PROG_ACT_BY_PERIOD_TEMP. Record Count = '||l_t_index, 1);

   delete from PA_PROG_ACT_BY_PERIOD_TEMP;

   FORALL i IN 1..l_t_index
      INSERT INTO PA_PROG_ACT_BY_PERIOD_TEMP(
             project_id
            ,structure_version_id
            ,task_id
            ,resource_assignment_id
            ,as_of_date
            ,actual_cost
            ,actual_effort
            ,period_name
            ,txn_currency_code
            ,actual_cost_pc
            ,actual_cost_fc
            ,actual_rawcost
            ,actual_rawcost_pc
            ,actual_rawcost_fc
            ,hidden_res_assgn_id
            ,resource_list_member_id
            ,current_flag
            ,object_type
            ,percent_complete_id
            ,attribute1
            ,attribute2
            ,attribute3
            ,attribute4
            ,attribute5
            ,attribute6
            ,start_date
            ,finish_date)
      VALUES (
             t_PROJECT_ID(i)
            ,t_STRUCTURE_VERSION_ID(i)
            ,t_TASK_ID(i)
            ,t_RESOURCE_ASSIGNMENT_ID(i)
            ,t_AS_OF_DATE(i)
            ,decode(t_track_wp_cost_flag(i), 'Y', t_ACTUAL_COST(i), null)
            ,t_ACTUAL_EFFORT(i)
            ,t_PERIOD_NAME(i)
            ,t_TXN_CURRENCY_CODE(i)
            ,decode(t_track_wp_cost_flag(i), 'Y', t_ACTUAL_COST_PC(i), null)
            ,decode(t_track_wp_cost_flag(i), 'Y', t_ACTUAL_COST_FC(i), null)
            ,decode(t_track_wp_cost_flag(i), 'Y', t_ACTUAL_RAWCOST(i), null)
            ,decode(t_track_wp_cost_flag(i), 'Y', t_ACTUAL_RAWCOST_PC(i), null)
            ,decode(t_track_wp_cost_flag(i), 'Y', t_ACTUAL_RAWCOST_FC(i), null)
            ,t_HIDDEN_RES_ASSGN_ID(i)
            ,t_RESOURCE_LIST_MEMBER_ID(i)
            ,t_CURRENT_FLAG(i)
            ,t_OBJECT_TYPE(i)
            ,t_PERCENT_COMPLETE_ID(i)
            ,to_char(null)
            ,to_char(null)
            ,to_char(null)
            ,to_number(null)
            ,to_number(null)
            ,to_number(null)
            ,t_min_start_date(i)
            ,t_max_end_date(i));

   -- END: Changes to take care of period flagged rows from the pji temporary table: pji_fm_xbs_accum_tmp1.

   /* Begin: Fix for Bug # 5526638. */
    /* Added If for Bug # 5659575*/
   if p_extraction_type <> 'PUBLISH' then
    FOR i IN 1..proj_ids_tbl.COUNT loop
       if l_act_err_flag(i) = 0 and (l_t_index <> 0) then   /* Added (l_t_index <> 0) for bug 6163049 */
       BEGIN
       SAVEPOINT   ACT_FP_PROJECT;

         skip_proj_ids_tbl.delete;
         skip_latest_wp_str_ver_id_tbl.delete;
         skip_proj_thru_dates_tbl.delete;

         skip_proj_ids_tbl.extend;
         skip_latest_wp_str_ver_id_tbl.extend;
         skip_proj_thru_dates_tbl.extend;

         skip_proj_ids_tbl(1)             := proj_ids_tbl(i);
         skip_latest_wp_str_ver_id_tbl(1) := latest_wp_struct_ver_ids_tbl(i);
         skip_proj_thru_dates_tbl(1)      := proj_thru_dates_tbl(i);
        /* Call this Api in single project mode */
        PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP
            (P_PROJECT_ID_TAB        => skip_proj_ids_tbl,
             P_WP_STR_VERSION_ID_TAB => skip_latest_wp_str_ver_id_tbl,
             P_ACTUALS_THRU_DATE     => skip_proj_thru_dates_tbl,
             P_CALLING_CONTEXT       => 'WP_SUMMARIZED_ACTUAL',
             P_extraction_type       => l_extraction_type,
             P_COMMIT_FLAG           => 'N',
             P_INIT_MSG_FLAG         => 'N',
             x_RETURN_STATUS         => x_return_status,
             x_MSG_COUNT             => x_msg_count,
             x_MSG_DATA              => x_msg_data);
         if (x_return_status <> 'S') then
              l_err_msg := x_msg_data ;
              l_act_err_flag(i)   := 1;
              l_act_err_msg(i)    := l_err_msg;
              l_act_out_report    := 'Y';
              Rollback to ACT_FP_PROJECT;
         end if;

	EXCEPTION WHEN OTHERS THEN
             l_err_msg := SUBSTRB('PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP: '||SQLERRM,1,120);
             l_act_err_flag(i)   := 1;
             l_act_err_msg(i)    := l_err_msg;
             l_act_out_report    := 'Y';
             Rollback to ACT_FP_PROJECT;
        END;

      end if;

    END LOOP;
    x_return_status := 'S';
    /* Commented an moved out of if block for bug#5659575
    if NVL(l_act_out_report,'N') = 'Y' then
       For l_index in 1..proj_ids_tbl.COUNT loop  --- FOR each PROJECT
         if l_act_err_flag(l_index) = 1 then
           PJI_FM_XBS_ACCUM_UTILS.DELETE_FIN8 (p_project_id   => proj_ids_tbl(l_index),
           p_err_flag     => l_act_err_flag(l_index),
           p_err_msg      => l_act_err_msg(l_index));
           DELETE PJI_FM_EXTR_PLAN_LINES where PROJECT_ID = proj_ids_tbl(l_index);
           DELETE PA_PROG_ACT_BY_PERIOD_TEMP where PROJECT_ID = proj_ids_tbl(l_index);
         else
           if (p_plan_res_level = 'Y') and l_get_summ_call_contxt in ('P', 'W') then
           PJI_FM_XBS_ACCUM_UTILS.DELETE_FIN8 (p_project_id    => proj_ids_tbl(l_index),
                        p_calendar_type => calendar_type_tbl(l_index),
                        p_end_Date      => proj_thru_dates_tbl(l_index));
           end if;
         end if;
       End Loop;
    else
      if (p_plan_res_level = 'Y') and l_get_summ_call_contxt in ('P', 'W')then
         For l_index in 1..proj_ids_tbl.COUNT loop
         PJI_FM_XBS_ACCUM_UTILS.DELETE_FIN8 (p_project_id    => proj_ids_tbl(l_index),
                           p_calendar_type => calendar_type_tbl(l_index),
                           p_end_Date      => proj_thru_dates_tbl(l_index));
         End Loop;
      end if;

    end if;*/
    /* End: Fix for Bug # 5526638. */
   else /* Uncommented for Bug #5659575*/
    /* Commented for bug 5526638
         Begin: Fix for Bug # 4018249. */

    if (l_t_index <> 0) then

         -- End: Fix for Bug # 4018249.

        begin
                PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP
                (P_PROJECT_ID_TAB        => proj_ids_tbl,
                P_WP_STR_VERSION_ID_TAB => latest_wp_struct_ver_ids_tbl,
                P_ACTUALS_THRU_DATE     => proj_thru_dates_tbl,
                P_CALLING_CONTEXT       => 'WP_SUMMARIZED_ACTUAL',
                P_extraction_type       => l_extraction_type,
                P_COMMIT_FLAG           => 'N',
                P_INIT_MSG_FLAG         => 'N',
                x_RETURN_STATUS         => x_return_status,
                x_MSG_COUNT             => x_msg_count,
                x_MSG_DATA              => x_msg_data);

                if (x_return_status <> 'S') then
                    pa_debug.log_message('GET_SUMM_ACT: PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP returned error.', 1);
                end if;

                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.get_summarized_actuals',
                            x_Msg => 'Done PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP',
                            x_Log_Level=> 3);
                END IF;

        EXCEPTION when others then
                pa_debug.log_message('GET_SUMM_ACT: PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP returned exception.', 1);
                x_return_status := 'E';
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'GET_SUMMARIZED_ACTUALS',
                            p_error_text     => SUBSTRB('PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP:'||SQLERRM,1,120));
                raise;
        end;

        -- Begin: Fix for Bug # 4018249.

    end if;

	  /* Added for Bug #5659575 */
	  if l_return_status = 'E' then
	   x_return_status := 'E';
	  end if;

         --End: Fix for Bug # 4018249.
    end if;

    if p_extraction_type <> 'PUBLISH' then
	l_conc_request_id := FND_GLOBAL.CONC_REQUEST_ID;
    end if;
     /* Added for bug #5659575 If block executes only in PJI flow*/
    if NVL(l_act_out_report,'N') = 'Y' then
       For l_index in 1..proj_ids_tbl.COUNT loop  --- FOR each PROJECT
         if l_act_err_flag(l_index) = 1 then
           PJI_FM_XBS_ACCUM_UTILS.DELETE_FIN8 (p_project_id   => proj_ids_tbl(l_index),
						p_err_flag     => l_act_err_flag(l_index),
						p_err_msg      => l_act_err_msg(l_index));
           DELETE PJI_FM_EXTR_PLAN_LINES where PROJECT_ID = proj_ids_tbl(l_index);
           DELETE PA_PROG_ACT_BY_PERIOD_TEMP where PROJECT_ID = proj_ids_tbl(l_index);
	   PA_PROJECT_STRUCTURE_UTILS.SET_PROCESS_CODE(proj_ids_tbl(l_index),
	                                               latest_wp_struct_ver_ids_tbl(l_index),
						       'PRE',
						       l_conc_request_id,
						       l_return_status);

         else
           if (p_plan_res_level = 'Y') and l_get_summ_call_contxt in ('P', 'W')then
           PJI_FM_XBS_ACCUM_UTILS.DELETE_FIN8 (p_project_id    => proj_ids_tbl(l_index),
                                               p_calendar_type => calendar_type_tbl(l_index),
                                               p_end_Date      => proj_thru_dates_tbl(l_index));
           end if;
   	   PA_PROJECT_STRUCTURE_UTILS.SET_PROCESS_CODE(proj_ids_tbl(l_index),
                                               latest_wp_struct_ver_ids_tbl(l_index),
					       NULL,
					       l_conc_request_id,
					       l_return_status);

         end if;
       End Loop;
    else
      if (p_plan_res_level = 'Y') and l_get_summ_call_contxt in ('P', 'W') then
         For l_index in 1..proj_ids_tbl.COUNT loop
         PJI_FM_XBS_ACCUM_UTILS.DELETE_FIN8 (p_project_id    => proj_ids_tbl(l_index),
                                             p_calendar_type => calendar_type_tbl(l_index),
                                             p_end_Date      => proj_thru_dates_tbl(l_index));
 	 if p_extraction_type <> 'PUBLISH' then
   	   PA_PROJECT_STRUCTURE_UTILS.SET_PROCESS_CODE(proj_ids_tbl(l_index),
                                               latest_wp_struct_ver_ids_tbl(l_index),
					       NULL,
					       l_conc_request_id,
					       l_return_status);
	 end if;

         End Loop;
      end if;
    end if;

     pa_debug.log_message('GET_SUMM_ACT: Done with Get_Summarized_Actuals.', 1);
     --- assigning l_return_status so that if any of the project had issues the program
     --- should finish with a warning
     /* Commented and moved above for bug#5659575
      x_return_status := l_return_status; */
     pa_debug.set_process('IGNORE');
EXCEPTION
    when l_pji_wp_exception then /* Bug 5526638*/
    pa_debug.log_message('GET_SUMM_ACT: Error while calling PJI api', 1);
    x_return_status :='E' ;
    when others then
    x_return_status := 'E';
    fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'GET_SUMMARIZED_ACTUALS',
                            p_error_text     => SUBSTRB('pa_progress_pub.get_summarized_actuals:'||SQLERRM,1,120));
    -- 4746476 : Priniting stack
    FOR i in 1..fnd_msg_pub.count_msg LOOP
	pa_interface_utils_pub.get_messages (
		        p_encoded        => Fnd_Api.G_FALSE
                       ,p_data           => l_data
                       ,p_msg_index      => i
                       ,p_msg_index_out  => l_msg_index_out );
        pa_debug.log_message('GET_SUMM_ACT: Error '||i||' ='||substr(l_data,1,200), 1);
    END LOOP;
    pa_debug.set_process('IGNORE');
    /* Added if condition for bug#5659575 */
    if p_extraction_type = 'PUBLISH' then
	RAISE;
    end if;

END GET_SUMMARIZED_ACTUALS;
-- Start of comments
--      API name        : UPDATE_FINANCIAL_TASK_PROGRESS
--      Type            : Public
--      Purpose         : Updates Financial Percent Complete
--      Parameters Desc :
--      p_object_type                   PA_TASKS
--      p_as_of_date                    The as_of_date for which progress to be entered
--      p_object_version_id             The task version id
--      p_structure_version_id          Structure version id of the publsihed or working structure version
--      p_progress_comment              Progress comment
--      p_brief_overview                Brief Overview
--      p_structure_type                FINANCIAL
--      p_rollup_entire_wbs             To indicate if it requires the whole structure rollup, in this
--                                      case it will ignore the passed object and starts with the lowest
--                                      task
--      History         : 29-MAR-04  sdnambia   Written For FPM Development Tracking Bug 3420093
-- End of comments

--FPM Dev CR 1 : Added following procedure

PROCEDURE UPDATE_FINANCIAL_TASK_PROGRESS(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_action                      IN      VARCHAR2        :='SAVE'
 ,P_rollup_entire_wbs_flag      IN      VARCHAR2        :='N'
 ,p_progress_mode               IN      VARCHAR2        :='FUTURE'
 ,p_percent_complete_id         IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_id                   IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_version_id           IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_object_type                 IN      VARCHAR2        :='PA_TASKS'
 ,p_as_of_date                  IN      DATE            :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
 ,p_percent_complete            IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_progress_status_code        IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_progress_comment            IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_brief_overview              IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_record_version_number       IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_pm_product_code             IN      VARCHAR2        :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_structure_type              IN      VARCHAR2        :='FINANCIAL'
 ,p_task_id                     IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_structure_version_id        IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2) --File.Sql.39 bug 4440895
IS

   l_api_name                      CONSTANT VARCHAR(30) := 'UPDATE_FINANCIAL_TASK_PROGRESS'             ;
   l_api_version                   CONSTANT NUMBER      := 1.0                                          ;
   l_return_status                 VARCHAR2(1)                                                          ;
   l_msg_count                     NUMBER                                                               ;
   l_msg_data                      VARCHAR2(250)                                                        ;
   l_data                          VARCHAR2(250)                                                        ;
   l_msg_index_out                 NUMBER                                                               ;
   l_error_msg_code                VARCHAR2(250)                                                        ;
   l_user_id                       NUMBER               := FND_GLOBAL.USER_ID                           ;
   l_login_id                      NUMBER               := FND_GLOBAL.LOGIN_ID                          ;
   l_task_id                       NUMBER                                                               ;
   l_object_id                     NUMBER                                                               ;
   l_project_id                    NUMBER                                                               ;
   l_percent_complete_id           NUMBER                                                               ;
   l_PROGRESS_ROLLUP_ID            NUMBER                                                               ;
   l_last_progress_date            DATE                                                                 ;
   l_progress_exists_on_aod        VARCHAR2(15)                                                         ;
   l_db_action                     VARCHAR2(10)                                                         ;
   l_published_flag                VARCHAR2(1)                                                          ;
   l_current_flag                  VARCHAR2(1)                                                          ;
   l_actual_start_date             DATE                                                                 ;
   l_actual_finish_date            DATE                                                                 ;
   l_estimated_start_date          DATE                                                                 ;
   l_estimated_finish_date         DATE                                                                 ;
   l_rollup_rec_ver_number         NUMBER                                                               ;
   l_published_by_party_id         NUMBER               := PA_UTILS.get_party_id( l_user_id )           ;
   l_object_type                   VARCHAR2(15)         := p_object_type                                ;
        -- Bug 3595585 : Initialized l_object_type to p_object_type instead of PA_TASKS
   l_structure_version_id          NUMBER                                                               ;
   l_published_structure           VARCHAR2(1)                                                          ;
   l_object_version_id             NUMBER                                                               ;
   g1_debug_mode                   VARCHAR2(1)                                                          ;
   l_structure_shared              VARCHAR2(1)                                                          ;
   l_brief_overview                VARCHAR2(250)                                                        ;
   l_progress_comment              VARCHAR2(4000)                                                       ;
   l_pm_product_code               VARCHAR2(30)                                                         ;
   l_rollup_method                 pa_proj_progress_attr.task_weight_basis_code%TYPE                    ;
   l_lowest_level_task             VARCHAR2(1)                                                          ;


   l_prog_pa_period_name           VARCHAR2(30)                                                         ;
   l_prog_gl_period_name           VARCHAR2(30)                                                         ;

   -- required for compilation
   l_percent_complete              NUMBER                                                               ;
   l_progress_status_code          VARCHAR2(30)                                                         ;
   l_task_status                   VARCHAR2(150)                                                        ;
   l_rollup_progress_status        VARCHAR2(150)                                                        ;
   l_INCREMENTAL_WORK_QTY          NUMBER                                                               ;
   l_CUMULATIVE_WORK_QTY           NUMBER                                                               ;
   l_BASE_PERCENT_COMPLETE         NUMBER                                                               ;
   l_EFF_ROLLUP_PERCENT_COMP       NUMBER                                                               ;
   l_rollup_completed_percentage   NUMBER                                                               ;
   l_BASE_PERCENT_COMP_DERIV_CODE  VARCHAR2(30)                                                         ;
   l_BASE_PROGRESS_STATUS_CODE     VARCHAR2(30)                                                         ;
   l_EFF_ROLLUP_PROG_STAT_CODE     VARCHAR2(150)                                                        ;
   l_ACTUAL_WQ_ENTRY_CODE          VARCHAR2(30)                                                         ;
   l_wq_enabled_flag               VARCHAR2(1)                                                          ;
   l_percent_complete_flag         VARCHAR2(1)                                                          ;
   l_allow_collab_prog_entry       VARCHAR2(1)                                                          ;
   l_allw_phy_prcnt_cmp_overrides  VARCHAR2(1)                                                          ;
   l_task_weight_basis_code        VARCHAR2(30)                                                         ;


   CURSOR cur_check_published_version(c_structure_version_id number, c_project_id number)
   IS
   SELECT decode(status.project_system_status_code, 'STRUCTURE_PUBLISHED', 'Y', 'N')
   FROM pa_proj_elem_ver_structure str, pa_project_statuses status
   where str.element_version_id = c_structure_version_id
   AND str.project_id = c_project_id
   AND str.status_code = status.project_status_code;

   CURSOR c_get_task_weight_method(c_project_id NUMBER, c_structure_type VARCHAR2)
   IS
   SELECT task_weight_basis_code
   FROM pa_proj_progress_attr
   WHERE project_id = c_project_id
   AND structure_type = c_structure_type;


   l_record_version_number  NUMBER                                         ; -- FPM Dev CR 6
BEGIN

    g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');
    IF g1_debug_mode  = 'Y' THEN
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'ENTERED', x_Log_Level=> 3);
    END IF;

    IF g1_debug_mode  = 'Y' THEN
       pa_debug.init_err_stack ('PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS');
    END IF;

    IF (p_commit = FND_API.G_TRUE) THEN
      savepoint UPDATE_FINANCIAL_TASK_PROGRESS;
    END IF;

    IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
      RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
    END IF;

    IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
      FND_MSG_PUB.initialize;
    END IF;

    IF g1_debug_mode  = 'Y' THEN
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_task_id: '||p_task_id, x_Log_Level=> 3);
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_object_version_id: '||p_object_version_id, x_Log_Level=> 3);
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_project_id: '||p_project_id, x_Log_Level=> 3);
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_object_id: '||p_object_id, x_Log_Level=> 3);
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_as_of_date: '||p_as_of_date, x_Log_Level=> 3);
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_percent_complete_id: '||p_percent_complete_id, x_Log_Level=> 3);
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_percent_complete: '||p_percent_complete, x_Log_Level=> 3);
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_record_version_number: '||p_record_version_number, x_Log_Level=> 3);
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_structure_type: '||p_structure_type, x_Log_Level=> 3);
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'p_structure_version_id: '||p_structure_version_id, x_Log_Level=> 3);
    END IF;


    x_return_status := FND_API.G_RET_STS_SUCCESS;


    IF p_task_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN
       l_task_id := 0;
    ELSE
        -- Bug 3876091 : Added IF for STRUCTURES
    IF p_object_type = 'PA_STRUCTURES' THEN
        l_task_id := 0;
    ELSE
        l_task_id := nvl(p_task_id, 0);
    END IF;
    END IF;

    -- Bug 3919211
    IF p_object_type = 'PA_STRUCTURES' THEN
    l_task_id := 0;
    END IF;


    IF p_object_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN
       l_object_id := 0;
    ELSE
       l_object_id := nvl(p_object_id, 0);
    END IF;

    IF p_object_version_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN
       l_object_version_id := 0;
    ELSE
       l_object_version_id := nvl(p_object_version_id, 0);
    END IF;

    IF p_brief_overview = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_brief_overview := null;
    ELSE
       l_brief_overview := p_brief_overview;
    END IF;

    IF p_progress_comment = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_progress_comment := null;
    ELSE
       l_progress_comment := p_progress_comment;
    END IF;

    IF p_pm_product_code = PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
    THEN
       l_pm_product_code := null;
    ELSE
       l_pm_product_code := p_pm_product_code;
    END IF;

    -- Bug 4938333 Begin
    -- In case of financial struture, no need to check for published version
    -- populate structure_version_id always null.
    /*
    OPEN cur_check_published_version(p_structure_version_id, p_project_id);
    FETCH cur_check_published_version INTO l_published_structure;
    CLOSE cur_check_published_version;

    IF l_published_structure = 'Y'
    THEN
        l_structure_version_id := null;
    ELSE
        l_structure_version_id := p_structure_version_id;
    END IF;
    */
    l_published_structure := 'Y';
    l_structure_version_id := null;
    -- Bug 4938333 End
    IF p_percent_complete = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
    THEN
       l_percent_complete := 0;
    ELSE
       l_percent_complete := nvl(p_percent_complete,0);
       --Changed for BIG 3950574, rtarway
       --l_percent_complete := round ( nvl(p_percent_complete,0),2 );
    END IF;

    --bug 3850475, Percent complete should be between 0 and 100
    IF l_percent_complete < 0 OR l_percent_complete > 100
    THEN
       PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                            ,p_msg_name       => 'PA_FIN_PERCENT_INVALID');
       x_msg_data := 'PA_FIN_PERCENT_INVALID';
       x_return_status := 'E';
       RAISE  FND_API.G_EXC_ERROR;
    END IF;


    ---- if status is CANCELLED
    IF PA_PROGRESS_UTILS.get_system_task_status(PA_PROGRESS_UTILS.get_task_status( p_project_id, p_task_id)) = 'CANCELLED'
    THEN
      IF p_pm_product_code = 'MSPROJECT'
      THEN
        PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                             ,p_msg_name       => 'PA_TP_CANT_NTER_PRG_CANCEL_MSP'
                             ,p_token1 => 'TASK_NAME'
                             ,p_value1 => PA_TASK_UTILS.get_task_name(l_task_id)
                             ,p_token2 => 'TASK_NUMBER'
                             ,p_value2 => PA_TASK_UTILS.get_task_number(l_task_id));
        x_msg_data := 'PA_TP_CANT_NTER_PRG_CANCEL';
        x_return_status := 'E';
        RAISE  FND_API.G_EXC_ERROR;
      ELSE
        PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                             ,p_msg_name       => 'PA_TP_CANT_NTER_PRG_CANCEL_AMG'
                             ,p_token1 => 'TASK_ID'
                             ,p_value1 => p_object_id
                            );
        x_msg_data := 'PA_TP_CANT_NTER_PRG_CANCEL';
        x_return_status := 'E';
        RAISE  FND_API.G_EXC_ERROR;
      END IF;
    END IF;
    ---- if status is CANCELLED

    ----- Invalid DATE
    IF p_as_of_date = PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE OR p_as_of_date IS NULL
    THEN
        PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                             ,p_msg_name       => 'PA_TP_INV_AOD'
                             ,p_token1 => 'AS_OF_DATE'
                             ,p_value1 => p_as_of_date);
       x_msg_data := 'PA_TP_INV_AOD';
       x_return_status := 'E';
       RAISE  FND_API.G_EXC_ERROR;
    END IF;
    ----- Wrong DATE


    l_last_progress_date := PA_PROGRESS_UTILS.GET_LATEST_AS_OF_DATE(
                                     p_task_id        => l_task_id--p_task_id Bug 3876091
                                    ,p_project_id     => p_project_id
                                    ,p_object_id      => l_object_id
                                    ,p_object_type    => l_object_type
                                    ,p_structure_type => p_structure_type
                            );


    IF g1_debug_mode  = 'Y' THEN
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'l_last_progress_date: '||l_last_progress_date, x_Log_Level=> 3);
    END IF;

    l_progress_exists_on_aod := PA_PROGRESS_UTILS.check_prog_exists_on_aod(
                                      p_project_id         => p_project_id
                                     ,p_object_type        => l_object_type
                                     ,p_object_version_id  => l_object_version_id
                                     ,p_task_id            => l_task_id -- l_object_id Bug 3876091
                                     ,p_as_of_date         => p_as_of_date
                                     ,p_structure_type     => p_structure_type
                     ,p_object_id          => l_object_id -- Bug 3764224
                                    );

    IF g1_debug_mode  = 'Y' THEN
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'l_progress_exists_on_aod: '||l_progress_exists_on_aod, x_Log_Level=> 3);
    END IF;

    -- Bug 3603636 : IF record is already published then we maintain the history of changes.
    -- So percent complete will have data inserted and roll up table will be updated.
    --??? One issue here is tregaring the history_flag in ppc table. I think it shoul dbe updated with Y for the existing
    -- record on that as_of_date
--    IF l_progress_exists_on_aod = 'PUBLISHED'
--    THEN
--        l_db_action := 'UPDATE';
--    ELSE
        l_db_action := 'CREATE';
--    END IF;

    IF p_as_of_date >= NVL( l_last_progress_date, p_as_of_date ) -- FPM Dev CR 5 : Equal to was missing
    THEN
        l_current_flag     := 'Y';
        UPDATE pa_percent_completes
        SET current_flag = 'N'
        WHERE project_id = p_project_id
        AND object_id = l_object_id
        AND current_flag = 'Y'
        AND object_type = l_object_type
        AND structure_type = p_structure_type;

        UPDATE pa_progress_rollup
        SET current_flag = 'N'
        WHERE project_id = p_project_id
        AND   object_id = p_object_id
        AND   object_type = p_object_type
        --AND   as_of_date = p_as_of_date
        AND current_flag = 'Y'
        --AND   object_version_id = p_object_version_id Bug 3603636, We shd not rely on object_version_id
        AND structure_version_id IS NULL
        AND structure_type = p_structure_type;

    ELSIF p_as_of_date < NVL( l_last_progress_date, p_as_of_date )
    THEN
        l_current_flag     := 'N';
    END IF;



    l_published_flag := 'Y';

    IF g1_debug_mode  = 'Y' THEN
       pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'l_db_action: '||l_db_action, x_Log_Level=> 3);
    END IF;

    l_prog_pa_period_name := PA_PROGRESS_UTILS.Prog_Get_Pa_Period_Name(p_as_of_date);
    l_prog_gl_period_name := PA_PROGRESS_UTILS.Prog_Get_GL_Period_Name(p_as_of_date);


    IF l_db_action = 'CREATE'
    THEN
            /* Bug 3603636 : Putiing the following code. After confirmation we will uncomment
            UPDATE pa_percent_completes
            SET history_flag = 'Y'
            WHERE project_id = p_project_id
            AND object_id = l_object_id
            AND trunc(date_computed) = trunc(p_as_of_date)
            AND object_type = l_object_type
            AND structure_type = p_structure_type;
            */

        PA_PERCENT_COMPLETES_PKG.INSERT_ROW(
                      p_TASK_ID                  => l_task_id
                      ,p_DATE_COMPUTED           => p_as_of_date
                      ,p_LAST_UPDATE_DATE        => SYSDATE
                      ,p_LAST_UPDATED_BY         => l_user_id
                      ,p_CREATION_DATE           => SYSDATE
                      ,p_CREATED_BY              => l_user_id
                      ,p_LAST_UPDATE_LOGIN       => l_login_id
                      ,p_COMPLETED_PERCENTAGE    => l_percent_complete
                      ,p_DESCRIPTION             => l_brief_overview
                      ,p_PROJECT_ID              => p_project_id
                      ,p_PM_PRODUCT_CODE         => l_pm_product_code
                      ,p_CURRENT_FLAG            => l_current_flag
                      ,p_OBJECT_TYPE             => l_object_type
                      ,p_OBJECT_ID               => l_object_id
                      ,p_OBJECT_VERSION_ID       => l_object_version_id
                      ,p_PROGRESS_STATUS_CODE    => l_progress_status_code
                      ,p_ACTUAL_START_DATE       => l_actual_start_date
                      ,p_ACTUAL_FINISH_DATE      => l_actual_finish_date
                      ,p_ESTIMATED_START_DATE    => l_estimated_start_date
                      ,p_ESTIMATED_FINISH_DATE   => l_estimated_finish_date
                      ,p_PUBLISHED_FLAG          => l_published_flag
                      ,p_PUBLISHED_BY_PARTY_ID   => l_published_by_party_id
                      ,p_PROGRESS_COMMENT        => l_progress_comment
                      ,p_HISTORY_FLAG            => 'N'
                      ,p_status_code             => l_task_status
                      ,x_PERCENT_COMPLETE_ID     => l_percent_complete_id
                      ,p_ATTRIBUTE_CATEGORY      => null
                      ,p_ATTRIBUTE1              => null
                      ,p_ATTRIBUTE2              => null
                      ,p_ATTRIBUTE3              => null
                      ,p_ATTRIBUTE4              => null
                      ,p_ATTRIBUTE5              => null
                      ,p_ATTRIBUTE6              => null
                      ,p_ATTRIBUTE7              => null
                      ,p_ATTRIBUTE8              => null
                      ,p_ATTRIBUTE9              => null
                      ,p_ATTRIBUTE10             => null
                      ,p_ATTRIBUTE11             => null
                      ,p_ATTRIBUTE12             => null
                      ,p_ATTRIBUTE13             => null
                      ,p_ATTRIBUTE14             => null
                      ,p_ATTRIBUTE15             => null
                      ,p_structure_type          => p_structure_type
        );

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'INSERTED IN PPC', x_Log_Level=> 3);
        END IF;

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'INSERTING IN PPR', x_Log_Level=> 3);
        END IF;


        l_PROGRESS_ROLLUP_ID := PA_PROGRESS_UTILS.get_prog_rollup_id(
                           p_project_id                 => p_project_id
                          ,p_object_id                  => l_object_id
                          ,p_object_type                => l_object_type
                          ,p_object_version_id          => l_object_version_id
                          ,p_as_of_date                 => p_as_of_date
                          ,p_structure_type             => p_structure_type
                          ,p_structure_version_id       => l_structure_version_id
              ,p_proj_element_id            => l_task_id -- Bug 3919211 --l_object_id -- Bug 3764224
                          ,x_record_version_number      => l_rollup_rec_ver_number
        );

        IF l_PROGRESS_ROLLUP_ID IS NULL
        THEN
            PA_PROGRESS_ROLLUP_PKG.INSERT_ROW(
                       X_PROGRESS_ROLLUP_ID              => l_PROGRESS_ROLLUP_ID
                      ,X_PROJECT_ID                      => p_project_id
                      ,X_OBJECT_ID                       => l_object_id
                      ,X_OBJECT_TYPE                     => l_object_type
                      ,X_AS_OF_DATE                      => p_as_of_date
                      ,X_OBJECT_VERSION_ID               => l_object_version_id
                      ,X_LAST_UPDATE_DATE                => SYSDATE
                      ,X_LAST_UPDATED_BY                 => l_user_id
                      ,X_CREATION_DATE                   => SYSDATE
                      ,X_CREATED_BY                      => l_user_id
                      ,X_PROGRESS_STATUS_CODE            => l_rollup_progress_status
                      ,X_LAST_UPDATE_LOGIN               => l_login_id
                      ,X_INCREMENTAL_WORK_QTY            => l_INCREMENTAL_WORK_QTY
                      ,X_CUMULATIVE_WORK_QTY             => l_CUMULATIVE_WORK_QTY
                      ,X_BASE_PERCENT_COMPLETE           => l_BASE_PERCENT_COMPLETE
                      ,X_EFF_ROLLUP_PERCENT_COMP         => l_EFF_ROLLUP_PERCENT_COMP
                      ,X_COMPLETED_PERCENTAGE            => l_percent_complete
                      ,X_ESTIMATED_START_DATE            => l_estimated_start_date
                      ,X_ESTIMATED_FINISH_DATE           => l_estimated_finish_date
                      ,X_ACTUAL_START_DATE               => l_actual_start_date
                      ,X_ACTUAL_FINISH_DATE              => l_actual_finish_date
                      ,X_EST_REMAINING_EFFORT            => null
                      ,X_BASE_PERCENT_COMP_DERIV_CODE    => l_BASE_PERCENT_COMP_DERIV_CODE
                      ,X_BASE_PROGRESS_STATUS_CODE       => l_BASE_PROGRESS_STATUS_CODE
                      ,X_EFF_ROLLUP_PROG_STAT_CODE       => l_EFF_ROLLUP_PROG_STAT_CODE
                      ,x_percent_complete_id             => l_percent_complete_id
                      ,X_STRUCTURE_TYPE                  => p_structure_type
                      ,X_PROJ_ELEMENT_ID                 => l_task_id -- p_task_id  Bug 3876091
                      ,X_STRUCTURE_VERSION_ID            => l_structure_version_id
                      ,X_PPL_ACT_EFFORT_TO_DATE          => null
                      ,X_EQPMT_ACT_EFFORT_TO_DATE        => null
                      ,X_EQPMT_ETC_EFFORT                => null
                      ,X_OTH_ACT_COST_TO_DATE_TC         => null
                      ,X_OTH_ACT_COST_TO_DATE_FC         => null
                      ,X_OTH_ACT_COST_TO_DATE_PC         => null
                      ,X_OTH_ETC_COST_TC                 => null
                      ,X_OTH_ETC_COST_FC                 => null
                      ,X_OTH_ETC_COST_PC                 => null
                      ,X_PPL_ACT_COST_TO_DATE_TC         => null
                      ,X_PPL_ACT_COST_TO_DATE_FC         => null
                      ,X_PPL_ACT_COST_TO_DATE_PC         => null
                      ,X_PPL_ETC_COST_TC                 => null
                      ,X_PPL_ETC_COST_FC                 => null
                      ,X_PPL_ETC_COST_PC                 => null
                      ,X_EQPMT_ACT_COST_TO_DATE_TC       => null
                      ,X_EQPMT_ACT_COST_TO_DATE_FC       => null
                      ,X_EQPMT_ACT_COST_TO_DATE_PC       => null
                      ,X_EQPMT_ETC_COST_TC               => null
                      ,X_EQPMT_ETC_COST_FC               => null
                      ,X_EQPMT_ETC_COST_PC               => null
                      ,X_EARNED_VALUE                    => null
                      ,X_TASK_WT_BASIS_CODE              => null
                      ,X_SUBPRJ_PPL_ACT_EFFORT           => null
                      ,X_SUBPRJ_EQPMT_ACT_EFFORT         => null
                      ,X_SUBPRJ_PPL_ETC_EFFORT           => null
                      ,X_SUBPRJ_EQPMT_ETC_EFFORT         => null
                      ,X_SBPJ_OTH_ACT_COST_TO_DATE_TC    => null
                      ,X_SBPJ_OTH_ACT_COST_TO_DATE_FC    => null
                      ,X_SBPJ_OTH_ACT_COST_TO_DATE_PC    => null
                      ,X_SUBPRJ_PPL_ACT_COST_TC          => null
                      ,X_SUBPRJ_PPL_ACT_COST_FC          => null
                      ,X_SUBPRJ_PPL_ACT_COST_PC          => null
                      ,X_SUBPRJ_EQPMT_ACT_COST_TC        => null
                      ,X_SUBPRJ_EQPMT_ACT_COST_FC        => null
                      ,X_SUBPRJ_EQPMT_ACT_COST_PC        => null
                      ,X_SUBPRJ_OTH_ETC_COST_TC          => null
                      ,X_SUBPRJ_OTH_ETC_COST_FC          => null
                      ,X_SUBPRJ_OTH_ETC_COST_PC          => null
                      ,X_SUBPRJ_PPL_ETC_COST_TC          => null
                      ,X_SUBPRJ_PPL_ETC_COST_FC          => null
                      ,X_SUBPRJ_PPL_ETC_COST_PC          => null
                      ,X_SUBPRJ_EQPMT_ETC_COST_TC        => null
                      ,X_SUBPRJ_EQPMT_ETC_COST_FC        => null
                      ,X_SUBPRJ_EQPMT_ETC_COST_PC        => null
                      ,X_SUBPRJ_EARNED_VALUE             => null
                      ,X_CURRENT_FLAG                    => l_current_flag
                      ,X_PROJFUNC_COST_RATE_TYPE         => null
                      ,X_PROJFUNC_COST_EXCHANGE_RATE     => null
                      ,X_PROJFUNC_COST_RATE_DATE         => null
                      ,X_PROJ_COST_RATE_TYPE             => null
                      ,X_PROJ_COST_EXCHANGE_RATE         => null
                      ,X_PROJ_COST_RATE_DATE             => null
                      ,X_TXN_CURRENCY_CODE               => null
                      ,X_PROG_PA_PERIOD_NAME             => l_prog_pa_period_name
                      ,X_PROG_GL_PERIOD_NAME             => l_prog_gl_period_name
                      ,X_OTH_QUANTITY_TO_DATE            => null
                      ,X_OTH_ETC_QUANTITY                => null
                      ,X_OTH_ACT_RAWCOST_TO_DATE_TC      => null
                      ,X_OTH_ACT_RAWCOST_TO_DATE_FC      => null
                      ,X_OTH_ACT_RAWCOST_TO_DATE_PC      => null
                      ,X_OTH_ETC_RAWCOST_TC      => null
                      ,X_OTH_ETC_RAWCOST_FC      => null
                      ,X_OTH_ETC_RAWCOST_PC      => null
                      ,X_PPL_ACT_RAWCOST_TO_DATE_TC      => null
                      ,X_PPL_ACT_RAWCOST_TO_DATE_FC      => null
                      ,X_PPL_ACT_RAWCOST_TO_DATE_PC      => null
                      ,X_PPL_ETC_RAWCOST_TC      => null
                      ,X_PPL_ETC_RAWCOST_FC      => null
                      ,X_PPL_ETC_RAWCOST_PC      => null
                      ,X_EQPMT_ACT_RAWCOST_TO_DATE_TC    => null
                      ,X_EQPMT_ACT_RAWCOST_TO_DATE_FC    => null
                      ,X_EQPMT_ACT_RAWCOST_TO_DATE_PC    => null
                      ,X_EQPMT_ETC_RAWCOST_TC    => null
                      ,X_EQPMT_ETC_RAWCOST_FC    => null
                      ,X_EQPMT_ETC_RAWCOST_PC    => null
                      ,X_SP_OTH_ACT_RAWCOST_TODATE_TC    => null
                      ,X_SP_OTH_ACT_RAWCOST_TODATE_FC    => null
                      ,X_SP_OTH_ACT_RAWCOST_TODATE_PC    => null
                      ,X_SUBPRJ_PPL_ACT_RAWCOST_TC       => null
                      ,X_SUBPRJ_PPL_ACT_RAWCOST_FC       => null
                      ,X_SUBPRJ_PPL_ACT_RAWCOST_PC       => null
                      ,X_SUBPRJ_EQPMT_ACT_RAWCOST_TC     => null
                      ,X_SUBPRJ_EQPMT_ACT_RAWCOST_FC     => null
                      ,X_SUBPRJ_EQPMT_ACT_RAWCOST_PC     => null
                      ,X_SUBPRJ_OTH_ETC_RAWCOST_TC       => null
                      ,X_SUBPRJ_OTH_ETC_RAWCOST_FC       => null
                      ,X_SUBPRJ_OTH_ETC_RAWCOST_PC       => null
                      ,X_SUBPRJ_PPL_ETC_RAWCOST_TC       => null
                      ,X_SUBPRJ_PPL_ETC_RAWCOST_FC       => null
                      ,X_SUBPRJ_PPL_ETC_RAWCOST_PC       => null
                      ,X_SUBPRJ_EQPMT_ETC_RAWCOST_TC     => null
                      ,X_SUBPRJ_EQPMT_ETC_RAWCOST_FC     => null
                      ,X_SUBPRJ_EQPMT_ETC_RAWCOST_PC     => null);
        ELSE
            PA_PROGRESS_ROLLUP_PKG.UPDATE_ROW(
                       X_PROGRESS_ROLLUP_ID              => l_PROGRESS_ROLLUP_ID
                      ,X_PROJECT_ID                      => p_project_id
                      ,X_OBJECT_ID                       => l_object_id
                      ,X_OBJECT_TYPE                     => l_object_type
                      ,X_AS_OF_DATE                      => p_as_of_date
                      ,X_OBJECT_VERSION_ID               => l_object_version_id
                      ,X_LAST_UPDATE_DATE                => SYSDATE
                      ,X_LAST_UPDATED_BY                 => l_user_id
                      ,X_PROGRESS_STATUS_CODE            => l_rollup_progress_status
                      ,X_LAST_UPDATE_LOGIN               => l_login_id
                      ,X_INCREMENTAL_WORK_QTY            => l_INCREMENTAL_WORK_QTY
                      ,X_CUMULATIVE_WORK_QTY             => l_CUMULATIVE_WORK_QTY
                      ,X_BASE_PERCENT_COMPLETE           => l_BASE_PERCENT_COMPLETE
                      ,X_EFF_ROLLUP_PERCENT_COMP         => l_EFF_ROLLUP_PERCENT_COMP
                      ,X_COMPLETED_PERCENTAGE            => l_percent_complete
                      ,X_ESTIMATED_START_DATE            => l_estimated_start_date
                      ,X_ESTIMATED_FINISH_DATE           => l_estimated_finish_date
                      ,X_ACTUAL_START_DATE               => l_actual_start_date
                      ,X_ACTUAL_FINISH_DATE              => l_actual_finish_date
                      ,X_EST_REMAINING_EFFORT            => null
                      ,X_BASE_PERCENT_COMP_DERIV_CODE    => l_BASE_PERCENT_COMP_DERIV_CODE
                      ,X_BASE_PROGRESS_STATUS_CODE       => l_BASE_PROGRESS_STATUS_CODE
                      ,X_EFF_ROLLUP_PROG_STAT_CODE       => l_EFF_ROLLUP_PROG_STAT_CODE
                      ,X_RECORD_VERSION_NUMBER           => l_rollup_rec_ver_number
                      ,x_percent_complete_id             => l_percent_complete_id
                      ,X_STRUCTURE_TYPE                  => p_structure_type
                      ,X_PROJ_ELEMENT_ID                 => l_task_id --p_task_id Bug 3876091
                      ,X_STRUCTURE_VERSION_ID            => l_structure_version_id
                      ,X_PPL_ACT_EFFORT_TO_DATE          => null
                      ,X_EQPMT_ACT_EFFORT_TO_DATE        => null
                      ,X_EQPMT_ETC_EFFORT                => null
                      ,X_OTH_ACT_COST_TO_DATE_TC         => null
                      ,X_OTH_ACT_COST_TO_DATE_FC         => null
                      ,X_OTH_ACT_COST_TO_DATE_PC         => null
                      ,X_OTH_ETC_COST_TC                 => null
                      ,X_OTH_ETC_COST_FC                 => null
                      ,X_OTH_ETC_COST_PC                 => null
                      ,X_PPL_ACT_COST_TO_DATE_TC         => null
                      ,X_PPL_ACT_COST_TO_DATE_FC         => null
                      ,X_PPL_ACT_COST_TO_DATE_PC         => null
                      ,X_PPL_ETC_COST_TC                 => null
                      ,X_PPL_ETC_COST_FC                 => null
                      ,X_PPL_ETC_COST_PC                 => null
                      ,X_EQPMT_ACT_COST_TO_DATE_TC       => null
                      ,X_EQPMT_ACT_COST_TO_DATE_FC       => null
                      ,X_EQPMT_ACT_COST_TO_DATE_PC       => null
                      ,X_EQPMT_ETC_COST_TC               => null
                      ,X_EQPMT_ETC_COST_FC               => null
                      ,X_EQPMT_ETC_COST_PC               => null
                      ,X_EARNED_VALUE                    => null
                      ,X_TASK_WT_BASIS_CODE              => null
                      ,X_SUBPRJ_PPL_ACT_EFFORT           => null
                      ,X_SUBPRJ_EQPMT_ACT_EFFORT         => null
                      ,X_SUBPRJ_PPL_ETC_EFFORT           => null
                      ,X_SUBPRJ_EQPMT_ETC_EFFORT         => null
                      ,X_SBPJ_OTH_ACT_COST_TO_DATE_TC    => null
                      ,X_SBPJ_OTH_ACT_COST_TO_DATE_FC    => null
                      ,X_SBPJ_OTH_ACT_COST_TO_DATE_PC    => null
                      ,X_SUBPRJ_PPL_ACT_COST_TC          => null
                      ,X_SUBPRJ_PPL_ACT_COST_FC          => null
                      ,X_SUBPRJ_PPL_ACT_COST_PC          => null
                      ,X_SUBPRJ_EQPMT_ACT_COST_TC        => null
                      ,X_SUBPRJ_EQPMT_ACT_COST_FC        => null
                      ,X_SUBPRJ_EQPMT_ACT_COST_PC        => null
                      ,X_SUBPRJ_OTH_ETC_COST_TC          => null
                      ,X_SUBPRJ_OTH_ETC_COST_FC          => null
                      ,X_SUBPRJ_OTH_ETC_COST_PC          => null
                      ,X_SUBPRJ_PPL_ETC_COST_TC          => null
                      ,X_SUBPRJ_PPL_ETC_COST_FC          => null
                      ,X_SUBPRJ_PPL_ETC_COST_PC          => null
                      ,X_SUBPRJ_EQPMT_ETC_COST_TC        => null
                      ,X_SUBPRJ_EQPMT_ETC_COST_FC        => null
                      ,X_SUBPRJ_EQPMT_ETC_COST_PC        => null
                      ,X_SUBPRJ_EARNED_VALUE             => null
                      ,X_CURRENT_FLAG                    => l_current_flag
                      ,X_PROJFUNC_COST_RATE_TYPE         => null
                      ,X_PROJFUNC_COST_EXCHANGE_RATE     => null
                      ,X_PROJFUNC_COST_RATE_DATE         => null
                      ,X_PROJ_COST_RATE_TYPE             => null
                      ,X_PROJ_COST_EXCHANGE_RATE         => null
                      ,X_PROJ_COST_RATE_DATE             => null
                      ,X_TXN_CURRENCY_CODE               => null
                      ,X_PROG_PA_PERIOD_NAME             => l_prog_pa_period_name
                      ,X_PROG_GL_PERIOD_NAME             => l_prog_gl_period_name
                      ,X_OTH_QUANTITY_TO_DATE            => null
                      ,X_OTH_ETC_QUANTITY                => null
                      ,X_OTH_ACT_RAWCOST_TO_DATE_TC      => null
                      ,X_OTH_ACT_RAWCOST_TO_DATE_FC      => null
                      ,X_OTH_ACT_RAWCOST_TO_DATE_PC      => null
                      ,X_OTH_ETC_RAWCOST_TC      => null
                      ,X_OTH_ETC_RAWCOST_FC      => null
                      ,X_OTH_ETC_RAWCOST_PC      => null
                      ,X_PPL_ACT_RAWCOST_TO_DATE_TC      => null
                      ,X_PPL_ACT_RAWCOST_TO_DATE_FC      => null
                      ,X_PPL_ACT_RAWCOST_TO_DATE_PC      => null
                      ,X_PPL_ETC_RAWCOST_TC      => null
                      ,X_PPL_ETC_RAWCOST_FC      => null
                      ,X_PPL_ETC_RAWCOST_PC      => null
                      ,X_EQPMT_ACT_RAWCOST_TO_DATE_TC    => null
                      ,X_EQPMT_ACT_RAWCOST_TO_DATE_FC    => null
                      ,X_EQPMT_ACT_RAWCOST_TO_DATE_PC    => null
                      ,X_EQPMT_ETC_RAWCOST_TC    => null
                      ,X_EQPMT_ETC_RAWCOST_FC    => null
                      ,X_EQPMT_ETC_RAWCOST_PC    => null
                      ,X_SP_OTH_ACT_RAWCOST_TODATE_TC    => null
                      ,X_SP_OTH_ACT_RAWCOST_TODATE_FC    => null
                      ,X_SP_OTH_ACT_RAWCOST_TODATE_PC    => null
                      ,X_SUBPRJ_PPL_ACT_RAWCOST_TC       => null
                      ,X_SUBPRJ_PPL_ACT_RAWCOST_FC       => null
                      ,X_SUBPRJ_PPL_ACT_RAWCOST_PC       => null
                      ,X_SUBPRJ_EQPMT_ACT_RAWCOST_TC     => null
                      ,X_SUBPRJ_EQPMT_ACT_RAWCOST_FC     => null
                      ,X_SUBPRJ_EQPMT_ACT_RAWCOST_PC     => null
                      ,X_SUBPRJ_OTH_ETC_RAWCOST_TC       => null
                      ,X_SUBPRJ_OTH_ETC_RAWCOST_FC       => null
                      ,X_SUBPRJ_OTH_ETC_RAWCOST_PC       => null
                      ,X_SUBPRJ_PPL_ETC_RAWCOST_TC       => null
                      ,X_SUBPRJ_PPL_ETC_RAWCOST_FC       => null
                      ,X_SUBPRJ_PPL_ETC_RAWCOST_PC       => null
                      ,X_SUBPRJ_EQPMT_ETC_RAWCOST_TC     => null
                      ,X_SUBPRJ_EQPMT_ETC_RAWCOST_FC     => null
                      ,X_SUBPRJ_EQPMT_ETC_RAWCOST_PC     => null);

                -- FPM Dev CR 6
                IF Fnd_Msg_Pub.count_msg > 0 THEN
                        RAISE  FND_API.G_EXC_ERROR;
                END IF;


        END IF;

        IF g1_debug_mode  = 'Y' THEN
             pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'INSERTED IN PPR', x_Log_Level=> 3);
        END IF;

    ELSIF l_db_action = 'UPDATE'
    THEN

        IF p_percent_complete_id IS NULL OR p_percent_complete_id = PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
        THEN
            l_percent_complete_id := PA_PROGRESS_UTILS.get_ppc_id(
                                      p_project_id        => p_project_id
                                     ,p_object_id         => l_object_id
                                     ,p_task_id           => l_task_id -- l_object_id -- Bug 3764224 Bug 3876091
                                     ,p_object_type       => l_object_type
                                     ,p_object_version_id => l_object_version_id
                                     ,p_as_of_date        => p_as_of_date
                                     ,p_structure_type    => p_structure_type
                                     );
           -- FPM Dev CR 6 Getting Record Version Number too
           BEGIN
                SELECT record_version_number into l_record_version_number
                FROM pa_percent_completes
                where percent_complete_id = l_percent_complete_id;
           END;

        ELSE
           l_percent_complete_id := p_percent_complete_id;
           l_record_version_number := p_record_version_number;
        END IF;

        IF g1_debug_mode  = 'Y' THEN
           pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'l_percent_complete_id: '||l_percent_complete_id, x_Log_Level=> 3);
        END IF;


        PA_PERCENT_COMPLETES_PKG.UPDATE_ROW(
                       p_TASK_ID                 => l_task_id
                      ,p_DATE_COMPUTED           => p_as_of_date
                      ,p_LAST_UPDATE_DATE        => SYSDATE
                      ,p_LAST_UPDATED_BY         => l_user_id
                      ,p_LAST_UPDATE_LOGIN       => l_login_id
                      ,p_COMPLETED_PERCENTAGE    => l_percent_complete
                      ,p_DESCRIPTION             => l_brief_overview
                      ,p_PM_PRODUCT_CODE         => l_pm_product_code
                      ,p_CURRENT_FLAG            => l_current_flag
                      ,p_PERCENT_COMPLETE_ID     => l_percent_complete_id
                      ,p_project_id              => p_project_id
                      ,p_OBJECT_TYPE             => l_object_type
                      ,p_OBJECT_ID               => l_object_id
                      ,p_OBJECT_VERSION_ID       => l_object_version_id
                      ,p_PROGRESS_STATUS_CODE    => l_progress_status_code
                      ,p_ACTUAL_START_DATE       => l_actual_start_date
                      ,p_ACTUAL_FINISH_DATE      => l_actual_finish_date
                      ,p_ESTIMATED_START_DATE    => l_estimated_start_date
                      ,p_ESTIMATED_FINISH_DATE   => l_estimated_finish_date
                      ,p_PUBLISHED_FLAG          => l_published_flag
                      ,p_PUBLISHED_BY_PARTY_ID   => l_published_by_party_id
                      ,p_PROGRESS_COMMENT        => l_progress_comment
                      ,p_HISTORY_FLAG            => 'N'
                      ,p_status_code             => l_task_status
                      ,p_RECORD_VERSION_NUMBER   => l_record_version_number -- FPM Dev CR 6
                      ,p_ATTRIBUTE_CATEGORY      => null
                      ,p_ATTRIBUTE1              => null
                      ,p_ATTRIBUTE2              => null
                      ,p_ATTRIBUTE3              => null
                      ,p_ATTRIBUTE4              => null
                      ,p_ATTRIBUTE5              => null
                      ,p_ATTRIBUTE6              => null
                      ,p_ATTRIBUTE7              => null
                      ,p_ATTRIBUTE8              => null
                      ,p_ATTRIBUTE9              => null
                      ,p_ATTRIBUTE10             => null
                      ,p_ATTRIBUTE11             => null
                      ,p_ATTRIBUTE12             => null
                      ,p_ATTRIBUTE13             => null
                      ,p_ATTRIBUTE14             => null
                      ,p_ATTRIBUTE15             => null
                      ,p_structure_type          => p_structure_type

        );
                -- FPM Dev CR 6
                IF Fnd_Msg_Pub.count_msg > 0 THEN
                        RAISE  FND_API.G_EXC_ERROR;
                END IF;



        --update progress rollup
        l_PROGRESS_ROLLUP_ID := PA_PROGRESS_UTILS.get_prog_rollup_id(
                                   p_project_id   => p_project_id
                                  ,p_object_id    => l_object_id
                                  ,p_object_type  => l_object_type
                                  ,p_object_version_id => l_object_version_id
                                  ,p_as_of_date   => p_as_of_date
                                  ,p_structure_type => p_structure_type
                                  ,p_structure_version_id => l_structure_version_id
                  ,p_proj_element_id => l_task_id -- Bug 3919211 l_object_id -- Bug 3764224
                                  ,x_record_version_number => l_rollup_rec_ver_number
                                );

        IF g1_debug_mode  = 'Y' THEN
             pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'l_PROGRESS_ROLLUP_ID: '||l_PROGRESS_ROLLUP_ID, x_Log_Level=> 3);
        END IF;


        PA_PROGRESS_ROLLUP_PKG.UPDATE_ROW(
                       X_PROGRESS_ROLLUP_ID              => l_PROGRESS_ROLLUP_ID
                      ,X_PROJECT_ID                      => p_project_id
                      ,X_OBJECT_ID                       => l_object_id
                      ,X_OBJECT_TYPE                     => l_object_type
                      ,X_AS_OF_DATE                      => p_as_of_date
                      ,X_OBJECT_VERSION_ID               => l_object_version_id
                      ,X_LAST_UPDATE_DATE                => SYSDATE
                      ,X_LAST_UPDATED_BY                 => l_user_id
                      ,X_PROGRESS_STATUS_CODE            => l_rollup_progress_status
                      ,X_LAST_UPDATE_LOGIN               => l_login_id
                      ,X_INCREMENTAL_WORK_QTY            => l_INCREMENTAL_WORK_QTY
                      ,X_CUMULATIVE_WORK_QTY             => l_CUMULATIVE_WORK_QTY
                      ,X_BASE_PERCENT_COMPLETE           => l_BASE_PERCENT_COMPLETE
                      ,X_EFF_ROLLUP_PERCENT_COMP         => l_EFF_ROLLUP_PERCENT_COMP
                      ,X_COMPLETED_PERCENTAGE            => l_percent_complete
                      ,X_ESTIMATED_START_DATE            => l_estimated_start_date
                      ,X_ESTIMATED_FINISH_DATE           => l_estimated_finish_date
                      ,X_ACTUAL_START_DATE               => l_actual_start_date
                      ,X_ACTUAL_FINISH_DATE              => l_actual_finish_date
                      ,X_EST_REMAINING_EFFORT            => null
                      ,X_BASE_PERCENT_COMP_DERIV_CODE    => l_BASE_PERCENT_COMP_DERIV_CODE
                      ,X_BASE_PROGRESS_STATUS_CODE       => l_BASE_PROGRESS_STATUS_CODE
                      ,X_EFF_ROLLUP_PROG_STAT_CODE       => l_EFF_ROLLUP_PROG_STAT_CODE
                      ,X_RECORD_VERSION_NUMBER           => l_rollup_rec_ver_number
                      ,x_percent_complete_id             => l_percent_complete_id
                      ,X_STRUCTURE_TYPE                  => p_structure_type
                      ,X_PROJ_ELEMENT_ID                 => l_task_id --p_task_id Bug 3876091
                      ,X_STRUCTURE_VERSION_ID            => l_structure_version_id
                      ,X_PPL_ACT_EFFORT_TO_DATE          => null
                      ,X_EQPMT_ACT_EFFORT_TO_DATE        => null
                      ,X_EQPMT_ETC_EFFORT                => null
                      ,X_OTH_ACT_COST_TO_DATE_TC         => null
                      ,X_OTH_ACT_COST_TO_DATE_FC         => null
                      ,X_OTH_ACT_COST_TO_DATE_PC         => null
                      ,X_OTH_ETC_COST_TC                 => null
                      ,X_OTH_ETC_COST_FC                 => null
                      ,X_OTH_ETC_COST_PC                 => null
                      ,X_PPL_ACT_COST_TO_DATE_TC         => null
                      ,X_PPL_ACT_COST_TO_DATE_FC         => null
                      ,X_PPL_ACT_COST_TO_DATE_PC         => null
                      ,X_PPL_ETC_COST_TC                 => null
                      ,X_PPL_ETC_COST_FC                 => null
                      ,X_PPL_ETC_COST_PC                 => null
                      ,X_EQPMT_ACT_COST_TO_DATE_TC       => null
                      ,X_EQPMT_ACT_COST_TO_DATE_FC       => null
                      ,X_EQPMT_ACT_COST_TO_DATE_PC       => null
                      ,X_EQPMT_ETC_COST_TC               => null
                      ,X_EQPMT_ETC_COST_FC               => null
                      ,X_EQPMT_ETC_COST_PC               => null
                      ,X_EARNED_VALUE                    => null
                      ,X_TASK_WT_BASIS_CODE              => null
                      ,X_SUBPRJ_PPL_ACT_EFFORT           => null
                      ,X_SUBPRJ_EQPMT_ACT_EFFORT         => null
                      ,X_SUBPRJ_PPL_ETC_EFFORT           => null
                      ,X_SUBPRJ_EQPMT_ETC_EFFORT         => null
                      ,X_SBPJ_OTH_ACT_COST_TO_DATE_TC    => null
                      ,X_SBPJ_OTH_ACT_COST_TO_DATE_FC    => null
                      ,X_SBPJ_OTH_ACT_COST_TO_DATE_PC    => null
                      ,X_SUBPRJ_PPL_ACT_COST_TC          => null
                      ,X_SUBPRJ_PPL_ACT_COST_FC          => null
                      ,X_SUBPRJ_PPL_ACT_COST_PC          => null
                      ,X_SUBPRJ_EQPMT_ACT_COST_TC        => null
                      ,X_SUBPRJ_EQPMT_ACT_COST_FC        => null
                      ,X_SUBPRJ_EQPMT_ACT_COST_PC        => null
                      ,X_SUBPRJ_OTH_ETC_COST_TC          => null
                      ,X_SUBPRJ_OTH_ETC_COST_FC          => null
                      ,X_SUBPRJ_OTH_ETC_COST_PC          => null
                      ,X_SUBPRJ_PPL_ETC_COST_TC          => null
                      ,X_SUBPRJ_PPL_ETC_COST_FC          => null
                      ,X_SUBPRJ_PPL_ETC_COST_PC          => null
                      ,X_SUBPRJ_EQPMT_ETC_COST_TC        => null
                      ,X_SUBPRJ_EQPMT_ETC_COST_FC        => null
                      ,X_SUBPRJ_EQPMT_ETC_COST_PC        => null
                      ,X_SUBPRJ_EARNED_VALUE             => null
                      ,X_CURRENT_FLAG                    => l_current_flag
                      ,X_PROJFUNC_COST_RATE_TYPE         => null
                      ,X_PROJFUNC_COST_EXCHANGE_RATE     => null
                      ,X_PROJFUNC_COST_RATE_DATE         => null
                      ,X_PROJ_COST_RATE_TYPE             => null
                      ,X_PROJ_COST_EXCHANGE_RATE         => null
                      ,X_PROJ_COST_RATE_DATE             => null
                      ,X_TXN_CURRENCY_CODE               => null
                      ,X_PROG_PA_PERIOD_NAME             => l_prog_pa_period_name
                      ,X_PROG_GL_PERIOD_NAME             => l_prog_gl_period_name
                      ,X_OTH_QUANTITY_TO_DATE            => null
                      ,X_OTH_ETC_QUANTITY                => null
                      ,X_OTH_ACT_RAWCOST_TO_DATE_TC      => null
                      ,X_OTH_ACT_RAWCOST_TO_DATE_FC      => null
                      ,X_OTH_ACT_RAWCOST_TO_DATE_PC      => null
                      ,X_OTH_ETC_RAWCOST_TC      => null
                      ,X_OTH_ETC_RAWCOST_FC      => null
                      ,X_OTH_ETC_RAWCOST_PC      => null
                      ,X_PPL_ACT_RAWCOST_TO_DATE_TC      => null
                      ,X_PPL_ACT_RAWCOST_TO_DATE_FC      => null
                      ,X_PPL_ACT_RAWCOST_TO_DATE_PC      => null
                      ,X_PPL_ETC_RAWCOST_TC      => null
                      ,X_PPL_ETC_RAWCOST_FC      => null
                      ,X_PPL_ETC_RAWCOST_PC      => null
                      ,X_EQPMT_ACT_RAWCOST_TO_DATE_TC    => null
                      ,X_EQPMT_ACT_RAWCOST_TO_DATE_FC    => null
                      ,X_EQPMT_ACT_RAWCOST_TO_DATE_PC    => null
                      ,X_EQPMT_ETC_RAWCOST_TC    => null
                      ,X_EQPMT_ETC_RAWCOST_FC    => null
                      ,X_EQPMT_ETC_RAWCOST_PC    => null
                      ,X_SP_OTH_ACT_RAWCOST_TODATE_TC    => null
                      ,X_SP_OTH_ACT_RAWCOST_TODATE_FC    => null
                      ,X_SP_OTH_ACT_RAWCOST_TODATE_PC    => null
                      ,X_SUBPRJ_PPL_ACT_RAWCOST_TC       => null
                      ,X_SUBPRJ_PPL_ACT_RAWCOST_FC       => null
                      ,X_SUBPRJ_PPL_ACT_RAWCOST_PC       => null
                      ,X_SUBPRJ_EQPMT_ACT_RAWCOST_TC     => null
                      ,X_SUBPRJ_EQPMT_ACT_RAWCOST_FC     => null
                      ,X_SUBPRJ_EQPMT_ACT_RAWCOST_PC     => null
                      ,X_SUBPRJ_OTH_ETC_RAWCOST_TC       => null
                      ,X_SUBPRJ_OTH_ETC_RAWCOST_FC       => null
                      ,X_SUBPRJ_OTH_ETC_RAWCOST_PC       => null
                      ,X_SUBPRJ_PPL_ETC_RAWCOST_TC       => null
                      ,X_SUBPRJ_PPL_ETC_RAWCOST_FC       => null
                      ,X_SUBPRJ_PPL_ETC_RAWCOST_PC       => null
                      ,X_SUBPRJ_EQPMT_ETC_RAWCOST_TC     => null
                      ,X_SUBPRJ_EQPMT_ETC_RAWCOST_FC     => null
                      ,X_SUBPRJ_EQPMT_ETC_RAWCOST_PC     => null
        );
                -- FPM Dev CR 6
                IF Fnd_Msg_Pub.count_msg > 0 THEN
                        RAISE  FND_API.G_EXC_ERROR;
                END IF;

        IF g1_debug_mode  = 'Y' THEN
             pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'COMPLETED ', x_Log_Level=> 3);
        END IF;

    END IF;  --<l_db_action>


    IF g1_debug_mode  = 'Y' THEN
           pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS', x_Msg => 'EXITING ', x_Log_Level=> 3);
    END IF;

EXCEPTION
 when FND_API.G_EXC_ERROR then
      x_return_status := FND_API.G_RET_STS_ERROR;
      l_msg_count := Fnd_Msg_Pub.count_msg;

      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_FINANCIAL_TASK_PROGRESS;
      end if;

     IF l_msg_count = 1 AND x_msg_data IS NULL
      THEN
          Pa_Interface_Utils_Pub.get_messages
              ( p_encoded        => Fnd_Api.G_TRUE
              , p_msg_index      => 1
              , p_msg_count      => l_msg_count
              , p_msg_data       => l_msg_data
              , p_data           => l_data
              , p_msg_index_out  => l_msg_index_out);
          x_msg_data := l_data;
          x_msg_count := l_msg_count;
     ELSE
          x_msg_count := l_msg_count;
     END IF;

     when FND_API.G_EXC_UNEXPECTED_ERROR then
       x_return_status := Fnd_Api.G_RET_STS_UNEXP_ERROR;
       x_msg_count     := 1;
       x_msg_data      := SQLERRM;

      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_FINANCIAL_TASK_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_FINANCIAL_TASK_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
     x_return_status := Fnd_Api.G_RET_STS_UNEXP_ERROR;
     x_msg_count     := 1;
     x_msg_data      := SUBSTRB(SQLERRM,1,120);
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_DELIVERABLE_PROGRESS;
      end if;

      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_FINANCIAL_TASK_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;


END UPDATE_FINANCIAL_TASK_PROGRESS;

-- Progress Management Changes. Bug # 3420093.

PROCEDURE re_rollup_progress(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER
 ,p_structure_version_id        IN      NUMBER
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)

IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'RE_ROLLUP_PROGRESS';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_msg_code                      VARCHAR2(12000);


-- Bug 3693757 : This cursor is wrong as it may return wrong task_wt_basis_code of some other projects' task

cursor l_ve_cur(p_project_id NUMBER, p_structure_version_id NUMBER) is
select as_of_date, task_wt_basis_code
from pa_progress_rollup
where project_id = p_project_id --  Bug 3693757
and structure_version_id = p_structure_version_id --  Bug 3693757
and object_type = 'PA_STRUCTURES' --  Bug 3693757
;
/* Bug 3693757
and as_of_date = (select max(as_of_date)
                   from pa_progress_rollup
                   where project_id = p_project_id
                   and structure_version_id = p_structure_version_id
                   and current_flag = 'Y');
           */
--bug # 3792713 Satish start
   l_published_structure           VARCHAR2(1)                                       ;

   CURSOR cur_check_published_version(c_structure_version_id number, c_project_id number)
   IS
   SELECT decode(status.project_system_status_code, 'STRUCTURE_PUBLISHED', 'Y', 'N')
   FROM pa_proj_elem_ver_structure str
   , pa_project_statuses status
   where str.element_version_id = c_structure_version_id
   AND str.project_id = c_project_id
   AND str.status_code = status.project_status_code;

--bug # 3792713 Satish end

cursor l_vd_cur(p_project_id NUMBER, p_structure_version_id NUMBER) is
select as_of_date, task_wt_basis_code
from pa_progress_rollup
where project_id = p_project_id
and structure_version_id = p_structure_version_id;

--added by maansari for
    cursor cur_task_weight IS
    select pppa.task_weight_basis_code
    from pa_proj_progress_attr pppa
    where pppa.project_id = p_project_id
    and pppa.structure_type = 'WORKPLAN';

l_as_of_date            DATE;
l_task_wt_basis_code    VARCHAR2(30);
l_base_struct_ver_id    NUMBER;

BEGIN
        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.RE_ROLLUP_PROGRESS');
        END IF;

        IF (p_debug_mode = 'Y') THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.debug('PA_PROGRESS_PUB.RE_ROLLUP_PROGRESS');
                END IF;
        END IF;
        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint RE_ROLLUP_PROGRESS;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        -- Get as_of_date and task_wt_basis_code for the project.

/* replacing with cur_task_weight
        if (PA_WORKPLAN_ATTR_UTILS.CHECK_WP_VERSIONING_ENABLED(p_project_id) = 'Y') then

            open l_ve_cur(p_project_id, p_structure_version_id);
            fetch l_ve_cur into l_as_of_date, l_task_wt_basis_code;
            close l_ve_cur;
        else

            open l_vd_cur(p_project_id, p_structure_version_id);
            fetch l_vd_cur into l_as_of_date, l_task_wt_basis_code;
            close l_vd_cur;
        end if;
*/

    --bug # 3792713 Satish start
    OPEN cur_check_published_version(p_structure_version_id, p_project_id);
    FETCH cur_check_published_version INTO l_published_structure;
    CLOSE cur_check_published_version;

    IF l_published_structure = 'Y'
    THEN
    return;
    ELSE
        open l_ve_cur(p_project_id, p_structure_version_id);
        fetch l_ve_cur into l_as_of_date, l_task_wt_basis_code;
        close l_ve_cur;
    END IF;
    --bug # 3792713 Satish end



        --Added by rtarway for BUG # 3616810, check if as_of_date is null
 if (l_as_of_date IS NOT NULL ) then
     -- Call Rollup API for the whole structure.

      -- Bug 3764224 : calling it here as this procedure gets called two times in publishing flow. One for
      -- Publsihed version and one for working version
      -- Bug 3693757 : 13-Jul-04 PJI tmp1 table shd be populated so that rollup API can access actuals values in RE_ROLLUP_PROGRESS
      BEGIN
       l_base_struct_ver_id := pa_project_structure_utils.get_baseline_struct_ver(p_project_id);
       pa_progress_pub.populate_pji_tab_for_plan(
                        p_init_msg_list         => FND_API.G_FALSE,
                        p_project_id            => p_project_id,
                        p_structure_version_id  => p_structure_version_id,
                        p_baselined_str_ver_id  => l_base_struct_ver_id,
                        p_structure_type        => 'WORKPLAN',
                        x_return_status         => x_return_status,
                        x_msg_count             => x_msg_count,
                        x_msg_data              => x_msg_data
                        );

        EXCEPTION
          WHEN OTHERS THEN
             fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                                     p_procedure_name => 'RE_ROLLUP_PROGRESS',
                                     p_error_text     => SUBSTRB('PA_PROGRESS_PUB.populate_pji_tab_for_plan:'||SQLERRM,1,240));
        RAISE FND_API.G_EXC_ERROR;
        END;


           IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 Raise FND_API.G_EXC_ERROR;
            END IF;


                OPEN cur_task_weight;
                FETCH cur_task_weight INTO l_task_wt_basis_code;
                CLOSE cur_task_weight;

                PA_PROGRESS_PUB.ROLLUP_PROGRESS_PVT(
                 p_init_msg_list             => p_init_msg_list
                ,p_commit                    => p_commit
                ,p_validate_only             => p_validate_only
                --Added by rtarway for BUG 3696263
                ,p_calling_module       => p_calling_module
                ,p_project_id                => p_project_id
                ,p_structure_version_id      => p_structure_version_id
                ,p_as_of_date                => l_as_of_date
                ,p_wp_rollup_method          => l_task_wt_basis_code
                ,p_rollup_entire_wbs         => 'Y'
                ,x_return_status             => l_return_status
                ,x_msg_count                 => l_msg_count
                ,x_msg_data                  => l_msg_data);

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                     p_msg_name       => l_msg_data);
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
        END IF;
  end if;

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;
EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to RE_ROLLUP_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to RE_ROLLUP_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'RE_ROLLUP_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to RE_ROLLUP_PROGRESS;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'RE_ROLLUP_PROGRESS',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END re_rollup_progress;

-- Bug 3633293 : Added populate_bulk_pji_tab_for_plan
PROCEDURE populate_bulk_pji_tab_for_plan(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_person_id                           NUMBER
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) AS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'populate_pji_tab_for_plan';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_baseline_version_id           NUMBER;

   CURSOR c_get_distinct_str_ver_id IS
   SELECT distinct asgn.project_id project_id, asgn.structure_version_id structure_version_id
   FROM   pa_task_asgmts_v asgn
        , pa_proj_elem_ver_structure str
        , pa_proj_progress_attr prog
        , pa_proj_structure_types pstype
   WHERE asgn.person_id = p_person_id
   AND asgn.structure_version_id = str.element_version_id
   AND asgn.project_id = str.project_id
   AND str.latest_eff_published_flag = 'Y'
   AND str.proj_element_id = pstype.proj_element_id
   AND pstype.structure_type_id = 1
   AND asgn.project_id = prog.project_id
   AND prog.structure_type = 'WORKPLAN'
   AND prog.allow_collab_prog_entry = 'Y'
   UNION
   SELECT distinct elem.project_id project_id, str.element_version_id structure_version_id
   FROM   pa_proj_elements elem
        , pa_proj_elem_ver_structure str
        , pa_proj_progress_attr prog
        , pa_proj_structure_types pstype
   WHERE elem.manager_person_id = p_person_id
   AND elem.object_type = 'PA_TASKS'
   AND elem.project_id = str.project_id
   AND str.latest_eff_published_flag = 'Y'
   AND str.proj_element_id = pstype.proj_element_id
   AND pstype.structure_type_id = 1
   AND elem.project_id = prog.project_id
   AND prog.structure_type = 'WORKPLAN'
   AND prog.allow_collab_prog_entry = 'Y';
BEGIN

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.POPULATE_BULK_PJI_TAB_FOR_PLAN');
        END IF;

        IF (p_debug_mode = 'Y') THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.debug('PA_PROGRESS_PUB.POPULATE_BULK_PJI_TAB_FOR_PLAN');
                END IF;
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint populate_bulk_pji_tab_for_plan;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        FOR rec IN c_get_distinct_str_ver_id LOOP
                l_baseline_version_id := null;
                l_baseline_version_id :=  PA_PROJECT_STRUCTURE_UTILS.Get_Baseline_Struct_Ver(rec.project_id);
                IF l_baseline_version_id = -1 THEN
                        l_baseline_version_id := null;
                END IF;


        -- 4392189 : Instead of populate_workplan_data call, POPULATE_PJI_TAB_FOR_PLAN
        PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN(
            p_calling_module    => p_calling_module
            ,p_project_id           => rec.project_id
            ,p_structure_version_id => rec.structure_version_id
            ,p_baselined_str_ver_id => l_baseline_version_id
            ,p_program_rollup_flag  => 'Y'
            ,p_calling_context  => 'ROLLUP'
            ,x_return_status        => l_return_status
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            );
        /*
                PJI_FM_XBS_ACCUM_UTILS.populate_workplan_data (
            p_project_id           => rec.project_id,
                        p_struct_ver_id        => rec.structure_version_id,
                        p_base_struct_ver_id   => l_baseline_version_id,
                        x_return_status        => l_return_status,
                        x_msg_code             => l_msg_data );
        */
        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_msg_data := l_msg_data;
            x_return_status := 'E';
            x_msg_count := l_msg_count;
            RAISE  FND_API.G_EXC_ERROR;
        END IF;
        END LOOP;


EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to populate_bulk_pji_tab_for_plan;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to populate_bulk_pji_tab_for_plan;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'POPULATE_BULK_PJI_TAB_FOR_PLAN',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to populate_bulk_pji_tab_for_plan;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'POPULATE_BULK_PJI_TAB_FOR_PLAN',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END populate_bulk_pji_tab_for_plan;


-- Bug 3614828 : Created this procedure for partial rollup.
-- Start of comments
--      API name        : ASGN_DLV_TO_TASK_ROLLUP_PVT
--      Type            : Private
--      Pre-reqs        : None.
--      Purpose         : This API is intdended to be called for Assignment, Deliverables in Task Progress Details page when user clicks Recalculate button
--                      : This does partial rollup of working progress records
--      History         : 15-JUNE-04  amksingh   Rewritten For FPM Development Bug 3614828
--                        08-SEP-2004 Rakesh Raghavan Bug # 3879910. Replaced code with call to API:
--                                                    PA_PROGRESS_PVT.ASGN_DLV_TO_TASK_ROLLUP_PVT().
-- End of comments

PROCEDURE ASGN_DLV_TO_TASK_ROLLUP_PVT(
 p_api_version                          IN      NUMBER          :=1.0
,p_init_msg_list                        IN      VARCHAR2        :=FND_API.G_FALSE -- Since it is a private API so false
,p_commit                               IN      VARCHAR2        :=FND_API.G_FALSE
,p_validate_only                        IN      VARCHAR2        :=FND_API.G_TRUE
,p_validation_level                     IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
,p_calling_module                       IN      VARCHAR2        :='SELF_SERVICE'
,p_debug_mode                           IN      VARCHAR2        :='N'
,p_max_msg_count                        IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_project_id                           IN      NUMBER
,p_task_id                              IN      NUMBER
,p_task_version_id                      IN      NUMBER
,p_as_of_date                           IN      DATE
,p_structure_version_id                 IN      NUMBER
,p_wp_rollup_method                     IN      VARCHAR2        := 'COST'
,x_return_status                        OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
,x_msg_count                            OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
,x_msg_data                             OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
 IS

   l_api_name                   CONSTANT VARCHAR(30) := 'ASGN_DLV_TO_TASK_ROLLUP_PVT'                           ;
   l_api_version                CONSTANT NUMBER      := 1.0                                                     ;
   l_return_status              VARCHAR2(1)                                                                     ;
   l_msg_count                  NUMBER                                                                          ;
   l_msg_data                   VARCHAR2(250)                                                                   ;
   l_data                       VARCHAR2(250)                                                                   ;
   l_msg_index_out              NUMBER                                                                          ;
   l_error_msg_code             VARCHAR2(250)                                                                   ;
   l_user_id                    NUMBER := FND_GLOBAL.USER_ID                                                    ;
   l_login_id                   NUMBER := FND_GLOBAL.LOGIN_ID                                                   ;
   g1_debug_mode                VARCHAR2(1)                                                                     ;

BEGIN

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT');
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_init_msg_list='||p_init_msg_list, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_commit='||p_commit, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_validate_only='||p_validate_only, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_validation_level='||p_validation_level, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_calling_module='||p_calling_module, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_debug_mode='||p_debug_mode, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_max_msg_count='||p_max_msg_count, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_task_id='||p_task_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_task_version_id='||p_task_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_structure_version_id='||p_structure_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'p_wp_rollup_method='||p_wp_rollup_method, x_Log_Level=> 3);
        END IF;

        IF p_structure_version_id IS NULL THEN
                return;
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint ASGN_DLV_TO_TASK_ROLLUP_PVT;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        -- Bug # 3879910. Call corresponding API in package: PA_PROGRESS_PVT.

    PA_PROGRESS_PVT.ASGN_DLV_TO_TASK_ROLLUP_PVT(
    p_api_version        => p_api_version
    ,p_init_msg_list     => p_init_msg_list
    ,p_commit        => p_commit
    ,p_validate_only     => p_validate_only
    ,p_validation_level  => p_validation_level
    ,p_calling_module    => p_calling_module
    ,p_debug_mode        => p_debug_mode
    ,p_max_msg_count     => p_max_msg_count
    ,p_project_id        => p_project_id
    ,p_task_id       => p_task_id
    ,p_task_version_id   => p_task_version_id
    ,p_as_of_date        => p_as_of_date
    ,p_structure_version_id  => p_structure_version_id
    ,p_wp_rollup_method  => p_wp_rollup_method
    ,x_return_status     => l_return_status
    ,x_msg_count         => l_msg_count
    ,x_msg_data      => l_msg_data);

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;


        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Msg => 'PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT END', x_Log_Level=> 3);
        END IF;

EXCEPTION
        WHEN FND_API.G_EXC_ERROR THEN
                IF p_commit = FND_API.G_TRUE THEN
                        rollback to ASGN_DLV_TO_TASK_ROLLUP_PVT;
                END IF;
                x_return_status := FND_API.G_RET_STS_ERROR;
        WHEN FND_API.G_EXC_UNEXPECTED_ERROR THEN
                IF p_commit = FND_API.G_TRUE THEN
                        rollback to ASGN_DLV_TO_TASK_ROLLUP_PVT;
                END IF;
                x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'ASGN_DLV_TO_TASK_ROLLUP_PVT',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
        WHEN OTHERS THEN
                IF p_commit = FND_API.G_TRUE THEN
                        rollback to ASGN_DLV_TO_TASK_ROLLUP_PVT;
                END IF;
                x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'ASGN_DLV_TO_TASK_ROLLUP_PVT',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
                raise;
END ASGN_DLV_TO_TASK_ROLLUP_PVT;

-- Start of comments
--      API name        : COPY_PROGRESS_ACT_ETC
--      Type            : Private
--      Pre-reqs        : None.
--      Purpose         : This API is intdended to be used for copying actuals and etc from one structure
--                        version to another. If there is no progress records exists then the api pass null
--                        for act and etc.
--      History         : 30-JUNE-04  Rakesh Raghavan  Rewritten For FPM Development Bug
--                        28-JUL-2004 Rakesh Raghavan  Added parameter: p_last_pub_str_version_id
--                                                     and modified API.
-- End of comments

PROCEDURE COPY_PROGRESS_ACT_ETC(
 p_api_version              IN      NUMBER          :=1.0
,p_init_msg_list            IN      VARCHAR2        :=FND_API.G_FALSE -- FALSE for private API.
,p_commit                   IN      VARCHAR2        :=FND_API.G_FALSE
,p_validate_only            IN      VARCHAR2        :=FND_API.G_TRUE
,p_validation_level         IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
,p_calling_module           IN      VARCHAR2        :='SELF_SERVICE'
,p_debug_mode               IN      VARCHAR2        :='N'
,p_max_msg_count            IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
,p_project_id               IN      NUMBER
,p_src_str_ver_id           IN      NUMBER
,p_dst_str_ver_id           IN      NUMBER
,p_pub_wp_with_prog_flag    IN      VARCHAR2        := 'Y'
,p_calling_context          IN      VARCHAR2        := 'PUBLISH'
,p_last_pub_str_version_id  IN      NUMBER          := NULL
,p_copy_actuals_flag        IN      VARCHAR2        := 'Y'
,p_copy_ETC_flag            IN      VARCHAR2        := 'Y'
,p_pji_conc_prog_context    IN      VARCHAR2        := 'N' -- Fix for Bug # 3996159.
,x_return_status            OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
,x_msg_count                OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
,x_msg_data                 OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS

   l_api_name                   CONSTANT VARCHAR(30) := 'COPY_PROGRESS_ACT_ETC';
   l_api_version                CONSTANT NUMBER      := 1.0;
   l_return_status              VARCHAR2(1);
   l_msg_count                  NUMBER;
   l_msg_data                   VARCHAR2(250);
   l_data                       VARCHAR2(250);
   l_msg_index_out              NUMBER;
   l_error_msg_code             VARCHAR2(250);
   l_calling_context            VARCHAR2(15);

-- This API will be called in three contexts.
-- 1. From Publish structure API where it needs to get the progress data from published wp version and push to PJI API
-- for the new workplan version which is going to be published.
-- 2. PJI team sometimes truncates the data for a version. In thi scase they will call this API to push the progress data
-- again back to PJI tables. Not sure about this context as how PJI will call. Majid is following up on this.
-- 3. B7 F Team will pass the context as RBS. They need to resummarize the data when in working pw version RBS is made from
-- null to not null. In this case only ETC needs to be pushed as PJi will derive actuals as planned-etc.

        CURSOR cur_working_wp_progress is
        select *
        from pa_progress_rollup ppr
        where ppr.project_id = p_project_id
        and ppr.structure_version_id = p_src_str_ver_id
        and ppr.object_type = 'PA_ASSIGNMENTS'
        and structure_type = 'WORKPLAN'
        and current_flag = 'Y';


        CURSOR cur_lp_progress is
        select *
        from pa_progress_rollup ppr
        where ppr.project_id = p_project_id
        and ppr.structure_version_id is null
        and ppr.object_type = 'PA_ASSIGNMENTS'
        and structure_type = 'WORKPLAN'
        and current_flag = 'Y';
        -- Using current_flag = 'Y' may push data of working progress too. Is it fine?

    l_working_prog     VARCHAR2(1) := 'N';

        l_ppr_rec       pa_progress_rollup%rowtype;

    -- Bug 3764224 : Changed the cusrsor def'n
    cursor cur_ptav (p_object_id NUMBER, p_task_id NUMBER) is
    select ptav2.resource_list_member_id, ptav2.txn_currency_code
           ,ptav2.resource_class_code, ptav2.rate_based_flag
           ,ptav2.rbs_element_id,planned_quantity,
            planned_bur_cost_txn_cur,
            planned_bur_cost_projfunc,
            planned_bur_cost_proj_cur,
            planned_raw_cost_txn_cur,
            planned_raw_cost_projfunc,
            planned_raw_cost_proj_cur
    from pa_task_asgmts_v ptav2
    where ptav2.resource_list_member_id = p_object_id
    and ptav2.structure_version_id = p_dst_str_ver_id
    and ptav2.task_id = p_task_id
    ;

    l_ptav_rec cur_ptav%rowtype;

l_act_TXN_COST_this_period      NUMBER := 0;
l_act_PRJ_COST_this_period      NUMBER := 0;
l_act_POU_COST_this_period      NUMBER := 0;
l_act_effort_this_period        NUMBER := 0;
l_act_TXN_RAWCOST_this_period   NUMBER := 0;
l_act_PRJ_RAWCOST_this_period   NUMBER := 0;
l_act_POU_RAWCOST_this_period   NUMBER := 0;
l_etc_TXN_COST_this_period      NUMBER := 0;
l_etc_PRJ_COST_this_period      NUMBER := 0;
l_etc_POU_COST_this_period      NUMBER := 0;
l_etc_TXN_RAWCOST_this_period   NUMBER := 0;
l_etc_PRJ_RAWCOST_this_period   NUMBER := 0;
l_etc_POU_RAWCOST_this_period   NUMBER := 0;
l_etc_effort_this_period        NUMBER := 0;

l_new_object_id               NUMBER;
l_actuals_pushed              VARCHAR2(1) :='N';
 l_msg_code                   VARCHAR2(32);
 l_src_str_ver_publsihed     VARCHAR2(1);
 l_resource_class_code       pa_task_assignments_v.resource_class_code%TYPE;
 L_TXN_CURRENCY_CODE         pa_task_assignments_v.txn_currency_code%TYPE;
 L_RATE_BASED_FLAG           varchar2(1);
 L_RBS_ELEMENT_ID            number;
 l_prog_mode                 varchar2(1);

cursor cur_task_assgn(p_project_id NUMBER, p_object_version_id NUMBER) is
select count(*)
from pa_progress_rollup ppr
where ppr.project_id = p_project_id
and ppr.object_version_id = p_object_version_id
and ppr.object_type = 'PA_ASSIGNMENTS'
and ppr.structure_version_id is null
and ppr.structure_type = 'WORKPLAN'
and ppr.current_flag = 'Y';

L_TASK_ASSGN  number;

/*  bug 4871809 this cursor is not used
 --bug 3968791
CURSOR cur_select_all_assgns
IS
   SELECT ptav.*
   FROM pa_progress_rollup ppr2
       --,pa_task_assignments_v ptav  --bug 3967374
       ,pa_task_asgmts_v ptav
   WHERE ppr2.project_id=p_project_id
     AND ptav.project_id=p_project_id
     AND ppr2.object_id = ptav.task_id
     AND (ptav.resource_list_member_id ) not in (
                SELECT object_id
                FROM pa_progress_rollup ppr
                where ppr.project_id=p_project_id
                  and ppr.structure_version_id is null
                  and ppr.current_flag = 'Y'
                  and ppr.object_type = 'PA_ASSIGNMENTS'
                  and ppr.structure_type = 'WORKPLAN'
                  and ppr.proj_element_id = ppr2.proj_element_id
                  )
     AND ptav.structure_version_id = p_dst_str_ver_id
     and ppr2.structure_version_id is null
     and ppr2.current_flag = 'Y'
     and ppr2.structure_type = 'WORKPLAN'
     ;*/
--end bug 3968791
   Cursor cur_Summerized_Actuals IS
    Select count(1)
    FROM  PA_Proj_Elem_Ver_Structure ppevs,
          PA_Proj_Elements        ppe,
          PA_Proj_Structure_Types ppst,
          PA_Structure_types      pst
    WHERE ppevs.Project_ID        = P_Project_ID
    AND   ppevs.status_code       = 'STRUCTURE_PUBLISHED'
    AND   ppevs.proj_element_id   = ppe.Proj_Element_ID
    AND   ppe.Project_ID          = ppevs.Project_ID
    AND   ppe.Proj_Element_ID     = ppst.Proj_Element_ID
    AND   ppst.Structure_Type_ID  = pst.Structure_Type_ID
    AND   pst.structure_type      = 'WORKPLAN';

 l_count   number;
 l_index   number;
 l_plan_type_id         number;
 l_plan_version_id      number;
 l_period_type          varchar2(15);
 l_org_id               number;
 l_proj_curr_code       varchar2(15);
 l_proj_func_curr_code  varchar2(15);
   cursor proj_info is
    select org_id, project_currency_code, projfunc_currency_code
   from pa_projects_all
   where project_id = p_project_id;

 ETC_PROJECT_ID                           PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PROJECT_ORG_ID                       PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PROJECT_ELEMENT_ID                   PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_STRUCT_VER_ID                        PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PERIOD_NAME                          PA_PLSQL_DATATYPES.Char80TabTyp;
 ETC_CALENDAR_TYPE                        PA_PLSQL_DATATYPES.Char1TabTyp;
 ETC_START_DATE                           PA_PLSQL_DATATYPES.DateTabTyp;
 ETC_END_DATE                             PA_PLSQL_DATATYPES.DateTabTyp;
 ETC_RBS_ELEMENT_ID                       PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_RBS_VERSION_ID                       PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PLAN_VERSION_ID                      PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_PLAN_TYPE_ID                         PA_PLSQL_DATATYPES.Num15TabTyp;
 ETC_WP_VERSION_FLAG                      PA_PLSQL_DATATYPES.Char1TabTyp;
 ETC_ROLLUP_TYPE                          PA_PLSQL_DATATYPES.Char1TabTyp;
 ETC_PRJ_CURRENCY_CODE                    PA_PLSQL_DATATYPES.Char30TabTyp;
 ETC_PFC_CURRENCY_CODE                    PA_PLSQL_DATATYPES.Char30TabTyp;
 ETC_TXN_CURRENCY_CODE                    PA_PLSQL_DATATYPES.Char30TabTyp;
 ETC_QUANTITY                             PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_TXN_BURDENED_COST                    PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_PRJ_BURDENED_COST                    PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_PFC_BURDENED_COST                    PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_TXN_RAW_COST                         PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_PRJ_RAW_COST                         PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_PFC_RAW_COST                         PA_PLSQL_DATATYPES.AmtTabTyp;
 ETC_RESOURCE_CLASS_CODE                  PA_PLSQL_DATATYPES.Char30TabTyp;
 ETC_RATE_BASED_FLAG                      PA_PLSQL_DATATYPES.Char1TabTyp;

BEGIN

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC');
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint COPY_PROGRESS_ACT_ETC;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC Passed Parameters', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_src_str_ver_id='||p_src_str_ver_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_dst_str_ver_id='||p_dst_str_ver_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_pub_wp_with_prog_flag='||p_pub_wp_with_prog_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_calling_context='||p_calling_context, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_last_pub_str_version_id='||p_last_pub_str_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_copy_actuals_flag='||p_copy_actuals_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_copy_ETC_flag='||p_copy_ETC_flag, x_Log_Level=> 3);
        END IF;


        x_return_status := FND_API.G_RET_STS_SUCCESS;
        l_calling_context := p_calling_context;
        -- code to make sure don't execute this procedure for first time publish structure
        if (l_calling_context = 'PUBLISH') then
          OPEN cur_Summerized_Actuals;
          FETCH cur_Summerized_Actuals INTO l_count;
          close cur_Summerized_Actuals;
          if l_count = 1 then
            l_calling_context := 'FIRST_PUBLISH';
          end if;
        end if;

        -- 3627315 Issue 8, We should not open the cursor cur_working_wp_progress unneccesarily for PUBLSIH context
        -- as in this context there will never be working wp version progress
        -- For PJI context, it should first check whthere the source str version id is publihed or not.


        l_src_str_ver_publsihed := PA_PROJECT_STRUCTURE_UTILS.Check_Struc_Ver_Published(p_project_id, p_src_str_ver_id);


        open proj_info;
        fetch proj_info into l_org_id,l_proj_curr_code,l_proj_func_curr_code;
        close proj_info;
        l_period_type := PA_FIN_PLAN_UTILS.Get_wp_bv_time_phase(p_dst_str_ver_id);
        l_plan_type_id := Pa_Fp_wp_gen_amt_utils.get_wp_ptype_id(p_project_id => p_project_id);
        l_plan_version_id := Pa_Fp_wp_gen_amt_utils.get_wp_version_id(
                                                      p_project_id => p_project_id,
                                                      p_plan_type_id => -1,
                                                      p_proj_str_ver_id => p_dst_str_ver_id) ;
        IF ( l_calling_context = 'PUBLISH')
        OR ((l_calling_context = 'PJI' AND NVL(l_src_str_ver_publsihed, 'N') = 'Y')) THEN
            l_prog_mode := 'P';
            OPEN cur_lp_progress;
        ELSIF ((l_calling_context = 'PJI' AND NVL(l_src_str_ver_publsihed, 'N') = 'N')
 OR l_calling_context = 'RBS') THEN
            l_prog_mode := 'W';
            OPEN cur_working_wp_progress;
        END IF;

           l_index := 0;
           LOOP
             if (l_prog_mode = 'P') then
                FETCH cur_lp_progress INTO l_ppr_rec;
                EXIT WHEN cur_lp_progress%NOTFOUND;
             elsif (l_prog_mode = 'W') then
                FETCH cur_working_wp_progress INTO l_ppr_rec;
                EXIT WHEN cur_working_wp_progress%NOTFOUND;
             elsif (l_calling_context = 'FIRST_PUBLISH') then
                exit;
             end if;

         -- 4417665 : We will delete assignment rollup records which are unplanned and got remapped to some
         -- other assignments after resource list modifications.
         -- Note that we could have deleted these in PA_TASK_ASSIGNMENTS_PVT.Copy_Missing_Unplanned_Asgmts too,
         -- But there it is difficult, so deleting here

             -- Derive the value for l_new_object_id.
             l_ptav_rec := null;
             OPEN cur_ptav(l_ppr_rec.object_id,l_ppr_rec.proj_element_id);
             FETCH cur_ptav INTO l_ptav_rec;
             CLOSE cur_ptav;

         -- 4417665 : Added Beloe IF and code inside the IF
         IF (l_ptav_rec.rbs_element_id IS NULL
            AND (((nvl(l_ppr_rec.oth_act_cost_to_date_tc,0)+nvl(l_ppr_rec.ppl_act_cost_to_date_tc,0)
             +nvl(l_ppr_rec.eqpmt_act_cost_to_date_tc,0)) = 0 )
        AND
             ((nvl(l_ppr_rec.ppl_act_effort_to_date,0)+nvl(l_ppr_rec.eqpmt_act_effort_to_date,0)) = 0)
        AND
             ((nvl(l_ppr_rec.oth_etc_cost_tc,0)+nvl(l_ppr_rec.ppl_etc_cost_tc,0)
              +nvl(l_ppr_rec.eqpmt_etc_cost_tc,0)) = 0)
        AND
              ((nvl(l_ppr_rec.estimated_remaining_effort,0)+nvl(l_ppr_rec.eqpmt_etc_effort,0)) = 0)
            )
             )
         THEN
             IF l_prog_mode = 'P' THEN
            DELETE from pa_progress_rollup
            WHERE project_id = p_project_id
            AND structure_version_id is null
            AND structure_type = 'WORKPLAN'
            AND object_type = 'PA_ASSIGNMENTS'
            AND object_id = l_ppr_rec.object_id
            AND proj_element_id = l_ppr_rec.proj_element_id;
             END IF;
             IF l_prog_mode = 'W' THEN
            DELETE from pa_progress_rollup
            WHERE project_id = p_project_id
            AND structure_version_id = p_src_str_ver_id
            AND structure_type = 'WORKPLAN'
            AND object_type = 'PA_ASSIGNMENTS'
            AND object_id = l_ppr_rec.object_id
            AND proj_element_id = l_ppr_rec.proj_element_id;
             END IF;
         ELSE

             l_index := l_index + 1;
             ETC_PROJECT_ID(l_index)  := p_project_id;
             ETC_PROJECT_ELEMENT_ID(l_index)   := l_ppr_rec.proj_element_id;
             ETC_STRUCT_VER_ID(l_index)        := p_dst_str_ver_id;
             if (l_period_type = 'P') then
                 ETC_PERIOD_NAME(l_index) := l_ppr_rec.prog_pa_period_name;
             elsif (l_period_type = 'G') then
                 ETC_PERIOD_NAME(l_index) := l_ppr_rec.prog_gl_period_name;
             else
                 ETC_PERIOD_NAME(l_index) := null;
             end if;
             ETC_CALENDAR_TYPE(l_index)        := l_period_type;
             ETC_START_DATE(l_index)           := null;
             ETC_END_DATE(l_index)             := l_ppr_rec.as_of_date;
             ETC_RBS_VERSION_ID(l_index)       := null;
             ETC_PLAN_VERSION_ID(l_index)      := l_plan_version_id;
             ETC_PLAN_TYPE_ID(l_index)         := l_plan_type_id;
             ETC_WP_VERSION_FLAG(l_index)      := 'Y';
             ETC_ROLLUP_TYPE(l_index) := 'W';
             ETC_PROJECT_ORG_ID(l_index) := l_org_id;
             ETC_PRJ_CURRENCY_CODE(l_index) := l_proj_curr_code;
             ETC_PFC_CURRENCY_CODE(l_index) := l_proj_func_curr_code;

             -- 4417665 : Moving this code up
         /*
             -- Derive the value for l_new_object_id.
             l_ptav_rec := null;
             OPEN cur_ptav(l_ppr_rec.object_id,l_ppr_rec.proj_element_id);
             FETCH cur_ptav INTO l_ptav_rec;
             CLOSE cur_ptav;
         */

             ETC_RBS_ELEMENT_ID(l_index) := l_ptav_rec.rbs_element_id;
             ETC_RATE_BASED_FLAG(l_index) := l_ptav_rec.rate_based_flag;
             etc_resource_class_code(l_index) := l_ptav_rec.resource_class_code;
             ETC_TXN_CURRENCY_CODE(l_index) := l_ptav_rec.txn_currency_code;

                       /*l_act_TXN_COST_this_period := (nvl(l_ppr_rec.oth_act_cost_to_date_tc,0)+nvl(l_ppr_rec.ppl_act_cost_to_date_tc,0)+nvl(l_ppr_rec.eqpmt_act_cost_to_date_tc,0)
                                         +nvl(l_ppr_rec.subprj_oth_act_cost_to_date_tc,0)+nvl(l_ppr_rec.subprj_ppl_act_cost_tc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_cost_tc,0));
                        l_act_PRJ_COST_this_period := (nvl(l_ppr_rec.oth_act_cost_to_date_pc,0)+nvl(l_ppr_rec.ppl_act_cost_to_date_pc,0)+nvl(l_ppr_rec.eqpmt_act_cost_to_date_pc,0)
                                         +nvl(l_ppr_rec.subprj_oth_act_cost_to_date_pc,0)+nvl(l_ppr_rec.subprj_ppl_act_cost_pc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_cost_pc,0));
                        l_act_POU_COST_this_period := (nvl(l_ppr_rec.oth_act_cost_to_date_fc,0)+nvl(l_ppr_rec.ppl_act_cost_to_date_fc,0)+nvl(l_ppr_rec.eqpmt_act_cost_to_date_fc,0)
                                         +nvl(l_ppr_rec.subprj_oth_act_cost_to_date_fc,0)+nvl(l_ppr_rec.subprj_ppl_act_cost_fc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_cost_fc,0));
                        l_act_TXN_RAWCOST_this_period := (nvl(l_ppr_rec.oth_act_rawcost_to_date_tc,0)+nvl(l_ppr_rec.ppl_act_rawcost_to_date_tc,0)+nvl(l_ppr_rec.eqpmt_act_rawcost_to_date_tc,0)
                                         +nvl(l_ppr_rec.spj_oth_act_rawcost_to_date_tc,0)+nvl(l_ppr_rec.subprj_ppl_act_rawcost_tc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_rawcost_tc,0));
                        l_act_PRJ_RAWCOST_this_period := (nvl(l_ppr_rec.oth_act_rawcost_to_date_pc,0)+nvl(l_ppr_rec.ppl_act_rawcost_to_date_pc,0)+nvl(l_ppr_rec.eqpmt_act_rawcost_to_date_pc,0)
                                         +nvl(l_ppr_rec.spj_oth_act_rawcost_to_date_pc,0)+nvl(l_ppr_rec.subprj_ppl_act_rawcost_pc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_rawcost_pc,0));
                        l_act_POU_RAWCOST_this_period := (nvl(l_ppr_rec.oth_act_rawcost_to_date_fc,0)+nvl(l_ppr_rec.ppl_act_rawcost_to_date_fc,0)+nvl(l_ppr_rec.eqpmt_act_rawcost_to_date_fc,0)
                                         +nvl(l_ppr_rec.spj_oth_act_rawcost_to_date_fc,0)+nvl(l_ppr_rec.subprj_ppl_act_rawcost_fc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_rawcost_fc,0));
                        l_act_effort_this_period := (nvl(l_ppr_rec.ppl_act_effort_to_date,0)+nvl(l_ppr_rec.eqpmt_act_effort_to_date,0)--+nvl(l_ppr_rec.oth_quantity_to_date,0))Oth quantity is not required as it can be in diffrent UOM
                                         +nvl(l_ppr_rec.subprj_ppl_act_effort,0)+nvl(l_ppr_rec.subprj_eqpmt_act_effort,0));
                     */
           ETC_TXN_BURDENED_COST(l_index) := (nvl(l_ppr_rec.oth_etc_cost_tc,0)+nvl(l_ppr_rec.ppl_etc_cost_tc,0)+nvl(l_ppr_rec.eqpmt_etc_cost_tc,0)) - l_ptav_rec.planned_bur_cost_txn_cur;

           ETC_PRJ_BURDENED_COST(l_index) := (nvl(l_ppr_rec.oth_etc_cost_pc,0)+nvl(l_ppr_rec.ppl_etc_cost_pc,0)+nvl(l_ppr_rec.eqpmt_etc_cost_pc,0)) - l_ptav_rec.planned_bur_cost_proj_cur;
           ETC_PFC_BURDENED_COST(l_index) := (nvl(l_ppr_rec.oth_etc_cost_fc,0)+nvl(l_ppr_rec.ppl_etc_cost_fc,0)+nvl(l_ppr_rec.eqpmt_etc_cost_fc,0)) - l_ptav_rec.planned_bur_cost_projfunc;
           ETC_TXN_RAW_COST(l_index) := (nvl(l_ppr_rec.oth_etc_rawcost_tc,0)+nvl(l_ppr_rec.ppl_etc_rawcost_tc,0)+nvl(l_ppr_rec.eqpmt_etc_rawcost_tc,0)) - l_ptav_rec.planned_raw_cost_txn_cur;
           ETC_PRJ_RAW_COST(l_index) := (nvl(l_ppr_rec.oth_etc_rawcost_pc,0)+nvl(l_ppr_rec.ppl_etc_rawcost_pc,0)+nvl(l_ppr_rec.eqpmt_etc_rawcost_pc,0)) - l_ptav_rec.planned_raw_cost_proj_cur;
           ETC_PFC_RAW_COST(l_index) := (nvl(l_ppr_rec.oth_etc_rawcost_fc,0)+nvl(l_ppr_rec.ppl_etc_rawcost_fc,0)+nvl(l_ppr_rec.eqpmt_etc_rawcost_fc,0)) - l_ptav_rec.planned_raw_cost_projfunc;
           if (l_ptav_rec.resource_class_code in ('PEOPLE','EQUIPMENT')) then
              ETC_QUANTITY(l_index) := (nvl(l_ppr_rec.estimated_remaining_effort,0)+nvl(l_ppr_rec.eqpmt_etc_effort,0)) - l_ptav_rec.planned_quantity;
           else
              ETC_QUANTITY(l_index) := nvl(l_ppr_rec.oth_etc_quantity,0) - l_ptav_rec.planned_quantity;
           end if;

           ---added logic to copy actuals and ETC selctively bug 3821122

          IF p_copy_etc_flag = 'N' THEN
               ETC_TXN_BURDENED_COST(l_index)      :=null;
               ETC_PRJ_BURDENED_COST(l_index)      := null;
               ETC_PFC_BURDENED_COST(l_index)      := null;
               ETC_QUANTITY(l_index)       := null;
               ETC_TXN_RAW_COST(l_index)   := null;
               ETC_PRJ_RAW_COST(l_index)   := null;
               ETC_PFC_RAW_COST(l_index)   := null;
          END IF;
      END IF; -- IF (l_ptav_rec.rbs_element_id IS NULL
       END LOOP;
       if (l_prog_mode = 'P') then
          CLOSE cur_lp_progress;
       elsif (l_prog_mode = 'W') then
          CLOSE cur_working_wp_progress;
       end if;

                IF g1_debug_mode  = 'Y' THEN
                            for l_count in 1..l_index loop
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'Calling Push Workplan Actuals : PUBLISH WP CASE', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_structure_version_id='||p_dst_str_ver_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_proj_element_id='||ETC_PROJECT_ELEMENT_ID(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_as_of_date='||ETC_END_DATE(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_rbs_element_id='||etc_rbs_element_id(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_rate_based_flag='||etc_rate_based_flag(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_resource_class_code='||etc_resource_class_code(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_TXN_CURRENCY_CODE='||etc_TXN_CURRENCY_CODE(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_TXN_COST_this_period='||ETC_TXN_BURDENED_COST(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_PRJ_COST_this_period='||etc_PRJ_BURDENED_COST(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_POU_COST_this_period='||etc_Pfc_burdened_COST(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_effort_this_period='||etc_quantity(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_TXN_raw_COST_this_period='||etc_TXN_RAW_COST(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_PRJ_raw_COST_this_period='||etc_PRJ_RAW_COST(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_POU_raw_COST_this_period='||etc_PFC_RAW_COST(l_count), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_pa_period_name='||etc_period_name(l_count), x_Log_Level=> 3);
                             end loop;
                END IF;

                       FORALL l_count IN 1..l_index
                         INSERT INTO PJI_FM_EXTR_PLAN_LINES(
                           PROJECT_ID
                          ,PROJECT_ORG_ID
                          ,PROJECT_ELEMENT_ID
                          ,STRUCT_VER_ID
                          ,PERIOD_NAME
                          ,CALENDAR_TYPE
                          ,END_DATE
                          ,RBS_ELEMENT_ID
                          ,PLAN_VERSION_ID
                          ,PLAN_TYPE_ID
                          ,WP_VERSION_FLAG
                          ,ROLLUP_TYPE
                          ,TXN_CURRENCY_CODE
                          ,ETC_QUANTITY
                          ,ETC_TXN_BURDENED_COST
                          ,ETC_PRJ_BURDENED_COST
                          ,ETC_PFC_BURDENED_COST
                          ,ETC_TXN_RAW_COST
                          ,ETC_PRJ_RAW_COST
                          ,ETC_PFC_RAW_COST
                          ,RESOURCE_CLASS_CODE
                          ,RATE_BASED_FLAG
                          ,PRJ_CURRENCY_CODE
                          ,PFC_CURRENCY_CODE)
                         VALUES( ETC_PROJECT_ID(l_count)
                          ,ETC_PROJECT_ORG_ID(l_count)
                          ,ETC_PROJECT_ELEMENT_ID(l_count)
                          ,ETC_STRUCT_VER_ID(l_count)
                          ,ETC_PERIOD_NAME(l_count)
                          ,ETC_CALENDAR_TYPE(l_count)
                          ,ETC_END_DATE(l_count)
                          ,ETC_RBS_ELEMENT_ID(l_count)
                          ,ETC_PLAN_VERSION_ID(l_count)
                          ,ETC_PLAN_TYPE_ID(l_count)
                          ,ETC_WP_VERSION_FLAG(l_count)
                          ,ETC_ROLLUP_TYPE(l_count)
                          ,ETC_TXN_CURRENCY_CODE(l_count)
                          ,ETC_QUANTITY(l_count)
                          ,ETC_TXN_BURDENED_COST(l_count)
                          ,ETC_PRJ_BURDENED_COST(l_count)
                          ,ETC_PFC_BURDENED_COST(l_count)
                          ,ETC_TXN_RAW_COST(l_count)
                          ,ETC_PRJ_RAW_COST(l_count)
                          ,ETC_PFC_RAW_COST(l_count)
                          ,ETC_RESOURCE_CLASS_CODE(l_count)
                          ,ETC_RATE_BASED_FLAG(l_count)
                          ,ETC_PRJ_CURRENCY_CODE(l_count)
                          ,ETC_PFC_CURRENCY_CODE(l_count));
                if (g1_debug_mode  = 'Y') then
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'After Push Workplan Actuals' , x_Log_Level=> 3);
        END IF;

                        l_actuals_pushed := 'Y';

/******** NOT REQUIRED
        --bug 3968791
        --select all assignments' planned values whose progress does not exists in progress rollup table and pass them
        --to PJI as ETC. This is applicable if any of the assignments for a given task has progress overridden.
        --This change will NOT select assignments from those tasks for which there is no single assignment has ETC.
        --Also the cursor will not select hidden assignments.

        --Push to PJI only if there is progress for some objects and also if copy  ETC flag is yes.
        IF l_actuals_pushed = 'Y' AND p_copy_etc_flag = 'Y'
        THEN
           IF ( l_calling_context = 'PUBLISH')
            OR ((l_calling_context = 'PJI' AND NVL(l_src_str_ver_publsihed, 'N') = 'Y')) THEN
               FOR cur_select_all_assgns_rec IN cur_select_all_assgns LOOP

                IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'Calling Push Workplan Actuals : PUBLISH WP CASE with all assignments', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_structure_version_id='||p_dst_str_ver_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_proj_element_id='||cur_select_all_assgns_rec.task_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_object_id='||cur_select_all_assgns_rec.resource_list_member_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'planning start date='||cur_select_all_assgns_rec.planning_start_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_rbs_element_id='||cur_select_all_assgns_rec.rbs_element_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_rate_based_flag='||cur_select_all_assgns_rec.rate_based_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_resource_class_code='||cur_select_all_assgns_rec.resource_class_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_TXN_CURRENCY_CODE='||cur_select_all_assgns_rec.TXN_CURRENCY_CODE, x_Log_Level=> 3);

                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_TXN_COST_this_period='||cur_select_all_assgns_rec.PLANNED_BUR_COST_TXN_CUR, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_PRJ_COST_this_period='||cur_select_all_assgns_rec.PLANNED_BUR_COST_PROJ_CUR, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_POU_COST_this_period='||cur_select_all_assgns_rec.PLANNED_BUR_COST_PROJFUNC, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_effort_this_period='||cur_select_all_assgns_rec.PLANNED_QUANTITY, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_TXN_raw_COST_this_period='||cur_select_all_assgns_rec.PLANNED_RAW_COST_TXN_CUR, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_PRJ_raw_COST_this_period='||cur_select_all_assgns_rec.PLANNED_RAW_COST_PROJ_CUR, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_POU_raw_COST_this_period='||cur_select_all_assgns_rec.PLANNED_RAW_COST_PROJFUNC, x_Log_Level=> 3);

                END IF;
                   -- Call push workplan actuals.
                   PA_PROGRESS_PUB.push_workplan_actuals(
                      p_api_version                   =>      p_api_version
                     ,p_init_msg_list                =>      p_init_msg_list
                     ,p_commit                       =>      p_commit
                     ,p_validate_only                =>      p_validate_only
                     ,p_validation_level             =>      p_validation_level
                     ,p_calling_module               =>      p_calling_module
                     ,p_debug_mode                   =>      p_debug_mode
                     ,p_max_msg_count                =>      p_max_msg_count
                     ,p_project_Id                   =>      p_project_Id
                     ,p_structure_version_id         =>      p_dst_str_ver_id
                     ,p_proj_element_id              =>      cur_select_all_assgns_rec.task_id
                     ,p_object_id                    =>      cur_select_all_assgns_rec.resource_list_member_id
                     ,p_object_type                  =>      'PA_ASSIGNMENTS'
                     ,p_as_of_date                   =>      cur_select_all_assgns_rec.planning_start_date
                     ,p_rbs_element_id               =>      cur_select_all_assgns_rec.rbs_element_id
                     ,p_rate_based_flag              =>      cur_select_all_assgns_rec.rate_based_flag
                     ,p_resource_class_code          =>      cur_select_all_assgns_rec.resource_class_code
                     ,p_TXN_CURRENCY_CODE            =>      cur_select_all_assgns_rec.TXN_CURRENCY_CODE
                     ,p_call_pji_apis_flag           =>      'N'
                     ,p_etc_TXN_COST_this_period     =>      cur_select_all_assgns_rec.PLANNED_BUR_COST_TXN_CUR
                     ,p_etc_PRJ_COST_this_period     =>      cur_select_all_assgns_rec.PLANNED_BUR_COST_PROJ_CUR
                     ,p_etc_POU_COST_this_period     =>      cur_select_all_assgns_rec.PLANNED_BUR_COST_PROJFUNC
                     ,p_etc_effort_this_period       =>      cur_select_all_assgns_rec.PLANNED_QUANTITY
                     ,p_etc_TXN_raw_COST_this_period =>      cur_select_all_assgns_rec.PLANNED_RAW_COST_TXN_CUR
                     ,p_etc_PRJ_raw_COST_this_period =>      cur_select_all_assgns_rec.PLANNED_RAW_COST_PROJ_CUR
                     ,p_etc_POU_raw_COST_this_period =>      cur_select_all_assgns_rec.PLANNED_RAW_COST_PROJFUNC
                     ,p_pa_period_name           =>      null
             ,p_gl_period_name           =>      null    --pass null period name. let push workplan actual derive it based on planning start date
                     ,x_return_status                =>      l_return_status
                     ,x_msg_count                    =>      l_msg_count
                     ,x_msg_data                     =>      l_msg_data
                     );
               END LOOP;
           END IF;
        END IF;
        --bug 3968791

        IF ((l_calling_context = 'PJI' AND NVL(l_src_str_ver_publsihed, 'N') = 'N')OR l_calling_context = 'RBS') THEN

            OPEN cur_working_wp_progress;
           LOOP
               FETCH cur_working_wp_progress INTO l_ppr_rec;
                       EXIT WHEN cur_working_wp_progress%NOTFOUND;

                        -- Initialize the amount variables.
                       l_act_TXN_COST_this_period := null;
                        l_act_PRJ_COST_this_period := null;
                        l_act_POU_COST_this_period := null;
                        l_act_TXN_RAWCOST_this_period := null;
                        l_act_PRJ_RAWCOST_this_period := null;
                        l_act_POU_RAWCOST_this_period := null;
                        l_etc_TXN_COST_this_period := null;
                        l_etc_PRJ_COST_this_period := null;
                        l_etc_POU_COST_this_period := null;
                        l_etc_TXN_RAWCOST_this_period := null;
                        l_etc_PRJ_RAWCOST_this_period := null;
                        l_etc_POU_RAWCOST_this_period := null;
                        l_act_effort_this_period := null;
                        l_etc_effort_this_period := null;

                        -- Derive the value for l_new_object_id.
                       l_ptav_rec := null;
                        IF l_ppr_rec.object_type = 'PA_ASSIGNMENTS' then
                               OPEN cur_ptav(l_ppr_rec.object_id,l_ppr_rec.proj_element_id);
                                FETCH cur_ptav INTO l_ptav_rec;
                                CLOSE cur_ptav;

                                --l_new_object_id := l_ptav_rec.resource_assignment_id; Bug 3764224
                l_new_object_id := l_ptav_rec.resource_list_member_id; -- Bug 3764224
                l_rbs_element_id := l_ptav_rec.rbs_element_id;
                                l_rate_based_flag := l_ptav_rec.rate_based_flag;
                                l_resource_class_code := l_ptav_rec.resource_class_code;
                                l_TXN_CURRENCY_CODE := l_ptav_rec.txn_currency_code;
                       END IF;

                        -- Names of these variables are this period but actually it is sending cumulative amounts
                       l_act_TXN_COST_this_period := (nvl(l_ppr_rec.oth_act_cost_to_date_tc,0)+nvl(l_ppr_rec.ppl_act_cost_to_date_tc,0)+nvl(l_ppr_rec.eqpmt_act_cost_to_date_tc,0)
                                         +nvl(l_ppr_rec.subprj_oth_act_cost_to_date_tc,0)+nvl(l_ppr_rec.subprj_ppl_act_cost_tc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_cost_tc,0));
                        l_act_PRJ_COST_this_period := (nvl(l_ppr_rec.oth_act_cost_to_date_pc,0)+nvl(l_ppr_rec.ppl_act_cost_to_date_pc,0)+nvl(l_ppr_rec.eqpmt_act_cost_to_date_pc,0)
                                         +nvl(l_ppr_rec.subprj_oth_act_cost_to_date_pc,0)+nvl(l_ppr_rec.subprj_ppl_act_cost_pc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_cost_pc,0));
                        l_act_POU_COST_this_period := (nvl(l_ppr_rec.oth_act_cost_to_date_fc,0)+nvl(l_ppr_rec.ppl_act_cost_to_date_fc,0)+nvl(l_ppr_rec.eqpmt_act_cost_to_date_fc,0)
                                         +nvl(l_ppr_rec.subprj_oth_act_cost_to_date_fc,0)+nvl(l_ppr_rec.subprj_ppl_act_cost_fc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_cost_fc,0));
                        l_act_TXN_RAWCOST_this_period := (nvl(l_ppr_rec.oth_act_rawcost_to_date_tc,0)+nvl(l_ppr_rec.ppl_act_rawcost_to_date_tc,0)+nvl(l_ppr_rec.eqpmt_act_rawcost_to_date_tc,0)
                                         +nvl(l_ppr_rec.spj_oth_act_rawcost_to_date_tc,0)+nvl(l_ppr_rec.subprj_ppl_act_rawcost_tc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_rawcost_tc,0));
                        l_act_PRJ_RAWCOST_this_period := (nvl(l_ppr_rec.oth_act_rawcost_to_date_pc,0)+nvl(l_ppr_rec.ppl_act_rawcost_to_date_pc,0)+nvl(l_ppr_rec.eqpmt_act_rawcost_to_date_pc,0)
                                         +nvl(l_ppr_rec.spj_oth_act_rawcost_to_date_pc,0)+nvl(l_ppr_rec.subprj_ppl_act_rawcost_pc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_rawcost_pc,0));
                        l_act_POU_RAWCOST_this_period := (nvl(l_ppr_rec.oth_act_rawcost_to_date_fc,0)+nvl(l_ppr_rec.ppl_act_rawcost_to_date_fc,0)+nvl(l_ppr_rec.eqpmt_act_rawcost_to_date_fc,0)
                                         +nvl(l_ppr_rec.spj_oth_act_rawcost_to_date_fc,0)+nvl(l_ppr_rec.subprj_ppl_act_rawcost_fc,0)+nvl(l_ppr_rec.subprj_eqpmt_act_rawcost_fc,0));
                        l_etc_TXN_COST_this_period := (nvl(l_ppr_rec.oth_etc_cost_tc,0)+nvl(l_ppr_rec.ppl_etc_cost_tc,0)+nvl(l_ppr_rec.eqpmt_etc_cost_tc,0)
                                         +nvl(l_ppr_rec.subprj_oth_etc_cost_tc,0)+nvl(l_ppr_rec.subprj_ppl_etc_cost_tc,0)+nvl(l_ppr_rec.subprj_eqpmt_etc_cost_tc,0));
                        l_etc_PRJ_COST_this_period := (nvl(l_ppr_rec.oth_etc_cost_pc,0)+nvl(l_ppr_rec.ppl_etc_cost_pc,0)+nvl(l_ppr_rec.eqpmt_etc_cost_pc,0)
                                         +nvl(l_ppr_rec.subprj_oth_etc_cost_pc,0)+nvl(l_ppr_rec.subprj_ppl_etc_cost_pc,0)+nvl(l_ppr_rec.subprj_eqpmt_etc_cost_pc,0));
                        l_etc_POU_COST_this_period := (nvl(l_ppr_rec.oth_etc_cost_fc,0)+nvl(l_ppr_rec.ppl_etc_cost_fc,0)+nvl(l_ppr_rec.eqpmt_etc_cost_fc,0)
                                         +nvl(l_ppr_rec.subprj_oth_etc_cost_fc,0)+nvl(l_ppr_rec.subprj_ppl_etc_cost_fc,0)+nvl(l_ppr_rec.subprj_eqpmt_etc_cost_fc,0));
                        l_etc_TXN_RAWCOST_this_period := (nvl(l_ppr_rec.oth_etc_rawcost_tc,0)+nvl(l_ppr_rec.ppl_etc_rawcost_tc,0)+nvl(l_ppr_rec.eqpmt_etc_rawcost_tc,0)
                                         +nvl(l_ppr_rec.subprj_oth_etc_rawcost_tc,0)+nvl(l_ppr_rec.subprj_ppl_etc_rawcost_tc,0)+nvl(l_ppr_rec.subprj_eqpmt_etc_rawcost_tc,0));
                        l_etc_PRJ_RAWCOST_this_period := (nvl(l_ppr_rec.oth_etc_rawcost_pc,0)+nvl(l_ppr_rec.ppl_etc_rawcost_pc,0)+nvl(l_ppr_rec.eqpmt_etc_rawcost_pc,0)
                                         +nvl(l_ppr_rec.subprj_oth_etc_rawcost_pc,0)+nvl(l_ppr_rec.subprj_ppl_etc_rawcost_pc,0)+nvl(l_ppr_rec.subprj_eqpmt_etc_rawcost_pc,0));
                        l_etc_POU_RAWCOST_this_period := (nvl(l_ppr_rec.oth_etc_rawcost_fc,0)+nvl(l_ppr_rec.ppl_etc_rawcost_fc,0)+nvl(l_ppr_rec.eqpmt_etc_rawcost_fc,0)
                                         +nvl(l_ppr_rec.subprj_oth_etc_rawcost_fc,0)+nvl(l_ppr_rec.subprj_ppl_etc_rawcost_fc,0)+nvl(l_ppr_rec.subprj_eqpmt_etc_rawcost_fc,0));
                        l_act_effort_this_period := (nvl(l_ppr_rec.ppl_act_effort_to_date,0)+nvl(l_ppr_rec.eqpmt_act_effort_to_date,0)--+nvl(l_ppr_rec.oth_quantity_to_date,0))Oth quantity is not required as it can be in diffrent UOM
                                         +nvl(l_ppr_rec.subprj_ppl_act_effort,0)+nvl(l_ppr_rec.subprj_eqpmt_act_effort,0));
                        l_etc_effort_this_period := (nvl(l_ppr_rec.estimated_remaining_effort,0)+nvl(l_ppr_rec.eqpmt_etc_effort,0)--+nvl(l_ppr_rec.oth_etc_quantity,0))Oth quantity is not required as it can be in diffrent UOM
                                         +nvl(l_ppr_rec.subprj_ppl_etc_effort,0)+nvl(l_ppr_rec.subprj_eqpmt_etc_effort,0));

               IF l_calling_context = 'RBS' THEN
                l_act_TXN_COST_this_period := null;
                l_act_PRJ_COST_this_period := null;
                l_act_POU_COST_this_period := null;
                l_act_effort_this_period   := null;
                l_act_TXN_RAWCOST_this_period := null;
                l_act_PRJ_RAWCOST_this_period := null;
                l_act_POU_RAWCOST_this_period := null;
               END IF;


               ---added logic to copy actuals and ETC selctively bug 3821122

                        IF p_copy_actuals_flag = 'N'
                        THEN
                            l_act_TXN_COST_this_period := null;
                            l_act_PRJ_COST_this_period := null;
                            l_act_POU_COST_this_period := null;
                            l_act_effort_this_period   := null;
                            l_act_TXN_RAWCOST_this_period := null;
                            l_act_PRJ_RAWCOST_this_period := null;
                            l_act_POU_RAWCOST_this_period := null;
                        END IF;

                        IF p_copy_etc_flag = 'N'
                        THEN
                           l_etc_TXN_COST_this_period      :=null;
                           l_etc_PRJ_COST_this_period      := null;
                           l_etc_POU_COST_this_period      := null;
                           l_etc_effort_this_period        := null;
                           l_etc_TXN_RAWCOST_this_period   := null;
                           l_etc_PRJ_RAWCOST_this_period   := null;
                           l_etc_POU_RAWCOST_this_period   := null;
                        END IF;

                IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'Calling Push Workplan Actuals : WORKING WP CASE', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_structure_version_id='||p_dst_str_ver_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_proj_element_id='||l_ppr_rec.proj_element_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_object_id='||l_new_object_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_object_type='||l_ppr_rec.object_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_as_of_date='||l_ppr_rec.as_of_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_rbs_element_id='||l_rbs_element_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_rate_based_flag='||l_rate_based_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_resource_class_code='||l_resource_class_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_TXN_CURRENCY_CODE='||l_TXN_CURRENCY_CODE, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_TXN_COST_this_period='||l_act_TXN_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_PRJ_COST_this_period='||l_act_PRJ_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_POU_COST_this_period='||l_act_POU_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_effort_this_period='||l_act_effort_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_call_pji_apis_flag='||'N', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_TXN_raw_COST_this_period='||l_act_TXN_RAWCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_PRJ_raw_COST_this_period='||l_act_PRJ_RAWCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_POU_raw_COST_this_period='||l_act_POU_RAWCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_TXN_COST_this_period='||l_etc_TXN_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_PRJ_COST_this_period='||l_etc_PRJ_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_POU_COST_this_period='||l_etc_POU_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_effort_this_period='||l_etc_effort_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_TXN_raw_COST_this_period='||l_etc_TXN_rawCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_PRJ_raw_COST_this_period='||l_etc_PRJ_rawCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_POU_raw_COST_this_period='||l_etc_POU_rawCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_pa_period_name='||l_ppr_rec.prog_pa_period_name, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_gl_period_name='||l_ppr_rec.prog_gl_period_name, x_Log_Level=> 3);
                END IF;

                        -- Call push workplan actuals.
                        PA_PROGRESS_PUB.push_workplan_actuals(
                                p_api_version                   =>      p_api_version
                                ,p_init_msg_list                =>      p_init_msg_list
                                ,p_commit                       =>      p_commit
                                ,p_validate_only                =>      p_validate_only
                                ,p_validation_level             =>      p_validation_level
                                ,p_calling_module               =>      p_calling_module
                                ,p_debug_mode                   =>      p_debug_mode
                                ,p_max_msg_count                =>      p_max_msg_count
                                ,p_project_Id                   =>      p_project_Id
                                ,p_structure_version_id         =>      p_dst_str_ver_id
                                ,p_proj_element_id              =>      l_ppr_rec.proj_element_id
                                ,p_object_id                    =>      l_new_object_id
                                ,p_object_type                  =>      l_ppr_rec.object_type
                                ,p_as_of_date                   =>      l_ppr_rec.as_of_date
                                ,p_rbs_element_id               =>      l_rbs_element_id--l_ptav_rec.rbs_element_id
                                ,p_rate_based_flag              =>      l_rate_based_flag--l_ptav_rec.rate_based_flag
                                ,p_resource_class_code          =>      l_resource_class_code--l_ptav_rec.resource_class_code
                                ,p_TXN_CURRENCY_CODE            =>      l_TXN_CURRENCY_CODE--l_ptav_rec.txn_currency_code
                                ,p_act_TXN_COST_this_period     =>      l_act_TXN_COST_this_period
                                ,p_act_PRJ_COST_this_period     =>      l_act_PRJ_COST_this_period
                                ,p_act_POU_COST_this_period     =>      l_act_POU_COST_this_period
                                ,p_act_effort_this_period       =>      l_act_effort_this_period
                                ,p_call_pji_apis_flag           =>      'N'
                                ,p_act_TXN_raw_COST_this_period =>      l_act_TXN_RAWCOST_this_period
                                ,p_act_PRJ_raw_COST_this_period =>      l_act_PRJ_RAWCOST_this_period
                                ,p_act_POU_raw_COST_this_period =>      l_act_POU_RAWCOST_this_period
                                ,p_etc_TXN_COST_this_period     =>      l_etc_TXN_COST_this_period
                                ,p_etc_PRJ_COST_this_period     =>      l_etc_PRJ_COST_this_period
                                ,p_etc_POU_COST_this_period     =>      l_etc_POU_COST_this_period
                                ,p_etc_effort_this_period       =>      l_etc_effort_this_period
                                ,p_etc_TXN_raw_COST_this_period =>      l_etc_TXN_RAWCOST_this_period
                                ,p_etc_PRJ_raw_COST_this_period =>      l_etc_PRJ_RAWCOST_this_period
                                ,p_etc_POU_raw_COST_this_period =>      l_etc_POU_RAWCOST_this_period
                ,p_pa_period_name       =>      l_ppr_rec.prog_pa_period_name
                ,p_gl_period_name       =>      l_ppr_rec.prog_gl_period_name
                                ,x_return_status                =>      l_return_status
                                ,x_msg_count                    =>      l_msg_count
                                ,x_msg_data                     =>      l_msg_data);

                IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'After Push Workplan Actuals l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;


                        l_actuals_pushed := 'Y';
            END LOOP;
            CLOSE cur_working_wp_progress;
        END IF;
************/

/*********** NOT REQUIRED as PJI will have ETC as planned
    -- This push is required when you do not have progress record. We want PJI to stamp ETC as PLANNED initially
    -- So next time onwards when we send +ve ETC, it will subtract that ETC from it.


        if NVL(l_actuals_pushed,'N') = 'N' and l_calling_context = 'PUBLISH'
        then

            OPEN cur_ppev_ptav;

            LOOP

            FETCH cur_ppev_ptav INTO l_ppev_ptav_rec;

            EXIT WHEN cur_ppev_ptav%NOTFOUND;


                -- Initialize the amount variables.

                        l_act_TXN_COST_this_period := null;
                        l_act_PRJ_COST_this_period := null;
                        l_act_POU_COST_this_period := null;
                        l_act_TXN_RAWCOST_this_period := null;
                        l_act_PRJ_RAWCOST_this_period := null;
                        l_act_POU_RAWCOST_this_period := null;
                        l_etc_TXN_COST_this_period := null;
                        l_etc_PRJ_COST_this_period := null;
                        l_etc_POU_COST_this_period := null;
                        l_etc_TXN_RAWCOST_this_period := null;
                        l_etc_PRJ_RAWCOST_this_period := null;
                        l_etc_POU_RAWCOST_this_period := null;
                        l_act_effort_this_period := null;
                        l_etc_effort_this_period := null;


                -- Call push workplan actuals.
                IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'Calling Push Workplan Actuals : NO Actuals Case', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_structure_version_id='||p_dst_str_ver_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_proj_element_id='||l_ppev_ptav_rec.proj_element_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_object_id='||l_ppev_ptav_rec.object_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_object_type='||l_ppev_ptav_rec.object_type, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_as_of_date='||trunc(sysdate), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_rbs_element_id='||l_ppev_ptav_rec.rbs_element_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_rate_based_flag='||l_ppev_ptav_rec.rate_based_flag, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_resource_class_code='||l_ppev_ptav_rec.resource_class_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_TXN_CURRENCY_CODE='||l_ppev_ptav_rec.txn_currency_code, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_TXN_COST_this_period='||l_act_TXN_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_PRJ_COST_this_period='||l_act_PRJ_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_POU_COST_this_period='||l_act_POU_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_effort_this_period='||l_act_effort_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_call_pji_apis_flag='||'N', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_TXN_raw_COST_this_period='||l_act_TXN_RAWCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_PRJ_raw_COST_this_period='||l_act_PRJ_RAWCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_act_POU_raw_COST_this_period='||l_act_POU_RAWCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_TXN_COST_this_period='||l_etc_TXN_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_PRJ_COST_this_period='||l_etc_PRJ_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_POU_COST_this_period='||l_etc_POU_COST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_effort_this_period='||l_etc_effort_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_TXN_raw_COST_this_period='||l_etc_TXN_rawCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_PRJ_raw_COST_this_period='||l_etc_PRJ_rawCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_etc_POU_raw_COST_this_period='||l_etc_POU_rawCOST_this_period, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_pa_period_name='||to_char(null), x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_gl_period_name='||to_char(null), x_Log_Level=> 3);
                END IF;


                PA_PROGRESS_PUB.push_workplan_actuals(
                        p_api_version                   =>      p_api_version
                        ,p_init_msg_list                =>      p_init_msg_list
                        ,p_commit                       =>      p_commit
                        ,p_validate_only                =>      p_validate_only
                        ,p_validation_level             =>      p_validation_level
                        ,p_calling_module               =>      p_calling_module
                        ,p_debug_mode                   =>      p_debug_mode
                        ,p_max_msg_count                =>      p_max_msg_count
                        ,p_project_Id                   =>      p_project_Id
                        ,p_structure_version_id         =>      p_dst_str_ver_id
                        ,p_proj_element_id              =>      l_ppev_ptav_rec.proj_element_id
                        ,p_object_id                    =>      l_ppev_ptav_rec.object_id
                        ,p_object_type                  =>      l_ppev_ptav_rec.object_type
                        ,p_as_of_date                   =>      trunc(sysdate) -- IS it OK to pass this as null, which period this will summarize into?
                        ,p_rbs_element_id               =>      l_ppev_ptav_rec.rbs_element_id
                        ,p_rate_based_flag              =>      l_ppev_ptav_rec.rate_based_flag
                        ,p_resource_class_code          =>      l_ppev_ptav_rec.resource_class_code
                        ,p_TXN_CURRENCY_CODE            =>      l_ppev_ptav_rec.txn_currency_code
                        ,p_act_TXN_COST_this_period     =>      l_act_TXN_COST_this_period
                        ,p_act_PRJ_COST_this_period     =>      l_act_PRJ_COST_this_period
                        ,p_act_POU_COST_this_period     =>      l_act_POU_COST_this_period
                        ,p_act_effort_this_period       =>      l_act_effort_this_period
                        ,p_call_pji_apis_flag           =>      'N'
                        ,p_act_TXN_raw_COST_this_period =>      l_act_TXN_RAWCOST_this_period
                        ,p_act_PRJ_raw_COST_this_period =>      l_act_PRJ_RAWCOST_this_period
                        ,p_act_POU_raw_COST_this_period =>      l_act_POU_RAWCOST_this_period
                        ,p_etc_TXN_COST_this_period     =>      l_etc_TXN_COST_this_period
                        ,p_etc_PRJ_COST_this_period     =>      l_etc_PRJ_COST_this_period
                        ,p_etc_POU_COST_this_period     =>      l_etc_POU_COST_this_period
                        ,p_etc_effort_this_period       =>      l_etc_effort_this_period
                        ,p_etc_TXN_raw_COST_this_period =>      l_etc_TXN_RAWCOST_this_period
                        ,p_etc_PRJ_raw_COST_this_period =>      l_etc_PRJ_RAWCOST_this_period
                        ,p_etc_POU_raw_COST_this_period =>      l_etc_POU_RAWCOST_this_period
                        ,x_return_status                =>      l_return_status
                        ,x_msg_count                    =>      l_msg_count
                        ,x_msg_data                     =>      l_msg_data);

                IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'After Push Workplan Actuals l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;


                   l_actuals_pushed := 'Y';

            END LOOP;
            CLOSE cur_ppev_ptav;

        END IF;   --<<l_actuals_pushed>>
***************/

        if nvl( l_actuals_pushed, 'N') = 'Y' and (p_pji_conc_prog_context = 'N') -- Fix for Bug # 3996159.
        then
        BEGIN

        IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'Calling PLAN_UPDATE_ACT_ETC', x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_dst_str_ver_id='||p_dst_str_ver_id, x_Log_Level=> 3);
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'p_last_pub_str_version_id'||p_last_pub_str_version_id, x_Log_Level=> 3);
    END IF;


        PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE_ACT_ETC (p_plan_wbs_ver_id     => p_dst_str_ver_id
                                                    , p_prev_pub_wbs_ver_id => p_last_pub_str_version_id
                                                    , x_msg_code => l_msg_code
                                                    , x_return_status => l_return_status);

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.COPY_PROGRESS_ACT_ETC', x_Msg => 'After PLAN_UPDATE_ACT_ETC l_return_status='||l_return_status, x_Log_Level=> 3);
    END IF;


        EXCEPTION
           WHEN OTHERS THEN
                fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                            p_procedure_name => 'COPY_PROGRESS_ACT_ETC',
                            p_error_text     => SUBSTRB('Call PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE:'||SQLERRM,1,120));
                RAISE FND_API.G_EXC_ERROR;
        END;

    -- populate_workplan_data is not called as it is called from page itself.
        end if;


        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                                     p_msg_name       => l_msg_data);
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
        END IF;
/***********
        -- here we need to make ETC as null on assignment records
        if (l_calling_context = 'PUBLISH') then
            update pa_progress_rollup
               set  oth_etc_quantity = to_number(null)
                   ,oth_etc_rawcost_tc     = to_number(null)
                   ,oth_etc_rawcost_pc     = to_number(null)
                   ,oth_etc_rawcost_fc     = to_number(null)
                   ,oth_etc_cost_tc        = to_number(null)
                   ,oth_etc_cost_pc        = to_number(null)
                   ,oth_etc_cost_fc        = to_number(null)
                   ,estimated_remaining_effort = to_number(null)
                   ,ppl_etc_rawcost_tc         = to_number(null)
                   ,ppl_etc_rawcost_pc         = to_number(null)
                   ,ppl_etc_rawcost_fc         = to_number(null)
                   ,ppl_etc_cost_tc            = to_number(null)
                   ,ppl_etc_cost_pc            = to_number(null)
                   ,ppl_etc_cost_fc            = to_number(null)
                   ,eqpmt_etc_effort       = to_number(null)
                   ,eqpmt_etc_rawcost_tc   = to_number(null)
                   ,eqpmt_etc_rawcost_pc   = to_number(null)
                   ,eqpmt_etc_rawcost_fc   = to_number(null)
                   ,eqpmt_etc_cost_tc      = to_number(null)
                   ,eqpmt_etc_cost_pc      = to_number(null)
                   ,eqpmt_etc_cost_fc      = to_number(null)
                   ,last_update_date       = SYSDATE
             where project_id = p_project_id
               and object_type = 'PA_ASSIGNMENTS'
               and structure_version_id is null
               and structure_type = 'WORKPLAN'
               and current_flag = 'Y';
         end if;
************/
        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;

EXCEPTION

    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to COPY_PROGRESS_ACT_ETC;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;

    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to COPY_PROGRESS_ACT_ETC;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'COPY_PROGRESS_ACT_ETC',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to COPY_PROGRESS_ACT_ETC;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'COPY_PROGRESS_ACT_ETC',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;

END  COPY_PROGRESS_ACT_ETC;



-- Bug 3807299 : new API which will be called from update_progress and AMG pa_status_pub.update_progress
PROCEDURE update_link_proj_rollup_dates(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_project_id                  IN      NUMBER
 ,p_task_id         IN      NUMBER
 ,p_task_version_id     IN      NUMBER
 ,p_as_of_date                  IN      DATE
 ,p_structure_version_id        IN      NUMBER
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS
   l_api_name           CONSTANT   VARCHAR2(30)    := 'UPDATE_LINK_PROJ_ROLLUP_DATES';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);

CURSOR c_get_min_max_dates(c_par_project_id NUMBER, c_par_task_id NUMBER, c_par_task_ver_id NUMBER, c_par_str_ver_id NUMBER, c_as_of_date DATE) IS
        select min(ppr.actual_start_date), max(ppr.actual_finish_date),  min(ppr.estimated_start_date), max(ppr.estimated_finish_date)
        FROM
         --- removed join with pa_structures_links_v for performance improvement
         pa_proj_element_versions ppv1 --4871809
        ,pa_proj_element_versions ppv2
        ,pa_object_relationships por1
        ,pa_object_relationships por2
        ,pa_progress_rollup ppr
       WHERE
         ppv2.element_version_id = por1.object_id_to1
     AND ppv2.object_type = 'PA_STRUCTURES'
     AND por1.relationship_type in ( 'LW', 'LF' )
     AND por1.object_id_from1 = por2.object_id_to1
     AND por2.object_id_from1 = ppv1.element_version_id
     ANd por2.relationship_type = 'S'
     and por2.object_id_from2 = c_par_project_id
     and por2.object_id_from1 = c_par_task_ver_id
     and ppv1.parent_structure_version_id = c_par_str_ver_id
     AND por1.object_id_to2 = ppr.project_id
     and ppr.structure_type = 'WORKPLAN'
     and ppr.structure_version_id is null
     and ppr.object_type = 'PA_STRUCTURES'
     and ppr.current_flag <> 'W'   -- Bug 3879461
     and trunc(ppr.as_of_date) <= trunc(c_as_of_date);

CURSOR c_get_sch_dates(c_project_id NUMBER, c_task_id NUMBER, c_task_ver_id NUMBER) IS
        select pev_schedule_id, actual_start_date, actual_finish_date, estimated_start_date, estimated_finish_date
        from pa_proj_elem_ver_schedule
        where project_id = c_project_id
    and proj_element_id = c_task_id
    and element_version_id = c_task_ver_id
    ;

l_min_act_st_date       DATE;
l_max_act_fin_date      DATE;
l_min_est_st_date       DATE;
l_max_est_fin_date      DATE;
l_pev_schedule_id       NUMBER;
l_act_st_date           DATE;
l_act_fin_date          DATE;
l_est_st_date           DATE;
l_est_fin_date          DATE;
l_actual_start_date_rollup  NUMBER;
l_actual_finish_date_rollup NUMBER;
l_estimated_start_date_rollup   NUMBER;
l_estimated_finish_date_rollup  NUMBER;

BEGIN

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',l_user_id,l_login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.UPDATE_LINK_PROJ_ROLLUP_DATES');
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_LINK_PROJ_ROLLUP_DATES', x_Msg => 'PA_PROGRESS_PUB.UPDATE_LINK_PROJ_ROLLUP_DATES Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_LINK_PROJ_ROLLUP_DATES', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_LINK_PROJ_ROLLUP_DATES', x_Msg => 'p_structure_version_id='||p_structure_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_LINK_PROJ_ROLLUP_DATES', x_Msg => 'p_as_of_date='||p_as_of_date, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_LINK_PROJ_ROLLUP_DATES', x_Msg => 'p_task_id='||p_task_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_LINK_PROJ_ROLLUP_DATES', x_Msg => 'p_task_version_id='||p_task_version_id, x_Log_Level=> 3);
        END IF;

    IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.UPDATE_LINK_PROJ_ROLLUP_DATES');
        END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint UPDATE_LINK_PROJ_ROLLUP_DATES;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        OPEN c_get_min_max_dates(p_project_id, p_task_id, p_task_version_id, p_structure_version_id, p_as_of_date);
        FETCH c_get_min_max_dates INTO l_min_act_st_date, l_max_act_fin_date, l_min_est_st_date, l_max_est_fin_date;
    CLOSE c_get_min_max_dates;

        OPEN c_get_sch_dates(p_project_id, p_task_id, p_task_version_id);
        FETCH c_get_sch_dates INTO l_pev_schedule_id, l_act_st_date, l_act_fin_date, l_est_st_date, l_est_fin_date;
    CLOSE c_get_sch_dates;

    IF l_min_act_st_date IS NOT NULL OR l_max_act_fin_date IS NOT NULL OR
        l_min_est_st_date IS NOT NULL OR l_max_est_fin_date IS NOT NULL THEN

        IF l_min_act_st_date IS NOT NULL AND l_act_st_date IS NOT NULL THEN
            l_actual_start_date_rollup := l_act_st_date - l_min_act_st_date;
        END IF;

        IF l_max_act_fin_date IS NOT NULL AND l_act_fin_date IS NOT NULL THEN
            l_actual_finish_date_rollup := l_act_fin_date - l_max_act_fin_date;
        END IF;

        IF l_min_est_st_date IS NOT NULL AND l_est_st_date IS NOT NULL THEN
            l_estimated_start_date_rollup := l_est_st_date - l_min_est_st_date;
        END IF;

        IF l_max_est_fin_date IS NOT NULL AND l_est_fin_date IS NOT NULL THEN
            l_estimated_finish_date_rollup := l_est_fin_date - l_max_est_fin_date;
        END IF;

        UPDATE pa_proj_elem_ver_schedule
        SET actual_start_date_rollup= l_actual_start_date_rollup
        , actual_finish_date_rollup = l_actual_finish_date_rollup
        , estimated_start_date_rollup = l_estimated_start_date_rollup
        , estimated_finish_date_rollup = l_estimated_finish_date_rollup
        WHERE
        project_id = p_project_id
        and pev_schedule_id = l_pev_schedule_id
        and element_version_id = p_task_version_id
        and proj_element_id = p_task_id;
    END IF;

        IF (p_commit = FND_API.G_TRUE) THEN
                COMMIT;
        END IF;


EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_LINK_PROJ_ROLLUP_DATES;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_LINK_PROJ_ROLLUP_DATES;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_LINK_PROJ_ROLLUP_DATES',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_LINK_PROJ_ROLLUP_DATES;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_LINK_PROJ_ROLLUP_DATES',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END update_link_proj_rollup_dates;

PROCEDURE UPDATE_PROGRESS_BULK(
  p_api_version             IN      NUMBER                  :=1.0
 ,p_init_msg_list           IN      VARCHAR2                :=FND_API.G_TRUE
 ,p_commit              IN      VARCHAR2                :=FND_API.G_FALSE
 ,p_validate_only           IN      VARCHAR2                :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER                  :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module          IN      VARCHAR2                :='SELF_SERVICE'
 ,p_calling_mode            IN      VARCHAR2                := null
 ,p_debug_mode              IN      VARCHAR2                :='N'
 ,p_max_msg_count           IN      NUMBER                  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_action              IN      VARCHAR2                :='SAVE'
 ,p_rollup_entire_wbs_flag      IN      VARCHAR2                :='N'
 ,p_progress_mode           IN      VARCHAR2                :='FUTURE'
 ,p_pm_product_code         IN      VARCHAR2                := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
 ,p_structure_type          IN      VARCHAR2                := 'WORKPLAN'
 ,p_project_id_tbl          IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_object_id_tbl           IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_object_version_id_tbl       IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_object_type_tbl         IN      SYSTEM.pa_varchar2_30_tbl_type      := SYSTEM.pa_varchar2_30_tbl_type()
 ,p_task_id_tbl             IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_structure_version_id_tbl        IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_as_of_date_tbl          IN      SYSTEM.pa_date_tbl_type         := SYSTEM.pa_date_tbl_type()
 ,p_rbs_element_id_tbl              IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_resource_assignment_id_tbl      IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_rate_based_flag_tbl             IN      SYSTEM.pa_varchar2_1_tbl_type       := SYSTEM.pa_varchar2_1_tbl_type()
 ,p_resource_class_code_tbl         IN      SYSTEM.pa_varchar2_30_tbl_type      := SYSTEM.pa_varchar2_30_tbl_type()
 ,p_txn_currency_code_tbl           IN      SYSTEM.pa_varchar2_30_tbl_type      := SYSTEM.pa_varchar2_30_tbl_type()
 ,p_percent_complete_id_tbl     IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_record_version_number_tbl       IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_percent_complete_tbl        IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_eff_rup_percent_complete_tbl    IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_task_status_tbl         IN      SYSTEM.pa_varchar2_150_tbl_type     := SYSTEM.pa_varchar2_150_tbl_type()
 ,p_progress_status_code_tbl        IN      SYSTEM.pa_varchar2_30_tbl_type      := SYSTEM.pa_varchar2_30_tbl_type()
 ,p_progress_comment_tbl        IN      SYSTEM.pa_varchar2_2000_tbl_type    := SYSTEM.pa_varchar2_2000_tbl_type()
 ,p_brief_overview_tbl          IN      SYSTEM.pa_varchar2_250_tbl_type     := SYSTEM.pa_varchar2_250_tbl_type()  /* 7709400 : Changed type */
 ,p_actual_start_date_tbl       IN      SYSTEM.pa_date_tbl_type         := SYSTEM.pa_date_tbl_type()
 ,p_actual_finish_date_tbl      IN      SYSTEM.pa_date_tbl_type         := SYSTEM.pa_date_tbl_type()
 ,p_estimated_start_date_tbl        IN      SYSTEM.pa_date_tbl_type         := SYSTEM.pa_date_tbl_type()
 ,p_estimated_finish_date_tbl       IN      SYSTEM.pa_date_tbl_type         := SYSTEM.pa_date_tbl_type()
 ,p_scheduled_start_date_tbl        IN      SYSTEM.pa_date_tbl_type         := SYSTEM.pa_date_tbl_type()
 ,p_scheduled_finish_date_tbl       IN      SYSTEM.pa_date_tbl_type         := SYSTEM.pa_date_tbl_type()
 ,p_est_remaining_effort_tbl        IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_etc_cost_tbl            IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_actual_work_quantity_tbl        IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_actual_effort_tbl           IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_actual_cost_tbl         IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_act_eff_this_period_tbl     IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_actual_cost_this_period_tbl     IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_planned_cost_tbl            IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,p_planned_effort_tbl          IN      SYSTEM.pa_num_tbl_type          := SYSTEM.pa_num_tbl_type()
 ,x_return_status           OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count               OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
)
IS

l_api_name           CONSTANT   VARCHAR2(30)    := 'UPDATE_PROGRESSES_BULK'  ;
l_api_version        CONSTANT   NUMBER          := p_api_version             ;
l_user_id                       NUMBER          := FND_GLOBAL.USER_ID        ;
l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID       ;
l_return_status                 VARCHAR2(1)                                  ;
l_msg_count                     NUMBER                                       ;
l_msg_data                      VARCHAR2(250)                                ;
l_object_type                   VARCHAR2(30)                                 ;
l_structure_version_id          NUMBER                                       ;
l_task_version_id               NUMBER                                       ;
l_wp_rollup_method              pa_proj_progress_attr.task_weight_basis_code%TYPE;
l_fin_rollup_method             pa_proj_progress_attr.task_weight_basis_code%TYPE;
l_rollup_method                 pa_proj_progress_attr.task_weight_basis_code%TYPE;
l_last_rollup_method            pa_proj_progress_attr.task_weight_basis_code%TYPE;
L_LOWEST_LEVEL_TASK             VARCHAR2(1);
l_last_progress_date            DATE;
l_flag                          VARCHAR2(1);

CURSOR c_get_task_version_id(c_proj_element_id NUMBER, c_project_id NUMBER, c_structure_version_id NUMBER)
IS
SELECT element_version_id, parent_structure_version_id
FROM pa_proj_element_versions
WHERE proj_element_id = c_proj_element_id
AND object_type = 'PA_TASKS'
AND project_id = c_project_id
AND parent_structure_version_id = c_structure_version_id;

CURSOR c_get_task_weight_method(c_project_id NUMBER, c_structure_type VARCHAR2)
IS
SELECT task_weight_basis_code
FROM pa_proj_progress_attr
WHERE project_id = c_project_id
AND structure_type = c_structure_type;

CURSOR c_get_latest_pub_task_ver(c_proj_element_id NUMBER, c_project_id NUMBER)
IS
SELECT elemver.element_version_id, elemver.parent_structure_version_id
FROM pa_proj_element_versions elemver, pa_proj_elem_ver_structure str
WHERE elemver.proj_element_id = c_proj_element_id
AND elemver.object_type = 'PA_TASKS'
AND elemver.project_id = c_project_id
AND str.project_id = c_project_id
AND elemver.parent_structure_version_id = str.element_version_id
AND str.latest_eff_published_flag = 'Y';

CURSOR c_get_template_flag(c_project_id NUMBER)
IS
SELECT TEMPLATE_FLAG
FROM PA_PROJECTS_ALL
WHERE PROJECT_ID = c_project_id;

l_structure_sharing_code    pa_projects_all.structure_sharing_code%TYPE;
l_last_str_sharing_code     pa_projects_all.structure_sharing_code%TYPE;
l_last_project_id       NUMBER;
l_last_sharing_Enabled      VARCHAR2(1);
l_last_split_workplan       VARCHAR2(1);
l_task_id           NUMBER;
L_SHARING_ENABLED       VARCHAR2(1);
L_SPLIT_WORKPLAN        VARCHAR2(1);
l_project_ids           SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type();
l_struture_version_ids      SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type();
l_struture_version_id_tbl   SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type();
l_proj_thru_dates_tbl       SYSTEM.pa_date_tbl_type:= SYSTEM.pa_date_tbl_type();
l_task_version_id_tbl       SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type();
l_wp_rollup_method_tbl      SYSTEM.PA_VARCHAR2_30_TBL_TYPE    := SYSTEM.PA_VARCHAR2_30_TBL_TYPE();
l_fin_rollup_method_tbl     SYSTEM.PA_VARCHAR2_30_TBL_TYPE    := SYSTEM.PA_VARCHAR2_30_TBL_TYPE();
l_object_type_tbl       SYSTEM.PA_VARCHAR2_30_TBL_TYPE    := SYSTEM.PA_VARCHAR2_30_TBL_TYPE();
l_lowest_level_task_tbl     SYSTEM.PA_VARCHAR2_1_TBL_TYPE    := SYSTEM.PA_VARCHAR2_1_TBL_TYPE();
l_task_id_tbl           SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type();
l_structure_version_id_tbl  SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type();
l_rollup_call_required_tbl  SYSTEM.PA_VARCHAR2_1_TBL_TYPE    := SYSTEM.PA_VARCHAR2_1_TBL_TYPE();
l_budget_call_required_tbl  SYSTEM.PA_VARCHAR2_1_TBL_TYPE    := SYSTEM.PA_VARCHAR2_1_TBL_TYPE();
l_mass_rlp_call_required_tbl    SYSTEM.PA_VARCHAR2_1_TBL_TYPE    := SYSTEM.PA_VARCHAR2_1_TBL_TYPE();
l_action            VARCHAR2(30);
l_resource_list_member_id   NUMBER;
l_prog_pa_period_name       VARCHAR2(30);
l_prog_gl_period_name       VARCHAR2(30);
l_base_struct_ver_id        NUMBER;
l_msg_code          VARCHAR2(32);
l_record_count          NUMBER;
l_count_of_rollup_calls     NUMBER;
l_count_of_budget_calls     NUMBER;

-- Bug 4218507
l_mass_rollup_task_ver_id_tbl   SYSTEM.PA_NUM_TBL_TYPE := SYSTEM.pa_num_tbl_type();
l_unique_rec_exists     VARCHAR2(1);
l_calling_mode          VARCHAR2(15);
l_check             VARCHAR2(1);

-- Begin fix for Bug # 4524977.

cursor l_cur_publish(l_request_id NUMBER)  is
select substr(fcrsv.argument_text,1,(instr(fcrsv.argument_text,','))-1) process
from fnd_conc_req_summary_v fcrsv
where fcrsv.request_id = l_request_id;

l_rec_publish l_cur_publish%ROWTYPE;

l_wp_ver_enabled_flag VARCHAR2(1):= null;

l_request_id            NUMBER          := null;
l_process_code          VARCHAR2(30)    := null;
l_str_version_id  NUMBER          := null;

-- End fix for Bug # 4524977.

l_plan_version_id       NUMBER; --  4587145

l_prev_prog_upd_date date; -- 7225884

-- MOAC Changes Bug 4698162 Begin
CURSOR c_get_org_id(c_project_id NUMBER) IS
select org_id
from pa_projects_all
where project_id = c_project_id;

l_org_id NUMBER;
-- MOAC Changes Bug 4698162 End
l_structure_id   number;

BEGIN
    g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK');
        END IF;

        --IF (p_commit = FND_API.G_TRUE) THEN
        savepoint UPDATE_PROGRESS_BULK;
        --END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
                RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

    l_record_count := p_project_id_tbl.COUNT;

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK l_record_count '||l_record_count, x_Log_Level=> 3);
    END IF;

    IF( p_percent_complete_id_tbl.COUNT     <> l_record_count OR
        p_object_id_tbl.COUNT           <> l_record_count OR
        p_object_version_id_tbl.COUNT       <> l_record_count OR
        p_object_type_tbl.COUNT         <> l_record_count OR
        p_as_of_date_tbl.COUNT          <> l_record_count OR
        p_percent_complete_tbl.COUNT        <> l_record_count OR
        p_progress_status_code_tbl.COUNT        <> l_record_count OR
        p_progress_comment_tbl.COUNT        <> l_record_count OR
        p_brief_overview_tbl.COUNT          <> l_record_count OR
        p_actual_start_date_tbl.COUNT       <> l_record_count OR
        p_actual_finish_date_tbl.COUNT      <> l_record_count OR
        p_estimated_start_date_tbl.COUNT        <> l_record_count OR
        p_estimated_finish_date_tbl.COUNT           <> l_record_count OR
        p_scheduled_start_date_tbl.COUNT        <> l_record_count OR
        p_scheduled_finish_date_tbl.COUNT           <> l_record_count OR
        p_record_version_number_tbl.COUNT           <> l_record_count OR
        p_task_status_tbl.COUNT         <> l_record_count OR
        p_ETC_cost_tbl.COUNT            <> l_record_count OR
        p_est_remaining_effort_tbl.COUNT        <> l_record_count OR
        p_actual_work_quantity_tbl.COUNT        <> l_record_count OR
        p_actual_effort_tbl.COUNT           <> l_record_count OR
        p_actual_cost_tbl.COUNT         <> l_record_count OR
        p_act_eff_this_period_tbl.COUNT     <> l_record_count OR
        p_actual_cost_this_period_tbl.COUNT         <> l_record_count OR
        p_task_id_tbl.COUNT             <> l_record_count OR
        p_structure_version_id_tbl.COUNT        <> l_record_count OR
        p_planned_cost_tbl.COUNT            <> l_record_count OR
        p_planned_effort_tbl.COUNT          <> l_record_count OR
        p_rate_based_flag_tbl.COUNT         <> l_record_count OR
        p_resource_class_code_tbl.COUNT     <> l_record_count OR
        p_txn_currency_code_tbl.COUNT       <> l_record_count OR
        p_rbs_element_id_tbl.COUNT          <> l_record_count OR
        p_resource_assignment_id_tbl.COUNT          <> l_record_count OR
        p_eff_rup_percent_complete_tbl.COUNT    <> l_record_count )
    THEN

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_percent_complete_id_tbl.COUNT '||p_percent_complete_id_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_object_id_tbl.COUNT '||p_object_id_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_object_version_id_tbl.COUNT '||p_object_version_id_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_object_type_tbl.COUNT '||p_object_type_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_as_of_date_tbl.COUNT '||p_as_of_date_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_percent_complete_tbl.COUNT '||p_percent_complete_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_progress_status_code_tbl.COUNT '||p_progress_status_code_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_progress_comment_tbl.COUNT '||p_progress_comment_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_brief_overview_tbl.COUNT '||p_brief_overview_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_actual_start_date_tbl.COUNT '||p_actual_start_date_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_actual_finish_date_tbl.COUNT '||p_actual_finish_date_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_estimated_start_date_tbl.COUNT '||p_estimated_start_date_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_estimated_finish_date_tbl.COUNT '||p_estimated_finish_date_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_scheduled_start_date_tbl.COUNT '||p_scheduled_start_date_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_scheduled_finish_date_tbl.COUNT '||p_scheduled_finish_date_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_record_version_number_tbl.COUNT '||p_record_version_number_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_task_status_tbl.COUNT '||p_task_status_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_est_remaining_effort_tbl.COUNT '||p_est_remaining_effort_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_ETC_cost_tbl.COUNT '||p_ETC_cost_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_actual_work_quantity_tbl.COUNT '||p_actual_work_quantity_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_actual_effort_tbl.COUNT '||p_actual_effort_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_actual_cost_tbl.COUNT '||p_actual_cost_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_act_eff_this_period_tbl.COUNT '||p_act_eff_this_period_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_actual_cost_this_period_tbl.COUNT '||p_actual_cost_this_period_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_task_id_tbl.COUNT '||p_task_id_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_structure_version_id_tbl.COUNT '||p_structure_version_id_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_planned_cost_tbl.COUNT '||p_planned_cost_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_planned_effort_tbl.COUNT '||p_planned_effort_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_rate_based_flag_tbl.COUNT '||p_rate_based_flag_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_resource_class_code_tbl.COUNT '||p_resource_class_code_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_txn_currency_code_tbl.COUNT '||p_txn_currency_code_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_rbs_element_id_tbl.COUNT '||p_rbs_element_id_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_resource_assignment_id_tbl.COUNT '||p_resource_assignment_id_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_rbs_element_id_tbl.COUNT '||p_rbs_element_id_tbl.COUNT, x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK p_eff_rup_percent_complete_tbl.COUNT '||p_eff_rup_percent_complete_tbl.COUNT, x_Log_Level=> 3);
        END IF;

        PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                                    ,p_msg_name       => 'PA_INV_PARAM_PASSED');
        x_msg_data := 'PA_INV_PARAM_PASSED';
        x_return_status := FND_API.G_RET_STS_ERROR;
        RAISE  FND_API.G_EXC_ERROR;
    END IF;


    l_action := p_action;
    l_last_str_sharing_code := 'ABC';
    l_last_project_id := -9999;
    l_last_sharing_Enabled := 'X';
    l_last_split_workplan := 'X';
    FOR i in p_project_id_tbl.FIRST..p_project_id_tbl.LAST LOOP
        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_project_id_tbl('||i||')='||p_project_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_object_type_tbl('||i||')='||p_object_type_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_object_id_tbl('||i||')='||p_object_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_object_version_id_tbl('||i||')='||p_object_version_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_task_id_tbl('||i||')='||p_task_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_structure_version_id_tbl('||i||')='||p_structure_version_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_as_of_date_tbl('||i||')='||p_as_of_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_task_status_tbl('||i||')='||p_task_status_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_percent_complete_tbl('||i||')='||p_percent_complete_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_progress_status_code_tbl('||i||')='||p_progress_status_code_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_progress_comment_tbl('||i||')='||p_progress_comment_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_brief_overview_tbl('||i||')='||p_brief_overview_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_actual_start_date_tbl('||i||')='||p_actual_start_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_actual_finish_date_tbl('||i||')='||p_actual_finish_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_estimated_start_date_tbl('||i||')='||p_estimated_start_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_estimated_finish_date_tbl('||i||')='||p_estimated_finish_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_scheduled_start_date_tbl('||i||')='||p_scheduled_start_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_scheduled_finish_date_tbl('||i||')='||p_scheduled_finish_date_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_percent_complete_id_tbl('||i||')='||p_percent_complete_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_record_version_number_tbl('||i||')='||p_record_version_number_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_ETC_cost_tbl('||i||')='||p_ETC_cost_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_est_remaining_effort_tbl('||i||')='||p_est_remaining_effort_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_actual_work_quantity_tbl('||i||')='||p_actual_work_quantity_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_actual_effort_tbl('||i||')='||p_actual_effort_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_actual_cost_tbl('||i||')='||p_actual_cost_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_act_eff_this_period_tbl('||i||')='||p_act_eff_this_period_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_actual_cost_this_period_tbl('||i||')='||p_actual_cost_this_period_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_planned_cost_tbl('||i||')='||p_planned_cost_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_planned_effort_tbl('||i||')='||p_planned_effort_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_rate_based_flag_tbl('||i||')='||p_rate_based_flag_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_resource_class_code_tbl('||i||')='||p_resource_class_code_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_txn_currency_code_tbl('||i||')='||p_txn_currency_code_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_rbs_element_id_tbl('||i||')='||p_rbs_element_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_resource_assignment_id_tbl('||i||')='||p_resource_assignment_id_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'p_eff_rup_percent_complete_tbl('||i||')='||p_eff_rup_percent_complete_tbl(i), x_Log_Level=> 3);
        END IF;

        -- Begin fix for Bug # 4524977.

        PA_PROJECT_STRUCTURE_UTILS.GET_CONC_REQUEST_DETAILS
        (p_project_id            => p_project_id_tbl(i)
        ,p_structure_type        => p_structure_type
        ,x_request_id            => l_request_id
        ,x_process_code          => l_process_code
        ,x_structure_version_id  => l_str_version_id
        ,x_return_status         => l_return_status
        ,x_msg_count             => l_msg_count
        ,x_msg_data              => l_msg_data);


        if l_return_status <> FND_API.G_RET_STS_SUCCESS then

                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;

                raise FND_API.G_EXC_ERROR;

        end if;

        open l_cur_publish(l_request_id);
        fetch l_cur_publish into l_rec_publish;
        close l_cur_publish;


        l_wp_ver_enabled_flag := PA_PROJ_TASK_STRUC_PUB.IS_WP_VERSIONING_ENABLED(p_project_id_tbl(i));

        if ((l_rec_publish.process = 'CONC_PUBLISH')
            and (l_process_code in ('WUP', 'WUE'))
            and (l_wp_ver_enabled_flag = 'Y'))  then

                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
                                     ,p_msg_name      => 'PA_PS_PUBLISH_NO_PROG');

                x_msg_data := 'PA_PS_PUBLISH_NO_PROG';

                x_return_status := FND_API.G_RET_STS_ERROR;

                raise FND_API.G_EXC_ERROR;

        elsif ((l_rec_publish.process = 'CONC_UPDATE')
               and (l_process_code = 'WUP')
               and (l_wp_ver_enabled_flag = 'N')) then

                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
                                     ,p_msg_name      => 'PA_PS_UPDATE_NO_PROG');

                x_msg_data := 'PA_PS_UPDATE_NO_PROG';

                x_return_status := FND_API.G_RET_STS_ERROR;

                raise FND_API.G_EXC_ERROR;

        elsif ((l_rec_publish.process = 'APPLY_PROGRESS')
               and (l_process_code = 'WUP')
               and (l_wp_ver_enabled_flag = 'N')) then

                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA'
                                     ,p_msg_name      => 'PA_PS_APLPRG_NO_PROG');

                x_msg_data := 'PA_PS_APLPRG_NO_PROG';

                x_return_status := FND_API.G_RET_STS_ERROR;

                raise FND_API.G_EXC_ERROR;

        end if;

        -- End fix for Bug # 4524977.

        -- Call repective update_task_progress, finc, assgn, dlv depdening on object_type
        IF (p_object_type_tbl(i) IS NULL OR p_object_id_tbl(i) IS NULL OR p_as_of_date_tbl(i) IS NULL ) THEN
            PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                        ,p_msg_name       => 'PA_INV_PARAM_PASSED');
            x_msg_data := 'PA_INV_PARAM_PASSED';
            x_return_status := FND_API.G_RET_STS_ERROR;
            RAISE  FND_API.G_EXC_ERROR;
        END IF;

        IF l_last_project_id <> p_project_id_tbl(i) THEN
            l_last_project_id :=  p_project_id_tbl(i);
            l_last_str_sharing_code := PA_PROJECT_STRUCTURE_UTILS.get_Structure_sharing_code(l_last_project_id);
            l_last_sharing_Enabled := PA_PROJECT_STRUCTURE_UTILS.check_sharing_enabled(l_last_project_id);
            IF (l_last_sharing_Enabled = 'N' OR (l_last_sharing_Enabled = 'Y' AND l_last_str_sharing_code <> 'SHARE_FULL'))
                 AND p_structure_type = 'WORKPLAN'
            THEN
                l_last_split_workplan := 'Y';
            ELSE
                l_last_split_workplan := 'N';
            END IF;

            OPEN c_get_task_weight_method(l_last_project_id, p_structure_type);
            FETCH c_get_task_weight_method INTO l_last_rollup_method;
            CLOSE c_get_task_weight_method;

            l_structure_sharing_code := l_last_str_sharing_code;
            l_sharing_Enabled := l_last_sharing_Enabled;
            l_split_workplan := l_last_split_workplan;
            l_rollup_method := l_last_rollup_method;

	    -- MOAC Changes Bug 4698162 Begin
	    OPEN c_get_org_id(p_project_id_tbl(i));
	    FETCH c_get_org_id INTO l_org_id;
	    CLOSE c_get_org_id;

	    IF NVL(PA_MOAC_UTILS.GET_CURRENT_ORG_ID,-1234) <>  l_org_id THEN
		PA_MOAC_UTILS.SET_POLICY_CONTEXT('S', l_org_id);
	    END IF;
	    -- MOAC Changes Bug 4698162 End

        ELSE
            l_structure_sharing_code := l_last_str_sharing_code;
            l_sharing_Enabled := l_last_sharing_Enabled;
            l_split_workplan := l_last_split_workplan;
            l_rollup_method := l_last_rollup_method;
        END IF;

        IF (p_calling_module = 'AMG') THEN
            OPEN c_get_template_flag(p_project_id_tbl(i));
            FETCH c_get_template_flag INTO l_flag;
            CLOSE c_get_template_flag;
            IF (l_flag = 'Y') THEN
                PA_UTILS.ADD_MESSAGE( p_app_short_name => 'PA'
                         ,p_msg_name       => 'PA_TEMPL_PROGRESS_NOT_ALLOWED');
                x_msg_data := 'PA_TEMPL_PROGRESS_NOT_ALLOWED';
                x_return_status := FND_API.G_RET_STS_ERROR;
                RAISE  FND_API.G_EXC_ERROR;
             END IF;
        END IF;

		IF p_structure_type = 'WORKPLAN' THEN -- bug 7225884
		  BEGIN
		     SELECT next_progress_update_date
		       INTO l_prev_prog_upd_date
		       FROM pa_proj_progress_attr
		      WHERE project_id = p_project_id_tbl(i)
		    AND object_type    = 'PA_STRUCTURES'
		    AND structure_type = 'WORKPLAN';
		  EXCEPTION
		  WHEN OTHERS THEN
		    l_prev_prog_upd_date := p_as_of_date_tbl(i)-1;
		  END;

		  IF NVL(l_prev_prog_upd_date,p_as_of_date_tbl(i)-1) <> p_as_of_date_tbl(i) THEN
		     UPDATE pa_proj_progress_attr
		    SET next_progress_update_date = p_as_of_date_tbl(i)
		      WHERE project_id            = p_project_id_tbl(i)
		    AND object_type               = 'PA_STRUCTURES'
		    AND structure_type            = 'WORKPLAN';
		  END IF;

		END IF;


        IF (p_structure_type = 'FINANCIAL' AND (p_object_type_tbl(i) = 'PA_TASKS' OR p_object_type_tbl(i)='PA_STRUCTURES')) THEN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Structure Type Financial ', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling UPDATE_FINANCIAL_TASK_PROGRESS', x_Log_Level=> 3);
            END IF;


            PA_PROGRESS_PUB.UPDATE_FINANCIAL_TASK_PROGRESS(
                     p_api_version                   => l_api_version
                     ,p_init_msg_list                => p_init_msg_list
                     ,p_commit                       => p_commit
                     ,p_validate_only                => p_validate_only
                     ,p_validation_level             => p_validation_level
                     ,p_calling_module               => p_calling_module
                     ,p_action                       => l_action
                     ,P_rollup_entire_wbs_flag       => P_rollup_entire_wbs_flag
                     ,p_percent_complete_id          => p_percent_complete_id_tbl(i)
                     ,p_project_id                   => p_project_id_tbl(i)
                     ,p_object_id                    => p_object_id_tbl(i)
                     ,p_object_version_id            => p_object_version_id_tbl(i)
                     ,p_object_type                  => p_object_type_tbl(i)
                     ,p_as_of_date                   => p_as_of_date_tbl(i)
                     ,p_percent_complete             => p_percent_complete_tbl(i)
                     ,p_structure_type               => p_structure_type
                     ,p_task_id                      => p_task_id_tbl(i)
                     ,p_structure_version_id         => p_structure_version_id_tbl(i)
                     ,p_record_version_number        => p_record_version_number_tbl(i)
                     ,p_progress_comment             => p_progress_comment_tbl(i)
                     ,p_brief_overview               => p_brief_overview_tbl(i)
                     ,x_return_status                => l_return_status
                     ,x_msg_count                    => l_msg_count
                     ,x_msg_data                     => l_msg_data
                     );
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling UPDATE_FINANCIAL_TASK_PROGRESS l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;
        ELSIF (p_structure_type = 'WORKPLAN' AND (p_object_type_tbl(i) = 'PA_TASKS' OR p_object_type_tbl(i)='PA_STRUCTURES')) THEN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Structure Type Workplan ', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling UPDATE_TASK_PROGRESS', x_Log_Level=> 3);
            END IF;
            PA_PROGRESS_PUB.UPDATE_TASK_PROGRESS(
                 p_api_version           => l_api_version
                 ,p_init_msg_list         => p_init_msg_list
                 ,p_commit                => p_commit
                 ,p_validate_only         => p_validate_only
                 ,p_validation_level      => p_validation_level
                 ,p_calling_module        => p_calling_module
                 ,p_calling_mode      => p_calling_mode   --bug 4287638
                 ,p_debug_mode            => p_debug_mode
                 ,p_max_msg_count         => p_max_msg_count
                 ,p_action                => l_action
                 ,p_bulk_load_flag        => p_rollup_entire_wbs_flag
                 ,p_progress_mode         => p_progress_mode
                 ,p_percent_complete_id   => p_percent_complete_id_tbl(i)
                 ,p_project_id            => p_project_id_tbl(i)
                 ,p_object_id             => p_object_id_tbl(i)
                 ,p_object_version_id     => p_object_version_id_tbl(i)
                 ,p_object_type           => p_object_type_tbl(i)
                 ,p_as_of_date            => p_as_of_date_tbl(i)
                 ,p_percent_complete      => p_percent_complete_tbl(i)
                 ,p_progress_status_code  => p_progress_status_code_tbl(i)
                 ,p_progress_comment      => p_progress_comment_tbl(i)
                 ,p_brief_overview        => p_brief_overview_tbl(i)
                 ,p_actual_start_date     => p_actual_start_date_tbl(i)
                 ,p_actual_finish_date    => p_actual_finish_date_tbl(i)
                 ,p_estimated_start_date  => p_estimated_start_date_tbl(i)
                 ,p_estimated_finish_date => p_estimated_finish_date_tbl(i)
                 ,p_record_version_number => p_record_version_number_tbl(i)
                 ,p_task_status           => p_task_status_tbl(i)
                 ,p_actual_work_quantity  => p_actual_work_quantity_tbl(i)
                 ,p_pm_product_code       => p_pm_product_code
                 ,p_structure_type        => p_structure_type
                 ,p_planned_cost          => p_planned_cost_tbl(i)
                 ,p_planned_effort        => p_planned_effort_tbl(i)
                 ,p_actual_effort         => p_actual_effort_tbl(i)
                 ,p_est_remaining_effort  => p_est_remaining_effort_tbl(i)
                 ,p_structure_version_id  => p_structure_version_id_tbl(i)
                 ,p_eff_rollup_percent_complete => p_eff_rup_percent_complete_tbl(i)
                 ,x_resource_list_member_id => l_resource_list_member_id
                 ,x_return_status         => l_return_status
                 ,x_msg_count             => l_msg_count
                 ,x_msg_data              => l_msg_data
                );

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling UPDATE_TASK_PROGRESS l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;
        ELSIF (p_structure_type = 'WORKPLAN' AND p_object_type_tbl(i) = 'PA_ASSIGNMENTS' ) THEN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling UPDATE_ASSIGNMENT_PROGRESS', x_Log_Level=> 3);
            END IF;
                 PA_ASSIGNMENT_PROGRESS_PUB.UPDATE_ASSIGNMENT_PROGRESS(
                 p_api_version                   => l_api_version
                 ,p_init_msg_list                => p_init_msg_list
                 ,p_commit                       => p_commit
                 ,p_validate_only                => p_validate_only
                 ,p_validation_level             => p_validation_level
                 ,p_calling_module               => p_calling_module
                 ,p_action                       => l_action
                 ,p_bulk_load_flag               => p_rollup_entire_wbs_flag
                 ,p_progress_mode                => p_progress_mode
                 ,p_percent_complete_id          => p_percent_complete_id_tbl(i)
                 ,p_project_id                   => p_project_id_tbl(i)
                 ,p_object_id                    => p_object_id_tbl(i)
                 ,p_object_version_id            => p_object_version_id_tbl(i)
                 ,p_task_id                      => p_task_id_tbl(i)
                 ,p_as_of_date                   => p_as_of_date_tbl(i)
                 ,p_progress_comment             => p_progress_comment_tbl(i)
                 ,p_brief_overview               => p_brief_overview_tbl(i)
                 ,p_actual_start_date            => p_actual_start_date_tbl(i)
                 ,p_actual_finish_date           => p_actual_finish_date_tbl(i)
                 ,p_estimated_start_date         => p_estimated_start_date_tbl(i)
                 ,p_estimated_finish_date        => p_estimated_finish_date_tbl(i)
                 ,p_record_version_number        => p_record_version_number_tbl(i)
                 ,p_pm_product_code              => p_pm_product_code
                 ,p_structure_type               => p_structure_type
                 ,p_structure_version_id         => p_structure_version_id_tbl(i)
                 ,p_actual_cost_this_period      => p_actual_cost_this_period_tbl(i)
                 ,p_actual_effort_this_period    => p_act_eff_this_period_tbl(i)
                 ,p_rate_based_flag              => p_rate_based_flag_tbl(i)
                 ,p_resource_class_code          => p_resource_class_code_tbl(i)
                 ,p_actual_cost                  => p_actual_cost_tbl(i)
                 ,p_actual_effort                => p_actual_effort_tbl(i)
                 ,p_etc_cost_this_period         => p_etc_cost_tbl(i)
                 ,p_etc_effort_this_period       => p_est_remaining_effort_tbl(i)
                 ,p_txn_currency_code            => p_txn_currency_code_tbl(i)
                 ,p_rbs_element_id               => p_rbs_element_id_tbl(i)
                 ,p_resource_assignment_id       => p_resource_assignment_id_tbl(i)
                 ,p_scheduled_start_date         => p_scheduled_start_date_tbl(i)
                 ,p_scheduled_finish_date        => p_scheduled_finish_date_tbl(i)
                 ,x_return_status                => l_return_status
                 ,x_msg_count                    => l_msg_count
                 ,x_msg_data                     => l_msg_data
                 );
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling UPDATE_ASSIGNMENT_PROGRESS l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;
        ELSIF (p_structure_type = 'WORKPLAN' AND p_object_type_tbl(i) = 'PA_DELIVERABLES' ) THEN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling UPDATE_DELIVERABLE_PROGRESS', x_Log_Level=> 3);
            END IF;
            PA_DELIVERABLE_PROGRESS_PUB.UPDATE_DELIVERABLE_PROGRESS(
                   p_api_version                   => l_api_version
                  ,p_init_msg_list                => p_init_msg_list
                  ,p_commit                       => p_commit
                  ,p_validate_only                => p_validate_only
                  ,p_validation_level             => p_validation_level
                  ,p_calling_module               => p_calling_module
                  ,p_action                       => l_action
                  ,p_bulk_load_flag               => P_rollup_entire_wbs_flag
                  ,p_progress_mode                => p_progress_mode
                  ,p_percent_complete_id          => p_percent_complete_id_tbl(i)
                  ,p_project_id                   => p_project_id_tbl(i)
                  ,p_object_id                    => p_object_id_tbl(i)
                  ,p_object_type                  => p_object_type_tbl(i)
                  ,p_object_version_id            => p_object_version_id_tbl(i)
                  ,p_del_status                   => p_task_status_tbl(i)
                  ,p_task_id                      => p_task_id_tbl(i)
                  ,p_as_of_date                   => p_as_of_date_tbl(i)
                  ,p_percent_complete             => p_percent_complete_tbl(i)
                  ,p_progress_status_code         => p_progress_status_code_tbl(i)
                  ,p_progress_comment             => p_progress_comment_tbl(i)
                  ,p_brief_overview               => p_brief_overview_tbl(i)
                  ,p_actual_finish_date           => p_actual_finish_date_tbl(i)
                  ,p_record_version_number        => p_record_version_number_tbl(i)
                  ,p_pm_product_code              => p_pm_product_code
                  ,p_structure_type               => p_structure_type
                  ,x_return_status                => l_return_status
                  ,x_msg_count                    => l_msg_count
                  ,x_msg_data                     => l_msg_data
                 );
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling UPDATE_DELIVERABLE_PROGRESS l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;
        END IF;

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After individual APIs are called l_return_status='||l_return_status, x_Log_Level=> 3);
        END IF;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_msg_data := l_msg_data;
            x_return_status := 'E';
            x_msg_count := l_msg_count;
            RAISE  FND_API.G_EXC_ERROR;
        END IF;

        l_task_version_id_tbl.extend(1);
        l_object_type_tbl.extend(1);
        l_lowest_level_task_tbl.extend(1);
        l_structure_version_id_tbl.extend(1);
        l_task_id_tbl.extend(1);
        l_wp_rollup_method_tbl.extend(1);
        l_fin_rollup_method_tbl.extend(1);
        l_rollup_call_required_tbl.extend(1);
        l_mass_rlp_call_required_tbl.extend(1);
        l_budget_call_required_tbl.extend(1);

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After building plsql tables', x_Log_Level=> 3);
        END IF;


        IF (p_object_type_tbl(i) = 'PA_ASSIGNMENTS' OR p_object_type_tbl(i) = 'PA_DELIVERABLES'
           OR (p_structure_type = 'FINANCIAL' and p_object_type_tbl(i) = 'PA_TASKS'))
        THEN

            l_object_type_tbl(i) := 'PA_TASKS';
            l_task_version_id_tbl(i) := null;
            l_structure_version_id_tbl(i) := null;

            IF   p_object_type_tbl(i) = 'PA_DELIVERABLES' AND  (p_task_id_tbl(i) IS NOT NULL)THEN
                -- In deliverable case, we may not get task's structure version id. So we need to derive it.
                IF ( PA_PROGRESS_UTILS.get_system_task_status(PA_PROGRESS_UTILS.get_task_status( p_project_id_tbl(i), p_task_id_tbl(i))) <> 'CANCELLED' ) THEN
                    OPEN c_get_latest_pub_task_ver(p_task_id_tbl(i), p_project_id_tbl(i));
                    FETCH c_get_latest_pub_task_ver INTO l_task_version_id_tbl(i), l_structure_version_id_tbl(i);
                    CLOSE c_get_latest_pub_task_ver;
                END IF;

            ELSE
                OPEN c_get_task_version_id(p_task_id_tbl(i), p_project_id_tbl(i) ,p_structure_version_id_tbl(i));
                FETCH c_get_task_version_id INTO l_task_version_id_tbl(i), l_structure_version_id_tbl(i);
                CLOSE c_get_task_version_id;
            END IF;
            l_lowest_level_task_tbl(i) := PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(p_task_version_id => l_task_version_id_tbl(i) );
            l_task_id_tbl(i) := p_task_id_tbl(i);
        ELSE
            l_object_type_tbl(i) := p_object_type_tbl(i);
            l_task_version_id_tbl(i)   := p_object_version_id_tbl(i);
            l_lowest_level_task_tbl(i) := PA_PROJ_ELEMENTS_UTILS.IS_LOWEST_TASK(p_task_version_id => l_task_version_id_tbl(i) );
            l_structure_version_id_tbl(i) := p_structure_version_id_tbl(i);
            l_task_id_tbl(i) := p_object_id_tbl(i);
        END IF;

        l_wp_rollup_method_tbl(i) := l_rollup_method;
        l_fin_rollup_method_tbl(i) := l_rollup_method;
        l_rollup_call_required_tbl(i) := 'Y';
        l_budget_call_required_tbl(i) := 'Y';
        l_mass_rlp_call_required_tbl(i) := 'N';
    END LOOP ; -- FOR i in p_project_id_tbl.FIRST..p_project_id_tbl.LAST LOOP

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After First loop', x_Log_Level=> 3);
    END IF;


    -- loop through to find out whether mass rollup should be called or individual rollup
    FOR i in p_project_id_tbl.FIRST..p_project_id_tbl.LAST-1 LOOP
        IF l_task_version_id_tbl(i) IS NULL THEN
            l_rollup_call_required_tbl(i) := 'N';
            l_budget_call_required_tbl(i) := 'N';
        ELSE
            IF l_rollup_call_required_tbl(i) = 'Y'
            THEN
                FOR j in i+1..p_project_id_tbl.count LOOP
                    IF l_task_version_id_tbl(j) IS NULL THEN
                        l_rollup_call_required_tbl(j) := 'N';
                        l_budget_call_required_tbl(j) := 'N';
                    ELSE
                        IF p_project_id_tbl(i) = p_project_id_tbl(j) AND
                           p_as_of_date_tbl(i) = p_as_of_date_tbl(j) AND
                           l_structure_version_id_tbl(i) = l_structure_version_id_tbl(j)
                        THEN
                            l_budget_call_required_tbl(j) := 'N';
                            IF l_task_version_id_tbl(i) = l_task_version_id_tbl(j)
                            THEN
                                l_rollup_call_required_tbl(j) := 'N';
                            ELSE
                                l_mass_rlp_call_required_tbl(i) := 'Y';
                                l_rollup_call_required_tbl(i) := 'N';
                                l_rollup_call_required_tbl(j) := 'N';
                            END IF;
                        END IF;
                    END IF;
                END LOOP;
            END IF;
        END IF;
    END LOOP;

    IF g1_debug_mode  = 'Y' THEN
        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Second loop', x_Log_Level=> 3);
    END IF;

    l_last_project_id := null; -- MOAC Changes Bug 4698162

    FOR i in 1..l_task_version_id_tbl.count LOOP

	-- MOAC Changes Bug 4698162 Begin
        IF l_last_project_id <> p_project_id_tbl(i) THEN
            l_last_project_id :=  p_project_id_tbl(i);

	    OPEN c_get_org_id(p_project_id_tbl(i));
	    FETCH c_get_org_id INTO l_org_id;
	    CLOSE c_get_org_id;

	    IF NVL(PA_MOAC_UTILS.GET_CURRENT_ORG_ID,-1234) <>  l_org_id THEN
	        PA_MOAC_UTILS.SET_POLICY_CONTEXT('S', l_org_id);
	    END IF;
	END IF;
	-- MOAC Changes Bug 4698162 End

        IF l_action = 'SAVE' AND l_rollup_call_required_tbl(i) = 'Y' AND p_structure_type = 'WORKPLAN' THEN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling ASGN_DLV_TO_TASK_ROLLUP_PVT', x_Log_Level=> 3);
            END IF;

            PA_PROGRESS_PUB.ASGN_DLV_TO_TASK_ROLLUP_PVT(
                p_calling_module    => p_calling_module,
                p_project_id        => p_project_id_tbl(i),
                p_task_id       => l_task_id_tbl(i),
                p_task_version_id   => l_task_version_id_tbl(i),
                p_as_of_date        => p_as_of_date_tbl(i),
                p_structure_version_id  => l_structure_version_id_tbl(i),
                p_wp_rollup_method  => l_wp_rollup_method_tbl(i),
                x_return_status         => l_return_status,
                x_msg_count             => l_msg_count,
                x_msg_data              => l_msg_data);

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling ASGN_DLV_TO_TASK_ROLLUP_PVT l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
            END IF;
        END IF;
        IF l_action = 'PUBLISH' AND l_split_workplan =  'Y' AND l_budget_call_required_tbl(i) = 'Y'  AND p_structure_type = 'WORKPLAN'
        -- Removed for Bug 4416432 Issue 11 : AND p_object_type_tbl(i) <> 'PA_DELIVERABLES' -- Bug 4370820 : Added <> DELIVERABLES
        THEN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Check existnece of records in PA_PROG_ACT_BY_PERIOD_TEMP', x_Log_Level=> 3);
            END IF;
            BEGIN -- 4482295
                -- Bug 4416432 Issue 11 Added following Check
                l_check := 'N';
                SELECT 'Y'
                INTO l_check
                FROM DUAL
                WHERE EXISTS
                (SELECT 'xyz'
                 from PA_PROG_ACT_BY_PERIOD_TEMP
                 where project_id = p_project_id_tbl(i)
                 AND structure_version_id = l_structure_version_id_tbl(i));
             EXCEPTION -- 4482295
                WHEN NO_DATA_FOUND THEN
                    l_check := 'N';
                    IF g1_debug_mode  = 'Y' THEN
                        pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'No Records in PA_PROG_ACT_BY_PERIOD_TEMP', x_Log_Level=> 3);
                    END IF;
             END; -- 4482295

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'l_check='||l_check, x_Log_Level=> 3);
            END IF;

            IF l_check = 'Y' THEN
            BEGIN
                 Pa_Task_Pub1.G_CALL_PJI_ROLLUP := 'N';
                 -- This flag is set so that plan_update from MAINTAIN_ACTUAL_AMT_WRP
                 -- is not called. Actually it gets called but PJI code does not do anything.
                 IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling MAINTAIN_ACTUAL_AMT_WRP', x_Log_Level=> 3);
                 END IF;

                 l_project_ids.extend(1);
                 l_project_ids(1) := p_project_id_tbl(i);
                 l_struture_version_ids.extend(1);
                 l_struture_version_ids(1) := l_structure_version_id_tbl(i);
                 l_proj_thru_dates_tbl.extend(1);
                 l_proj_thru_dates_tbl(1) := p_as_of_date_tbl(i);
                 -- We can additionally check the existence of data before calling
                 PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP
                   (P_PROJECT_ID_TAB                   => l_project_ids,
                P_WP_STR_VERSION_ID_TAB            => l_struture_version_ids,
                P_ACTUALS_THRU_DATE                => l_proj_thru_dates_tbl,
                P_CALLING_CONTEXT                  => 'WP_PROGRESS',
                P_EXTRACTION_TYPE                  => 'INCREMENTAL',
                X_RETURN_STATUS                    => l_return_status,
                X_MSG_COUNT                        => l_msg_count,
                X_MSG_DATA                         => l_msg_data
                 );

                 IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling MAINTAIN_ACTUAL_AMT_WRP l_return_status='||l_return_status, x_Log_Level=> 3);
                 END IF;


                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                              p_msg_name       => l_msg_data);
                 x_msg_data := l_msg_data;
                 x_return_status := 'E';
                 x_msg_count := l_msg_count;
                 RAISE  FND_API.G_EXC_ERROR;
                END IF;
                Pa_Task_Pub1.G_CALL_PJI_ROLLUP := null ;
                delete from PA_PROG_ACT_BY_PERIOD_TEMP where project_id = p_project_id_tbl(i) AND structure_version_id = l_structure_version_id_tbl(i);
               EXCEPTION
             WHEN OTHERS THEN
                 fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                       p_procedure_name => 'UPDATE_PROGRESS_BULK',
                 p_error_text     => SUBSTRB('PA_FP_MAINTAIN_ACTUAL_PUB.MAINTAIN_ACTUAL_AMT_WRP:'||SQLERRM,1,120));
                 RAISE FND_API.G_EXC_ERROR;
               END;
               END IF; --l_check
        END IF;
        IF l_action = 'PUBLISH' AND l_budget_call_required_tbl(i) = 'Y'  AND p_structure_type = 'WORKPLAN' THEN
            BEGIN
                -- We can additionally check the existence of data before calling
                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling PLAN_UPDATE', x_Log_Level=> 3);
                END IF;

               l_plan_version_id := Pa_Fp_wp_gen_amt_utils.get_wp_version_id(
                                                          p_project_id => p_project_id_tbl(i),
                                                          p_plan_type_id => -1,
                                                          p_proj_str_ver_id => l_structure_version_id_tbl(i)) ;

                PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE ( p_plan_version_id => l_plan_version_id, --  4587145 : Added l_plan_version_id
                              x_msg_code => l_msg_code,
                              x_return_status => x_return_status);
                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling PLAN_UPDATE x_return_status='||x_return_status, x_Log_Level=> 3);
                END IF;

            EXCEPTION
                WHEN OTHERS THEN
                    fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                        p_procedure_name => 'UPDATE_PROGRESS_BULK',
                        p_error_text     => SUBSTRB('Call PJI_FM_XBS_ACCUM_MAINT.PLAN_UPDATE:'||SQLERRM,1,120));
                RAISE FND_API.G_EXC_ERROR;
            END;

            l_base_struct_ver_id := pa_project_structure_utils.get_baseline_struct_ver(p_project_id_tbl(i));

            IF (l_base_struct_ver_id = -1) THEN
                l_base_struct_ver_id := l_structure_version_id_tbl(i);
            END IF;

            -- 4392189 : Instead of populate_workplan_data call, POPULATE_PJI_TAB_FOR_PLAN
            PA_PROGRESS_PUB.POPULATE_PJI_TAB_FOR_PLAN(
                p_calling_module    => p_calling_module
                ,p_project_id           => p_project_id_tbl(i)
                ,p_structure_version_id => l_structure_version_id_tbl(i)
                ,p_baselined_str_ver_id => l_base_struct_ver_id
                ,p_program_rollup_flag  => 'Y'
                ,p_calling_context  => 'SUMMARIZE'
                ,p_as_of_date       => p_as_of_date_tbl(i) -- Fix for Bug # 4251406.
                ,x_return_status        => x_return_status
                ,x_msg_count            => x_msg_count
                ,x_msg_data             => x_msg_data
                );
            IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                RAISE  FND_API.G_EXC_ERROR;
            END IF;

        END IF;

        IF g1_debug_mode  = 'Y' THEN
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'l_mass_rlp_call_required_tbl(i) '||l_mass_rlp_call_required_tbl(i), x_Log_Level=> 3);
            pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'l_rollup_call_required_tbl(i) '||l_rollup_call_required_tbl(i), x_Log_Level=> 3);
        END IF;
        IF l_action = 'PUBLISH' AND l_mass_rlp_call_required_tbl(i) = 'Y'
        THEN
            -- It means it is the case of Mass Update Progress and AMG
            -- Hence do mass rollup
            -- We can give here some other value to l_count_of_rollup_calls
            -- like 5-6 so that after objects got exceeded that 5 then call Mass Rollup
            -- otherwsie individual rollup
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling Mass ROLLUP_PROGRESS_PVT', x_Log_Level=> 3);
            END IF;

            -- Bug 4218507 Begin
            FOR ii in 1..p_project_id_tbl.count LOOP
                IF p_project_id_tbl(ii) = p_project_id_tbl(i) THEN
                    l_unique_rec_exists := 'Y';
                    FOR jj in 1..l_mass_rollup_task_ver_id_tbl.count LOOP
                        IF l_task_version_id_tbl(ii) IS NOT NULL AND l_task_version_id_tbl(ii) = l_mass_rollup_task_ver_id_tbl(jj) THEN
                            l_unique_rec_exists := 'N';
                            exit;
                        END IF;
                    END LOOP;
                    IF l_unique_rec_exists = 'Y' AND l_task_version_id_tbl(ii) IS NOT NULL THEN
                        l_mass_rollup_task_ver_id_tbl.extend(1);
                        l_mass_rollup_task_ver_id_tbl(l_mass_rollup_task_ver_id_tbl.count) := l_task_version_id_tbl(ii);
                    END IF;
                END IF;
            END LOOP;
            -- Bug 4218507 Begin


            PA_PROGRESS_PVT.ROLLUP_PROGRESS_PVT(
                 p_init_msg_list             => p_init_msg_list
                ,p_commit                    => p_commit
                ,p_validate_only             => p_validate_only
                ,p_project_id                => p_project_id_tbl(i)
                ,p_structure_version_id      => l_structure_version_id_tbl(i)
                ,p_as_of_date                => p_as_of_date_tbl(i)
                ,p_structure_type        => p_structure_type
                ,p_rollup_entire_wbs         => 'Y'
                ,p_task_version_id_tbl       => l_mass_rollup_task_ver_id_tbl
                ,p_fin_rollup_method         => l_fin_rollup_method_tbl(i) -- Bug 4619000
                ,p_wp_rollup_method          => l_wp_rollup_method_tbl(i) -- Bug 4619000
                ,x_return_status             => x_return_status
                ,x_msg_count                 => x_msg_count
                ,x_msg_data                  => x_msg_data);
            -- Mass Rollup currently has limitation that it does not do future rollup too
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling Mass ROLLUP_PROGRESS_PVT x_return_status='||x_return_status, x_Log_Level=> 3);
            END IF;

            IF x_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                RAISE  FND_API.G_EXC_ERROR;
            END IF;
        ELSIF l_action = 'PUBLISH' AND l_rollup_call_required_tbl(i) = 'Y'
        THEN

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling Singular ROLLUP_PROGRESS_PVT', x_Log_Level=> 3);
            END IF;

            PA_PROGRESS_PVT.ROLLUP_PROGRESS_PVT(
             p_init_msg_list                => 'F'
            ,p_commit                       => 'F'
            ,p_validate_only                => 'F'
            ,p_calling_module       => p_calling_module
            ,p_progress_mode                => p_progress_mode
            ,p_project_id                   => p_project_id_tbl(i)
            ,P_OBJECT_TYPE                  => 'PA_TASKS'
            ,P_OBJECT_ID                    => l_task_id_tbl(i)
            ,p_object_version_id            => l_task_version_id_tbl(i)
            ,p_as_of_date                   => p_as_of_date_tbl(i)
            ,p_lowest_level_task            => nvl(l_lowest_level_task_tbl(i), 'N')
            ,p_process_whole_tree           => 'Y'
            ,p_structure_version_id         => l_structure_version_id_tbl(i)
            ,p_rollup_entire_wbs            => 'N'
            ,p_fin_rollup_method            => l_fin_rollup_method_tbl(i)
            ,p_wp_rollup_method             => l_wp_rollup_method_tbl(i)
            ,p_task_version_id              => l_task_version_id_tbl(i)
            ,p_structure_type               => p_structure_type
            ,x_return_status                => l_return_status
            ,x_msg_count                    => l_msg_count
            ,x_msg_data                     => l_msg_data);

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling Singular ROLLUP_PROGRESS_PVT l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
            END IF;


            IF p_progress_mode <> 'BACKDATED' THEN
                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling ROLLUP_FUTURE_PROGRESS_PVT', x_Log_Level=> 3);
                END IF;

                IF p_object_type_tbl(i) IN ('PA_ASSIGNMENTS', 'PA_DELIVERABLES') THEN
                    l_calling_mode := null;
                ELSE
                    l_calling_mode := 'FUTURE_ROLLUP';
                END IF;

                PA_PROGRESS_PVT.ROLLUP_FUTURE_PROGRESS_PVT(
                      p_project_id               => p_project_id_tbl(i)
                     ,P_OBJECT_TYPE              => l_object_type_tbl(i)
                     ,P_OBJECT_ID                => l_task_id
                     ,p_object_version_id        => l_task_version_id_tbl(i)
                     ,p_as_of_date               => p_as_of_date_tbl(i)
                     ,p_lowest_level_task        => NVL( l_lowest_level_task_tbl(i), 'N' )
                     ,p_calling_module           => p_calling_module
                     ,p_calling_mode         => l_calling_mode -- Bug 4097710
                     ,p_structure_type           => p_structure_type
                     ,p_structure_version_id     => l_structure_version_id_tbl(i)
                     ,p_fin_rollup_method        => l_fin_rollup_method_tbl(i)
                     ,p_wp_rollup_method         => l_wp_rollup_method_tbl(i)
                     ,x_return_status            => l_return_status
                     ,x_msg_count                => l_msg_count
                     ,x_msg_data                 => l_msg_data
                   );

                IF g1_debug_mode  = 'Y' THEN
                    pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling ROLLUP_FUTURE_PROGRESS_PVT l_return_status='||l_return_status, x_Log_Level=> 3);
                END IF;

                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    x_msg_data := l_msg_data;
                    x_return_status := 'E';
                    x_msg_count := l_msg_count;
                    RAISE  FND_API.G_EXC_ERROR;
                END IF;
            END IF;
        END IF;

        ---5466645

        FOR i in 1..l_task_version_id_tbl.count loop
        IF p_progress_mode <> 'BACKDATED' AND l_object_type_tbl(i) = 'PA_TASKS'
	   AND p_structure_type = 'WORKPLAN'   --maansari fpm changes
	THEN
          IF ( NVL(l_lowest_level_task_tbl(i), 'N' ) = 'Y' ) THEN
                   PA_TASK_PVT1.Update_Dates_To_All_Versions(
                       p_project_id           => p_project_id_tbl(i)
                      ,p_element_version_id       => l_task_version_id_tbl(i)
                      ,x_return_status               => l_return_status
                      ,x_msg_count                   => l_msg_count
                      ,x_msg_data                    => l_msg_data );
		IF l_return_status <> FND_API.G_RET_STS_SUCCESS
		THEN
		PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
			     p_msg_name       => l_msg_data);
			x_msg_data := l_msg_data;
			x_return_status := 'E';
			RAISE  FND_API.G_EXC_ERROR;
		END IF;

		BEGIN
                    -- Bug 8881708 - l_task_version_id is not initialized in this procedure
                    /*
			Select ppev1.proj_element_id
			into l_structure_id
			from pa_proj_element_versions ppev1, pa_proj_element_versions ppev2
			where ppev2.element_version_id = l_task_version_id
			and ppev2.project_id = ppev1.project_id
			and ppev2.parent_structure_version_id = ppev1.element_version_id;
                    */
                    l_structure_id := NULL;

                    SELECT pevs.proj_element_id
                    INTO   l_structure_id
                    FROM   pa_proj_elem_ver_structure pevs
                    WHERE  pevs.element_version_id = l_structure_version_id_tbl(i)
                    AND    pevs.project_id = p_project_id_tbl(i);

		EXCEPTION WHEN OTHERS THEN
			l_structure_id := -999;
		END;

		IF ((PA_WORKPLAN_ATTR_UTILS.CHECK_AUTO_DATE_SYNC_ENABLED(l_structure_id) = 'Y')
		AND
		(PA_Proj_Elements_Utils.CHECK_IS_FINANCIAL_TASK(p_task_id_tbl(i)) = 'Y')    --Bug 3784405  Satish
		AND
		(PA_PROJECT_STRUCTURE_UTILS.CHECK_SHARING_ENABLED(p_project_id_tbl(i)) = 'Y'))
		THEN
		--copy to transaction dates
			PA_PROJECT_DATES_PUB.COPY_PROJECT_DATES(
			p_validate_only => FND_API.G_FALSE
			,p_project_id => p_project_id_tbl(i)
			,x_return_status => x_return_status
			,x_msg_count => x_msg_count
			,x_msg_data => x_msg_data);
		END IF;
           END IF;
	END IF; ------ p_progress_mode <> backdated
      END LOOP;
        ---5466645
        -- Bug 4392189 : Uncommenting and chaning the code for program rollup

        IF l_action = 'PUBLISH' AND l_budget_call_required_tbl(i) = 'Y'  AND p_structure_type = 'WORKPLAN'  AND p_progress_mode <> 'BACKDATED' THEN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling program_rollup_pvt', x_Log_Level=> 3);
            END IF;

            pa_progress_pvt.program_rollup_pvt(
                         p_init_msg_list        => 'F'
                        ,p_commit               => 'F'
                        ,p_validate_only        => 'F'
                        ,p_project_id           => p_project_id_tbl(i)
                        ,p_as_of_date           => p_as_of_date_tbl(i)
                        ,p_structure_type       => p_structure_type
                        ,p_structure_ver_id     => l_structure_version_id_tbl(i)
                        ,x_return_status        => l_return_status
                        ,x_msg_count            => l_msg_count
                        ,x_msg_data             => l_msg_data);


            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling program_rollup_pvt l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;
            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
            END IF;

        END IF;

        IF l_action = 'PUBLISH'  AND p_progress_mode <> 'BACKDATED' AND p_structure_type = 'WORKPLAN'
        AND p_object_type_tbl(i) = 'PA_TASKS' AND l_rollup_call_required_tbl(i) = 'Y'
        THEN
            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'Calling update_link_proj_rollup_dates', x_Log_Level=> 3);
            END IF;

            pa_progress_pub.update_link_proj_rollup_dates(
             p_init_msg_list    => 'F'
            ,p_commit       => 'F'
            ,p_calling_module   => p_calling_module
            ,p_project_id       => p_project_id_tbl(i)
            ,p_task_id      => l_task_id_tbl(i)
            ,p_task_version_id  => l_task_version_id_tbl(i)
            ,p_as_of_date           => p_as_of_date_tbl(i)
            ,p_structure_version_id => l_structure_version_id_tbl(i)
            ,x_return_status        => l_return_status
            ,x_msg_count            => l_msg_count
            ,x_msg_data             => l_msg_data
            );

            IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.UPDATE_PROGRESS_BULK', x_Msg => 'After Calling update_link_proj_rollup_dates l_return_status='||l_return_status, x_Log_Level=> 3);
            END IF;

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
            END IF;
        END IF;
    END LOOP;

    IF (p_commit = FND_API.G_TRUE) THEN
        COMMIT;
    END IF;

EXCEPTION
    when FND_API.G_EXC_ERROR then
--      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_PROGRESS_BULK;
--      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;
      x_msg_count := fnd_msg_pub.count_msg;
    when FND_API.G_EXC_UNEXPECTED_ERROR then
--      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_PROGRESS_BULK;
--      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_PROGRESS_BULK',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      x_msg_count := fnd_msg_pub.count_msg;
    when OTHERS then
--      if p_commit = FND_API.G_TRUE then
         rollback to UPDATE_PROGRESS_BULK;
--      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'UPDATE_PROGRESS_BULK',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      x_msg_count := fnd_msg_pub.count_msg;
      raise;
END update_progress_bulk;

--  Bug 3994165 : Removing POPULATE_PRG_ACT_TEMP_TBL and  POPULATE_PRG_ACT_TBL_SINGLE
-- methods. They are not needed now.

-- Begin fix for Bug # 4262985.

PROCEDURE apply_lp_prog_on_cwv_wrp(
  p_api_version                 IN      NUMBER          :=1.0
 ,p_init_msg_list               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_commit                      IN      VARCHAR2        :=FND_API.G_FALSE
 ,p_validate_only               IN      VARCHAR2        :=FND_API.G_TRUE
 ,p_validation_level            IN      NUMBER          :=FND_API.G_VALID_LEVEL_FULL
 ,p_calling_module              IN      VARCHAR2        :='SELF_SERVICE'
 ,p_debug_mode                  IN      VARCHAR2        :='N'
 ,p_max_msg_count               IN      NUMBER          := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
 ,p_project_id                  IN      NUMBER
 ,p_working_str_version_id      IN      NUMBER
 ,x_return_status               OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
 ,x_msg_count                   OUT     NOCOPY NUMBER --File.Sql.39 bug 4440895
 ,x_msg_data                    OUT     NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
) IS

   l_api_name           CONSTANT   VARCHAR2(30)    := 'APPLY_LP_PROG_ON_CWV_WRP';
   l_api_version        CONSTANT   NUMBER          := p_api_version;
   l_user_id                       NUMBER          := FND_GLOBAL.USER_ID;
   l_login_id                      NUMBER          := FND_GLOBAL.LOGIN_ID;
   l_return_status                 VARCHAR2(1);
   l_msg_count                     NUMBER;
   l_msg_data                      VARCHAR2(250);
   l_msg_code                      VARCHAR2(12000);
BEGIN

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.init_err_stack ('PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP');
        END IF;

        IF (p_debug_mode = 'Y') THEN
                IF g1_debug_mode  = 'Y' THEN
                        pa_debug.debug('PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP');
                END IF;
        END IF;
        IF (p_commit = FND_API.G_TRUE) THEN
                savepoint APPLY_LP_PROG_ON_CWV_WRP;
        END IF;

        IF NOT FND_API.COMPATIBLE_API_CALL(l_api_version, p_api_version, l_api_name, g_pkg_name) then
               RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
        END IF;

        IF FND_API.TO_BOOLEAN(nvl(p_init_msg_list,FND_API.G_FALSE)) THEN
                FND_MSG_PUB.initialize;
        END IF;

        x_return_status := FND_API.G_RET_STS_SUCCESS;

        g1_debug_mode := NVL(FND_PROFILE.value_specific('PA_DEBUG_MODE',fnd_global.user_id,fnd_global.login_id,275,null,null), 'N');

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP', x_Msg => 'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP Start : Passed Parameters :', x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP', x_Msg => 'p_project_id='||p_project_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP', x_Msg => 'p_working_str_version_id='||p_working_str_version_id, x_Log_Level=> 3);
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP', x_Msg => 'Before calling PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG', x_Log_Level=> 3);
        END IF;
        -- 4392189 : Program Reporting Changes - Phase 2
    -- We do not have to set wbs_flag here. Bcoz depending on this flag, process_wbs_updates call wbs_maint API.
    /*
        PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG
          (
          p_calling_context       => p_calling_module
         ,p_project_id            => p_project_id
         ,p_structure_version_id  => p_working_str_version_id
         ,p_update_wbs_flag       => 'Y'
         ,x_return_status         => l_return_status
         ,x_msg_count             => l_msg_count
         ,x_msg_data              => l_msg_data);
     */

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP', x_Msg => 'Done with PA_PROJ_TASK_STRUC_PUB.SET_UPDATE_WBS_FLAG l_return_status='||l_return_status, x_Log_Level=> 3);
        END IF;


        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                p_msg_name       => l_msg_data);
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
        END IF;

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP', x_Msg => 'Before calling PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP', x_Log_Level=> 3);
        END IF;
        PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP(
             p_calling_context => 'APPLY_PROGRESS',
             p_project_id => p_project_id,
             p_structure_version_id => p_working_str_version_id,
             x_return_status => l_return_status,
             x_msg_count => l_msg_count,
             x_msg_data => l_msg_data
          );

        IF g1_debug_mode  = 'Y' THEN
                pa_debug.write(x_Module=>'PA_PROGRESS_PUB.APPLY_LP_PROG_ON_CWV_WRP', x_Msg => 'Done with PA_PROJ_TASK_STRUC_PUB.PROCESS_WBS_UPDATES_WRP l_return_status='||l_return_status, x_Log_Level=> 3);
        END IF;

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                PA_UTILS.ADD_MESSAGE(p_app_short_name => 'PA',
                p_msg_name       => l_msg_data);
                x_msg_data := l_msg_data;
                x_return_status := 'E';
                x_msg_count := l_msg_count;
                RAISE  FND_API.G_EXC_ERROR;
        END IF;


EXCEPTION
    when FND_API.G_EXC_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to APPLY_LP_PROG_ON_CWV_WRP;
      end if;
      x_return_status := FND_API.G_RET_STS_ERROR;

    when FND_API.G_EXC_UNEXPECTED_ERROR then
      if p_commit = FND_API.G_TRUE then
         rollback to APPLY_LP_PROG_ON_CWV_WRP;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'APPLY_LP_PROG_ON_CWV_WRP',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
    when OTHERS then
      if p_commit = FND_API.G_TRUE then
        rollback to APPLY_LP_PROG_ON_CWV;
      end if;
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
      fnd_msg_pub.add_exc_msg(p_pkg_name       => 'PA_PROGRESS_PUB',
                              p_procedure_name => 'APPLY_LP_PROG_ON_CWV_WRP',
                              p_error_text     => SUBSTRB(SQLERRM,1,120));
      raise;
END APPLY_LP_PROG_ON_CWV_WRP;

-- End fix for Bug # 4262985.

end PA_PROGRESS_PUB;

/
