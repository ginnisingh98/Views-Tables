--------------------------------------------------------
--  DDL for Package Body HZ_EXT_DATA_RULES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."HZ_EXT_DATA_RULES_PKG" AS
/* $Header: ARHEDRTB.pls 120.2 2005/10/30 03:52:07 appldev noship $ */

PROCEDURE INSERT_ROW (
  X_RULE_ID                         IN NUMBER,
  X_RULE_TYPE                       IN VARCHAR2,
  X_RULE_NAME                       IN VARCHAR2
) IS

  l_rowid                           ROWID := NULL;

  CURSOR c IS
    SELECT ROWID FROM HZ_EXT_DATA_RULES_TL
    WHERE RULE_ID = X_RULE_ID
    AND LANGUAGE = USERENV('LANG');

BEGIN

  INSERT INTO HZ_EXT_DATA_RULES_TL (
    CREATION_DATE,
    LAST_UPDATE_LOGIN,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    CREATED_BY,
    RULE_NAME,
    RULE_ID,
    RULE_TYPE,
    LANGUAGE,
    SOURCE_LANG
  ) SELECT
    SYSDATE,
    hz_utility_v2pub.last_update_login,
    SYSDATE,
    hz_utility_v2pub.last_updated_by,
    hz_utility_v2pub.created_by,
    X_RULE_NAME,
    X_RULE_ID,
    X_RULE_TYPE,
    L.LANGUAGE_CODE,
    USERENV('LANG')
  FROM FND_LANGUAGES L
  WHERE L.INSTALLED_FLAG IN ('I', 'B')
  AND NOT EXISTS
    (SELECT NULL
    FROM HZ_EXT_DATA_RULES_TL T
    WHERE T.RULE_ID = X_RULE_ID
    AND T.LANGUAGE = L.LANGUAGE_CODE);

  OPEN c;
  FETCH c INTO l_rowid;
  IF (c%NOTFOUND) THEN
    CLOSE c;
    RAISE NO_DATA_FOUND;
  END IF;
  CLOSE c;

END INSERT_ROW;

PROCEDURE LOCK_ROW (
  X_RULE_ID                         IN NUMBER,
  X_RULE_TYPE                       IN VARCHAR2,
  X_RULE_NAME                       IN VARCHAR2
) IS

  CURSOR c1 IS
    SELECT
      RULE_TYPE,
      RULE_NAME,
      DECODE(LANGUAGE, USERENV('LANG'), 'Y', 'N') BASELANG
    FROM HZ_EXT_DATA_RULES_TL
    WHERE RULE_ID = X_RULE_ID
    AND USERENV('LANG') IN (LANGUAGE, SOURCE_LANG)
    FOR UPDATE OF RULE_ID NOWAIT;

BEGIN

  FOR tlinfo IN c1 LOOP
    IF (tlinfo.BASELANG = 'Y') THEN
      IF (    ((tlinfo.RULE_NAME = X_RULE_NAME)
               OR ((tlinfo.RULE_NAME IS NULL) AND (X_RULE_NAME IS NULL)))
          AND ((tlinfo.RULE_TYPE = X_RULE_TYPE)
               OR ((tlinfo.RULE_TYPE IS NULL) AND (X_RULE_TYPE IS NULL)))
      ) THEN
        NULL;
      ELSE
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      END IF;
    END IF;
  END LOOP;
  RETURN;

END LOCK_ROW;

PROCEDURE UPDATE_ROW (
  X_RULE_ID                         IN NUMBER,
  X_RULE_NAME                       IN VARCHAR2
) IS
BEGIN

  UPDATE HZ_EXT_DATA_RULES_TL
  SET RULE_NAME = X_RULE_NAME,
      LAST_UPDATE_DATE = SYSDATE,
      LAST_UPDATED_BY = hz_utility_v2pub.last_updated_by,
      LAST_UPDATE_LOGIN = hz_utility_v2pub.last_update_login,
      SOURCE_LANG = USERENV('LANG')
  WHERE RULE_ID = X_RULE_ID
  AND USERENV('LANG') IN (LANGUAGE, SOURCE_LANG);

  IF (SQL%NOTFOUND) THEN
    RAISE NO_DATA_FOUND;
  END IF;

END UPDATE_ROW;

PROCEDURE DELETE_ROW (
  X_RULE_ID                         IN NUMBER
) IS
BEGIN
  DELETE FROM HZ_EXT_DATA_RULES_TL
  WHERE RULE_ID = X_RULE_ID;

  IF (SQL%NOTFOUND) THEN
    RAISE NO_DATA_FOUND;
  END IF;

END DELETE_ROW;

PROCEDURE ADD_LANGUAGE IS
BEGIN
  UPDATE HZ_EXT_DATA_RULES_TL T
  SET (
      RULE_NAME
    ) = (SELECT
      B.RULE_NAME
    FROM HZ_EXT_DATA_RULES_TL B
    WHERE B.RULE_ID = T.RULE_ID
    AND B.LANGUAGE = T.SOURCE_LANG)
  WHERE (
      T.RULE_ID,
      T.LANGUAGE
  ) IN (SELECT
      SUBT.RULE_ID,
      SUBT.LANGUAGE
    FROM HZ_EXT_DATA_RULES_TL SUBB, HZ_EXT_DATA_RULES_TL SUBT
    WHERE SUBB.RULE_ID = SUBT.RULE_ID
    AND SUBB.LANGUAGE = SUBT.SOURCE_LANG
    AND (SUBB.RULE_NAME <> SUBT.RULE_NAME
      OR (SUBB.RULE_NAME IS NULL AND SUBT.RULE_NAME IS NOT NULL)
      OR (SUBB.RULE_NAME is NOT NULL AND SUBT.RULE_NAME IS NULL)
  ));

  INSERT INTO HZ_EXT_DATA_RULES_TL (
    CREATION_DATE,
    LAST_UPDATE_LOGIN,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    CREATED_BY,
    RULE_NAME,
    RULE_ID,
    RULE_TYPE,
    LANGUAGE,
    SOURCE_LANG
  ) SELECT
    B.CREATION_DATE,
    B.LAST_UPDATE_LOGIN,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATED_BY,
    B.CREATED_BY,
    B.RULE_NAME,
    B.RULE_ID,
    B.RULE_TYPE,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  FROM HZ_EXT_DATA_RULES_TL B, FND_LANGUAGES L
  WHERE L.INSTALLED_FLAG in ('I', 'B')
  AND B.LANGUAGE = USERENV('LANG')
  AND NOT EXISTS
    (SELECT NULL
    FROM HZ_EXT_DATA_RULES_TL T
    WHERE T.RULE_ID = B.RULE_ID
    AND T.LANGUAGE = L.LANGUAGE_CODE);

END ADD_LANGUAGE;

END HZ_EXT_DATA_RULES_PKG;

/
