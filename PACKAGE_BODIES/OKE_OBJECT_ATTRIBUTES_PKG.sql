--------------------------------------------------------
--  DDL for Package Body OKE_OBJECT_ATTRIBUTES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."OKE_OBJECT_ATTRIBUTES_PKG" as
/* $Header: OKEOBATB.pls 120.1 2005/06/02 12:00:04 appldev  $ */
procedure INSERT_ROW (
  X_ROWID IN OUT NOCOPY /* file.sql.39 change */ VARCHAR2,
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_DATATYPE in VARCHAR2,
  X_SECURABLE_FLAG in VARCHAR2,
  X_QUERYABLE_FLAG in VARCHAR2,
  X_VIEW_COLUMN_FLAG in VARCHAR2,
  X_FORM_ITEM_FLAG in VARCHAR2,
  X_ATTRIBUTE_GROUP_CODE in VARCHAR2,
  X_PARENT_ATTRIBUTE_CODE in VARCHAR2,
  X_ATTRIBUTE_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from OKE_OBJECT_ATTRIBUTES_B
    where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
    and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE
    ;
begin
  insert into OKE_OBJECT_ATTRIBUTES_B (
    DATABASE_OBJECT_NAME,
    ATTRIBUTE_CODE,
    DATATYPE,
    SECURABLE_FLAG,
    QUERYABLE_FLAG,
    VIEW_COLUMN_FLAG,
    FORM_ITEM_FLAG,
    ATTRIBUTE_GROUP_CODE,
    PARENT_ATTRIBUTE_CODE,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_DATABASE_OBJECT_NAME,
    X_ATTRIBUTE_CODE,
    X_DATATYPE,
    X_SECURABLE_FLAG,
    X_QUERYABLE_FLAG,
    X_VIEW_COLUMN_FLAG,
    X_FORM_ITEM_FLAG,
    X_ATTRIBUTE_GROUP_CODE,
    X_PARENT_ATTRIBUTE_CODE,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  insert into OKE_OBJECT_ATTRIBUTES_TL (
    DATABASE_OBJECT_NAME,
    ATTRIBUTE_CODE,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    ATTRIBUTE_NAME,
    DESCRIPTION,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_DATABASE_OBJECT_NAME,
    X_ATTRIBUTE_CODE,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_ATTRIBUTE_NAME,
    X_DESCRIPTION,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from OKE_OBJECT_ATTRIBUTES_TL T
    where T.DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
    and T.ATTRIBUTE_CODE = X_ATTRIBUTE_CODE
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_DATATYPE in VARCHAR2,
  X_SECURABLE_FLAG in VARCHAR2,
  X_QUERYABLE_FLAG in VARCHAR2,
  X_VIEW_COLUMN_FLAG in VARCHAR2,
  X_FORM_ITEM_FLAG in VARCHAR2,
  X_ATTRIBUTE_GROUP_CODE in VARCHAR2,
  X_PARENT_ATTRIBUTE_CODE in VARCHAR2,
  X_ATTRIBUTE_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2
) is
  cursor c is select
      DATATYPE,
      SECURABLE_FLAG,
      QUERYABLE_FLAG,
      VIEW_COLUMN_FLAG,
      FORM_ITEM_FLAG,
      ATTRIBUTE_GROUP_CODE,
      PARENT_ATTRIBUTE_CODE
    from OKE_OBJECT_ATTRIBUTES_B
    where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
    and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE
    for update of DATABASE_OBJECT_NAME nowait;
  recinfo c%rowtype;

  cursor c1 is select
      ATTRIBUTE_NAME,
      DESCRIPTION,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from OKE_OBJECT_ATTRIBUTES_TL
    where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
    and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of DATABASE_OBJECT_NAME nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    (recinfo.DATATYPE = X_DATATYPE)
      AND ((recinfo.SECURABLE_FLAG = X_SECURABLE_FLAG)
           OR ((recinfo.SECURABLE_FLAG is null) AND (X_SECURABLE_FLAG is null)))
      AND ((recinfo.QUERYABLE_FLAG = X_QUERYABLE_FLAG)
           OR ((recinfo.QUERYABLE_FLAG is null) AND (X_QUERYABLE_FLAG is null)))
      AND (recinfo.VIEW_COLUMN_FLAG = X_VIEW_COLUMN_FLAG)
      AND ((recinfo.FORM_ITEM_FLAG = X_FORM_ITEM_FLAG)
           OR ((recinfo.FORM_ITEM_FLAG is null) AND (X_FORM_ITEM_FLAG is null)))
      AND ((recinfo.ATTRIBUTE_GROUP_CODE = X_ATTRIBUTE_GROUP_CODE)
           OR ((recinfo.ATTRIBUTE_GROUP_CODE is null) AND (X_ATTRIBUTE_GROUP_CODE is null)))
      AND ((recinfo.PARENT_ATTRIBUTE_CODE = X_PARENT_ATTRIBUTE_CODE)
           OR ((recinfo.PARENT_ATTRIBUTE_CODE is null) AND (X_PARENT_ATTRIBUTE_CODE is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    ((tlinfo.ATTRIBUTE_NAME = X_ATTRIBUTE_NAME)
               OR ((tlinfo.ATTRIBUTE_NAME is null) AND (X_ATTRIBUTE_NAME is null)))
          AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
               OR ((tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_DATATYPE in VARCHAR2,
  X_SECURABLE_FLAG in VARCHAR2,
  X_QUERYABLE_FLAG in VARCHAR2,
  X_VIEW_COLUMN_FLAG in VARCHAR2,
  X_FORM_ITEM_FLAG in VARCHAR2,
  X_ATTRIBUTE_GROUP_CODE in VARCHAR2,
  X_PARENT_ATTRIBUTE_CODE in VARCHAR2,
  X_ATTRIBUTE_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update OKE_OBJECT_ATTRIBUTES_B set
    DATATYPE = X_DATATYPE,
    SECURABLE_FLAG = X_SECURABLE_FLAG,
    QUERYABLE_FLAG = X_QUERYABLE_FLAG,
    VIEW_COLUMN_FLAG = X_VIEW_COLUMN_FLAG,
    FORM_ITEM_FLAG = X_FORM_ITEM_FLAG,
    ATTRIBUTE_GROUP_CODE = X_ATTRIBUTE_GROUP_CODE,
    PARENT_ATTRIBUTE_CODE = X_PARENT_ATTRIBUTE_CODE,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
  and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update OKE_OBJECT_ATTRIBUTES_TL set
    ATTRIBUTE_NAME = X_ATTRIBUTE_NAME,
    DESCRIPTION = X_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
  and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_ATTRIBUTE_CODE in VARCHAR2
) is
begin
  delete from OKE_OBJECT_ATTRIBUTES_TL
  where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
  and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from OKE_OBJECT_ATTRIBUTES_B
  where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
  and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from OKE_OBJECT_ATTRIBUTES_TL T
  where not exists
    (select NULL
    from OKE_OBJECT_ATTRIBUTES_B B
    where B.DATABASE_OBJECT_NAME = T.DATABASE_OBJECT_NAME
    and B.ATTRIBUTE_CODE = T.ATTRIBUTE_CODE
    );

  update OKE_OBJECT_ATTRIBUTES_TL T set (
      ATTRIBUTE_NAME,
      DESCRIPTION
    ) = (select
      B.ATTRIBUTE_NAME,
      B.DESCRIPTION
    from OKE_OBJECT_ATTRIBUTES_TL B
    where B.DATABASE_OBJECT_NAME = T.DATABASE_OBJECT_NAME
    and B.ATTRIBUTE_CODE = T.ATTRIBUTE_CODE
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.DATABASE_OBJECT_NAME,
      T.ATTRIBUTE_CODE,
      T.LANGUAGE
  ) in (select
      SUBT.DATABASE_OBJECT_NAME,
      SUBT.ATTRIBUTE_CODE,
      SUBT.LANGUAGE
    from OKE_OBJECT_ATTRIBUTES_TL SUBB, OKE_OBJECT_ATTRIBUTES_TL SUBT
    where SUBB.DATABASE_OBJECT_NAME = SUBT.DATABASE_OBJECT_NAME
    and SUBB.ATTRIBUTE_CODE = SUBT.ATTRIBUTE_CODE
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.ATTRIBUTE_NAME <> SUBT.ATTRIBUTE_NAME
      or (SUBB.ATTRIBUTE_NAME is null and SUBT.ATTRIBUTE_NAME is not null)
      or (SUBB.ATTRIBUTE_NAME is not null and SUBT.ATTRIBUTE_NAME is null)
      or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
      or (SUBB.DESCRIPTION is null and SUBT.DESCRIPTION is not null)
      or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
  ));

  insert into OKE_OBJECT_ATTRIBUTES_TL (
    DATABASE_OBJECT_NAME,
    ATTRIBUTE_CODE,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    ATTRIBUTE_NAME,
    DESCRIPTION,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.DATABASE_OBJECT_NAME,
    B.ATTRIBUTE_CODE,
    B.CREATION_DATE,
    B.CREATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_LOGIN,
    B.ATTRIBUTE_NAME,
    B.DESCRIPTION,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from OKE_OBJECT_ATTRIBUTES_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from OKE_OBJECT_ATTRIBUTES_TL T
    where T.DATABASE_OBJECT_NAME = B.DATABASE_OBJECT_NAME
    and T.ATTRIBUTE_CODE = B.ATTRIBUTE_CODE
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end OKE_OBJECT_ATTRIBUTES_PKG;

/
