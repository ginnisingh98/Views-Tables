--------------------------------------------------------
--  DDL for Package Body PA_PAXEXADJ_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PA_PAXEXADJ_XMLP_PKG" AS
/* $Header: PAXEXADJB.pls 120.0 2008/01/02 11:27:35 krreddy noship $ */
  FUNCTION GET_COVER_PAGE_VALUES RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (FALSE);
  END GET_COVER_PAGE_VALUES;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    DECLARE
      INIT_FAILURE EXCEPTION;
      P_PROJECT_NUMBER VARCHAR2(25);
      P_TASK_NUMBER VARCHAR2(25);
      P_EMPLOYEE_NAME VARCHAR2(240);
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      C_PROJECT_ID := PROJECT_ID;
      C_TASK_ID := TASK_ID;
      C_PERSON_ID := PERSON_ID;
      C_START_ACTIVITY_DATE := TO_CHAR(START_ACTIVITY_DATE,'DD-MON-YY');
      C_END_ACTIVITY_DATE := TO_CHAR(END_ACTIVITY_DATE,'DD-MON-YY');
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
      /*SRW.USER_EXIT('FND GETPROFILE
                    NAME="PA_DEBUG_MODE"
                    FIELD=":P_debug_mode"
                    PRINT_ERROR=N')*/NULL;
      IF (GET_COMPANY_NAME <> TRUE) THEN
        RAISE INIT_FAILURE;
      END IF;
      SELECT
        SEGMENT1
      INTO P_PROJECT_NUMBER
      FROM
        PA_PROJECTS
      WHERE PROJECT_ID = C_PROJECT_ID;
      C_PROJECT_NUMBER := P_PROJECT_NUMBER;
      IF (TASK_ID IS NOT NULL) THEN
        SELECT
          TASK_NUMBER
        INTO P_TASK_NUMBER
        FROM
          PA_TASKS
        WHERE TASK_ID = C_TASK_ID;
        C_TASK_NUMBER := P_TASK_NUMBER;
      END IF;
      IF (PERSON_ID IS NOT NULL) THEN
        SELECT
          FULL_NAME
        INTO P_EMPLOYEE_NAME
        FROM
          PER_PEOPLE_F
        WHERE PERSON_ID = C_PERSON_ID
          AND sysdate between EFFECTIVE_START_DATE
          AND NVL(EFFECTIVE_END_DATE
           ,SYSDATE + 1)
          AND ( EMPLOYEE_NUMBER is not null
        OR NPW_NUMBER is not null );
        C_EMPLOYEE_NAME := P_EMPLOYEE_NAME;
      END IF;
      IF (NO_DATA_FOUND_FUNC <> TRUE) THEN
        RAISE INIT_FAILURE;
      END IF;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        IF (NO_DATA_FOUND_FUNC <> TRUE) THEN
          RAISE INIT_FAILURE;
        END IF;
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION GET_COMPANY_NAME RETURN BOOLEAN IS
    L_NAME GL_SETS_OF_BOOKS.NAME%TYPE;
  BEGIN
    SELECT
      GL.NAME
    INTO L_NAME
    FROM
      GL_SETS_OF_BOOKS GL,
      PA_IMPLEMENTATIONS PI
    WHERE GL.SET_OF_BOOKS_ID = PI.SET_OF_BOOKS_ID;
    C_COMPANY_NAME_HEADER := L_NAME;
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (FALSE);
  END GET_COMPANY_NAME;

  FUNCTION NO_DATA_FOUND_FUNC RETURN BOOLEAN IS
    MESSAGE_NAME VARCHAR2(80);
  BEGIN
    SELECT
      MEANING
    INTO MESSAGE_NAME
    FROM
      PA_LOOKUPS
    WHERE LOOKUP_TYPE = 'MESSAGE'
      AND LOOKUP_CODE = 'NO_DATA_FOUND';
    C_NO_DATA_FOUND := SUBSTR(MESSAGE_NAME,4,14);
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (FALSE);
  END NO_DATA_FOUND_FUNC;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION C_COMPANY_NAME_HEADER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_COMPANY_NAME_HEADER;
  END C_COMPANY_NAME_HEADER_P;

  FUNCTION C_NO_DATA_FOUND_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_NO_DATA_FOUND;
  END C_NO_DATA_FOUND_P;

  FUNCTION C_PROJECT_NUMBER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_PROJECT_NUMBER;
  END C_PROJECT_NUMBER_P;

  FUNCTION C_TASK_NUMBER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_TASK_NUMBER;
  END C_TASK_NUMBER_P;

  FUNCTION C_EMPLOYEE_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_EMPLOYEE_NAME;
  END C_EMPLOYEE_NAME_P;

END PA_PAXEXADJ_XMLP_PKG;


/
