--------------------------------------------------------
--  DDL for Package Body ZX_SRVC_TYP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."ZX_SRVC_TYP_PKG" AS
/* $Header: zxifsrvctypspkgb.pls 120.246.12010000.46 2010/06/02 10:04:56 ssohal ship $ */
/* ======================================================================*
 | Global Data Types                                                     |
 * ======================================================================*/

G_PKG_NAME              CONSTANT VARCHAR2(30) := 'ZX_SRVC_TYP_PKG';
G_CURRENT_RUNTIME_LEVEL CONSTANT NUMBER       := FND_LOG.G_CURRENT_RUNTIME_LEVEL;
G_LEVEL_UNEXPECTED      CONSTANT NUMBER       := FND_LOG.LEVEL_UNEXPECTED;
G_LEVEL_ERROR           CONSTANT NUMBER       := FND_LOG.LEVEL_ERROR;
G_LEVEL_EXCEPTION       CONSTANT NUMBER       := FND_LOG.LEVEL_EXCEPTION;
G_LEVEL_EVENT           CONSTANT NUMBER       := FND_LOG.LEVEL_EVENT;
G_LEVEL_PROCEDURE       CONSTANT NUMBER       := FND_LOG.LEVEL_PROCEDURE;
G_LEVEL_STATEMENT       CONSTANT NUMBER       := FND_LOG.LEVEL_STATEMENT;
G_MODULE_NAME           CONSTANT VARCHAR2(30) := 'ZX.PLSQL.ZX_SRVC_TYP_PKG.';

G_LINES_PER_FETCH       CONSTANT  NUMBER:= 1000;
G_MAX_LINES_PER_FETCH   CONSTANT  NUMBER:= 1000000;


TYPE tax_prof_id_tbl_type is table of NUMBER index by VARCHAR2(100);
p_party_tax_prof_id_tbl  tax_prof_id_tbl_type;
p_site_tax_prof_id_tbl   tax_prof_id_tbl_type;

TYPE l_ptnr_loc_rec_type IS RECORD(
  EVENT_CLASS_MAPPING_ID       NUMBER_tbl_type_1,
  TRX_ID                       NUMBER_tbl_type_1,
  TRX_LINE_ID                  NUMBER_tbl_type_1,
  TRX_LEVEL_TYPE               VARCHAR2_30_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE1      VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE1     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE2      VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE2     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE3      VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE3     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE4      VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE4     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE5      VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE5     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE6      VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE6     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE7      VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE7     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE8      VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE8     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE9      VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE9     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_TYPE10     VARCHAR2_240_tbl_type,
  SHIP_TO_GEOGRAPHY_VALUE10    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE1    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE1   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE2    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE2   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE3    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE3   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE4    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE4   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE5    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE5   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE6    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE6   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE7    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE7   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE8    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE8   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE9    VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE9   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_TYPE10   VARCHAR2_240_tbl_type,
  SHIP_FROM_GEOGRAPHY_VALUE10  VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE1          VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE1         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE2          VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE2         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE3          VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE3         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE4          VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE4         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE5          VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE5         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE6          VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE6         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE7          VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE7         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE8          VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE8         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE9          VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE9         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_TYPE10         VARCHAR2_240_tbl_type,
  POA_GEOGRAPHY_VALUE10        VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE1          VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE1         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE2          VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE2         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE3          VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE3         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE4          VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE4         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE5          VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE5         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE6          VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE6         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE7          VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE7         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE8          VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE8         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE9          VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE9         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_TYPE10         VARCHAR2_240_tbl_type,
  POO_GEOGRAPHY_VALUE10        VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE1      VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE1     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE2      VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE2     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE3      VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE3     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE4      VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE4     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE5      VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE5     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE6      VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE6     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE7      VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE7     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE8      VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE8     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE9      VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE9     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_TYPE10     VARCHAR2_240_tbl_type,
  BILL_TO_GEOGRAPHY_VALUE10    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE1    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE1   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE2    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE2   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE3    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE3   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE4    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE4   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE5    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE5   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE6    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE6   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE7    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE7   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE8    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE8   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE9    VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE9   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_TYPE10   VARCHAR2_240_tbl_type,
  BILL_FROM_GEOGRAPHY_VALUE10  VARCHAR2_240_tbl_type,
  SHIP_TO_PARTY_NUMBER         VARCHAR2_30_tbl_type,
  SHIP_TO_PARTY_NAME           VARCHAR2_240_tbl_type,
  SHIP_FROM_PARTY_NUMBER       VARCHAR2_30_tbl_type,
  SHIP_FROM_PARTY_NAME         VARCHAR2_240_tbl_type,
  BILL_TO_PARTY_NUMBER         VARCHAR2_30_tbl_type,
  BILL_TO_PARTY_NAME           VARCHAR2_240_tbl_type,
  BILL_FROM_PARTY_NUMBER       VARCHAR2_30_tbl_type,
  BILL_FROM_PARTY_NAME         VARCHAR2_240_tbl_type
);

l_ptnr_loc_tbl l_ptnr_loc_rec_type;

TYPE l_addr_rec_type IS RECORD(
 ADDRESS1 VARCHAR2(100),
 ADDRESS2 VARCHAR2(100),
 ADDRESS3 VARCHAR2(100),
 ADDRESS4 VARCHAR2(100)
);

TYPE l_ptnr_addr_tbl_type IS TABLE OF l_addr_rec_type INDEX BY VARCHAR2(100);
l_ptnr_addr_tbl  l_ptnr_addr_tbl_type;


-- caching for the bug #6721441 --
TYPE l_trx_id_rec_type IS RECORD(
     event_class_map_id NUMBER,
     trx_id             NUMBER,
     trx_line_id        NUMBER,
     trx_level_type     VARCHAR2(100)
);

TYPE l_trx_id_tbl_type IS TABLE OF l_trx_id_rec_type INDEX BY VARCHAR2(100);
l_trx_id_tbl l_trx_id_tbl_type;

-- End caching for the bug #6721441 --

-- Bug 7519403 - Added the following in the spec
/*
TYPE l_line_level_rec_type IS RECORD(
     trx_id                     NUMBER
);

TYPE l_line_level_tbl_type IS TABLE OF l_line_level_rec_type INDEX BY BINARY_INTEGER;
l_line_level_tbl l_line_level_tbl_type;
*/

TYPE l_party_rec_type is RECORD(
 party_name   VARCHAR2(240),
 party_number VARCHAR2(30)
);
TYPE l_party_tbl_type is TABLE OF l_party_rec_type index by VARCHAR2(100);
party_id_tbl    l_party_tbl_type;

-- Caching for Establishment Id Added for Bug8688391
TYPE l_estb_for_entity_rec_type is RECORD(
 legal_entity_id   NUMBER,
 establishment_id  NUMBER
);
TYPE l_estb_for_entity_tbl_type is TABLE OF l_estb_for_entity_rec_type index by BINARY_INTEGER;
l_main_estb_for_entity_tbl    l_estb_for_entity_tbl_type;

-- Moved the variable declarition to default_tax_attrs_wrapper() procedure Bug 8859101

--l_default_taxation_country  VARCHAR2(2);
--l_doc_sub_type              VARCHAR2(240);

--Bug 8541137
--l_tax_invoice_date ZX_LINES_DET_FACTORS.TAX_INVOICE_DATE%TYPE;

--Bug 8859101 ends

/* Bug 5013598 */

TYPE l_poo_info_rec_type is RECORD(
 poo_party_id    NUMBER,
 poo_location_id NUMBER
);
TYPE l_poo_info_tbl_type is TABLE OF l_poo_info_rec_type index by VARCHAR2(300);
poo_info_tbl    l_poo_info_tbl_type;

/* The composite key of the table poo_info_tbl consists of following columns.
 source_name     VARCHAR2(08),        -- Source could be 'SALESREP' or 'RESOURCE'
 source_id       NUMBER,              -- Source id salesrep_id ('SALESREP') or resource_id ('RESOURCE')
 trx_date        DATE,
*/
/* Bug 5013598 */


/* Cursor for GTT version of calculate tax*/
  Cursor lines(p_event_class_rec ZX_API_PUB.event_class_rec_type) is
  SELECT  /*+ INDEX(HEADER ZX_TRX_HEADERS_GT_U1) INDEX(TRXLINES ZX_TRANSACTION_LINES_GT_U1 */
          header.INTERNAL_ORGANIZATION_ID           ,
          header.APPLICATION_ID                     ,
          header.ENTITY_CODE                        ,
          header.EVENT_CLASS_CODE                   ,
          header.EVENT_TYPE_CODE                    ,
          header.TRX_ID                             ,
          trxlines.TRX_LEVEL_TYPE                   ,
          trxlines.TRX_LINE_ID                      ,
          trxlines.LINE_LEVEL_ACTION                ,
          nvl(trxlines.LINE_CLASS,p_event_class_rec.EVENT_CLASS_CODE),  --Bugfix 4938879
          header.TRX_DATE                           ,
          header.TRX_DOC_REVISION                   ,
          header.LEDGER_ID                          ,
          header.TRX_CURRENCY_CODE                  ,
          header.CURRENCY_CONVERSION_DATE           ,
          header.CURRENCY_CONVERSION_RATE           ,
          header.CURRENCY_CONVERSION_TYPE           ,
          header.MINIMUM_ACCOUNTABLE_UNIT           ,
          header.PRECISION                          ,
          trxlines.TRX_LINE_CURRENCY_CODE           ,
          trxlines.TRX_LINE_CURRENCY_CONV_DATE      ,
          trxlines.TRX_LINE_CURRENCY_CONV_RATE      ,
          trxlines.TRX_LINE_CURRENCY_CONV_TYPE      ,
          trxlines.TRX_LINE_MAU                     ,
          trxlines.TRX_LINE_PRECISION               ,
          trxlines.TRX_SHIPPING_DATE                ,
          trxlines.TRX_RECEIPT_DATE                 ,
          header.LEGAL_ENTITY_ID                    ,
          header.ROUNDING_SHIP_TO_PARTY_ID          ,
          header.ROUNDING_SHIP_FROM_PARTY_ID        ,
          header.ROUNDING_BILL_TO_PARTY_ID          ,
          header.ROUNDING_BILL_FROM_PARTY_ID        ,
          header.RNDG_SHIP_TO_PARTY_SITE_ID         ,
          header.RNDG_SHIP_FROM_PARTY_SITE_ID       ,
          header.RNDG_BILL_TO_PARTY_SITE_ID         ,
          header.RNDG_BILL_FROM_PARTY_SITE_ID       ,
          header.ESTABLISHMENT_ID                   ,
          trxlines.TRX_LINE_TYPE                    ,
          trxlines.TRX_LINE_DATE                    ,
          trxlines.TRX_BUSINESS_CATEGORY            ,
          trxlines.LINE_INTENDED_USE                ,
          trxlines.USER_DEFINED_FISC_CLASS          ,
          trxlines.LINE_AMT                         ,
          trxlines.TRX_LINE_QUANTITY                ,
          trxlines.UNIT_PRICE                       ,
          trxlines.EXEMPT_CERTIFICATE_NUMBER        ,
          trxlines.EXEMPT_REASON                    ,
          trxlines.CASH_DISCOUNT                    ,
          trxlines.VOLUME_DISCOUNT                  ,
          trxlines.TRADING_DISCOUNT                 ,
          trxlines.TRANSFER_CHARGE                  ,
          trxlines.TRANSPORTATION_CHARGE            ,
          trxlines.INSURANCE_CHARGE                 ,
          trxlines.OTHER_CHARGE                     ,
          trxlines.PRODUCT_ID                       ,
          trxlines.PRODUCT_FISC_CLASSIFICATION      ,
          trxlines.PRODUCT_ORG_ID                   ,
          trxlines.UOM_CODE                         ,
          trxlines.PRODUCT_TYPE                     ,
          trxlines.PRODUCT_CODE                     ,
          trxlines.PRODUCT_CATEGORY                 ,
          trxlines.TRX_SIC_CODE                     ,
          trxlines.FOB_POINT                        ,
          trxlines.SHIP_TO_PARTY_ID                 ,
          trxlines.SHIP_FROM_PARTY_ID               ,
          trxlines.POA_PARTY_ID                     ,
          trxlines.POO_PARTY_ID                     ,
          trxlines.BILL_TO_PARTY_ID                 ,
          trxlines.BILL_FROM_PARTY_ID               ,
          trxlines.MERCHANT_PARTY_ID                ,
          trxlines.SHIP_TO_PARTY_SITE_ID            ,
          trxlines.SHIP_FROM_PARTY_SITE_ID          ,
          trxlines.POA_PARTY_SITE_ID                ,
          trxlines.POO_PARTY_SITE_ID                ,
          trxlines.BILL_TO_PARTY_SITE_ID            ,
          trxlines.BILL_FROM_PARTY_SITE_ID          ,
          trxlines.SHIP_TO_LOCATION_ID              ,
          trxlines.SHIP_FROM_LOCATION_ID            ,
          trxlines.POA_LOCATION_ID                  ,
          trxlines.POO_LOCATION_ID                  ,
          trxlines.BILL_TO_LOCATION_ID              ,
          trxlines.BILL_FROM_LOCATION_ID            ,
          trxlines.ACCOUNT_CCID                     ,
          trxlines.ACCOUNT_STRING                   ,
          trxlines.MERCHANT_PARTY_COUNTRY           ,
          header.RECEIVABLES_TRX_TYPE_ID            ,
          trxlines.REF_DOC_APPLICATION_ID           ,
          trxlines.REF_DOC_ENTITY_CODE              ,
          trxlines.REF_DOC_EVENT_CLASS_CODE         ,
          trxlines.REF_DOC_TRX_ID                   ,
          trxlines.REF_DOC_LINE_ID                  ,
          trxlines.REF_DOC_LINE_QUANTITY            ,
          header.RELATED_DOC_APPLICATION_ID         ,
          header.RELATED_DOC_ENTITY_CODE            ,
          header.RELATED_DOC_EVENT_CLASS_CODE       ,
          header.RELATED_DOC_TRX_ID                 ,
          header.RELATED_DOC_NUMBER                 ,
          header.RELATED_DOC_DATE                   ,
          trxlines.APPLIED_FROM_APPLICATION_ID      ,
          trxlines.APPLIED_FROM_EVENT_CLASS_CODE    ,
          trxlines.APPLIED_FROM_ENTITY_CODE         ,
          trxlines.APPLIED_FROM_TRX_ID              ,
          trxlines.APPLIED_FROM_LINE_ID             ,
          trxlines.APPLIED_FROM_TRX_NUMBER          ,
          trxlines.ADJUSTED_DOC_APPLICATION_ID      ,
          trxlines.ADJUSTED_DOC_EVENT_CLASS_CODE    ,
          trxlines.ADJUSTED_DOC_ENTITY_CODE         ,
          trxlines.ADJUSTED_DOC_TRX_ID              ,
          trxlines.ADJUSTED_DOC_LINE_ID             ,
          trxlines.ADJUSTED_DOC_NUMBER              ,
          trxlines.ADJUSTED_DOC_DATE                ,
          trxlines.APPLIED_TO_APPLICATION_ID        ,
          trxlines.APPLIED_TO_ENTITY_CODE           ,
          trxlines.APPLIED_TO_EVENT_CLASS_CODE      ,
          trxlines.APPLIED_TO_TRX_ID                ,
          trxlines.APPLIED_TO_TRX_LINE_ID           ,
          trxlines.TRX_ID_LEVEL2                    ,
          trxlines.TRX_ID_LEVEL3                    ,
          trxlines.TRX_ID_LEVEL4                    ,
          trxlines.TRX_ID_LEVEL5                    ,
          trxlines.TRX_ID_LEVEL6                    ,
          header.TRX_NUMBER                         ,
          header.TRX_DESCRIPTION                    ,
          trxlines.TRX_LINE_NUMBER                  ,
          trxlines.TRX_LINE_DESCRIPTION             ,
          trxlines.PRODUCT_DESCRIPTION              ,
          trxlines.TRX_WAYBILL_NUMBER               ,
          header.TRX_COMMUNICATED_DATE              ,
          trxlines.TRX_LINE_GL_DATE                 ,
          header.BATCH_SOURCE_ID                    ,
          header.BATCH_SOURCE_NAME                  ,
          header.DOC_SEQ_ID                         ,
          header.DOC_SEQ_NAME                       ,
          header.DOC_SEQ_VALUE                      ,
          header.TRX_DUE_DATE                       ,
          header.TRX_TYPE_DESCRIPTION               ,
          trxlines.MERCHANT_PARTY_NAME              ,
          trxlines.MERCHANT_PARTY_DOCUMENT_NUMBER   ,
          trxlines.MERCHANT_PARTY_REFERENCE         ,
          trxlines.MERCHANT_PARTY_TAXPAYER_ID       ,
          trxlines.MERCHANT_PARTY_TAX_REG_NUMBER    ,
          trxlines.PAYING_PARTY_ID                  ,
          trxlines.OWN_HQ_PARTY_ID                  ,
          trxlines.TRADING_HQ_PARTY_ID              ,
          trxlines.POI_PARTY_ID                     ,
          trxlines.POD_PARTY_ID                     ,
          trxlines.TITLE_TRANSFER_PARTY_ID          ,
          trxlines.PAYING_PARTY_SITE_ID             ,
          trxlines.OWN_HQ_PARTY_SITE_ID             ,
          trxlines.TRADING_HQ_PARTY_SITE_ID         ,
          trxlines.POI_PARTY_SITE_ID                ,
          trxlines.POD_PARTY_SITE_ID                ,
          trxlines.TITLE_TRANSFER_PARTY_SITE_ID     ,
          trxlines.PAYING_LOCATION_ID               ,
          trxlines.OWN_HQ_LOCATION_ID               ,
          trxlines.TRADING_HQ_LOCATION_ID           ,
          trxlines.POC_LOCATION_ID                  ,
          trxlines.POI_LOCATION_ID                  ,
          trxlines.POD_LOCATION_ID                  ,
          trxlines.TITLE_TRANSFER_LOCATION_ID       ,
          trxlines.ASSESSABLE_VALUE                 ,
          trxlines.ASSET_FLAG                       ,
          trxlines.ASSET_NUMBER                     ,
          trxlines.ASSET_ACCUM_DEPRECIATION         ,
          trxlines.ASSET_TYPE                       ,
          trxlines.ASSET_COST                       ,
          trxlines.NUMERIC1                         ,
          trxlines.NUMERIC2                         ,
          trxlines.NUMERIC3                         ,
          trxlines.NUMERIC4                         ,
          trxlines.NUMERIC5                         ,
          trxlines.NUMERIC6                         ,
          trxlines.NUMERIC7                         ,
          trxlines.NUMERIC8                         ,
          trxlines.NUMERIC9                         ,
          trxlines.NUMERIC10                        ,
          trxlines.CHAR1                            ,
          trxlines.CHAR2                            ,
          trxlines.CHAR3                            ,
          trxlines.CHAR4                            ,
          trxlines.CHAR5                            ,
          trxlines.CHAR6                            ,
          trxlines.CHAR7                            ,
          trxlines.CHAR8                            ,
          trxlines.CHAR9                            ,
          trxlines.CHAR10                           ,
          trxlines.DATE1                            ,
          trxlines.DATE2                            ,
          trxlines.DATE3                            ,
          trxlines.DATE4                            ,
          trxlines.DATE5                            ,
          trxlines.DATE6                            ,
          trxlines.DATE7                            ,
          trxlines.DATE8                            ,
          trxlines.DATE9                            ,
          trxlines.DATE10                           ,
          header.FIRST_PTY_ORG_ID                   ,
          header.TAX_EVENT_CLASS_CODE               ,
          header.TAX_EVENT_TYPE_CODE                ,
          header.DOC_EVENT_STATUS                   ,
          header.RDNG_SHIP_TO_PTY_TX_PROF_ID        ,
          header.RDNG_SHIP_FROM_PTY_TX_PROF_ID      ,
          header.RDNG_BILL_TO_PTY_TX_PROF_ID        ,
          header.RDNG_BILL_FROM_PTY_TX_PROF_ID      ,
          header.RDNG_SHIP_TO_PTY_TX_P_ST_ID        ,
          header.RDNG_SHIP_FROM_PTY_TX_P_ST_ID      ,
          header.RDNG_BILL_TO_PTY_TX_P_ST_ID        ,
          header.RDNG_BILL_FROM_PTY_TX_P_ST_ID      ,
          trxlines.SHIP_TO_PARTY_TAX_PROF_ID        ,
          trxlines.SHIP_FROM_PARTY_TAX_PROF_ID      ,
          trxlines.POA_PARTY_TAX_PROF_ID            ,
          trxlines.POO_PARTY_TAX_PROF_ID            ,
          trxlines.PAYING_PARTY_TAX_PROF_ID         ,
          trxlines.OWN_HQ_PARTY_TAX_PROF_ID         ,
          trxlines.TRADING_HQ_PARTY_TAX_PROF_ID     ,
          trxlines.POI_PARTY_TAX_PROF_ID            ,
          trxlines.POD_PARTY_TAX_PROF_ID            ,
          trxlines.BILL_TO_PARTY_TAX_PROF_ID        ,
          trxlines.BILL_FROM_PARTY_TAX_PROF_ID      ,
          trxlines.TITLE_TRANS_PARTY_TAX_PROF_ID    ,
          trxlines.SHIP_TO_SITE_TAX_PROF_ID         ,
          trxlines.SHIP_FROM_SITE_TAX_PROF_ID       ,
          trxlines.POA_SITE_TAX_PROF_ID             ,
          trxlines.POO_SITE_TAX_PROF_ID             ,
          trxlines.PAYING_SITE_TAX_PROF_ID          ,
          trxlines.OWN_HQ_SITE_TAX_PROF_ID          ,
          trxlines.TRADING_HQ_SITE_TAX_PROF_ID      ,
          trxlines.POI_SITE_TAX_PROF_ID             ,
          trxlines.POD_SITE_TAX_PROF_ID             ,
          trxlines.BILL_TO_SITE_TAX_PROF_ID         ,
          trxlines.BILL_FROM_SITE_TAX_PROF_ID       ,
          trxlines.TITLE_TRANS_SITE_TAX_PROF_ID     ,
          trxlines.MERCHANT_PARTY_TAX_PROF_ID       ,
          to_number(null) HQ_ESTB_PARTY_TAX_PROF_ID,
          header.DOCUMENT_SUB_TYPE                  ,
          header.SUPPLIER_TAX_INVOICE_NUMBER        ,
          header.SUPPLIER_TAX_INVOICE_DATE          ,
          header.SUPPLIER_EXCHANGE_RATE             ,
          header.TAX_INVOICE_DATE                   ,
          header.TAX_INVOICE_NUMBER                 ,
          trxlines.LINE_AMT_INCLUDES_TAX_FLAG       ,
          header.QUOTE_FLAG                         ,
          header.DEFAULT_TAXATION_COUNTRY           ,
          trxlines.HISTORICAL_FLAG                  ,
          header.INTERNAL_ORG_LOCATION_ID           ,
          trxlines.CTRL_HDR_TX_APPL_FLAG            ,
          header.CTRL_TOTAL_HDR_TX_AMT              ,
          trxlines.CTRL_TOTAL_LINE_TX_AMT           ,
          null DIST_LEVEL_ACTION                    ,
          to_number(null) ADJUSTED_DOC_TASK_DIST_ID ,
          to_number(null) APPLIED_FROM_TAX_DIST_ID  ,
          to_number(null) TASK_ID                   ,
          to_number(null) AWARD_ID                  ,
          to_number(null) PROJECT_ID                ,
          null EXPENDITURE_TYPE                     ,
          to_number(null) EXPENDITURE_ORGANIZATION_ID ,
          null EXPENDITURE_ITEM_DATE                ,
          to_number(null) TRX_LINE_DIST_AMT         ,
          to_number(null) TRX_LINE_DIST_QUANTITY    ,
          to_number(null) REF_DOC_CURR_CONV_RATE    ,
          to_number(null) ITEM_DIST_NUMBER          ,
          to_number(null) REF_DOC_DIST_ID           ,
          to_number(null) TRX_LINE_DIST_TAX_AMT     ,
          to_number(null) TRX_LINE_DIST_ID          ,
          to_number(null) APPLIED_FROM_DIST_ID      ,
          to_number(null) ADJUSTED_DOC_DIST_ID      ,
          to_number(null) OVERRIDING_RECOVERY_RATE  ,
          trxlines.INPUT_TAX_CLASSIFICATION_CODE    ,
          trxlines.OUTPUT_TAX_CLASSIFICATION_CODE   ,
          header.PORT_OF_ENTRY_CODE                 ,
          header.TAX_REPORTING_FLAG                 ,
          null TAX_AMT_INCLUDED_FLAG                ,
          null COMPOUNDING_TAX_FLAG                 ,
          header.SHIP_THIRD_PTY_ACCT_ID             ,
          header.BILL_THIRD_PTY_ACCT_ID             ,
          header.SHIP_THIRD_PTY_ACCT_SITE_ID        ,
          header.BILL_THIRD_PTY_ACCT_SITE_ID        ,
          header.SHIP_TO_CUST_ACCT_SITE_USE_ID      ,
          header.BILL_TO_CUST_ACCT_SITE_USE_ID      ,
          header.PROVNL_TAX_DETERMINATION_DATE      ,
          trxlines.START_EXPENSE_DATE               ,
          header.TRX_BATCH_ID                       ,
          header.APPLIED_TO_TRX_NUMBER              ,
          trxlines.SOURCE_APPLICATION_ID            ,
          trxlines.SOURCE_ENTITY_CODE               ,
          trxlines.SOURCE_EVENT_CLASS_CODE          ,
          trxlines.SOURCE_TRX_ID                    ,
          trxlines.SOURCE_LINE_ID                   ,
          trxlines.SOURCE_TRX_LEVEL_TYPE            ,
          trxlines.REF_DOC_TRX_LEVEL_TYPE           ,
          trxlines.APPLIED_TO_TRX_LEVEL_TYPE        ,
          trxlines.APPLIED_FROM_TRX_LEVEL_TYPE      ,
          trxlines.ADJUSTED_DOC_TRX_LEVEL_TYPE      ,
          header.APPLICATION_DOC_STATUS             ,
          header.HDR_TRX_USER_KEY1                  ,
          header.HDR_TRX_USER_KEY2                  ,
          header.HDR_TRX_USER_KEY3                  ,
          header.HDR_TRX_USER_KEY4                  ,
          header.HDR_TRX_USER_KEY5                  ,
          header.HDR_TRX_USER_KEY6                  ,
          trxlines.LINE_TRX_USER_KEY1               ,
          trxlines.LINE_TRX_USER_KEY2               ,
          trxlines.LINE_TRX_USER_KEY3               ,
          trxlines.LINE_TRX_USER_KEY4               ,
          trxlines.LINE_TRX_USER_KEY5               ,
          trxlines.LINE_TRX_USER_KEY6               ,
          trxlines.SOURCE_TAX_LINE_ID               ,
          trxlines.EXEMPTION_CONTROL_FLAG           ,
          to_number(null) REVERSED_APPLN_ID         ,
          null REVERSED_ENTITY_CODE                 ,
          null REVERSED_EVNT_CLS_CODE               ,
          to_number(null) REVERSED_TRX_ID           ,
          null REVERSED_TRX_LEVEL_TYPE              ,
          to_number(null) REVERSED_TRX_LINE_ID      ,
          trxlines.EXEMPT_REASON_CODE               ,
          trxlines.INTERFACE_ENTITY_CODE            ,
          trxlines.INTERFACE_LINE_ID                ,
          trxlines.DEFAULTING_ATTRIBUTE1            ,
          trxlines.DEFAULTING_ATTRIBUTE2            ,
          trxlines.DEFAULTING_ATTRIBUTE3            ,
          trxlines.DEFAULTING_ATTRIBUTE4            ,
          trxlines.DEFAULTING_ATTRIBUTE5            ,
          trxlines.DEFAULTING_ATTRIBUTE6            ,
          trxlines.DEFAULTING_ATTRIBUTE7            ,
          trxlines.DEFAULTING_ATTRIBUTE8            ,
          trxlines.DEFAULTING_ATTRIBUTE9            ,
          trxlines.DEFAULTING_ATTRIBUTE10           ,
          trxlines.HISTORICAL_TAX_CODE_ID           ,
          nvl(trxlines.SHIP_THIRD_PTY_ACCT_ID,header.SHIP_THIRD_PTY_ACCT_ID),
          nvl(trxlines.BILL_THIRD_PTY_ACCT_ID,header.BILL_THIRD_PTY_ACCT_ID),
          nvl(trxlines.SHIP_THIRD_PTY_ACCT_SITE_ID,header.SHIP_THIRD_PTY_ACCT_SITE_ID),
          nvl(trxlines.BILL_THIRD_PTY_ACCT_SITE_ID,header.BILL_THIRD_PTY_ACCT_SITE_ID),
          nvl(trxlines.SHIP_TO_CUST_ACCT_SITE_USE_ID,header.SHIP_TO_CUST_ACCT_SITE_USE_ID),
          nvl(trxlines.BILL_TO_CUST_ACCT_SITE_USE_ID,header.BILL_TO_CUST_ACCT_SITE_USE_ID),
          nvl(trxlines.RECEIVABLES_TRX_TYPE_ID,header.RECEIVABLES_TRX_TYPE_ID),
          trxlines.GLOBAL_ATTRIBUTE_CATEGORY,
          trxlines.GLOBAL_ATTRIBUTE1,
          to_number(null) TOTAL_INC_TAX_AMT     ,
          trxlines.USER_UPD_DET_FACTORS_FLAG,
          decode(p_event_class_rec.tax_event_type_code,'UPDATE',
             decode(trxlines.line_level_action,'CREATE','I',
                                               'CREATE_TAX_ONLY','I',
                                               'APPLY_FROM','I',
                                               'UNAPPLY_FROM','U',
                                               'LINE_INFO_TAX_ONLY','I',
                                               'CREATE_WITH_TAX','I',
                                               'ALLOCATE_TAX_ONLY_ADJUSTMENT','I',
                                               'COPY_AND_CREATE','I',
                                               'RECORD_WITH_NO_TAX','I',
                                               'NO_CHANGE','U',
                                               'UPDATE','U',
                                               'DISCARD','U',
                                               'CANCEL','U',
                                               'SYNCHRONIZE','U',
                                               'DELETE','U') ,
	 	    null)INSERT_UPDATE_FLAG
      /* The update insert flag is to determine the records that need to be inserted/updated
	  into zx_lines_det_factors depending on the line_level_action for tax event type UPDATE*/
      FROM ZX_TRANSACTION_LINES_GT trxlines,
           ZX_TRX_HEADERS_GT header
      WHERE header.application_id = p_event_class_rec.application_id
        AND header.entity_code = p_event_class_rec.entity_code
        AND header.event_class_code = p_event_class_rec.event_class_code
        AND header.trx_id = p_event_class_rec.trx_id
        AND trxlines.application_id = header.application_id
        AND trxlines.entity_code = header.entity_code
        AND trxlines.event_class_code = header.event_class_code
        AND trxlines.trx_id = header.trx_id
	  ORDER BY insert_update_flag desc;
	  /*ordering by insert_update_flag will fetch all the records to be updated first
	  into collection followed by the records to be inserted*/

-- bug fix 5417887 begin
/* Cursor for GTT version of calculate tax as well as import_document_with_tax AI */
  Cursor c_lines(p_event_class_rec ZX_API_PUB.event_class_rec_type) is
  SELECT  /*+ INDEX(HEADER ZX_TRX_HEADERS_GT_U1) INDEX(TRXLINES ZX_TRANSACTION_LINES_GT_U1) */
          header.INTERNAL_ORGANIZATION_ID           ,
          header.APPLICATION_ID                     ,
          header.ENTITY_CODE                        ,
          header.EVENT_CLASS_CODE                   ,
          header.EVENT_TYPE_CODE                    ,
          header.TRX_ID                             ,
          trxlines.TRX_LEVEL_TYPE                   ,
          trxlines.TRX_LINE_ID                      ,
          trxlines.LINE_LEVEL_ACTION                ,
          nvl(trxlines.LINE_CLASS,p_event_class_rec.EVENT_CLASS_CODE),  --Bugfix 4938879
          header.TRX_DATE                           ,
          header.TRX_DOC_REVISION                   ,
          header.LEDGER_ID                          ,
          header.TRX_CURRENCY_CODE                  ,
          header.CURRENCY_CONVERSION_DATE           ,
          header.CURRENCY_CONVERSION_RATE           ,
          header.CURRENCY_CONVERSION_TYPE           ,
          header.MINIMUM_ACCOUNTABLE_UNIT           ,
          header.PRECISION                          ,
          trxlines.TRX_LINE_CURRENCY_CODE           ,
          trxlines.TRX_LINE_CURRENCY_CONV_DATE      ,
          trxlines.TRX_LINE_CURRENCY_CONV_RATE      ,
          trxlines.TRX_LINE_CURRENCY_CONV_TYPE      ,
          trxlines.TRX_LINE_MAU                     ,
          trxlines.TRX_LINE_PRECISION               ,
          trxlines.TRX_SHIPPING_DATE                ,
          trxlines.TRX_RECEIPT_DATE                 ,
          header.LEGAL_ENTITY_ID                    ,
          header.ROUNDING_SHIP_TO_PARTY_ID          ,
          header.ROUNDING_SHIP_FROM_PARTY_ID        ,
          header.ROUNDING_BILL_TO_PARTY_ID          ,
          header.ROUNDING_BILL_FROM_PARTY_ID        ,
          header.RNDG_SHIP_TO_PARTY_SITE_ID         ,
          header.RNDG_SHIP_FROM_PARTY_SITE_ID       ,
          header.RNDG_BILL_TO_PARTY_SITE_ID         ,
          header.RNDG_BILL_FROM_PARTY_SITE_ID       ,
          header.ESTABLISHMENT_ID                   ,
          trxlines.TRX_LINE_TYPE                    ,
          trxlines.TRX_LINE_DATE                    ,
          trxlines.TRX_BUSINESS_CATEGORY            ,
          trxlines.LINE_INTENDED_USE                ,
          trxlines.USER_DEFINED_FISC_CLASS          ,
          trxlines.LINE_AMT                         ,
          trxlines.TRX_LINE_QUANTITY                ,
          trxlines.UNIT_PRICE                       ,
          trxlines.EXEMPT_CERTIFICATE_NUMBER        ,
          trxlines.EXEMPT_REASON                    ,
          trxlines.CASH_DISCOUNT                    ,
          trxlines.VOLUME_DISCOUNT                  ,
          trxlines.TRADING_DISCOUNT                 ,
          trxlines.TRANSFER_CHARGE                  ,
          trxlines.TRANSPORTATION_CHARGE            ,
          trxlines.INSURANCE_CHARGE                 ,
          trxlines.OTHER_CHARGE                     ,
          trxlines.PRODUCT_ID                       ,
          trxlines.PRODUCT_FISC_CLASSIFICATION      ,
          trxlines.PRODUCT_ORG_ID                   ,
          trxlines.UOM_CODE                         ,
          trxlines.PRODUCT_TYPE                     ,
          trxlines.PRODUCT_CODE                     ,
          trxlines.PRODUCT_CATEGORY                 ,
          trxlines.TRX_SIC_CODE                     ,
          trxlines.FOB_POINT                        ,
          trxlines.SHIP_TO_PARTY_ID                 ,
          trxlines.SHIP_FROM_PARTY_ID               ,
          trxlines.POA_PARTY_ID                     ,
          trxlines.POO_PARTY_ID                     ,
          trxlines.BILL_TO_PARTY_ID                 ,
          trxlines.BILL_FROM_PARTY_ID               ,
          trxlines.MERCHANT_PARTY_ID                ,
          trxlines.SHIP_TO_PARTY_SITE_ID            ,
          trxlines.SHIP_FROM_PARTY_SITE_ID          ,
          trxlines.POA_PARTY_SITE_ID                ,
          trxlines.POO_PARTY_SITE_ID                ,
          trxlines.BILL_TO_PARTY_SITE_ID            ,
          trxlines.BILL_FROM_PARTY_SITE_ID          ,
          trxlines.SHIP_TO_LOCATION_ID              ,
          trxlines.SHIP_FROM_LOCATION_ID            ,
          trxlines.POA_LOCATION_ID                  ,
          trxlines.POO_LOCATION_ID                  ,
          trxlines.BILL_TO_LOCATION_ID              ,
          trxlines.BILL_FROM_LOCATION_ID            ,
          trxlines.ACCOUNT_CCID                     ,
          trxlines.ACCOUNT_STRING                   ,
          trxlines.MERCHANT_PARTY_COUNTRY           ,
          header.RECEIVABLES_TRX_TYPE_ID            ,
          trxlines.REF_DOC_APPLICATION_ID           ,
          trxlines.REF_DOC_ENTITY_CODE              ,
          trxlines.REF_DOC_EVENT_CLASS_CODE         ,
          trxlines.REF_DOC_TRX_ID                   ,
          trxlines.REF_DOC_LINE_ID                  ,
          trxlines.REF_DOC_LINE_QUANTITY            ,
          header.RELATED_DOC_APPLICATION_ID         ,
          header.RELATED_DOC_ENTITY_CODE            ,
          header.RELATED_DOC_EVENT_CLASS_CODE       ,
          header.RELATED_DOC_TRX_ID                 ,
          header.RELATED_DOC_NUMBER                 ,
          header.RELATED_DOC_DATE                   ,
          trxlines.APPLIED_FROM_APPLICATION_ID      ,
          trxlines.APPLIED_FROM_EVENT_CLASS_CODE    ,
          trxlines.APPLIED_FROM_ENTITY_CODE         ,
          trxlines.APPLIED_FROM_TRX_ID              ,
          trxlines.APPLIED_FROM_LINE_ID             ,
          trxlines.APPLIED_FROM_TRX_NUMBER          ,
          trxlines.ADJUSTED_DOC_APPLICATION_ID      ,
          trxlines.ADJUSTED_DOC_EVENT_CLASS_CODE    ,
          trxlines.ADJUSTED_DOC_ENTITY_CODE         ,
          trxlines.ADJUSTED_DOC_TRX_ID              ,
          trxlines.ADJUSTED_DOC_LINE_ID             ,
          trxlines.ADJUSTED_DOC_NUMBER              ,
          trxlines.ADJUSTED_DOC_DATE                ,
          trxlines.APPLIED_TO_APPLICATION_ID        ,
          trxlines.APPLIED_TO_ENTITY_CODE           ,
          trxlines.APPLIED_TO_EVENT_CLASS_CODE      ,
          trxlines.APPLIED_TO_TRX_ID                ,
          trxlines.APPLIED_TO_TRX_LINE_ID           ,
          trxlines.TRX_ID_LEVEL2                    ,
          trxlines.TRX_ID_LEVEL3                    ,
          trxlines.TRX_ID_LEVEL4                    ,
          trxlines.TRX_ID_LEVEL5                    ,
          trxlines.TRX_ID_LEVEL6                    ,
          header.TRX_NUMBER                         ,
          header.TRX_DESCRIPTION                    ,
          trxlines.TRX_LINE_NUMBER                  ,
          trxlines.TRX_LINE_DESCRIPTION             ,
          trxlines.PRODUCT_DESCRIPTION              ,
          trxlines.TRX_WAYBILL_NUMBER               ,
          header.TRX_COMMUNICATED_DATE              ,
          trxlines.TRX_LINE_GL_DATE                 ,
          header.BATCH_SOURCE_ID                    ,
          header.BATCH_SOURCE_NAME                  ,
          header.DOC_SEQ_ID                         ,
          header.DOC_SEQ_NAME                       ,
          header.DOC_SEQ_VALUE                      ,
          header.TRX_DUE_DATE                       ,
          header.TRX_TYPE_DESCRIPTION               ,
          trxlines.MERCHANT_PARTY_NAME              ,
          trxlines.MERCHANT_PARTY_DOCUMENT_NUMBER   ,
          trxlines.MERCHANT_PARTY_REFERENCE         ,
          trxlines.MERCHANT_PARTY_TAXPAYER_ID       ,
          trxlines.MERCHANT_PARTY_TAX_REG_NUMBER    ,
          trxlines.PAYING_PARTY_ID                  ,
          trxlines.OWN_HQ_PARTY_ID                  ,
          trxlines.TRADING_HQ_PARTY_ID              ,
          trxlines.POI_PARTY_ID                     ,
          trxlines.POD_PARTY_ID                     ,
          trxlines.TITLE_TRANSFER_PARTY_ID          ,
          trxlines.PAYING_PARTY_SITE_ID             ,
          trxlines.OWN_HQ_PARTY_SITE_ID             ,
          trxlines.TRADING_HQ_PARTY_SITE_ID         ,
          trxlines.POI_PARTY_SITE_ID                ,
          trxlines.POD_PARTY_SITE_ID                ,
          trxlines.TITLE_TRANSFER_PARTY_SITE_ID     ,
          trxlines.PAYING_LOCATION_ID               ,
          trxlines.OWN_HQ_LOCATION_ID               ,
          trxlines.TRADING_HQ_LOCATION_ID           ,
          trxlines.POC_LOCATION_ID                  ,
          trxlines.POI_LOCATION_ID                  ,
          trxlines.POD_LOCATION_ID                  ,
          trxlines.TITLE_TRANSFER_LOCATION_ID       ,
          trxlines.ASSESSABLE_VALUE                 ,
          trxlines.ASSET_FLAG                       ,
          trxlines.ASSET_NUMBER                     ,
          trxlines.ASSET_ACCUM_DEPRECIATION         ,
          trxlines.ASSET_TYPE                       ,
          trxlines.ASSET_COST                       ,
          trxlines.NUMERIC1                         ,
          trxlines.NUMERIC2                         ,
          trxlines.NUMERIC3                         ,
          trxlines.NUMERIC4                         ,
          trxlines.NUMERIC5                         ,
          trxlines.NUMERIC6                         ,
          trxlines.NUMERIC7                         ,
          trxlines.NUMERIC8                         ,
          trxlines.NUMERIC9                         ,
          trxlines.NUMERIC10                        ,
          trxlines.CHAR1                            ,
          trxlines.CHAR2                            ,
          trxlines.CHAR3                            ,
          trxlines.CHAR4                            ,
          trxlines.CHAR5                            ,
          trxlines.CHAR6                            ,
          trxlines.CHAR7                            ,
          trxlines.CHAR8                            ,
          trxlines.CHAR9                            ,
          trxlines.CHAR10                           ,
          trxlines.DATE1                            ,
          trxlines.DATE2                            ,
          trxlines.DATE3                            ,
          trxlines.DATE4                            ,
          trxlines.DATE5                            ,
          trxlines.DATE6                            ,
          trxlines.DATE7                            ,
          trxlines.DATE8                            ,
          trxlines.DATE9                            ,
          trxlines.DATE10                           ,
          header.FIRST_PTY_ORG_ID                   ,
          header.TAX_EVENT_CLASS_CODE               ,
          header.TAX_EVENT_TYPE_CODE                ,
          header.DOC_EVENT_STATUS                   ,
          header.RDNG_SHIP_TO_PTY_TX_PROF_ID        ,
          header.RDNG_SHIP_FROM_PTY_TX_PROF_ID      ,
          header.RDNG_BILL_TO_PTY_TX_PROF_ID        ,
          header.RDNG_BILL_FROM_PTY_TX_PROF_ID      ,
          header.RDNG_SHIP_TO_PTY_TX_P_ST_ID        ,
          header.RDNG_SHIP_FROM_PTY_TX_P_ST_ID      ,
          header.RDNG_BILL_TO_PTY_TX_P_ST_ID        ,
          header.RDNG_BILL_FROM_PTY_TX_P_ST_ID      ,
          trxlines.SHIP_TO_PARTY_TAX_PROF_ID        ,
          trxlines.SHIP_FROM_PARTY_TAX_PROF_ID      ,
          trxlines.POA_PARTY_TAX_PROF_ID            ,
          trxlines.POO_PARTY_TAX_PROF_ID            ,
          trxlines.PAYING_PARTY_TAX_PROF_ID         ,
          trxlines.OWN_HQ_PARTY_TAX_PROF_ID         ,
          trxlines.TRADING_HQ_PARTY_TAX_PROF_ID     ,
          trxlines.POI_PARTY_TAX_PROF_ID            ,
          trxlines.POD_PARTY_TAX_PROF_ID            ,
          trxlines.BILL_TO_PARTY_TAX_PROF_ID        ,
          trxlines.BILL_FROM_PARTY_TAX_PROF_ID      ,
          trxlines.TITLE_TRANS_PARTY_TAX_PROF_ID    ,
          trxlines.SHIP_TO_SITE_TAX_PROF_ID         ,
          trxlines.SHIP_FROM_SITE_TAX_PROF_ID       ,
          trxlines.POA_SITE_TAX_PROF_ID             ,
          trxlines.POO_SITE_TAX_PROF_ID             ,
          trxlines.PAYING_SITE_TAX_PROF_ID          ,
          trxlines.OWN_HQ_SITE_TAX_PROF_ID          ,
          trxlines.TRADING_HQ_SITE_TAX_PROF_ID      ,
          trxlines.POI_SITE_TAX_PROF_ID             ,
          trxlines.POD_SITE_TAX_PROF_ID             ,
          trxlines.BILL_TO_SITE_TAX_PROF_ID         ,
          trxlines.BILL_FROM_SITE_TAX_PROF_ID       ,
          trxlines.TITLE_TRANS_SITE_TAX_PROF_ID     ,
          trxlines.MERCHANT_PARTY_TAX_PROF_ID       ,
          to_number(null) HQ_ESTB_PARTY_TAX_PROF_ID,
          header.DOCUMENT_SUB_TYPE                  ,
          header.SUPPLIER_TAX_INVOICE_NUMBER        ,
          header.SUPPLIER_TAX_INVOICE_DATE          ,
          header.SUPPLIER_EXCHANGE_RATE             ,
          header.TAX_INVOICE_DATE                   ,
          header.TAX_INVOICE_NUMBER                 ,
          trxlines.LINE_AMT_INCLUDES_TAX_FLAG       ,
          header.QUOTE_FLAG                         ,
          header.DEFAULT_TAXATION_COUNTRY           ,
          trxlines.HISTORICAL_FLAG                  ,
          header.INTERNAL_ORG_LOCATION_ID           ,
          trxlines.CTRL_HDR_TX_APPL_FLAG            ,
          header.CTRL_TOTAL_HDR_TX_AMT              ,
          trxlines.CTRL_TOTAL_LINE_TX_AMT           ,
          null DIST_LEVEL_ACTION                    ,
          to_number(null) ADJUSTED_DOC_TASK_DIST_ID ,
          to_number(null) APPLIED_FROM_TAX_DIST_ID  ,
          to_number(null) TASK_ID                   ,
          to_number(null) AWARD_ID                  ,
          to_number(null) PROJECT_ID                ,
          null EXPENDITURE_TYPE                     ,
          to_number(null) EXPENDITURE_ORGANIZATION_ID ,
          null EXPENDITURE_ITEM_DATE                ,
          to_number(null) TRX_LINE_DIST_AMT         ,
          to_number(null) TRX_LINE_DIST_QUANTITY    ,
          to_number(null) REF_DOC_CURR_CONV_RATE    ,
          to_number(null) ITEM_DIST_NUMBER          ,
          to_number(null) REF_DOC_DIST_ID           ,
          to_number(null) TRX_LINE_DIST_TAX_AMT     ,
          to_number(null) TRX_LINE_DIST_ID          ,
          to_number(null) APPLIED_FROM_DIST_ID      ,
          to_number(null) ADJUSTED_DOC_DIST_ID      ,
          to_number(null) OVERRIDING_RECOVERY_RATE  ,
          trxlines.INPUT_TAX_CLASSIFICATION_CODE    ,
          trxlines.OUTPUT_TAX_CLASSIFICATION_CODE   ,
          header.PORT_OF_ENTRY_CODE                 ,
          header.TAX_REPORTING_FLAG                 ,
          null TAX_AMT_INCLUDED_FLAG                ,
          null COMPOUNDING_TAX_FLAG                 ,
          header.SHIP_THIRD_PTY_ACCT_ID             ,
          header.BILL_THIRD_PTY_ACCT_ID             ,
          header.SHIP_THIRD_PTY_ACCT_SITE_ID        ,
          header.BILL_THIRD_PTY_ACCT_SITE_ID        ,
          header.SHIP_TO_CUST_ACCT_SITE_USE_ID      ,
          header.BILL_TO_CUST_ACCT_SITE_USE_ID      ,
          header.PROVNL_TAX_DETERMINATION_DATE      ,
          trxlines.START_EXPENSE_DATE               ,
          header.TRX_BATCH_ID                       ,
          header.APPLIED_TO_TRX_NUMBER              ,
          trxlines.SOURCE_APPLICATION_ID            ,
          trxlines.SOURCE_ENTITY_CODE               ,
          trxlines.SOURCE_EVENT_CLASS_CODE          ,
          trxlines.SOURCE_TRX_ID                    ,
          trxlines.SOURCE_LINE_ID                   ,
          trxlines.SOURCE_TRX_LEVEL_TYPE            ,
          trxlines.REF_DOC_TRX_LEVEL_TYPE           ,
          trxlines.APPLIED_TO_TRX_LEVEL_TYPE        ,
          trxlines.APPLIED_FROM_TRX_LEVEL_TYPE      ,
          trxlines.ADJUSTED_DOC_TRX_LEVEL_TYPE      ,
          header.APPLICATION_DOC_STATUS             ,
          header.HDR_TRX_USER_KEY1                  ,
          header.HDR_TRX_USER_KEY2                  ,
          header.HDR_TRX_USER_KEY3                  ,
          header.HDR_TRX_USER_KEY4                  ,
          header.HDR_TRX_USER_KEY5                  ,
          header.HDR_TRX_USER_KEY6                  ,
          trxlines.LINE_TRX_USER_KEY1               ,
          trxlines.LINE_TRX_USER_KEY2               ,
          trxlines.LINE_TRX_USER_KEY3               ,
          trxlines.LINE_TRX_USER_KEY4               ,
          trxlines.LINE_TRX_USER_KEY5               ,
          trxlines.LINE_TRX_USER_KEY6               ,
          trxlines.SOURCE_TAX_LINE_ID               ,
          trxlines.EXEMPTION_CONTROL_FLAG           ,
          to_number(null) REVERSED_APPLN_ID         ,
          null REVERSED_ENTITY_CODE                 ,
          null REVERSED_EVNT_CLS_CODE               ,
          to_number(null) REVERSED_TRX_ID           ,
          null REVERSED_TRX_LEVEL_TYPE              ,
          to_number(null) REVERSED_TRX_LINE_ID      ,
          trxlines.EXEMPT_REASON_CODE               ,
          trxlines.INTERFACE_ENTITY_CODE            ,
          trxlines.INTERFACE_LINE_ID                ,
          trxlines.DEFAULTING_ATTRIBUTE1            ,
          trxlines.DEFAULTING_ATTRIBUTE2            ,
          trxlines.DEFAULTING_ATTRIBUTE3            ,
          trxlines.DEFAULTING_ATTRIBUTE4            ,
          trxlines.DEFAULTING_ATTRIBUTE5            ,
          trxlines.DEFAULTING_ATTRIBUTE6            ,
          trxlines.DEFAULTING_ATTRIBUTE7            ,
          trxlines.DEFAULTING_ATTRIBUTE8            ,
          trxlines.DEFAULTING_ATTRIBUTE9            ,
          trxlines.DEFAULTING_ATTRIBUTE10           ,
          trxlines.HISTORICAL_TAX_CODE_ID           ,
          nvl(trxlines.SHIP_THIRD_PTY_ACCT_ID,header.SHIP_THIRD_PTY_ACCT_ID),
          nvl(trxlines.BILL_THIRD_PTY_ACCT_ID,header.BILL_THIRD_PTY_ACCT_ID),
          nvl(trxlines.SHIP_THIRD_PTY_ACCT_SITE_ID,header.SHIP_THIRD_PTY_ACCT_SITE_ID),
          nvl(trxlines.BILL_THIRD_PTY_ACCT_SITE_ID,header.BILL_THIRD_PTY_ACCT_SITE_ID),
          nvl(trxlines.SHIP_TO_CUST_ACCT_SITE_USE_ID,header.SHIP_TO_CUST_ACCT_SITE_USE_ID),
          nvl(trxlines.BILL_TO_CUST_ACCT_SITE_USE_ID,header.BILL_TO_CUST_ACCT_SITE_USE_ID),
          nvl(trxlines.RECEIVABLES_TRX_TYPE_ID,header.RECEIVABLES_TRX_TYPE_ID),
          trxlines.GLOBAL_ATTRIBUTE_CATEGORY,
          trxlines.GLOBAL_ATTRIBUTE1,
          to_number(null) TOTAL_INC_TAX_AMT     ,
          trxlines.USER_UPD_DET_FACTORS_FLAG,
          decode(trxlines.line_level_action,'CREATE','I',
                                               'CREATE_TAX_ONLY','I',
                                               'APPLY_FROM','I',
                                               'INTERCOMPANY_CREATE','I',
                                               'UNAPPLY_FROM','U',
                                               'LINE_INFO_TAX_ONLY','I',
                                               'CREATE_WITH_TAX','I',
                                               'ALLOCATE_TAX_ONLY_ADJUSTMENT','I',
                                               'COPY_AND_CREATE','I',
                                               'RECORD_WITH_NO_TAX','I',
                                               'NO_CHANGE','U',
                                               'UPDATE','U',
                                               'DISCARD','U',
                                               'CANCEL','U',
                                               'SYNCHRONIZE','U',
                                               'DELETE','U')  INSERT_UPDATE_FLAG,
           null TAX_PROCESSING_COMPLETED_FLAG, -- Bug 8931030
           null TAX_CALCULATION_DONE_FLAG     -- Bug 8931030
      /* The update insert flag is to determine the records that need to be inserted/updated
	  into zx_lines_det_factors depending on the line_level_action for tax event type UPDATE*/
      FROM ZX_TRANSACTION_LINES_GT trxlines,
           ZX_TRX_HEADERS_GT header
      WHERE trxlines.application_id = header.application_id
        AND trxlines.entity_code = header.entity_code
        AND trxlines.event_class_code = header.event_class_code
        AND trxlines.trx_id = header.trx_id
        AND header.event_class_code = p_event_class_rec.event_class_code
        AND header.entity_code = p_event_class_rec.entity_code
        AND header.application_id = p_event_class_rec.application_id
        AND NVL(header.validation_check_flag, 'Y') = 'Y'
        AND NOT EXISTS(
              SELECT 1
                FROM ZX_ERRORS_GT err
               WHERE err.application_id = header.application_id
                 AND err.entity_code = header.entity_code
                 AND err.event_class_code = header.event_class_code
                 AND err.trx_id = header.trx_id)
   ORDER BY header.related_doc_application_id ASC NULLS FIRST ,
            header.legal_entity_id ASC,
            header.trx_date ASC,
            header.trx_id ASC,
            INSERT_UPDATE_FLAG DESC;
	  /*ordering by insert_update_flag will fetch all the records to be updated first
	  into collection followed by the records to be inserted
	  ASSUMPTION: For multiple documents scenario, this flag will always be I */

-- bug fix 5417887 end

 /* Cursor for override_tax*/
 CURSOR get_overridden_lines (p_event_id NUMBER) IS
   SELECT  INTERNAL_ORGANIZATION_ID,
           APPLICATION_ID,
           ENTITY_CODE,
           EVENT_CLASS_CODE,
           EVENT_TYPE_CODE,
           DOC_EVENT_STATUS,
           LINE_LEVEL_ACTION,
           TRX_ID,
           TRX_LINE_ID,
           TRX_LEVEL_TYPE,
           TRX_DATE,
           TRX_DOC_REVISION,
           LEDGER_ID,
           TRX_CURRENCY_CODE,
           CURRENCY_CONVERSION_DATE,
           CURRENCY_CONVERSION_RATE,
           CURRENCY_CONVERSION_TYPE,
           MINIMUM_ACCOUNTABLE_UNIT,
           PRECISION,
           TRX_LINE_CURRENCY_CODE,
           TRX_LINE_CURRENCY_CONV_DATE,
           TRX_LINE_CURRENCY_CONV_RATE,
           TRX_LINE_CURRENCY_CONV_TYPE,
           TRX_LINE_MAU,
           TRX_LINE_PRECISION,
           LEGAL_ENTITY_ID,
           ESTABLISHMENT_ID,
           RECEIVABLES_TRX_TYPE_ID,
           DEFAULT_TAXATION_COUNTRY,
           TRX_NUMBER,
           TRX_LINE_NUMBER,
           TRX_LINE_DESCRIPTION,
           TRX_DESCRIPTION,
           TRX_COMMUNICATED_DATE,
           BATCH_SOURCE_ID,
           BATCH_SOURCE_NAME,
           DOC_SEQ_ID,
           DOC_SEQ_NAME,
           DOC_SEQ_VALUE,
           TRX_DUE_DATE,
           TRX_TYPE_DESCRIPTION,
           DOCUMENT_SUB_TYPE,
           SUPPLIER_TAX_INVOICE_NUMBER	,
           SUPPLIER_TAX_INVOICE_DATE,
           SUPPLIER_EXCHANGE_RATE,
           TAX_INVOICE_DATE,
           TAX_INVOICE_NUMBER,
           FIRST_PTY_ORG_ID,
           TAX_EVENT_CLASS_CODE,
           TAX_EVENT_TYPE_CODE,
           RDNG_SHIP_TO_PTY_TX_PROF_ID	,
           RDNG_SHIP_FROM_PTY_TX_PROF_ID,
           RDNG_BILL_TO_PTY_TX_PROF_ID	,
           RDNG_BILL_FROM_PTY_TX_PROF_ID,
           RDNG_SHIP_TO_PTY_TX_P_ST_ID	,
           RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
           RDNG_BILL_TO_PTY_TX_P_ST_ID	,
           RDNG_BILL_FROM_PTY_TX_P_ST_ID,
           LINE_INTENDED_USE ,
           TRX_LINE_TYPE ,
           TRX_SHIPPING_DATE,
           TRX_RECEIPT_DATE,
           TRX_SIC_CODE,
           FOB_POINT ,
           TRX_WAYBILL_NUMBER,
           PRODUCT_ID,
           PRODUCT_FISC_CLASSIFICATION ,
           PRODUCT_ORG_ID,
           UOM_CODE,
           PRODUCT_TYPE ,
           PRODUCT_CODE,
           PRODUCT_CATEGORY ,
           PRODUCT_DESCRIPTION,
           USER_DEFINED_FISC_CLASS,
           LINE_AMT,
           TRX_LINE_QUANTITY ,
           UNIT_PRICE,
           CASH_DISCOUNT,
           VOLUME_DISCOUNT,
           TRADING_DISCOUNT,
           TRANSFER_CHARGE,
           TRANSPORTATION_CHARGE,
           INSURANCE_CHARGE,
           OTHER_CHARGE,
           ASSESSABLE_VALUE,
           ASSET_FLAG,
           ASSET_NUMBER,
           ASSET_ACCUM_DEPRECIATION,
           ASSET_TYPE,
           ASSET_COST,
           RELATED_DOC_APPLICATION_ID,
           RELATED_DOC_ENTITY_CODE,
           RELATED_DOC_EVENT_CLASS_CODE,
           RELATED_DOC_TRX_ID,
           RELATED_DOC_NUMBER,
           RELATED_DOC_DATE,
           APPLIED_FROM_APPLICATION_ID,
           APPLIED_FROM_ENTITY_CODE,
           APPLIED_FROM_EVENT_CLASS_CODE,
           APPLIED_FROM_TRX_ID,
           APPLIED_FROM_LINE_ID,
           APPLIED_FROM_TRX_NUMBER,
           ADJUSTED_DOC_APPLICATION_ID,
           ADJUSTED_DOC_ENTITY_CODE,
           ADJUSTED_DOC_EVENT_CLASS_CODE,
           ADJUSTED_DOC_TRX_ID,
           ADJUSTED_DOC_LINE_ID,
           ADJUSTED_DOC_NUMBER,
           ADJUSTED_DOC_DATE,
           APPLIED_TO_APPLICATION_ID,
           APPLIED_TO_ENTITY_CODE,
           APPLIED_TO_EVENT_CLASS_CODE,
           APPLIED_TO_TRX_ID ,
           APPLIED_TO_TRX_LINE_ID,
           TRX_ID_LEVEL2,
           TRX_ID_LEVEL3,
           TRX_ID_LEVEL4,
           TRX_ID_LEVEL5,
           TRX_ID_LEVEL6,
           TRX_BUSINESS_CATEGORY,
           EXEMPT_CERTIFICATE_NUMBER,
           EXEMPT_REASON,
           HISTORICAL_FLAG,
           TRX_LINE_GL_DATE,
           PROVNL_TAX_DETERMINATION_DATE,
           LINE_AMT_INCLUDES_TAX_FLAG,
           ACCOUNT_CCID,
           ACCOUNT_STRING,
           MERCHANT_PARTY_TAX_PROF_ID,
           HQ_ESTB_PARTY_TAX_PROF_ID,
           NUMERIC1,
           NUMERIC2,
           NUMERIC3,
           NUMERIC4,
           NUMERIC5,
           NUMERIC6,
           NUMERIC7,
           NUMERIC8,
           NUMERIC9,
           NUMERIC10,
           CHAR1,
           CHAR2,
           CHAR3,
           CHAR4,
           CHAR5,
           CHAR6,
           CHAR7,
           CHAR8,
           CHAR9,
           CHAR10,
           DATE1,
           DATE2,
           DATE3,
           DATE4,
           DATE5,
           DATE6,
           DATE7,
           DATE8,
           DATE9,
           DATE10,
           MERCHANT_PARTY_NAME,
           MERCHANT_PARTY_DOCUMENT_NUMBER,
           MERCHANT_PARTY_REFERENCE,
           MERCHANT_PARTY_TAXPAYER_ID,
           MERCHANT_PARTY_TAX_REG_NUMBER,
           MERCHANT_PARTY_ID,
           MERCHANT_PARTY_COUNTRY,
           SHIP_TO_LOCATION_ID,
           SHIP_FROM_LOCATION_ID,
           POA_LOCATION_ID,
           POO_LOCATION_ID,
           BILL_TO_LOCATION_ID,
           BILL_FROM_LOCATION_ID,
           PAYING_LOCATION_ID,
           OWN_HQ_LOCATION_ID,
           TRADING_HQ_LOCATION_ID,
           POC_LOCATION_ID,
           POI_LOCATION_ID,
           POD_LOCATION_ID,
           TITLE_TRANSFER_LOCATION_ID,
           SHIP_TO_PARTY_TAX_PROF_ID ,
           SHIP_FROM_PARTY_TAX_PROF_ID,
           POA_PARTY_TAX_PROF_ID,
           POO_PARTY_TAX_PROF_ID,
           PAYING_PARTY_TAX_PROF_ID,
           OWN_HQ_PARTY_TAX_PROF_ID,
           TRADING_HQ_PARTY_TAX_PROF_ID,
           POI_PARTY_TAX_PROF_ID,
           POD_PARTY_TAX_PROF_ID,
           BILL_TO_PARTY_TAX_PROF_ID,
           BILL_FROM_PARTY_TAX_PROF_ID,
           TITLE_TRANS_PARTY_TAX_PROF_ID,
           SHIP_TO_SITE_TAX_PROF_ID,
           SHIP_FROM_SITE_TAX_PROF_ID,
           POA_SITE_TAX_PROF_ID,
           POO_SITE_TAX_PROF_ID,
           PAYING_SITE_TAX_PROF_ID,
           OWN_HQ_SITE_TAX_PROF_ID,
           TRADING_HQ_SITE_TAX_PROF_ID,
           POI_SITE_TAX_PROF_ID,
           POD_SITE_TAX_PROF_ID,
           BILL_TO_SITE_TAX_PROF_ID,
           BILL_FROM_SITE_TAX_PROF_ID,
           TITLE_TRANS_SITE_TAX_PROF_ID,
           CTRL_HDR_TX_APPL_FLAG,
           CTRL_TOTAL_LINE_TX_AMT,
           CTRL_TOTAL_HDR_TX_AMT,
           REF_DOC_APPLICATION_ID,
           REF_DOC_ENTITY_CODE,
           REF_DOC_EVENT_CLASS_CODE,
           REF_DOC_TRX_ID,
           REF_DOC_LINE_ID,
           REF_DOC_LINE_QUANTITY,
           LINE_CLASS,
           TRX_LINE_DATE,
           INPUT_TAX_CLASSIFICATION_CODE,
           OUTPUT_TAX_CLASSIFICATION_CODE,
           INTERNAL_ORG_LOCATION_ID,
           PORT_OF_ENTRY_CODE,
           TAX_REPORTING_FLAG,
           TAX_AMT_INCLUDED_FLAG,
           COMPOUNDING_TAX_FLAG,
           SHIP_THIRD_PTY_ACCT_ID,
           BILL_THIRD_PTY_ACCT_ID,
           SHIP_THIRD_PTY_ACCT_SITE_ID,
           BILL_THIRD_PTY_ACCT_SITE_ID,
           SHIP_TO_CUST_ACCT_SITE_USE_ID,
           BILL_TO_CUST_ACCT_SITE_USE_ID,
           START_EXPENSE_DATE,
           TRX_BATCH_ID,
           APPLIED_TO_TRX_NUMBER,
           SOURCE_APPLICATION_ID,
           SOURCE_ENTITY_CODE,
           SOURCE_EVENT_CLASS_CODE,
           SOURCE_TRX_ID,
           SOURCE_LINE_ID,
           SOURCE_TRX_LEVEL_TYPE,
           REF_DOC_TRX_LEVEL_TYPE,
           APPLIED_TO_TRX_LEVEL_TYPE,
           APPLIED_FROM_TRX_LEVEL_TYPE,
           ADJUSTED_DOC_TRX_LEVEL_TYPE,
           APPLICATION_DOC_STATUS,
           HDR_TRX_USER_KEY1,
           HDR_TRX_USER_KEY2,
           HDR_TRX_USER_KEY3,
           HDR_TRX_USER_KEY4,
           HDR_TRX_USER_KEY5,
           HDR_TRX_USER_KEY6,
           LINE_TRX_USER_KEY1,
           LINE_TRX_USER_KEY2,
           LINE_TRX_USER_KEY3,
           LINE_TRX_USER_KEY4,
           LINE_TRX_USER_KEY5,
           LINE_TRX_USER_KEY6,
           SOURCE_TAX_LINE_ID,
           EXEMPTION_CONTROL_FLAG,
           EXEMPT_REASON_CODE,
           INTERFACE_ENTITY_CODE,
           INTERFACE_LINE_ID,
           DEFAULTING_ATTRIBUTE1,
           DEFAULTING_ATTRIBUTE2,
           DEFAULTING_ATTRIBUTE3,
           DEFAULTING_ATTRIBUTE4,
           DEFAULTING_ATTRIBUTE5,
           DEFAULTING_ATTRIBUTE6,
           DEFAULTING_ATTRIBUTE7,
           DEFAULTING_ATTRIBUTE8,
           DEFAULTING_ATTRIBUTE9,
           DEFAULTING_ATTRIBUTE10,
           HISTORICAL_TAX_CODE_ID,
           GLOBAL_ATTRIBUTE_CATEGORY,
           GLOBAL_ATTRIBUTE1,
           TOTAL_INC_TAX_AMT,
           USER_UPD_DET_FACTORS_FLAG
         FROM  ZX_LINES_DET_FACTORS
         WHERE event_id = p_event_id;

 /* Cursor for windows (Determining Factors) version of calculate tax*/
 CURSOR get_lines_det_factors(p_event_class_rec zx_api_pub.event_class_rec_type)  IS
   SELECT  INTERNAL_ORGANIZATION_ID,
           APPLICATION_ID,
           ENTITY_CODE,
           EVENT_CLASS_CODE,
           nvl(p_event_class_rec.EVENT_TYPE_CODE,EVENT_TYPE_CODE),
           DOC_EVENT_STATUS,
           LINE_LEVEL_ACTION,
           TRX_ID,
           TRX_LINE_ID,
           TRX_LEVEL_TYPE,
           TRX_DATE,
           TRX_DOC_REVISION,
           LEDGER_ID,
           TRX_CURRENCY_CODE,
           CURRENCY_CONVERSION_DATE,
           CURRENCY_CONVERSION_RATE,
           CURRENCY_CONVERSION_TYPE,
           MINIMUM_ACCOUNTABLE_UNIT,
           PRECISION,
           TRX_LINE_CURRENCY_CODE,
           TRX_LINE_CURRENCY_CONV_DATE,
           TRX_LINE_CURRENCY_CONV_RATE,
           TRX_LINE_CURRENCY_CONV_TYPE,
           TRX_LINE_MAU,
           TRX_LINE_PRECISION,
           LEGAL_ENTITY_ID,
           ESTABLISHMENT_ID,
           RECEIVABLES_TRX_TYPE_ID,
           DEFAULT_TAXATION_COUNTRY,
           TRX_NUMBER,
           TRX_LINE_NUMBER,
           TRX_LINE_DESCRIPTION,
           TRX_DESCRIPTION,
           TRX_COMMUNICATED_DATE,
           BATCH_SOURCE_ID,
           BATCH_SOURCE_NAME,
           DOC_SEQ_ID,
           DOC_SEQ_NAME,
           DOC_SEQ_VALUE,
           TRX_DUE_DATE,
           TRX_TYPE_DESCRIPTION,
           DOCUMENT_SUB_TYPE,
           SUPPLIER_TAX_INVOICE_NUMBER,
           SUPPLIER_TAX_INVOICE_DATE,
           SUPPLIER_EXCHANGE_RATE,
           TAX_INVOICE_DATE,
           TAX_INVOICE_NUMBER,
           FIRST_PTY_ORG_ID,
           TAX_EVENT_CLASS_CODE,
           nvl(p_event_class_rec.TAX_EVENT_TYPE_CODE,TAX_EVENT_TYPE_CODE),
           RDNG_SHIP_TO_PTY_TX_PROF_ID	,
           RDNG_SHIP_FROM_PTY_TX_PROF_ID,
           RDNG_BILL_TO_PTY_TX_PROF_ID	,
           RDNG_BILL_FROM_PTY_TX_PROF_ID,
           RDNG_SHIP_TO_PTY_TX_P_ST_ID	,
           RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
           RDNG_BILL_TO_PTY_TX_P_ST_ID	,
           RDNG_BILL_FROM_PTY_TX_P_ST_ID,
           LINE_INTENDED_USE ,
           TRX_LINE_TYPE ,
           TRX_SHIPPING_DATE,
           TRX_RECEIPT_DATE,
           TRX_SIC_CODE,
           FOB_POINT ,
           TRX_WAYBILL_NUMBER,
           PRODUCT_ID,
           PRODUCT_FISC_CLASSIFICATION ,
           PRODUCT_ORG_ID,
           UOM_CODE,
           PRODUCT_TYPE ,
           PRODUCT_CODE,
           PRODUCT_CATEGORY ,
           PRODUCT_DESCRIPTION,
           USER_DEFINED_FISC_CLASS,
           LINE_AMT,
           TRX_LINE_QUANTITY ,
           UNIT_PRICE,
           CASH_DISCOUNT,
           VOLUME_DISCOUNT,
           TRADING_DISCOUNT,
           TRANSFER_CHARGE,
           TRANSPORTATION_CHARGE,
           INSURANCE_CHARGE,
           OTHER_CHARGE,
           ASSESSABLE_VALUE,
           ASSET_FLAG,
           ASSET_NUMBER,
           ASSET_ACCUM_DEPRECIATION,
           ASSET_TYPE,
           ASSET_COST,
           RELATED_DOC_APPLICATION_ID,
           RELATED_DOC_ENTITY_CODE,
           RELATED_DOC_EVENT_CLASS_CODE,
           RELATED_DOC_TRX_ID,
           RELATED_DOC_NUMBER,
           RELATED_DOC_DATE,
           APPLIED_FROM_APPLICATION_ID,
           APPLIED_FROM_ENTITY_CODE,
           APPLIED_FROM_EVENT_CLASS_CODE,
           APPLIED_FROM_TRX_ID,
           APPLIED_FROM_LINE_ID,
           APPLIED_FROM_TRX_NUMBER,
           ADJUSTED_DOC_APPLICATION_ID,
           ADJUSTED_DOC_ENTITY_CODE,
           ADJUSTED_DOC_EVENT_CLASS_CODE,
           ADJUSTED_DOC_TRX_ID,
           ADJUSTED_DOC_LINE_ID,
           ADJUSTED_DOC_NUMBER,
           ADJUSTED_DOC_DATE,
           APPLIED_TO_APPLICATION_ID,
           APPLIED_TO_ENTITY_CODE,
           APPLIED_TO_EVENT_CLASS_CODE,
           APPLIED_TO_TRX_ID ,
           APPLIED_TO_TRX_LINE_ID,
           TRX_ID_LEVEL2,
           TRX_ID_LEVEL3,
           TRX_ID_LEVEL4,
           TRX_ID_LEVEL5,
           TRX_ID_LEVEL6,
           TRX_BUSINESS_CATEGORY,
           EXEMPT_CERTIFICATE_NUMBER,
           EXEMPT_REASON,
           HISTORICAL_FLAG,
           TRX_LINE_GL_DATE,
           PROVNL_TAX_DETERMINATION_DATE,
           LINE_AMT_INCLUDES_TAX_FLAG,
           ACCOUNT_CCID,
           ACCOUNT_STRING,
           MERCHANT_PARTY_TAX_PROF_ID,
           HQ_ESTB_PARTY_TAX_PROF_ID,
           NUMERIC1,
           NUMERIC2,
           NUMERIC3,
           NUMERIC4,
           NUMERIC5,
           NUMERIC6,
           NUMERIC7,
           NUMERIC8,
           NUMERIC9,
           NUMERIC10,
           CHAR1,
           CHAR2,
           CHAR3,
           CHAR4,
           CHAR5,
           CHAR6,
           CHAR7,
           CHAR8,
           CHAR9,
           CHAR10,
           DATE1,
           DATE2,
           DATE3,
           DATE4,
           DATE5,
           DATE6,
           DATE7,
           DATE8,
           DATE9,
           DATE10,
           MERCHANT_PARTY_NAME,
           MERCHANT_PARTY_DOCUMENT_NUMBER,
           MERCHANT_PARTY_REFERENCE,
           MERCHANT_PARTY_TAXPAYER_ID,
           MERCHANT_PARTY_TAX_REG_NUMBER,
           MERCHANT_PARTY_ID,
           MERCHANT_PARTY_COUNTRY,
           SHIP_TO_LOCATION_ID,
           SHIP_FROM_LOCATION_ID,
           POA_LOCATION_ID,
           POO_LOCATION_ID,
           BILL_TO_LOCATION_ID,
           BILL_FROM_LOCATION_ID,
           PAYING_LOCATION_ID,
           OWN_HQ_LOCATION_ID,
           TRADING_HQ_LOCATION_ID,
           POC_LOCATION_ID,
           POI_LOCATION_ID,
           POD_LOCATION_ID,
           TITLE_TRANSFER_LOCATION_ID,
           SHIP_TO_PARTY_TAX_PROF_ID ,
           SHIP_FROM_PARTY_TAX_PROF_ID,
           POA_PARTY_TAX_PROF_ID,
           POO_PARTY_TAX_PROF_ID,
           PAYING_PARTY_TAX_PROF_ID,
           OWN_HQ_PARTY_TAX_PROF_ID,
           TRADING_HQ_PARTY_TAX_PROF_ID,
           POI_PARTY_TAX_PROF_ID,
           POD_PARTY_TAX_PROF_ID,
           BILL_TO_PARTY_TAX_PROF_ID,
           BILL_FROM_PARTY_TAX_PROF_ID,
           TITLE_TRANS_PARTY_TAX_PROF_ID,
           SHIP_TO_SITE_TAX_PROF_ID,
           SHIP_FROM_SITE_TAX_PROF_ID,
           POA_SITE_TAX_PROF_ID,
           POO_SITE_TAX_PROF_ID,
           PAYING_SITE_TAX_PROF_ID,
           OWN_HQ_SITE_TAX_PROF_ID,
           TRADING_HQ_SITE_TAX_PROF_ID,
           POI_SITE_TAX_PROF_ID,
           POD_SITE_TAX_PROF_ID,
           BILL_TO_SITE_TAX_PROF_ID,
           BILL_FROM_SITE_TAX_PROF_ID,
           TITLE_TRANS_SITE_TAX_PROF_ID,
           CTRL_HDR_TX_APPL_FLAG,
           CTRL_TOTAL_LINE_TX_AMT,
           CTRL_TOTAL_HDR_TX_AMT,
           REF_DOC_APPLICATION_ID,
           REF_DOC_ENTITY_CODE,
           REF_DOC_EVENT_CLASS_CODE,
           REF_DOC_TRX_ID,
           REF_DOC_LINE_ID,
           REF_DOC_LINE_QUANTITY,
           LINE_CLASS,
           TRX_LINE_DATE,
           INPUT_TAX_CLASSIFICATION_CODE,
           OUTPUT_TAX_CLASSIFICATION_CODE,
           INTERNAL_ORG_LOCATION_ID,
           PORT_OF_ENTRY_CODE,
           TAX_REPORTING_FLAG,
           TAX_AMT_INCLUDED_FLAG,
           COMPOUNDING_TAX_FLAG,
           SHIP_THIRD_PTY_ACCT_ID,
           BILL_THIRD_PTY_ACCT_ID,
           SHIP_THIRD_PTY_ACCT_SITE_ID,
           BILL_THIRD_PTY_ACCT_SITE_ID,
           SHIP_TO_CUST_ACCT_SITE_USE_ID,
           BILL_TO_CUST_ACCT_SITE_USE_ID,
           START_EXPENSE_DATE,
           TRX_BATCH_ID,
           APPLIED_TO_TRX_NUMBER,
           SOURCE_APPLICATION_ID,
           SOURCE_ENTITY_CODE,
           SOURCE_EVENT_CLASS_CODE,
           SOURCE_TRX_ID,
           SOURCE_LINE_ID,
           SOURCE_TRX_LEVEL_TYPE,
           REF_DOC_TRX_LEVEL_TYPE,
           APPLIED_TO_TRX_LEVEL_TYPE,
           APPLIED_FROM_TRX_LEVEL_TYPE,
           ADJUSTED_DOC_TRX_LEVEL_TYPE,
           APPLICATION_DOC_STATUS,
           HDR_TRX_USER_KEY1,
           HDR_TRX_USER_KEY2,
           HDR_TRX_USER_KEY3,
           HDR_TRX_USER_KEY4,
           HDR_TRX_USER_KEY5,
           HDR_TRX_USER_KEY6,
           LINE_TRX_USER_KEY1,
           LINE_TRX_USER_KEY2,
           LINE_TRX_USER_KEY3,
           LINE_TRX_USER_KEY4,
           LINE_TRX_USER_KEY5,
           LINE_TRX_USER_KEY6,
           null DIST_LEVEL_ACTION,
           to_number(null) ADJUSTED_DOC_TASK_DIST_ID,
           to_number(null) APPLIED_FROM_TAX_DIST_ID,
           to_number(null) TASK_ID,
           to_number(null) AWARD_ID,
           to_number(null) PROJECT_ID,
           null EXPENDITURE_TYPE,
           to_number(null) EXPENDITURE_ORGANIZATION_ID,
           null EXPENDITURE_ITEM_DATE,
           to_number(null) TRX_LINE_DIST_AMT,
           to_number(null) TRX_LINE_DIST_QUANTITY,
           to_number(null) REF_DOC_CURR_CONV_RATE,
           to_number(null) ITEM_DIST_NUMBER,
           to_number(null) REF_DOC_DIST_ID,
           to_number(null) TRX_LINE_DIST_TAX_AMT,
           to_number(null) TRX_LINE_DIST_ID,
           to_number(null) APPLIED_FROM_DIST_ID,
           to_number(null) ADJUSTED_DOC_DIST_ID,
           to_number(null) OVERRIDING_RECOVERY_RATE,
           null TAX_AMT_INCLUDED_FLAG,
           null COMPOUNDING_TAX_FLAG,
           SOURCE_TAX_LINE_ID,
           EXEMPTION_CONTROL_FLAG,
           EXEMPT_REASON_CODE,
           INTERFACE_ENTITY_CODE,
           INTERFACE_LINE_ID,
           DEFAULTING_ATTRIBUTE1,
           DEFAULTING_ATTRIBUTE2,
           DEFAULTING_ATTRIBUTE3,
           DEFAULTING_ATTRIBUTE4,
           DEFAULTING_ATTRIBUTE5,
           DEFAULTING_ATTRIBUTE6,
           DEFAULTING_ATTRIBUTE7,
           DEFAULTING_ATTRIBUTE8,
           DEFAULTING_ATTRIBUTE9,
           DEFAULTING_ATTRIBUTE10,
           HISTORICAL_TAX_CODE_ID,
           GLOBAL_ATTRIBUTE_CATEGORY,
           GLOBAL_ATTRIBUTE1,
           TOTAL_INC_TAX_AMT,
           USER_UPD_DET_FACTORS_FLAG
      FROM ZX_LINES_DET_FACTORS
     WHERE application_id = p_event_class_rec.application_id
	   AND entity_code = p_event_class_rec.entity_code
	   AND event_class_code = p_event_class_rec.event_class_code
	   AND trx_id = p_event_class_rec.trx_id
	   AND tax_processing_completed_flag = 'N';


  CURSOR prtnr_tax_lines_csr(p_event_class_rec ZX_API_PUB.event_class_rec_type) IS
  SELECT zl.tax_regime_id,
         zl.tax_regime_code,
         zl.tax_provider_id,
         regimes.effective_from,
         regimes.effective_to
    FROM ZX_LINES zl,
         ZX_REGIMES_B regimes
   WHERE zl.application_id = p_event_class_rec.application_id
     AND zl.entity_code = p_event_class_rec.entity_code
     AND zl.event_class_code = p_event_class_rec.event_class_code
     AND zl.trx_id = p_event_class_rec.trx_id
     AND zl.tax_provider_id is not null
     AND zl.tax_regime_id = regimes.tax_regime_id;
     --AND zl.content_owner_id = p_event_class_rec.first_pty_org_id
  prtnr_tax_lines    prtnr_tax_lines_csr%ROWTYPE;


  CURSOR app_tax_lines_csr(p_event_class_rec ZX_API_PUB.event_class_rec_type) IS
  SELECT ztlar.tax_regime_id,
         ztlar.tax_regime_code,
         ztlar.tax_provider_id,
         ztlar.trx_line_id,
         regimes.effective_from,
         regimes.effective_to
    FROM ZX_TRX_LINE_APP_REGIMES ztlar,
         ZX_REGIMES_B regimes
   WHERE ztlar.application_id = p_event_class_rec.application_id
     AND ztlar.entity_code = p_event_class_rec.entity_code
     AND ztlar.event_class_code = p_event_class_rec.event_class_code
     AND ztlar.trx_id = p_event_class_rec.trx_id
     AND ztlar.tax_provider_id is not null
     AND ztlar.tax_regime_id = regimes.tax_regime_id;
     --AND ztlar.content_owner_id = p_event_class_rec.first_pty_org_id

  CURSOR app_tax_lines_csr2(p_event_class_rec ZX_API_PUB.event_class_rec_type) IS
  SELECT zxlines.tax_regime_id,
         zxlines.tax_regime_code,
         zxlines.tax_provider_id,
         zxlines.trx_line_id,
         regimes.effective_from,
         regimes.effective_to
    FROM ZX_LINES zxlines,
         ZX_REGIMES_B regimes
   WHERE zxlines.application_id = p_event_class_rec.application_id
     AND zxlines.entity_code = p_event_class_rec.entity_code
     AND zxlines.event_class_code = p_event_class_rec.event_class_code
     AND zxlines.trx_id = p_event_class_rec.trx_id
     AND zxlines.tax_provider_id is not null
     AND zxlines.tax_regime_id = regimes.tax_regime_id;
     --AND ztlar.content_owner_id = p_event_class_rec.first_pty_org_id

  app_tax_lines  app_tax_lines_csr%ROWTYPE;

  CURSOR update_trx_line_app_reg_csr(p_event_class_rec ZX_API_PUB.event_class_rec_type) IS
  SELECT ztlar.tax_regime_id,
         ztlar.tax_regime_code,
         ztlar.tax_provider_id,
         ztlar.trx_line_id,
         regimes.effective_from,
         regimes.effective_to
    FROM ZX_TRX_LINE_APP_REGIMES ztlar,
         ZX_REGIMES_B regimes
   WHERE ztlar.application_id = p_event_class_rec.application_id
     AND ztlar.entity_code = p_event_class_rec.entity_code
     AND ztlar.event_class_code = p_event_class_rec.event_class_code
     AND ztlar.trx_id = p_event_class_rec.trx_id
     AND ztlar.tax_provider_id is not null
     AND ztlar.update_flag ='Y'
     AND ztlar.tax_regime_id = regimes.tax_regime_id;
     --AND ztlar.content_owner_id = p_event_class_rec.first_pty_org_id
  update_trx_line_app_reg  update_trx_line_app_reg_csr%ROWTYPE;

  CURSOR non_update_trx_line_reg_csr(p_event_class_rec ZX_API_PUB.event_class_rec_type) IS
  SELECT tax_regime_id,
         tax_regime_code,
         tax_provider_id,
         trx_line_id
    FROM ZX_TRX_LINE_APP_REGIMES
   WHERE application_id = p_event_class_rec.application_id
     AND entity_code = p_event_class_rec.entity_code
     AND event_class_code = p_event_class_rec.event_class_code
     AND trx_id = p_event_class_rec.trx_id
     AND tax_provider_id is not null
     AND update_flag is null;
     --AND content_owner_id = p_event_class_rec.first_pty_org_id
  non_update_trx_line_app_reg    non_update_trx_line_reg_csr%ROWTYPE;
/*----------------------------------------------------------------------------*
 |   PRIVATE FUNCTIONS/PROCEDURES                                             |
 *----------------------------------------------------------------------------*/

PROCEDURE pop_src_evnt_cls_info
  ( p_trx_line_index    IN     NUMBER,
    p_event_class_rec   IN OUT NOCOPY  ZX_API_PUB.event_class_rec_type,
    x_return_status 	OUT    NOCOPY  VARCHAR2 );
/* -- Procedure commented by ssohal
PROCEDURE populate_errors
  ( p_event_class_rec   IN     ZX_API_PUB.event_class_rec_type,
    x_return_status 	OUT    NOCOPY  VARCHAR2 );
*/
PROCEDURE delete_from_lines_det_gt (
   p_event_class_rec IN  ZX_API_PUB.event_class_rec_type ,
   x_return_status   OUT    NOCOPY VARCHAR2
 );
PROCEDURE Pop_Index_Attrbs_To_Null (
   p_index          IN  NUMBER,
   x_return_status  OUT NOCOPY VARCHAR2
 );
PROCEDURE Pop_Estb_Id (
   p_index           IN            NUMBER,
   p_event_class_rec IN OUT NOCOPY ZX_API_PUB.event_class_rec_type,
   x_return_status      OUT NOCOPY VARCHAR2
 );
-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  db_insert_line_det_factors
--
--  DESCRIPTION
--  Bulk insert into zx_lines_det_factors
--
--  CALLED BY
--    calculate_tax
--    import_document_with_tax
--    reverse_document
--    insupd_line_det_factors
-----------------------------------------------------------------------
/*----------------------------------------------------------------------------*
 |p_insert needed in case of UPDATE tax event type wherein some records passed|
 |need to be updated in zx_lines_det_factors while others need to be inserted |
 |depending on the line level action. This scenario is applicable only for    |
 |Calculate_tax API. p_insert stores the index upto which the records from the|
 |collection needs to be inserted into zx_lines_det_factors.                  |
 *----------------------------------------------------------------------------*/
PROCEDURE db_insert_line_det_factors
  (p_trx_line_dist_tbl      IN         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl%TYPE,
   p_event_class_rec        IN         ZX_API_PUB.event_class_rec_type,
   p_insert_index           IN         NUMBER,
   x_return_status          OUT NOCOPY VARCHAR2)
  IS
    l_api_name           CONSTANT VARCHAR2(30):= 'DB_INSERT_LINE_DET_FACTORS';
  BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||':'||l_api_name||'()+');
    END IF;

    -- Set the return status to Success
    x_return_status := FND_API.G_RET_STS_SUCCESS;

    -- Insert records in ZX_LINES_DET_FACTORS
    --Start Bug 8269616
    IF ZX_API_PUB.G_PUB_SRVC IN ('INSERT_LINE_DET_FACTORS','COPY_INSERT_LINE_DET_FACTORS',
                                 'REVERSE_DOCUMENT_DISTRIBUTION')
    --End Bug 8269616
    THEN
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'INSERTING in IF...');
       END IF;

        FORALL i IN  INDICES OF p_trx_line_dist_tbl.application_id
          INSERT INTO ZX_LINES_DET_FACTORS(
                                EVENT_ID,
                                INTERNAL_ORGANIZATION_ID,
                                APPLICATION_ID,
                                ENTITY_CODE,
                                EVENT_CLASS_CODE,
                                EVENT_CLASS_MAPPING_ID,
                                EVENT_TYPE_CODE,
                                DOC_EVENT_STATUS,
                                LINE_LEVEL_ACTION,
                                TRX_ID,
                                TRX_LINE_ID,
                                TRX_LEVEL_TYPE,
                                TRX_DATE,
                                TRX_DOC_REVISION,
                                LEDGER_ID,
                                TRX_CURRENCY_CODE,
                                CURRENCY_CONVERSION_DATE,
                                CURRENCY_CONVERSION_RATE,
                                CURRENCY_CONVERSION_TYPE,
                                MINIMUM_ACCOUNTABLE_UNIT,
                                PRECISION,
                                TRX_LINE_CURRENCY_CODE,
                                TRX_LINE_CURRENCY_CONV_DATE,
                                TRX_LINE_CURRENCY_CONV_RATE,
                                TRX_LINE_CURRENCY_CONV_TYPE,
                                TRX_LINE_MAU,
                                TRX_LINE_PRECISION,
                                LEGAL_ENTITY_ID,
                                ESTABLISHMENT_ID,
                                RECEIVABLES_TRX_TYPE_ID,
                                DEFAULT_TAXATION_COUNTRY,
                                TRX_NUMBER,
                                TRX_LINE_NUMBER,
                                TRX_LINE_DESCRIPTION,
                                TRX_DESCRIPTION,
                                TRX_COMMUNICATED_DATE,
                                BATCH_SOURCE_ID,
                                BATCH_SOURCE_NAME,
                                DOC_SEQ_ID,
                                DOC_SEQ_NAME,
                                DOC_SEQ_VALUE,
                                TRX_DUE_DATE,
                                TRX_TYPE_DESCRIPTION,
                                DOCUMENT_SUB_TYPE,
                                SUPPLIER_TAX_INVOICE_NUMBER,
                                SUPPLIER_TAX_INVOICE_DATE,
                                SUPPLIER_EXCHANGE_RATE,
                                TAX_INVOICE_DATE,
                                TAX_INVOICE_NUMBER,
                                FIRST_PTY_ORG_ID,
                                TAX_EVENT_CLASS_CODE,
                                TAX_EVENT_TYPE_CODE,
                                RDNG_SHIP_TO_PTY_TX_PROF_ID,
                                RDNG_SHIP_FROM_PTY_TX_PROF_ID,
                                RDNG_BILL_TO_PTY_TX_PROF_ID,
                                RDNG_BILL_FROM_PTY_TX_PROF_ID,
                                RDNG_SHIP_TO_PTY_TX_P_ST_ID,
                                RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
                                RDNG_BILL_TO_PTY_TX_P_ST_ID,
                                RDNG_BILL_FROM_PTY_TX_P_ST_ID,
                                LINE_INTENDED_USE ,
                                TRX_LINE_TYPE ,
                                TRX_SHIPPING_DATE,
                                TRX_RECEIPT_DATE,
                                TRX_SIC_CODE,
                                FOB_POINT ,
                                TRX_WAYBILL_NUMBER,
                                PRODUCT_ID,
                                PRODUCT_FISC_CLASSIFICATION ,
                                PRODUCT_ORG_ID,
                                UOM_CODE,
                                PRODUCT_TYPE ,
                                PRODUCT_CODE,
                                PRODUCT_CATEGORY ,
                                PRODUCT_DESCRIPTION,
                                USER_DEFINED_FISC_CLASS,
                                LINE_AMT,
                                TRX_LINE_QUANTITY,
                                UNIT_PRICE,
                                CASH_DISCOUNT,
                                VOLUME_DISCOUNT,
                                TRADING_DISCOUNT,
                                TRANSFER_CHARGE,
                                TRANSPORTATION_CHARGE,
                                INSURANCE_CHARGE,
                                OTHER_CHARGE,
                                ASSESSABLE_VALUE,
                                ASSET_FLAG,
                                ASSET_NUMBER,
                                ASSET_ACCUM_DEPRECIATION,
                                ASSET_TYPE,
                                ASSET_COST,
                                RELATED_DOC_APPLICATION_ID,
                                RELATED_DOC_ENTITY_CODE,
                                RELATED_DOC_EVENT_CLASS_CODE,
                                RELATED_DOC_TRX_ID,
                                RELATED_DOC_NUMBER,
                                RELATED_DOC_DATE,
                                APPLIED_FROM_APPLICATION_ID,
                                APPLIED_FROM_ENTITY_CODE,
                                APPLIED_FROM_EVENT_CLASS_CODE,
                                APPLIED_FROM_TRX_ID,
                                APPLIED_FROM_LINE_ID,
                                APPLIED_FROM_TRX_NUMBER,
                                ADJUSTED_DOC_APPLICATION_ID,
                                ADJUSTED_DOC_ENTITY_CODE,
                                ADJUSTED_DOC_EVENT_CLASS_CODE,
                                ADJUSTED_DOC_TRX_ID,
                                ADJUSTED_DOC_LINE_ID,
                                ADJUSTED_DOC_NUMBER,
                                ADJUSTED_DOC_DATE,
                                APPLIED_TO_APPLICATION_ID,
                                APPLIED_TO_ENTITY_CODE,
                                APPLIED_TO_EVENT_CLASS_CODE,
                                APPLIED_TO_TRX_ID ,
                                APPLIED_TO_TRX_LINE_ID,
                                TRX_ID_LEVEL2,
                                TRX_ID_LEVEL3,
                                TRX_ID_LEVEL4,
                                TRX_ID_LEVEL5,
                                TRX_ID_LEVEL6,
                                TRX_BUSINESS_CATEGORY,
                                EXEMPT_CERTIFICATE_NUMBER,
                                EXEMPT_REASON,
                                HISTORICAL_FLAG,
                                TRX_LINE_GL_DATE,
                                LINE_AMT_INCLUDES_TAX_FLAG,
                                ACCOUNT_CCID,
                                ACCOUNT_STRING,
                                MERCHANT_PARTY_TAX_PROF_ID,
                                HQ_ESTB_PARTY_TAX_PROF_ID,
                                NUMERIC1,
                                NUMERIC2,
                                NUMERIC3,
                                NUMERIC4,
                                NUMERIC5,
                                NUMERIC6,
                                NUMERIC7,
                                NUMERIC8,
                                NUMERIC9,
                                NUMERIC10,
                                CHAR1,
                                CHAR2,
                                CHAR3,
                                CHAR4,
                                CHAR5,
                                CHAR6,
                                CHAR7,
                                CHAR8,
                                CHAR9,
                                CHAR10,
                                DATE1,
                                DATE2,
                                DATE3,
                                DATE4,
                                DATE5,
                                DATE6,
                                DATE7,
                                DATE8,
                                DATE9,
                                DATE10,
                                MERCHANT_PARTY_NAME,
                                MERCHANT_PARTY_DOCUMENT_NUMBER,
                                MERCHANT_PARTY_REFERENCE,
                                MERCHANT_PARTY_TAXPAYER_ID,
                                MERCHANT_PARTY_TAX_REG_NUMBER,
                                MERCHANT_PARTY_ID,
                                MERCHANT_PARTY_COUNTRY,
                                SHIP_TO_LOCATION_ID,
                                SHIP_FROM_LOCATION_ID,
                                POA_LOCATION_ID,
                                POO_LOCATION_ID,
                                BILL_TO_LOCATION_ID,
                                BILL_FROM_LOCATION_ID,
                                PAYING_LOCATION_ID,
                                OWN_HQ_LOCATION_ID,
                                TRADING_HQ_LOCATION_ID,
                                POC_LOCATION_ID,
                                POI_LOCATION_ID,
                                POD_LOCATION_ID,
                                TITLE_TRANSFER_LOCATION_ID,
                                SHIP_TO_PARTY_TAX_PROF_ID ,
                                SHIP_FROM_PARTY_TAX_PROF_ID,
                                POA_PARTY_TAX_PROF_ID,
                                POO_PARTY_TAX_PROF_ID,
                                PAYING_PARTY_TAX_PROF_ID,
                                OWN_HQ_PARTY_TAX_PROF_ID,
                                TRADING_HQ_PARTY_TAX_PROF_ID,
                                POI_PARTY_TAX_PROF_ID,
                                POD_PARTY_TAX_PROF_ID,
                                BILL_TO_PARTY_TAX_PROF_ID,
                                BILL_FROM_PARTY_TAX_PROF_ID,
                                TITLE_TRANS_PARTY_TAX_PROF_ID,
                                SHIP_TO_SITE_TAX_PROF_ID,
                                SHIP_FROM_SITE_TAX_PROF_ID,
                                POA_SITE_TAX_PROF_ID,
                                POO_SITE_TAX_PROF_ID,
                                PAYING_SITE_TAX_PROF_ID,
                                OWN_HQ_SITE_TAX_PROF_ID,
                                TRADING_HQ_SITE_TAX_PROF_ID,
                                POI_SITE_TAX_PROF_ID,
                                POD_SITE_TAX_PROF_ID,
                                BILL_TO_SITE_TAX_PROF_ID,
                                BILL_FROM_SITE_TAX_PROF_ID,
                                TITLE_TRANS_SITE_TAX_PROF_ID,
                                CTRL_HDR_TX_APPL_FLAG,
                                CTRL_TOTAL_LINE_TX_AMT,
                                CTRL_TOTAL_HDR_TX_AMT,
                                REF_DOC_APPLICATION_ID,
                                REF_DOC_ENTITY_CODE,
                                REF_DOC_EVENT_CLASS_CODE,
                                REF_DOC_TRX_ID,
                                REF_DOC_LINE_ID,
                                REF_DOC_LINE_QUANTITY,
                                LINE_CLASS,
                                TRX_LINE_DATE,
                                INPUT_TAX_CLASSIFICATION_CODE,
                                OUTPUT_TAX_CLASSIFICATION_CODE,
                                INTERNAL_ORG_LOCATION_ID,
                                PORT_OF_ENTRY_CODE,
                                TAX_REPORTING_FLAG,
                                TAX_AMT_INCLUDED_FLAG,
                                COMPOUNDING_TAX_FLAG,
                                SHIP_THIRD_PTY_ACCT_ID,
                                BILL_THIRD_PTY_ACCT_ID,
                                SHIP_THIRD_PTY_ACCT_SITE_ID,
                                BILL_THIRD_PTY_ACCT_SITE_ID,
                                SHIP_TO_CUST_ACCT_SITE_USE_ID,
                                BILL_TO_CUST_ACCT_SITE_USE_ID,
                                START_EXPENSE_DATE,
                                TRX_BATCH_ID,
                                APPLIED_TO_TRX_NUMBER,
                                SOURCE_APPLICATION_ID,
                                SOURCE_ENTITY_CODE,
                                SOURCE_EVENT_CLASS_CODE,
                                SOURCE_TRX_ID,
                                SOURCE_LINE_ID,
                                SOURCE_TRX_LEVEL_TYPE,
                                SOURCE_TAX_LINE_ID,
                                REF_DOC_TRX_LEVEL_TYPE,
                                ADJUSTED_DOC_TRX_LEVEL_TYPE,
                                APPLIED_TO_TRX_LEVEL_TYPE,
                                APPLIED_FROM_TRX_LEVEL_TYPE,
                                APPLICATION_DOC_STATUS,
                                OBJECT_VERSION_NUMBER,
                                TAX_PROCESSING_COMPLETED_FLAG,
                                USER_UPD_DET_FACTORS_FLAG,
                                RECORD_TYPE_CODE,
                                HDR_TRX_USER_KEY1,
                                HDR_TRX_USER_KEY2,
                                HDR_TRX_USER_KEY3,
                                HDR_TRX_USER_KEY4,
                                HDR_TRX_USER_KEY5,
                                HDR_TRX_USER_KEY6,
                                LINE_TRX_USER_KEY1,
                                LINE_TRX_USER_KEY2,
                                LINE_TRX_USER_KEY3,
                                LINE_TRX_USER_KEY4,
                                LINE_TRX_USER_KEY5,
                                LINE_TRX_USER_KEY6,
                                TAX_CALCULATION_DONE_FLAG,
                                REVERSED_APPLN_ID,
                                REVERSED_ENTITY_CODE,
                                REVERSED_EVNT_CLS_CODE,
                                REVERSED_TRX_ID,
                                REVERSED_TRX_LEVEL_TYPE,
                                REVERSED_TRX_LINE_ID,
                                EXEMPTION_CONTROL_FLAG,
                                EXEMPT_REASON_CODE,
                                INTERFACE_ENTITY_CODE,
                                INTERFACE_LINE_ID,
                                DEFAULTING_ATTRIBUTE1,
                                DEFAULTING_ATTRIBUTE2,
                                DEFAULTING_ATTRIBUTE3,
                                DEFAULTING_ATTRIBUTE4,
                                DEFAULTING_ATTRIBUTE5,
                                DEFAULTING_ATTRIBUTE6,
                                DEFAULTING_ATTRIBUTE7,
                                DEFAULTING_ATTRIBUTE8,
                                DEFAULTING_ATTRIBUTE9,
                                DEFAULTING_ATTRIBUTE10,
                                PROVNL_TAX_DETERMINATION_DATE,
                                HISTORICAL_TAX_CODE_ID,
                                GLOBAL_ATTRIBUTE_CATEGORY,
                                GLOBAL_ATTRIBUTE1,
                                TOTAL_INC_TAX_AMT,
                                ICX_SESSION_ID,
                                CREATION_DATE,
                                CREATED_BY,
                                LAST_UPDATE_DATE,
                                LAST_UPDATED_BY,
                                LAST_UPDATE_LOGIN)
                         SELECT p_event_class_rec.event_id,
                                p_trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(i),
                                p_trx_line_dist_tbl.APPLICATION_ID(i),
                                p_trx_line_dist_tbl.ENTITY_CODE(i),
                                p_trx_line_dist_tbl.EVENT_CLASS_CODE(i),
                                p_event_class_rec.EVENT_CLASS_MAPPING_ID,
                                p_trx_line_dist_tbl.EVENT_TYPE_CODE(i),
                                p_event_class_rec.DOC_STATUS_CODE,
                                p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i),
                                p_trx_line_dist_tbl.TRX_ID(i),
                                p_trx_line_dist_tbl.TRX_LINE_ID(i),
                                p_trx_line_dist_tbl.TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.TRX_DATE(i),
                                p_trx_line_dist_tbl.TRX_DOC_REVISION(i),
                                p_trx_line_dist_tbl.LEDGER_ID(i),
                                p_trx_line_dist_tbl.TRX_CURRENCY_CODE(i),
                                p_trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(i),
                                p_trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(i),
                                p_trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(i),
                                p_trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(i),
                                p_trx_line_dist_tbl.PRECISION(i),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE(i),p_trx_line_dist_tbl.TRX_CURRENCY_CODE(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_MAU(i),p_trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_PRECISION(i),p_trx_line_dist_tbl.PRECISION(i)),
                                p_trx_line_dist_tbl.LEGAL_ENTITY_ID(i),
                                p_trx_line_dist_tbl.ESTABLISHMENT_ID(i),
                                p_trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID(i),
                                p_trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(i),
                                p_trx_line_dist_tbl.TRX_NUMBER(i),
                                p_trx_line_dist_tbl.TRX_LINE_NUMBER(i),
                                p_trx_line_dist_tbl.TRX_LINE_DESCRIPTION(i),
                                p_trx_line_dist_tbl.TRX_DESCRIPTION(i),
                                p_trx_line_dist_tbl.TRX_COMMUNICATED_DATE(i),
                                p_trx_line_dist_tbl.BATCH_SOURCE_ID(i),
                                p_trx_line_dist_tbl.BATCH_SOURCE_NAME(i),
                                p_trx_line_dist_tbl.DOC_SEQ_ID(i),
                                p_trx_line_dist_tbl.DOC_SEQ_NAME(i),
                                p_trx_line_dist_tbl.DOC_SEQ_VALUE(i),
                                p_trx_line_dist_tbl.TRX_DUE_DATE(i),
                                p_trx_line_dist_tbl.TRX_TYPE_DESCRIPTION(i),
                                p_trx_line_dist_tbl.DOCUMENT_SUB_TYPE(i),
                                p_trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER(i),
                                p_trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE(i),
                                p_trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE(i),
                                p_trx_line_dist_tbl.TAX_INVOICE_DATE(i),
                                p_trx_line_dist_tbl.TAX_INVOICE_NUMBER(i),
                                p_trx_line_dist_tbl.FIRST_PTY_ORG_ID(i),
                                p_trx_line_dist_tbl.TAX_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.TAX_EVENT_TYPE_CODE(i),
                                p_trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID(i),
                                p_trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID(i),
                                p_trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID(i),
                                p_trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID(i),
                                p_trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID(i),
                                p_trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID(i),
                                p_trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID(i),
                                p_trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID(i),
                                p_trx_line_dist_tbl.LINE_INTENDED_USE(i),
                                p_trx_line_dist_tbl.TRX_LINE_TYPE(i),
                                p_trx_line_dist_tbl.TRX_SHIPPING_DATE(i),
                                p_trx_line_dist_tbl.TRX_RECEIPT_DATE(i),
                                p_trx_line_dist_tbl.TRX_SIC_CODE(i),
                                p_trx_line_dist_tbl.FOB_POINT(i),
                                p_trx_line_dist_tbl.TRX_WAYBILL_NUMBER(i),
                                p_trx_line_dist_tbl.PRODUCT_ID(i),
                                p_trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(i),
                                p_trx_line_dist_tbl.PRODUCT_ORG_ID(i),
                                p_trx_line_dist_tbl.UOM_CODE(i),
                                p_trx_line_dist_tbl.PRODUCT_TYPE(i),
                                p_trx_line_dist_tbl.PRODUCT_CODE(i),
                                p_trx_line_dist_tbl.PRODUCT_CATEGORY(i),
                                p_trx_line_dist_tbl.PRODUCT_DESCRIPTION(i),
                                p_trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(i),
                                p_trx_line_dist_tbl.LINE_AMT(i),
                                p_trx_line_dist_tbl.TRX_LINE_QUANTITY(i),
                                p_trx_line_dist_tbl.UNIT_PRICE(i),
                                p_trx_line_dist_tbl.CASH_DISCOUNT(i),
                                p_trx_line_dist_tbl.VOLUME_DISCOUNT(i),
                                p_trx_line_dist_tbl.TRADING_DISCOUNT(i),
                                p_trx_line_dist_tbl.TRANSFER_CHARGE(i),
                                p_trx_line_dist_tbl.TRANSPORTATION_CHARGE(i),
                                p_trx_line_dist_tbl.INSURANCE_CHARGE(i),
                                p_trx_line_dist_tbl.OTHER_CHARGE(i),
                                p_trx_line_dist_tbl.ASSESSABLE_VALUE(i),
                                p_trx_line_dist_tbl.ASSET_FLAG(i),
                                p_trx_line_dist_tbl.ASSET_NUMBER(i),
                                p_trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION(i),
                                p_trx_line_dist_tbl.ASSET_TYPE(i),
                                p_trx_line_dist_tbl.ASSET_COST(i),
                                p_trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.RELATED_DOC_TRX_ID(i),
                                p_trx_line_dist_tbl.RELATED_DOC_NUMBER(i),
                                p_trx_line_dist_tbl.RELATED_DOC_DATE(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_TRX_ID(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_LINE_ID(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_NUMBER(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_DATE(i),
                                p_trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.APPLIED_TO_TRX_ID(i),
                                p_trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL2(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL3(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL4(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL5(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL6(i),
                                p_trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(i),
                                p_trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER(i),
                                p_trx_line_dist_tbl.EXEMPT_REASON(i),
                                p_trx_line_dist_tbl.HISTORICAL_FLAG(i),
                                p_trx_line_dist_tbl.TRX_LINE_GL_DATE(i),
                                p_trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG(i),
                                p_trx_line_dist_tbl.ACCOUNT_CCID(i),
                                p_trx_line_dist_tbl.ACCOUNT_STRING(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.NUMERIC1(i),
                                p_trx_line_dist_tbl.NUMERIC2(i),
                                p_trx_line_dist_tbl.NUMERIC3(i),
                                p_trx_line_dist_tbl.NUMERIC4(i),
                                p_trx_line_dist_tbl.NUMERIC5(i),
                                p_trx_line_dist_tbl.NUMERIC6(i),
                                p_trx_line_dist_tbl.NUMERIC7(i),
                                p_trx_line_dist_tbl.NUMERIC8(i),
                                p_trx_line_dist_tbl.NUMERIC9(i),
                                p_trx_line_dist_tbl.NUMERIC10(i),
                                p_trx_line_dist_tbl.CHAR1(i),
                                p_trx_line_dist_tbl.CHAR2(i),
                                p_trx_line_dist_tbl.CHAR3(i),
                                p_trx_line_dist_tbl.CHAR4(i),
                                p_trx_line_dist_tbl.CHAR5(i),
                                p_trx_line_dist_tbl.CHAR6(i),
                                p_trx_line_dist_tbl.CHAR7(i),
                                p_trx_line_dist_tbl.CHAR8(i),
                                p_trx_line_dist_tbl.CHAR9(i),
                                p_trx_line_dist_tbl.CHAR10(i),
                                p_trx_line_dist_tbl.DATE1(i),
                                p_trx_line_dist_tbl.DATE2(i),
                                p_trx_line_dist_tbl.DATE3(i),
                                p_trx_line_dist_tbl.DATE4(i),
                                p_trx_line_dist_tbl.DATE5(i),
                                p_trx_line_dist_tbl.DATE6(i),
                                p_trx_line_dist_tbl.DATE7(i),
                                p_trx_line_dist_tbl.DATE8(i),
                                p_trx_line_dist_tbl.DATE9(i),
                                p_trx_line_dist_tbl.DATE10(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_NAME(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_ID(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY(i),
                                p_trx_line_dist_tbl.SHIP_TO_LOCATION_ID(i),
                                p_trx_line_dist_tbl.SHIP_FROM_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POA_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POO_LOCATION_ID(i),
                                p_trx_line_dist_tbl.BILL_TO_LOCATION_ID(i),
                                p_trx_line_dist_tbl.BILL_FROM_LOCATION_ID(i),
                                p_trx_line_dist_tbl.PAYING_LOCATION_ID(i),
                                p_trx_line_dist_tbl.OWN_HQ_LOCATION_ID(i),
                                p_trx_line_dist_tbl.TRADING_HQ_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POC_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POI_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POD_LOCATION_ID(i),
                                p_trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID(i),
                                p_trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POA_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POO_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POI_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POD_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG(i),
                                p_trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT(i),
                                p_trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT(i),
                                p_trx_line_dist_tbl.REF_DOC_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.REF_DOC_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.REF_DOC_TRX_ID(i),
                                p_trx_line_dist_tbl.REF_DOC_LINE_ID(i),
                                p_trx_line_dist_tbl.REF_DOC_LINE_QUANTITY(i),
                                NVL(p_trx_line_dist_tbl.LINE_CLASS(i),p_event_class_rec.EVENT_CLASS_CODE), --Bugfix 4938879
                                p_trx_line_dist_tbl.TRX_LINE_DATE(i),
                                p_trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE(i),
                                p_trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE(i),
                                p_trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(i),
                                p_trx_line_dist_tbl.PORT_OF_ENTRY_CODE(i),
                                DECODE(p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i),'RECORD_WITH_NO_TAX','N',
                                      DECODE(p_event_class_rec.record_flag, 'N', 'N',NVL(p_trx_line_dist_tbl.TAX_REPORTING_FLAG(i),p_event_class_rec.tax_reporting_flag))), --Bug fix 5155481
                                p_trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG(i),
                                p_trx_line_dist_tbl.COMPOUNDING_TAX_FLAG(i),
                                p_trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID(i),
                                p_trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID(i),
                                p_trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID(i),
                                p_trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID(i),
                                p_trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID(i),
                                p_trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID(i),
                                p_trx_line_dist_tbl.START_EXPENSE_DATE(i),
                                p_trx_line_dist_tbl.TRX_BATCH_ID(i),
                                p_trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER(i),
                                p_trx_line_dist_tbl.SOURCE_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.SOURCE_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.SOURCE_TRX_ID(i),
                                p_trx_line_dist_tbl.SOURCE_LINE_ID(i),
                                p_trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.SOURCE_TAX_LINE_ID(i),
                                p_trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.APPLICATION_DOC_STATUS(i),
                                1,
                                p_trx_line_dist_tbl.TAX_PROCESSING_COMPLETED_FLAG(i),
                                p_trx_line_dist_tbl.user_upd_det_factors_flag(i),
                                'ETAX_CREATED',
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY1(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY2(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY3(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY4(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY5(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY6(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY1(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY2(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY3(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY4(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY5(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY6(i),
                                p_event_class_rec.TAX_CALCULATION_DONE_FLAG,
                                p_trx_line_dist_tbl.REVERSED_APPLN_ID(i),
                                p_trx_line_dist_tbl.REVERSED_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.REVERSED_EVNT_CLS_CODE(i),
                                p_trx_line_dist_tbl.REVERSED_TRX_ID(i),
                                p_trx_line_dist_tbl.REVERSED_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.REVERSED_TRX_LINE_ID(i),
                                p_trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG(i),
                                p_trx_line_dist_tbl.EXEMPT_REASON_CODE(i),
                                p_trx_line_dist_tbl.INTERFACE_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.INTERFACE_LINE_ID(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10(i),
                                p_trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE(i),
                                p_trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID(i),
                                p_trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY(i),
                                p_trx_line_dist_tbl.GLOBAL_ATTRIBUTE1(i),
                                NVL(p_trx_line_dist_tbl.TOTAL_INC_TAX_AMT(i),0),
                                DECODE(ZX_API_PUB.G_PUB_SRVC,'CALCULATE_TAX', ZX_SECURITY.G_ICX_SESSION_ID, null),
                                SYSDATE SYSTEM_DATE_1,
                                fnd_global.user_id USER_ID_1,
                                SYSDATE SYSTEM_DATE_2,
                                fnd_global.user_id USER_ID_2,
                                fnd_global.conc_login_id
                           FROM DUAL
                          WHERE NOT EXISTS (SELECT 'Y'
                                              FROM zx_errors_gt err_gt
                                             WHERE err_gt.application_id   = p_trx_line_dist_tbl.application_id(i)
                                               AND err_gt.entity_code      = p_trx_line_dist_tbl.entity_code(i)
                                               AND err_gt.event_class_code = p_trx_line_dist_tbl.event_class_code(i)
                                               AND err_gt.trx_id           = p_trx_line_dist_tbl.trx_id(i));
    ELSE
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'INSERTING in ELSE...');
       END IF;
       FORALL i IN  INDICES OF p_trx_line_dist_tbl.application_id
       INSERT INTO ZX_LINES_DET_FACTORS(
                                EVENT_ID,
                                INTERNAL_ORGANIZATION_ID,
                                APPLICATION_ID,
                                ENTITY_CODE,
                                EVENT_CLASS_CODE,
                                EVENT_CLASS_MAPPING_ID,
                                EVENT_TYPE_CODE,
                                DOC_EVENT_STATUS,
                                LINE_LEVEL_ACTION,
                                TRX_ID,
                                TRX_LINE_ID,
                                TRX_LEVEL_TYPE,
                                TRX_DATE,
                                TRX_DOC_REVISION,
                                LEDGER_ID,
                                TRX_CURRENCY_CODE,
                                CURRENCY_CONVERSION_DATE,
                                CURRENCY_CONVERSION_RATE,
                                CURRENCY_CONVERSION_TYPE,
                                MINIMUM_ACCOUNTABLE_UNIT,
                                PRECISION,
                                TRX_LINE_CURRENCY_CODE,
                                TRX_LINE_CURRENCY_CONV_DATE,
                                TRX_LINE_CURRENCY_CONV_RATE,
                                TRX_LINE_CURRENCY_CONV_TYPE,
                                TRX_LINE_MAU,
                                TRX_LINE_PRECISION,
                                LEGAL_ENTITY_ID,
                                ESTABLISHMENT_ID,
                                RECEIVABLES_TRX_TYPE_ID,
                                DEFAULT_TAXATION_COUNTRY,
                                TRX_NUMBER,
                                TRX_LINE_NUMBER,
                                TRX_LINE_DESCRIPTION,
                                TRX_DESCRIPTION,
                                TRX_COMMUNICATED_DATE,
                                BATCH_SOURCE_ID,
                                BATCH_SOURCE_NAME,
                                DOC_SEQ_ID,
                                DOC_SEQ_NAME,
                                DOC_SEQ_VALUE,
                                TRX_DUE_DATE,
                                TRX_TYPE_DESCRIPTION,
                                DOCUMENT_SUB_TYPE,
                                SUPPLIER_TAX_INVOICE_NUMBER,
                                SUPPLIER_TAX_INVOICE_DATE,
                                SUPPLIER_EXCHANGE_RATE,
                                TAX_INVOICE_DATE,
                                TAX_INVOICE_NUMBER,
                                FIRST_PTY_ORG_ID,
                                TAX_EVENT_CLASS_CODE,
                                TAX_EVENT_TYPE_CODE,
                                RDNG_SHIP_TO_PTY_TX_PROF_ID,
                                RDNG_SHIP_FROM_PTY_TX_PROF_ID,
                                RDNG_BILL_TO_PTY_TX_PROF_ID,
                                RDNG_BILL_FROM_PTY_TX_PROF_ID,
                                RDNG_SHIP_TO_PTY_TX_P_ST_ID,
                                RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
                                RDNG_BILL_TO_PTY_TX_P_ST_ID,
                                RDNG_BILL_FROM_PTY_TX_P_ST_ID,
                                LINE_INTENDED_USE ,
                                TRX_LINE_TYPE ,
                                TRX_SHIPPING_DATE,
                                TRX_RECEIPT_DATE,
                                TRX_SIC_CODE,
                                FOB_POINT ,
                                TRX_WAYBILL_NUMBER,
                                PRODUCT_ID,
                                PRODUCT_FISC_CLASSIFICATION ,
                                PRODUCT_ORG_ID,
                                UOM_CODE,
                                PRODUCT_TYPE ,
                                PRODUCT_CODE,
                                PRODUCT_CATEGORY ,
                                PRODUCT_DESCRIPTION,
                                USER_DEFINED_FISC_CLASS,
                                LINE_AMT,
                                TRX_LINE_QUANTITY,
                                UNIT_PRICE,
                                CASH_DISCOUNT,
                                VOLUME_DISCOUNT,
                                TRADING_DISCOUNT,
                                TRANSFER_CHARGE,
                                TRANSPORTATION_CHARGE,
                                INSURANCE_CHARGE,
                                OTHER_CHARGE,
                                ASSESSABLE_VALUE,
                                ASSET_FLAG,
                                ASSET_NUMBER,
                                ASSET_ACCUM_DEPRECIATION,
                                ASSET_TYPE,
                                ASSET_COST,
                                RELATED_DOC_APPLICATION_ID,
                                RELATED_DOC_ENTITY_CODE,
                                RELATED_DOC_EVENT_CLASS_CODE,
                                RELATED_DOC_TRX_ID,
                                RELATED_DOC_NUMBER,
                                RELATED_DOC_DATE,
                                APPLIED_FROM_APPLICATION_ID,
                                APPLIED_FROM_ENTITY_CODE,
                                APPLIED_FROM_EVENT_CLASS_CODE,
                                APPLIED_FROM_TRX_ID,
                                APPLIED_FROM_LINE_ID,
                                APPLIED_FROM_TRX_NUMBER,
                                ADJUSTED_DOC_APPLICATION_ID,
                                ADJUSTED_DOC_ENTITY_CODE,
                                ADJUSTED_DOC_EVENT_CLASS_CODE,
                                ADJUSTED_DOC_TRX_ID,
                                ADJUSTED_DOC_LINE_ID,
                                ADJUSTED_DOC_NUMBER,
                                ADJUSTED_DOC_DATE,
                                APPLIED_TO_APPLICATION_ID,
                                APPLIED_TO_ENTITY_CODE,
                                APPLIED_TO_EVENT_CLASS_CODE,
                                APPLIED_TO_TRX_ID ,
                                APPLIED_TO_TRX_LINE_ID,
                                TRX_ID_LEVEL2,
                                TRX_ID_LEVEL3,
                                TRX_ID_LEVEL4,
                                TRX_ID_LEVEL5,
                                TRX_ID_LEVEL6,
                                TRX_BUSINESS_CATEGORY,
                                EXEMPT_CERTIFICATE_NUMBER,
                                EXEMPT_REASON,
                                HISTORICAL_FLAG,
                                TRX_LINE_GL_DATE,
                                LINE_AMT_INCLUDES_TAX_FLAG,
                                ACCOUNT_CCID,
                                ACCOUNT_STRING,
                                MERCHANT_PARTY_TAX_PROF_ID,
                                HQ_ESTB_PARTY_TAX_PROF_ID,
                                NUMERIC1,
                                NUMERIC2,
                                NUMERIC3,
                                NUMERIC4,
                                NUMERIC5,
                                NUMERIC6,
                                NUMERIC7,
                                NUMERIC8,
                                NUMERIC9,
                                NUMERIC10,
                                CHAR1,
                                CHAR2,
                                CHAR3,
                                CHAR4,
                                CHAR5,
                                CHAR6,
                                CHAR7,
                                CHAR8,
                                CHAR9,
                                CHAR10,
                                DATE1,
                                DATE2,
                                DATE3,
                                DATE4,
                                DATE5,
                                DATE6,
                                DATE7,
                                DATE8,
                                DATE9,
                                DATE10,
                                MERCHANT_PARTY_NAME,
                                MERCHANT_PARTY_DOCUMENT_NUMBER,
                                MERCHANT_PARTY_REFERENCE,
                                MERCHANT_PARTY_TAXPAYER_ID,
                                MERCHANT_PARTY_TAX_REG_NUMBER,
                                MERCHANT_PARTY_ID,
                                MERCHANT_PARTY_COUNTRY,
                                SHIP_TO_LOCATION_ID,
                                SHIP_FROM_LOCATION_ID,
                                POA_LOCATION_ID,
                                POO_LOCATION_ID,
                                BILL_TO_LOCATION_ID,
                                BILL_FROM_LOCATION_ID,
                                PAYING_LOCATION_ID,
                                OWN_HQ_LOCATION_ID,
                                TRADING_HQ_LOCATION_ID,
                                POC_LOCATION_ID,
                                POI_LOCATION_ID,
                                POD_LOCATION_ID,
                                TITLE_TRANSFER_LOCATION_ID,
                                SHIP_TO_PARTY_TAX_PROF_ID ,
                                SHIP_FROM_PARTY_TAX_PROF_ID,
                                POA_PARTY_TAX_PROF_ID,
                                POO_PARTY_TAX_PROF_ID,
                                PAYING_PARTY_TAX_PROF_ID,
                                OWN_HQ_PARTY_TAX_PROF_ID,
                                TRADING_HQ_PARTY_TAX_PROF_ID,
                                POI_PARTY_TAX_PROF_ID,
                                POD_PARTY_TAX_PROF_ID,
                                BILL_TO_PARTY_TAX_PROF_ID,
                                BILL_FROM_PARTY_TAX_PROF_ID,
                                TITLE_TRANS_PARTY_TAX_PROF_ID,
                                SHIP_TO_SITE_TAX_PROF_ID,
                                SHIP_FROM_SITE_TAX_PROF_ID,
                                POA_SITE_TAX_PROF_ID,
                                POO_SITE_TAX_PROF_ID,
                                PAYING_SITE_TAX_PROF_ID,
                                OWN_HQ_SITE_TAX_PROF_ID,
                                TRADING_HQ_SITE_TAX_PROF_ID,
                                POI_SITE_TAX_PROF_ID,
                                POD_SITE_TAX_PROF_ID,
                                BILL_TO_SITE_TAX_PROF_ID,
                                BILL_FROM_SITE_TAX_PROF_ID,
                                TITLE_TRANS_SITE_TAX_PROF_ID,
                                CTRL_HDR_TX_APPL_FLAG,
                                CTRL_TOTAL_LINE_TX_AMT,
                                CTRL_TOTAL_HDR_TX_AMT,
                                REF_DOC_APPLICATION_ID,
                                REF_DOC_ENTITY_CODE,
                                REF_DOC_EVENT_CLASS_CODE,
                                REF_DOC_TRX_ID,
                                REF_DOC_LINE_ID,
                                REF_DOC_LINE_QUANTITY,
                                LINE_CLASS,
                                TRX_LINE_DATE,
                                INPUT_TAX_CLASSIFICATION_CODE,
                                OUTPUT_TAX_CLASSIFICATION_CODE,
                                INTERNAL_ORG_LOCATION_ID,
                                PORT_OF_ENTRY_CODE,
                                TAX_REPORTING_FLAG,
                                TAX_AMT_INCLUDED_FLAG,
                                COMPOUNDING_TAX_FLAG,
                                SHIP_THIRD_PTY_ACCT_ID,
                                BILL_THIRD_PTY_ACCT_ID,
                                SHIP_THIRD_PTY_ACCT_SITE_ID,
                                BILL_THIRD_PTY_ACCT_SITE_ID,
                                SHIP_TO_CUST_ACCT_SITE_USE_ID,
                                BILL_TO_CUST_ACCT_SITE_USE_ID,
                                START_EXPENSE_DATE,
                                TRX_BATCH_ID,
                                APPLIED_TO_TRX_NUMBER,
                                SOURCE_APPLICATION_ID,
                                SOURCE_ENTITY_CODE,
                                SOURCE_EVENT_CLASS_CODE,
                                SOURCE_TRX_ID,
                                SOURCE_LINE_ID,
                                SOURCE_TRX_LEVEL_TYPE,
                                SOURCE_TAX_LINE_ID,
                                REF_DOC_TRX_LEVEL_TYPE,
                                ADJUSTED_DOC_TRX_LEVEL_TYPE,
                                APPLIED_TO_TRX_LEVEL_TYPE,
                                APPLIED_FROM_TRX_LEVEL_TYPE,
                                APPLICATION_DOC_STATUS,
                                OBJECT_VERSION_NUMBER,
                                TAX_PROCESSING_COMPLETED_FLAG,
                                USER_UPD_DET_FACTORS_FLAG,
                                RECORD_TYPE_CODE,
                                HDR_TRX_USER_KEY1,
                                HDR_TRX_USER_KEY2,
                                HDR_TRX_USER_KEY3,
                                HDR_TRX_USER_KEY4,
                                HDR_TRX_USER_KEY5,
                                HDR_TRX_USER_KEY6,
                                LINE_TRX_USER_KEY1,
                                LINE_TRX_USER_KEY2,
                                LINE_TRX_USER_KEY3,
                                LINE_TRX_USER_KEY4,
                                LINE_TRX_USER_KEY5,
                                LINE_TRX_USER_KEY6,
                                TAX_CALCULATION_DONE_FLAG,
                                REVERSED_APPLN_ID,
                                REVERSED_ENTITY_CODE,
                                REVERSED_EVNT_CLS_CODE,
                                REVERSED_TRX_ID,
                                REVERSED_TRX_LEVEL_TYPE,
                                REVERSED_TRX_LINE_ID,
                                EXEMPTION_CONTROL_FLAG,
                                EXEMPT_REASON_CODE,
                                INTERFACE_ENTITY_CODE,
                                INTERFACE_LINE_ID,
                                DEFAULTING_ATTRIBUTE1,
                                DEFAULTING_ATTRIBUTE2,
                                DEFAULTING_ATTRIBUTE3,
                                DEFAULTING_ATTRIBUTE4,
                                DEFAULTING_ATTRIBUTE5,
                                DEFAULTING_ATTRIBUTE6,
                                DEFAULTING_ATTRIBUTE7,
                                DEFAULTING_ATTRIBUTE8,
                                DEFAULTING_ATTRIBUTE9,
                                DEFAULTING_ATTRIBUTE10,
                                PROVNL_TAX_DETERMINATION_DATE,
                                HISTORICAL_TAX_CODE_ID,
                                GLOBAL_ATTRIBUTE_CATEGORY,
                                GLOBAL_ATTRIBUTE1,
                                TOTAL_INC_TAX_AMT,
                                ICX_SESSION_ID,
                                CREATION_DATE,
                                CREATED_BY,
                                LAST_UPDATE_DATE,
                                LAST_UPDATED_BY,
                                LAST_UPDATE_LOGIN)
                         SELECT p_event_class_rec.event_id,
                                p_trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(i),
                                p_trx_line_dist_tbl.APPLICATION_ID(i),
                                p_trx_line_dist_tbl.ENTITY_CODE(i),
                                p_trx_line_dist_tbl.EVENT_CLASS_CODE(i),
                                p_event_class_rec.EVENT_CLASS_MAPPING_ID,
                                p_trx_line_dist_tbl.EVENT_TYPE_CODE(i),
                                p_event_class_rec.DOC_STATUS_CODE,
                                p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i),
                                p_trx_line_dist_tbl.TRX_ID(i),
                                p_trx_line_dist_tbl.TRX_LINE_ID(i),
                                p_trx_line_dist_tbl.TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.TRX_DATE(i),
                                p_trx_line_dist_tbl.TRX_DOC_REVISION(i),
                                p_trx_line_dist_tbl.LEDGER_ID(i),
                                p_trx_line_dist_tbl.TRX_CURRENCY_CODE(i),
                                p_trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(i),
                                p_trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(i),
                                p_trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(i),
                                p_trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(i),
                                p_trx_line_dist_tbl.PRECISION(i),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE(i),p_trx_line_dist_tbl.TRX_CURRENCY_CODE(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_MAU(i),p_trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(i)),
                                NVL(p_trx_line_dist_tbl.TRX_LINE_PRECISION(i),p_trx_line_dist_tbl.PRECISION(i)),
                                p_trx_line_dist_tbl.LEGAL_ENTITY_ID(i),
                                p_trx_line_dist_tbl.ESTABLISHMENT_ID(i),
                                p_trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID(i),
                                p_trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(i),
                                p_trx_line_dist_tbl.TRX_NUMBER(i),
                                p_trx_line_dist_tbl.TRX_LINE_NUMBER(i),
                                p_trx_line_dist_tbl.TRX_LINE_DESCRIPTION(i),
                                p_trx_line_dist_tbl.TRX_DESCRIPTION(i),
                                p_trx_line_dist_tbl.TRX_COMMUNICATED_DATE(i),
                                p_trx_line_dist_tbl.BATCH_SOURCE_ID(i),
                                p_trx_line_dist_tbl.BATCH_SOURCE_NAME(i),
                                p_trx_line_dist_tbl.DOC_SEQ_ID(i),
                                p_trx_line_dist_tbl.DOC_SEQ_NAME(i),
                                p_trx_line_dist_tbl.DOC_SEQ_VALUE(i),
                                p_trx_line_dist_tbl.TRX_DUE_DATE(i),
                                p_trx_line_dist_tbl.TRX_TYPE_DESCRIPTION(i),
                                p_trx_line_dist_tbl.DOCUMENT_SUB_TYPE(i),
                                p_trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER(i),
                                p_trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE(i),
                                p_trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE(i),
                                p_trx_line_dist_tbl.TAX_INVOICE_DATE(i),
                                p_trx_line_dist_tbl.TAX_INVOICE_NUMBER(i),
                                p_trx_line_dist_tbl.FIRST_PTY_ORG_ID(i),
                                p_trx_line_dist_tbl.TAX_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.TAX_EVENT_TYPE_CODE(i),
                                p_trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID(i),
                                p_trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID(i),
                                p_trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID(i),
                                p_trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID(i),
                                p_trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID(i),
                                p_trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID(i),
                                p_trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID(i),
                                p_trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID(i),
                                p_trx_line_dist_tbl.LINE_INTENDED_USE(i),
                                p_trx_line_dist_tbl.TRX_LINE_TYPE(i),
                                p_trx_line_dist_tbl.TRX_SHIPPING_DATE(i),
                                p_trx_line_dist_tbl.TRX_RECEIPT_DATE(i),
                                p_trx_line_dist_tbl.TRX_SIC_CODE(i),
                                p_trx_line_dist_tbl.FOB_POINT(i),
                                p_trx_line_dist_tbl.TRX_WAYBILL_NUMBER(i),
                                p_trx_line_dist_tbl.PRODUCT_ID(i),
                                p_trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(i),
                                p_trx_line_dist_tbl.PRODUCT_ORG_ID(i),
                                p_trx_line_dist_tbl.UOM_CODE(i),
                                p_trx_line_dist_tbl.PRODUCT_TYPE(i),
                                p_trx_line_dist_tbl.PRODUCT_CODE(i),
                                p_trx_line_dist_tbl.PRODUCT_CATEGORY(i),
                                p_trx_line_dist_tbl.PRODUCT_DESCRIPTION(i),
                                p_trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(i),
                                p_trx_line_dist_tbl.LINE_AMT(i),
                                p_trx_line_dist_tbl.TRX_LINE_QUANTITY(i),
                                p_trx_line_dist_tbl.UNIT_PRICE(i),
                                p_trx_line_dist_tbl.CASH_DISCOUNT(i),
                                p_trx_line_dist_tbl.VOLUME_DISCOUNT(i),
                                p_trx_line_dist_tbl.TRADING_DISCOUNT(i),
                                p_trx_line_dist_tbl.TRANSFER_CHARGE(i),
                                p_trx_line_dist_tbl.TRANSPORTATION_CHARGE(i),
                                p_trx_line_dist_tbl.INSURANCE_CHARGE(i),
                                p_trx_line_dist_tbl.OTHER_CHARGE(i),
                                p_trx_line_dist_tbl.ASSESSABLE_VALUE(i),
                                p_trx_line_dist_tbl.ASSET_FLAG(i),
                                p_trx_line_dist_tbl.ASSET_NUMBER(i),
                                p_trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION(i),
                                p_trx_line_dist_tbl.ASSET_TYPE(i),
                                p_trx_line_dist_tbl.ASSET_COST(i),
                                p_trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.RELATED_DOC_TRX_ID(i),
                                p_trx_line_dist_tbl.RELATED_DOC_NUMBER(i),
                                p_trx_line_dist_tbl.RELATED_DOC_DATE(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_TRX_ID(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_LINE_ID(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_NUMBER(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_DATE(i),
                                p_trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.APPLIED_TO_TRX_ID(i),
                                p_trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL2(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL3(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL4(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL5(i),
                                p_trx_line_dist_tbl.TRX_ID_LEVEL6(i),
                                p_trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(i),
                                p_trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER(i),
                                p_trx_line_dist_tbl.EXEMPT_REASON(i),
                                p_trx_line_dist_tbl.HISTORICAL_FLAG(i),
                                p_trx_line_dist_tbl.TRX_LINE_GL_DATE(i),
                                p_trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG(i),
                                p_trx_line_dist_tbl.ACCOUNT_CCID(i),
                                p_trx_line_dist_tbl.ACCOUNT_STRING(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.NUMERIC1(i),
                                p_trx_line_dist_tbl.NUMERIC2(i),
                                p_trx_line_dist_tbl.NUMERIC3(i),
                                p_trx_line_dist_tbl.NUMERIC4(i),
                                p_trx_line_dist_tbl.NUMERIC5(i),
                                p_trx_line_dist_tbl.NUMERIC6(i),
                                p_trx_line_dist_tbl.NUMERIC7(i),
                                p_trx_line_dist_tbl.NUMERIC8(i),
                                p_trx_line_dist_tbl.NUMERIC9(i),
                                p_trx_line_dist_tbl.NUMERIC10(i),
                                p_trx_line_dist_tbl.CHAR1(i),
                                p_trx_line_dist_tbl.CHAR2(i),
                                p_trx_line_dist_tbl.CHAR3(i),
                                p_trx_line_dist_tbl.CHAR4(i),
                                p_trx_line_dist_tbl.CHAR5(i),
                                p_trx_line_dist_tbl.CHAR6(i),
                                p_trx_line_dist_tbl.CHAR7(i),
                                p_trx_line_dist_tbl.CHAR8(i),
                                p_trx_line_dist_tbl.CHAR9(i),
                                p_trx_line_dist_tbl.CHAR10(i),
                                p_trx_line_dist_tbl.DATE1(i),
                                p_trx_line_dist_tbl.DATE2(i),
                                p_trx_line_dist_tbl.DATE3(i),
                                p_trx_line_dist_tbl.DATE4(i),
                                p_trx_line_dist_tbl.DATE5(i),
                                p_trx_line_dist_tbl.DATE6(i),
                                p_trx_line_dist_tbl.DATE7(i),
                                p_trx_line_dist_tbl.DATE8(i),
                                p_trx_line_dist_tbl.DATE9(i),
                                p_trx_line_dist_tbl.DATE10(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_NAME(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_ID(i),
                                p_trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY(i),
                                p_trx_line_dist_tbl.SHIP_TO_LOCATION_ID(i),
                                p_trx_line_dist_tbl.SHIP_FROM_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POA_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POO_LOCATION_ID(i),
                                p_trx_line_dist_tbl.BILL_TO_LOCATION_ID(i),
                                p_trx_line_dist_tbl.BILL_FROM_LOCATION_ID(i),
                                p_trx_line_dist_tbl.PAYING_LOCATION_ID(i),
                                p_trx_line_dist_tbl.OWN_HQ_LOCATION_ID(i),
                                p_trx_line_dist_tbl.TRADING_HQ_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POC_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POI_LOCATION_ID(i),
                                p_trx_line_dist_tbl.POD_LOCATION_ID(i),
                                p_trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID(i),
                                p_trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POA_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POO_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POI_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.POD_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID(i),
                                p_trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG(i),
                                p_trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT(i),
                                p_trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT(i),
                                p_trx_line_dist_tbl.REF_DOC_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.REF_DOC_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.REF_DOC_TRX_ID(i),
                                p_trx_line_dist_tbl.REF_DOC_LINE_ID(i),
                                p_trx_line_dist_tbl.REF_DOC_LINE_QUANTITY(i),
                                NVL(p_trx_line_dist_tbl.LINE_CLASS(i),p_event_class_rec.EVENT_CLASS_CODE), --Bugfix 4938879
                                p_trx_line_dist_tbl.TRX_LINE_DATE(i),
                                p_trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE(i),
                                p_trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE(i),
                                p_trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(i),
                                p_trx_line_dist_tbl.PORT_OF_ENTRY_CODE(i),
                                DECODE(p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i),'RECORD_WITH_NO_TAX','N',
                                      DECODE(p_event_class_rec.record_flag, 'N', 'N',NVL(p_trx_line_dist_tbl.TAX_REPORTING_FLAG(i),p_event_class_rec.tax_reporting_flag))), --Bug fix 5155481
                                p_trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG(i),
                                p_trx_line_dist_tbl.COMPOUNDING_TAX_FLAG(i),
                                p_trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID(i),
                                p_trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID(i),
                                p_trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID(i),
                                p_trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID(i),
                                p_trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID(i),
                                p_trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID(i),
                                p_trx_line_dist_tbl.START_EXPENSE_DATE(i),
                                p_trx_line_dist_tbl.TRX_BATCH_ID(i),
                                p_trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER(i),
                                p_trx_line_dist_tbl.SOURCE_APPLICATION_ID(i),
                                p_trx_line_dist_tbl.SOURCE_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(i),
                                p_trx_line_dist_tbl.SOURCE_TRX_ID(i),
                                p_trx_line_dist_tbl.SOURCE_LINE_ID(i),
                                p_trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.SOURCE_TAX_LINE_ID(i),
                                p_trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.APPLICATION_DOC_STATUS(i),
                                1,
                                p_trx_line_dist_tbl.TAX_PROCESSING_COMPLETED_FLAG(i),
                                p_trx_line_dist_tbl.user_upd_det_factors_flag(i),
                                'ETAX_CREATED',
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY1(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY2(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY3(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY4(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY5(i),
                                p_trx_line_dist_tbl.HDR_TRX_USER_KEY6(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY1(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY2(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY3(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY4(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY5(i),
                                p_trx_line_dist_tbl.LINE_TRX_USER_KEY6(i),
                                p_event_class_rec.TAX_CALCULATION_DONE_FLAG,
                                p_trx_line_dist_tbl.REVERSED_APPLN_ID(i),
                                p_trx_line_dist_tbl.REVERSED_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.REVERSED_EVNT_CLS_CODE(i),
                                p_trx_line_dist_tbl.REVERSED_TRX_ID(i),
                                p_trx_line_dist_tbl.REVERSED_TRX_LEVEL_TYPE(i),
                                p_trx_line_dist_tbl.REVERSED_TRX_LINE_ID(i),
                                p_trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG(i),
                                p_trx_line_dist_tbl.EXEMPT_REASON_CODE(i),
                                p_trx_line_dist_tbl.INTERFACE_ENTITY_CODE(i),
                                p_trx_line_dist_tbl.INTERFACE_LINE_ID(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9(i),
                                p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10(i),
                                p_trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE(i),
                                p_trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID(i),
                                p_trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY(i),
                                p_trx_line_dist_tbl.GLOBAL_ATTRIBUTE1(i),
                                NVL(p_trx_line_dist_tbl.TOTAL_INC_TAX_AMT(i),0),
                                DECODE(ZX_API_PUB.G_PUB_SRVC,'CALCULATE_TAX', ZX_SECURITY.G_ICX_SESSION_ID, null),
                                SYSDATE SYSTEM_DATE_1,
                                fnd_global.user_id USER_ID_1,
                                SYSDATE SYSTEM_DATE_2,
                                fnd_global.user_id USER_ID_2,
                                fnd_global.conc_login_id
                           FROM DUAL
                          WHERE NOT EXISTS (SELECT 'Y'
                                              FROM zx_errors_gt err_gt
                                             WHERE err_gt.application_id   = p_trx_line_dist_tbl.application_id(i)
                                               AND err_gt.entity_code      = p_trx_line_dist_tbl.entity_code(i)
                                               AND err_gt.event_class_code = p_trx_line_dist_tbl.event_class_code(i)
                                               AND err_gt.trx_id           = p_trx_line_dist_tbl.trx_id(i))
                            AND p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i) IN
                                     ('CREATE',
                                      'CREATE_TAX_ONLY',
                                      'APPLY_FROM',
                                      'INTERCOMPANY_CREATE',
                                      'LINE_INFO_TAX_ONLY',
                                      'CREATE_WITH_TAX',
                                      'ALLOCATE_TAX_ONLY_ADJUSTMENT',
                                      'COPY_AND_CREATE',
                                      'RECORD_WITH_NO_TAX');
    END IF;

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',
           G_PKG_NAME||':'||l_api_name||'(). Records Inserted = ' || SQL%ROWCOUNT);
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',
           G_PKG_NAME||':'||l_api_name||'()-'||', RETURN_STATUS = ' || x_return_status);
       END IF;

 EXCEPTION
    WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
 END db_insert_line_det_factors;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  db_update_line_det_factors
--
--  DESCRIPTION
--  Bulk update into zx_lines_det_factors
--
--  CALLED BY
--    calculate_tax
--    insupd_line_det_factors
-----------------------------------------------------------------------
/*----------------------------------------------------------------------------*
 |p_update needed in case of UPDATE tax event type wherein some records passed|
 |need to be updated in zx_lines_det_factors while others need to be inserted |
 |depending on the line level action. This scenario is applicable only for    |
 |Calculate_tax API. p_update stores the index from which the lines from      |
 |the collection needs to be updated to zx_lines_det_factors                  |
 *----------------------------------------------------------------------------*/

PROCEDURE db_update_line_det_factors
   (p_trx_line_dist_tbl  IN         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl%TYPE,
    p_event_class_rec    IN         ZX_API_PUB.event_class_rec_type,
    p_update_index       IN         NUMBER,
    x_return_status      OUT NOCOPY VARCHAR2)
IS
  l_api_name           CONSTANT VARCHAR2(30):= 'UPDATE_LINE_DET_FACTORS';
  l_context_info_rec   ZX_API_PUB.context_info_rec_type;
  l_insert_tab         ZX_API_PUB.VARCHAR2_1_tbl_type;
  l_return_status      VARCHAR2(1);

  BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||':'||l_api_name||'()+');
    END IF;

    /*Set the return status to Success */
    x_return_status := FND_API.G_RET_STS_SUCCESS;

    /* In case of UPDATE, then if line_level_action in (UPDATE/DISCARD/CANCEL/SYNCHRONIZE) then UPDATE
       if line_level_action in (CREATE/CREATE_TAX_ONLY/APPLY_FROM/UNAPPLY_FROM/LINE_INFO_TAX_ONLY) then INSERT
    */

    /*Here we need to take the snapshot of det_factors before updation,so that this info can be used
     during contra entry for parnter*/

    IF nvl(zx_global_structures_pkg.g_ptnr_srvc_subscr_flag,'Y') = 'Y' THEN
       ZX_R11I_TAX_PARTNER_PKG.copy_trx_line_for_ptnr_bef_upd(p_trx_line_dist_tbl,
                                                              p_event_class_rec,
                                                              p_update_index,
                                                              'N',
                                                              NULL,
                                                              NULL,
                                                              l_return_status
                                                             );
       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status ;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,G_PKG_NAME||': '||l_api_name||':ZX_R11I_TAX_PARTNER_PKG.copy_trx_line_for_ptnr_bef_upd  returned errors');
          END IF;
          RETURN;
       END IF;
    END IF;

    -- Added IF-ELSE statement for Bug#7588449
    IF ZX_API_PUB.G_PUB_SRVC = 'UPDATE_LINE_DET_FACTORS' OR
       (ZX_API_PUB.G_DATA_TRANSFER_MODE = 'WIN' AND
        p_event_class_rec.quote_flag ='N' AND
        p_event_class_rec.tax_event_type_code IN('UPDATE','CREATE'))
    THEN
       --FORALL i IN NVL(p_trx_line_dist_tbl.application_id.FIRST,0) .. NVL(p_update_index,-99)
       -- Bug 8873180
       FORALL i IN  INDICES OF p_trx_line_dist_tbl.application_id BETWEEN NVL(p_trx_line_dist_tbl.application_id.FIRST,0) AND NVL(p_update_index,-99)
       UPDATE ZX_LINES_DET_FACTORS SET
                                EVENT_ID                       = p_event_class_rec.event_id,
                                INTERNAL_ORGANIZATION_ID       = p_trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(i),
                                EVENT_TYPE_CODE                = p_trx_line_dist_tbl.EVENT_TYPE_CODE(i),
                                DOC_EVENT_STATUS               = p_event_class_rec.DOC_STATUS_CODE,
                                LINE_LEVEL_ACTION              = p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i),
                                LINE_CLASS                     = NVL(p_trx_line_dist_tbl.LINE_CLASS(i),p_event_class_rec.EVENT_CLASS_CODE), --Bugfix 4938879
                                TRX_DATE                       = p_trx_line_dist_tbl.TRX_DATE(i),
                                TRX_DOC_REVISION               = p_trx_line_dist_tbl.TRX_DOC_REVISION(i),
                                LEDGER_ID                      = p_trx_line_dist_tbl.LEDGER_ID(i),
                                TRX_CURRENCY_CODE              = p_trx_line_dist_tbl.TRX_CURRENCY_CODE(i),
                                CURRENCY_CONVERSION_DATE       = p_trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(i),
                                CURRENCY_CONVERSION_RATE       = p_trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(i),
                                CURRENCY_CONVERSION_TYPE       = p_trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(i),
                                MINIMUM_ACCOUNTABLE_UNIT       = p_trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(i),
                                PRECISION                      = p_trx_line_dist_tbl.PRECISION(i),
                                TRX_LINE_CURRENCY_CODE         = NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE(i),p_trx_line_dist_tbl.TRX_CURRENCY_CODE(i)),
                                TRX_LINE_CURRENCY_CONV_DATE    = NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(i)),
                                TRX_LINE_CURRENCY_CONV_RATE    = NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(i)),
                                TRX_LINE_CURRENCY_CONV_TYPE    = NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(i)),
                                TRX_LINE_MAU                   = NVL(p_trx_line_dist_tbl.TRX_LINE_MAU(i),p_trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(i)),
                                TRX_LINE_PRECISION             = NVL(p_trx_line_dist_tbl.TRX_LINE_PRECISION(i),p_trx_line_dist_tbl.PRECISION(i)),
                                LEGAL_ENTITY_ID                = p_trx_line_dist_tbl.LEGAL_ENTITY_ID(i),
                                ESTABLISHMENT_ID               = p_trx_line_dist_tbl.ESTABLISHMENT_ID(i),
                                RECEIVABLES_TRX_TYPE_ID        = p_trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID(i),
                                DEFAULT_TAXATION_COUNTRY       = NVL(p_trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(i), DEFAULT_TAXATION_COUNTRY),   -- Bug 5659537
                                TRX_NUMBER                     = p_trx_line_dist_tbl.TRX_NUMBER(i),
                                TRX_LINE_NUMBER                = p_trx_line_dist_tbl.TRX_LINE_NUMBER(i),
                                TRX_LINE_DESCRIPTION           = p_trx_line_dist_tbl.TRX_LINE_DESCRIPTION(i),
                                TRX_DESCRIPTION                = p_trx_line_dist_tbl.TRX_DESCRIPTION(i),
                                TRX_COMMUNICATED_DATE          = p_trx_line_dist_tbl.TRX_COMMUNICATED_DATE(i),
                                BATCH_SOURCE_ID                = p_trx_line_dist_tbl.BATCH_SOURCE_ID(i),
                                BATCH_SOURCE_NAME              = p_trx_line_dist_tbl.BATCH_SOURCE_NAME(i),
                                DOC_SEQ_ID                     = p_trx_line_dist_tbl.DOC_SEQ_ID(i),
                                DOC_SEQ_NAME                   = p_trx_line_dist_tbl.DOC_SEQ_NAME(i),
                                DOC_SEQ_VALUE                  = p_trx_line_dist_tbl.DOC_SEQ_VALUE(i),
                                TRX_DUE_DATE                   = p_trx_line_dist_tbl.TRX_DUE_DATE(i),
                                TRX_TYPE_DESCRIPTION           = p_trx_line_dist_tbl.TRX_TYPE_DESCRIPTION(i),
                                DOCUMENT_SUB_TYPE              = NVL(p_trx_line_dist_tbl.DOCUMENT_SUB_TYPE(i), DOCUMENT_SUB_TYPE),   -- Bug 5659537
                                SUPPLIER_TAX_INVOICE_NUMBER    = p_trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER(i),
                                SUPPLIER_TAX_INVOICE_DATE      = p_trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE(i),
                                SUPPLIER_EXCHANGE_RATE         = p_trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE(i),
                                TAX_INVOICE_DATE               = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y', TAX_INVOICE_DATE, NVL(p_trx_line_dist_tbl.TAX_INVOICE_DATE(i), TAX_INVOICE_DATE)),  -- Bug 5659357
                                TAX_INVOICE_NUMBER             = p_trx_line_dist_tbl.TAX_INVOICE_NUMBER(i),
                                FIRST_PTY_ORG_ID               = p_trx_line_dist_tbl.FIRST_PTY_ORG_ID(i),
                                TAX_EVENT_CLASS_CODE           = p_event_class_rec.TAX_EVENT_CLASS_CODE,
                                TAX_EVENT_TYPE_CODE            = p_event_class_rec.TAX_EVENT_TYPE_CODE,
                                RDNG_SHIP_TO_PTY_TX_PROF_ID    = p_trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID(i),
                                RDNG_SHIP_FROM_PTY_TX_PROF_ID  = p_trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID(i),
                                RDNG_BILL_TO_PTY_TX_PROF_ID    = p_trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID(i),
                                RDNG_BILL_FROM_PTY_TX_PROF_ID  = p_trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID(i),
                                RDNG_SHIP_TO_PTY_TX_P_ST_ID    = p_trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID(i),
                                RDNG_SHIP_FROM_PTY_TX_P_ST_ID  = p_trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID(i),
                                RDNG_BILL_TO_PTY_TX_P_ST_ID    = p_trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID(i),
                                RDNG_BILL_FROM_PTY_TX_P_ST_ID  = p_trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID(i),
                                LINE_INTENDED_USE              = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y', LINE_INTENDED_USE, NVL(p_trx_line_dist_tbl.LINE_INTENDED_USE(i), LINE_INTENDED_USE)), --Bug 7371329
                                TRX_LINE_TYPE                  = p_trx_line_dist_tbl.TRX_LINE_TYPE(i),
                                TRX_SHIPPING_DATE              = p_trx_line_dist_tbl.TRX_SHIPPING_DATE(i),
                                TRX_RECEIPT_DATE               = p_trx_line_dist_tbl.TRX_RECEIPT_DATE(i),
                                TRX_SIC_CODE                   = p_trx_line_dist_tbl.TRX_SIC_CODE(i),
                                FOB_POINT                      = p_trx_line_dist_tbl.FOB_POINT(i),
                                TRX_WAYBILL_NUMBER             = p_trx_line_dist_tbl.TRX_WAYBILL_NUMBER(i),
                                PRODUCT_ID                     = p_trx_line_dist_tbl.PRODUCT_ID(i),
                                PRODUCT_FISC_CLASSIFICATION    = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y', NVL(p_trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(i), PRODUCT_FISC_CLASSIFICATION)),  -- Bug 5659357
                                PRODUCT_ORG_ID                 = p_trx_line_dist_tbl.PRODUCT_ORG_ID(i),
                                UOM_CODE                       = p_trx_line_dist_tbl.UOM_CODE(i),
                                PRODUCT_TYPE                   = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y',PRODUCT_TYPE,NVL(p_trx_line_dist_tbl.PRODUCT_TYPE(i), PRODUCT_TYPE)),  -- Bug 5659357
                                PRODUCT_CODE                   = p_trx_line_dist_tbl.PRODUCT_CODE(i),
                                PRODUCT_CATEGORY               = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y',PRODUCT_CATEGORY, NVL(p_trx_line_dist_tbl.PRODUCT_CATEGORY(i), PRODUCT_CATEGORY)),  -- Bug 5659357
                                PRODUCT_DESCRIPTION            = p_trx_line_dist_tbl.PRODUCT_DESCRIPTION(i),
                                USER_DEFINED_FISC_CLASS        = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y',USER_DEFINED_FISC_CLASS,NVL(p_trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(i), USER_DEFINED_FISC_CLASS)),  -- Bug 5659357
                                LINE_AMT                       = p_trx_line_dist_tbl.LINE_AMT(i),
                                TRX_LINE_QUANTITY              = p_trx_line_dist_tbl.TRX_LINE_QUANTITY(i),
                                UNIT_PRICE                     = p_trx_line_dist_tbl.UNIT_PRICE(i),
                                CASH_DISCOUNT                  = p_trx_line_dist_tbl.CASH_DISCOUNT(i),
                                VOLUME_DISCOUNT                = p_trx_line_dist_tbl.VOLUME_DISCOUNT(i),
                                TRADING_DISCOUNT               = p_trx_line_dist_tbl.TRADING_DISCOUNT(i),
                                TRANSFER_CHARGE                = p_trx_line_dist_tbl.TRANSFER_CHARGE(i),
                                TRANSPORTATION_CHARGE          = p_trx_line_dist_tbl.TRANSPORTATION_CHARGE(i),
                                INSURANCE_CHARGE               = p_trx_line_dist_tbl.INSURANCE_CHARGE(i),
                                OTHER_CHARGE                   = p_trx_line_dist_tbl.OTHER_CHARGE(i),
                                ASSESSABLE_VALUE               = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y',ASSESSABLE_VALUE,NVL(p_trx_line_dist_tbl.ASSESSABLE_VALUE(i), ASSESSABLE_VALUE)),  -- Bug 5659357
                                ASSET_FLAG                     = p_trx_line_dist_tbl.ASSET_FLAG(i),
                                ASSET_NUMBER                   = p_trx_line_dist_tbl.ASSET_NUMBER(i),
                                ASSET_ACCUM_DEPRECIATION       = p_trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION(i),
                                ASSET_TYPE                     = p_trx_line_dist_tbl.ASSET_TYPE(i),
                                ASSET_COST                     = p_trx_line_dist_tbl.ASSET_COST(i),
                                RELATED_DOC_APPLICATION_ID     = p_trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID(i),
                                RELATED_DOC_ENTITY_CODE        = p_trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE(i),
                                RELATED_DOC_EVENT_CLASS_CODE   = p_trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE(i),
                                RELATED_DOC_TRX_ID             = p_trx_line_dist_tbl.RELATED_DOC_TRX_ID(i),
                                RELATED_DOC_NUMBER             = p_trx_line_dist_tbl.RELATED_DOC_NUMBER(i),
                                RELATED_DOC_DATE               = p_trx_line_dist_tbl.RELATED_DOC_DATE(i),
                                APPLIED_FROM_APPLICATION_ID    = p_trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID(i),
                                APPLIED_FROM_ENTITY_CODE       = p_trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE(i),
                                APPLIED_FROM_EVENT_CLASS_CODE  = p_trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE(i),
                                APPLIED_FROM_TRX_ID            = p_trx_line_dist_tbl.APPLIED_FROM_TRX_ID(i),
                                APPLIED_FROM_LINE_ID           = p_trx_line_dist_tbl.APPLIED_FROM_LINE_ID(i),
                                APPLIED_FROM_TRX_NUMBER        = p_trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER(i),
                                ADJUSTED_DOC_APPLICATION_ID    = p_trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID(i),
                                ADJUSTED_DOC_ENTITY_CODE       = p_trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE(i),
                                ADJUSTED_DOC_EVENT_CLASS_CODE  = p_trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE(i),
                                ADJUSTED_DOC_TRX_ID            = p_trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID(i),
                                ADJUSTED_DOC_LINE_ID           = p_trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID(i),
                                ADJUSTED_DOC_NUMBER            = p_trx_line_dist_tbl.ADJUSTED_DOC_NUMBER(i),
                                ADJUSTED_DOC_DATE              = p_trx_line_dist_tbl.ADJUSTED_DOC_DATE(i),
                                APPLIED_TO_APPLICATION_ID      = p_trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID(i),
                                APPLIED_TO_ENTITY_CODE         = p_trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE(i),
                                APPLIED_TO_EVENT_CLASS_CODE    = p_trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE(i),
                                APPLIED_TO_TRX_ID              = p_trx_line_dist_tbl.APPLIED_TO_TRX_ID(i),
                                APPLIED_TO_TRX_LINE_ID         = p_trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID(i),
                                TRX_ID_LEVEL2                  = p_trx_line_dist_tbl.TRX_ID_LEVEL2(i),
                                TRX_ID_LEVEL3                  = p_trx_line_dist_tbl.TRX_ID_LEVEL3(i),
                                TRX_ID_LEVEL4                  = p_trx_line_dist_tbl.TRX_ID_LEVEL4(i),
                                TRX_ID_LEVEL5                  = p_trx_line_dist_tbl.TRX_ID_LEVEL5(i),
                                TRX_ID_LEVEL6                  = p_trx_line_dist_tbl.TRX_ID_LEVEL6(i),
                                TRX_BUSINESS_CATEGORY          = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y', TRX_BUSINESS_CATEGORY, NVL(p_trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(i), TRX_BUSINESS_CATEGORY)),  -- Bug 5659357
                                EXEMPT_CERTIFICATE_NUMBER      = p_trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER(i),
                                EXEMPT_REASON                  = p_trx_line_dist_tbl.EXEMPT_REASON(i),
                                HISTORICAL_FLAG                = NVL(HISTORICAL_FLAG,p_trx_line_dist_tbl.HISTORICAL_FLAG(i)),
                                TRX_LINE_GL_DATE               = p_trx_line_dist_tbl.TRX_LINE_GL_DATE(i),
                                LINE_AMT_INCLUDES_TAX_FLAG     = p_trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG(i),
                                ACCOUNT_CCID                   = p_trx_line_dist_tbl.ACCOUNT_CCID(i),
                                ACCOUNT_STRING                 = p_trx_line_dist_tbl.ACCOUNT_STRING(i),
                                MERCHANT_PARTY_TAX_PROF_ID     = p_trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID(i),
                                HQ_ESTB_PARTY_TAX_PROF_ID      = p_trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID(i),
                                NUMERIC1                       = p_trx_line_dist_tbl.NUMERIC1(i),
                                NUMERIC2                       = p_trx_line_dist_tbl.NUMERIC2(i),
                                NUMERIC3                       = p_trx_line_dist_tbl.NUMERIC3(i),
                                NUMERIC4                       = p_trx_line_dist_tbl.NUMERIC4(i),
                                NUMERIC5                       = p_trx_line_dist_tbl.NUMERIC5(i),
                                NUMERIC6                       = p_trx_line_dist_tbl.NUMERIC6(i),
                                NUMERIC7                       = p_trx_line_dist_tbl.NUMERIC7(i),
                                NUMERIC8                       = p_trx_line_dist_tbl.NUMERIC8(i),
                                NUMERIC9                       = p_trx_line_dist_tbl.NUMERIC9(i),
                                NUMERIC10                      = p_trx_line_dist_tbl.NUMERIC10(i),
                                CHAR1                          = p_trx_line_dist_tbl.CHAR1(i),
                                CHAR2                          = p_trx_line_dist_tbl.CHAR2(i),
                                CHAR3                          = p_trx_line_dist_tbl.CHAR3(i),
                                CHAR4                          = p_trx_line_dist_tbl.CHAR4(i),
                                CHAR5                          = p_trx_line_dist_tbl.CHAR5(i),
                                CHAR6                          = p_trx_line_dist_tbl.CHAR6(i),
                                CHAR7                          = p_trx_line_dist_tbl.CHAR7(i),
                                CHAR8                          = p_trx_line_dist_tbl.CHAR8(i),
                                CHAR9                          = p_trx_line_dist_tbl.CHAR9(i),
                                CHAR10                         = p_trx_line_dist_tbl.CHAR10(i),
                                DATE1                          = p_trx_line_dist_tbl.DATE1(i),
                                DATE2                          = p_trx_line_dist_tbl.DATE2(i),
                                DATE3                          = p_trx_line_dist_tbl.DATE3(i),
                                DATE4                          = p_trx_line_dist_tbl.DATE4(i),
                                DATE5                          = p_trx_line_dist_tbl.DATE5(i),
                                DATE6                          = p_trx_line_dist_tbl.DATE6(i),
                                DATE7                          = p_trx_line_dist_tbl.DATE7(i),
                                DATE8                          = p_trx_line_dist_tbl.DATE8(i),
                                DATE9                          = p_trx_line_dist_tbl.DATE9(i),
                                DATE10                         = p_trx_line_dist_tbl.DATE10(i),
                                MERCHANT_PARTY_NAME            = p_trx_line_dist_tbl.MERCHANT_PARTY_NAME(i),
                                MERCHANT_PARTY_DOCUMENT_NUMBER = p_trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER(i),
                                MERCHANT_PARTY_REFERENCE       = p_trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE(i),
                                MERCHANT_PARTY_TAXPAYER_ID     = p_trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID(i),
                                MERCHANT_PARTY_TAX_REG_NUMBER  = p_trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER(i),
                                MERCHANT_PARTY_ID              = p_trx_line_dist_tbl.MERCHANT_PARTY_ID(i),
                                MERCHANT_PARTY_COUNTRY         = p_trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY(i),
                                SHIP_TO_LOCATION_ID            = p_trx_line_dist_tbl.SHIP_TO_LOCATION_ID(i),
                                SHIP_FROM_LOCATION_ID          = p_trx_line_dist_tbl.SHIP_FROM_LOCATION_ID(i),
                                POA_LOCATION_ID                = p_trx_line_dist_tbl.POA_LOCATION_ID(i),
                                POO_LOCATION_ID                = p_trx_line_dist_tbl.POO_LOCATION_ID(i),
                                BILL_TO_LOCATION_ID            = p_trx_line_dist_tbl.BILL_TO_LOCATION_ID(i),
                                BILL_FROM_LOCATION_ID          = p_trx_line_dist_tbl.BILL_FROM_LOCATION_ID(i),
                                PAYING_LOCATION_ID             = p_trx_line_dist_tbl.PAYING_LOCATION_ID(i),
                                OWN_HQ_LOCATION_ID             = p_trx_line_dist_tbl.OWN_HQ_LOCATION_ID(i),
                                TRADING_HQ_LOCATION_ID         = p_trx_line_dist_tbl.TRADING_HQ_LOCATION_ID(i),
                                POC_LOCATION_ID                = p_trx_line_dist_tbl.POC_LOCATION_ID(i),
                                POI_LOCATION_ID                = p_trx_line_dist_tbl.POI_LOCATION_ID(i),
                                POD_LOCATION_ID                = p_trx_line_dist_tbl.POD_LOCATION_ID(i),
                                TITLE_TRANSFER_LOCATION_ID     = p_trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID(i),
                                SHIP_TO_PARTY_TAX_PROF_ID      = p_trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID(i),
                                SHIP_FROM_PARTY_TAX_PROF_ID    = p_trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID(i),
                                POA_PARTY_TAX_PROF_ID          = p_trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID(i),
                                POO_PARTY_TAX_PROF_ID          = p_trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID(i),
                                PAYING_PARTY_TAX_PROF_ID       = p_trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID(i),
                                OWN_HQ_PARTY_TAX_PROF_ID       = p_trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID(i),
                                TRADING_HQ_PARTY_TAX_PROF_ID   = p_trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID(i),
                                POI_PARTY_TAX_PROF_ID          = p_trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID(i),
                                POD_PARTY_TAX_PROF_ID          = p_trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID(i),
                                BILL_TO_PARTY_TAX_PROF_ID      = p_trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID(i),
                                BILL_FROM_PARTY_TAX_PROF_ID    = p_trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID(i),
                                TITLE_TRANS_PARTY_TAX_PROF_ID  = p_trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID(i),
                                SHIP_TO_SITE_TAX_PROF_ID       = p_trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID(i),
                                SHIP_FROM_SITE_TAX_PROF_ID     = p_trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID(i),
                                POA_SITE_TAX_PROF_ID           = p_trx_line_dist_tbl.POA_SITE_TAX_PROF_ID(i),
                                POO_SITE_TAX_PROF_ID           = p_trx_line_dist_tbl.POO_SITE_TAX_PROF_ID(i),
                                PAYING_SITE_TAX_PROF_ID        = p_trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID(i),
                                OWN_HQ_SITE_TAX_PROF_ID        = p_trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID(i),
                                TRADING_HQ_SITE_TAX_PROF_ID    = p_trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID(i),
                                POI_SITE_TAX_PROF_ID           = p_trx_line_dist_tbl.POI_SITE_TAX_PROF_ID(i),
                                POD_SITE_TAX_PROF_ID           = p_trx_line_dist_tbl.POD_SITE_TAX_PROF_ID(i),
                                BILL_TO_SITE_TAX_PROF_ID       = p_trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID(i),
                                BILL_FROM_SITE_TAX_PROF_ID     = p_trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID(i),
                                TITLE_TRANS_SITE_TAX_PROF_ID   = p_trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID(i),
                                CTRL_HDR_TX_APPL_FLAG          = p_trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG(i),
                                CTRL_TOTAL_LINE_TX_AMT         = p_trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT(i),
                                CTRL_TOTAL_HDR_TX_AMT          = p_trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT(i),
                                REF_DOC_APPLICATION_ID         = p_trx_line_dist_tbl.REF_DOC_APPLICATION_ID(i),
                                REF_DOC_ENTITY_CODE            = p_trx_line_dist_tbl.REF_DOC_ENTITY_CODE(i),
                                REF_DOC_EVENT_CLASS_CODE       = p_trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE(i),
                                REF_DOC_TRX_ID                 = p_trx_line_dist_tbl.REF_DOC_TRX_ID(i),
                                REF_DOC_LINE_ID                = p_trx_line_dist_tbl.REF_DOC_LINE_ID(i),
                                REF_DOC_LINE_QUANTITY          = p_trx_line_dist_tbl.REF_DOC_LINE_QUANTITY(i),
                                TRX_LINE_DATE                  = p_trx_line_dist_tbl.TRX_LINE_DATE(i),
                                INPUT_TAX_CLASSIFICATION_CODE  = p_trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE(i),
                                OUTPUT_TAX_CLASSIFICATION_CODE = p_trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE(i),
                                INTERNAL_ORG_LOCATION_ID       = p_trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(i),
                                PORT_OF_ENTRY_CODE             = p_trx_line_dist_tbl.PORT_OF_ENTRY_CODE(i),
                                TAX_REPORTING_FLAG             = DECODE(p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i),'RECORD_WITH_NO_TAX'
                                                                                                                  ,'N'
                                                                                                                  ,NVL(p_trx_line_dist_tbl.TAX_REPORTING_FLAG(i),p_event_class_rec.tax_reporting_flag)),
                                TAX_AMT_INCLUDED_FLAG          = p_trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG(i),
                                COMPOUNDING_TAX_FLAG           = p_trx_line_dist_tbl.COMPOUNDING_TAX_FLAG(i),
                                SHIP_THIRD_PTY_ACCT_ID         = p_trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID(i),
                                BILL_THIRD_PTY_ACCT_ID         = p_trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID(i),
                                SHIP_THIRD_PTY_ACCT_SITE_ID    = p_trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID(i),
                                BILL_THIRD_PTY_ACCT_SITE_ID    = p_trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID(i),
                                SHIP_TO_CUST_ACCT_SITE_USE_ID  = p_trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID(i),
                                BILL_TO_CUST_ACCT_SITE_USE_ID  = p_trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID(i),
                                START_EXPENSE_DATE             = p_trx_line_dist_tbl.START_EXPENSE_DATE(i),
                                TRX_BATCH_ID                   = p_trx_line_dist_tbl.TRX_BATCH_ID(i),
                                APPLIED_TO_TRX_NUMBER          = p_trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER(i),
                                SOURCE_APPLICATION_ID          = p_trx_line_dist_tbl.SOURCE_APPLICATION_ID(i),
                                SOURCE_ENTITY_CODE             = p_trx_line_dist_tbl.SOURCE_ENTITY_CODE(i),
                                SOURCE_EVENT_CLASS_CODE        = p_trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(i),
                                SOURCE_TRX_ID                  = p_trx_line_dist_tbl.SOURCE_TRX_ID(i),
                                SOURCE_LINE_ID                 = p_trx_line_dist_tbl.SOURCE_LINE_ID(i),
                                SOURCE_TRX_LEVEL_TYPE          = p_trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE(i),
                                SOURCE_TAX_LINE_ID             = p_trx_line_dist_tbl.SOURCE_TAX_LINE_ID(i),
                                REF_DOC_TRX_LEVEL_TYPE         = p_trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE(i),
                                APPLIED_TO_TRX_LEVEL_TYPE      = p_trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE(i),
                                APPLIED_FROM_TRX_LEVEL_TYPE    = p_trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE(i),
                                ADJUSTED_DOC_TRX_LEVEL_TYPE    = p_trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE(i),
                                APPLICATION_DOC_STATUS         = p_trx_line_dist_tbl.APPLICATION_DOC_STATUS(i),
                                TAX_PROCESSING_COMPLETED_FLAG  = p_trx_line_dist_tbl.TAX_PROCESSING_COMPLETED_FLAG(i),
                                TAX_CALCULATION_DONE_FLAG      = p_event_class_rec.TAX_CALCULATION_DONE_FLAG,
                                OBJECT_VERSION_NUMBER          = OBJECT_VERSION_NUMBER+1,
                                HDR_TRX_USER_KEY1              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY1(i),
                                HDR_TRX_USER_KEY2              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY2(i),
                                HDR_TRX_USER_KEY3              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY3(i),
                                HDR_TRX_USER_KEY4              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY4(i),
                                HDR_TRX_USER_KEY5              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY5(i),
                                HDR_TRX_USER_KEY6              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY6(i),
                                LINE_TRX_USER_KEY1             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY1(i),
                                LINE_TRX_USER_KEY2             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY2(i),
                                LINE_TRX_USER_KEY3             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY3(i),
                                LINE_TRX_USER_KEY4             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY4(i),
                                LINE_TRX_USER_KEY5             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY5(i),
                                LINE_TRX_USER_KEY6             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY6(i),
                                EXEMPTION_CONTROL_FLAG         = p_trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG(i),
                                EXEMPT_REASON_CODE             = p_trx_line_dist_tbl.EXEMPT_REASON_CODE(i),
                                INTERFACE_ENTITY_CODE          = p_trx_line_dist_tbl.INTERFACE_ENTITY_CODE(i),
                                INTERFACE_LINE_ID              = p_trx_line_dist_tbl.INTERFACE_LINE_ID(i),
                                DEFAULTING_ATTRIBUTE1          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1(i),
                                DEFAULTING_ATTRIBUTE2          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2(i),
                                DEFAULTING_ATTRIBUTE3          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3(i),
                                DEFAULTING_ATTRIBUTE4          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4(i),
                                DEFAULTING_ATTRIBUTE5          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5(i),
                                DEFAULTING_ATTRIBUTE6          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6(i),
                                DEFAULTING_ATTRIBUTE7          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7(i),
                                DEFAULTING_ATTRIBUTE8          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8(i),
                                DEFAULTING_ATTRIBUTE9          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9(i),
                                DEFAULTING_ATTRIBUTE10         = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10(i),
                                PROVNL_TAX_DETERMINATION_DATE  = p_trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE(i),
                                HISTORICAL_TAX_CODE_ID         = p_trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID(i),
                                GLOBAL_ATTRIBUTE_CATEGORY      = p_trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY(i),
                                GLOBAL_ATTRIBUTE1              = p_trx_line_dist_tbl.GLOBAL_ATTRIBUTE1(i),
                                USER_UPD_DET_FACTORS_FLAG      = NVL(p_trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG(i), USER_UPD_DET_FACTORS_FLAG),  -- Bug 5659357
                                TOTAL_INC_TAX_AMT              = DECODE(p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i), 'NO_CHANGE', TOTAL_INC_TAX_AMT,
                                                                        NVL(p_trx_line_dist_tbl.TOTAL_INC_TAX_AMT(i),0)),
                                ICX_SESSION_ID                 = DECODE (ZX_API_PUB.G_PUB_SRVC,'CALCULATE_TAX', ZX_SECURITY.G_ICX_SESSION_ID, null),
                                LAST_UPDATE_DATE               = sysdate,
                                LAST_UPDATED_BY                = fnd_global.user_id,
                                LAST_UPDATE_LOGIN              = fnd_global.conc_login_id
    	   WHERE APPLICATION_ID   = p_event_class_rec.APPLICATION_ID
           AND ENTITY_CODE      = p_event_class_rec.ENTITY_CODE
           AND EVENT_CLASS_CODE = p_event_class_rec.EVENT_CLASS_CODE
           AND TRX_ID           = p_trx_line_dist_tbl.TRX_ID(i)
           AND TRX_LINE_ID      = p_trx_line_dist_tbl.TRX_LINE_ID(i)
           AND TRX_LEVEL_TYPE   = p_trx_line_dist_tbl.TRX_LEVEL_TYPE(i)
           AND NOT EXISTS (SELECT 'Y'
                             FROM zx_errors_gt err_gt
                            WHERE err_gt.application_id   = p_trx_line_dist_tbl.application_id(i)
                              AND err_gt.entity_code      = p_trx_line_dist_tbl.entity_code(i)
                              AND err_gt.event_class_code = p_trx_line_dist_tbl.event_class_code(i)
                              AND err_gt.trx_id           = p_trx_line_dist_tbl.trx_id(i));
    ELSE
       --FORALL i IN NVL(p_trx_line_dist_tbl.application_id.FIRST,0) .. NVL(p_update_index,-99)
       -- Bug 8873180
       FORALL i IN  INDICES OF p_trx_line_dist_tbl.application_id BETWEEN NVL(p_trx_line_dist_tbl.application_id.FIRST,0) AND NVL(p_update_index,-99)
       UPDATE ZX_LINES_DET_FACTORS SET
                                EVENT_ID                       = p_event_class_rec.event_id,
                                INTERNAL_ORGANIZATION_ID       = p_trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(i),
                                EVENT_TYPE_CODE                = p_trx_line_dist_tbl.EVENT_TYPE_CODE(i),
                                DOC_EVENT_STATUS               = p_event_class_rec.DOC_STATUS_CODE,
                                LINE_LEVEL_ACTION              = p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i),
                                LINE_CLASS                     = NVL(p_trx_line_dist_tbl.LINE_CLASS(i),p_event_class_rec.EVENT_CLASS_CODE), --Bugfix 4938879
                                TRX_DATE                       = p_trx_line_dist_tbl.TRX_DATE(i),
                                TRX_DOC_REVISION               = p_trx_line_dist_tbl.TRX_DOC_REVISION(i),
                                LEDGER_ID                      = p_trx_line_dist_tbl.LEDGER_ID(i),
                                TRX_CURRENCY_CODE              = p_trx_line_dist_tbl.TRX_CURRENCY_CODE(i),
                                CURRENCY_CONVERSION_DATE       = p_trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(i),
                                CURRENCY_CONVERSION_RATE       = p_trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(i),
                                CURRENCY_CONVERSION_TYPE       = p_trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(i),
                                MINIMUM_ACCOUNTABLE_UNIT       = p_trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(i),
                                PRECISION                      = p_trx_line_dist_tbl.PRECISION(i),
                                TRX_LINE_CURRENCY_CODE         = NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE(i),p_trx_line_dist_tbl.TRX_CURRENCY_CODE(i)),
                                TRX_LINE_CURRENCY_CONV_DATE    = NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(i)),
                                TRX_LINE_CURRENCY_CONV_RATE    = NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(i)),
                                TRX_LINE_CURRENCY_CONV_TYPE    = NVL(p_trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE(i),p_trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(i)),
                                TRX_LINE_MAU                   = NVL(p_trx_line_dist_tbl.TRX_LINE_MAU(i),p_trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(i)),
                                TRX_LINE_PRECISION             = NVL(p_trx_line_dist_tbl.TRX_LINE_PRECISION(i),p_trx_line_dist_tbl.PRECISION(i)),
                                LEGAL_ENTITY_ID                = p_trx_line_dist_tbl.LEGAL_ENTITY_ID(i),
                                ESTABLISHMENT_ID               = p_trx_line_dist_tbl.ESTABLISHMENT_ID(i),
                                RECEIVABLES_TRX_TYPE_ID        = p_trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID(i),
                                DEFAULT_TAXATION_COUNTRY       = NVL(p_trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(i), DEFAULT_TAXATION_COUNTRY),   -- Bug 5659537
                                TRX_NUMBER                     = p_trx_line_dist_tbl.TRX_NUMBER(i),
                                TRX_LINE_NUMBER                = p_trx_line_dist_tbl.TRX_LINE_NUMBER(i),
                                TRX_LINE_DESCRIPTION           = p_trx_line_dist_tbl.TRX_LINE_DESCRIPTION(i),
                                TRX_DESCRIPTION                = p_trx_line_dist_tbl.TRX_DESCRIPTION(i),
                                TRX_COMMUNICATED_DATE          = p_trx_line_dist_tbl.TRX_COMMUNICATED_DATE(i),
                                BATCH_SOURCE_ID                = p_trx_line_dist_tbl.BATCH_SOURCE_ID(i),
                                BATCH_SOURCE_NAME              = p_trx_line_dist_tbl.BATCH_SOURCE_NAME(i),
                                DOC_SEQ_ID                     = p_trx_line_dist_tbl.DOC_SEQ_ID(i),
                                DOC_SEQ_NAME                   = p_trx_line_dist_tbl.DOC_SEQ_NAME(i),
                                DOC_SEQ_VALUE                  = p_trx_line_dist_tbl.DOC_SEQ_VALUE(i),
                                TRX_DUE_DATE                   = p_trx_line_dist_tbl.TRX_DUE_DATE(i),
                                TRX_TYPE_DESCRIPTION           = p_trx_line_dist_tbl.TRX_TYPE_DESCRIPTION(i),
                                DOCUMENT_SUB_TYPE              = NVL(p_trx_line_dist_tbl.DOCUMENT_SUB_TYPE(i), DOCUMENT_SUB_TYPE),   -- Bug 5659537
                                SUPPLIER_TAX_INVOICE_NUMBER    = p_trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER(i),
                                SUPPLIER_TAX_INVOICE_DATE      = p_trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE(i),
                                SUPPLIER_EXCHANGE_RATE         = p_trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE(i),
                                TAX_INVOICE_DATE               = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y', TAX_INVOICE_DATE, NVL(p_trx_line_dist_tbl.TAX_INVOICE_DATE(i), TAX_INVOICE_DATE)),  -- Bug 5659357
                                TAX_INVOICE_NUMBER             = p_trx_line_dist_tbl.TAX_INVOICE_NUMBER(i),
                                FIRST_PTY_ORG_ID               = p_trx_line_dist_tbl.FIRST_PTY_ORG_ID(i),
                                TAX_EVENT_CLASS_CODE           = p_event_class_rec.TAX_EVENT_CLASS_CODE,
                                TAX_EVENT_TYPE_CODE            = p_event_class_rec.TAX_EVENT_TYPE_CODE,
                                RDNG_SHIP_TO_PTY_TX_PROF_ID    = p_trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID(i),
                                RDNG_SHIP_FROM_PTY_TX_PROF_ID  = p_trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID(i),
                                RDNG_BILL_TO_PTY_TX_PROF_ID    = p_trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID(i),
                                RDNG_BILL_FROM_PTY_TX_PROF_ID  = p_trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID(i),
                                RDNG_SHIP_TO_PTY_TX_P_ST_ID    = p_trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID(i),
                                RDNG_SHIP_FROM_PTY_TX_P_ST_ID  = p_trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID(i),
                                RDNG_BILL_TO_PTY_TX_P_ST_ID    = p_trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID(i),
                                RDNG_BILL_FROM_PTY_TX_P_ST_ID  = p_trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID(i),
                                LINE_INTENDED_USE              = p_trx_line_dist_tbl.LINE_INTENDED_USE(i),
                                TRX_LINE_TYPE                  = p_trx_line_dist_tbl.TRX_LINE_TYPE(i),
                                TRX_SHIPPING_DATE              = p_trx_line_dist_tbl.TRX_SHIPPING_DATE(i),
                                TRX_RECEIPT_DATE               = p_trx_line_dist_tbl.TRX_RECEIPT_DATE(i),
                                TRX_SIC_CODE                   = p_trx_line_dist_tbl.TRX_SIC_CODE(i),
                                FOB_POINT                      = p_trx_line_dist_tbl.FOB_POINT(i),
                                TRX_WAYBILL_NUMBER             = p_trx_line_dist_tbl.TRX_WAYBILL_NUMBER(i),
                                PRODUCT_ID                     = p_trx_line_dist_tbl.PRODUCT_ID(i),
                                PRODUCT_FISC_CLASSIFICATION    = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y', NVL(p_trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(i), PRODUCT_FISC_CLASSIFICATION)),  -- Bug 5659357
                                PRODUCT_ORG_ID                 = p_trx_line_dist_tbl.PRODUCT_ORG_ID(i),
                                UOM_CODE                       = p_trx_line_dist_tbl.UOM_CODE(i),
                                PRODUCT_TYPE                   = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y',PRODUCT_TYPE,NVL(p_trx_line_dist_tbl.PRODUCT_TYPE(i), PRODUCT_TYPE)),  -- Bug 5659357
                                PRODUCT_CODE                   = p_trx_line_dist_tbl.PRODUCT_CODE(i),
                                PRODUCT_CATEGORY               = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y',PRODUCT_CATEGORY, NVL(p_trx_line_dist_tbl.PRODUCT_CATEGORY(i), PRODUCT_CATEGORY)),  -- Bug 5659357
                                PRODUCT_DESCRIPTION            = p_trx_line_dist_tbl.PRODUCT_DESCRIPTION(i),
                                USER_DEFINED_FISC_CLASS        = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y',USER_DEFINED_FISC_CLASS,NVL(p_trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(i), USER_DEFINED_FISC_CLASS)),  -- Bug 5659357
                                LINE_AMT                       = p_trx_line_dist_tbl.LINE_AMT(i),
                                TRX_LINE_QUANTITY              = p_trx_line_dist_tbl.TRX_LINE_QUANTITY(i),
                                UNIT_PRICE                     = p_trx_line_dist_tbl.UNIT_PRICE(i),
                                CASH_DISCOUNT                  = p_trx_line_dist_tbl.CASH_DISCOUNT(i),
                                VOLUME_DISCOUNT                = p_trx_line_dist_tbl.VOLUME_DISCOUNT(i),
                                TRADING_DISCOUNT               = p_trx_line_dist_tbl.TRADING_DISCOUNT(i),
                                TRANSFER_CHARGE                = p_trx_line_dist_tbl.TRANSFER_CHARGE(i),
                                TRANSPORTATION_CHARGE          = p_trx_line_dist_tbl.TRANSPORTATION_CHARGE(i),
                                INSURANCE_CHARGE               = p_trx_line_dist_tbl.INSURANCE_CHARGE(i),
                                OTHER_CHARGE                   = p_trx_line_dist_tbl.OTHER_CHARGE(i),
                                ASSESSABLE_VALUE               = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y',ASSESSABLE_VALUE,NVL(p_trx_line_dist_tbl.ASSESSABLE_VALUE(i), ASSESSABLE_VALUE)),  -- Bug 5659357
                                ASSET_FLAG                     = p_trx_line_dist_tbl.ASSET_FLAG(i),
                                ASSET_NUMBER                   = p_trx_line_dist_tbl.ASSET_NUMBER(i),
                                ASSET_ACCUM_DEPRECIATION       = p_trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION(i),
                                ASSET_TYPE                     = p_trx_line_dist_tbl.ASSET_TYPE(i),
                                ASSET_COST                     = p_trx_line_dist_tbl.ASSET_COST(i),
                                RELATED_DOC_APPLICATION_ID     = p_trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID(i),
                                RELATED_DOC_ENTITY_CODE        = p_trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE(i),
                                RELATED_DOC_EVENT_CLASS_CODE   = p_trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE(i),
                                RELATED_DOC_TRX_ID             = p_trx_line_dist_tbl.RELATED_DOC_TRX_ID(i),
                                RELATED_DOC_NUMBER             = p_trx_line_dist_tbl.RELATED_DOC_NUMBER(i),
                                RELATED_DOC_DATE               = p_trx_line_dist_tbl.RELATED_DOC_DATE(i),
                                APPLIED_FROM_APPLICATION_ID    = p_trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID(i),
                                APPLIED_FROM_ENTITY_CODE       = p_trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE(i),
                                APPLIED_FROM_EVENT_CLASS_CODE  = p_trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE(i),
                                APPLIED_FROM_TRX_ID            = p_trx_line_dist_tbl.APPLIED_FROM_TRX_ID(i),
                                APPLIED_FROM_LINE_ID           = p_trx_line_dist_tbl.APPLIED_FROM_LINE_ID(i),
                                APPLIED_FROM_TRX_NUMBER        = p_trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER(i),
                                ADJUSTED_DOC_APPLICATION_ID    = p_trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID(i),
                                ADJUSTED_DOC_ENTITY_CODE       = p_trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE(i),
                                ADJUSTED_DOC_EVENT_CLASS_CODE  = p_trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE(i),
                                ADJUSTED_DOC_TRX_ID            = p_trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID(i),
                                ADJUSTED_DOC_LINE_ID           = p_trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID(i),
                                ADJUSTED_DOC_NUMBER            = p_trx_line_dist_tbl.ADJUSTED_DOC_NUMBER(i),
                                ADJUSTED_DOC_DATE              = p_trx_line_dist_tbl.ADJUSTED_DOC_DATE(i),
                                APPLIED_TO_APPLICATION_ID      = p_trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID(i),
                                APPLIED_TO_ENTITY_CODE         = p_trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE(i),
                                APPLIED_TO_EVENT_CLASS_CODE    = p_trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE(i),
                                APPLIED_TO_TRX_ID              = p_trx_line_dist_tbl.APPLIED_TO_TRX_ID(i),
                                APPLIED_TO_TRX_LINE_ID         = p_trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID(i),
                                TRX_ID_LEVEL2                  = p_trx_line_dist_tbl.TRX_ID_LEVEL2(i),
                                TRX_ID_LEVEL3                  = p_trx_line_dist_tbl.TRX_ID_LEVEL3(i),
                                TRX_ID_LEVEL4                  = p_trx_line_dist_tbl.TRX_ID_LEVEL4(i),
                                TRX_ID_LEVEL5                  = p_trx_line_dist_tbl.TRX_ID_LEVEL5(i),
                                TRX_ID_LEVEL6                  = p_trx_line_dist_tbl.TRX_ID_LEVEL6(i),
                                TRX_BUSINESS_CATEGORY          = DECODE(USER_UPD_DET_FACTORS_FLAG,'Y', TRX_BUSINESS_CATEGORY, NVL(p_trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(i), TRX_BUSINESS_CATEGORY)),  -- Bug 5659357
                                EXEMPT_CERTIFICATE_NUMBER      = p_trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER(i),
                                EXEMPT_REASON                  = p_trx_line_dist_tbl.EXEMPT_REASON(i),
                                HISTORICAL_FLAG                = NVL(HISTORICAL_FLAG,p_trx_line_dist_tbl.HISTORICAL_FLAG(i)),
                                TRX_LINE_GL_DATE               = p_trx_line_dist_tbl.TRX_LINE_GL_DATE(i),
                                LINE_AMT_INCLUDES_TAX_FLAG     = p_trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG(i),
                                ACCOUNT_CCID                   = p_trx_line_dist_tbl.ACCOUNT_CCID(i),
                                ACCOUNT_STRING                 = p_trx_line_dist_tbl.ACCOUNT_STRING(i),
                                MERCHANT_PARTY_TAX_PROF_ID     = p_trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID(i),
                                HQ_ESTB_PARTY_TAX_PROF_ID      = p_trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID(i),
                                NUMERIC1                       = p_trx_line_dist_tbl.NUMERIC1(i),
                                NUMERIC2                       = p_trx_line_dist_tbl.NUMERIC2(i),
                                NUMERIC3                       = p_trx_line_dist_tbl.NUMERIC3(i),
                                NUMERIC4                       = p_trx_line_dist_tbl.NUMERIC4(i),
                                NUMERIC5                       = p_trx_line_dist_tbl.NUMERIC5(i),
                                NUMERIC6                       = p_trx_line_dist_tbl.NUMERIC6(i),
                                NUMERIC7                       = p_trx_line_dist_tbl.NUMERIC7(i),
                                NUMERIC8                       = p_trx_line_dist_tbl.NUMERIC8(i),
                                NUMERIC9                       = p_trx_line_dist_tbl.NUMERIC9(i),
                                NUMERIC10                      = p_trx_line_dist_tbl.NUMERIC10(i),
                                CHAR1                          = p_trx_line_dist_tbl.CHAR1(i),
                                CHAR2                          = p_trx_line_dist_tbl.CHAR2(i),
                                CHAR3                          = p_trx_line_dist_tbl.CHAR3(i),
                                CHAR4                          = p_trx_line_dist_tbl.CHAR4(i),
                                CHAR5                          = p_trx_line_dist_tbl.CHAR5(i),
                                CHAR6                          = p_trx_line_dist_tbl.CHAR6(i),
                                CHAR7                          = p_trx_line_dist_tbl.CHAR7(i),
                                CHAR8                          = p_trx_line_dist_tbl.CHAR8(i),
                                CHAR9                          = p_trx_line_dist_tbl.CHAR9(i),
                                CHAR10                         = p_trx_line_dist_tbl.CHAR10(i),
                                DATE1                          = p_trx_line_dist_tbl.DATE1(i),
                                DATE2                          = p_trx_line_dist_tbl.DATE2(i),
                                DATE3                          = p_trx_line_dist_tbl.DATE3(i),
                                DATE4                          = p_trx_line_dist_tbl.DATE4(i),
                                DATE5                          = p_trx_line_dist_tbl.DATE5(i),
                                DATE6                          = p_trx_line_dist_tbl.DATE6(i),
                                DATE7                          = p_trx_line_dist_tbl.DATE7(i),
                                DATE8                          = p_trx_line_dist_tbl.DATE8(i),
                                DATE9                          = p_trx_line_dist_tbl.DATE9(i),
                                DATE10                         = p_trx_line_dist_tbl.DATE10(i),
                                MERCHANT_PARTY_NAME            = p_trx_line_dist_tbl.MERCHANT_PARTY_NAME(i),
                                MERCHANT_PARTY_DOCUMENT_NUMBER = p_trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER(i),
                                MERCHANT_PARTY_REFERENCE       = p_trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE(i),
                                MERCHANT_PARTY_TAXPAYER_ID     = p_trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID(i),
                                MERCHANT_PARTY_TAX_REG_NUMBER  = p_trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER(i),
                                MERCHANT_PARTY_ID              = p_trx_line_dist_tbl.MERCHANT_PARTY_ID(i),
                                MERCHANT_PARTY_COUNTRY         = p_trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY(i),
                                SHIP_TO_LOCATION_ID            = p_trx_line_dist_tbl.SHIP_TO_LOCATION_ID(i),
                                SHIP_FROM_LOCATION_ID          = p_trx_line_dist_tbl.SHIP_FROM_LOCATION_ID(i),
                                POA_LOCATION_ID                = p_trx_line_dist_tbl.POA_LOCATION_ID(i),
                                POO_LOCATION_ID                = p_trx_line_dist_tbl.POO_LOCATION_ID(i),
                                BILL_TO_LOCATION_ID            = p_trx_line_dist_tbl.BILL_TO_LOCATION_ID(i),
                                BILL_FROM_LOCATION_ID          = p_trx_line_dist_tbl.BILL_FROM_LOCATION_ID(i),
                                PAYING_LOCATION_ID             = p_trx_line_dist_tbl.PAYING_LOCATION_ID(i),
                                OWN_HQ_LOCATION_ID             = p_trx_line_dist_tbl.OWN_HQ_LOCATION_ID(i),
                                TRADING_HQ_LOCATION_ID         = p_trx_line_dist_tbl.TRADING_HQ_LOCATION_ID(i),
                                POC_LOCATION_ID                = p_trx_line_dist_tbl.POC_LOCATION_ID(i),
                                POI_LOCATION_ID                = p_trx_line_dist_tbl.POI_LOCATION_ID(i),
                                POD_LOCATION_ID                = p_trx_line_dist_tbl.POD_LOCATION_ID(i),
                                TITLE_TRANSFER_LOCATION_ID     = p_trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID(i),
                                SHIP_TO_PARTY_TAX_PROF_ID      = p_trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID(i),
                                SHIP_FROM_PARTY_TAX_PROF_ID    = p_trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID(i),
                                POA_PARTY_TAX_PROF_ID          = p_trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID(i),
                                POO_PARTY_TAX_PROF_ID          = p_trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID(i),
                                PAYING_PARTY_TAX_PROF_ID       = p_trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID(i),
                                OWN_HQ_PARTY_TAX_PROF_ID       = p_trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID(i),
                                TRADING_HQ_PARTY_TAX_PROF_ID   = p_trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID(i),
                                POI_PARTY_TAX_PROF_ID          = p_trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID(i),
                                POD_PARTY_TAX_PROF_ID          = p_trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID(i),
                                BILL_TO_PARTY_TAX_PROF_ID      = p_trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID(i),
                                BILL_FROM_PARTY_TAX_PROF_ID    = p_trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID(i),
                                TITLE_TRANS_PARTY_TAX_PROF_ID  = p_trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID(i),
                                SHIP_TO_SITE_TAX_PROF_ID       = p_trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID(i),
                                SHIP_FROM_SITE_TAX_PROF_ID     = p_trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID(i),
                                POA_SITE_TAX_PROF_ID           = p_trx_line_dist_tbl.POA_SITE_TAX_PROF_ID(i),
                                POO_SITE_TAX_PROF_ID           = p_trx_line_dist_tbl.POO_SITE_TAX_PROF_ID(i),
                                PAYING_SITE_TAX_PROF_ID        = p_trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID(i),
                                OWN_HQ_SITE_TAX_PROF_ID        = p_trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID(i),
                                TRADING_HQ_SITE_TAX_PROF_ID    = p_trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID(i),
                                POI_SITE_TAX_PROF_ID           = p_trx_line_dist_tbl.POI_SITE_TAX_PROF_ID(i),
                                POD_SITE_TAX_PROF_ID           = p_trx_line_dist_tbl.POD_SITE_TAX_PROF_ID(i),
                                BILL_TO_SITE_TAX_PROF_ID       = p_trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID(i),
                                BILL_FROM_SITE_TAX_PROF_ID     = p_trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID(i),
                                TITLE_TRANS_SITE_TAX_PROF_ID   = p_trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID(i),
                                CTRL_HDR_TX_APPL_FLAG          = p_trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG(i),
                                CTRL_TOTAL_LINE_TX_AMT         = p_trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT(i),
                                CTRL_TOTAL_HDR_TX_AMT          = p_trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT(i),
                                REF_DOC_APPLICATION_ID         = p_trx_line_dist_tbl.REF_DOC_APPLICATION_ID(i),
                                REF_DOC_ENTITY_CODE            = p_trx_line_dist_tbl.REF_DOC_ENTITY_CODE(i),
                                REF_DOC_EVENT_CLASS_CODE       = p_trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE(i),
                                REF_DOC_TRX_ID                 = p_trx_line_dist_tbl.REF_DOC_TRX_ID(i),
                                REF_DOC_LINE_ID                = p_trx_line_dist_tbl.REF_DOC_LINE_ID(i),
                                REF_DOC_LINE_QUANTITY          = p_trx_line_dist_tbl.REF_DOC_LINE_QUANTITY(i),
                                TRX_LINE_DATE                  = p_trx_line_dist_tbl.TRX_LINE_DATE(i),
                                INPUT_TAX_CLASSIFICATION_CODE  = p_trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE(i),
                                OUTPUT_TAX_CLASSIFICATION_CODE = p_trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE(i),
                                INTERNAL_ORG_LOCATION_ID       = p_trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(i),
                                PORT_OF_ENTRY_CODE             = p_trx_line_dist_tbl.PORT_OF_ENTRY_CODE(i),
                                TAX_REPORTING_FLAG             = DECODE(p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i),'RECORD_WITH_NO_TAX'
                                                                                                                  ,'N'
                                                                                                                  ,NVL(p_trx_line_dist_tbl.TAX_REPORTING_FLAG(i),p_event_class_rec.tax_reporting_flag)),
                                TAX_AMT_INCLUDED_FLAG          = p_trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG(i),
                                COMPOUNDING_TAX_FLAG           = p_trx_line_dist_tbl.COMPOUNDING_TAX_FLAG(i),
                                SHIP_THIRD_PTY_ACCT_ID         = p_trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID(i),
                                BILL_THIRD_PTY_ACCT_ID         = p_trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID(i),
                                SHIP_THIRD_PTY_ACCT_SITE_ID    = p_trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID(i),
                                BILL_THIRD_PTY_ACCT_SITE_ID    = p_trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID(i),
                                SHIP_TO_CUST_ACCT_SITE_USE_ID  = p_trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID(i),
                                BILL_TO_CUST_ACCT_SITE_USE_ID  = p_trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID(i),
                                START_EXPENSE_DATE             = p_trx_line_dist_tbl.START_EXPENSE_DATE(i),
                                TRX_BATCH_ID                   = p_trx_line_dist_tbl.TRX_BATCH_ID(i),
                                APPLIED_TO_TRX_NUMBER          = p_trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER(i),
                                SOURCE_APPLICATION_ID          = p_trx_line_dist_tbl.SOURCE_APPLICATION_ID(i),
                                SOURCE_ENTITY_CODE             = p_trx_line_dist_tbl.SOURCE_ENTITY_CODE(i),
                                SOURCE_EVENT_CLASS_CODE        = p_trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(i),
                                SOURCE_TRX_ID                  = p_trx_line_dist_tbl.SOURCE_TRX_ID(i),
                                SOURCE_LINE_ID                 = p_trx_line_dist_tbl.SOURCE_LINE_ID(i),
                                SOURCE_TRX_LEVEL_TYPE          = p_trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE(i),
                                SOURCE_TAX_LINE_ID             = p_trx_line_dist_tbl.SOURCE_TAX_LINE_ID(i),
                                REF_DOC_TRX_LEVEL_TYPE         = p_trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE(i),
                                APPLIED_TO_TRX_LEVEL_TYPE      = p_trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE(i),
                                APPLIED_FROM_TRX_LEVEL_TYPE    = p_trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE(i),
                                ADJUSTED_DOC_TRX_LEVEL_TYPE    = p_trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE(i),
                                APPLICATION_DOC_STATUS         = p_trx_line_dist_tbl.APPLICATION_DOC_STATUS(i),
                                TAX_PROCESSING_COMPLETED_FLAG  = p_trx_line_dist_tbl.TAX_PROCESSING_COMPLETED_FLAG(i),
                                TAX_CALCULATION_DONE_FLAG      = p_event_class_rec.TAX_CALCULATION_DONE_FLAG,
                                OBJECT_VERSION_NUMBER          = OBJECT_VERSION_NUMBER+1,
                                HDR_TRX_USER_KEY1              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY1(i),
                                HDR_TRX_USER_KEY2              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY2(i),
                                HDR_TRX_USER_KEY3              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY3(i),
                                HDR_TRX_USER_KEY4              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY4(i),
                                HDR_TRX_USER_KEY5              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY5(i),
                                HDR_TRX_USER_KEY6              = p_trx_line_dist_tbl.HDR_TRX_USER_KEY6(i),
                                LINE_TRX_USER_KEY1             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY1(i),
                                LINE_TRX_USER_KEY2             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY2(i),
                                LINE_TRX_USER_KEY3             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY3(i),
                                LINE_TRX_USER_KEY4             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY4(i),
                                LINE_TRX_USER_KEY5             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY5(i),
                                LINE_TRX_USER_KEY6             = p_trx_line_dist_tbl.LINE_TRX_USER_KEY6(i),
                                EXEMPTION_CONTROL_FLAG         = p_trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG(i),
                                EXEMPT_REASON_CODE             = p_trx_line_dist_tbl.EXEMPT_REASON_CODE(i),
                                INTERFACE_ENTITY_CODE          = p_trx_line_dist_tbl.INTERFACE_ENTITY_CODE(i),
                                INTERFACE_LINE_ID              = p_trx_line_dist_tbl.INTERFACE_LINE_ID(i),
                                DEFAULTING_ATTRIBUTE1          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1(i),
                                DEFAULTING_ATTRIBUTE2          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2(i),
                                DEFAULTING_ATTRIBUTE3          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3(i),
                                DEFAULTING_ATTRIBUTE4          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4(i),
                                DEFAULTING_ATTRIBUTE5          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5(i),
                                DEFAULTING_ATTRIBUTE6          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6(i),
                                DEFAULTING_ATTRIBUTE7          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7(i),
                                DEFAULTING_ATTRIBUTE8          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8(i),
                                DEFAULTING_ATTRIBUTE9          = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9(i),
                                DEFAULTING_ATTRIBUTE10         = p_trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10(i),
                                PROVNL_TAX_DETERMINATION_DATE  = p_trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE(i),
                                HISTORICAL_TAX_CODE_ID         = p_trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID(i),
                                GLOBAL_ATTRIBUTE_CATEGORY      = p_trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY(i),
                                GLOBAL_ATTRIBUTE1              = p_trx_line_dist_tbl.GLOBAL_ATTRIBUTE1(i),
                                USER_UPD_DET_FACTORS_FLAG      = NVL(p_trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG(i), USER_UPD_DET_FACTORS_FLAG),  -- Bug 5659357
                                TOTAL_INC_TAX_AMT              = DECODE(p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i), 'NO_CHANGE', TOTAL_INC_TAX_AMT,
                                                                        NVL(p_trx_line_dist_tbl.TOTAL_INC_TAX_AMT(i),0)),
                                ICX_SESSION_ID                 = DECODE (ZX_API_PUB.G_PUB_SRVC,'CALCULATE_TAX', ZX_SECURITY.G_ICX_SESSION_ID, null),
                                LAST_UPDATE_DATE               = sysdate,
                                LAST_UPDATED_BY                = fnd_global.user_id,
                                LAST_UPDATE_LOGIN              = fnd_global.conc_login_id
    	   WHERE APPLICATION_ID   = p_event_class_rec.APPLICATION_ID
           AND ENTITY_CODE      = p_event_class_rec.ENTITY_CODE
           AND EVENT_CLASS_CODE = p_event_class_rec.EVENT_CLASS_CODE
           AND TRX_ID           = p_trx_line_dist_tbl.TRX_ID(i)
           AND TRX_LINE_ID      = p_trx_line_dist_tbl.TRX_LINE_ID(i)
           AND TRX_LEVEL_TYPE   = p_trx_line_dist_tbl.TRX_LEVEL_TYPE(i)
           AND NOT EXISTS (SELECT 'Y'
                             FROM zx_errors_gt err_gt
                            WHERE err_gt.application_id   = p_trx_line_dist_tbl.application_id(i)
                              AND err_gt.entity_code      = p_trx_line_dist_tbl.entity_code(i)
                              AND err_gt.event_class_code = p_trx_line_dist_tbl.event_class_code(i)
                              AND err_gt.trx_id           = p_trx_line_dist_tbl.trx_id(i))
           AND p_trx_line_dist_tbl.LINE_LEVEL_ACTION(i) IN
                                 ('NO_CHANGE',
                                  'UPDATE',
                                  'DISCARD',
                                  'CANCEL',
                                  'SYNCHRONIZE',
                                  'DELETE',
                                  'UNAPPLY_FROM');
    END IF;

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,
           G_MODULE_NAME||l_api_name||'.END',
           G_PKG_NAME ||':'||l_api_name||'(). Records Updated = ' || SQL%ROWCOUNT);
         FND_LOG.STRING(G_LEVEL_STATEMENT,
           G_MODULE_NAME||l_api_name||'.END',
           G_PKG_NAME ||':'||l_api_name||'()-'||', RETURN_STATUS = ' || x_return_status);

       END IF;

 EXCEPTION
    WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
 END db_update_line_det_factors;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  insert_detail_tax_lines_gt
--
--  DESCRIPTION
--  Insert into zx_detail_tax_lines_gt for partners
--
--  CALLED BY
--    override_tax_lines
--    reverse_document
-----------------------------------------------------------------------

PROCEDURE insert_detail_tax_lines_gt
  (p_event_class_rec        IN  ZX_API_PUB.event_class_rec_type,
   p_sync_with_prvdr_flag   IN  ZX_LINES.sync_with_prvdr_flag%type,
   p_ptnr_tax_lines_insert  OUT NOCOPY NUMBER,     -- Bug 5332192
   x_return_status          OUT NOCOPY VARCHAR2
   )IS
  l_api_name           CONSTANT VARCHAR2(30):= 'INSERT_DETAIL_TAX_LINES_GT';
  l_context_info_rec   ZX_API_PUB.context_info_rec_type;

  BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    /*Set the return status to Success */
    x_return_status := FND_API.G_RET_STS_SUCCESS;

    BEGIN
    INSERT INTO ZX_DETAIL_TAX_LINES_GT(
           tax_line_id,
           internal_organization_id,
           application_id,
           entity_code,
           event_class_code,
           event_type_code,
           trx_id,
           trx_line_id,
           trx_level_type,
           trx_line_number,
           doc_event_status,
--         line_event_status,
           tax_event_class_code,
           tax_event_type_code,
           tax_line_number,
           content_owner_id,
           tax_regime_id,
           tax_regime_code,
           tax_id,
           tax,
           tax_status_id,
           tax_status_code,
           tax_rate_id,
           tax_rate_code,
           tax_rate,
           tax_apportionment_line_number,
           trx_id_level2,
           trx_id_level3,
           trx_id_level4,
           trx_id_level5,
           trx_id_level6,
           trx_user_key_level1,
           trx_user_key_level2,
           trx_user_key_level3,
           trx_user_key_level4,
           trx_user_key_level5,
           trx_user_key_level6,
           mrc_tax_line_flag,
           ledger_id,
           establishment_id,
           legal_entity_id,
           legal_entity_tax_reg_number,
           hq_estb_reg_number,
           hq_estb_party_tax_prof_id,
           currency_conversion_date,
           currency_conversion_type,
           currency_conversion_rate,
           tax_currency_conversion_date,
           tax_currency_conversion_type,
           tax_currency_conversion_rate,
           trx_currency_code,
           minimum_accountable_unit,
           precision,
           trx_number,
           trx_date,
           unit_price,
           line_amt,
           trx_line_quantity,
           tax_base_modifier_rate,
           ref_doc_application_id,
           ref_doc_entity_code,
           ref_doc_event_class_code,
           ref_doc_trx_id,
           ref_doc_line_id,
           ref_doc_line_quantity,
           other_doc_line_amt,
           other_doc_line_tax_amt,
           other_doc_line_taxable_amt,
           unrounded_taxable_amt,
           unrounded_tax_amt,
           related_doc_application_id,
           related_doc_entity_code,
           related_doc_event_class_code,
           related_doc_trx_id,
           related_doc_number,
           related_doc_date,
           applied_from_application_id,
           applied_from_event_class_code,
           applied_from_entity_code,
           applied_from_trx_id,
           applied_from_line_id,
           applied_from_trx_number,
           adjusted_doc_application_id,
           adjusted_doc_entity_code,
           adjusted_doc_event_class_code,
           adjusted_doc_trx_id,
           adjusted_doc_line_id,
           adjusted_doc_number,
           adjusted_doc_date,
           applied_to_application_id,
           applied_to_event_class_code,
           applied_to_entity_code,
           applied_to_trx_id,
           applied_to_line_id,
           applied_to_trx_number,
           summary_tax_line_id,
           offset_link_to_tax_line_id,
           offset_flag,
           process_for_recovery_flag,
           tax_jurisdiction_id,
           tax_jurisdiction_code,
           place_of_supply,
           place_of_supply_type_code,
           place_of_supply_result_id,
           tax_date_rule_id,
           tax_date,
           tax_determine_date,
           tax_point_date,
           trx_line_date,
           tax_type_code,
           tax_code,
           tax_registration_id,
           tax_registration_number,
           registration_party_type,
           rounding_level_code,
           rounding_rule_code,
           rounding_lvl_party_tax_prof_id,
           rounding_lvl_party_type,
           compounding_tax_flag,
           orig_tax_status_id,
           orig_tax_status_code,
           orig_tax_rate_id,
           orig_tax_rate_code,
           orig_tax_rate,
           orig_tax_jurisdiction_id,
           orig_tax_jurisdiction_code,
           orig_tax_amt_included_flag,
           orig_self_assessed_flag,
           tax_currency_code,
           tax_amt,
           tax_amt_tax_curr,
           tax_amt_funcl_curr,
           taxable_amt,
           taxable_amt_tax_curr,
           taxable_amt_funcl_curr,
           orig_taxable_amt,
           orig_taxable_amt_tax_curr,
           cal_tax_amt,
           cal_tax_amt_tax_curr,
           cal_tax_amt_funcl_curr,
           orig_tax_amt,
           orig_tax_amt_tax_curr,
           rec_tax_amt,
           rec_tax_amt_tax_curr,
           rec_tax_amt_funcl_curr,
           nrec_tax_amt,
           nrec_tax_amt_tax_curr,
           nrec_tax_amt_funcl_curr,
           tax_exemption_id,
           tax_rate_before_exemption,
           tax_rate_name_before_exemption,
           exempt_rate_modifier,
           exempt_certificate_number,
           exempt_reason,
           exempt_reason_code,
           tax_exception_id,
           tax_rate_before_exception,
           tax_rate_name_before_exception,
           exception_rate,
           tax_apportionment_flag,
           historical_flag,
           taxable_basis_formula,
           tax_calculation_formula,
           cancel_flag,
           purge_flag,
           delete_flag,
           tax_amt_included_flag,
           self_assessed_flag,
           overridden_flag,
           manually_entered_flag,
           freeze_until_overridden_flag,
           copied_from_other_doc_flag,
           recalc_required_flag,
           settlement_flag,
           item_dist_changed_flag,
           associated_child_frozen_flag,
           tax_only_line_flag,
           compounding_dep_tax_flag,
           last_manual_entry,
           tax_provider_id,
           record_type_code,
           reporting_period_id,
           legal_message_appl_2,
           legal_message_status,
           legal_message_rate,
           legal_message_basis,
           legal_message_calc,
           legal_message_threshold,
           legal_message_pos,
           legal_message_trn,
           legal_message_exmpt,
           legal_message_excpt,
           tax_regime_template_id,
           tax_applicability_result_id,
           direct_rate_result_id,
           status_result_id,
           rate_result_id,
           basis_result_id,
           thresh_result_id,
           calc_result_id,
           tax_reg_num_det_result_id,
           eval_exmpt_result_id,
           eval_excpt_result_id,
           enforce_from_natural_acct_flag,
           tax_hold_code,
           tax_hold_released_code,
           prd_total_tax_amt,
           prd_total_tax_amt_tax_curr,
           prd_total_tax_amt_funcl_curr,
           internal_org_location_id,
           attribute_category,
           attribute1,
           attribute2,
           attribute3,
           attribute4,
           attribute5,
           attribute6,
           attribute7,
           attribute8,
           attribute9,
           attribute10,
           attribute11,
           attribute12,
           attribute13,
           attribute14,
           attribute15,
           global_attribute_category,
           global_attribute1,
           global_attribute2,
           global_attribute3,
           global_attribute4,
           global_attribute5,
           global_attribute6,
           global_attribute7,
           global_attribute8,
           global_attribute9,
           global_attribute10,
           global_attribute11,
           global_attribute12,
           global_attribute13,
           global_attribute14,
           global_attribute15,
           numeric1,
           numeric2,
           numeric3,
           numeric4,
           numeric5,
           numeric6,
           numeric7,
           numeric8,
           numeric9,
           numeric10,
           char1,
           char2,
           char3,
           char4,
           char5,
           char6,
           char7,
           char8,
           char9,
           char10,
           date1,
           date2,
           date3,
           date4,
           date5,
           date6,
           date7,
           date8,
           date9,
           date10,
           tax_rate_type,
           created_by,
           creation_date,
           last_updated_by,
           last_update_date,
           last_update_login,
           line_assessable_value,
           legal_justification_text1,
           legal_justification_text2,
           legal_justification_text3,
           reporting_currency_code,
           trx_line_index,
           offset_tax_rate_code,
           proration_code,
           other_doc_source,
           reporting_only_flag,
           ctrl_total_line_tx_amt,
           sync_with_prvdr_flag,
           interface_entity_code,
           interface_tax_line_id,
           taxing_juris_geography_id,
           adjusted_doc_tax_line_id,
           object_version_number
           )
          (SELECT
           L.tax_line_id,
           L.internal_organization_id,
           L.application_id,
           L.entity_code,
           L.event_class_code,
           L.event_type_code,
           L.trx_id,
           L.trx_line_id,
           L.trx_level_type,
           L.trx_line_number,
           L.doc_event_status,
--         L.line_event_status,
           L.tax_event_class_code,
           L.tax_event_type_code,
           L.tax_line_number,
           L.content_owner_id,
           L.tax_regime_id,
           L.tax_regime_code,
           L.tax_id,
           L.tax,
           L.tax_status_id,
           L.tax_status_code,
           L.tax_rate_id,
           L.tax_rate_code,
           L.tax_rate,
           L.tax_apportionment_line_number,
           L.trx_id_level2,
           L.trx_id_level3,
           L.trx_id_level4,
           L.trx_id_level5,
           L.trx_id_level6,
           L.trx_user_key_level1,
           L.trx_user_key_level2,
           L.trx_user_key_level3,
           L.trx_user_key_level4,
           L.trx_user_key_level5,
           L.trx_user_key_level6,
           L.mrc_tax_line_flag,
           L.ledger_id,
           L.establishment_id,
           L.legal_entity_id,
           L.legal_entity_tax_reg_number,
           L.hq_estb_reg_number,
           L.hq_estb_party_tax_prof_id,
           L.currency_conversion_date,
           L.currency_conversion_type,
           L.currency_conversion_rate,
           L.tax_currency_conversion_date,
           L.tax_currency_conversion_type,
           L.tax_currency_conversion_rate,
           L.trx_currency_code,
           L.minimum_accountable_unit,
           L.precision,
           L.trx_number,
           L.trx_date,
           L.unit_price,
           L.line_amt,
           L.trx_line_quantity,
           L.tax_base_modifier_rate,
           L.ref_doc_application_id,
           L.ref_doc_entity_code,
           L.ref_doc_event_class_code,
           L.ref_doc_trx_id,
           L.ref_doc_line_id,
           L.ref_doc_line_quantity,
           L.other_doc_line_amt,
           L.other_doc_line_tax_amt,
           L.other_doc_line_taxable_amt,
           L.unrounded_taxable_amt,
           L.unrounded_tax_amt,
           L.related_doc_application_id,
           L.related_doc_entity_code,
           L.related_doc_event_class_code,
           L.related_doc_trx_id,
           L.related_doc_number,
           L.related_doc_date,
           L.applied_from_application_id,
           L.applied_from_event_class_code,
           L.applied_from_entity_code,
           L.applied_from_trx_id,
           L.applied_from_line_id,
           L.applied_from_trx_number,
           L.adjusted_doc_application_id,
           L.adjusted_doc_entity_code,
           L.adjusted_doc_event_class_code,
           L.adjusted_doc_trx_id,
           L.adjusted_doc_line_id,
           L.adjusted_doc_number,
           L.adjusted_doc_date,
           L.applied_to_application_id,
           L.applied_to_event_class_code,
           L.applied_to_entity_code,
           L.applied_to_trx_id,
           L.applied_to_line_id,
           L.applied_to_trx_number,
           L.summary_tax_line_id,
           L.offset_link_to_tax_line_id,
           L.offset_flag,
           L.process_for_recovery_flag,
           L.tax_jurisdiction_id,
           L.tax_jurisdiction_code,
           L.place_of_supply,
           L.place_of_supply_type_code,
           L.place_of_supply_result_id,
           L.tax_date_rule_id,
           L.tax_date,
           L.tax_determine_date,
           L.tax_point_date,
           L.trx_line_date,
           L.tax_type_code,
           L.tax_code,
           L.tax_registration_id,
           L.tax_registration_number,
           L.registration_party_type,
           L.rounding_level_code,
           L.rounding_rule_code,
           L.rounding_lvl_party_tax_prof_id,
           L.rounding_lvl_party_type,
           L.compounding_tax_flag,
           L.orig_tax_status_id,
           L.orig_tax_status_code,
           L.orig_tax_rate_id,
           L.orig_tax_rate_code,
           L.orig_tax_rate,
           L.orig_tax_jurisdiction_id,
           L.orig_tax_jurisdiction_code,
           L.orig_tax_amt_included_flag,
           L.orig_self_assessed_flag,
           L.tax_currency_code,
           L.tax_amt,
           L.tax_amt_tax_curr,
           L.tax_amt_funcl_curr,
           L.taxable_amt,
           L.taxable_amt_tax_curr,
           L.taxable_amt_funcl_curr,
           L.orig_taxable_amt,
           L.orig_taxable_amt_tax_curr,
           L.cal_tax_amt,
           L.cal_tax_amt_tax_curr,
           L.cal_tax_amt_funcl_curr,
           L.orig_tax_amt,
           L.orig_tax_amt_tax_curr,
           L.rec_tax_amt,
           L.rec_tax_amt_tax_curr,
           L.rec_tax_amt_funcl_curr,
           L.nrec_tax_amt,
           L.nrec_tax_amt_tax_curr,
           L.nrec_tax_amt_funcl_curr,
           L.tax_exemption_id,
           L.tax_rate_before_exemption,
           L.tax_rate_name_before_exemption,
           L.exempt_rate_modifier,
           L.exempt_certificate_number,
           L.exempt_reason,
           L.exempt_reason_code,
           L.tax_exception_id,
           L.tax_rate_before_exception,
           L.tax_rate_name_before_exception,
           L.exception_rate,
           L.tax_apportionment_flag,
           L.historical_flag,
           L.taxable_basis_formula,
           L.tax_calculation_formula,
           L.cancel_flag,
           L.purge_flag,
           L.delete_flag,
           L.tax_amt_included_flag,
           L.self_assessed_flag,
           L.overridden_flag,
           L.manually_entered_flag,
           L.freeze_until_overridden_flag,
           L.copied_from_other_doc_flag,
           L.recalc_required_flag,
           L.settlement_flag,
           L.item_dist_changed_flag,
           L.associated_child_frozen_flag,
           L.tax_only_line_flag,
           L.compounding_dep_tax_flag,
           L.last_manual_entry,
           L.tax_provider_id,
           L.record_type_code,
           L.reporting_period_id,
           L.legal_message_appl_2,
           L.legal_message_status,
           L.legal_message_rate,
           L.legal_message_basis,
           L.legal_message_calc,
           L.legal_message_threshold,
           L.legal_message_pos,
           L.legal_message_trn,
           L.legal_message_exmpt,
           L.legal_message_excpt,
           L.tax_regime_template_id,
           L.tax_applicability_result_id,
           L.direct_rate_result_id,
           L.status_result_id,
           L.rate_result_id,
           L.basis_result_id,
           L.thresh_result_id,
           L.calc_result_id,
           L.tax_reg_num_det_result_id,
           L.eval_exmpt_result_id,
           L.eval_excpt_result_id,
           L.enforce_from_natural_acct_flag,
           L.tax_hold_code,
           L.tax_hold_released_code,
           L.prd_total_tax_amt,
           L.prd_total_tax_amt_tax_curr,
           L.prd_total_tax_amt_funcl_curr,
           L.internal_org_location_id,
           L.attribute_category,
           L.attribute1,
           L.attribute2,
           L.attribute3,
           L.attribute4,
           L.attribute5,
           L.attribute6,
           L.attribute7,
           L.attribute8,
           L.attribute9,
           L.attribute10,
           L.attribute11,
           L.attribute12,
           L.attribute13,
           L.attribute14,
           L.attribute15,
           L.global_attribute_category,
           L.global_attribute1,
           L.global_attribute2,
           L.global_attribute3,
           L.global_attribute4,
           L.global_attribute5,
           L.global_attribute6,
           L.global_attribute7,
           L.global_attribute8,
           L.global_attribute9,
           L.global_attribute10,
           L.global_attribute11,
           L.global_attribute12,
           L.global_attribute13,
           L.global_attribute14,
           L.global_attribute15,
           L.numeric1,
           L.numeric2,
           L.numeric3,
           L.numeric4,
           L.numeric5,
           L.numeric6,
           L.numeric7,
           L.numeric8,
           L.numeric9,
           L.numeric10,
           L.char1,
           L.char2,
           L.char3,
           L.char4,
           L.char5,
           L.char6,
           L.char7,
           L.char8,
           L.char9,
           L.char10,
           L.date1,
           L.date2,
           L.date3,
           L.date4,
           L.date5,
           L.date6,
           L.date7,
           L.date8,
           L.date9,
           L.date10,
           L.tax_rate_type,
           L.created_by,
           L.creation_date,
           L.last_updated_by,
           L.last_update_date,
           L.last_update_login,
           L.line_assessable_value,
           L.legal_justification_text1,
           L.legal_justification_text2,
           L.legal_justification_text3,
           L.reporting_currency_code,
           L.trx_line_index,
           L.offset_tax_rate_code,
           L.proration_code,
           L.other_doc_source,
           L.reporting_only_flag,
           L.ctrl_total_line_tx_amt,
           L.sync_with_prvdr_flag,
           L.interface_entity_code,
           L.interface_tax_line_id,
           L.taxing_juris_geography_id,
           L.adjusted_doc_tax_line_id,
           1
          FROM ZX_LINES L
	  WHERE application_id = p_event_class_rec.application_id
            AND entity_code = p_event_class_rec.entity_code
            AND event_class_code = p_event_class_rec.event_class_code
            AND trx_id = p_event_class_rec.trx_id
    	    AND tax_provider_id is not null
            AND sync_with_prvdr_flag = nvl(p_sync_with_prvdr_flag, sync_with_prvdr_flag)
          );
       EXCEPTION WHEN OTHERS THEN
          p_ptnr_tax_lines_insert := 0;
       END;
       p_ptnr_tax_lines_insert := SQL%ROWCOUNT;    -- Bug 5332192

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,
           G_MODULE_NAME||l_api_name||'.END',
           G_PKG_NAME ||': '||l_api_name||'()-'||', RETURN_STATUS = ' || x_return_status);
       END IF;

       EXCEPTION
        WHEN OTHERS THEN
           x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
           IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
           END IF;
END insert_detail_tax_lines_gt;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  call_lte
--
--  DESCRIPTION
--  Wrapper to fetch all lines from zx_lines_det_factors before calling LTE
--  to calculate_tax
--
--  CALLED BY
--    calculate_tax
-----------------------------------------------------------------------
  PROCEDURE call_lte
  (
   p_event_class_rec          IN  OUT NOCOPY ZX_API_PUB.event_class_rec_type ,
   p_calling_proc             IN  VARCHAR2 DEFAULT 'CALCULATE_TAX',
   x_return_status            OUT NOCOPY VARCHAR2
  )IS

  l_api_name              CONSTANT VARCHAR2(30):= 'CALL_LTE';
  l_context_info_rec      ZX_API_PUB.context_info_rec_type;
  l_return_status         VARCHAR2(1);

/* Cursor for LTE calculate tax - need to fetch all the lines for document*/
 CURSOR fetch_det_factors_for_lte(p_event_class_rec zx_api_pub.event_class_rec_type)  IS
   SELECT  INTERNAL_ORGANIZATION_ID,
           APPLICATION_ID,
           ENTITY_CODE,
           EVENT_CLASS_CODE,
           EVENT_TYPE_CODE,
           DOC_EVENT_STATUS,
           LINE_LEVEL_ACTION,
           TRX_ID,
           TRX_LINE_ID,
           TRX_LEVEL_TYPE,
           TRX_DATE,
           TRX_DOC_REVISION,
           LEDGER_ID,
           TRX_CURRENCY_CODE,
           CURRENCY_CONVERSION_DATE,
           CURRENCY_CONVERSION_RATE,
           CURRENCY_CONVERSION_TYPE,
           MINIMUM_ACCOUNTABLE_UNIT,
           PRECISION,
           TRX_LINE_CURRENCY_CODE,
           TRX_LINE_CURRENCY_CONV_DATE,
           TRX_LINE_CURRENCY_CONV_RATE,
           TRX_LINE_CURRENCY_CONV_TYPE,
           TRX_LINE_MAU,
           TRX_LINE_PRECISION,
           LEGAL_ENTITY_ID,
           ESTABLISHMENT_ID,
           RECEIVABLES_TRX_TYPE_ID,
           DEFAULT_TAXATION_COUNTRY,
           TRX_NUMBER,
           TRX_LINE_NUMBER,
           TRX_LINE_DESCRIPTION,
           TRX_DESCRIPTION,
           TRX_COMMUNICATED_DATE,
           BATCH_SOURCE_ID,
           BATCH_SOURCE_NAME,
           DOC_SEQ_ID,
           DOC_SEQ_NAME,
           DOC_SEQ_VALUE,
           TRX_DUE_DATE,
           TRX_TYPE_DESCRIPTION,
           DOCUMENT_SUB_TYPE,
           SUPPLIER_TAX_INVOICE_NUMBER	,
           SUPPLIER_TAX_INVOICE_DATE,
           SUPPLIER_EXCHANGE_RATE,
           TAX_INVOICE_DATE,
           TAX_INVOICE_NUMBER,
           FIRST_PTY_ORG_ID,
           TAX_EVENT_CLASS_CODE,
           TAX_EVENT_TYPE_CODE,
           RDNG_SHIP_TO_PTY_TX_PROF_ID	,
           RDNG_SHIP_FROM_PTY_TX_PROF_ID,
           RDNG_BILL_TO_PTY_TX_PROF_ID	,
           RDNG_BILL_FROM_PTY_TX_PROF_ID,
           RDNG_SHIP_TO_PTY_TX_P_ST_ID	,
           RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
           RDNG_BILL_TO_PTY_TX_P_ST_ID	,
           RDNG_BILL_FROM_PTY_TX_P_ST_ID,
           LINE_INTENDED_USE ,
           TRX_LINE_TYPE ,
           TRX_SHIPPING_DATE,
           TRX_RECEIPT_DATE,
           TRX_SIC_CODE,
           FOB_POINT ,
           TRX_WAYBILL_NUMBER,
           PRODUCT_ID,
           PRODUCT_FISC_CLASSIFICATION ,
           PRODUCT_ORG_ID,
           UOM_CODE,
           PRODUCT_TYPE ,
           PRODUCT_CODE,
           PRODUCT_CATEGORY ,
           PRODUCT_DESCRIPTION,
           USER_DEFINED_FISC_CLASS,
           LINE_AMT,
           TRX_LINE_QUANTITY ,
           UNIT_PRICE,
           CASH_DISCOUNT,
           VOLUME_DISCOUNT,
           TRADING_DISCOUNT,
           TRANSFER_CHARGE,
           TRANSPORTATION_CHARGE,
           INSURANCE_CHARGE,
           OTHER_CHARGE,
           ASSESSABLE_VALUE,
           ASSET_FLAG,
           ASSET_NUMBER,
           ASSET_ACCUM_DEPRECIATION,
           ASSET_TYPE,
           ASSET_COST,
           RELATED_DOC_APPLICATION_ID,
           RELATED_DOC_ENTITY_CODE,
           RELATED_DOC_EVENT_CLASS_CODE,
           RELATED_DOC_TRX_ID,
           RELATED_DOC_NUMBER,
           RELATED_DOC_DATE,
           APPLIED_FROM_APPLICATION_ID,
           APPLIED_FROM_ENTITY_CODE,
           APPLIED_FROM_EVENT_CLASS_CODE,
           APPLIED_FROM_TRX_ID,
           APPLIED_FROM_LINE_ID,
           APPLIED_FROM_TRX_NUMBER,
           ADJUSTED_DOC_APPLICATION_ID,
           ADJUSTED_DOC_ENTITY_CODE,
           ADJUSTED_DOC_EVENT_CLASS_CODE,
           ADJUSTED_DOC_TRX_ID,
           ADJUSTED_DOC_LINE_ID,
           ADJUSTED_DOC_NUMBER,
           ADJUSTED_DOC_DATE,
           APPLIED_TO_APPLICATION_ID,
           APPLIED_TO_ENTITY_CODE,
           APPLIED_TO_EVENT_CLASS_CODE,
           APPLIED_TO_TRX_ID ,
           APPLIED_TO_TRX_LINE_ID,
           TRX_ID_LEVEL2,
           TRX_ID_LEVEL3,
           TRX_ID_LEVEL4,
           TRX_ID_LEVEL5,
           TRX_ID_LEVEL6,
           TRX_BUSINESS_CATEGORY,
           EXEMPT_CERTIFICATE_NUMBER,
           EXEMPT_REASON,
           HISTORICAL_FLAG,
           TRX_LINE_GL_DATE,
           PROVNL_TAX_DETERMINATION_DATE,
           LINE_AMT_INCLUDES_TAX_FLAG,
           ACCOUNT_CCID,
           ACCOUNT_STRING,
           MERCHANT_PARTY_TAX_PROF_ID,
           HQ_ESTB_PARTY_TAX_PROF_ID,
           NUMERIC1,
           NUMERIC2,
           NUMERIC3,
           NUMERIC4,
           NUMERIC5,
           NUMERIC6,
           NUMERIC7,
           NUMERIC8,
           NUMERIC9,
           NUMERIC10,
           CHAR1,
           CHAR2,
           CHAR3,
           CHAR4,
           CHAR5,
           CHAR6,
           CHAR7,
           CHAR8,
           CHAR9,
           CHAR10,
           DATE1,
           DATE2,
           DATE3,
           DATE4,
           DATE5,
           DATE6,
           DATE7,
           DATE8,
           DATE9,
           DATE10,
           MERCHANT_PARTY_NAME,
           MERCHANT_PARTY_DOCUMENT_NUMBER,
           MERCHANT_PARTY_REFERENCE,
           MERCHANT_PARTY_TAXPAYER_ID,
           MERCHANT_PARTY_TAX_REG_NUMBER,
           MERCHANT_PARTY_ID,
           MERCHANT_PARTY_COUNTRY,
           SHIP_TO_LOCATION_ID,
           SHIP_FROM_LOCATION_ID,
           POA_LOCATION_ID,
           POO_LOCATION_ID,
           BILL_TO_LOCATION_ID,
           BILL_FROM_LOCATION_ID,
           PAYING_LOCATION_ID,
           OWN_HQ_LOCATION_ID,
           TRADING_HQ_LOCATION_ID,
           POC_LOCATION_ID,
           POI_LOCATION_ID,
           POD_LOCATION_ID,
           TITLE_TRANSFER_LOCATION_ID,
           SHIP_TO_PARTY_TAX_PROF_ID ,
           SHIP_FROM_PARTY_TAX_PROF_ID,
           POA_PARTY_TAX_PROF_ID,
           POO_PARTY_TAX_PROF_ID,
           PAYING_PARTY_TAX_PROF_ID,
           OWN_HQ_PARTY_TAX_PROF_ID,
           TRADING_HQ_PARTY_TAX_PROF_ID,
           POI_PARTY_TAX_PROF_ID,
           POD_PARTY_TAX_PROF_ID,
           BILL_TO_PARTY_TAX_PROF_ID,
           BILL_FROM_PARTY_TAX_PROF_ID,
           TITLE_TRANS_PARTY_TAX_PROF_ID,
           SHIP_TO_SITE_TAX_PROF_ID,
           SHIP_FROM_SITE_TAX_PROF_ID,
           POA_SITE_TAX_PROF_ID,
           POO_SITE_TAX_PROF_ID,
           PAYING_SITE_TAX_PROF_ID,
           OWN_HQ_SITE_TAX_PROF_ID,
           TRADING_HQ_SITE_TAX_PROF_ID,
           POI_SITE_TAX_PROF_ID,
           POD_SITE_TAX_PROF_ID,
           BILL_TO_SITE_TAX_PROF_ID,
           BILL_FROM_SITE_TAX_PROF_ID,
           TITLE_TRANS_SITE_TAX_PROF_ID,
           CTRL_HDR_TX_APPL_FLAG,
           CTRL_TOTAL_LINE_TX_AMT,
           CTRL_TOTAL_HDR_TX_AMT,
           REF_DOC_APPLICATION_ID,
           REF_DOC_ENTITY_CODE,
           REF_DOC_EVENT_CLASS_CODE,
           REF_DOC_TRX_ID,
           REF_DOC_LINE_ID,
           REF_DOC_LINE_QUANTITY,
           LINE_CLASS,
           TRX_LINE_DATE,
           INPUT_TAX_CLASSIFICATION_CODE,
           OUTPUT_TAX_CLASSIFICATION_CODE,
           INTERNAL_ORG_LOCATION_ID,
           PORT_OF_ENTRY_CODE,
           TAX_REPORTING_FLAG,
           TAX_AMT_INCLUDED_FLAG,
           COMPOUNDING_TAX_FLAG,
           SHIP_THIRD_PTY_ACCT_ID,
           BILL_THIRD_PTY_ACCT_ID,
           SHIP_THIRD_PTY_ACCT_SITE_ID,
           BILL_THIRD_PTY_ACCT_SITE_ID,
           SHIP_TO_CUST_ACCT_SITE_USE_ID,
           BILL_TO_CUST_ACCT_SITE_USE_ID,
           START_EXPENSE_DATE,
           TRX_BATCH_ID,
           APPLIED_TO_TRX_NUMBER,
           SOURCE_APPLICATION_ID,
           SOURCE_ENTITY_CODE,
           SOURCE_EVENT_CLASS_CODE,
           SOURCE_TRX_ID,
           SOURCE_LINE_ID,
           SOURCE_TRX_LEVEL_TYPE,
           REF_DOC_TRX_LEVEL_TYPE,
           APPLIED_TO_TRX_LEVEL_TYPE,
           APPLIED_FROM_TRX_LEVEL_TYPE,
           ADJUSTED_DOC_TRX_LEVEL_TYPE,
           APPLICATION_DOC_STATUS,
           HDR_TRX_USER_KEY1,
           HDR_TRX_USER_KEY2,
           HDR_TRX_USER_KEY3,
           HDR_TRX_USER_KEY4,
           HDR_TRX_USER_KEY5,
           HDR_TRX_USER_KEY6,
           LINE_TRX_USER_KEY1,
           LINE_TRX_USER_KEY2,
           LINE_TRX_USER_KEY3,
           LINE_TRX_USER_KEY4,
           LINE_TRX_USER_KEY5,
           LINE_TRX_USER_KEY6,
           null DIST_LEVEL_ACTION,
           to_number(null) ADJUSTED_DOC_TASK_DIST_ID,
           to_number(null) APPLIED_FROM_TAX_DIST_ID,
           to_number(null) TASK_ID,
           to_number(null) AWARD_ID,
           to_number(null) PROJECT_ID,
           null EXPENDITURE_TYPE,
           to_number(null) EXPENDITURE_ORGANIZATION_ID,
           null EXPENDITURE_ITEM_DATE,
           to_number(null) TRX_LINE_DIST_AMT,
           to_number(null) TRX_LINE_DIST_QUANTITY,
           to_number(null) REF_DOC_CURR_CONV_RATE,
           to_number(null) ITEM_DIST_NUMBER,
           to_number(null) REF_DOC_DIST_ID,
           to_number(null) TRX_LINE_DIST_TAX_AMT,
           to_number(null) TRX_LINE_DIST_ID,
           to_number(null) APPLIED_FROM_DIST_ID,
           to_number(null) ADJUSTED_DOC_DIST_ID,
           to_number(null) OVERRIDING_RECOVERY_RATE,
           TAX_AMT_INCLUDED_FLAG,
           COMPOUNDING_TAX_FLAG,
           SOURCE_TAX_LINE_ID,
           EXEMPTION_CONTROL_FLAG,
           EXEMPT_REASON_CODE,
           INTERFACE_ENTITY_CODE,
           INTERFACE_LINE_ID,
           DEFAULTING_ATTRIBUTE1,
           DEFAULTING_ATTRIBUTE2,
           DEFAULTING_ATTRIBUTE3,
           DEFAULTING_ATTRIBUTE4,
           DEFAULTING_ATTRIBUTE5,
           DEFAULTING_ATTRIBUTE6,
           DEFAULTING_ATTRIBUTE7,
           DEFAULTING_ATTRIBUTE8,
           DEFAULTING_ATTRIBUTE9,
           DEFAULTING_ATTRIBUTE10,
           HISTORICAL_TAX_CODE_ID,
           GLOBAL_ATTRIBUTE_CATEGORY,
           GLOBAL_ATTRIBUTE1,
           TOTAL_INC_TAX_AMT,
           USER_UPD_DET_FACTORS_FLAG
         FROM  ZX_LINES_DET_FACTORS
         WHERE application_id = p_event_class_rec.application_id
	   AND entity_code = p_event_class_rec.entity_code
	   AND event_class_code = p_event_class_rec.event_class_code
	   AND trx_id = p_event_class_rec.trx_id
	   AND line_level_action <> 'DELETE';

 BEGIN
  IF ( G_LEVEL_STATEMENT >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   OPEN fetch_det_factors_for_lte(p_event_class_rec);
     LOOP
         FETCH fetch_det_factors_for_lte BULK COLLECT INTO
           zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION,
           zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT,
           zx_global_structures_pkg.trx_line_dist_tbl.PRECISION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_MAU,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_PRECISION,
           zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY ,
           zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE,
           zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON,
           zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID,
           zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR1,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR2,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR3,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR4,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR5,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR6,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR7,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR8,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR9,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR10,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE1,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE2,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE3,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE4,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE5,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE6,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE7,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE8,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE9,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE10,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY1,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY2,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY3,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY4,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY5,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY6,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY1,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY2,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY3,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY4,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY5,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY6,
           zx_global_structures_pkg.trx_line_dist_tbl.DIST_LEVEL_ACTION,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TAX_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TAX_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TASK_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.AWARD_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PROJECT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ORGANIZATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ITEM_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_QUANTITY,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_CURR_CONV_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.ITEM_DIST_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_TAX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_DIST_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OVERRIDING_RECOVERY_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10,
           zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY,
           zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE1,
           zx_global_structures_pkg.trx_line_dist_tbl.TOTAL_INC_TAX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG
         LIMIT G_MAX_LINES_PER_FETCH;

         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Calling Proc : '||p_calling_proc);
         END IF;

         IF p_calling_proc = 'CALCULATE_TAX' THEN
           --Call LTE to calculate tax
           ZX_PRODUCT_INTEGRATION_PKG.calculate_tax (p_event_class_rec => p_event_class_rec,
                                                     x_return_status   => l_return_status
                                                    );
         ELSIF p_calling_proc = 'IMPORT' THEN
           --Call LTE to import tax lines
           ZX_PRODUCT_INTEGRATION_PKG.import_document_with_tax(p_event_class_rec => p_event_class_rec,
                                                               x_return_status   => l_return_status
                                                              );
         END IF;

         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
           x_return_status := l_return_status ;
           IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'LTE calculate tax returned errors. Return_Status = '||x_return_status);
           END IF;
           IF fetch_det_factors_for_lte%ISOPEN THEN CLOSE fetch_det_factors_for_lte; END IF;
           RETURN;
         END IF;

       EXIT WHEN fetch_det_factors_for_lte%NOTFOUND;
     END LOOP;
   CLOSE fetch_det_factors_for_lte;

   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_STATEMENT,
       G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME ||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF fetch_det_factors_for_lte%ISOPEN THEN CLOSE fetch_det_factors_for_lte; END IF;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
  END call_lte;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  Lock_line_det_facts
--
--  DESCRIPTION
--  Lock the tables to prevent 2 users from making inconsistent updates to
--  database via forms or UIs
--
--  CALLED BY
--    calculate_tax
-----------------------------------------------------------------------
PROCEDURE lock_line_det_facts (
p_trx_line_index      IN NUMBER,
p_event_class_rec     IN ZX_API_PUB.event_class_rec_type,
x_return_status       OUT NOCOPY VARCHAR2
) IS
    l_api_name         CONSTANT VARCHAR2(30):= 'LOCK_LINE_DET_FACTS';
    l_return_status    VARCHAR2(30);
    l_lines_det_rec    zx_lines_det_factors%rowtype;
    l_context_info_rec ZX_API_PUB.context_info_rec_type;

BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS ;

    IF p_event_class_rec.TAX_EVENT_TYPE_CODE = 'UPDATE' THEN
         /*Lock trx line det factors*/
         SELECT *
           INTO l_lines_det_rec
           FROM ZX_LINES_DET_FACTORS
          WHERE application_id   = p_event_class_rec.application_id
            AND entity_code      = p_event_class_rec.entity_code
            AND event_class_code = p_event_class_rec.event_class_code
    	    AND trx_id           = p_event_class_rec.trx_id
            AND trx_line_id      = zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID(p_trx_line_index)
            AND trx_level_type   = zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE(p_trx_line_index)
          FOR UPDATE NOWAIT;
    END IF;

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,
         G_MODULE_NAME||l_api_name||'.END',
         G_PKG_NAME ||': '||l_api_name||'()-'||', RETURN_STATUS = ' || x_return_status);
    END IF;

 EXCEPTION
       --no_data_found can occur if new transaction line is being created
       --for already existing document in which case , exit gracefully
       WHEN NO_DATA_FOUND THEN
         null;
       WHEN OTHERS THEN
          IF (SQLCODE = 54) THEN
             x_return_status := FND_API.G_RET_STS_ERROR ;
             FND_MESSAGE.SET_NAME('ZX','ZX_RESOURCE_BUSY');
             l_context_info_rec.APPLICATION_ID   := p_event_class_rec.APPLICATION_ID;
             l_context_info_rec.ENTITY_CODE      := p_event_class_rec.ENTITY_CODE;
             l_context_info_rec.EVENT_CLASS_CODE := p_event_class_rec.EVENT_CLASS_CODE;
             l_context_info_rec.TRX_ID           := p_event_class_rec.TRX_ID;
             l_context_info_rec.TRX_LINE_ID      := zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID(p_trx_line_index);
             l_context_info_rec.TRX_LEVEL_TYPE   := zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE(p_trx_line_index);
             ZX_API_PUB.add_msg( p_context_info_rec => l_context_info_rec );
             IF ( G_LEVEL_EXCEPTION >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_EXCEPTION,G_MODULE_NAME||l_api_name,SQLERRM);
             END IF;
          ELSE
             x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
             IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
             END IF;
          END IF;
 END lock_line_det_facts;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  populate_ptnr_tax_regime_tbl
--
--  DESCRIPTION
--
--
--  CALLED BY
--    calculate_tax
--
-----------------------------------------------------------------------
PROCEDURE populate_ptnr_tax_regime_tbl
IS
    l_ptnr_index                  NUMBER;

    l_api_name         CONSTANT VARCHAR2(30):= 'populate_ptnr_tax_regime_tbl';

BEGIN
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'(+)');
    END IF;

    l_ptnr_index := NVL(ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl.LAST, 0) + 1;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).application_id
             := zx_global_structures_pkg.g_event_class_rec.application_id;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).event_class_code
             := zx_global_structures_pkg.g_event_class_rec.event_class_code;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).entity_code
             := zx_global_structures_pkg.g_event_class_rec.entity_code;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).trx_id
             := zx_global_structures_pkg.g_event_class_rec.trx_id;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).event_id
             := zx_global_structures_pkg.g_event_class_rec.event_id;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).event_class_mapping_id
             := zx_global_structures_pkg.g_event_class_rec.event_class_mapping_id;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).event_type_code
             := zx_global_structures_pkg.g_event_class_rec.event_type_code;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).tax_event_class_code
             := zx_global_structures_pkg.g_event_class_rec.tax_event_class_code;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).tax_event_type_code
             := zx_global_structures_pkg.g_event_class_rec.tax_event_type_code;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).doc_status_code
             := zx_global_structures_pkg.g_event_class_rec.doc_status_code;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).record_flag
             := zx_global_structures_pkg.g_event_class_rec.record_flag;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).quote_flag
             := zx_global_structures_pkg.g_event_class_rec.quote_flag;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).record_for_partners_flag
             := zx_global_structures_pkg.g_event_class_rec.record_for_partners_flag;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).prod_family_grp_code
             := zx_global_structures_pkg.g_event_class_rec.prod_family_grp_code;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).first_pty_org_id
             := zx_global_structures_pkg.g_event_class_rec.first_pty_org_id;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).internal_organization_id
             := zx_global_structures_pkg.g_event_class_rec.internal_organization_id;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).legal_entity_id
             := zx_global_structures_pkg.g_event_class_rec.legal_entity_id;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).ledger_id
             := zx_global_structures_pkg.g_event_class_rec.ledger_id;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).establishment_id
             := zx_global_structures_pkg.g_event_class_rec.establishment_id;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).currency_conversion_type
             := zx_global_structures_pkg.g_event_class_rec.currency_conversion_type;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).process_for_applicability_flag
             := zx_global_structures_pkg.g_event_class_rec.process_for_applicability_flag;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).perf_addnl_appl_for_imprt_flag
             := zx_global_structures_pkg.g_event_class_rec.perf_addnl_appl_for_imprt_flag;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).effective_date
             := zx_security.g_effective_date;
    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).tax_regime_tbl
             := ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl;

    ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).ptnr_srvc_subscr_flag := 'N';
-- change for 5711466
    FOR l_regime_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.LAST,-99)
    LOOP
         IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(l_regime_index) AND
            nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,0) <> 0  THEN
            ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).ptnr_srvc_subscr_flag := 'Y';
            EXIT;
         END IF;
    END LOOP;
-- end 5711466

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,
         G_MODULE_NAME||l_api_name,
         G_PKG_NAME ||': '||l_api_name||', ptnr_srvc_subsrc_flag = ' ||ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_ptnr_index).ptnr_srvc_subscr_flag);
    END IF;

    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'(-)');
    END IF;

EXCEPTION
   WHEN OTHERS THEN
--        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
      IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
      END IF;
END populate_ptnr_tax_regime_tbl;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  populate_lte_trx_tbl
--
--  DESCRIPTION
--  Populates Global PlSql Structure for Latin Tax Processing
--
--  CALLED BY
--    calculate_tax
--    import
-----------------------------------------------------------------------
PROCEDURE populate_lte_trx_tbl
IS
    l_ptnr_index       NUMBER;
    l_api_name         CONSTANT VARCHAR2(30):= 'populate_lte_trx_tbl';

BEGIN
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'(+)');
    END IF;

    l_ptnr_index := NVL(ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl.LAST, 0) + 1;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).application_id
             := zx_global_structures_pkg.g_event_class_rec.application_id;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).event_class_code
             := zx_global_structures_pkg.g_event_class_rec.event_class_code;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).entity_code
             := zx_global_structures_pkg.g_event_class_rec.entity_code;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).trx_id
             := zx_global_structures_pkg.g_event_class_rec.trx_id;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).event_id
             := zx_global_structures_pkg.g_event_class_rec.event_id;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).event_class_mapping_id
             := zx_global_structures_pkg.g_event_class_rec.event_class_mapping_id;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).event_type_code
             := zx_global_structures_pkg.g_event_class_rec.event_type_code;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).tax_event_class_code
             := zx_global_structures_pkg.g_event_class_rec.tax_event_class_code;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).tax_event_type_code
             := zx_global_structures_pkg.g_event_class_rec.tax_event_type_code;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).doc_status_code
             := zx_global_structures_pkg.g_event_class_rec.doc_status_code;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).record_flag
             := zx_global_structures_pkg.g_event_class_rec.record_flag;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).quote_flag
             := zx_global_structures_pkg.g_event_class_rec.quote_flag;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).record_for_partners_flag
             := zx_global_structures_pkg.g_event_class_rec.record_for_partners_flag;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).prod_family_grp_code
             := zx_global_structures_pkg.g_event_class_rec.prod_family_grp_code;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).first_pty_org_id
             := zx_global_structures_pkg.g_event_class_rec.first_pty_org_id;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).internal_organization_id
             := zx_global_structures_pkg.g_event_class_rec.internal_organization_id;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).legal_entity_id
             := zx_global_structures_pkg.g_event_class_rec.legal_entity_id;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).ledger_id
             := zx_global_structures_pkg.g_event_class_rec.ledger_id;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).establishment_id
             := zx_global_structures_pkg.g_event_class_rec.establishment_id;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).currency_conversion_type
             := zx_global_structures_pkg.g_event_class_rec.currency_conversion_type;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).process_for_applicability_flag
             := zx_global_structures_pkg.g_event_class_rec.process_for_applicability_flag;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).perf_addnl_appl_for_imprt_flag
             := zx_global_structures_pkg.g_event_class_rec.perf_addnl_appl_for_imprt_flag;
    ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_ptnr_index).effective_date
             := zx_security.g_effective_date;

    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'(-)');
    END IF;

EXCEPTION
   WHEN OTHERS THEN
      IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
      END IF;
END populate_lte_trx_tbl;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  fetch_ptnr_tax_regime_tbl
--
--  DESCRIPTION
--  Initialise the partner tables for subsequent calls
--
--  CALLED BY
--    calculate_tax
--
-----------------------------------------------------------------------
PROCEDURE fetch_ptnr_tax_regime_tbl(
   p_trx_id_index    IN  NUMBER,
   x_event_class_rec OUT NOCOPY  ZX_API_PUB.event_class_rec_type ,
   x_return_status   OUT NOCOPY VARCHAR2
  )IS

    l_api_name         CONSTANT VARCHAR2(30):= 'FETCH_PTNR_TAX_REGIME_TBL';

BEGIN
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'(+)');
    END IF;

    x_event_class_rec.application_id   := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).application_id;
    x_event_class_rec.event_class_code := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).event_class_code;
    x_event_class_rec.entity_code      := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).entity_code;
    x_event_class_rec.trx_id           := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).trx_id;
    x_event_class_rec.event_id         := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).event_id;

    BEGIN
      SELECT tax_recovery_flag
      INTO x_event_class_rec.tax_recovery_flag
      FROM zx_evnt_cls_mappings
      WHERE application_id = x_event_class_rec.application_id
      AND entity_code = x_event_class_rec.entity_code
      AND event_class_code = x_event_class_rec.event_class_code;
    EXCEPTION
      WHEN OTHERS THEN
        NULL;
    END;
    x_event_class_rec.event_class_mapping_id := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).event_class_mapping_id;
    x_event_class_rec.event_type_code  := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).event_type_code;
    x_event_class_rec.tax_event_class_code := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).tax_event_class_code;
    x_event_class_rec.tax_event_type_code  := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).tax_event_type_code;
    x_event_class_rec.doc_status_code      := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).doc_status_code;
    x_event_class_rec.record_flag      := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).record_flag;
    x_event_class_rec.quote_flag       := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).quote_flag;
    x_event_class_rec.record_for_partners_flag := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).record_for_partners_flag;
    x_event_class_rec.prod_family_grp_code := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).prod_family_grp_code;
    x_event_class_rec.first_pty_org_id := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).first_pty_org_id;
    x_event_class_rec.internal_organization_id := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).internal_organization_id;
    x_event_class_rec.legal_entity_id := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).legal_entity_id;
    x_event_class_rec.ledger_id       := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).ledger_id;
    x_event_class_rec.establishment_id := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).establishment_id;
    x_event_class_rec.currency_conversion_type := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).currency_conversion_type;
    x_event_class_rec.process_for_applicability_flag := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).process_for_applicability_flag;
    x_event_class_rec.perf_addnl_appl_for_imprt_flag := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).perf_addnl_appl_for_imprt_flag;

    ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl := ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).tax_regime_tbl;

   /*--------------------------------------------+
    |   Call to zx_security.set_security_context |
    +--------------------------------------------*/
    ZX_SECURITY.set_security_context(ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).legal_entity_id,
                                     ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).internal_organization_id,
                                     ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(p_trx_id_index).effective_date,
                                     x_return_status
                                     );

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             'application_id: '||to_char(x_event_class_rec.application_id)||
             ', entity_code: '||x_event_class_rec.entity_code||
             ', event_class_code: '||x_event_class_rec.event_class_code||
             ', event_type_code: '||x_event_class_rec.event_type_code||
             ', trx_id: '||to_char(x_event_class_rec.trx_id)||
             ', internal_organization_id: '||to_char(x_event_class_rec.internal_organization_id)||
             ', ledger_id: '||to_char(x_event_class_rec.ledger_id)||
             ', legal_entity_id: '||to_char(x_event_class_rec.legal_entity_id)||
             ', trx_date: '||to_char(x_event_class_rec.trx_date)||
             ', related_document_date: '||to_char(x_event_class_rec.rel_doc_date)||
             ', provnl_tax_determination_date: '||to_char(x_event_class_rec.provnl_tax_determination_date)||
             ', trx_currency_code: '||x_event_class_rec.trx_currency_code||
             ', quote_flag: '||x_event_class_rec.quote_flag ||
             ', establishment_id: '||to_char(x_event_class_rec.establishment_id)||
             ', icx_session_id: '||to_char(x_event_class_rec.icx_session_id));
    END IF;

    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'(-)');
    END IF;

EXCEPTION
   WHEN OTHERS THEN
--        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
      IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
      END IF;
END fetch_ptnr_tax_regime_tbl;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  delete_ptnr_location_tbl
--
--  DESCRIPTION
--  deletes the record of table structure
--
--  CALLED BY
--    partner_location_population
-----------------------------------------------------------------------
PROCEDURE delete_ptnr_location_tbl IS
BEGIN
  l_ptnr_loc_tbl.EVENT_CLASS_MAPPING_ID.delete;
  l_ptnr_loc_tbl.TRX_ID.delete;
  l_ptnr_loc_tbl.TRX_LINE_ID.delete;
  l_ptnr_loc_tbl.TRX_LEVEL_TYPE.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE1.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE1.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE2.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE2.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE3.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE3.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE4.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE4.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE5.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE5.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE6.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE6.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE7.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE7.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE8.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE8.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE9.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE9.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE10.delete;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE10.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE1.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE1.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE2.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE2.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE3.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE3.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE4.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE4.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE5.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE5.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE6.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE6.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE7.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE7.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE8.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE8.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE9.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE9.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE10.delete;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE10.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE1.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE1.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE2.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE2.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE3.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE3.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE4.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE4.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE5.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE5.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE6.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE6.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE7.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE7.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE8.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE8.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE9.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE9.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE10.delete;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE10.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE1.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE1.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE2.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE2.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE3.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE3.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE4.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE4.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE5.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE5.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE6.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE6.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE7.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE7.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE8.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE8.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE9.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE9.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE10.delete;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE10.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE1.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE1.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE2.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE2.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE3.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE3.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE4.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE4.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE5.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE5.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE6.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE6.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE7.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE7.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE8.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE8.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE9.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE9.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE10.delete;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE10.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE1.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE1.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE2.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE2.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE3.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE3.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE4.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE4.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE5.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE5.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE6.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE6.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE7.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE7.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE8.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE8.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE9.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE9.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE10.delete;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE10.delete;
  l_ptnr_loc_tbl.SHIP_TO_PARTY_NUMBER.delete;
  l_ptnr_loc_tbl.SHIP_TO_PARTY_NAME.delete;
  l_ptnr_loc_tbl.SHIP_FROM_PARTY_NUMBER.delete;
  l_ptnr_loc_tbl.SHIP_FROM_PARTY_NAME.delete;
  l_ptnr_loc_tbl.BILL_TO_PARTY_NUMBER.delete;
  l_ptnr_loc_tbl.BILL_TO_PARTY_NAME.delete;
  l_ptnr_loc_tbl.BILL_FROM_PARTY_NUMBER.delete;
  l_ptnr_loc_tbl.BILL_FROM_PARTY_NAME.delete;
END ;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  initialise_partner_tables
--
--  DESCRIPTION
--  Initialise the partner tables for subsequent calls
--
--  CALLED BY
--    calculate_tax
--    import_tax
-----------------------------------------------------------------------
PROCEDURE initialise_partner_tables
IS
    l_api_name         CONSTANT VARCHAR2(30):= 'INITIALISE_PARTNER_TABLES';

BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    DELETE from ZX_TRX_PRE_PROC_OPTIONS_GT;
    DELETE from ZX_PRVDR_HDR_EXTNS_GT;
    DELETE from ZX_PRVDR_LINE_EXTNS_GT;
    DELETE from ZX_PTNR_LOCATION_INFO_GT;

    delete_ptnr_location_tbl;

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-');
    END IF;

EXCEPTION
   WHEN OTHERS THEN
--        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
      IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
      END IF;
END initialise_partner_tables;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  intialise_partner_location_table
--
--  DESCRIPTION
--  intialise the record of table structure so that if element at index
--  does not exist error does not occur
--
--  CALLED BY
--    partner_location_population
-----------------------------------------------------------------------
PROCEDURE init_ptnr_location_tbl
 (p_ptnr_index    IN         NUMBER
 )IS
BEGIN
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE1(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE1(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE2(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE2(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE3(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE3(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE4(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE4(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE5(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE5(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE6(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE6(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE7(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE7(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE8(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE8(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE9(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE9(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE10(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE10(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE1(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE1(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE2(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE2(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE3(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE3(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE4(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE4(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE5(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE5(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE6(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE6(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE7(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE7(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE8(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE8(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE9(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE9(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE10(p_ptnr_index) := null;
  l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE10(p_ptnr_index):= null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE1(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE1(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE2(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE2(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE3(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE3(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE4(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE4(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE5(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE5(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE6(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE6(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE7(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE7(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE8(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE8(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE9(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE9(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE10(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE10(p_ptnr_index)      := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE1(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE1(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE2(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE2(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE3(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE3(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE4(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE4(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE5(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE5(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE6(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE6(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE7(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE7(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE8(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE8(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE9(p_ptnr_index)        := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE9(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE10(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE10(p_ptnr_index)      := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE1(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE1(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE2(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE2(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE3(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE3(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE4(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE4(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE5(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE5(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE6(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE6(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE7(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE7(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE8(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE8(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE9(p_ptnr_index)    := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE9(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE10(p_ptnr_index)   := null;
  l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE10(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE1(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE1(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE2(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE2(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE3(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE3(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE4(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE4(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE5(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE5(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE6(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE6(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE7(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE7(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE8(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE8(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE9(p_ptnr_index)  := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE9(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE10(p_ptnr_index) := null;
  l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE10(p_ptnr_index):= null;
  l_ptnr_loc_tbl.SHIP_TO_PARTY_NUMBER(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.SHIP_TO_PARTY_NAME(p_ptnr_index)         := null;
  l_ptnr_loc_tbl.SHIP_FROM_PARTY_NUMBER(p_ptnr_index)     := null;
  l_ptnr_loc_tbl.SHIP_FROM_PARTY_NAME(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.BILL_TO_PARTY_NUMBER(p_ptnr_index)       := null;
  l_ptnr_loc_tbl.BILL_TO_PARTY_NAME(p_ptnr_index)         := null;
  l_ptnr_loc_tbl.BILL_FROM_PARTY_NUMBER(p_ptnr_index)     := null;
  l_ptnr_loc_tbl.BILL_FROM_PARTY_NAME(p_ptnr_index)       := null;
END ;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  get_address_elements
--
--  DESCRIPTION
--  gets additional address elements for location types
--
--  CALLED BY
--    partner_location_population
-----------------------------------------------------------------------
/*----------------------------------------------------------------------------*
 |This procedure gets the additional geography types and values after all the |
 |location types have been populated from the partner global structure        |
 |All records of one location type have a unique value of location table and  |
 |location id. This procedure is called for each location type.               |
 *----------------------------------------------------------------------------*/
PROCEDURE get_address_elements
  (p_table          IN  VARCHAR2,
   p_location_id    IN  NUMBER,
   x_address1       OUT NOCOPY VARCHAR2,
   x_address2       OUT NOCOPY VARCHAR2,
   x_address3       OUT NOCOPY VARCHAR2,
   x_address4       OUT NOCOPY VARCHAR2,
   x_return_status  OUT NOCOPY VARCHAR2
  ) IS

   l_api_name CONSTANT  VARCHAR2(30) := 'GET_ADDRESS_ELEMENTS';
   l_add_idx            VARCHAR2(100);
BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    x_return_status :=  FND_API.G_RET_STS_SUCCESS;
    l_add_idx := p_table||to_char(p_location_id);

    IF l_add_idx is NOT NULL THEN
      IF (NOT(l_ptnr_addr_tbl.EXISTS(l_add_idx))) THEN
         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Caching from database for '||l_add_idx);
         END IF;
         IF p_table = 'HR_LOCATIONS_ALL' THEN
           SELECT address_line_1, address_line_2, address_line_3, NULL
           INTO l_ptnr_addr_tbl(l_add_idx).address1,
                l_ptnr_addr_tbl(l_add_idx).address2,
                l_ptnr_addr_tbl(l_add_idx).address3,
                l_ptnr_addr_tbl(l_add_idx).address4
           FROM HR_LOCATIONS_ALL
          WHERE location_id = p_location_id;
         ELSIF p_table = 'HZ_LOCATIONS' THEN
           SELECT address1, address2, address3, address4
           INTO l_ptnr_addr_tbl(l_add_idx).address1,
                l_ptnr_addr_tbl(l_add_idx).address2,
                l_ptnr_addr_tbl(l_add_idx).address3,
                l_ptnr_addr_tbl(l_add_idx).address4
           FROM HZ_LOCATIONS
          WHERE location_id = p_location_id;
         ELSIF p_table = 'PO_VENDOR_SITES_ALL' THEN
           SELECT address1, address2, address3, address4
           INTO l_ptnr_addr_tbl(l_add_idx).address1,
                l_ptnr_addr_tbl(l_add_idx).address2,
                l_ptnr_addr_tbl(l_add_idx).address3,
                l_ptnr_addr_tbl(l_add_idx).address4
           FROM HZ_LOCATIONS
          WHERE location_id = p_location_id;
         END IF;
       END IF;
       x_address1 := l_ptnr_addr_tbl(l_add_idx).address1;
       x_address2 := l_ptnr_addr_tbl(l_add_idx).address2;
       x_address3 := l_ptnr_addr_tbl(l_add_idx).address3;
       x_address4 := l_ptnr_addr_tbl(l_add_idx).address4;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            'Address1: '||l_ptnr_addr_tbl(l_add_idx).address1||
            ', Address2: '||l_ptnr_addr_tbl(l_add_idx).address2||
            ', Address3: '||l_ptnr_addr_tbl(l_add_idx).address3||
            ', Address4: '||l_ptnr_addr_tbl(l_add_idx).address4||' for key: '||to_char(l_add_idx));
       END IF;
    END IF;

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-');
    END IF;

    EXCEPTION
      WHEN OTHERS THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
        END IF;
  END get_address_elements;


-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  populate_parties
--
--  DESCRIPTION
--  Retrieve the following from hz_parties given the party_tax_profile ids
--  from zx_lines_det_factors and zx_party_tax_profile
--  SHIP_TO_PARTY_NUMBER
--  SHIP_TO_PARTY_NAME
--  SHIP_FROM_PARTY_NUMBER
--  SHIP_FROM_PARTY_NAME
--  BILL_TO_PARTY_NUMBER
--  BILL_TO_PARTY_NAME
--  BILL_FROM_PARTY_NUMBER
--  BILL_FROM_PARTY_NAME
--
--  CALLED BY
--    partner_location_population
-----------------------------------------------------------------------

PROCEDURE populate_parties
  (p_event_class_rec         IN  ZX_API_PUB.event_class_rec_type,
   p_trx_id                  IN  NUMBER,
   p_trx_line_id             IN  NUMBER,
   p_trx_level_type          IN  VARCHAR2,
   p_ptnr_idx                IN  NUMBER,
   x_return_status           OUT NOCOPY VARCHAR2
  ) IS

   l_api_name         CONSTANT  VARCHAR2(30) := 'POPULATE_PARTIES';
   l_ship_to_ptp_id             NUMBER;
   l_ship_from_ptp_id           NUMBER;
   l_bill_to_ptp_id             NUMBER;
   l_bill_from_ptp_id           NUMBER;
   l_ship_third_pty_acct_id     ZX_LINES_DET_FACTORS.SHIP_THIRD_PTY_ACCT_ID%type;
   l_bill_third_pty_acct_id     ZX_LINES_DET_FACTORS.BILL_THIRD_PTY_ACCT_ID%type;
   l_party_index                VARCHAR2(100);
BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    x_return_status :=  FND_API.G_RET_STS_SUCCESS;

    --Get the ptp ids from zx_lines_det_factors
    SELECT ship_to_party_tax_prof_id,
           bill_to_party_tax_prof_id,
           ship_from_party_tax_prof_id,
           bill_from_party_tax_prof_id,
           ship_third_pty_acct_id,
           bill_third_pty_acct_id
      INTO l_ship_to_ptp_id,
           l_bill_to_ptp_id,
           l_ship_from_ptp_id,
           l_bill_from_ptp_id,
           l_ship_third_pty_acct_id,   -- Bug 4939819
           l_bill_third_pty_acct_id    -- Bug 4939819
      FROM ZX_LINES_DET_FACTORS
     WHERE event_class_mapping_id = p_event_class_rec.event_class_mapping_id  -- Bug 4939819
       AND trx_id                 = p_trx_id
       AND trx_line_id            = p_trx_line_id
       AND trx_level_type         = p_trx_level_type;

/*
    Get the party_number,party_name from hz_parties for the ptp_ids
    Cache the values in party_id_tbl so that multiple selects are not performed

Bug 4939819
The source of party number and name information varies depending upon the family group.

For O2C products, the information can be derived as follows.
Party Type         PTP known   Other Info              Derivation Logic
---------------    -----       -----------             ----------------
SHIP/BILL TO       Y                                   Via ZX_PARTY_TAX_PROFILE, HZ_PARTIES

SHIP/BILL TO       N           SHIP_THIRD_PTY_ACCT_ID  Via HZ_CUST_ACCOUNTS, HZ_PARTIES
In this case, SHIP_THIRD_PTY_ACCT_ID holds value of CUST_ACCOUNT_ID from HZ_CUST_ACCOUNTS.

SHIP/BILL FROM     Y                                   Via ZX_PARTY_TAX_PROFILE, HZ_PARTIES
As per Desh's update in the bug, If a eBiz customer wants to pass first party inv org id in
Rel 12 with new partner integration, he must do legal to business association using LE form.
That would create a PTP for the first party inv org.
Hence, there will be a record in HZ_PARTIES and is correct to derive info from HZ_PARTIES.

SHIP/BILL FROM     N                                   NULL (PTP is always expected)

-------------------------------------------------------------------------------------------
For P2P products, the information can be derived as follows.
Party Type         PTP known   Other Info              Derivation Logic
---------------    -----       -----------             ----------------
SHIP/BILL TO       Y                                   Via ZX_PARTY_TAX_PROFILE, HZ_PARTIES
As per Desh's update in the bug, If a eBiz customer wants to pass first party inv org id in
Rel 12 with new partner integration, he must do legal to business association using LE form.
That would create a PTP for the first party inv org.
Hence, there will definitely be record in HZ_PARTIES.

SHIP/BILL TO       N                                   NULL (PTP is always expected)

SHIP/BILL FROM     Y                                   Via ZX_PARTY_TAX_PROFILE, HZ_PARTIES

SHIP/BILL FROM     N           SHIP_THIRD_PTY_ACCT_ID  Via AP_SUPPLIERS
In this case, SHIP_THIRD_PTY_ACCT_ID holds value of VENDOR_ID.

*/
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
         'l_ship_from_ptp_id = '||l_ship_from_ptp_id||
         ', l_ship_third_pty_acct_id = '||l_ship_third_pty_acct_id);
    END IF;

    IF l_ship_from_ptp_id is NOT NULL  THEN
      l_party_index := l_ship_from_ptp_id;
      IF  NOT party_id_tbl.EXISTS(l_party_index) THEN
        SELECT pty.party_name,
               pty.party_number
          INTO l_ptnr_loc_tbl.ship_from_party_name(p_ptnr_idx),
               l_ptnr_loc_tbl.ship_from_party_number(p_ptnr_idx)
          FROM hz_parties pty,
               zx_party_tax_profile ptp
         WHERE ptp.party_tax_profile_id = l_ship_from_ptp_id
           AND ptp.party_id = pty.party_id;

         party_id_tbl(l_party_index).party_number := l_ptnr_loc_tbl.ship_from_party_number(p_ptnr_idx);
         party_id_tbl(l_party_index).party_name   := l_ptnr_loc_tbl.ship_from_party_name(p_ptnr_idx);
       ELSE
         l_ptnr_loc_tbl.ship_from_party_number(p_ptnr_idx):= party_id_tbl(l_party_index).party_number;
         l_ptnr_loc_tbl.ship_from_party_name(p_ptnr_idx)  := party_id_tbl(l_party_index).party_name;
      END IF;
    ELSE
      IF p_event_class_rec.prod_family_grp_code = 'O2C' THEN
         l_ptnr_loc_tbl.ship_from_party_number(p_ptnr_idx):= null;
         l_ptnr_loc_tbl.ship_from_party_name(p_ptnr_idx)  := null;
      ELSE
         IF l_ship_third_pty_acct_id is NOT NULL THEN
            BEGIN
               SELECT po.vendor_name,
                      hp.party_number
                 INTO l_ptnr_loc_tbl.ship_from_party_name(p_ptnr_idx),
                      l_ptnr_loc_tbl.ship_from_party_number(p_ptnr_idx)
                 FROM ap_suppliers po
                    , hz_parties hp
                WHERE po.vendor_id = l_ship_third_pty_acct_id
                  AND po.party_id  = hp.party_id;
            EXCEPTION WHEN OTHERS THEN
               l_ptnr_loc_tbl.ship_from_party_number(p_ptnr_idx):= null;
               l_ptnr_loc_tbl.ship_from_party_name(p_ptnr_idx)  := null;
            END;
         ELSE
            l_ptnr_loc_tbl.ship_from_party_number(p_ptnr_idx):= null;
            l_ptnr_loc_tbl.ship_from_party_name(p_ptnr_idx)  := null;
         END IF;
      END IF;
    END IF;

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
         'l_bill_from_ptp_id = '||l_bill_from_ptp_id||
         ', l_bill_third_pty_acct_id = '||l_bill_third_pty_acct_id);
    END IF;

    IF l_bill_from_ptp_id is NOT NULL  THEN
      l_party_index := l_bill_from_ptp_id;
      IF  NOT party_id_tbl.EXISTS(l_party_index) THEN
        SELECT pty.party_name,
               pty.party_number
          INTO l_ptnr_loc_tbl.bill_from_party_name(p_ptnr_idx),
               l_ptnr_loc_tbl.bill_from_party_number(p_ptnr_idx)
          FROM hz_parties pty,
               zx_party_tax_profile ptp
         WHERE ptp.party_tax_profile_id = l_bill_from_ptp_id
           AND ptp.party_id = pty.party_id;

         party_id_tbl(l_party_index).party_number := l_ptnr_loc_tbl.bill_from_party_number(p_ptnr_idx);
         party_id_tbl(l_party_index).party_name   := l_ptnr_loc_tbl.bill_from_party_name(p_ptnr_idx);
      ELSE
         l_ptnr_loc_tbl.bill_from_party_number(p_ptnr_idx):= party_id_tbl(l_party_index).party_number;
         l_ptnr_loc_tbl.bill_from_party_name(p_ptnr_idx)  := party_id_tbl(l_party_index).party_name;
      END IF;
    ELSE
      IF p_event_class_rec.prod_family_grp_code = 'O2C' THEN
         l_ptnr_loc_tbl.bill_from_party_number(p_ptnr_idx):= null;
         l_ptnr_loc_tbl.bill_from_party_name(p_ptnr_idx)  := null;
      ELSE
         IF l_bill_third_pty_acct_id is NOT NULL THEN
            BEGIN
               SELECT po.vendor_name,
                      hp.party_number
                 INTO l_ptnr_loc_tbl.bill_from_party_name(p_ptnr_idx),
                      l_ptnr_loc_tbl.bill_from_party_number(p_ptnr_idx)
                 FROM ap_suppliers po
                    , hz_parties hp
                WHERE po.vendor_id = l_bill_third_pty_acct_id
                  AND po.party_id  = hp.party_id;
            EXCEPTION WHEN OTHERS THEN
               l_ptnr_loc_tbl.bill_from_party_number(p_ptnr_idx):= null;
               l_ptnr_loc_tbl.bill_from_party_name(p_ptnr_idx)  := null;
            END;
         ELSE
            l_ptnr_loc_tbl.bill_from_party_number(p_ptnr_idx):= null;
            l_ptnr_loc_tbl.bill_from_party_name(p_ptnr_idx)  := null;
         END IF;
      END IF;
    END IF;

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
         'l_ship_to_ptp_id = '||l_ship_to_ptp_id||
         ', l_ship_third_pty_acct_id = '||l_ship_third_pty_acct_id);
    END IF;

    IF l_ship_to_ptp_id is NOT NULL  THEN
      l_party_index := l_ship_to_ptp_id;
      IF  NOT party_id_tbl.EXISTS(l_party_index) THEN
        SELECT pty.party_name,
               pty.party_number
          INTO l_ptnr_loc_tbl.ship_to_party_name(p_ptnr_idx),
               l_ptnr_loc_tbl.ship_to_party_number(p_ptnr_idx)
          FROM hz_parties pty,
               zx_party_tax_profile ptp
         WHERE ptp.party_tax_profile_id = l_ship_to_ptp_id
           AND ptp.party_id = pty.party_id;

         party_id_tbl(l_party_index).party_number := l_ptnr_loc_tbl.ship_to_party_number(p_ptnr_idx);
         party_id_tbl(l_party_index).party_name   := l_ptnr_loc_tbl.ship_to_party_name(p_ptnr_idx);
       ELSE
         l_ptnr_loc_tbl.ship_to_party_number(p_ptnr_idx):= party_id_tbl(l_party_index).party_number;
         l_ptnr_loc_tbl.ship_to_party_name(p_ptnr_idx)  := party_id_tbl(l_party_index).party_name;
      END IF;
    ELSE
      IF p_event_class_rec.prod_family_grp_code = 'P2P' THEN
         l_ptnr_loc_tbl.ship_to_party_number(p_ptnr_idx):= null;
         l_ptnr_loc_tbl.ship_to_party_name(p_ptnr_idx)  := null;
      ELSE
         IF l_ship_third_pty_acct_id is NOT NULL THEN
            BEGIN
               SELECT hzp.party_name,
                      hzp.party_number
                 INTO l_ptnr_loc_tbl.ship_to_party_name(p_ptnr_idx),
                      l_ptnr_loc_tbl.ship_to_party_number(p_ptnr_idx)
                 FROM hz_cust_accounts hzca,
                      hz_parties hzp
                WHERE hzp.party_id = hzca.party_id
                  AND hzca.cust_account_id = l_ship_third_pty_acct_id;
            EXCEPTION WHEN OTHERS THEN
               l_ptnr_loc_tbl.ship_to_party_number(p_ptnr_idx):= null;
               l_ptnr_loc_tbl.ship_to_party_name(p_ptnr_idx)  := null;
            END;
         ELSE
            l_ptnr_loc_tbl.ship_to_party_number(p_ptnr_idx):= null;
            l_ptnr_loc_tbl.ship_to_party_name(p_ptnr_idx)  := null;
         END IF;
      END IF;
    END IF;

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
         'l_bill_to_ptp_id = '||l_bill_to_ptp_id||
         ', l_bill_third_pty_acct_id = '||l_bill_third_pty_acct_id);
    END IF;

    IF l_bill_to_ptp_id is NOT NULL  THEN
      l_party_index := l_bill_to_ptp_id;
      IF  NOT party_id_tbl.EXISTS(l_party_index) THEN
        SELECT pty.party_name,
               pty.party_number
          INTO l_ptnr_loc_tbl.bill_to_party_name(p_ptnr_idx),
               l_ptnr_loc_tbl.bill_to_party_number(p_ptnr_idx)
          FROM hz_parties pty,
               zx_party_tax_profile ptp
         WHERE ptp.party_tax_profile_id = l_bill_to_ptp_id
           AND ptp.party_id = pty.party_id;

         party_id_tbl(l_party_index).party_number := l_ptnr_loc_tbl.bill_to_party_number(p_ptnr_idx);
         party_id_tbl(l_party_index).party_name   := l_ptnr_loc_tbl.bill_to_party_name(p_ptnr_idx);
       ELSE
         l_ptnr_loc_tbl.bill_to_party_number(p_ptnr_idx):= party_id_tbl(l_party_index).party_number;
         l_ptnr_loc_tbl.bill_to_party_name(p_ptnr_idx)  := party_id_tbl(l_party_index).party_name;
      END IF;
    ELSE
      IF p_event_class_rec.prod_family_grp_code = 'P2P' THEN
         l_ptnr_loc_tbl.bill_to_party_number(p_ptnr_idx):= null;
         l_ptnr_loc_tbl.bill_to_party_name(p_ptnr_idx)  := null;
      ELSE
         IF l_bill_third_pty_acct_id is NOT NULL THEN
            BEGIN
               SELECT hzp.party_name,
                      hzp.party_number
                 INTO l_ptnr_loc_tbl.bill_to_party_name(p_ptnr_idx),
                      l_ptnr_loc_tbl.bill_to_party_number(p_ptnr_idx)
                 FROM hz_cust_accounts hzca,
                      hz_parties hzp
                WHERE hzp.party_id = hzca.party_id
                  AND hzca.cust_account_id = l_bill_third_pty_acct_id;
            EXCEPTION WHEN OTHERS THEN
               l_ptnr_loc_tbl.bill_to_party_number(p_ptnr_idx):= null;
               l_ptnr_loc_tbl.bill_to_party_name(p_ptnr_idx)  := null;
            END;
         ELSE
            l_ptnr_loc_tbl.bill_to_party_number(p_ptnr_idx):= null;
            l_ptnr_loc_tbl.bill_to_party_name(p_ptnr_idx)  := null;
         END IF;
      END IF;
    END IF;

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-');
    END IF;

    EXCEPTION
      WHEN OTHERS THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
        END IF;
  END populate_parties;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  populate_ptnr_loc_tbl
--
--  DESCRIPTION
--  Populate the partner location gt table
--
--  CALLED BY
--    partner_location_population
-----------------------------------------------------------------------
 PROCEDURE populate_ptnr_loc_tbl(
    p_ptnr_idx      IN         BINARY_INTEGER,
    p_location_type IN         VARCHAR2,
    p_loc_idx       IN         BINARY_INTEGER,
    p_geo_type      IN         VARCHAR2,
    p_geo_val       IN         VARCHAR2,
    x_return_status OUT NOCOPY VARCHAR2
    ) IS
    l_api_name CONSTANT  VARCHAR2(30) := 'POPULATE_PTNR_LOC_TBL';
    l_return_status      VARCHAR2(1);
 BEGIN
   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS;

   IF p_location_type = 'SHIP_FROM' THEN
     IF p_loc_idx = 1 THEN
       l_ptnr_loc_tbl.ship_from_geography_type1(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value1(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 2 THEN
       l_ptnr_loc_tbl.ship_from_geography_type2(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value2(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 3 THEN
       l_ptnr_loc_tbl.ship_from_geography_type3(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value3(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 4 THEN
       l_ptnr_loc_tbl.ship_from_geography_type4(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value4(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 5 THEN
       l_ptnr_loc_tbl.ship_from_geography_type5(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value5(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 6 THEN
       l_ptnr_loc_tbl.ship_from_geography_type6(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value6(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 7 THEN
       l_ptnr_loc_tbl.ship_from_geography_type7(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value7(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 8 THEN
       l_ptnr_loc_tbl.ship_from_geography_type8(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value8(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 9 THEN
       l_ptnr_loc_tbl.ship_from_geography_type9(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value9(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 10 THEN
       l_ptnr_loc_tbl.ship_from_geography_type10(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_from_geography_value10(p_ptnr_idx):= p_geo_val;
     END IF;
   ELSIF p_location_type = 'SHIP_TO' THEN
     IF p_loc_idx = 1 THEN
       l_ptnr_loc_tbl.ship_to_geography_type1(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value1(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 2 THEN
       l_ptnr_loc_tbl.ship_to_geography_type2(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value2(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 3 THEN
       l_ptnr_loc_tbl.ship_to_geography_type3(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value3(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 4 THEN
       l_ptnr_loc_tbl.ship_to_geography_type4(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value4(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 5 THEN
       l_ptnr_loc_tbl.ship_to_geography_type5(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value5(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 6 THEN
       l_ptnr_loc_tbl.ship_to_geography_type6(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value6(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 7 THEN
       l_ptnr_loc_tbl.ship_to_geography_type7(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value7(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 8 THEN
       l_ptnr_loc_tbl.ship_to_geography_type8(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value8(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 9 THEN
       l_ptnr_loc_tbl.ship_to_geography_type9(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value9(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 10 THEN
       l_ptnr_loc_tbl.ship_to_geography_type10(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.ship_to_geography_value10(p_ptnr_idx):= p_geo_val;
     END IF;
   ELSIF p_location_type = 'BILL_TO' THEN
     IF p_loc_idx = 1 THEN
       l_ptnr_loc_tbl.bill_to_geography_type1(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value1(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 2 THEN
       l_ptnr_loc_tbl.bill_to_geography_type2(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value2(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 3 THEN
       l_ptnr_loc_tbl.bill_to_geography_type3(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value3(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 4 THEN
       l_ptnr_loc_tbl.bill_to_geography_type4(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value4(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 5 THEN
       l_ptnr_loc_tbl.bill_to_geography_type5(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value5(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 6 THEN
       l_ptnr_loc_tbl.bill_to_geography_type6(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value6(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 7 THEN
       l_ptnr_loc_tbl.bill_to_geography_type7(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value7(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 8 THEN
       l_ptnr_loc_tbl.bill_to_geography_type8(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value8(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 9 THEN
       l_ptnr_loc_tbl.bill_to_geography_type9(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value9(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 10 THEN
       l_ptnr_loc_tbl.bill_to_geography_type10(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_to_geography_value10(p_ptnr_idx):= p_geo_val;
     END IF;
   ELSIF p_location_type = 'BILL_FROM' THEN
     IF p_loc_idx = 1 THEN
       l_ptnr_loc_tbl.bill_from_geography_type1(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value1(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 2 THEN
       l_ptnr_loc_tbl.bill_from_geography_type2(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value2(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 3 THEN
       l_ptnr_loc_tbl.bill_from_geography_type3(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value3(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 4 THEN
       l_ptnr_loc_tbl.bill_from_geography_type4(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value4(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 5 THEN
       l_ptnr_loc_tbl.bill_from_geography_type5(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value5(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 6 THEN
       l_ptnr_loc_tbl.bill_from_geography_type6(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value6(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 7 THEN
       l_ptnr_loc_tbl.bill_from_geography_type7(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value7(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 8 THEN
       l_ptnr_loc_tbl.bill_from_geography_type8(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value8(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 9 THEN
       l_ptnr_loc_tbl.bill_from_geography_type9(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value9(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 10 THEN
       l_ptnr_loc_tbl.bill_from_geography_type10(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.bill_from_geography_value10(p_ptnr_idx):= p_geo_val;
     END IF;
   ELSIF p_location_type = 'POO' THEN
     IF p_loc_idx = 1 THEN
       l_ptnr_loc_tbl.poo_geography_type1(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value1(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 2 THEN
       l_ptnr_loc_tbl.poo_geography_type2(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value2(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 3 THEN
       l_ptnr_loc_tbl.poo_geography_type3(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value3(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 4 THEN
       l_ptnr_loc_tbl.poo_geography_type4(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value4(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 5 THEN
       l_ptnr_loc_tbl.poo_geography_type5(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value5(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 6 THEN
       l_ptnr_loc_tbl.poo_geography_type6(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value6(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 7 THEN
       l_ptnr_loc_tbl.poo_geography_type7(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value7(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 8 THEN
       l_ptnr_loc_tbl.poo_geography_type8(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value8(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 9 THEN
       l_ptnr_loc_tbl.poo_geography_type9(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value9(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 10 THEN
       l_ptnr_loc_tbl.poo_geography_type10(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poo_geography_value10(p_ptnr_idx):= p_geo_val;
     END IF;
   ELSIF p_location_type = 'POA' THEN
     IF p_loc_idx = 1 THEN
       l_ptnr_loc_tbl.poa_geography_type1(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value1(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 2 THEN
       l_ptnr_loc_tbl.poa_geography_type2(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value2(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 3 THEN
       l_ptnr_loc_tbl.poa_geography_type3(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value3(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 4 THEN
       l_ptnr_loc_tbl.poa_geography_type4(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value4(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 5 THEN
       l_ptnr_loc_tbl.poa_geography_type5(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value5(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 6 THEN
       l_ptnr_loc_tbl.poa_geography_type6(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value6(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 7 THEN
       l_ptnr_loc_tbl.poa_geography_type7(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value7(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 8 THEN
       l_ptnr_loc_tbl.poa_geography_type8(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value8(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 9 THEN
       l_ptnr_loc_tbl.poa_geography_type9(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value9(p_ptnr_idx):= p_geo_val;
     ELSIF p_loc_idx = 10 THEN
       l_ptnr_loc_tbl.poa_geography_type10(p_ptnr_idx) := p_geo_type;
       l_ptnr_loc_tbl.poa_geography_value10(p_ptnr_idx):= p_geo_val;
     END IF;
   END IF;

   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-');
   END IF;

   EXCEPTION
      WHEN OTHERS THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
        END IF;
 END POPULATE_PTNR_LOC_TBL;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  prepare_for_loc_caching
--
--  DESCRIPTION
--
--
--  CALLED BY
--    calculate_tax_pvt
--
-----------------------------------------------------------------------
PROCEDURE prepare_for_loc_caching(
   p_trx_line_index  IN  NUMBER,
   p_event_class_rec IN  ZX_API_PUB.event_class_rec_type ,
   x_return_status   OUT NOCOPY VARCHAR2
  )IS

  i                                NUMBER;
  l_location_type_tbl              ZX_TCM_GEO_JUR_PKG.location_type_tbl_type;
  l_location_id_tbl                ZX_TCM_GEO_JUR_PKG.location_id_tbl_type;
  l_return_status                  VARCHAR2(1);
  l_context_info_rec               ZX_API_PUB.context_info_rec_type;
  l_api_name              CONSTANT VARCHAR2(30):= 'PREPARE_FOR_LOC_CACHING';

BEGIN
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'(+)');
    END IF;

    IF nvl(zx_global_structures_pkg.g_ptnr_srvc_subscr_flag,'N') = 'Y' THEN
       i := 1;
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_location_id(p_trx_line_index) is not NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'SHIP_TO';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_location_id(p_trx_line_index) is not NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'SHIP_FROM';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_location_id(p_trx_line_index)is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'BILL_TO';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_location_id(p_trx_line_index) is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'BILL_FROM';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_location_id(p_trx_line_index) is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'POA';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index) is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'POO';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trading_hq_location_id(p_trx_line_index) is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trading_hq_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'TRADING_HQ';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.own_hq_location_id(p_trx_line_index) is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.own_hq_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'OWN_HQ';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.title_transfer_location_id(p_trx_line_index) is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.title_transfer_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'TITLE_TRANS';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.paying_location_id(p_trx_line_index)is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.paying_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'PAYING';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poc_location_id(p_trx_line_index)is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poc_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'POC';
     i := i + 1;
    END IF;

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.pod_location_id(p_trx_line_index) is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.pod_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'POD';
     i := i + 1;
    END IF;

    IF  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.internal_org_location_id(p_trx_line_index) is NOT NULL then
     l_location_id_tbl(i):= ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.internal_org_location_id(p_trx_line_index);
     l_location_type_tbl(i):= 'INTERNAL_ORG';
     i := i + 1;
    END IF;


    ZX_TCM_GEO_JUR_PKG.populate_loc_geography_info(event_class_mapping_id => p_event_class_rec.event_class_mapping_id,
                                                   trx_id                 => p_event_class_rec.trx_id,
                                                   trx_line_id            => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_line_id(p_trx_line_index),
                                                   trx_level_type         => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_level_type(p_trx_line_index),
                                                   location_type_tbl      => l_location_type_tbl,
                                                   location_id_tbl        => l_location_id_tbl,
                                                   x_return_status        => l_return_status
                                                   );
    IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF x_return_status = FND_API.G_RET_STS_ERROR THEN
          l_context_info_rec.APPLICATION_ID   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index);
          l_context_info_rec.ENTITY_CODE      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index);
          l_context_info_rec.EVENT_CLASS_CODE := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index);
          l_context_info_rec.TRX_ID           := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_ID(p_trx_line_index);
          l_context_info_rec.TRX_LINE_ID      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LINE_ID(p_trx_line_index);
          l_context_info_rec.TRX_LEVEL_TYPE   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LEVEL_TYPE(p_trx_line_index);
          ZX_API_PUB.add_msg (p_context_info_rec => l_context_info_rec);
        END IF;

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
         ' RETURN_STATUS = ' || x_return_status||', '||SQLERRM);
       END IF;
       RETURN;
    END IF;
 END IF;

   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-');
   END IF;

   EXCEPTION
      WHEN OTHERS THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
        END IF;
 END prepare_for_loc_caching;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  partner_location_population
--
--  DESCRIPTION
--  Populate the partner location gt table
--
--  CALLED BY
--    calculate_tax
-----------------------------------------------------------------------
PROCEDURE partner_location_population(
    p_event_class_rec  IN  ZX_API_PUB.event_class_rec_type,
    x_return_status    OUT NOCOPY VARCHAR2
    ) IS
    l_return_status      VARCHAR2(30);
    l_ptnr_index         BINARY_INTEGER;
    l_ship_from_idx      NUMBER;
    l_ship_to_idx        NUMBER;
    l_bill_to_idx        NUMBER;
    l_bill_from_idx      NUMBER;
    l_poo_idx            NUMBER;
    l_poa_idx            NUMBER;
    l_prev_trx_line_id   NUMBER;
    l_ship_from_tbl      VARCHAR2(100);
    l_ship_from_id       NUMBER;
    l_ship_to_tbl        VARCHAR2(100);
    l_ship_to_id         NUMBER;
    l_bill_to_tbl        VARCHAR2(100);
    l_bill_to_id         NUMBER;
    l_bill_from_tbl      VARCHAR2(100);
    l_bill_from_id       NUMBER;
    l_poo_tbl            VARCHAR2(100);
    l_poo_id             NUMBER;
    l_poa_tbl            VARCHAR2(100);
    l_poa_id             NUMBER;
    l_address1           VARCHAR2(100);
    l_address2           VARCHAR2(100);
    l_address3           VARCHAR2(100);
    l_address4           VARCHAR2(100);
    l_first              BOOLEAN;
    l_context_info_rec   ZX_API_PUB.context_info_rec_type;
    l_api_name  CONSTANT VARCHAR2(30) := 'PARTNER_LOCATION_POPULATION';
    l_trx_id_indx        VARCHAR2(200);
  BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;
    l_first := TRUE;

/*
    FOR l_regime_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.LAST,-99)
    LOOP
       IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(l_regime_index) AND
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id is not null THEN
         zx_global_structures_pkg.g_ptnr_srvc_subscr_flag := 'Y';
         EXIT;
       END IF;
    END LOOP;
*/

    IF nvl(zx_global_structures_pkg.g_ptnr_srvc_subscr_flag,'N') = 'Y' THEN
      l_ptnr_index := 0;
      initialise_partner_tables;   -- Bug 5068716: Moved initialization of partner tables only if partner is involved.
      IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl-count = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_id.count);
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' l_ptnr_loc_tbl-count = ' || l_ptnr_loc_tbl.trx_id.count);
      END IF;

      FOR i IN nvl(ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_id.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_id.LAST,-99)
      LOOP
       IF (ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_id(i) = p_event_class_rec.trx_id) THEN
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' location_info_tbl-EVENT_CLASS_MAPPING_ID = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.EVENT_CLASS_MAPPING_ID(i)||
            ', TRX_ID = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.TRX_ID(i)||
            ', TRX_LINE_ID = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.TRX_LINE_ID(i)||
            ', TRX_LEVEL_TYPE = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.TRX_LEVEL_TYPE(i)||
            ', LOCATION_TYPE = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.LOCATION_TYPE(i)||
            ', LOCATION_TABLE_NAME = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.LOCATION_TABLE_NAME(i)||
            ', LOCATION_ID = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.LOCATION_ID(i)||
            ', GEOGRAPHY_TYPE = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.GEOGRAPHY_TYPE(i)||
            ', GEOGRAPHY_VALUE = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.GEOGRAPHY_VALUE(i)||
            ', GEOGRAPHY_ID = ' || ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.GEOGRAPHY_ID(i));
        END IF;

       --------------------------------------------------------------------------------------
       -- For the first iteration populate the header columns of the structure using the flag l_first
       -- For subsequent iterations populate the header columns after trx line id changes.
       --------------------------------------------------------------------------------------
         IF (nvl(l_prev_trx_line_id,0) <> ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_line_id(i) OR l_first) THEN
           l_prev_trx_line_id := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_line_id(i);
           l_ptnr_index := l_ptnr_index + 1;
           l_ptnr_loc_tbl.event_class_mapping_id(l_ptnr_index) := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.event_class_mapping_id(i);
           l_ptnr_loc_tbl.trx_id(l_ptnr_index):= ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_id(i);
           l_ptnr_loc_tbl.trx_line_id(l_ptnr_index) := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_line_id(i);
           l_ptnr_loc_tbl.trx_level_type(l_ptnr_index) := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_level_type(i);
           l_ship_from_idx := 1;
           l_ship_to_idx := 1;
           l_bill_to_idx := 1;
           l_bill_from_idx := 1;
           l_poo_idx := 1;
           l_poa_idx := 1;
           l_first := FALSE;

           --Initialise the record of tables so that element at index error does not appear
           init_ptnr_location_tbl(l_ptnr_index);

           --Retrieve the ship_from_party_number/name,ship_to_party_number/name,
           --bill_to_party_number/name, bill_from_party_number/name

    --Bug#6721441 --
           l_trx_id_indx := to_char(p_event_class_rec.event_class_mapping_id)
                          ||to_char(l_ptnr_loc_tbl.trx_id(l_ptnr_index))
                          ||to_char(l_ptnr_loc_tbl.trx_line_id(l_ptnr_index))
                          ||l_ptnr_loc_tbl.trx_level_type(l_ptnr_index);

           IF l_trx_id_tbl.EXISTS(l_trx_id_indx) THEN
              NULL;
           ELSE

           l_trx_id_tbl(l_trx_id_indx).event_class_map_id := p_event_class_rec.event_class_mapping_id;
           l_trx_id_tbl(l_trx_id_indx).trx_id := l_ptnr_loc_tbl.trx_id(l_ptnr_index);
           l_trx_id_tbl(l_trx_id_indx).trx_line_id := l_ptnr_loc_tbl.trx_line_id(l_ptnr_index);
           l_trx_id_tbl(l_trx_id_indx).trx_level_type := l_ptnr_loc_tbl.trx_level_type(l_ptnr_index);

           populate_parties (p_event_class_rec,
                          -- l_ptnr_loc_tbl.event_class_mapping_id(l_ptnr_index),
                             l_ptnr_loc_tbl.trx_id(l_ptnr_index),
                             l_ptnr_loc_tbl.trx_line_id(l_ptnr_index),
                             l_ptnr_loc_tbl.trx_level_type(l_ptnr_index),
                             l_ptnr_index,
                             l_return_status
                             );
          END IF;
         END IF;
       --------------------------------------------------------------------------------------
       -- Depending upon the location type populating the particular column of the record of
       -- tables structure. Incrementing the index counter for that particular location type
       --------------------------------------------------------------------------------------
         IF (ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_type(i) = 'SHIP_FROM') THEN
           populate_ptnr_loc_tbl(l_ptnr_index,
                                 'SHIP_FROM',
                                 l_ship_from_idx,
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_type(i),
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_value(i),
                                 l_return_status
                                );
           l_ship_from_tbl := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_table_name(i);
           l_ship_from_id  := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_id(i);
           l_ship_from_idx := l_ship_from_idx + 1;

         ELSIF ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_type(i) = 'SHIP_TO' THEN
           populate_ptnr_loc_tbl(l_ptnr_index,
                                 'SHIP_TO',
                                 l_ship_to_idx,
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_type(i),
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_value(i),
                                 l_return_status
                                );
           l_ship_to_tbl := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_table_name(i);
           l_ship_to_id  := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_id(i);
           l_ship_to_idx := l_ship_to_idx + 1;

         ELSIF ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_type(i) = 'BILL_TO' THEN
           populate_ptnr_loc_tbl(l_ptnr_index,
                                'BILL_TO',
                                l_bill_to_idx,
                                ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_type(i),
                                ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_value(i),
                                l_return_status
                                );
           l_bill_to_tbl := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_table_name(i);
           l_bill_to_id  := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_id(i);
           l_bill_to_idx := l_bill_to_idx + 1;

         ELSIF ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_type(i) = 'BILL_FROM' THEN
           populate_ptnr_loc_tbl(l_ptnr_index,
                                 'BILL_FROM',
                                 l_bill_from_idx,
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_type(i),
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_value(i),
                                 l_return_status
                                 );
           l_bill_from_tbl := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_table_name(i);
           l_bill_from_id  := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_id(i);
           l_bill_from_idx := l_bill_from_idx + 1;

         ELSIF ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_type(i) = 'POO' THEN
           populate_ptnr_loc_tbl(l_ptnr_index,
                                 'POO',
                                 l_poo_idx,
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_type(i),
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_value(i),
                                 l_return_status
                                 );
           l_poo_tbl := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_table_name(i);
           l_poo_id  := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_id(i);
           l_poo_idx := l_poo_idx + 1;

         ELSIF ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_type(i) = 'POA' THEN
           populate_ptnr_loc_tbl(l_ptnr_index,
                                 'POA',
                                 l_poa_idx,
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_type(i),
                                 ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.geography_value(i),
                                 l_return_status
                                 );
           l_poa_tbl := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_table_name(i);
           l_poa_id  := ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.location_id(i);
           l_poa_idx := l_poa_idx + 1;
         END IF;

       --------------------------------------------------------------------------------------
       -- IF the trx line id for the next record is different then fetching the additional
       -- address elements and inserting them into the record of tables for the present
       -- trx line id
       --------------------------------------------------------------------------------------
         IF (( i = ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_line_id.LAST) OR
            (l_prev_trx_line_id <> ZX_GLOBAL_STRUCTURES_PKG.location_info_tbl.trx_line_id(i+1)) ) THEN

            --Fetch the address elements for SHIP_FROM
            get_address_elements(l_ship_from_tbl,
                                 l_ship_from_id,
                                 l_address1,
                                 l_address2,
                                 l_address3,
                                 l_address4,
                                 l_return_status
                                );
            IF l_address1 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'SHIP_FROM',
                                    l_ship_from_idx,
                                    'ADDRESS1',
                                    l_address1,
                                    l_return_status
                                   );
            END IF;

            IF l_address2 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'SHIP_FROM',
                                    l_ship_from_idx+1,
                                    'ADDRESS2',
                                    l_address2,
                                    l_return_status
                                   );
            END IF;

            IF l_address3 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'SHIP_FROM',
                                    l_ship_from_idx+2,
                                    'ADDRESS3',
                                    l_address3,
                                    l_return_status
                                    );
            END IF;

            IF l_address4 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'SHIP_FROM',
                                    l_ship_from_idx+3,
                                    'ADDRESS4',
                                    l_address4,
                                    l_return_status
                                   );
            END IF;

            --Fetch the address elements for SHIP_TO
            get_address_elements(l_ship_to_tbl,
                                 l_ship_to_id,
                                 l_address1,
                                 l_address2,
                                 l_address3,
                                 l_address4,
                                 l_return_status
                                );

            IF l_address1 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'SHIP_TO',
                                    l_ship_to_idx,
                                    'ADDRESS1',
                                    l_address1,
                                    l_return_status
                                   );
            END IF;

            IF l_address2 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'SHIP_TO',
                                    l_ship_to_idx+1,
                                    'ADDRESS2',
                                    l_address2,
                                    l_return_status
                                   );
            END IF;

            IF l_address3 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'SHIP_TO',
                                    l_ship_to_idx+2,
                                    'ADDRESS3',
                                    l_address3,
                                    l_return_status
                                   );
            END IF;

            IF l_address4 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'SHIP_TO',
                                    l_ship_to_idx+3,
                                    'ADDRESS4',
                                    l_address4,
                                    l_return_status
                                    );
            END IF;

            --Fetch the address elements for BILL_TO
            get_address_elements(l_bill_to_tbl,
                                 l_bill_to_id,
                                 l_address1,
                                 l_address2,
                                 l_address3,
                                 l_address4,
                                 l_return_status
                                 );

            IF l_address1 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'BILL_TO',
                                    l_bill_to_idx,
                                    'ADDRESS1',
                                    l_address1,
                                    l_return_status
                                   );
            END IF;

            IF l_address2 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'BILL_TO',
                                    l_bill_to_idx+1,
                                    'ADDRESS2',
                                    l_address2,
                                    l_return_status
                                    );
            END IF;

            IF l_address3 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'BILL_TO',
                                    l_bill_to_idx+2,
                                    'ADDRESS3',
                                    l_address3,
                                    l_return_status
                                    );
            END IF;

            IF l_address4 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'BILL_TO',
                                    l_bill_to_idx+3,
                                    'ADDRESS4',
                                    l_address4,
                                    l_return_status
                                    );
            END IF;
            --Fetch the address elements for BILL_FROM
            get_address_elements(l_bill_from_tbl,
                                 l_bill_from_id,
                                 l_address1,
                                 l_address2,
                                 l_address3,
                                 l_address4,
                                 l_return_status
                                );

            IF l_address1 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'BILL_FROM',
                                    l_bill_from_idx,
                                    'ADDRESS1',
                                    l_address1,
                                    l_return_status
                                   );
            END IF;

            IF l_address2 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'BILL_FROM',
                                    l_bill_from_idx+1,
                                    'ADDRESS2',
                                    l_address2,
                                    l_return_status
                                   );
            END IF;

            IF l_address3 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'BILL_FROM',
                                    l_bill_from_idx+2,
                                    'ADDRESS3',
                                    l_address3,
                                    l_return_status
                                   );
            END IF;

            IF l_address4 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'BILL_FROM',
                                    l_bill_from_idx+3,
                                    'ADDRESS4',
                                    l_address4,
                                    l_return_status
                                   );
            END IF;

            --Fetch the address elements for POO
            get_address_elements(l_poo_tbl,
                                 l_poo_id,
                                 l_address1,
                                 l_address2,
                                 l_address3,
                                 l_address4,
                                 l_return_status
                                );
            IF l_address1 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'POO',
                                    l_poo_idx,
                                    'ADDRESS1',
                                    l_address1,
                                    l_return_status
                                   );
            END IF;

            IF l_address2 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'POO',
                                    l_poo_idx+1,
                                    'ADDRESS2',
                                    l_address2,
                                    l_return_status
                                   );
            END IF;

            IF l_address3 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'POO',
                                    l_poo_idx+2,
                                    'ADDRESS3',
                                    l_address3,
                                    l_return_status
                                    );
            END IF;

            IF l_address4 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'POO',
                                    l_poo_idx+3,
                                    'ADDRESS4',
                                    l_address4,
                                    l_return_status
                                   );
            END IF;

            --Fetch the address elements for POA
            get_address_elements(l_poa_tbl,
                                 l_poa_id,
                                 l_address1,
                                 l_address2,
                                 l_address3,
                                 l_address4,
                                 l_return_status
                                 );

            IF l_address4 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'POA',
                                    l_poa_idx,
                                    'ADDRESS1',
                                    l_address1,
                                    l_return_status
                                   );
            END IF;

            IF l_address2 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'POA',
                                    l_poa_idx+1,
                                    'ADDRESS2',
                                    l_address2,
                                    l_return_status
                                   );
            END IF;

            IF l_address3 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'POA',
                                    l_poa_idx+2,
                                    'ADDRESS3',
                                    l_address3,
                                    l_return_status
                                   );
            END IF;

            IF l_address4 is not null THEN
              populate_ptnr_loc_tbl(l_ptnr_index,
                                    'POA',
                                    l_poa_idx+3,
                                    'ADDRESS4',
                                    l_address4,
                                    l_return_status
                                   );
            END IF;
          END IF;
         END IF;
         END LOOP;

       --------------------------------------------------------------------------------------
       -- Bulk inserting the record of tables into the global temp table
       --------------------------------------------------------------------------------------
       FORALL i IN nvl(l_ptnr_loc_tbl.trx_id.FIRST,0) .. nvl(l_ptnr_loc_tbl.trx_id.LAST,-99)
         INSERT INTO ZX_PTNR_LOCATION_INFO_GT
                     (EVENT_CLASS_MAPPING_ID  ,
                      TRX_ID  ,
                      TRX_LINE_ID ,
                      TRX_LEVEL_TYPE ,
                      SHIP_TO_GEOGRAPHY_TYPE1 ,
                      SHIP_TO_GEOGRAPHY_VALUE1 ,
                      SHIP_TO_GEOGRAPHY_TYPE2 ,
                      SHIP_TO_GEOGRAPHY_VALUE2 ,
                      SHIP_TO_GEOGRAPHY_TYPE3 ,
                      SHIP_TO_GEOGRAPHY_VALUE3 ,
                      SHIP_TO_GEOGRAPHY_TYPE4 ,
                      SHIP_TO_GEOGRAPHY_VALUE4 ,
                      SHIP_TO_GEOGRAPHY_TYPE5 ,
                      SHIP_TO_GEOGRAPHY_VALUE5 ,
                      SHIP_TO_GEOGRAPHY_TYPE6 ,
                      SHIP_TO_GEOGRAPHY_VALUE6 ,
                      SHIP_TO_GEOGRAPHY_TYPE7 ,
                      SHIP_TO_GEOGRAPHY_VALUE7 ,
                      SHIP_TO_GEOGRAPHY_TYPE8 ,
                      SHIP_TO_GEOGRAPHY_VALUE8 ,
                      SHIP_TO_GEOGRAPHY_TYPE9 ,
                      SHIP_TO_GEOGRAPHY_VALUE9 ,
                      SHIP_TO_GEOGRAPHY_TYPE10 ,
                      SHIP_TO_GEOGRAPHY_VALUE10 ,
                      SHIP_FROM_GEOGRAPHY_TYPE1 ,
                      SHIP_FROM_GEOGRAPHY_VALUE1 ,
                      SHIP_FROM_GEOGRAPHY_TYPE2 ,
                      SHIP_FROM_GEOGRAPHY_VALUE2 ,
                      SHIP_FROM_GEOGRAPHY_TYPE3 ,
                      SHIP_FROM_GEOGRAPHY_VALUE3 ,
                      SHIP_FROM_GEOGRAPHY_TYPE4 ,
                      SHIP_FROM_GEOGRAPHY_VALUE4 ,
                      SHIP_FROM_GEOGRAPHY_TYPE5 ,
                      SHIP_FROM_GEOGRAPHY_VALUE5 ,
                      SHIP_FROM_GEOGRAPHY_TYPE6 ,
                      SHIP_FROM_GEOGRAPHY_VALUE6 ,
                      SHIP_FROM_GEOGRAPHY_TYPE7 ,
                      SHIP_FROM_GEOGRAPHY_VALUE7 ,
                      SHIP_FROM_GEOGRAPHY_TYPE8 ,
                      SHIP_FROM_GEOGRAPHY_VALUE8 ,
                      SHIP_FROM_GEOGRAPHY_TYPE9 ,
                      SHIP_FROM_GEOGRAPHY_VALUE9 ,
                      SHIP_FROM_GEOGRAPHY_TYPE10 ,
                      SHIP_FROM_GEOGRAPHY_VALUE10 ,
                      POA_GEOGRAPHY_TYPE1 ,
                      POA_GEOGRAPHY_VALUE1 ,
                      POA_GEOGRAPHY_TYPE2 ,
                      POA_GEOGRAPHY_VALUE2 ,
                      POA_GEOGRAPHY_TYPE3 ,
                      POA_GEOGRAPHY_VALUE3 ,
                      POA_GEOGRAPHY_TYPE4 ,
                      POA_GEOGRAPHY_VALUE4 ,
                      POA_GEOGRAPHY_TYPE5 ,
                      POA_GEOGRAPHY_VALUE5 ,
                      POA_GEOGRAPHY_TYPE6 ,
                      POA_GEOGRAPHY_VALUE6 ,
                      POA_GEOGRAPHY_TYPE7 ,
                      POA_GEOGRAPHY_VALUE7 ,
                      POA_GEOGRAPHY_TYPE8 ,
                      POA_GEOGRAPHY_VALUE8 ,
                      POA_GEOGRAPHY_TYPE9 ,
                      POA_GEOGRAPHY_VALUE9 ,
                      POA_GEOGRAPHY_TYPE10 ,
                      POA_GEOGRAPHY_VALUE10 ,
                      POO_GEOGRAPHY_TYPE1 ,
                      POO_GEOGRAPHY_VALUE1 ,
                      POO_GEOGRAPHY_TYPE2 ,
                      POO_GEOGRAPHY_VALUE2 ,
                      POO_GEOGRAPHY_TYPE3 ,
                      POO_GEOGRAPHY_VALUE3 ,
                      POO_GEOGRAPHY_TYPE4 ,
                      POO_GEOGRAPHY_VALUE4 ,
                      POO_GEOGRAPHY_TYPE5 ,
                      POO_GEOGRAPHY_VALUE5 ,
                      POO_GEOGRAPHY_TYPE6 ,
                      POO_GEOGRAPHY_VALUE6 ,
                      POO_GEOGRAPHY_TYPE7 ,
                      POO_GEOGRAPHY_VALUE7 ,
                      POO_GEOGRAPHY_TYPE8 ,
                      POO_GEOGRAPHY_VALUE8 ,
                      POO_GEOGRAPHY_TYPE9 ,
                      POO_GEOGRAPHY_VALUE9 ,
                      POO_GEOGRAPHY_TYPE10 ,
                      POO_GEOGRAPHY_VALUE10 ,
                      BILL_TO_GEOGRAPHY_TYPE1 ,
                      BILL_TO_GEOGRAPHY_VALUE1 ,
                      BILL_TO_GEOGRAPHY_TYPE2 ,
                      BILL_TO_GEOGRAPHY_VALUE2 ,
                      BILL_TO_GEOGRAPHY_TYPE3 ,
                      BILL_TO_GEOGRAPHY_VALUE3 ,
                      BILL_TO_GEOGRAPHY_TYPE4 ,
                      BILL_TO_GEOGRAPHY_VALUE4 ,
                      BILL_TO_GEOGRAPHY_TYPE5 ,
                      BILL_TO_GEOGRAPHY_VALUE5 ,
                      BILL_TO_GEOGRAPHY_TYPE6 ,
                      BILL_TO_GEOGRAPHY_VALUE6 ,
                      BILL_TO_GEOGRAPHY_TYPE7 ,
                      BILL_TO_GEOGRAPHY_VALUE7 ,
                      BILL_TO_GEOGRAPHY_TYPE8 ,
                      BILL_TO_GEOGRAPHY_VALUE8 ,
                      BILL_TO_GEOGRAPHY_TYPE9 ,
                      BILL_TO_GEOGRAPHY_VALUE9 ,
                      BILL_TO_GEOGRAPHY_TYPE10 ,
                      BILL_TO_GEOGRAPHY_VALUE10 ,
                      BILL_FROM_GEOGRAPHY_TYPE1 ,
                      BILL_FROM_GEOGRAPHY_VALUE1 ,
                      BILL_FROM_GEOGRAPHY_TYPE2 ,
                      BILL_FROM_GEOGRAPHY_VALUE2 ,
                      BILL_FROM_GEOGRAPHY_TYPE3 ,
                      BILL_FROM_GEOGRAPHY_VALUE3 ,
                      BILL_FROM_GEOGRAPHY_TYPE4 ,
                      BILL_FROM_GEOGRAPHY_VALUE4 ,
                      BILL_FROM_GEOGRAPHY_TYPE5 ,
                      BILL_FROM_GEOGRAPHY_VALUE5 ,
                      BILL_FROM_GEOGRAPHY_TYPE6 ,
                      BILL_FROM_GEOGRAPHY_VALUE6 ,
                      BILL_FROM_GEOGRAPHY_TYPE7 ,
                      BILL_FROM_GEOGRAPHY_VALUE7 ,
                      BILL_FROM_GEOGRAPHY_TYPE8 ,
                      BILL_FROM_GEOGRAPHY_VALUE8 ,
                      BILL_FROM_GEOGRAPHY_TYPE9 ,
                      BILL_FROM_GEOGRAPHY_VALUE9 ,
                      BILL_FROM_GEOGRAPHY_TYPE10 ,
                      BILL_FROM_GEOGRAPHY_VALUE10,
                      SHIP_TO_PARTY_NAME,
                      SHIP_TO_PARTY_NUMBER,
                      SHIP_FROM_PARTY_NAME,
                      SHIP_FROM_PARTY_NUMBER,
                      BILL_TO_PARTY_NAME,
                      BILL_TO_PARTY_NUMBER,
                      BILL_FROM_PARTY_NAME,
                      BILL_FROM_PARTY_NUMBER
                      )
                      VALUES
                      (l_ptnr_loc_tbl.EVENT_CLASS_MAPPING_ID(i),
                       l_ptnr_loc_tbl.TRX_ID(i),
                       l_ptnr_loc_tbl.TRX_LINE_ID(i),
                       l_ptnr_loc_tbl.TRX_LEVEL_TYPE(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE1(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE1(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE2(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE2(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE3(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE3(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE4(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE4(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE5(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE5(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE6(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE6(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE7(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE7(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE8(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE8(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE9(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE9(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_TYPE10(i),
                       l_ptnr_loc_tbl.SHIP_TO_GEOGRAPHY_VALUE10(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE1(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE1(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE2(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE2(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE3(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE3(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE4(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE4(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE5(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE5(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE6(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE6(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE7(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE7(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE8(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE8(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE9(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE9(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_TYPE10(i),
                       l_ptnr_loc_tbl.SHIP_FROM_GEOGRAPHY_VALUE10(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE1(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE1(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE2(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE2(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE3(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE3(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE4(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE4(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE5(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE5(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE6(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE6(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE7(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE7(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE8(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE8(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE9(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE9(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_TYPE10(i),
                       l_ptnr_loc_tbl.POA_GEOGRAPHY_VALUE10(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE1(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE1(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE2(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE2(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE3(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE3(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE4(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE4(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE5(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE5(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE6(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE6(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE7(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE7(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE8(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE8(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE9(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE9(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_TYPE10(i),
                       l_ptnr_loc_tbl.POO_GEOGRAPHY_VALUE10(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE1(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE1(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE2(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE2(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE3(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE3(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE4(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE4(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE5(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE5(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE6(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE6(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE7(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE7(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE8(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE8(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE9(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE9(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_TYPE10(i),
                       l_ptnr_loc_tbl.BILL_TO_GEOGRAPHY_VALUE10(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE1(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE1(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE2(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE2(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE3(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE3(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE4(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE4(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE5(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE5(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE6(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE6(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE7(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE7(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE8(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE8(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE9(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE9(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_TYPE10(i),
                       l_ptnr_loc_tbl.BILL_FROM_GEOGRAPHY_VALUE10(i),
                       l_ptnr_loc_tbl.SHIP_TO_PARTY_NAME(i),
                       l_ptnr_loc_tbl.SHIP_TO_PARTY_NUMBER(i),
                       l_ptnr_loc_tbl.SHIP_FROM_PARTY_NAME(i),
                       l_ptnr_loc_tbl.SHIP_FROM_PARTY_NUMBER(i),
                       l_ptnr_loc_tbl.BILL_TO_PARTY_NAME(i),
                       l_ptnr_loc_tbl.BILL_TO_PARTY_NUMBER(i),
                       l_ptnr_loc_tbl.BILL_FROM_PARTY_NAME(i),
                       l_ptnr_loc_tbl.BILL_FROM_PARTY_NUMBER(i)
                       );
    END IF;    -- Bug 5068716
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-');
    END IF;

    EXCEPTION
      WHEN OTHERS THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
        END IF;
  END PARTNER_LOCATION_POPULATION;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  get_regimes_for_del_item_lines
--
--  DESCRIPTION
--  For deleted item lines, applicable regimes are not identified by eBTax
--  Hence, the regime associated to deleted line needs to be derived for
--  the purpose of partner derivation
--
--  CALLED BY
--    calculate_tax
-----------------------------------------------------------------------
PROCEDURE GET_REGIMES_FOR_DEL_ITEM_LINES(
    p_event_class_rec  IN  ZX_API_PUB.event_class_rec_type,
    x_return_status    OUT NOCOPY VARCHAR2
    ) IS
    l_return_status      VARCHAR2(30);
    l_record_exists      VARCHAR2(1);
    l_api_name           CONSTANT VARCHAR2(30):= 'GET_REGIMES_FOR_DEL_ITEM_LINES';

    CURSOR c_regimes_for_del_item_lines(p_event_class_rec ZX_API_PUB.event_class_rec_type) IS
    SELECT lines.event_class_mapping_id,
           lines.trx_id,
           lines.trx_line_id,
           lines.trx_level_type,
           tax.tax_regime_code,
           tax.tax_regime_id,
           tax.tax_provider_id,
           regimes.effective_from,
           regimes.effective_to
      FROM ZX_LINES_DET_FACTORS lines,
           ZX_LINES tax,
           ZX_REGIMES_B regimes
     WHERE lines.application_id = p_event_class_rec.application_id
       AND lines.entity_code = p_event_class_rec.entity_code
       AND lines.event_class_code = p_event_class_rec.event_class_code
       AND lines.trx_id = p_event_class_rec.trx_id
       AND lines.application_id = tax.application_id
       AND lines.entity_code = tax.entity_code
       AND lines.event_class_code = tax.event_class_code
       AND lines.trx_id = tax.trx_id
       AND lines.line_level_action = 'DELETE'
       AND tax.tax_provider_id is not null
       AND regimes.tax_regime_id = tax.tax_regime_id;

    ptnr_del_lines c_regimes_for_del_item_lines%ROWTYPE;

  BEGIN
     IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'(+)');
     END IF;

     x_return_status := FND_API.G_RET_STS_SUCCESS;

/*
    The global variable ZX_TAX_PARTNER_PKG.G_BUSINESS_FLOW is usually populated while determining the service provider.
    But, when only DELETE action is taken on item line, ZX_TAX_PARTNER_PKG.G_BUSINESS_FLOW is not populated
    as program execution does not flow thru regime and provider determination logic.
*/

     ZX_TAX_PARTNER_PKG.G_BUSINESS_FLOW   := p_event_class_rec.prod_family_grp_code;

     FOR ptnr_del_lines IN c_regimes_for_del_item_lines(p_event_class_rec)
     LOOP
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               'ptnr_del_lines.event_class_mapping_id = ' || ptnr_del_lines.event_class_mapping_id);
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               'ptnr_del_lines.trx_id = ' || ptnr_del_lines.trx_id);
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               'ptnr_del_lines.trx_line_id = ' || ptnr_del_lines.trx_line_id);
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               'ptnr_del_lines.trx_level_type = ' || ptnr_del_lines.trx_level_type);
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               'ptnr_del_lines.tax_regime_id = ' || ptnr_del_lines.tax_regime_id);
        END IF;

        IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(ptnr_del_lines.tax_regime_id) THEN
           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_del_lines.tax_regime_id).tax_regime_id := ptnr_del_lines.tax_regime_id;
           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_del_lines.tax_regime_id).tax_regime_code := ptnr_del_lines.tax_regime_code;
           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_del_lines.tax_regime_id).tax_provider_id := ptnr_del_lines.tax_provider_id;
/* Bug 5557565 */
           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_del_lines.tax_regime_id).effective_from := ptnr_del_lines.effective_from;
           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_del_lines.tax_regime_id).effective_to := ptnr_del_lines.effective_to;
           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_del_lines.tax_regime_id).partner_processing_flag := 'C';
           ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'Y';
        END IF;

       --------------------------------------------------------------------------------------
       -- Need to insert records in table ZX_PTNR_LOCATION_INFO_GT into the global temp table
       --------------------------------------------------------------------------------------
        BEGIN
           SELECT 'Y'
             INTO l_record_exists
             FROM ZX_PTNR_LOCATION_INFO_GT zpli
            WHERE zpli.event_class_mapping_id = ptnr_del_lines.event_class_mapping_id
             AND  zpli.trx_id                 = ptnr_del_lines.trx_id
             AND  zpli.trx_line_id            = ptnr_del_lines.trx_line_id
             AND  zpli.trx_level_type         = ptnr_del_lines.trx_level_type;
        EXCEPTION
           WHEN NO_DATA_FOUND THEN
              INSERT INTO ZX_PTNR_LOCATION_INFO_GT
                       (EVENT_CLASS_MAPPING_ID,
                        TRX_ID,
                        TRX_LINE_ID,
                        TRX_LEVEL_TYPE
                        )
                        VALUES
                        (ptnr_del_lines.event_class_mapping_id,
                         ptnr_del_lines.trx_id,
                         ptnr_del_lines.trx_line_id,
                         ptnr_del_lines.trx_level_type
                        );
           WHEN OTHERS THEN
              l_record_exists := 'E';
        END;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               'l_record_exists = ' || l_record_exists);
        END IF;

     END LOOP;

     IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'(-)');
     END IF;

     EXCEPTION
        WHEN OTHERS THEN
           x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
           IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
           END IF;
  END GET_REGIMES_FOR_DEL_ITEM_LINES;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  partner_inclusive_tax_override
--
--  DESCRIPTION
--  Performs special processing when the inclusive tax is overridden.
--
--  CALLED BY
--    override_tax_lines
-----------------------------------------------------------------------
PROCEDURE partner_inclusive_tax_override(
    p_event_class_rec  IN         ZX_API_PUB.event_class_rec_type,
    x_return_status    OUT NOCOPY VARCHAR2
  )
  IS
    l_api_name           CONSTANT VARCHAR2(30):= 'PARTNER_INCLUSIVE_TAX_OVERRIDE';
    l_return_status      VARCHAR2(30);
    l_tax_provider_id    NUMBER;
    l_context_info_rec   ZX_API_PUB.context_info_rec_type;
    l_incl_override      VARCHAR2(1);

    --Fetch the transaction lines from ZX_LINES_DET_FACTORS for which inclusive tax line, calculated by Oracle E-Business Tax,
    --has been overridden and partner has been involved in the calculation of taxes of at least one regime and the transaction line
    --amount includes the inclusive tax amount.The transaction line containing inclusive taxes can be identified by the flag
    --INCLUSIVE_TAX_OVERRIDE_FLAG = 'Y' in ZX_LINES_DET_FACTORS.

    CURSOR ptnr_incl_lines_csr(p_event_class_rec ZX_API_PUB.event_class_rec_type) IS
    SELECT distinct
           tax.tax_regime_code,
           tax.tax_regime_id,
           tax.tax_provider_id,
           regimes.effective_from,
           regimes.effective_to
      FROM ZX_LINES_DET_FACTORS lines,
           ZX_LINES tax,
           ZX_REGIMES_B regimes
     WHERE lines.application_id = p_event_class_rec.application_id
       AND lines.entity_code = p_event_class_rec.entity_code
       AND lines.event_class_code = p_event_class_rec.event_class_code
       AND lines.trx_id = p_event_class_rec.trx_id
       AND lines.application_id = tax.application_id
       AND lines.entity_code = tax.entity_code
       AND lines.event_class_code = tax.event_class_code
       AND lines.trx_id = tax.trx_id
       AND lines.inclusive_tax_override_flag = 'Y'
       AND tax.tax_provider_id is not null
       AND regimes.tax_regime_id = tax.tax_regime_id;

    ptnr_incl_lines ptnr_incl_lines_csr%ROWTYPE;

  BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;


   /***********************PARTNER CODE START***************************/
   IF p_event_class_rec.record_flag ='Y' AND
      p_event_class_rec.record_for_partners_flag = 'Y' THEN
      l_incl_override := 'N';
      FOR ptnr_incl_lines IN ptnr_incl_lines_csr(p_event_class_rec)
      LOOP
        IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(ptnr_incl_lines.tax_regime_id) THEN
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_incl_lines.tax_regime_id).tax_regime_id := ptnr_incl_lines.tax_regime_id;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_incl_lines.tax_regime_id).tax_regime_code := ptnr_incl_lines.tax_regime_code;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_incl_lines.tax_regime_id).tax_provider_id := ptnr_incl_lines.tax_provider_id;
/* Bug 5557565 */
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_incl_lines.tax_regime_id).effective_from := ptnr_incl_lines.effective_from;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_incl_lines.tax_regime_id).effective_to := ptnr_incl_lines.effective_to;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(ptnr_incl_lines.tax_regime_id).partner_processing_flag := 'C';
        END IF;
        l_incl_override := 'Y';
      END LOOP;

      IF l_incl_override = 'N' THEN
         RETURN;
      END IF;

      FOR l_regime_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.LAST,-99)
      LOOP
        IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(l_regime_index) AND
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id is not null THEN

            IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag = 'C' THEN
       	      --Call pre-processing before sending to partner
              ZX_TPI_SERVICES_PKG.partner_pre_processing(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_id,
                                                         ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
    	                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
    	                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag,
                                                         p_event_class_rec,
                                                         l_return_status
    	                                                );

              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                  FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;
            END IF; --partner processing flag is 'C'

            --Call partner to derive external attributes
            ZX_TPI_SERVICES_PKG.derive_ext_attrs (p_event_class_rec,
                                                  ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                  ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                  'DERIVE_HDR_ATTRS',
                                                  l_return_status
                                                 );
            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
            END IF;

            ZX_TPI_SERVICES_PKG.derive_ext_attrs (p_event_class_rec,
                                                  ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                  ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                  'DERIVE_LINE_ATTRS',
                                                  l_return_status
                                                 );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
            END IF;

            IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag = 'C' THEN
              /*Check if provider called for first time in UPDATE mode for the document*/
              BEGIN
                IF p_event_class_rec.event_type_code = 'UPDATE' THEN
                  SELECT tax_provider_id
                  INTO l_tax_provider_id
                  FROM ZX_TRX_LINE_APP_REGIMES
                  WHERE application_id   = p_event_class_rec.application_id
                    AND entity_code      = p_event_class_rec.entity_code
                    AND event_class_code = p_event_class_rec.event_class_code
                    AND trx_id           = p_event_class_rec.trx_id
                    AND tax_provider_id  = ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id
                    AND rownum =1 ;
                END IF;

              EXCEPTION
                WHEN NO_DATA_FOUND THEN
                  ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag := 'F';
              END;

              --Call Partner for calculate tax
              ZX_TPI_SERVICES_PKG.call_partner_service(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                       ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                       'CALCULATE_TAX',
                                                       p_event_class_rec,
                                                       l_return_status
                                                       );

              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                  FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;

              --Call  post-processing after partner has calculated the tax
              ZX_TPI_SERVICES_PKG.ptnr_post_processing_calc_tax(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                                ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                                p_event_class_rec,
                                                                l_return_status
                                                                );

              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                  FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;
          END IF; --partner processing flag is 'C'
        END IF;   --tax_provider_id is not null
      END LOOP;
    END IF;  --recording

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',
        G_PKG_NAME ||': '||l_api_name||'()-'||
        ', RETURN_STATUS = ' || x_return_status);
    END IF;

 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
END  partner_inclusive_tax_override;
   /***********************PARTNER CODE END***************************/

/* Bug 5013598 */
-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  derive_poo_parameters
--
--  DESCRIPTION
--  Derives poo party id and poo location id if not passed by O2C products
--
--  This code needs to be removed once all O2C products derive
--  poo party id/location id and pass it to eBTax.
--
--  CALLED BY
--    derive_internal_parameters
-----------------------------------------------------------------------
PROCEDURE derive_poo_parameters(
    x_return_status    OUT NOCOPY VARCHAR2,
    p_trx_line_index   IN         BINARY_INTEGER,
    p_event_class_rec  IN         ZX_API_PUB.event_class_rec_type
  )
  IS
    l_api_name         CONSTANT VARCHAR2(30):= 'DERIVE_POO_PARAMETERS';
    l_return_status    VARCHAR2(30);
    l_person_id        NUMBER;
    l_salesrep_id      NUMBER;
    l_source_id        NUMBER;
    l_source_name      VARCHAR2(08);
    l_resource_id      NUMBER;
    l_trx_date         DATE;
    l_poo_index        VARCHAR2(300);
--  l_partytype        VARCHAR2(100);
--  l_context_info_rec ZX_API_PUB.context_info_rec_type;

  BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    IF p_event_class_rec.prod_family_grp_code = 'O2C' AND
       ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index) IS NULL THEN
       IF p_event_class_rec.application_id = 222 THEN
          l_source_name := 'SALESREP';
          BEGIN
             SELECT trx.primary_salesrep_id
               INTO l_source_id
               FROM ra_customer_trx_all trx
              WHERE trx.customer_trx_id = p_event_class_rec.trx_id;
          EXCEPTION
             WHEN OTHERS THEN
                  l_source_id := NULL;
          END;
       ELSIF p_event_class_rec.application_id = 660 THEN
          l_source_name := 'SALESREP';
          BEGIN
             SELECT trx.salesrep_id
               INTO l_source_id
               FROM oe_order_lines_all trx
              WHERE trx.header_id = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_id(p_trx_line_index)
                AND trx.line_id   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_line_id(p_trx_line_index);
          EXCEPTION
             WHEN OTHERS THEN
                  l_source_id := NULL;
          END;
       ELSIF p_event_class_rec.application_id = 697 THEN
          l_source_name := 'RESOURCE';
          BEGIN
             SELECT resource_id
               INTO l_source_id
               FROM aso_quote_headers_all trx
              WHERE trx.quote_header_id = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_id(p_trx_line_index);
          EXCEPTION
             WHEN OTHERS THEN
                    l_source_id := null;
          END;
       END IF;

       IF l_source_id IS NOT NULL THEN
          l_poo_index := l_source_name||'|$|'||l_source_id||'|$|'||l_trx_date;
          IF poo_info_tbl.EXISTS(l_poo_index) THEN
             ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index) :=
                poo_info_tbl(l_poo_index).poo_party_id;
             ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index) :=
                poo_info_tbl(l_poo_index).poo_location_id;
          ELSE
             l_trx_date := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_date(p_trx_line_index);
             IF l_source_name = 'SALESREP' THEN
                BEGIN
                   SELECT per.organization_id
                     INTO ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index)
                     FROM ra_salesreps_all      sales,
                          per_all_assignments_f per
                    WHERE sales.salesrep_id         = l_source_id
                      AND per.person_id             = sales.person_id
                      AND nvl(per.primary_flag,'Y') = 'Y'
                      AND l_trx_date BETWEEN nvl(per.effective_start_date,l_trx_date)
                                         AND nvl(per.effective_end_date,l_trx_date)
                      AND per.assignment_type = 'E';
                EXCEPTION
                   WHEN OTHERS THEN
                          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index) := NULL;
                          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index) := NULL;
                END;
             ELSE
                BEGIN
                   SELECT per.organization_id
                     INTO ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index)
                     FROM jtf_rs_srp_vl sales,
                          per_all_assignments_f per
                    WHERE sales.resource_id         = l_source_id
                      AND per.person_id             = sales.person_id
                      AND nvl(per.primary_flag,'Y') = 'Y'
                      AND l_trx_date BETWEEN nvl(per.effective_start_date,l_trx_date)
                                         AND nvl(per.effective_end_date,l_trx_date);
                EXCEPTION
                   WHEN OTHERS THEN
                        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index) := NULL;
                        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index) := NULL;
                END;
             END IF;
             IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index) IS NOT NULL THEN
                BEGIN
                   SELECT hr.location_id
                     INTO ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index)
                     FROM hr_organization_units hr
                    WHERE hr.organization_id = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index);
                EXCEPTION
                   WHEN OTHERS THEN
                          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index) := NULL;
                END;
             ELSE
                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index) :=
                   ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.internal_organization_id(p_trx_line_index);
                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index) :=
                   ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(p_trx_line_index);
             END IF;
             poo_info_tbl(l_poo_index).poo_party_id :=
                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index);
             poo_info_tbl(l_poo_index).poo_location_id :=
                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index);
          END IF;
       ELSE
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index) :=
             ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.internal_organization_id(p_trx_line_index);
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index) :=
             ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(p_trx_line_index);
       END IF;

    END IF;

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',
        G_PKG_NAME||': '||l_api_name||'()-'||', RETURN_STATUS = ' || x_return_status);
    END IF;

    EXCEPTION
      WHEN OTHERS THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
        END IF;
  END derive_poo_parameters;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  derive_poa_parameters
--
--  DESCRIPTION
--  Derives poa party id and poa location id if not passed by O2C products
--
--  This code needs to be removed once all O2C products derive
--  poa party id/location id and pass it to eBTax.
--
--  CALLED BY
--    derive_internal_parameters
-----------------------------------------------------------------------
PROCEDURE derive_poa_parameters(
    x_return_status    OUT NOCOPY VARCHAR2,
    p_trx_line_index   IN         BINARY_INTEGER,
    p_event_class_rec  IN         ZX_API_PUB.event_class_rec_type
  )
  IS
    l_api_name         CONSTANT VARCHAR2(30):= 'DERIVE_POA_PARAMETERS';
    l_return_status    VARCHAR2(30);
--  l_tax_prof_id      NUMBER;
--  l_partytype        VARCHAR2(100);
--  l_context_info_rec ZX_API_PUB.context_info_rec_type;

  BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    IF p_event_class_rec.prod_family_grp_code = 'O2C' AND
       ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_party_id(p_trx_line_index) IS NULL THEN
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_party_id(p_trx_line_index) :=
             ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.internal_organization_id(p_trx_line_index);
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_location_id(p_trx_line_index) :=
             ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(p_trx_line_index);
    END IF;

    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
        G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
    END IF;

    EXCEPTION
      WHEN OTHERS THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
        END IF;
  END derive_poa_parameters;
/* Bug 5013598 */

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  derive_internal_parameters
--
--  DESCRIPTION
--  Derives ptp ids and other internal eBTax parameters
--
--  CALLED BY
--    calculate_tax
--    import
--    insupd_line_det_factors
-----------------------------------------------------------------------
PROCEDURE derive_internal_parameters(
    x_return_status    OUT NOCOPY VARCHAR2,
    p_trx_line_index   IN         BINARY_INTEGER,
    p_event_class_rec  IN         ZX_API_PUB.event_class_rec_type
  )
  IS
    l_api_name         CONSTANT VARCHAR2(30):= 'DERIVE_INTERNAL_PARAMETERS';
    l_return_status    VARCHAR2(30);
    l_tax_prof_id      NUMBER;
    l_partytype        VARCHAR2(100);
    l_context_info_rec ZX_API_PUB.context_info_rec_type;

  BEGIN
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.first_pty_org_id(p_trx_line_index) := p_event_class_rec.first_pty_org_id;
    ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.tax_event_class_code(p_trx_line_index) := p_event_class_rec.tax_event_class_code;
    ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.tax_event_type_code(p_trx_line_index):= p_event_class_rec.tax_event_type_code;
    ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.doc_event_status(p_trx_line_index):= p_event_class_rec.doc_status_code;

    /* ---------------------------------------------------------------------------------+
     | We need to skip the logic to get ptps if they already exist in trx_line_dist_tbl.|
     | This is the case when import is called after call to validate_and_default routine|
     | which derives and defaults the values back to GT and also in the case when       |
     | calculate tax is called by products uptaking the determining factors UI where the|
     | transaction line information is alredy present in zx_lines_det_factors and       |
     | fetched into trx_line_dist_tbl                                                   |
     +---------------------------------------------------------------------------------*/
    /* Skip if the ship_to_party_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_party_tax_prof_id(p_trx_line_index) is NULL THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_party_id(p_trx_line_index) is NOT NULL THEN
        IF ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_ship_to_party_id(p_trx_line_index) is NULL)
          OR ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_ship_to_party_id(p_trx_line_index) is NOT NULL)
          AND (ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_party_id(p_trx_line_index) <>
              ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_ship_to_party_id(p_trx_line_index)))) THEN
          --Get PTP Id for Ship To Party Id
          l_partytype := ZX_VALID_INIT_PARAMS_PKG.source_rec.ship_to_party_type;
          get_tax_profile_ids(l_return_status,
                              l_partytype,
                              ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_party_id(p_trx_line_index),
                              ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_location_id(p_trx_line_index),
                              NULL,
                              l_tax_prof_id
                              );

          IF l_return_status = FND_API.G_RET_STS_ERROR THEN
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the ship_to_party_tax_profile_id for ship_to_party_id : '||
				                                             to_char(zx_global_structures_pkg.trx_line_dist_tbl.ship_to_party_id(p_trx_line_index)));
             END IF;
             RAISE FND_API.G_EXC_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            RETURN;
          ELSE /* Return Status is SUCCESS */
            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_party_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
          END IF;
        ELSE /* Ship To Party is same as Rounding Ship To Party */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_party_tax_prof_id(p_trx_line_index) := p_event_class_rec.rdng_ship_to_pty_tx_prof_id;
        END IF;
      END IF; /* Completed Condition Check for Ship To Party */
    END IF; /*Condition check to see if Ship to party tax profile id is already populated*/

    /* Skip if the ptp of HQ establishment for LE is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.hq_estb_party_tax_prof_id(p_trx_line_index) is NULL  THEN
      --Get PTP Id for Legal Entity Pty Tax Prof Id
      --Bug 3500941 - return the ptp of HQ establishment for LE
      ZX_TCM_PTP_PKG.get_ptp_hq(ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.legal_entity_id(p_trx_line_index) ,
                                l_tax_prof_id,
                                l_return_status
                                );

      IF l_return_status = FND_API.G_RET_STS_ERROR THEN
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the hq_estb_party_tax_prof_id for legal_entity : '||
		                                                       to_char(zx_global_structures_pkg.trx_line_dist_tbl.legal_entity_id(p_trx_line_index)));
        END IF;
        RAISE FND_API.G_EXC_ERROR;
      ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
        RETURN;
      ELSE /* Return Status is success */
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.hq_estb_party_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
      END IF;
    END IF; /*Condition check to see if ptp for HQ establishment for LE is already populated*/

    /* Skip if the ship_from_party_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_party_tax_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_party_id(p_trx_line_index) is NOT NULL THEN
        IF ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_ship_from_party_id(p_trx_line_index) is NULL)
          OR ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_ship_from_party_id(p_trx_line_index) is NOT NULL)
          AND (ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_party_id(p_trx_line_index)
          <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_ship_from_party_id(p_trx_line_index)))) THEN
          --Get PTP Id for Ship From Party Id
          l_partytype := ZX_VALID_INIT_PARAMS_PKG.source_rec.ship_from_party_type;
          get_tax_profile_ids(l_return_status,
                              l_partytype,
                              ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_party_id(p_trx_line_index) ,
                              ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_location_id(p_trx_line_index) ,
                              NULL,
                              l_tax_prof_id
                              );

          IF l_return_status = FND_API.G_RET_STS_ERROR THEN
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the ship_from_party_tax_prof_id for ship_from_party_id: '||
			                                                   to_char(zx_global_structures_pkg.trx_line_dist_tbl.ship_from_party_id(p_trx_line_index)));
             END IF;
             RAISE FND_API.G_EXC_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            RETURN;
          ELSE /* Return Status is success */
            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_party_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
          END IF;
        ELSE /* Ship from party is same as rounding ship from party */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_party_tax_prof_id(p_trx_line_index) := p_event_class_rec.rdng_ship_from_pty_tx_prof_id;
        END IF;
      END IF; /* Completed condition check for ship from party */
    END IF; /*Condition check to see if ship_from_party_tax_prof_id is already populated*/

    /* Skip if the poa_party_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_party_tax_prof_id(p_trx_line_index) is NULL  THEN
/* Bug 5013598 */
      derive_poa_parameters(l_return_status,
                            p_trx_line_index,
                            p_event_class_rec
                           );
/* Bug 5013598 */
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_party_id(p_trx_line_index) is NOT NULL THEN
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Get PTP Id for POA Party Id: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.poa_party_id(p_trx_line_index)));
        END IF;

    /* -- bug 5077171 don't derive PTP_ID for POO and POA Parties
        l_partytype := ZX_VALID_INIT_PARAMS_PKG.source_rec.poa_party_type;
         get_tax_profile_ids(l_return_status,
                            l_partytype ,
                            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_party_id(p_trx_line_index) ,
                            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_location_id(p_trx_line_index) ,
                            NULL,
                            l_tax_prof_id
                            );

        IF l_return_status = FND_API.G_RET_STS_ERROR THEN
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the poa_party_tax_prof_id for poa_party_id: '||
   	                                                                to_char(zx_global_structures_pkg.trx_line_dist_tbl.poa_party_id(p_trx_line_index)));
          END IF;
          RAISE FND_API.G_EXC_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
          x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
          RETURN;
        ELSE -- Return status is success
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_party_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
        END IF;
     */

      END IF; /* Completed condition check for poa party */
    END IF; /*Condition check to see if poa_party_tax_prof_id is already populated*/

    /* Skip if the poo_party_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_tax_prof_id(p_trx_line_index) is NULL  THEN
/* Bug 5013598 */
      derive_poo_parameters(l_return_status,
                            p_trx_line_index,
                            p_event_class_rec
                           );
/* Bug 5013598 */
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index) is NOT NULL THEN
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Get PTP Id for POO Party Id: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.poo_party_id(p_trx_line_index)));
        END IF;

    /* -- bug 5077171 don't derive PTP_ID for POO and POA Parties
        l_partytype := zx_valid_init_params_pkg.source_rec.poo_party_type;
        get_tax_profile_ids(l_return_status,
                            l_partytype,
                            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_id(p_trx_line_index) ,
                            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_location_id(p_trx_line_index) ,
                            NULL,
                            l_tax_prof_id
                           );

        IF l_return_status = FND_API.G_RET_STS_ERROR THEN
           IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the poo_party_tax_prof_id for poo_party_id: '||
   	                                                                 to_char(zx_global_structures_pkg.trx_line_dist_tbl.poo_party_id(p_trx_line_index)));
           END IF;
           RAISE FND_API.G_EXC_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
          x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
          RETURN;
        ELSE -- Return status is success
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
        END IF;
     */

      END IF; /* Completed condition check for poo party */
    END IF;/*Condition check to see if poo_party_tax_prof_id is already populated*/

    /* Skip if the poo_party_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_party_tax_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_party_id(p_trx_line_index) is NOT NULL THEN
        IF ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_bill_to_party_id(p_trx_line_index) is NULL)
        OR ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_bill_to_party_id(p_trx_line_index) is NOT NULL)
        AND (ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_party_id(p_trx_line_index)
         <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_bill_to_party_id(p_trx_line_index)))) THEN
          --Get PTP Id for Bill To Party Id
          l_partytype := zx_valid_init_params_pkg.source_rec.bill_to_party_type;
          get_tax_profile_ids(l_return_status,
                              l_partytype,
                              zx_global_structures_pkg.trx_line_dist_tbl.bill_to_party_id(p_trx_line_index),
                              zx_global_structures_pkg.trx_line_dist_tbl.bill_to_location_id(p_trx_line_index),
                              NULL,
                              l_tax_prof_id
                             );

          IF l_return_status = FND_API.G_RET_STS_ERROR THEN
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the bill_to_party_tax_prof_id for bill_to_party_id: '||
   	                                                                    to_char(zx_global_structures_pkg.trx_line_dist_tbl.bill_to_party_id(p_trx_line_index)));
             END IF;
             RAISE FND_API.G_EXC_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            RETURN;
          ELSE /* Return status is success */
            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_party_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
          END IF;
        ELSE /* Bill to party is same as rounding bill to party */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_party_tax_prof_id(p_trx_line_index) := p_event_class_rec.rdng_bill_to_pty_tx_prof_id;
        END IF;
      END IF; /* Completed condition check for bill to party */
    END IF;/*Condition check to see if bill_to_party_tax_prof_id is already populated*/

    /* Skip if the bill_from_party_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_party_tax_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_party_id(p_trx_line_index) is NOT NULL THEN
        IF ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_bill_from_party_id(p_trx_line_index) is NULL)
        OR ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_bill_from_party_id(p_trx_line_index) is NOT NULL)
        AND (ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_party_id(p_trx_line_index)
          <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_bill_from_party_id(p_trx_line_index)))) THEN
          --Get PTP Id for Bill From Party Id
          l_partytype := zx_valid_init_params_pkg.source_rec.bill_from_party_type;
          get_tax_profile_ids(l_return_status,
                              l_partytype,
                              zx_global_structures_pkg.trx_line_dist_tbl.bill_from_party_id(p_trx_line_index) ,
                              zx_global_structures_pkg.trx_line_dist_tbl.bill_from_location_id(p_trx_line_index) ,
                              NULL,
                              l_tax_prof_id
                             );

          IF l_return_status = FND_API.G_RET_STS_ERROR THEN
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the bill_from_party_tax_prof_id for bill_from_party_id: '||
   	                                                                    to_char(zx_global_structures_pkg.trx_line_dist_tbl.bill_from_party_id(p_trx_line_index)));
             END IF;
             RAISE FND_API.G_EXC_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            RETURN;
          ELSE /* Return status is success */
            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_party_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
          END IF;
        ELSE /* Bill from party is same as rounding bill from party */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_party_tax_prof_id(p_trx_line_index) := p_event_class_rec.rdng_bill_from_pty_tx_prof_id;
        END IF;
      END IF; /* Completed condition check for bill from party */
    END IF;/*Condition check to see if bill_from_party_tax_prof_id is already populated*/

    /* Skip if the ship_to_site_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_site_tax_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_party_site_id(p_trx_line_index) is NOT NULL THEN
        IF ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_ship_to_party_site_id(p_trx_line_index) is NULL)
        OR ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_ship_to_party_site_id(p_trx_line_index) is NOT NULL)
        AND (ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_party_site_id(p_trx_line_index)
          <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_ship_to_party_site_id(p_trx_line_index)))) THEN
          --Get PTP Id for Ship To Party Site Id
          l_partytype := ZX_VALID_INIT_PARAMS_PKG.source_rec.ship_to_pty_site_type;
          get_tax_profile_ids(l_return_status,
                              l_partytype,
                              NULL,
                              NULL,
                              zx_global_structures_pkg.trx_line_dist_tbl.ship_to_party_site_id(p_trx_line_index) ,
                              l_tax_prof_id
                              );

          IF l_return_status = FND_API.G_RET_STS_ERROR THEN
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the ship_to_site_tax_prof_id for ship_to_party_site_id: '||
   	                                                                    to_char(zx_global_structures_pkg.trx_line_dist_tbl.ship_to_party_site_id(p_trx_line_index)));
             END IF;
             RAISE FND_API.G_EXC_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            RETURN;
          ELSE /* Return status is success */
            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_site_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
          END IF;
        ELSE /* Ship to site is same as rounding ship to site */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_site_tax_prof_id(p_trx_line_index) := p_event_class_rec.rdng_ship_to_pty_tx_p_st_id;
        END IF;
      END IF; /* Completed condition check for ship to party site */
    END IF;/*Condition check to see if ship_to_site_tax_prof_id is already populated*/

    /* Skip if the ship_from_site_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_site_tax_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_party_site_id(p_trx_line_index) is NOT NULL THEN
        IF ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_ship_from_party_site_id(p_trx_line_index) is NULL)
        OR ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_ship_from_party_site_id(p_trx_line_index) is NOT NULL)
        AND (ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_party_site_id(p_trx_line_index)
          <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_ship_from_party_site_id(p_trx_line_index)))) THEN
          --Get PTP Id for Ship From Party Site Id
          l_partytype := zx_valid_init_params_pkg.source_rec.ship_from_pty_site_type;
          get_tax_profile_ids(l_return_status,
                              l_partytype,
                              NULL,
                              NULL,
                              zx_global_structures_pkg.trx_line_dist_tbl.ship_from_party_site_id(p_trx_line_index),
                              l_tax_prof_id
                              );

          IF l_return_status = FND_API.G_RET_STS_ERROR THEN
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the ship_from_site_tax_prof_id for ship_from_party_site_id: '||
   	                                                                  to_char(zx_global_structures_pkg.trx_line_dist_tbl.ship_from_party_site_id(p_trx_line_index)));
            END IF;
            RAISE FND_API.G_EXC_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            RETURN;
          ELSE /* Return status is success */
            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_site_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
          END IF;
        ELSE /* Ship from site is same as rounding ship from site */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_from_site_tax_prof_id(p_trx_line_index) := p_event_class_rec.rdng_ship_from_pty_tx_p_st_id;
        END IF;
      END IF; /* Completed condition check for ship from site*/
    END IF;/*Condition check to see if ship_from_site_tax_prof_id is already populated*/

    /* Skip if the poa_site_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_site_tax_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_party_site_id(p_trx_line_index) is NOT NULL THEN
        --Get PTP Id for POA Party Site Id
        l_partytype := ZX_VALID_INIT_PARAMS_PKG.source_rec.poa_pty_site_type;
        get_tax_profile_ids(l_return_status,
                            l_partytype,
                            NULL,
                            NULL,
                            zx_global_structures_pkg.trx_line_dist_tbl.poa_party_site_id(p_trx_line_index),
                            l_tax_prof_id
                           );

        IF l_return_status = FND_API.G_RET_STS_ERROR THEN
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the poa_site_tax_prof_id for poa_party_site_id: '||
   	                                                                to_char(zx_global_structures_pkg.trx_line_dist_tbl.poa_party_site_id(p_trx_line_index)));
          END IF;
          RAISE FND_API.G_EXC_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
          x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
          RETURN;
        ELSE /* Return status is success */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poa_site_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
        END IF;
      END IF; /* Completed condition check for poa party site */
    END IF;/*Condition check to see if poa_site_tax_prof_id is already populated*/

    /* Skip if the poo_site_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_site_tax_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_party_site_id(p_trx_line_index) is NOT NULL THEN
        --Get PTP Id for POO Party Site Id
        l_partytype := zx_valid_init_params_pkg.source_rec.poo_pty_site_type;
        get_tax_profile_ids(l_return_status,
                            l_partytype,
                            NULL,
                            NULL,
                            zx_global_structures_pkg.trx_line_dist_tbl.poo_party_site_id(p_trx_line_index) ,
                            l_tax_prof_id
                            );

        IF l_return_status = FND_API.G_RET_STS_ERROR THEN
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the poo_site_tax_prof_id for poo_party_site_id: '||
   	                                                                to_char(zx_global_structures_pkg.trx_line_dist_tbl.poo_party_site_id(p_trx_line_index)));
          END IF;
          RAISE FND_API.G_EXC_ERROR;
        ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
          x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
          RETURN;
        ELSE /* Return status is success */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.poo_site_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
        END IF;
      END IF; /* Completed condition check for poo party site */
    END IF;/*Condition check to see if poo_site_tax_prof_id is already populated*/

    /* Skip if the bill_to_site_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_site_tax_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_party_site_id(p_trx_line_index) is NOT NULL THEN
      IF ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_bill_to_party_site_id(p_trx_line_index) is NULL)
      OR ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_bill_to_party_site_id(p_trx_line_index) is NOT NULL)
       AND (ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_party_site_id(p_trx_line_index)
         <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_bill_to_party_site_id(p_trx_line_index)))) THEN
          --Get PTP Id for Bill To Party Site Id
          l_partytype := ZX_VALID_INIT_PARAMS_PKG.source_rec.bill_to_pty_site_type;
          get_tax_profile_ids(l_return_status,
                              l_partytype,
                              NULL,
                              NULL,
                              ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_party_site_id(p_trx_line_index),
                              l_tax_prof_id
                              );

          IF l_return_status = FND_API.G_RET_STS_ERROR THEN
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the bill_to_site_tax_prof_id for bill_to_party_site_id: '||
   	                                                                    to_char(zx_global_structures_pkg.trx_line_dist_tbl.bill_to_party_site_id(p_trx_line_index)));
             END IF;
             RAISE FND_API.G_EXC_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            RETURN;
          ELSE /* Return status is success */
            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_site_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
          END IF;
        ELSE  /* Bill to site is same as rounding bill to site */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_site_tax_prof_id(p_trx_line_index) := p_event_class_rec.rdng_bill_to_pty_tx_p_st_id;
        END IF;
      END IF; /* Completed condition check for bill to site */
    END IF;/*Condition check to see if bill_to_party_site_id is already populated*/

    /* Skip if the bill_from_site_tax_prof_id is already populated*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_site_tax_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_party_site_id(p_trx_line_index) is NOT NULL THEN
        IF ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_bill_from_party_site_id(p_trx_line_index) is NULL)
        OR ((ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_bill_from_party_site_id(p_trx_line_index) is NOT NULL)
        AND (ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_party_site_id(p_trx_line_index)
          <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_bill_from_party_site_id(p_trx_line_index)))) THEN
          --Get PTP Id for Bill From Party Site Id
          l_partytype := ZX_VALID_INIT_PARAMS_PKG.source_rec.bill_from_pty_site_type;
          get_tax_profile_ids(l_return_status,
                              l_partytype,
                              NULL,
                              NULL,
                              ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_party_site_id(p_trx_line_index),
                              l_tax_prof_id
                              );

          IF l_return_status = FND_API.G_RET_STS_ERROR THEN
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the bill_from_site_tax_prof_id for bill_from_party_site_id: '||
   	                                                                    to_char(zx_global_structures_pkg.trx_line_dist_tbl.bill_from_party_site_id(p_trx_line_index)));
             END IF;
             RAISE FND_API.G_EXC_ERROR;
          ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            RETURN;
          ELSE /* Return status is success */
            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_site_tax_prof_id(p_trx_line_index) := l_tax_prof_id;
          END IF;
        ELSE /* Bill from site is same as rounding bill from site */
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_from_site_tax_prof_id(p_trx_line_index) := p_event_class_rec.rdng_bill_from_pty_tx_p_st_id;
        END IF;
      END IF; /* Completed condition check for rounding bill from site */
    END IF;/*Condition check to see if bill_from_site_tax_prof_id is already populated*/

    --Copy rounding party and site PTP values from event class rec to TRX_LINE_DIST_TBL
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_ship_to_pty_tx_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_ship_to_party_id(p_trx_line_index) is NOT NULL THEN
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_ship_to_pty_tx_prof_id(p_trx_line_index) :=
                                                       p_event_class_rec.rdng_ship_to_pty_tx_prof_id;
      END IF; /* Completed condition check for Rounding ship to party site */
    END IF; /* Copy only if rdng_ship_to_pty_tx_prof_id is null*/

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_ship_from_pty_tx_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_ship_from_party_id(p_trx_line_index) is NOT NULL THEN
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_ship_from_pty_tx_prof_id(p_trx_line_index) :=
                                                       p_event_class_rec.rdng_ship_from_pty_tx_prof_id;
      END IF; /* Completed condition check for rounding ship from party site */
    END IF; /* Copy only if rdng_ship_from_pty_tx_prof_id is null*/

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_bill_to_pty_tx_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_bill_to_party_id(p_trx_line_index) is NOT NULL THEN
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_bill_to_pty_tx_prof_id(p_trx_line_index) :=
                                                       p_event_class_rec.rdng_bill_to_pty_tx_prof_id;
      END IF; /* Completed condition check for rounding bill to party */
    END IF; /* Copy only if rdng_bill_to_pty_tx_prof_id is null*/

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_bill_from_pty_tx_prof_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rounding_bill_from_party_id(p_trx_line_index) is NOT NULL THEN
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_bill_from_pty_tx_prof_id(p_trx_line_index) :=
                                                       p_event_class_rec.rdng_bill_from_pty_tx_prof_id;
      END IF; /* Completed condition check for rounding bill from party */
    END IF; /* Copy only if rdng_bill_from_pty_tx_prof_id is null*/

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_ship_to_pty_tx_p_st_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_ship_to_party_site_id(p_trx_line_index) is NOT NULL THEN
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_ship_to_pty_tx_p_st_id(p_trx_line_index) :=
                                                       p_event_class_rec.rdng_ship_to_pty_tx_p_st_id;
      END IF; /* Completed condition check for rounding ship to party site */
    END IF; /* Copy only if rdng_ship_to_pty_tx_p_st_id is null*/

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_ship_from_pty_tx_p_st_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_ship_from_party_site_id(p_trx_line_index) is NOT NULL THEN
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_ship_from_pty_tx_p_st_id(p_trx_line_index) :=
                                                       p_event_class_rec.rdng_ship_from_pty_tx_p_st_id;
      END IF; /* Completed condition check for rounding ship from party site */
    END IF; /* Copy only if rdng_ship_from_pty_tx_p_st_id is null*/

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_bill_to_pty_tx_p_st_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_bill_to_party_site_id(p_trx_line_index) is NOT NULL THEN
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_bill_to_pty_tx_p_st_id(p_trx_line_index) :=
                                                        p_event_class_rec.rdng_bill_to_pty_tx_p_st_id;
      END IF; /* Completed condition check for rounding bill to party site */
    END IF; /* Copy only if rdng_bill_to_pty_tx_p_st_id is null*/

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_bill_from_pty_tx_p_st_id(p_trx_line_index) is NULL  THEN
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rndg_bill_from_party_site_id(p_trx_line_index) is NOT NULL THEN
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.rdng_bill_from_pty_tx_p_st_id(p_trx_line_index) :=
                                                        p_event_class_rec.rdng_bill_from_pty_tx_p_st_id;
      END IF; /* Completed condition check for rounding bill from party site */
    END IF; /* Copy only if rdng_bill_from_pty_tx_p_st_id is null*/

    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_org_id(p_trx_line_index) is NOT NULL
       AND ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_id(p_trx_line_index) is NOT NULL
       AND ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_code(p_trx_line_index) is NULL THEN
         BEGIN
            SELECT  segment1
              INTO  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_code(p_trx_line_index)
              FROM  MTL_SYSTEM_ITEMS
              WHERE inventory_item_id = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_id(p_trx_line_index)
                AND organization_id   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_org_id(p_trx_line_index);
         EXCEPTION WHEN OTHERS THEN
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Error: Unable to get the product code for inventory_item_id: '||
   	                                                                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_id(p_trx_line_index));
             END IF;
             RAISE FND_API.G_EXC_ERROR;
         END;
     END IF;
    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-'||', RETURN_STATUS = ' || x_return_status);
    END IF;

    EXCEPTION
      WHEN FND_API.G_EXC_ERROR THEN
        x_return_status := FND_API.G_RET_STS_ERROR ;
        l_context_info_rec.APPLICATION_ID   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index);
        l_context_info_rec.ENTITY_CODE      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index);
        l_context_info_rec.EVENT_CLASS_CODE := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index);
        l_context_info_rec.TRX_ID           := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_ID(p_trx_line_index);
        l_context_info_rec.TRX_LINE_ID      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LINE_ID(p_trx_line_index);
        l_context_info_rec.TRX_LEVEL_TYPE   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LEVEL_TYPE(p_trx_line_index);
        ZX_API_PUB.add_msg (p_context_info_rec => l_context_info_rec);
      WHEN OTHERS THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
        END IF;
  END derive_internal_parameters;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  calculate_tax_pvt
--
--  DESCRIPTION
--  This is a private calculate tax procedure created to deal with the
--  complexities that arose on creating the gtt and pls version for calculate_tax
--  In the GTT case, we need to loop over the cursor lines and fetch into the
--  trx_line_dist_tbl table. In the PLS case we need to work on the trx_line_dist
--  tbl directly as populated by the products
--
--  CALLED BY
--    calculate_tax
-----------------------------------------------------------------------
PROCEDURE calculate_tax_pvt
  (p_event_class_rec IN OUT NOCOPY  ZX_API_PUB.event_class_rec_type,
   p_trx_line_index  IN             BINARY_INTEGER,
   x_return_status   OUT    NOCOPY  VARCHAR2
  ) IS

  l_api_name                 CONSTANT VARCHAR2(30):= 'CALCULATE_TAX_PVT';
  l_return_status                     VARCHAR2(1);
  l_detail_regime_index               NUMBER;
  l_provider_id                       NUMBER;
  l_prvdr_dtl_reg_index               VARCHAR2(100);
  l_context_info_rec                  ZX_API_PUB.context_info_rec_type;
  l_call_default_APIs                 BOOLEAN;
  i                                   NUMBER;
BEGIN
  IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   --Bugfix 4420279 - Stamp line level action as CREATE in case of quote call
   IF nvl(p_event_class_rec.quote_flag,'N') = 'Y' THEN
     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_level_action(p_trx_line_index) := 'CREATE';
   END IF;

   /* Partner code - Update the zx_trx_line_app_regimes to indicate which transaction lines
      are being updated - this will ease out the setting of partner processing flag later*/
   IF zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y' THEN
      IF p_event_class_rec.TAX_EVENT_TYPE_CODE ='UPDATE' THEN
         --Call zx_line_app_regimes table_handler for deleting the non-applicable regimes
         ZX_TPI_SERVICES_PKG.trx_line_app_regimes_tbl_hdl (p_event_class_rec   => p_event_class_rec,
                                                       p_event             => 'SET_FLAG',
                                                       p_tax_regime_code   => null,
                                                       p_provider_id       => null,
                                                       p_trx_line_id       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_line_id(p_trx_line_index),
                                                       p_trx_level_type    => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_trx_level_type(p_trx_line_index),
                                                       x_return_status     => l_return_status
                                                      );

         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
         END IF;
      END IF; --tax event type is UPDATE
   END IF; --zx_global_structures_pkg.g_ptnr_srvc_subscr_flag


  /* =======================================================================*
   |Bug 3975818 - If adjusted/applied_from/source information passed then    |
   | default from the line determining factors from these reference          |
   | documents else call TDS defaulting API to populate the global structures|
   * =======================================================================*/
     --Call wrapper to default the tax determining attributes
     l_call_default_APIs := decide_call_redefault_APIs (p_trx_line_index  => p_trx_line_index);

      IF l_call_default_APIs THEN
          default_tax_attrs_wrapper (p_trx_line_index  => p_trx_line_index,
                                     p_event_class_rec => p_event_class_rec,
                                     x_return_status   => l_return_status
                                    );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
              ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
          END IF;
   END IF;

  /* ===================================================================*
   |Bug 3687807 - assign line_amt to assessable_value if null           |
   * ==================================================================*/
   IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.assessable_value(p_trx_line_index) is null THEN
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.assessable_value(p_trx_line_index) :=
	  		       ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_amt(p_trx_line_index);
   END IF;

 /* ===============================================================================*
   |Initialize the global structures/global temp tables owned by TDM at line level |
   * =============================================================================*/
   --Call TDS Initialization routine
   ZX_TDS_CALC_SERVICES_PUB_PKG.initialize (p_event_class_rec,
                                            'LINE',
                                            l_return_status
                                            );

   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
         ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;

   IF ZX_API_PUB.G_DATA_TRANSFER_MODE <> 'WIN' THEN --deriving of ptps already done in this case
     --Call Derive_internal_parameters

     derive_internal_parameters(l_return_status,
                                p_trx_line_index,
                                p_event_class_rec
                                );

     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        x_return_status := l_return_status;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
           ' RETURN_STATUS = ' || x_return_status);
        END IF;
        RETURN;
     END IF;
   END IF;

   BEGIN
   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Processing for Transaction Line with APPLICATION_ID: '||to_char(zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index))||
              ', ENTITY_CODE: '||zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index)||
              ', EVENT_CLASS_CODE: '||zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index)|| ', EVENT_TYPE_CODE: '||zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE(p_trx_line_index)||
              ', TRX_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID(p_trx_line_index))||
              ', TRX_LINE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID(p_trx_line_index))||
              ', TRX_LEVEL_TYPE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE(p_trx_line_index))||
              ', INTERNAL_ORGANIZATION_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(p_trx_line_index))||
              ', LINE_LEVEL_ACTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION(p_trx_line_index)||
              ', TRX_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE(p_trx_line_index))||
              ', TRX_DOC_REVISION: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION(p_trx_line_index)||
              ', LEDGER_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID(p_trx_line_index))||
              ', TRX_CURRENCY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE(p_trx_line_index)||
              ', CURRENCY_CONVERSION_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(p_trx_line_index))||
              ', CURRENCY_CONVERSION_RATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(p_trx_line_index))||
              ', CURRENCY_CONVERSION_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(p_trx_line_index)||
              ', MINIMUM_ACCOUNTABLE_UNIT: '|| zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(p_trx_line_index)||
              ', PRECISION: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRECISION(p_trx_line_index)||
              ', TRX_SHIPPING_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE(p_trx_line_index))||
              ', TRX_RECEIPT_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE(p_trx_line_index))||
              ', LEGAL_ENTITY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID(p_trx_line_index))||
              ', ESTABLISHMENT_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID(p_trx_line_index))||
              ', TRX_LINE_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE(p_trx_line_index)||
              ', TRX_LINE_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE(p_trx_line_index))||
              ', TRX_BUSINESS_CATEGORY: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index)||
              ', LINE_INTENDED_USE: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index)||
              ', USER_DEFINED_FISC_CLASS: '|| zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index)||
              ', LINE_AMT: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT(p_trx_line_index))||
              ', TRX_LINE_QUANTITY: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY(p_trx_line_index))||
              ', UNIT_PRICE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE(p_trx_line_index))||
              ', EXEMPT_CERTIFICATE_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER(p_trx_line_index)||
              ', EXEMPT_REASON: '|| zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON(p_trx_line_index)||
              ', CASH_DISCOUNT: '|| zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT(p_trx_line_index)||
              ', VOLUME_DISCOUNT: '|| zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT(p_trx_line_index)||
              ', TRADING_DISCOUNT: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT(p_trx_line_index)||
              ', TRANSFER_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE(p_trx_line_index)||
              ', TRANSPORTATION_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE(p_trx_line_index)||
              ', INSURANCE_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE(p_trx_line_index)||
              ', OTHER_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE(p_trx_line_index)||
              ', PRODUCT_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID(p_trx_line_index))||
              ', PRODUCT_FISC_CLASSIFICATION: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index)||
              ', PRODUCT_ORG_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID(p_trx_line_index))||
              ', UOM_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE(p_trx_line_index)||
              ', PRODUCT_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index)||
              ', PRODUCT_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE(p_trx_line_index)||
              ', PRODUCT_CATEGORY: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index)||
              ', LINE_CLASS: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS(p_trx_line_index)||
              ', TRX_SIC_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE(p_trx_line_index));
   END IF;
   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name, 'FOB_POINT: '|| zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT(p_trx_line_index)||
              ', SHIP_TO_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID(p_trx_line_index))||
              ', SHIP_FROM_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID(p_trx_line_index))||
              ', POA_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID(p_trx_line_index))||
              ', POO_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID(p_trx_line_index))||
              ', BILL_TO_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID(p_trx_line_index))||
              ', BILL_FROM_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID(p_trx_line_index))||
              ', ACCOUNT_CCID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID(p_trx_line_index))||
              ', ACCOUNT_STRING: '|| zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING(p_trx_line_index)||
              ', MERCHANT_PARTY_COUNTRY: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY(p_trx_line_index)||
              ', RECEIVABLES_TRX_TYPE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID(p_trx_line_index))||
              ', REF_DOC_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID(p_trx_line_index))||
              ', REF_DOC_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE(p_trx_line_index)||
              ', REF_DOC_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE(p_trx_line_index)||
              ', REF_DOC_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID(p_trx_line_index))||
              ', REF_DOC_LINE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID(p_trx_line_index))||
              ', REF_DOC_LINE_QUANTITY: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY(p_trx_line_index))||
              ', RELATED_DOC_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID(p_trx_line_index))||
              ', RELATED_DOC_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE(p_trx_line_index)||
              ', RELATED_DOC_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE(p_trx_line_index)||
              ', RELATED_DOC_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID(p_trx_line_index))||
              ', RELATED_DOC_NUMBER: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER(p_trx_line_index))||
              ', RELATED_DOC_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE(p_trx_line_index))||
              ', APPLIED_FROM_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID(p_trx_line_index))||
              ', APPLIED_FROM_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE(p_trx_line_index)||
              ', APPLIED_FROM_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE(p_trx_line_index)||
              ', APPLIED_FROM_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID(p_trx_line_index))||
              ', APPLIED_FROM_LINE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID(p_trx_line_index))||
              ', ADJUSTED_DOC_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID(p_trx_line_index))||
              ', ADJUSTED_DOC_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE(p_trx_line_index)||
              ', ADJUSTED_DOC_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE(p_trx_line_index)||
              ', ADJUSTED_DOC_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID(p_trx_line_index))||
              ', ADJUSTED_DOC_LINE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID(p_trx_line_index))||
              ', ADJUSTED_DOC_NUMBER: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER(p_trx_line_index))||
              ', ADJUSTED_DOC_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE(p_trx_line_index))||
              ', APPLIED_TO_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID(p_trx_line_index))||
              ', APPLIED_TO_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE(p_trx_line_index)||
              ', APPLIED_TO_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE(p_trx_line_index)||
              ', APPLIED_TO_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID(p_trx_line_index))||
              ', APPLIED_TO_TRX_LINE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID(p_trx_line_index))||
              ', TRX_ID_LEVEL2: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2(p_trx_line_index))||
              ', TRX_ID_LEVEL3: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3(p_trx_line_index))||
              ', TRX_ID_LEVEL4: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4(p_trx_line_index))||
              ', TRX_ID_LEVEL5: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5(p_trx_line_index))||
              ', TRX_ID_LEVEL6: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6(p_trx_line_index))||
              ', TRX_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER(p_trx_line_index));
   END IF;
   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'TRX_DESCRIPTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION(p_trx_line_index)||
              ', TRX_LINE_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER(p_trx_line_index)||
              ', TRX_LINE_DESCRIPTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION(p_trx_line_index)||
              ', PRODUCT_DESCRIPTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION(p_trx_line_index)||
              ', TRX_WAYBILL_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER(p_trx_line_index)||
              ', TRX_COMMUNICATED_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE(p_trx_line_index))||
              ', TRX_LINE_GL_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE(p_trx_line_index))||
              ', BATCH_SOURCE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID(p_trx_line_index))||
              ', BATCH_SOURCE_NAME: '|| zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME(p_trx_line_index)||
              ', DOC_SEQ_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID(p_trx_line_index))||
              ', DOC_SEQ_NAME: '|| zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME(p_trx_line_index)||
              ', DOC_SEQ_VALUE: '|| zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE(p_trx_line_index)||
              ', TRX_DUE_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE(p_trx_line_index))||
              ', TRX_TYPE_DESCRIPTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION(p_trx_line_index)||
              ', MERCHANT_PARTY_NAME: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME(p_trx_line_index)||
              ', MERCHANT_PARTY_DOCUMENT_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER(p_trx_line_index)||
              ', MERCHANT_PARTY_REFERENCE: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE(p_trx_line_index)||
              ', MERCHANT_PARTY_TAXPAYER_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID(p_trx_line_index))||
              ', MERCHANT_PARTY_TAX_REG_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER(p_trx_line_index)||
              --', PAYING_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID(p_trx_line_index))||
              --', OWN_HQ_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID(p_trx_line_index))||
              --', TRADING_HQ_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID(p_trx_line_index))||
              --', POC_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID(p_trx_line_index))||
              --', POI_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID(p_trx_line_index))||
              --', POD_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID(p_trx_line_index))||
              --', TITLE_TRANSFER_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID(p_trx_line_index))||
              ', ASSESSABLE_VALUE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index)||
              ', ASSET_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_FLAG(p_trx_line_index)||
              ', ASSET_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER(p_trx_line_index)||
              ', ASSET_ACCUM_DEPRECIATION: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION(p_trx_line_index)||
              ', ASSET_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE(p_trx_line_index)||
              ', ASSET_COST: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST(p_trx_line_index)
              --', NUMERIC1: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1(p_trx_line_index))||
              --', NUMERIC2: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2(p_trx_line_index))||
              --', NUMERIC3: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3(p_trx_line_index))||
              --', NUMERIC4: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4(p_trx_line_index))||
              --', NUMERIC5: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5(p_trx_line_index))||
              --', NUMERIC6: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6(p_trx_line_index))||
              --', NUMERIC7: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7(p_trx_line_index))||
              --', NUMERIC8: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8(p_trx_line_index))||
              --', NUMERIC9: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9(p_trx_line_index))||
              --', NUMERIC10: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10(p_trx_line_index))||
              --', CHAR1: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR1(p_trx_line_index)||
              --', CHAR2: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR2(p_trx_line_index)||
              --', CHAR3: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR3(p_trx_line_index)||
              --', CHAR4: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR4(p_trx_line_index)
              );
   END IF;
   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
              --  'CHAR1: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR1(p_trx_line_index)||
              --', CHAR2: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR2(p_trx_line_index)||
              --', CHAR3: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR3(p_trx_line_index)||
              --', CHAR4: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR4(p_trx_line_index)||
              --', CHAR6: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR6(p_trx_line_index)||
              --', CHAR7: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR7(p_trx_line_index)||
              --', CHAR8: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR8(p_trx_line_index)||
              --', CHAR9: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR9(p_trx_line_index)||
              --', CHAR10: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR10(p_trx_line_index)||
              --', DATE1: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE1(p_trx_line_index))||
              --', DATE2: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE2(p_trx_line_index))||
              --', DATE3: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE3(p_trx_line_index))||
              --', DATE4: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE4(p_trx_line_index))||
              --', DATE5: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE5(p_trx_line_index))||
              --', DATE6: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE6(p_trx_line_index))||
              --', DATE7: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE7(p_trx_line_index))||
              --', DATE8: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE8(p_trx_line_index))||
              --', DATE9: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE9(p_trx_line_index))||
              --', DATE10: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE10(p_trx_line_index))||
              ' FIRST_PTY_ORG_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID(p_trx_line_index))||
              ', TAX_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE(p_trx_line_index)||
              ', TAX_EVENT_TYPE_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE(p_trx_line_index)||
              ', DOC_EVENT_STATUS: '|| zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS(p_trx_line_index)||
              ', RDNG_SHIP_TO_PTY_TX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID(p_trx_line_index))||
              ', RDNG_SHIP_FROM_PTY_TX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID(p_trx_line_index))||
              ', RDNG_BILL_TO_PTY_TX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID(p_trx_line_index))||
              ', RDNG_BILL_FROM_PTY_TX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID(p_trx_line_index))||
              ', RDNG_SHIP_TO_PTY_TX_P_ST_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID(p_trx_line_index))||
              ', RDNG_SHIP_FROM_PTY_TX_P_ST_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID(p_trx_line_index))||
              ', RDNG_BILL_TO_PTY_TX_P_ST_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID(p_trx_line_index))||
              ', RDNG_BILL_FROM_PTY_TX_P_ST_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID(p_trx_line_index))||
              ', SHIP_TO_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', SHIP_FROM_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', POA_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', POO_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', PAYING_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', OWN_HQ_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', TRADING_HQ_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', POI_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', POD_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', BILL_TO_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', BILL_FROM_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', TITLE_TRANS_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID(p_trx_line_index))||
              ', SHIP_TO_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', SHIP_FROM_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', POA_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', POO_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', PAYING_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', OWN_HQ_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', TRADING_HQ_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', POI_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', POD_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', BILL_TO_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', BILL_FROM_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID(p_trx_line_index))||
              ', TITLE_TRANS_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID(p_trx_line_index))||
			  ', MERCHANT_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID(p_trx_line_index)));
   END IF;
   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
              'DOCUMENT_SUB_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index)||
              ', SUPPLIER_TAX_INVOICE_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER(p_trx_line_index)||
              ', SUPPLIER_TAX_INVOICE_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE(p_trx_line_index))||
              ', SUPPLIER_EXCHANGE_RATE: '|| zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE(p_trx_line_index)||
              ', TAX_INVOICE_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE(p_trx_line_index))||
              ', TAX_INVOICE_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER(p_trx_line_index)||
              ', LINE_AMT_INCLUDES_TAX_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG(p_trx_line_index)||
              ', QUOTE_FLAG: '|| p_event_class_rec.QUOTE_FLAG||
              ', DEFAULT_TAXATION_COUNTRY: '|| zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index)||
              ', HISTORICAL_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG(p_trx_line_index)||
              ', INTERNAL_ORG_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(p_trx_line_index))||
              ', CTRL_HDR_TX_APPL_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG(p_trx_line_index)||
              ', CTRL_TOTAL_HDR_TX_AMT: '|| zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT(p_trx_line_index)||
              ', CTRL_TOTAL_LINE_TX_AMT: '|| zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT(p_trx_line_index) ||
              ', DIST_LEVEL_ACTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.DIST_LEVEL_ACTION(p_trx_line_index) ||
              ', ADJUSTED_DOC_TAX_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TAX_DIST_ID(p_trx_line_index)) ||
              ', APPLIED_FROM_TAX_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TAX_DIST_ID(p_trx_line_index)) ||
              ', TASK_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TASK_ID(p_trx_line_index)) ||
              ', AWARD_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.AWARD_ID(p_trx_line_index)) ||
              ', PROJECT_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.PROJECT_ID(p_trx_line_index)) ||
              ', EXPENDITURE_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_TYPE(p_trx_line_index) ||
              ', EXPENDITURE_ORGANIZATION_ID: '||to_char(zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ORGANIZATION_ID(p_trx_line_index)) ||
              ', EXPENDITURE_ITEM_DATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ITEM_DATE(p_trx_line_index)) ||
              ', TRX_LINE_DIST_AMT: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_AMT(p_trx_line_index)) ||
              ', TRX_LINE_DIST_QUANTITY: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_QUANTITY(p_trx_line_index)) ||
              ', REF_DOC_CURR_CONV_RATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_CURR_CONV_RATE(p_trx_line_index)) ||
              ', ITEM_DIST_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.ITEM_DIST_NUMBER(p_trx_line_index) ||
              ', REF_DOC_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_DIST_ID(p_trx_line_index)) ||
              ', TRX_LINE_DIST_TAX_AMT: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_TAX_AMT(p_trx_line_index))||
              ', TRX_LINE_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_ID(p_trx_line_index)) ||
              ', APPLIED_FROM_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_DIST_ID(p_trx_line_index)) ||
              ', ADJUSTED_DOC_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DIST_ID(p_trx_line_index)) ||
              ', OVERRIDING_RECOVERY_RATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.OVERRIDING_RECOVERY_RATE(p_trx_line_index)) ||
              ', INPUT_TAX_CLASSIFICATION_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE(p_trx_line_index) ||
              ', OUTPUT_TAX_CLASSIFICATION_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE(p_trx_line_index) ||
              ', PORT_OF_ENTRY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE(p_trx_line_index) ||
              ', TAX_REPORTING_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG(p_trx_line_index) ||
              ', TAX_AMT_INCLUDED_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG(p_trx_line_index) ||
              ', COMPOUNDING_TAX_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG(p_trx_line_index) ||
              ', SHIP_THIRD_PTY_ACCT_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID(p_trx_line_index)) ||
              ', BILL_THIRD_PTY_ACCT_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID(p_trx_line_index)) ||
              ', SHIP_THIRD_PTY_ACCT_SITE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID(p_trx_line_index)) ||
              ', BILL_THIRD_PTY_ACCT_SITE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID(p_trx_line_index)) ||
              ', SHIP_TO_CUST_ACCT_SITE_USE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID(p_trx_line_index)) ||
              ', BILL_TO_CUST_ACCT_SITE_USE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID(p_trx_line_index)) ||
              ', PROVNL_TAX_DETERMINATION_DATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE(p_trx_line_index)) ||
              ', START_EXPENSE_DATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE(p_trx_line_index)) ||
              ', TRX_BATCH_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID(p_trx_line_index))||
              ', APPLIED_TO_TRX_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER(p_trx_line_index) ||
              ', SOURCE_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID(p_trx_line_index)) ||
              ', SOURCE_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE(p_trx_line_index) ||
              ', SOURCE_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(p_trx_line_index) ||
              ', SOURCE_TRX_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID(p_trx_line_index)) ||
              ', SOURCE_LINE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID(p_trx_line_index)) ||
              ', SOURCE_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE(p_trx_line_index) ||
              ', REF_DOC_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE(p_trx_line_index) ||
              ', APPLIED_TO_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE(p_trx_line_index) ||
              ', APPLIED_FROM_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE(p_trx_line_index) ||
              ', ADJUSTED_DOC_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE(p_trx_line_index) ||
              ', APPLICATION_DOC_STATUS: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS(p_trx_line_index) ||
              ', SOURCE_TAX_LINE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID(p_trx_line_index))||
              ', EXEMPTION_CONTROL_FLAG: '||  zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG(p_trx_line_index) ||
              ', EXEMPT_REASON_CODE: '||  zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE(p_trx_line_index)
              );
   END IF;
   EXCEPTION
     WHEN OTHERS THEN
       null;
   END;

   IF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'LTE' THEN
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.tax_processing_completed_flag(p_trx_line_index) := 'N';
      RETURN;
   END IF;

   /* -----------------------------------------------+
    |    Determine Regime Applicability              |
    + -----------------------------------------------*/

    ZX_TDS_CALC_SERVICES_PUB_PKG.get_tax_regimes(p_trx_line_index
                                                ,p_event_class_rec
                                                ,l_return_status
                                                 );

    IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
      x_return_status := l_return_status;
      IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
         ' RETURN_STATUS = ' || x_return_status);
      END IF;
      RETURN;
    END IF;


    /*******************************PARTNER CODE START****************************/
    --Stamp the provider information on the regimes table returned by the
    --get_tax_regimes procedure and also populate the trx_app_regimes structure*/
    IF zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y' THEN
       ZX_TPI_SERVICES_PKG.popl_pvrdr_info_tax_reg_tbl (p_event_class_rec
                                                    ,p_trx_line_index
                                                    ,l_return_status
                                                     );

       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
          END IF;
       END IF;

       /* -----------------------------------------------+
        |    Call TCM Location Caching API               |
        + -----------------------------------------------*/

       prepare_for_loc_caching(p_trx_line_index
                           ,p_event_class_rec
                           ,l_return_status
                            );

       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
          END IF;
       END IF;
    END IF; --zx_global_structures_pkg.g_ptnr_srvc_subscr_flag

    /* ----------------------------------------------------------------------+
    | Bug 3937387 - Initialize the detail_tax_regime structure since the tax |
    | applicability need not be performed in the event of process_for_       |
    | applicability being 'N'. We needed to populate detail_tax_regime_tbl   |
    | though since TPI processing needs this information                     |
    + ----------------------------------------------------------------------*/

    IF p_event_class_rec.PROCESS_FOR_APPLICABILITY_FLAG = 'N' THEN
       ZX_GLOBAL_STRUCTURES_PKG.Init_Detail_Tax_Regime_Tbl;
    END IF;
    /*******************************PARTNER CODE END ****************************/

    /* -----------------------------------------------+
    |   Call TDS  Calculate Tax                      |
    + -----------------------------------------------*/
    -- Bug 3895727 - Call calculate tax irrespective of process_for_applicability_flag*/
    ZX_TDS_CALC_SERVICES_PUB_PKG.calculate_tax(p_trx_line_index
                                              ,p_event_class_rec
                                              ,l_return_status
                                               );

    IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
          ' RETURN_STATUS = ' || x_return_status);
       END IF;
       RETURN;
    END IF;
    --Set the tax processing completed flag to indicate that line has been processed for tax
    ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.tax_processing_completed_flag(p_trx_line_index) := 'Y';

    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
    END IF;

 EXCEPTION
   WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
END calculate_tax_pvt;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  ptnr_calculate_tax_pvt
--
--  DESCRIPTION
--  Wrapper to call partner integration code for TAB/PLS/WIN mode
--  to calculate_tax
--
--  CALLED BY
--    calculate_tax
-----------------------------------------------------------------------
  PROCEDURE ptnr_calculate_tax_pvt(
   p_event_class_rec IN ZX_API_PUB.event_class_rec_type ,
   x_return_status   OUT NOCOPY VARCHAR2
  )IS

  l_api_name              CONSTANT VARCHAR2(30):= 'PTNR_CALCULATE_TAX_PVT';
  l_deleted_line_exists         VARCHAR2(1);
  l_record_type                 VARCHAR2(30);
  l_partner_migrated_flag       VARCHAR2(1);
  l_regime_exists_other_lines   VARCHAR2(1);
  l_negative_index              NUMBER;
  l_return_status         VARCHAR2(1);

  BEGIN
     IF ( G_LEVEL_STATEMENT >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'(+)');
     END IF;

     x_return_status := FND_API.G_RET_STS_SUCCESS ;
     l_negative_index := -99; --set the negative index to store regimes served by old provider

/*Commented following condition, because for sales order both the flags would be 'N'*/
--   IF p_event_class_rec.record_flag ='Y'
--     AND  p_event_class_rec.record_for_partners_flag = 'Y' THEN

       IF p_event_class_rec.tax_event_type_code = 'UPDATE'
       AND p_event_class_rec.QUOTE_FLAG = 'N' THEN

      /*If document is a migrated one, include all the distinct regimes from ZX_TRX_LINE_APP_REGIMES,
        for which partners were called in ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl and set the
        partner_processing_flag to 'F' (first time called)*/

    /*-------------------------------------------------------------*
     | Determine if the document is originally a migrated one -TPI |
     *------------------------------------------------------------*/
      BEGIN
       SELECT record_type_code,
              partner_migrated_flag
         INTO l_record_type,
              l_partner_migrated_flag
         FROM ZX_LINES_DET_FACTORS
        WHERE application_id   = p_event_class_rec.application_id
          AND entity_code      = p_event_class_rec.entity_code
          AND event_class_code = p_event_class_rec.event_class_code
          AND trx_id           = p_event_class_rec.trx_id
          AND rownum           = 1;
       EXCEPTION WHEN OTHERS THEN --Bug fix 5094078
  	     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
  		FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
  		  ' No row found in zx_lines_det_factors for UPDATE event type' );
  	     END IF;
       END;

        IF l_partner_migrated_flag = 'Y' THEN
          FOR update_trx_line_app_reg IN update_trx_line_app_reg_csr(p_event_class_rec)
          LOOP
            IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(update_trx_line_app_reg.tax_regime_id) THEN
              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).tax_regime_id := update_trx_line_app_reg.tax_regime_id;
              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).tax_regime_code := update_trx_line_app_reg.tax_regime_code;
              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).tax_provider_id := update_trx_line_app_reg.tax_provider_id;
/* Bug 5557565 */
              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).effective_from := update_trx_line_app_reg.effective_from;
              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).effective_to := update_trx_line_app_reg.effective_to;
              ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'Y';

              /*Check other lines have the regime in considerarion in table zx_TRX_LINES_APP_REGIMES*/
              SELECT 'Y'
               INTO l_regime_exists_other_lines
               FROM ZX_TRX_LINE_APP_REGIMES
              WHERE application_id = p_event_class_rec.application_id
                AND entity_code = p_event_class_rec.entity_code
                AND event_class_code = p_event_class_rec.event_class_code
                AND trx_id = p_event_class_rec.trx_id
                AND tax_provider_id is not null
                AND update_flag is null
                AND tax_regime_code = update_trx_line_app_reg.tax_regime_code
                AND rownum =1 ;

              IF l_regime_exists_other_lines = 'Y' THEN
                 IF l_record_type = 'MIGRATED' THEN
                   ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).partner_processing_flag := 'F';
                 ELSE
                   ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).partner_processing_flag := 'C';
                 END IF;
                 ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'Y';

               /*Provider/Regime No Longer Applicable: If a "provider regime" is no longer found applicable to entire
    	         transaction due to an update on a transaction line(s) (The new applicable regimes for the line are in
     	         ZX_GLOBAL_STRUCTURES_PKG.zx_trx_line_app_regimes_tbl whereas old applicable regimes for the line are in
                 ZX_TRX_LINE_APP_REGIMES), look for this provider regime if applicable for non-updated lines. If not
                 applicable for non-updated lines, then include that provider in ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl
                 and set the partner_processing_flag to 'N' (Provider/Regime no longer applicable) in
                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl for that provider. */
               ELSE --regime no longer applicable
                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).partner_processing_flag := 'N';
               END IF;
            ELSE --regime exists in tax_regime_tbl
                IF l_record_type = 'MIGRATED' THEN
                  ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).partner_processing_flag := 'F';
                ELSE
                  /*The change of subscription may also result in a Provider no longer applicable. In this scenario,
                    we need to have 2 records in ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl for new and previous providers respectively.*/
      	          IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).tax_provider_id <> update_trx_line_app_reg.tax_provider_id THEN
                      ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).partner_processing_flag := 'F';
                      /*Since tax_regime_tbl is indexed by tax_regime_id, it is not possible to create 2 records for same regime
                        with different providers in it, hence devised a method of inserting with negative index*/
                      IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(l_negative_index) THEN
                        ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_negative_index).tax_regime_id := l_negative_index;
                        ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_negative_index).tax_regime_code := update_trx_line_app_reg.tax_regime_code;
                        ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_negative_index).tax_provider_id := update_trx_line_app_reg.tax_provider_id;
                        ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_negative_index).partner_processing_flag := 'N';
                        l_negative_index := l_negative_index +1;
                      END IF;
                  ELSE
                     /*For the transaction line being updated, there may be a case where new provider regime becomes applicable
                       and/or the current "provider regime no longer applicable" for the line but is still applicable on other lines.
                       In this case, the previous provider also needs to be called for Calculate Tax. Therefore, include the
                       provider in ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl and set the partner_processing_flag to 'C'.This provider has
                       already been picked up by the Provider Synchronization.*/
                       ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(update_trx_line_app_reg.tax_regime_id).partner_processing_flag := 'C';
                   END IF;
                 END IF; --l_record_type
                 ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'Y';
             END IF;--l_regime_exists
            END LOOP; --loop on trx_line_app_regimes

            FOR non_update_trx_line_app_reg IN non_update_trx_line_reg_csr(p_event_class_rec)
            LOOP
	      /*Check if regime exists in tax_regimes_tbl */
               IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(non_update_trx_line_app_reg.tax_regime_id) THEN
                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(non_update_trx_line_app_reg.tax_regime_id).partner_processing_flag := 'S';
                 ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'Y';
               END IF;
            END LOOP;

          ELSE --partner_migrated_flag
             null;
          END IF;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' Checking Deleted Item Lines ');
          END IF;
          BEGIN
             SELECT 'Y'
               INTO l_deleted_line_exists
               FROM ZX_LINES_DET_FACTORS
              WHERE application_id = p_event_class_rec.application_id
                AND entity_code = p_event_class_rec.entity_code
                AND event_class_code = p_event_class_rec.event_class_code
                AND trx_id = p_event_class_rec.trx_id
                AND line_level_action = 'DELETE'
                AND rownum = 1;
          EXCEPTION
             WHEN OTHERS THEN
                l_deleted_line_exists := 'N';
          END;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                    ' line_level_action DELETE = ' || l_deleted_line_exists);
          END IF;

      END IF; -- Tax event type is UPDATE

      partner_location_population (p_event_class_rec => p_event_class_rec,
                                   x_return_status => l_return_status);

      IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
         x_return_status := l_return_status;
         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
         END IF;
         RETURN;
      END IF;

      IF nvl(l_deleted_line_exists,'N') = 'Y' THEN

         get_regimes_for_del_item_lines (p_event_class_rec => p_event_class_rec,
                                             x_return_status => l_return_status);
         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                      ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
         END IF;
      END IF;

      FOR l_regime_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.LAST,-99)
      LOOP

        IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(l_regime_index) AND
           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id is not null THEN

           IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag is not null AND
             (ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag = 'S' OR
              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag = 'C' OR
              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag = 'F') THEN
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Call pre-processing before sending to partner');
              END IF;

              ZX_TPI_SERVICES_PKG.partner_pre_processing(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_id,
                                                         ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
    	                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
    	                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag,
                                                         p_event_class_rec,
                                                         l_return_status
    	                                                );
              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;
           END IF;   --partner processing flag

      	   ZX_TPI_SERVICES_PKG.derive_ext_attrs (p_event_class_rec,
                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                 'DERIVE_HDR_ATTRS',
                                                 l_return_status
                                                 );

           IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
             x_return_status := l_return_status;
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                ' RETURN_STATUS = ' || x_return_status);
             END IF;
             RETURN;
           END IF;

       	   ZX_TPI_SERVICES_PKG.derive_ext_attrs (p_event_class_rec,
                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                 'DERIVE_LINE_ATTRS',
                                                 l_return_status
                                                );

           IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
             x_return_status := l_return_status;
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                ' RETURN_STATUS = ' || x_return_status);
             END IF;
             RETURN;
           END IF;


           /*Check if partner_processing_flag = 'N', then
           Delete Provider Tax Lines from the ZX_LINES and references to the provider in the ZX_TRX_LINE_APP_REGIMES for that regime.
           If partner recording is allowed for this event class, then
           Call partner's service Modify Doc Status with action DELETE*/

          IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(l_regime_index) AND
             ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag = 'N' THEN
             IF p_event_class_rec.record_for_partners_flag = 'Y' THEN

              ZX_TPI_SERVICES_PKG.call_partner_service(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                       ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                       'DOCUMENT_LEVEL_CHANGES',   -- Bug 5200373
                                                       p_event_class_rec,
                                                       l_return_status
    	                                               );

              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;
            END IF; --record_for_partners_flag

            /*Delete Provider Tax Lines from the ZX_LINES*/
            --Call zx_lines_table_handler for deleting the non-applicable regimes

            zx_lines_table_handler (p_event_class_rec   => p_event_class_rec,
                                    p_event             => 'DELETE',
                                    p_tax_regime_code   => ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                    p_provider_id       => ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                    x_return_status     => l_return_status
    	                           );

              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;

            /*Delete Provider Tax Lines from the ZX_TRX_LINE_APP_REGIMES*/
            --Call zx_line_app_regimes table_handler for deleting the non-applicable regimes

            ZX_TPI_SERVICES_PKG.trx_line_app_regimes_tbl_hdl (p_event_class_rec   => p_event_class_rec,
                                                              p_event             => 'DELETE',
                                                              p_tax_regime_code   => ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                              p_provider_id       => ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                              p_trx_line_id       => null,
                                                              p_trx_level_type    => null,
                                                              x_return_status     => l_return_status
    	                                                     );

             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;
          END IF; --partner_processing_flag ='N'


          IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag is not null AND
	        (ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag = 'S' OR
    	     ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag = 'C' OR
    	     ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag = 'F') THEN
             --Call Partner for calculate tax

             ZX_TPI_SERVICES_PKG.call_partner_service(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
    	                                              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
    	                                              'CALCULATE_TAX',
                                                      p_event_class_rec,
                                                      l_return_status
    	                                             );

             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RETURN;
             END IF;

             --Call for post-processing after partner has calculated the tax

             ZX_TPI_SERVICES_PKG.ptnr_post_processing_calc_tax(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
    	                                                       ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                               p_event_class_rec,
                                                               l_return_status
       	                                                      );

             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RETURN;
             END IF;

           END IF; -- partner processing is not null

          END IF; -- tax_provider_id is not null

      END LOOP;

   --END IF;/*Commented condition, because for sales order both the flags would be 'N'*/
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'(-)');
    END IF;

EXCEPTION
   WHEN OTHERS THEN
--        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
      IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
      END IF;
END ptnr_calculate_tax_pvt;

/* =============================================================*
 | PROCEDURE  	Wrapper on ptnr_calculate_tax_pvt for bulk      |
 |            	processing                                      |
 * ============================================================*/

 PROCEDURE ptnr_bulk_calc_tax_pvt (x_return_status      OUT NOCOPY VARCHAR2
 )IS
   l_return_status         VARCHAR2(1);
   l_event_class_rec       zx_api_pub.event_class_rec_type;
   l_api_name              CONSTANT VARCHAR2(30) := 'PTNR_BULK_CALC_TAX_PVT';
 BEGIN
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'(+)');
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    FOR l_trx_id_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl.LAST,-99)
       LOOP

	 -- Bug 5524869. Added the logic to rollback only failed transaction.
	 BEGIN

          -- 5711466
          ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag :=  ZX_GLOBAL_STRUCTURES_PKG.ptnr_tax_regime_tbl(l_trx_id_index).ptnr_srvc_subscr_flag;

        IF ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag = 'Y' THEN

	  SAVEPOINT Ptnr_Bulk_Calc_Tax_Pvt;

          fetch_ptnr_tax_regime_tbl(p_trx_id_index    => l_trx_id_index,
                                    x_event_class_rec => l_event_class_rec ,
                                    x_return_status   => l_return_status
                                   );
          ptnr_calculate_tax_pvt(p_event_class_rec   => l_event_class_rec ,
                                 x_return_status     => l_return_status
                                );
          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,G_PKG_NAME||': ptnr_calculate_tax_pvt returned errors');
                END IF;
                IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                  delete_from_lines_det_gt(p_event_class_rec   => l_event_class_rec ,
                                           x_return_status     => l_return_status);
                  RAISE FND_API.G_EXC_ERROR;
                ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                END IF;
          END IF;

        END IF;  -- 5711466

        EXCEPTION
            WHEN FND_API.G_EXC_ERROR THEN
                 ROLLBACK TO Ptnr_Bulk_Calc_Tax_Pvt;
                 --Commented by ssohal : Call API to dump into zx_errors_gt
                 --populate_errors(l_event_class_rec,l_return_status); --this will retest l_return_status
                 ZX_API_PUB.dump_msg;
                 IF ( G_LEVEL_ERROR >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_ERROR,G_MODULE_NAME||l_api_name,'');
                 END IF;
                 IF ZX_API_PUB.G_DATA_TRANSFER_MODE IN ('WIN', 'PLS') THEN
                   x_return_status := FND_API.G_RET_STS_ERROR ;
                   IF (g_level_unexpected >= g_current_runtime_level ) THEN
                     FND_LOG.STRING(g_level_unexpected, G_MODULE_NAME||l_api_name||
                          '.END',G_PKG_NAME || ': ' || l_api_name||'(-)' || 'raised errors');
                     FND_LOG.STRING(g_level_unexpected, G_MODULE_NAME||l_api_name,
                          'RETURN_STATUS: ' || x_return_status);
                   END IF;
                   EXIT;
                 END IF;
        END; -- End of Bug fix 5524869

       END LOOP;

       IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME || ': ' || l_api_name||'(-)');
       END IF;

EXCEPTION

    WHEN OTHERS THEN
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

      IF (g_level_unexpected >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_unexpected,
                       G_MODULE_NAME||l_api_name,
                       'Error: '|| SUBSTR(SQLERRM, 1, 80)
                       );
      END IF;


 END ptnr_bulk_calc_tax_pvt;

  PROCEDURE delete_from_lines_det_gt (
   p_event_class_rec IN  ZX_API_PUB.event_class_rec_type ,
   x_return_status   OUT    NOCOPY VARCHAR2
 ) IS
  l_api_name              CONSTANT VARCHAR2(30) := 'DELETE_FROM_LINES_DET_GT';
  BEGIN
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'(+)');
    END IF;
    x_return_status := FND_API.G_RET_STS_SUCCESS;

    delete from zx_lines_det_factors
    WHERE application_id = p_event_class_rec.application_id
    AND entity_code = p_event_class_rec.entity_code
    AND event_class_code = p_event_class_rec.event_class_code
    AND trx_id = p_event_class_rec.trx_id;

    delete from zx_detail_tax_lines_gt
    WHERE application_id = p_event_class_rec.application_id
    AND entity_code = p_event_class_rec.entity_code
    AND event_class_code = p_event_class_rec.event_class_code
    AND trx_id = p_event_class_rec.trx_id;

    delete from zx_summary_tax_lines_gt
    WHERE application_id = p_event_class_rec.application_id
    AND entity_code = p_event_class_rec.entity_code
    AND event_class_code = p_event_class_rec.event_class_code
    AND trx_id = p_event_class_rec.trx_id;

    delete from zx_rec_nrec_dist_gt
    WHERE application_id = p_event_class_rec.application_id
    AND entity_code = p_event_class_rec.entity_code
    AND event_class_code = p_event_class_rec.event_class_code
    AND trx_id = p_event_class_rec.trx_id;

    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME || ': ' || l_api_name||'(-)');
    END IF;
  EXCEPTION

    WHEN OTHERS THEN
      x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;

      IF (g_level_unexpected >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_unexpected,
                       G_MODULE_NAME||l_api_name,
                       'Error: '|| SUBSTR(SQLERRM, 1, 80)
                       );
      END IF;


  END;


/*-----------------------------------------------------------------------*
 |   PUBLIC  FUNCTIONS/PROCEDURES                                        |
 *-----------------------------------------------------------------------*/

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  calculate_tax
--
--  DESCRIPTION
--  Calculate tax processing
--
--  CALLED BY
--    ZX_API_PUB.calculate_tax
-----------------------------------------------------------------------
 PROCEDURE Calculate_Tax (
   p_event_class_rec IN OUT NOCOPY ZX_API_PUB.event_class_rec_type ,
   x_return_status   OUT    NOCOPY VARCHAR2
 ) IS
  l_api_name                    CONSTANT VARCHAR2(30) := 'CALCULATE_TAX';
  l_trx_line_index              BINARY_INTEGER;
  l_cursor_rows                 NUMBER;
  l_tax_prof_id                 NUMBER;
  l_internal_org_location_id    NUMBER;
  l_lines_passed                NUMBER;
  l_update_index                NUMBER;
  l_return_status               VARCHAR2(30);
  l_context_info_rec            ZX_API_PUB.context_info_rec_type;
  l_error_buffer                VARCHAR2(2000);
  l_count                       NUMBER;
  l_deleted_line_exists         VARCHAR2(1);
  l_flag                        BOOLEAN;
  -- bug fix 5417887 begin
  l_trx_id                      NUMBER := -1;
  l_legal_entity_id             NUMBER := -1;
  l_org_id                      NUMBER := -1;
  l_trx_date                    DATE := TO_DATE('01/01/1951', 'DD/MM/RRRR');
  l_effective_date              DATE;
  l_event_class_rec             ZX_API_PUB.event_class_rec_type;
  -- bug fix 5417887 end
  l_no_of_trx                   NUMBER;

  -- Start : Added for Bug#8765723
  l_delimiter                   zx_fc_types_b.delimiter%TYPE;

  CURSOR c_delimiter IS
    SELECT delimiter
    FROM   zx_fc_types_b
    WHERE  classification_type_code ='TRX_BUSINESS_CATEGORY';
  -- End : Added for Bug#8765723

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   --Initialise local variables
   l_lines_passed   := 1;
   l_update_index   := 0; --store index upto which records need to updated

   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   --Call get_location of TCM to get the location of internal organization
   ZX_TCM_PTP_PKG.get_location_id(p_event_class_rec.internal_organization_id,
                                  l_internal_org_location_id,
                                  l_return_status
                                  );

   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF x_return_status = FND_API.G_RET_STS_ERROR THEN
        l_context_info_rec.APPLICATION_ID   := p_event_class_rec.APPLICATION_ID;
        l_context_info_rec.ENTITY_CODE      := p_event_class_rec.ENTITY_CODE;
        l_context_info_rec.EVENT_CLASS_CODE := p_event_class_rec.EVENT_CLASS_CODE;
        l_context_info_rec.TRX_ID           := p_event_class_rec.TRX_ID;
        ZX_API_PUB.add_msg(p_context_info_rec => l_context_info_rec);
     END IF;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
          ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;

  /*-----------------------------------------------------------------------*
   |  Bug 3417023 - In case of call to calculate_tax with TAX_EVENT_TYPE as |
   |  'UPDATE' and no lines passed in zx_transaction_lines_gt/              |
   |  trx_line_dist_tbl, we need to ignore all processsing                  |
   *-----------------------------------------------------------------------*/
   IF ZX_API_PUB.G_DATA_TRANSFER_MODE ='TAB' THEN
/*     IF p_event_class_rec.TAX_EVENT_TYPE_CODE = 'UPDATE' THEN
       select count(*)
        INTO l_lines_passed
	    FROM ZX_TRANSACTION_LINES_GT
        WHERE ROWNUM <=1  ;
     END IF;
Event Type is not yet populated. So, commenting out*/
     null;
   ELSIF ZX_API_PUB.G_DATA_TRANSFER_MODE ='PLS' THEN
      IF (p_event_class_rec.TAX_EVENT_TYPE_CODE = 'UPDATE') AND
         NOT ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_line_id.EXISTS(1) THEN
         l_lines_passed := 0;
      END IF;
   END IF;
   -- bug fix 5417887 begin
   IF ZX_API_PUB.G_DATA_TRANSFER_MODE <> 'TAB' THEN

    /*-----------------------------------------------------------------------*
     |  Bug 3698114 - In case of LTE, we need to fetch all the transaction    |
     |  into memory while in case of EBTax, they will be fetched in chunks    |
     |  of 1000. The below logic puts the constraint on the LIMIT of cursor   |
     *-----------------------------------------------------------------------*/

    /*------------------------------------------------------------------------*
     | Bug 3955422 - Remove the logic below since for LTE , decision is to    |
     | retreive data from zx_lines_det_factors always                         |
     *-----------------------------------------------------------------------*/
     /*IF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'EBTAX' THEN
        l_cursor_rows := C_LINES_PER_FETCH ;
     ELSIF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'LTE' THEN
        l_cursor_rows := C_MAX_LINES_PER_FETCH ;
     END IF;
     */
     --Bug 9452928
     ZX_TDS_CALC_SERVICES_PUB_PKG.g_process_for_appl_flg := NULL;
     --Bugfix 4322369 - Call rounding API at document level
     --Call TDS get_rounding_level_and_rule
     ZX_TDS_TAX_ROUNDING_PKG.get_rounding_level_and_rule(p_event_class_rec,
                                                         ZX_TDS_CALC_SERVICES_PUB_PKG.g_rounding_level,
                                                         ZX_TDS_CALC_SERVICES_PUB_PKG.g_rounding_rule,
                                                         ZX_TDS_CALC_SERVICES_PUB_PKG.g_rnd_lvl_party_tax_prof_id,
                                                         ZX_TDS_CALC_SERVICES_PUB_PKG.g_rounding_lvl_party_type,
                                                         l_return_status,
                                                         l_error_buffer
                                                         );

     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' RETURN_STATUS = ' || x_return_status);
       END IF;
       RETURN;
     END IF;
     --Bug 9452928
     --Bugfix 4718307 - Call TDS to get the applicability flag for the party
     --ZX_TDS_CALC_SERVICES_PUB_PKG.get_process_for_appl_flg (p_tax_prof_id   => ZX_TDS_CALC_SERVICES_PUB_PKG.g_rnd_lvl_party_tax_prof_id,
     --                                                       x_return_status => l_return_status
     --                                                      );
     --
     --IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     --  x_return_status := l_return_status;
     --  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
     --     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
     --       ' RETURN_STATUS = ' || x_return_status);
     --  END IF;
     --  RETURN;
     --END IF;
   END IF;
   -- bug fix 5417887 end

   IF (ZX_API_PUB.G_DATA_TRANSFER_MODE = 'TAB' AND l_lines_passed = 1) THEN
    /*-----------------------------------------------------------+
     | Get no. of records from ZX_TRX_HEADERS_GT to segregate    |
     | single transaction and multiple transactions processing   |
     | l_no_of_trx = 1  =>  single transaction processing        |
     | l_no_of_trx > 1  =>  multiple transactions processing     |
     +-----------------------------------------------------------*/
     BEGIN
       SELECT count(*) No_of_records
         INTO l_no_of_trx
         FROM zx_trx_headers_gt;
     EXCEPTION
       WHEN OTHERS THEN
         l_no_of_trx := 0;
     END;

     IF l_no_of_trx = 0 THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            'No record found in Headers GT Table.');
       END IF;
       RETURN;
     END IF;

     -- SDSU Bug 6605681, When AP is calling invoice validation in bulk process, it errors out with U1 violation in zx_lines_det_factors.
     -- The invoice validation flow is then changed to processing individual invoices. At this point AP receives cursor already open error. To avoid this, adding this code to close and open the cursor for each call.
     -- This is a temporary fix and tested. We need to identify where exactly they are receiving the cursor error and identify if cursor should be open or close. This fix will now go only in a one-off checkin, includable by AP
     -- Start Bug 6605681
     IF c_lines%ISOPEN THEN CLOSE c_lines;
     OPEN c_lines(p_event_class_rec);
     ELSE
     OPEN c_lines(p_event_class_rec);
     END IF;
     -- End Bug 6605681
     -- OPEN c_lines(p_event_class_rec);
      LOOP
         FETCH c_lines BULK COLLECT INTO
             zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION,
             zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT,
             zx_global_structures_pkg.trx_line_dist_tbl.PRECISION,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_MAU,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_PRECISION,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_TO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_FROM_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_TO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_FROM_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_TO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_FROM_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_TO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_FROM_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE,
             zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY,
             zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE,
             zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON,
             zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT,
             zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE,
             zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE,
             zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID,
             zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_RECEIVABLES_TRX_TYPE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME,
             zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME,
             zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE,
             zx_global_structures_pkg.trx_line_dist_tbl.Asset_Flag,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR1,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR2,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR3,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR4,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR5,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR6,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR7,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR8,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR9,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR10,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE1,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE2,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE3,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE4,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE5,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE6,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE7,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE8,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE9,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE10,
             zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.QUOTE_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY,
             zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.DIST_LEVEL_ACTION,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TAX_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TAX_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TASK_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.AWARD_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PROJECT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ORGANIZATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ITEM_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_QUANTITY,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_CURR_CONV_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.ITEM_DIST_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_TAX_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_DIST_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OVERRIDING_RECOVERY_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_SHIP_THIRD_PTY_ACCT_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_BILL_THIRD_PTY_ACCT_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_SHIP_TO_CST_ACCT_ST_USE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_BILL_TO_CST_ACCT_ST_USE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_SHIP_THIRD_PTY_ACCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_BILL_THIRD_PTY_ACCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE ,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER ,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY1,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY2,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY3,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY4,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY5,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY6,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY1,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY2,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY3,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY4,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY5,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY6,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_APPLN_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_EVNT_CLS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10,
             zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY,
             zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE1,
             zx_global_structures_pkg.trx_line_dist_tbl.TOTAL_INC_TAX_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.INSERT_UPDATE_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_PROCESSING_COMPLETED_FLAG, -- Bug 8931030
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_CALCULATION_DONE_FLAG  -- Bug 8931030
           LIMIT G_LINES_PER_FETCH;

         FOR l_trx_line_index IN 1 .. NVL(zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID.LAST,0)
         LOOP
           -- Bug 5524869. Added the logic to rollback only failed transaction.
           BEGIN
             -- Bug fix 5417887 begin
             IF zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index) <> l_trx_id THEN
               l_flag := TRUE;
               SAVEPOINT Calculate_Tax;

               p_event_class_rec.LEGAL_ENTITY_ID              :=  zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID(l_trx_line_index);
               p_event_class_rec.LEDGER_ID                    :=  zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID(l_trx_line_index);
               p_event_class_rec.EVENT_TYPE_CODE              :=  zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE(l_trx_line_index);
               p_event_class_rec.CTRL_TOTAL_HDR_TX_AMT        :=  zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT(l_trx_line_index);
               p_event_class_rec.TRX_ID                       :=  zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID(l_trx_line_index);
               p_event_class_rec.TRX_DATE                     :=  zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE(l_trx_line_index);
               p_event_class_rec.REL_DOC_DATE                 :=  zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE(l_trx_line_index);
               p_event_class_rec.PROVNL_TAX_DETERMINATION_DATE:=  zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE(l_trx_line_index);
               p_event_class_rec.TRX_CURRENCY_CODE            :=  zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE(l_trx_line_index);
               p_event_class_rec.PRECISION                    :=  zx_global_structures_pkg.trx_line_dist_tbl.PRECISION(l_trx_line_index);
               p_event_class_rec.CURRENCY_CONVERSION_TYPE     :=  zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(l_trx_line_index);
               p_event_class_rec.CURRENCY_CONVERSION_RATE     :=  zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(l_trx_line_index);
               p_event_class_rec.CURRENCY_CONVERSION_DATE     :=  zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(l_trx_line_index);
               p_event_class_rec.ROUNDING_SHIP_TO_PARTY_ID    :=  zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_TO_PARTY_ID(l_trx_line_index);
               p_event_class_rec.ROUNDING_SHIP_FROM_PARTY_ID  :=  zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_FROM_PARTY_ID(l_trx_line_index);
               p_event_class_rec.ROUNDING_BILL_TO_PARTY_ID    :=  zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_TO_PARTY_ID(l_trx_line_index);
               p_event_class_rec.ROUNDING_BILL_FROM_PARTY_ID  :=  zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_FROM_PARTY_ID(l_trx_line_index);
               p_event_class_rec.RNDG_SHIP_TO_PARTY_SITE_ID   :=  zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_TO_PARTY_SITE_ID(l_trx_line_index);
               p_event_class_rec.RNDG_SHIP_FROM_PARTY_SITE_ID :=  zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_FROM_PARTY_SITE_ID(l_trx_line_index);
               p_event_class_rec.RNDG_BILL_TO_PARTY_SITE_ID   :=  zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_TO_PARTY_SITE_ID(l_trx_line_index);
               p_event_class_rec.RNDG_BILL_FROM_PARTY_SITE_ID :=  zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_FROM_PARTY_SITE_ID(l_trx_line_index);
               p_event_class_rec.ESTABLISHMENT_ID             :=  zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID(l_trx_line_index);

               IF zx_global_structures_pkg.trx_line_dist_tbl.trx_currency_code(l_trx_line_index)is not NULL   AND
                  zx_global_structures_pkg.trx_line_dist_tbl.precision(l_trx_line_index) is not NULL THEN
                  p_event_class_rec.header_level_currency_flag := 'Y';
               END IF;

               IF  zx_global_structures_pkg.trx_line_dist_tbl.source_application_id(l_trx_line_index) is NOT NULL
               AND zx_global_structures_pkg.trx_line_dist_tbl.source_entity_code(l_trx_line_index) is NOT NULL
               AND zx_global_structures_pkg.trx_line_dist_tbl.source_event_class_code(l_trx_line_index) is NOT NULL
               THEN
                   pop_src_evnt_cls_info
                     ( p_trx_line_index  => l_trx_line_index,
                       p_event_class_rec => p_event_class_rec,
                       x_return_status 	 => l_return_status);
               END IF;

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    RAISE FND_API.G_EXC_ERROR;
                  ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                  END IF;
               END IF;

               /* ----------------------------------------------------------------------+
                |  Determine effective date                                             |
                + ----------------------------------------------------------------------*/
               zx_valid_init_params_pkg.determine_effective_date(p_event_class_rec,
                                          l_effective_date,
                                          l_return_status
                                         );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    RAISE FND_API.G_EXC_ERROR;
                  ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                  END IF;
               END IF;

               IF l_legal_entity_id <> zx_global_structures_pkg.trx_line_dist_tbl.legal_entity_id(l_trx_line_index)
                       OR l_org_id <> zx_global_structures_pkg.trx_line_dist_tbl.internal_organization_id(l_trx_line_index) THEN
                /* ----------------------------------------------------------------------+
                 | Bug 3129063 -      Setting the Security Context for Subscription      |
                 + ----------------------------------------------------------------------*/
                 zx_valid_init_params_pkg.get_tax_subscriber(p_event_class_rec,
                                    l_effective_date,
                                    l_return_status
                                   );

                 IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                   x_return_status := l_return_status;
                   IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                     RAISE FND_API.G_EXC_ERROR;
                   ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                   END IF;
                 END IF;
               ELSE
                   zx_security.g_effective_date := l_effective_date;
                   zx_security.name_value('EFFECTIVEDATE',to_char(l_effective_date));
               END IF;

               /* ----------------------------------------------------------------------+
                |      Get Tax Event Type                                               |
                + ----------------------------------------------------------------------*/
                zx_valid_init_params_pkg.get_tax_event_type (l_return_status
                                   ,p_event_class_rec.event_class_code
                                   ,p_event_class_rec.application_id
                                   ,p_event_class_rec.entity_code
                                   ,p_event_class_rec.event_type_code
                                   ,p_event_class_rec.tax_event_class_code
                                   ,p_event_class_rec.tax_event_type_code
                                   ,p_event_class_rec.doc_status_code
                                   );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                   RAISE FND_API.G_EXC_ERROR;
                 ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                 END IF;
               END IF;
               --Bug 8736358
               IF p_event_class_rec.tax_event_type_code = 'UPDATE' THEN
                   ZX_TDS_CALC_SERVICES_PUB_PKG.g_ln_action_update_exist_flg := 'Y';
               END IF;
              /*----------------------------------+
               | Reassigning the retrieved values |
               +----------------------------------*/
               zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE(l_trx_line_index) :=
                                                                   p_event_class_rec.tax_event_type_code;
               zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS(l_trx_line_index) :=
                                                                   p_event_class_rec.doc_status_code;

                /* ----------------------------------------------------------------------+
                 |      Populate Event Class Options                                     |
                 + ----------------------------------------------------------------------*/
                 zx_valid_init_params_pkg.populate_event_class_options(l_return_status,
                                              l_effective_date,
                                              p_event_class_rec
                                             );

                 IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                   x_return_status := l_return_status;
                   IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                     RAISE FND_API.G_EXC_ERROR;
                   ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                   END IF;
                 END IF;

               /* ----------------------------------------------------------------------+
                |      Get the locations for parties and their ptp ids                  |
                + ----------------------------------------------------------------------*/
               zx_valid_init_params_pkg.get_loc_id_and_ptp_ids(
                                p_event_class_rec  => p_event_class_rec,
                                p_trx_line_index   => l_trx_line_index,
                                x_return_status    => l_return_status
                              );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                   RAISE FND_API.G_EXC_ERROR;
                 ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                 END IF;
               END IF;

               zx_global_structures_pkg.g_event_class_rec := p_event_class_rec;

               IF p_event_class_rec.tax_event_type_code ='UPDATE' THEN

                 -- set flag to indicate there is at least one trx in the batch for update event
                 -- this flag will be used in TRL bulk process.
                 ZX_GLOBAL_STRUCTURES_PKG.g_update_event_process_flag := 'Y';

                 ZX_TRL_DETAIL_OVERRIDE_PKG.lock_dtl_tax_lines_for_doc(p_application_id      => p_event_class_rec.application_id,
                                                                       p_entity_code         => p_event_class_rec.entity_code,
                                                                       p_event_class_code    => p_event_class_rec.event_class_code,
                                                                       p_trx_id              => p_event_class_rec.trx_id,
                                                                       x_return_status       => l_return_status,
                                                                       x_error_buffer        => l_error_buffer
                                                                       );

                 IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                   x_return_status := l_return_status;
                   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                            ' RETURN_STATUS = ' || x_return_status);
                   END IF;
                   IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                     RAISE FND_API.G_EXC_ERROR;
                   ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                   END IF;
                 END IF;

                 ZX_TRL_SUMMARY_OVERRIDE_PKG.lock_summ_tax_lines_for_doc(p_application_id      => p_event_class_rec.application_id,
                                                                         p_entity_code         => p_event_class_rec.entity_code,
                                                                         p_event_class_code    => p_event_class_rec.event_class_code,
                                                                         p_trx_id              => p_event_class_rec.trx_id,
                                                                         x_return_status       => l_return_status,
                                                                         x_error_buffer        => l_error_buffer
                                                                         );
                 IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                   x_return_status := l_return_status;
                   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                            ' RETURN_STATUS = ' || x_return_status);
                   END IF;
                   IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                     RAISE FND_API.G_EXC_ERROR;
                   ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                   END IF;
                 END IF;

                 ZX_TRL_DISTRIBUTIONS_PKG.lock_rec_nrec_dist_for_doc (p_application_id      => p_event_class_rec.application_id,
                                                                      p_entity_code         => p_event_class_rec.entity_code,
                                                                      p_event_class_code    => p_event_class_rec.event_class_code,
                                                                      p_trx_id              => p_event_class_rec.trx_id,
                                                                      x_return_status       => l_return_status,
                                                                      x_error_buffer        => l_error_buffer
                                                                      );
                 IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                   x_return_status := l_return_status;
                   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                            ' RETURN_STATUS = ' || x_return_status);
                   END IF;
                   IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                     RAISE FND_API.G_EXC_ERROR;
                   ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                     RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                   END IF;
                 END IF;

               END IF; --tax event type ='UPDATE'

               /* ===============================================================================*
               |Initialize the global structures/global temp tables owned by TDM at line level |
               * =============================================================================*/
               ZX_TDS_CALC_SERVICES_PUB_PKG.initialize (p_event_class_rec ,
                                                        'HEADER',
                                                         l_return_status
                                                       );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,G_PKG_NAME||': '||l_api_name||':ZX_TDS_CALC_SERVICES_PUB_PKG.initialize returned errors');
                  END IF;
                  IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    RAISE FND_API.G_EXC_ERROR;
                  ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                  END IF;
               END IF;
               --Bug 9452928
               ZX_TDS_CALC_SERVICES_PUB_PKG.g_process_for_appl_flg := NULL;
               --Bugfix 4322369 - Call rounding API at document level
               --Call TDS get_rounding_level_and_rule
               ZX_TDS_TAX_ROUNDING_PKG.get_rounding_level_and_rule(p_event_class_rec,
                                                                   ZX_TDS_CALC_SERVICES_PUB_PKG.g_rounding_level,
                                                                   ZX_TDS_CALC_SERVICES_PUB_PKG.g_rounding_rule,
                                                                   ZX_TDS_CALC_SERVICES_PUB_PKG.g_rnd_lvl_party_tax_prof_id,
                                                                   ZX_TDS_CALC_SERVICES_PUB_PKG.g_rounding_lvl_party_type,
                                                                   l_return_status,
                                                                   l_error_buffer
                                                                   );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                      ' RETURN_STATUS = ' || x_return_status);
                 END IF;
                 IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                   RAISE FND_API.G_EXC_ERROR;
                 ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                   RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                 END IF;
              END IF;
               --Bug 9452928
               --Bugfix 4718307 - Call TDS to get the applicability flag for the party
               --ZX_TDS_CALC_SERVICES_PUB_PKG.get_process_for_appl_flg (p_tax_prof_id   => ZX_TDS_CALC_SERVICES_PUB_PKG.g_rnd_lvl_party_tax_prof_id,
               --                                                       x_return_status => l_return_status
               --                                                      );

               --IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               --  x_return_status := l_return_status;
               --  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               --     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               --       ' RETURN_STATUS = ' || x_return_status);
               --  END IF;
               --  IF l_return_status = FND_API.G_RET_STS_ERROR THEN
               --    RAISE FND_API.G_EXC_ERROR;
               --  ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
               --    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
               --  END IF;
               --END IF;

             END IF; -- End of Trx Id Change check
             -- Bug fix 5417887 end

             -- Bug 5524869. If there is no error in the header then only process the trx lines
             IF l_flag = TRUE THEN
               /*-------------------------------------------------------+
                |Lock the zx_line_det_factors table to prevent another  |
                |user from updating same line via the forms/UIs while   |
                |calculation is in progress                             |
                +------------------------------------------------------*/
                lock_line_det_facts (l_trx_line_index,
                                  p_event_class_rec,
                                  l_return_status
                                 );

                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
                  END IF;
                  IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    RAISE FND_API.G_EXC_ERROR;
                  ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                  END IF;
                END IF;

                pop_estb_id (l_trx_line_index,
                             p_event_class_rec,
                             l_return_status
                             );

                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
                  END IF;
                  IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    RAISE FND_API.G_EXC_ERROR;
                  ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                  END IF;
                END IF;

                IF zx_global_structures_pkg.trx_line_dist_tbl.INSERT_UPDATE_FLAG(l_trx_line_index) is not null AND
	                 zx_global_structures_pkg.trx_line_dist_tbl.INSERT_UPDATE_FLAG(l_trx_line_index)= 'U' THEN
                   l_update_index := l_trx_line_index;
                END IF;

                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(l_trx_line_index) := l_internal_org_location_id;
                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TOTAL_INC_TAX_AMT(l_trx_line_index) := 0;
                calculate_tax_pvt (p_event_class_rec,
                                   l_trx_line_index,
    	                             l_return_status
                                   );

                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
                  END IF;
                  -- Raise exception depending upon return_status
                  IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    RAISE FND_API.G_EXC_ERROR;
                  ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                  END IF;
                END IF;

             ELSIF l_flag = FALSE THEN
               /*--------------------------------------------------------------+
                | Call procedure to populate all the attributes of plsql table |
                | structure ZX_Global_Structures_Pkg.trx_line_dist_tbl to NULL |
                | except key attributes at a index l_trx_line_index            |
                +--------------------------------------------------------------*/
                Pop_Index_Attrbs_To_Null ( p_index => l_trx_line_index,
                                           x_return_status => l_return_status);

                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
                  END IF;
                  RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                END IF;

             END IF; -- End of Bug fix 5524869

           EXCEPTION
             WHEN FND_API.G_EXC_ERROR THEN
               ROLLBACK TO Calculate_Tax;
               l_flag := FALSE;
               IF ( G_LEVEL_ERROR >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_ERROR,G_MODULE_NAME||l_api_name,'');
               END IF;

               -- Handling single trx and multiple trxs processing
               IF l_no_of_trx IS NULL then
                 SELECT COUNT(*)
                   INTO l_no_of_trx
                   FROM zx_trx_headers_gt;
               END IF;

               IF l_no_of_trx = 0 THEN
                 -- Return
                 IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                                  'No record found in Headers GT Table.');
                 END IF;
                 RETURN;
               ELSIF l_no_of_trx = 1 THEN
                 -- Close cursor and Return
                 IF c_lines%ISOPEN THEN CLOSE c_lines; END IF;
                 RETURN;
               ELSIF l_no_of_trx > 1 THEN
                /*--------------------------------------------------------------+
                 | Call procedure to populate all the attributes of plsql table |
                 | structure ZX_Global_Structures_Pkg.trx_line_dist_tbl to NULL |
                 | except key attributes at a index l_trx_line_index            |
                 +--------------------------------------------------------------*/
                 Pop_Index_Attrbs_To_Null ( p_index => l_trx_line_index,
                                            x_return_status => l_return_status);

                 -- Commented call to dump error message into errors_gt table
                 -- This will be handled in the API ZX_API_PUB.Calculate_Tax
                 -- ZX_API_PUB.Dump_Msg;
               END IF;

           END; -- End of Bug fix 5524869

           -- Bug fix 5417887 begin
           IF zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index) <> l_trx_id THEN
             -- populate the tax_regime_tbl cache structure for partner
             IF zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y'
             THEN
                 populate_ptnr_tax_regime_tbl;
             END IF;
             -- populate the lte_trx_tbl structure for LTE
             IF NVL(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'LTE'
             THEN
                 populate_lte_trx_tbl;
             END IF;
             /*---------------------------------------------------------+
              |  Initialize the tax regime pl/sql strcture for every doc|
              +--------------------------------------------------------*/
              ZX_GLOBAL_STRUCTURES_PKG.init_tax_regime_tbl;

              l_trx_id := zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index);
              l_legal_entity_id := zx_global_structures_pkg.trx_line_dist_tbl.legal_entity_id(l_trx_line_index);
              l_trx_date := zx_global_structures_pkg.trx_line_dist_tbl.trx_date(l_trx_line_index);
              l_org_id := zx_global_structures_pkg.trx_line_dist_tbl.internal_organization_id(l_trx_line_index);
           END IF; -- Trx Id change check.
           -- Bug fix 5417887 end
         END LOOP;

        -- bug fix 54117887 begin
        IF p_event_class_rec.quote_flag ='Y' THEN
          db_insert_line_det_factors (p_trx_line_dist_tbl  =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                      p_event_class_rec    =>  p_event_class_rec,
                                      p_insert_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.FIRST,
                                      x_return_status      =>  l_return_status
                                      );
          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
          END IF;
        ELSIF p_event_class_rec.quote_flag ='N'
          --AND p_event_class_rec.TAX_EVENT_TYPE_CODE = 'UPDATE'
          THEN
           IF l_update_index > 0 THEN
             db_update_line_det_factors (p_trx_line_dist_tbl  =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                         p_event_class_rec    =>  p_event_class_rec,
                                         p_update_index       =>  l_update_index,
                                         x_return_status      =>  l_return_status
                                         );
             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                  ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RETURN;
             END IF;
           END IF; --l_update_index

           db_insert_line_det_factors (p_trx_line_dist_tbl  =>  zx_global_structures_pkg.trx_line_dist_tbl,
                                       p_event_class_rec    =>  p_event_class_rec,
                                       p_insert_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.FIRST,
                                       x_return_status      =>  l_return_status
                                      );
           IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
             x_return_status := l_return_status;
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                  ' RETURN_STATUS = ' || x_return_status);
             END IF;
             RETURN;
           END IF;
        /*ELSIF p_event_class_rec.TAX_EVENT_TYPE_CODE = 'CREATE' THEN
          db_insert_line_det_factors (p_trx_line_dist_tbl  =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                      p_event_class_rec    =>  p_event_class_rec,
                                      p_insert_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.FIRST,
                                      x_return_status      =>  l_return_status
                                      );
          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
          END IF;*/
        END IF;
        -- bug fix 54117887 end
        EXIT WHEN c_lines%NOTFOUND;
        -- bug#6594730
        ZX_GLOBAL_STRUCTURES_PKG.init_detail_tax_regime_tbl;
     END LOOP;
     CLOSE c_lines;

   ELSIF (ZX_API_PUB.G_DATA_TRANSFER_MODE = 'PLS' AND l_lines_passed = 1) THEN
      -- bug fix 5499862
      IF p_event_class_rec.tax_event_type_code ='UPDATE' THEN

        -- set flag to indicate there is at least one trx in the batch fro update event
        -- this flag will be used in TRL bulk process.
        ZX_GLOBAL_STRUCTURES_PKG.g_update_event_process_flag := 'Y';
      END IF;

      FOR l_trx_line_index IN 1 .. nvl(zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID.LAST,0)
        LOOP

        /*-------------------------------------------------------+
         |Lock the zx_line_det_factors table to prevent another   |
         |user from updating same line via the forms/UIs while    |
         |calculation is in progress                              |
         +------------------------------------------------------*/
         lock_line_det_facts (l_trx_line_index,
                              p_event_class_rec,
                              l_return_status
                             );
         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
              ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
         END IF;
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(l_trx_line_index) := l_internal_org_location_id;
         --Copy from header attributes to line if line level attributes are passed null
         IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID(l_trx_line_index) is null THEN
           ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID(l_trx_line_index) :=
                 ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.HDR_SHIP_THIRD_PTY_ACCT_ID(l_trx_line_index);
         END IF;
         IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID(l_trx_line_index) is null THEN
           ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID(l_trx_line_index) :=
                 ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.HDR_BILL_THIRD_PTY_ACCT_ID(l_trx_line_index);
         END IF;
         IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID(l_trx_line_index) is null THEN
           ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID(l_trx_line_index) :=
                 ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.HDR_SHIP_THIRD_PTY_ACCT_ST_ID(l_trx_line_index);
         END IF;
         IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID(l_trx_line_index) is null THEN
           ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID(l_trx_line_index) :=
                 ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.HDR_BILL_THIRD_PTY_ACCT_ST_ID(l_trx_line_index);
         END IF;
         IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID(l_trx_line_index) is null THEN
           ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID(l_trx_line_index) :=
                 ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.HDR_SHIP_TO_CST_ACCT_ST_USE_ID (l_trx_line_index);
         END IF;
         IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID(l_trx_line_index) is null THEN
           ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID(l_trx_line_index) :=
                 ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.HDR_BILL_TO_CST_ACCT_ST_USE_ID(l_trx_line_index);
         END IF;
         IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID(l_trx_line_index) is null THEN
           ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID(l_trx_line_index) :=
                 ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.HDR_RECEIVABLES_TRX_TYPE_ID(l_trx_line_index);
         END IF;

          -- Bug 6062224 - Populate l_update_index in PLS mode
          IF zx_global_structures_pkg.trx_line_dist_tbl.INSERT_UPDATE_FLAG(l_trx_line_index) is not null AND
                zx_global_structures_pkg.trx_line_dist_tbl.INSERT_UPDATE_FLAG(l_trx_line_index)= 'U' THEN
                    l_update_index := l_trx_line_index;
          END IF;

          -- Start : Bug#8765723 - Prefix Tax-Event-Class-Code to Trx-Business-Category for OM
          IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id(l_trx_line_index) = 660 AND
             ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_business_category(l_trx_line_index) IS NOT NULL AND
             p_event_class_rec.tax_event_class_code IS NOT NULL AND
             NVL(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'LTE' THEN

             OPEN c_delimiter;
             FETCH c_delimiter INTO l_delimiter;

             IF c_delimiter%FOUND THEN
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_business_category(l_trx_line_index) :=
                  p_event_class_rec.tax_event_class_code||l_delimiter||ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_business_category(l_trx_line_index);
             END IF;

             CLOSE c_delimiter;

             IF (G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 'Trx Business Category = ' || ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_business_category(l_trx_line_index));
             END IF;
          END IF;
          -- End : Bug#8765723 - Prefix Tax-Event-Class-Code to Trx-Business-Category for OM

         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TOTAL_INC_TAX_AMT(l_trx_line_index) := 0;
         calculate_tax_pvt (p_event_class_rec,
                             l_trx_line_index,
                             l_return_status
    	                    );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
             x_return_status := l_return_status;
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
             END IF;
             RETURN;
          END IF;

        END LOOP;

        IF zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y' THEN
           populate_ptnr_tax_regime_tbl;
        END IF;

   ELSIF ZX_API_PUB.G_DATA_TRANSFER_MODE = 'WIN' AND nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'EBTAX' THEN
      -- bug fix 5499862
      IF p_event_class_rec.tax_event_type_code ='UPDATE' THEN

        -- set flag to indicate there is at least one trx in the batch fro update event
        -- this flag will be used in TRL bulk process.
        ZX_GLOBAL_STRUCTURES_PKG.g_update_event_process_flag := 'Y';
      END IF;

         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              BEGIN
                 SELECT count(*)
                   INTO l_count
                   FROM ZX_LINES_DET_FACTORS
                  WHERE application_id = p_event_class_rec.application_id
             	   AND entity_code = p_event_class_rec.entity_code
             	   AND event_class_code = p_event_class_rec.event_class_code
             	   AND trx_id = p_event_class_rec.trx_id
             	   AND tax_processing_completed_flag = 'N';
              END;
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                  ' p_event_class_rec.application_id = '||p_event_class_rec.application_id
                  || ' p_event_class_rec.entity_code = '||p_event_class_rec.entity_code
                  || ' p_event_class_rec.event_class_code = '||p_event_class_rec.event_class_code
                  || ' p_event_class_rec.trx_id = '||p_event_class_rec.trx_id
                  || ' l_count = ' || l_count);
              IF l_count = 0 THEN
                SELECT count(*)
                  INTO l_count
                  FROM ZX_LINES_DET_FACTORS
                 WHERE application_id = p_event_class_rec.application_id
                   AND entity_code = p_event_class_rec.entity_code
	                 AND event_class_code = p_event_class_rec.event_class_code
	                 AND trx_id = p_event_class_rec.trx_id
                   AND line_level_action = 'DELETE';
                IF l_count <> 0 THEN
                  GET_REGIMES_FOR_DEL_ITEM_LINES (p_event_class_rec,l_return_status);
                  IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                    x_return_status := l_return_status;
                    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                              ' RETURN_STATUS = ' || x_return_status);
                    END IF;
                    RETURN;
                  END IF;
                  l_count := 0;
                END IF;
              END IF;
         END IF;
      IF get_lines_det_factors%ISOPEN THEN CLOSE get_lines_det_factors;
        OPEN get_lines_det_factors(p_event_class_rec);
      ELSE
        OPEN get_lines_det_factors(p_event_class_rec);
      END IF;
        LOOP
         FETCH get_lines_det_factors BULK COLLECT INTO
           zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION,
           zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT,
           zx_global_structures_pkg.trx_line_dist_tbl.PRECISION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_MAU,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_PRECISION,
           zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY ,
           zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE,
           zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON,
           zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID,
           zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR1,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR2,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR3,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR4,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR5,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR6,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR7,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR8,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR9,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR10,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE1,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE2,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE3,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE4,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE5,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE6,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE7,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE8,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE9,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE10,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY1,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY2,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY3,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY4,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY5,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY6,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY1,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY2,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY3,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY4,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY5,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY6,
           zx_global_structures_pkg.trx_line_dist_tbl.DIST_LEVEL_ACTION,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TAX_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TAX_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TASK_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.AWARD_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PROJECT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ORGANIZATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ITEM_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_QUANTITY,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_CURR_CONV_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.ITEM_DIST_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_TAX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_DIST_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DIST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OVERRIDING_RECOVERY_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10,
           zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY,
           zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE1,
           zx_global_structures_pkg.trx_line_dist_tbl.TOTAL_INC_TAX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG
         LIMIT G_LINES_PER_FETCH;

         FOR l_trx_line_index IN 1 .. nvl(zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID.LAST,0)
           LOOP
           --Bug 9203490
           IF zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID(l_trx_line_index) IS NOT NULL
           THEN
              IF p_event_class_rec.prod_family_grp_code = 'O2C'
              THEN
                 zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID(l_trx_line_index) :=
                    zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID(l_trx_line_index);
                 zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID(l_trx_line_index) := NULL;
              ELSE
                 zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID(l_trx_line_index) :=
                    zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID(l_trx_line_index);
                 zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID(l_trx_line_index) := NULL;
              END IF;
           ELSE
              zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID(l_trx_line_index) := NULL;
              zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID(l_trx_line_index) := NULL;
           END IF;

           IF zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID(l_trx_line_index) IS NOT NULL
              AND zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID(l_trx_line_index) IS NULL
           THEN
              SELECT party_id
                INTO zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID(l_trx_line_index)
                FROM zx_party_tax_profile
               WHERE party_tax_profile_id = zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID(l_trx_line_index);
           END IF;

           IF zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID(l_trx_line_index) IS NOT NULL
              AND zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID(l_trx_line_index) IS NULL
           THEN
              SELECT party_id
                INTO zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID(l_trx_line_index)
                FROM zx_party_tax_profile
               WHERE party_tax_profile_id = zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID(l_trx_line_index);
           END IF;

             /*-------------------------------------------------------+
             |Lock the zx_line_det_factors table to prevent another   |
             |user from updating same line via the forms/UIs while    |
             |calculation is in progress                              |
             +------------------------------------------------------*/
             lock_line_det_facts(l_trx_line_index,
                                 p_event_class_rec,
                                 l_return_status
                                );
             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                  ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RETURN;
             END IF;

             ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(l_trx_line_index) := l_internal_org_location_id;
             ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TOTAL_INC_TAX_AMT(l_trx_line_index) := 0;

             calculate_tax_pvt (p_event_class_rec,
                                l_trx_line_index,
                                l_return_status
    	      	               );

             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF get_lines_det_factors%ISOPEN THEN CLOSE get_lines_det_factors; END IF;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                  ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RETURN;
             END IF;

         END LOOP;

       -- Bug 7453587 -- Add this part within the LOOP
       -- for get_lines_det_factors cursor limit
       IF p_event_class_rec.quote_flag ='N' AND ZX_API_PUB.G_DATA_TRANSFER_MODE = 'WIN' THEN
         db_update_line_det_factors (p_trx_line_dist_tbl  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                     p_event_class_rec    => p_event_class_rec,
                                     p_update_index       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.LAST,
                                     x_return_status      =>  l_return_status
                                    );
         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
           x_return_status := l_return_status;
           IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
           END IF;
           RETURN;
         END IF;
       END IF;
       -- End bug 7453587

         EXIT WHEN get_lines_det_factors%NOTFOUND;

     END LOOP;
     CLOSE get_lines_det_factors;

     IF zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y' THEN
        populate_ptnr_tax_regime_tbl;
     END IF;

   END IF;

    /*Merge ruled out by performance due to record of table structure*/
    --Do not perform updates in case of lines called from Determining Factors window since
    --line is already updated in zx_lines_det_factors due to call to update table handler
    -- by products

    --Tax calculation has been successfully performed on this document
    p_event_class_rec.TAX_CALCULATION_DONE_FLAG := 'Y';

    -- bug fix 54117887 begin
    IF ZX_API_PUB.G_DATA_TRANSFER_MODE <> 'TAB' THEN
      IF p_event_class_rec.quote_flag ='Y' and ZX_API_PUB.G_DATA_TRANSFER_MODE <> 'WIN' THEN
           db_insert_line_det_factors (p_trx_line_dist_tbl  =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                       p_event_class_rec    =>  p_event_class_rec,
                                       p_insert_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.FIRST,
                                       x_return_status      =>  l_return_status
                                       );
           IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
             x_return_status := l_return_status;
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                  ' RETURN_STATUS = ' || x_return_status);
             END IF;
             RETURN;
           END IF;
      ELSIF p_event_class_rec.quote_flag ='N'
          --AND p_event_class_rec.TAX_EVENT_TYPE_CODE = 'UPDATE'
          THEN
          IF  ZX_API_PUB.G_DATA_TRANSFER_MODE <> 'WIN' THEN
            IF l_update_index > 0 THEN
              db_update_line_det_factors (p_trx_line_dist_tbl  =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                          p_event_class_rec    =>  p_event_class_rec,
                                          p_update_index       =>  l_update_index,
                                          x_return_status      =>  l_return_status
                                          );
              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                  FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;
            END IF; --l_update_index

            db_insert_line_det_factors (p_trx_line_dist_tbl  =>  zx_global_structures_pkg.trx_line_dist_tbl,
                                        p_event_class_rec    =>  p_event_class_rec,
                                        p_insert_index       =>  l_update_index+1,
                                        x_return_status      =>  l_return_status
                                       );
            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
            END IF;
          ELSIF p_event_class_rec.quote_flag ='N' AND ZX_API_PUB.G_DATA_TRANSFER_MODE = 'WIN' THEN
	    db_update_line_det_factors (p_trx_line_dist_tbl  =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                        p_event_class_rec    =>  p_event_class_rec,
                                        p_update_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.LAST,
                                        x_return_status      =>  l_return_status
                                       );
            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                  FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RETURN;
            END IF;
          END IF;
      /*ELSIF p_event_class_rec.TAX_EVENT_TYPE_CODE = 'CREATE' THEN
          IF ZX_API_PUB.G_DATA_TRANSFER_MODE <> 'WIN' THEN
            db_insert_line_det_factors (p_trx_line_dist_tbl  =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                        p_event_class_rec    =>  p_event_class_rec,
                                        p_insert_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.FIRST,
                                        x_return_status      =>  l_return_status
                                        );
            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
            END IF;
          --Do not perform inserts in case of lines called from Determining Factors window since
          --line is already existing in zx_lines_det_factors
      ELSIF ZX_API_PUB.G_DATA_TRANSFER_MODE = 'WIN' THEN
            db_update_line_det_factors (p_trx_line_dist_tbl  =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                        p_event_class_rec    =>  p_event_class_rec,
                                        p_update_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.LAST,
                                        x_return_status      =>  l_return_status
                                       );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
            END IF;
         END IF;*/
      END IF;
    END IF;
    -- bug fix 54117887 end

    -- Handle the scenario where only one transaction is passed with no transaction
    -- lines - Case of delete only lines for a transaction.

    IF ZX_API_PUB.G_DATA_TRANSFER_MODE = 'TAB' THEN

      IF p_event_class_rec.EVENT_TYPE_CODE IS NULL THEN

        BEGIN
          SELECT event_type_code
          INTO   p_event_class_rec.event_type_code
          FROM ZX_TRX_HEADERS_GT
          WHERE rownum=1;
        EXCEPTION
          WHEN OTHERS THEN
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 'Not able to find event type code - No transaction lines passed');
            END IF;

            RAISE FND_API.G_EXC_UNEXPECTED_ERROR;

        END;
        /* ----------------------------------------------------------------------+
          |      Get Tax Event Type                                               |
          + ----------------------------------------------------------------------*/
          zx_valid_init_params_pkg.get_tax_event_type (l_return_status
                              ,p_event_class_rec.event_class_code
                              ,p_event_class_rec.application_id
                              ,p_event_class_rec.entity_code
                              ,p_event_class_rec.event_type_code
                              ,p_event_class_rec.tax_event_class_code
                              ,p_event_class_rec.tax_event_type_code
                              ,p_event_class_rec.doc_status_code
                              );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            Return;
          END IF;

      END IF;

    END IF;

    -- nipatel
    IF p_event_class_rec.tax_event_type_code ='UPDATE' THEN

      -- set flag to indicate there is at least one trx in the batch fro update event
      -- this flag will be used in TRL bulk process.
      ZX_GLOBAL_STRUCTURES_PKG.g_update_event_process_flag := 'Y';

      ZX_TRL_DETAIL_OVERRIDE_PKG.lock_dtl_tax_lines_for_doc(p_application_id      => p_event_class_rec.application_id,
                                                            p_entity_code         => p_event_class_rec.entity_code,
                                                            p_event_class_code    => p_event_class_rec.event_class_code,
                                                            p_trx_id              => p_event_class_rec.trx_id,
                                                            x_return_status       => l_return_status,
                                                            x_error_buffer        => l_error_buffer
                                                            );

      IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        x_return_status := l_return_status;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
        END IF;
        RAISE FND_API.G_EXC_ERROR;
      END IF;

      ZX_TRL_SUMMARY_OVERRIDE_PKG.lock_summ_tax_lines_for_doc(p_application_id      => p_event_class_rec.application_id,
                                                              p_entity_code         => p_event_class_rec.entity_code,
                                                              p_event_class_code    => p_event_class_rec.event_class_code,
                                                              p_trx_id              => p_event_class_rec.trx_id,
                                                              x_return_status       => l_return_status,
                                                              x_error_buffer        => l_error_buffer
                                                              );
      IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        x_return_status := l_return_status;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
        END IF;
        RAISE FND_API.G_EXC_ERROR;
      END IF;

      ZX_TRL_DISTRIBUTIONS_PKG.lock_rec_nrec_dist_for_doc (p_application_id      => p_event_class_rec.application_id,
                                                           p_entity_code         => p_event_class_rec.entity_code,
                                                           p_event_class_code    => p_event_class_rec.event_class_code,
                                                           p_trx_id              => p_event_class_rec.trx_id,
                                                           x_return_status       => l_return_status,
                                                           x_error_buffer        => l_error_buffer
                                                           );
      IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        x_return_status := l_return_status;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
        END IF;
        RAISE FND_API.G_EXC_ERROR;
      END IF;

    END IF; --tax event type ='UPDATE'
    -- nipatel

    --Call LTE package if tax method is LTE
    IF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'LTE' THEN

      -- bug#5665057-
      IF ZX_API_PUB.G_DATA_TRANSFER_MODE = 'WIN' THEN
        update zx_lines_det_factors
            set event_id = p_event_class_rec.event_id
          where application_id = p_event_class_rec.application_id
            AND entity_code = p_event_class_rec.entity_code
            AND event_class_code = p_event_class_rec.event_class_code
            AND trx_id = p_event_class_rec.trx_id;
      END IF;

     IF ZX_API_PUB.G_DATA_TRANSFER_MODE <> 'TAB' THEN

        call_lte (p_event_class_rec => p_event_class_rec,
                x_return_status   => l_return_status
               );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          Return;
        END IF;

     ELSE

           IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 'Tax Method is LTE. Calling LTE in a loop ');
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' Looping over ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl. Number of records: '||
                    to_char(nvl(ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl.LAST,0)) );
           END IF;

           FOR l_trx_id_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl.LAST,-99)
           LOOP

            BEGIN -- Begin of Bug fix 5524869

               SAVEPOINT Calculate_Tax_LTE;

               l_event_class_rec.application_id   := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).application_id;
               l_event_class_rec.event_class_code := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).event_class_code;
               l_event_class_rec.entity_code      := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).entity_code;
               l_event_class_rec.trx_id           := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).trx_id;
               l_event_class_rec.event_type_code  := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).event_type_code;
               l_event_class_rec.record_flag      := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).record_flag;
               l_event_class_rec.quote_flag       := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).quote_flag;
               l_event_class_rec.prod_family_grp_code := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).prod_family_grp_code;
               l_event_class_rec.event_class_mapping_id := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).event_class_mapping_id;
               l_event_class_rec.internal_organization_id := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).internal_organization_id;
               l_event_class_rec.record_for_partners_flag := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).record_for_partners_flag;


               /*--------------------------------------------+
               |   Call to zx_security.set_security_context |
               +--------------------------------------------*/
               ZX_SECURITY.set_security_context(ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).legal_entity_id,
                                          ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).internal_organization_id,
                                          ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).effective_date,
                                          l_return_status
                                          );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 RAISE FND_API.G_EXC_ERROR;
               END IF;

               call_lte (p_event_class_rec => l_event_class_rec,
                         x_return_status   => l_return_status
                        );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 IF ( G_LEVEL_ERROR >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_ERROR,G_MODULE_NAME||l_api_name,'Incorrect status returned by Call_lte. Return_Status'||x_return_status);
                 END IF;
                 IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    RAISE FND_API.G_EXC_ERROR;
                 ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                 END IF;
               END IF;

           EXCEPTION
                 WHEN FND_API.G_EXC_ERROR THEN
                   ROLLBACK TO Calculate_Tax_LTE;
                   IF ( G_LEVEL_ERROR >= G_CURRENT_RUNTIME_LEVEL) THEN
                      FND_LOG.STRING(G_LEVEL_ERROR,G_MODULE_NAME||l_api_name,'Deleting Records from Zx_Lines_Det_Factors for Trx_id : '||l_event_class_rec.trx_id );
                   END IF;

                   DELETE FROM zx_lines_det_factors
                   WHERE  application_id   = l_event_class_rec.application_id
                   AND    entity_code      = l_event_class_rec.entity_code
                   AND    event_class_code = l_event_class_rec.event_class_code
                   AND    trx_id           = l_event_class_rec.trx_id;

                   IF ( G_LEVEL_ERROR >= G_CURRENT_RUNTIME_LEVEL) THEN
                     FND_LOG.STRING(G_LEVEL_ERROR,G_MODULE_NAME||l_api_name,'Records Deleted : '||SQL%ROWCOUNT);
                   END IF;

                   -- Commented call to dump error message into errors_gt table
                   -- This will be handled in the API ZX_API_PUB.Calculate_Tax
                   -- ZX_API_PUB.dump_msg;

           END; -- End of Bug fix 5524869

           ZX_GLOBAL_STRUCTURES_PKG.delete_trx_line_dist_tbl;

          END LOOP;

     END IF;

      IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        x_return_status := l_return_status;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
              ' RETURN_STATUS = ' || x_return_status);
        END IF;
        RETURN;
      END IF;
    END IF; --tax_method_code is LTE

    /*******************************PARTNER CODE START ****************************/
    /* ---------------------------------------------------------------------+
     |  Check if partner applicable to call partner related routines        |
     + ---------------------------------------------------------------------*/

    IF zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y' THEN
       -- call only ptnr_bulk_calc_tax_pvt is all cases
       -- bug#7199139
       --IF zx_global_structures_pkg.g_event_class_rec.tax_event_type_code = 'UPDATE' THEN
       --   ptnr_calculate_tax_pvt(p_event_class_rec   => zx_global_structures_pkg.g_event_class_rec,
       --                          x_return_status     => l_return_status
       --                         );
       --ELSE
          ptnr_bulk_calc_tax_pvt(x_return_status   => l_return_status);
       --END IF;
    END IF;

    -- Added following code to check return status after partner call
    IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
        x_return_status := l_return_status;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
              ' RETURN_STATUS = ' || x_return_status);
        END IF;
        RETURN;
    END IF;

    /*******************************PARTNER CODE END ****************************/

      IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
      END IF;

 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF lines%ISOPEN THEN CLOSE lines; END IF;
     IF get_lines_det_factors%ISOPEN THEN CLOSE get_lines_det_factors; END IF;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
 END calculate_tax;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  import
--
--  DESCRIPTION
--  Import document processing
--
--  CALLED BY
--    ZX_API_PUB.import_document_with_tax
-----------------------------------------------------------------------
 PROCEDURE import
 ( p_event_class_rec IN OUT NOCOPY ZX_API_PUB.EVENT_CLASS_REC_TYPE ,
   x_return_status   OUT    NOCOPY VARCHAR2
 ) IS
 l_api_name                    CONSTANT VARCHAR2(30) := 'IMPORT';
 l_trx_line_index              BINARY_INTEGER;
 l_tax_prof_id                 NUMBER;
 l_internal_org_location_id    NUMBER;
 l_cursor_rows                 NUMBER;
 l_return_status               VARCHAR2(30);
 l_error_buffer                VARCHAR2(2000);
 l_context_info_rec            ZX_API_PUB.context_info_rec_type;
 l_location_type_tbl           ZX_TCM_GEO_JUR_PKG.location_type_tbl_type;
 l_location_id_tbl             ZX_TCM_GEO_JUR_PKG.location_id_tbl_type;
 i                             NUMBER;
 l_flag                        BOOLEAN;
 l_tax_calc_flag               VARCHAR2(10);
 l_count_line_level_action     NUMBER;

   -- bug fix 5417887 begin
  l_trx_id                      NUMBER := -1;
  l_trx_type_id                  NUMBER := -1;
  l_legal_entity_id             NUMBER := -1;
  l_org_id                      NUMBER := -1;
  l_trx_date                    DATE := TO_DATE('01/01/1951', 'DD/MM/RRRR');
  l_effective_date              DATE;
  l_event_class_rec             ZX_API_PUB.event_class_rec_type;

  l_line_level_indx             NUMBER;
  -- bug fix 5417887 end
  --bug 8265004
  l_line_level_indx1            NUMBER;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   ZX_TCM_PTP_PKG.get_location_id(p_event_class_rec.internal_organization_id,
                                  l_internal_org_location_id,
                                  l_return_status
                                 );

   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
      x_return_status := l_return_status;
      IF x_return_status = FND_API.G_RET_STS_ERROR THEN
        l_context_info_rec.APPLICATION_ID   := p_event_class_rec.APPLICATION_ID;
        l_context_info_rec.ENTITY_CODE      := p_event_class_rec.ENTITY_CODE;
        l_context_info_rec.EVENT_CLASS_CODE := p_event_class_rec.EVENT_CLASS_CODE;
        l_context_info_rec.TRX_ID           := p_event_class_rec.TRX_ID;
        ZX_API_PUB.add_msg(p_context_info_rec => l_context_info_rec);
      END IF;
      IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,G_PKG_NAME||': '||l_api_name||'ZX_TCM_PTP_PKG.get_location_id returned errors');
      END IF;
      RETURN;
   END IF;

  /*-----------------------------------------------------------------------*
   |  Bug 3698114 - In case of LTE, we need to fetch all the transaction    |
   |  into memory while in case of EBTax, they will be fetched in chunks    |
   |  of 1000. The below logic puts the constraint on the LIMIT of cursor   |
   *-----------------------------------------------------------------------

   Need not do this because we have a separeate loop for LTE which calls
   LTE calculation for each document
   IF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'EBTAX' THEN
      l_cursor_rows := G_LINES_PER_FETCH ;
   ELSIF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'LTE' THEN
      l_cursor_rows := G_MAX_LINES_PER_FETCH ;
   END IF;
  */
   IF c_lines%ISOPEN THEN CLOSE c_lines;
     OPEN c_lines(p_event_class_rec);
   ELSE
     OPEN c_lines(p_event_class_rec);
   END IF;
   LOOP
         FETCH c_lines BULK COLLECT INTO
             zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION,
             zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT,
             zx_global_structures_pkg.trx_line_dist_tbl.PRECISION,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_MAU,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_PRECISION,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_TO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_FROM_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_TO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_FROM_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_TO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_FROM_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_TO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_FROM_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE,
             zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY,
             zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE,
             zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON,
             zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT,
             zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE,
             zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE,
             zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID,
             zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_RECEIVABLES_TRX_TYPE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION,
             zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME,
             zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME,
             zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_PARTY_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_PARTY_SITE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE,
             zx_global_structures_pkg.trx_line_dist_tbl.Asset_Flag,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9,
             zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR1,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR2,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR3,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR4,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR5,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR6,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR7,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR8,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR9,
             zx_global_structures_pkg.trx_line_dist_tbl.CHAR10,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE1,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE2,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE3,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE4,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE5,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE6,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE7,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE8,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE9,
             zx_global_structures_pkg.trx_line_dist_tbl.DATE10,
             zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.QUOTE_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY,
             zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.DIST_LEVEL_ACTION,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TAX_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TAX_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TASK_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.AWARD_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PROJECT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ORGANIZATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ITEM_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_QUANTITY,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_CURR_CONV_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.ITEM_DIST_NUMBER,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_TAX_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_DIST_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DIST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.OVERRIDING_RECOVERY_RATE,
             zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_SHIP_THIRD_PTY_ACCT_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_BILL_THIRD_PTY_ACCT_ST_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_SHIP_TO_CST_ACCT_ST_USE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_BILL_TO_CST_ACCT_ST_USE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_SHIP_THIRD_PTY_ACCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_BILL_THIRD_PTY_ACCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE,
             zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE ,
             zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER ,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY1,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY2,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY3,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY4,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY5,
             zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY6,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY1,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY2,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY3,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY4,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY5,
             zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY6,
             zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_APPLN_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_EVNT_CLS_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_LEVEL_TYPE,
             zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_ENTITY_CODE,
             zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_LINE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9,
             zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10,
             zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID ,
             zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID,
             zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY,
             zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE1,
             zx_global_structures_pkg.trx_line_dist_tbl.TOTAL_INC_TAX_AMT,
             zx_global_structures_pkg.trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.INSERT_UPDATE_FLAG,
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_PROCESSING_COMPLETED_FLAG, -- Bug 8931030
             zx_global_structures_pkg.trx_line_dist_tbl.TAX_CALCULATION_DONE_FLAG      -- Bug 8931030
           LIMIT G_LINES_PER_FETCH;

      FOR l_trx_line_index in 1 .. nvl(zx_global_structures_pkg.trx_line_dist_tbl.internal_organization_id.LAST,0)
      LOOP

       	-- Bug 5524869. Added the logic to rollback only failed transaction.
       BEGIN

       IF zx_global_structures_pkg.trx_line_dist_tbl.receivables_trx_type_id(l_trx_line_index) <> l_trx_type_id  THEN
          SELECT TAX_CALCULATION_FLAG into l_tax_calc_flag
          FROM  RA_CUST_TRX_TYPES_ALL
          RTT WHERE
          RTT.CUST_TRX_TYPE_ID = zx_global_structures_pkg.trx_line_dist_tbl.receivables_trx_type_id(l_trx_line_index)
          AND RTT.ORG_ID = zx_global_structures_pkg.trx_line_dist_tbl.internal_organization_id(l_trx_line_index);


          zx_global_structures_pkg.tax_calc_flag_tbl(to_char(zx_global_structures_pkg.trx_line_dist_tbl.receivables_trx_type_id(l_trx_line_index))) := l_tax_calc_flag;

         l_trx_type_id := zx_global_structures_pkg.trx_line_dist_tbl.receivables_trx_type_id(l_trx_line_index);

       END IF;


       -- bug fix 5417887 begin
       IF zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index) <> l_trx_id THEN

          l_flag := TRUE;
          SAVEPOINT Import_Doc;

          p_event_class_rec.LEGAL_ENTITY_ID              :=  zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID(l_trx_line_index);
          p_event_class_rec.LEDGER_ID                    :=  zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID(l_trx_line_index);
          p_event_class_rec.EVENT_TYPE_CODE              :=  zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE(l_trx_line_index);
          p_event_class_rec.CTRL_TOTAL_HDR_TX_AMT        :=  zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT(l_trx_line_index);
          p_event_class_rec.TRX_ID                       :=  zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID(l_trx_line_index);
          p_event_class_rec.TRX_DATE                     :=  zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE(l_trx_line_index);
          p_event_class_rec.REL_DOC_DATE                 :=  zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE(l_trx_line_index);
          p_event_class_rec.PROVNL_TAX_DETERMINATION_DATE:=  zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE(l_trx_line_index);
          p_event_class_rec.TRX_CURRENCY_CODE            :=  zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE(l_trx_line_index);
          p_event_class_rec.PRECISION                    :=  zx_global_structures_pkg.trx_line_dist_tbl.PRECISION(l_trx_line_index);
          p_event_class_rec.CURRENCY_CONVERSION_TYPE     :=  zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(l_trx_line_index);
          p_event_class_rec.CURRENCY_CONVERSION_RATE     :=  zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(l_trx_line_index);
          p_event_class_rec.CURRENCY_CONVERSION_DATE     :=  zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(l_trx_line_index);
          p_event_class_rec.ROUNDING_SHIP_TO_PARTY_ID    :=  zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_TO_PARTY_ID(l_trx_line_index);
          p_event_class_rec.ROUNDING_SHIP_FROM_PARTY_ID  :=  zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_FROM_PARTY_ID(l_trx_line_index);
          p_event_class_rec.ROUNDING_BILL_TO_PARTY_ID    :=  zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_TO_PARTY_ID(l_trx_line_index);
          p_event_class_rec.ROUNDING_BILL_FROM_PARTY_ID  :=  zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_FROM_PARTY_ID(l_trx_line_index);
          p_event_class_rec.RNDG_SHIP_TO_PARTY_SITE_ID   :=  zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_TO_PARTY_SITE_ID(l_trx_line_index);
          p_event_class_rec.RNDG_SHIP_FROM_PARTY_SITE_ID :=  zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_FROM_PARTY_SITE_ID(l_trx_line_index);
          p_event_class_rec.RNDG_BILL_TO_PARTY_SITE_ID   :=  zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_TO_PARTY_SITE_ID(l_trx_line_index);
          p_event_class_rec.RNDG_BILL_FROM_PARTY_SITE_ID :=  zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_FROM_PARTY_SITE_ID(l_trx_line_index);
          p_event_class_rec.ESTABLISHMENT_ID             :=  zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID(l_trx_line_index);

          IF zx_global_structures_pkg.trx_line_dist_tbl.trx_currency_code(l_trx_line_index)is not NULL   AND
             zx_global_structures_pkg.trx_line_dist_tbl.precision(l_trx_line_index) is not NULL THEN
             p_event_class_rec.header_level_currency_flag := 'Y';
          END IF;

          IF  zx_global_structures_pkg.trx_line_dist_tbl.source_application_id(l_trx_line_index) is NOT NULL
          AND zx_global_structures_pkg.trx_line_dist_tbl.source_entity_code(l_trx_line_index) is NOT NULL
          AND zx_global_structures_pkg.trx_line_dist_tbl.source_event_class_code(l_trx_line_index) is NOT NULL
          THEN
             pop_src_evnt_cls_info
                  ( p_trx_line_index    => l_trx_line_index,
                     p_event_class_rec  => p_event_class_rec,
                     x_return_status 	=> l_return_status);
             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               RAISE FND_API.G_EXC_ERROR;
             END IF;
          END IF;

          /* ----------------------------------------------------------------------+
             |  Determine effective date                                             |
             + ----------------------------------------------------------------------*/
          zx_valid_init_params_pkg.determine_effective_date(p_event_class_rec,
                                     l_effective_date,
                                     l_return_status
                                    );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
             x_return_status := l_return_status;
             RAISE FND_API.G_EXC_ERROR;
          END IF;

          IF l_legal_entity_id <> zx_global_structures_pkg.trx_line_dist_tbl.legal_entity_id(l_trx_line_index)
            OR l_org_id <> zx_global_structures_pkg.trx_line_dist_tbl.internal_organization_id(l_trx_line_index) THEN
           /* ----------------------------------------------------------------------+
            | Bug 3129063 -      Setting the Security Context for Subscription      |
            + ----------------------------------------------------------------------*/
            zx_valid_init_params_pkg.get_tax_subscriber(p_event_class_rec,
       	                l_effective_date,
                               l_return_status
                              );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              RAISE FND_API.G_EXC_ERROR;
            END IF;
          ELSE
              zx_security.g_effective_date := l_effective_date;
              zx_security.name_value('EFFECTIVEDATE',to_char(l_effective_date));
          END IF;

         /* ----------------------------------------------------------------------+
          |      Get Tax Event Type                                               |
          + ----------------------------------------------------------------------*/
          zx_valid_init_params_pkg.get_tax_event_type (l_return_status
                              ,p_event_class_rec.event_class_code
                              ,p_event_class_rec.application_id
                              ,p_event_class_rec.entity_code
                              ,p_event_class_rec.event_type_code
                              ,p_event_class_rec.tax_event_class_code
                              ,p_event_class_rec.tax_event_type_code
                              ,p_event_class_rec.doc_status_code
                              );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            RAISE FND_API.G_EXC_ERROR;
          END IF;

           /* ----------------------------------------------------------------------+
            |      Populate Event Class Options                                     |
            + ----------------------------------------------------------------------*/
            zx_valid_init_params_pkg.populate_event_class_options(l_return_status,
                                         l_effective_date,
                                         p_event_class_rec
                                        );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              RAISE FND_API.G_EXC_ERROR;
            END IF;

        /* ----------------------------------------------------------------------+
          |      Get the locations for parties and their ptp ids                  |
          + ----------------------------------------------------------------------*/

           zx_valid_init_params_pkg.get_loc_id_and_ptp_ids(
                            p_event_class_rec  => p_event_class_rec,
                            p_trx_line_index   => l_trx_line_index,
                            x_return_status    => l_return_status
                          );

           IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
             x_return_status := l_return_status;
             RAISE FND_API.G_EXC_ERROR;
           END IF;

            zx_global_structures_pkg.g_event_class_rec := p_event_class_rec;

            /* ===============================================================================*
             |Initialize the global structures/global temp tables owned by TDM at header level |
             * =============================================================================*/
             ZX_TDS_CALC_SERVICES_PUB_PKG.initialize (p_event_class_rec ,
                                                      'HEADER',
                                                      l_return_status
                                                     );


             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                  FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,G_PKG_NAME||': '||l_api_name||':ZX_TDS_CALC_SERVICES_PUB_PKG.initialize returned errors');
                END IF;
                RAISE FND_API.G_EXC_ERROR;
             END IF;

         --Bug 9452928
         ZX_TDS_CALC_SERVICES_PUB_PKG.g_process_for_appl_flg := NULL;

         --Bugfix 4322369 - Call rounding API at document level
         ZX_TDS_TAX_ROUNDING_PKG.get_rounding_level_and_rule(p_event_class_rec,
                                                             ZX_TDS_CALC_SERVICES_PUB_PKG.g_rounding_level,
                                                             ZX_TDS_CALC_SERVICES_PUB_PKG.g_rounding_rule,
                                                             ZX_TDS_CALC_SERVICES_PUB_PKG.g_rnd_lvl_party_tax_prof_id,
                                                             ZX_TDS_CALC_SERVICES_PUB_PKG.g_rounding_lvl_party_type,
                                                             l_return_status,
                                                             l_error_buffer
                                                            );

         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
           x_return_status := l_return_status;
           IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                ' RETURN_STATUS = ' || x_return_status);
           END IF;
           RAISE FND_API.G_EXC_ERROR;
         END IF;

	 --bug#6334533
	 --need to call prorate_imported_sum_tax_lines for the whole document if any line
	 --has line_level_action as CREATE_WITH_TAX or LINE_INFO_TAX_ONLY.
	 --commenting the call here for performance reasons.
	 --moving the call down in a separate block.


/*         SELECT COUNT(*)
	 INTO l_count_line_level_action
         FROM ZX_TRANSACTION_LINES_GT
         WHERE application_id = zx_global_structures_pkg.trx_line_dist_tbl.application_id(l_trx_line_index)
         AND entity_code = zx_global_structures_pkg.trx_line_dist_tbl.entity_code(l_trx_line_index)
         AND event_class_code = zx_global_structures_pkg.trx_line_dist_tbl.event_class_code(l_trx_line_index)
         AND trx_id = zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index)
         AND line_level_action IN ('CREATE_WITH_TAX','LINE_INFO_TAX_ONLY');

          /* ====================================================================*
          |Prorate imported summary tax lines - call only if tax method is EBTAX|
          * ====================================================================*/
/*          IF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'EBTAX' AND
	     l_count_line_level_action > 0
          THEN
            ZX_TDS_CALC_SERVICES_PUB_PKG.prorate_imported_sum_tax_lines (p_event_class_rec,
                                                                         l_return_status
                                                                        );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,G_PKG_NAME||': '||l_api_name||'ZX_TDS_CALC_SERVICES_PUB_PKG.prorate_imported_sum_tax_lines  returned errors');
              END IF;
              RAISE FND_API.G_EXC_ERROR;
            END IF;
          END IF;
*/
         --Bug 9452928
         --Bugfix 4718307 - Call TDS to get the applicability flag for the party
         --ZX_TDS_CALC_SERVICES_PUB_PKG.get_process_for_appl_flg (p_tax_prof_id   => ZX_TDS_CALC_SERVICES_PUB_PKG.g_rnd_lvl_party_tax_prof_id,
         --                                                       x_return_status => l_return_status
         --                                                      );

         --IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
         --  x_return_status := l_return_status;
         --  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         --     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
         --       ' RETURN_STATUS = ' || x_return_status);
         --  END IF;
         --  RAISE FND_API.G_EXC_ERROR;
         --END IF;

      END IF; -- trx header changed

       pop_estb_id (l_trx_line_index,
                    p_event_class_rec,
                    l_return_status
                    );

       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
         x_return_status := l_return_status;
         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' RETURN_STATUS = ' || x_return_status);
         END IF;
         IF l_return_status = FND_API.G_RET_STS_ERROR THEN
           RAISE FND_API.G_EXC_ERROR;
         ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
           RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
         END IF;
       END IF;

      --need to call prorate_imported_sum_tax_lines for the whole document if any line
      --has line_level_action as CREATE_WITH_TAX or LINE_INFO_TAX_ONLY.
      --changed the logic and moved the call down in a separate block for performance reasons.

      /* ====================================================================*
      |Prorate imported summary tax lines - call only if tax method is EBTAX|
      * ====================================================================*/

      IF NVL(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'EBTAX' THEN

        l_line_level_indx := zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index);

        IF l_line_level_tbl.EXISTS(l_line_level_indx)
           AND l_line_level_tbl(l_line_level_indx).trx_id = zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index) THEN
          NULL;
        ELSE
          IF zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION(l_trx_line_index)
                                                     IN ('CREATE_WITH_TAX','LINE_INFO_TAX_ONLY') THEN
	     l_line_level_tbl(l_line_level_indx).trx_id := zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index);

	     ZX_TDS_CALC_SERVICES_PUB_PKG.prorate_imported_sum_tax_lines (p_event_class_rec,
                                                                          l_return_status
                                                                         );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,G_PKG_NAME||': '||l_api_name||'ZX_TDS_CALC_SERVICES_PUB_PKG.prorate_imported_sum_tax_lines  returned errors');
              END IF;
              RAISE FND_API.G_EXC_ERROR;
            END IF;
          END IF;
        END IF;
      END IF;

      -- Bug 5524869. If there is no error in the header then only process the trx lines
      IF l_flag = TRUE THEN

        --Bug 3687807 - assign line_amt to assessable_value if null
        IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.assessable_value(l_trx_line_index) is null THEN
           ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.assessable_value(l_trx_line_index) :=
		       ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_amt(l_trx_line_index);
        END IF;
        --Populate the internal_organization_location_id
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(l_trx_line_index) := l_internal_org_location_id;


       /* =============================================================================*
       |Initialize the global structures/global temp tables owned by TDM at Line level |
       * ==============================================================================*/
        ZX_TDS_CALC_SERVICES_PUB_PKG.initialize (p_event_class_rec ,
                                                 'LINE',
                                                 l_return_status
                                                );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
           x_return_status := l_return_status;
           IF c_lines%ISOPEN THEN CLOSE c_lines; END IF;
           IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                ' RETURN_STATUS = ' || x_return_status);
           END IF;
           RAISE FND_API.G_EXC_ERROR;
        END IF;

       /* ----------------------------------------------------+
        |     Derive Internal_Flag Parameters                 |
        + ---------------------------------------------------*/
        derive_internal_parameters(l_return_status,
                                   l_trx_line_index,
                                   p_event_class_rec
                                  );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
           x_return_status := l_return_status;
           IF c_lines%ISOPEN THEN CLOSE c_lines; END IF;
           IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                ' RETURN_STATUS = ' || x_return_status);
           END IF;
           RAISE FND_API.G_EXC_ERROR;
        END IF;

        BEGIN
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Processing for Transaction Line with APPLICATION_ID: '||to_char(zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID(l_trx_line_index))||
          ', ENTITY_CODE: '||zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE(l_trx_line_index)||
          ', EVENT_CLASS_CODE: '||zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE(l_trx_line_index)|| ', EVENT_TYPE_CODE: '||zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE(l_trx_line_index)||
          ', TRX_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID(l_trx_line_index))||
          ', TRX_LINE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID(l_trx_line_index))||
          ', TRX_LEVEL_TYPE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE(l_trx_line_index))||
          ', INTERNAL_ORGANIZATION_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(l_trx_line_index))||
          ', LINE_LEVEL_ACTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION(l_trx_line_index)||
          ', TRX_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE(l_trx_line_index))||
          ', TRX_DOC_REVISION: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION(l_trx_line_index)||
          ', LEDGER_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID(l_trx_line_index))||
          ', TRX_CURRENCY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE(l_trx_line_index)||
          ', CURRENCY_CONVERSION_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(l_trx_line_index))||
          ', CURRENCY_CONVERSION_RATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(l_trx_line_index))||
          ', CURRENCY_CONVERSION_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(l_trx_line_index)||
          ', MINIMUM_ACCOUNTABLE_UNIT: '|| zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(l_trx_line_index)||
          ', PRECISION: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRECISION(l_trx_line_index)||
          ', TRX_SHIPPING_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE(l_trx_line_index))||
          ', TRX_RECEIPT_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE(l_trx_line_index))||
          ', LEGAL_ENTITY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID(l_trx_line_index))||
          ', ROUNDING_SHIP_TO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_TO_PARTY_ID(l_trx_line_index))||
          ', ROUNDING_SHIP_FROM_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_FROM_PARTY_ID(l_trx_line_index))||
          ', ROUNDING_BILL_TO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_TO_PARTY_ID(l_trx_line_index))||
          ', ROUNDING_BILL_FROM_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_FROM_PARTY_ID(l_trx_line_index))||
          ', RNDG_SHIP_TO_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_TO_PARTY_SITE_ID(l_trx_line_index))||
          ', RNDG_SHIP_FROM_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_FROM_PARTY_SITE_ID(l_trx_line_index))||
          ', RNDG_BILL_TO_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_TO_PARTY_SITE_ID(l_trx_line_index))||
          ', RNDG_BILL_FROM_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_FROM_PARTY_SITE_ID(l_trx_line_index))||
          ', ESTABLISHMENT_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID(l_trx_line_index))||
          ', TRX_LINE_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE(l_trx_line_index)||
          ', TRX_LINE_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE(l_trx_line_index))||
          ', TRX_BUSINESS_CATEGORY: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(l_trx_line_index)||
          ', LINE_INTENDED_USE: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE(l_trx_line_index)||
          ', USER_DEFINED_FISC_CLASS: '|| zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(l_trx_line_index)||
          ', LINE_AMT: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT(l_trx_line_index))||
          ', TRX_LINE_QUANTITY: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY(l_trx_line_index))||
          ', UNIT_PRICE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE(l_trx_line_index))||
          ', EXEMPT_CERTIFICATE_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER(l_trx_line_index)||
          ', EXEMPT_REASON: '|| zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON(l_trx_line_index)||
          ', CASH_DISCOUNT: '|| zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT(l_trx_line_index)||
          ', VOLUME_DISCOUNT: '|| zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT(l_trx_line_index)||
          ', TRADING_DISCOUNT: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT(l_trx_line_index)||
          ', TRANSFER_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE(l_trx_line_index)||
          ', TRANSPORTATION_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE(l_trx_line_index)||
          ', INSURANCE_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE(l_trx_line_index)||
          ', OTHER_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE(l_trx_line_index)||
          ', PRODUCT_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID(l_trx_line_index))||
          ', PRODUCT_FISC_CLASSIFICATION: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(l_trx_line_index)||
          ', PRODUCT_ORG_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID(l_trx_line_index))||
          ', UOM_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE(l_trx_line_index)||
          ', PRODUCT_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE(l_trx_line_index)||
          ', PRODUCT_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE(l_trx_line_index)||
          ', PRODUCT_CATEGORY: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY(l_trx_line_index)||
          ', TRX_SIC_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE(l_trx_line_index)||
          ', LINE_CLASS: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS(l_trx_line_index)||
          ', FOB_POINT: '|| zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT(l_trx_line_index)||
          ', SHIP_TO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID(l_trx_line_index))||
          ', SHIP_FROM_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID(l_trx_line_index))||
          ', POA_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_ID(l_trx_line_index))||
          ', POO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_ID(l_trx_line_index))||
          ', BILL_TO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_ID(l_trx_line_index))||
          ', BILL_FROM_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_ID(l_trx_line_index))||
          ', MERCHANT_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID(l_trx_line_index)));
        END IF;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
          ', SHIP_TO_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_SITE_ID(l_trx_line_index))||
          ', SHIP_FROM_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_SITE_ID(l_trx_line_index))||
          ', POA_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_SITE_ID(l_trx_line_index))||
          ', POO_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_SITE_ID(l_trx_line_index))||
          ', BILL_TO_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_SITE_ID(l_trx_line_index))||
          ', BILL_FROM_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_SITE_ID(l_trx_line_index))||
          ', SHIP_TO_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID(l_trx_line_index))||
          ', SHIP_FROM_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID(l_trx_line_index))||
          ', POA_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID(l_trx_line_index))||
          ', POO_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID(l_trx_line_index))||
          ', BILL_TO_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID(l_trx_line_index))||
          ', BILL_FROM_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID(l_trx_line_index))||
          ', ACCOUNT_CCID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID(l_trx_line_index))||
          ', ACCOUNT_STRING: '|| zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING(l_trx_line_index)||
          ', MERCHANT_PARTY_COUNTRY: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY(l_trx_line_index)||
          ', RECEIVABLES_TRX_TYPE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID(l_trx_line_index))||
          ', REF_DOC_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID(l_trx_line_index))||
          ', REF_DOC_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE(l_trx_line_index)||
          ', REF_DOC_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE(l_trx_line_index)||
          ', REF_DOC_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID(l_trx_line_index))||
          ', REF_DOC_LINE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID(l_trx_line_index))||
          ', REF_DOC_LINE_QUANTITY: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY(l_trx_line_index))||
          ', RELATED_DOC_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID(l_trx_line_index))||
          ', RELATED_DOC_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE(l_trx_line_index)||
          ', RELATED_DOC_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE(l_trx_line_index)||
          ', RELATED_DOC_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID(l_trx_line_index))||
          ', RELATED_DOC_NUMBER: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER(l_trx_line_index))||
          ', RELATED_DOC_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE(l_trx_line_index))||
          ', APPLIED_FROM_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID(l_trx_line_index))||
          ', APPLIED_FROM_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE(l_trx_line_index)||
          ', APPLIED_FROM_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE(l_trx_line_index)||
          ', APPLIED_FROM_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID(l_trx_line_index))||
          ', APPLIED_FROM_LINE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID(l_trx_line_index))||
          ', ADJUSTED_DOC_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID(l_trx_line_index))||
          ', ADJUSTED_DOC_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE(l_trx_line_index)||
          ', ADJUSTED_DOC_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE(l_trx_line_index)||
          ', ADJUSTED_DOC_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID(l_trx_line_index))||
          ', ADJUSTED_DOC_LINE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID(l_trx_line_index))||
          ', ADJUSTED_DOC_NUMBER: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER(l_trx_line_index))||
          ', ADJUSTED_DOC_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE(l_trx_line_index))||
          ', APPLIED_TO_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID(l_trx_line_index))||
          ', APPLIED_TO_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE(l_trx_line_index)||
          ', APPLIED_TO_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE(l_trx_line_index)||
          ', APPLIED_TO_TRX_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID(l_trx_line_index))||
          ', APPLIED_TO_TRX_LINE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID(l_trx_line_index))||
          ', TRX_ID_LEVEL2: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2(l_trx_line_index))||
          ', TRX_ID_LEVEL3: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3(l_trx_line_index))||
          ', TRX_ID_LEVEL4: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4(l_trx_line_index))||
          ', TRX_ID_LEVEL5: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5(l_trx_line_index))||
          ', TRX_ID_LEVEL6: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6(l_trx_line_index))||
          ', TRX_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER(l_trx_line_index)||
          ', TRX_DESCRIPTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION(l_trx_line_index)||
          ', TRX_LINE_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER(l_trx_line_index)||
          ', TRX_LINE_DESCRIPTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION(l_trx_line_index)||
          ', PRODUCT_DESCRIPTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION(l_trx_line_index)||
          ', TRX_WAYBILL_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER(l_trx_line_index)||
          ', TRX_COMMUNICATED_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE(l_trx_line_index))||
          ', TRX_LINE_GL_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE(l_trx_line_index))||
          ', BATCH_SOURCE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID(l_trx_line_index))||
          ', BATCH_SOURCE_NAME: '|| zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME(l_trx_line_index)||
          ', DOC_SEQ_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID(l_trx_line_index))||
          ', DOC_SEQ_NAME: '|| zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME(l_trx_line_index)||
          ', DOC_SEQ_VALUE: '|| zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE(l_trx_line_index)||
          ', TRX_DUE_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE(l_trx_line_index))||
          ', TRX_TYPE_DESCRIPTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION(l_trx_line_index)||
          ', MERCHANT_PARTY_NAME: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME(l_trx_line_index)||
          ', MERCHANT_PARTY_DOCUMENT_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER(l_trx_line_index)||
          ', MERCHANT_PARTY_REFERENCE: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE(l_trx_line_index)||
          ', MERCHANT_PARTY_TAXPAYER_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID(l_trx_line_index))||
          ', MERCHANT_PARTY_TAX_REG_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER(l_trx_line_index)
          --', PAYING_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_ID(l_trx_line_index))
          );
        END IF;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
          --', OWN_HQ_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_ID(l_trx_line_index))||
          --', TRADING_HQ_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_ID(l_trx_line_index))||
          --', POI_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_ID(l_trx_line_index))||
          --', POD_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_ID(l_trx_line_index))||
          --', TITLE_TRANSFER_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_PARTY_ID(l_trx_line_index))||
          --', PAYING_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_SITE_ID(l_trx_line_index))||
          --', OWN_HQ_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_SITE_ID(l_trx_line_index))||
          --', TRADING_HQ_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_SITE_ID(l_trx_line_index))||
          --', POI_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_SITE_ID(l_trx_line_index))||
          --', POD_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_SITE_ID(l_trx_line_index))||
          --', TITLE_TRANSFER_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_PARTY_SITE_ID(l_trx_line_index))||
          --', PAYING_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID(l_trx_line_index))||
          --', OWN_HQ_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID(l_trx_line_index))||
          --', TRADING_HQ_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID(l_trx_line_index))||
          --', POC_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID(l_trx_line_index))||
          --', POI_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID(l_trx_line_index))||
          --', POD_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID(l_trx_line_index))||
          --', TITLE_TRANSFER_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID(l_trx_line_index))||
          ', ASSESSABLE_VALUE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE(l_trx_line_index)||
          ', Asset_Flag: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_FLAG(l_trx_line_index)||
          ', ASSET_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER(l_trx_line_index)||
          ', ASSET_ACCUM_DEPRECIATION: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION(l_trx_line_index)||
          ', ASSET_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE(l_trx_line_index)||
          ', ASSET_COST: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST(l_trx_line_index)
          --', NUMERIC1: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1(l_trx_line_index))||
          --', NUMERIC2: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2(l_trx_line_index))||
          --', NUMERIC3: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3(l_trx_line_index))||
          --', NUMERIC4: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4(l_trx_line_index))||
          --', NUMERIC5: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5(l_trx_line_index))||
          --', NUMERIC6: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6(l_trx_line_index))||
          --', NUMERIC7: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7(l_trx_line_index))||
          --', NUMERIC8: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8(l_trx_line_index))||
          --', NUMERIC9: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9(l_trx_line_index))||
          --', NUMERIC10: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10(l_trx_line_index))||
          --', CHAR1: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR1(l_trx_line_index)||
          --', CHAR2: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR2(l_trx_line_index)||
          --', CHAR3: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR3(l_trx_line_index)||
          --', CHAR4: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR4(l_trx_line_index)||
          --', CHAR5: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR5(l_trx_line_index)||
          --', CHAR6: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR6(l_trx_line_index)||
          --', CHAR7: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR7(l_trx_line_index)||
          --', CHAR8: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR8(l_trx_line_index)||
          --', CHAR9: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR9(l_trx_line_index)||
          --', CHAR10: '|| zx_global_structures_pkg.trx_line_dist_tbl.CHAR10(l_trx_line_index)||
          --', DATE1: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE1(l_trx_line_index))||
          --', DATE2: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE2(l_trx_line_index))||
          --', DATE3: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE3(l_trx_line_index))||
          --', DATE4: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE4(l_trx_line_index))||
          --', DATE5: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE5(l_trx_line_index))||
          --', DATE6: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE6(l_trx_line_index))||
          --', DATE7: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE7(l_trx_line_index))||
          --', DATE8: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE8(l_trx_line_index))||
          --', DATE9: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE9(l_trx_line_index))||
          --', DATE10: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.DATE10(l_trx_line_index))
          );
        END IF;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
          ', FIRST_PTY_ORG_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID(l_trx_line_index))||
          ', TAX_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE(l_trx_line_index)||
          ', TAX_EVENT_TYPE_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE(l_trx_line_index)||
          ', DOC_EVENT_STATUS: '|| zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS(l_trx_line_index)||
          ', RDNG_SHIP_TO_PTY_TX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID(l_trx_line_index))||
          ', RDNG_SHIP_FROM_PTY_TX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID(l_trx_line_index))||
          ', RDNG_BILL_TO_PTY_TX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID(l_trx_line_index))||
          ', RDNG_BILL_FROM_PTY_TX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID(l_trx_line_index))||
          ', RDNG_SHIP_TO_PTY_TX_P_ST_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID(l_trx_line_index))||
          ', RDNG_SHIP_FROM_PTY_TX_P_ST_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID(l_trx_line_index))||
          ', RDNG_BILL_TO_PTY_TX_P_ST_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID(l_trx_line_index))||
          ', RDNG_BILL_FROM_PTY_TX_P_ST_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID(l_trx_line_index))||
          ', SHIP_TO_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', SHIP_FROM_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', POA_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', POO_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', PAYING_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', OWN_HQ_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', TRADING_HQ_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', POI_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', POD_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', BILL_TO_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', BILL_FROM_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', TITLE_TRANS_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', SHIP_TO_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', SHIP_FROM_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', POA_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', POO_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', PAYING_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', OWN_HQ_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', TRADING_HQ_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', POI_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', POD_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', BILL_TO_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', BILL_FROM_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', TITLE_TRANS_SITE_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID(l_trx_line_index))||
          ', MERCHANT_PARTY_TAX_PROF_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID(l_trx_line_index))||
          ', DOCUMENT_SUB_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(l_trx_line_index)||
          ', SUPPLIER_TAX_INVOICE_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER(l_trx_line_index)||
          ', SUPPLIER_TAX_INVOICE_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE(l_trx_line_index))||
          ', SUPPLIER_EXCHANGE_RATE: '|| zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE(l_trx_line_index)||
          ', TAX_INVOICE_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE(l_trx_line_index))||
          ', TAX_INVOICE_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER(l_trx_line_index)||
          ', LINE_AMT_INCLUDES_TAX_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG(l_trx_line_index)||
          ', QUOTE_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.QUOTE_FLAG(l_trx_line_index)||
          ', DEFAULT_TAXATION_COUNTRY: '|| zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(l_trx_line_index)||
          ', Historical_Flag: '|| zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG(l_trx_line_index)||
          ', INTERNAL_ORG_LOCATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(l_trx_line_index))||
          ', Ctrl_Hdr_Tx_Appl_Flag: '|| zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG(l_trx_line_index)||
          ', CTRL_TOTAL_HDR_TX_AMT: '|| zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT(l_trx_line_index)||
          ', CTRL_TOTAL_LINE_TX_AMT: '|| zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT(l_trx_line_index)||
          ', DIST_LEVEL_ACTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.DIST_LEVEL_ACTION(l_trx_line_index));
        END IF;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
          ', ADJUSTED_DOC_TAX_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TAX_DIST_ID(l_trx_line_index)) ||
          ', APPLIED_FROM_TAX_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TAX_DIST_ID(l_trx_line_index)) ||
          ', TASK_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TASK_ID(l_trx_line_index)) ||
          ', AWARD_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.AWARD_ID(l_trx_line_index)) ||
          ', PROJECT_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.PROJECT_ID(l_trx_line_index)) ||
          ', EXPENDITURE_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_TYPE(l_trx_line_index) ||
          ', EXPENDITURE_ORGANIZATION_ID: '||to_char(zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ORGANIZATION_ID(l_trx_line_index)) ||
          ', EXPENDITURE_ITEM_DATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ITEM_DATE(l_trx_line_index)) ||
          ', TRX_LINE_DIST_AMT: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_AMT(l_trx_line_index)) ||
          ', TRX_LINE_DIST_QUANTITY: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_QUANTITY(l_trx_line_index)) ||
          ', REF_DOC_CURR_CONV_RATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_CURR_CONV_RATE(l_trx_line_index)) ||
          ', ITEM_DIST_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.ITEM_DIST_NUMBER(l_trx_line_index) ||
          ', REF_DOC_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_DIST_ID(l_trx_line_index)) ||
          ', TRX_LINE_DIST_TAX_AMT: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_TAX_AMT(l_trx_line_index))||
          ', TRX_LINE_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_ID(l_trx_line_index)) ||
          ', APPLIED_FROM_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_DIST_ID(l_trx_line_index)) ||
          ', ADJUSTED_DOC_DIST_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DIST_ID(l_trx_line_index)) ||
          ', OVERRIDING_RECOVERY_RATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.OVERRIDING_RECOVERY_RATE(l_trx_line_index)) ||
          ', INPUT_TAX_CLASSIFICATION_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE(l_trx_line_index) ||
          ', OUTPUT_TAX_CLASSIFICATION_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE(l_trx_line_index) ||
          ', PORT_OF_ENTRY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE(l_trx_line_index) ||
          ', TAX_REPORTING_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG(l_trx_line_index) ||
          ', TAX_AMT_INCLUDED_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG(l_trx_line_index) ||
          ', COMPOUNDING_TAX_FLAG: '|| zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG(l_trx_line_index) ||
          ', SHIP_THIRD_PTY_ACCT_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID(l_trx_line_index)) ||
          ', BILL_THIRD_PTY_ACCT_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID(l_trx_line_index)) ||
          ', SHIP_THIRD_PTY_ACCT_SITE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID(l_trx_line_index)) ||
          ', BILL_THIRD_PTY_ACCT_SITE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID(l_trx_line_index)) ||
          ', SHIP_TO_CUST_ACCT_SITE_USE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID(l_trx_line_index))||
          ', BILL_TO_CUST_ACCT_SITE_USE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID(l_trx_line_index)) ||
          ', PROVNL_TAX_DETERMINATION_DATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE(l_trx_line_index)) ||
          ', START_EXPENSE_DATE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE(l_trx_line_index)) ||
          ', TRX_BATCH_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID(l_trx_line_index))||
          ', APPLIED_TO_TRX_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER(l_trx_line_index) ||
          ', SOURCE_APPLICATION_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID(l_trx_line_index)) ||
          ', SOURCE_ENTITY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE(l_trx_line_index) ||
          ', SOURCE_EVENT_CLASS_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(l_trx_line_index) ||
          ', SOURCE_TRX_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID(l_trx_line_index)) ||
          ', SOURCE_LINE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID(l_trx_line_index)) ||
          ', SOURCE_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE(l_trx_line_index) ||
          ', REF_DOC_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE(l_trx_line_index) ||
          ', APPLIED_TO_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE(l_trx_line_index) ||
          ', APPLIED_FROM_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE(l_trx_line_index) ||
          ', ADJUSTED_DOC_TRX_LEVEL_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE(l_trx_line_index) ||
          ', APPLICATION_DOC_STATUS: '|| zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS(l_trx_line_index) ||
          ', SOURCE_TAX_LINE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID(l_trx_line_index))||
          ', EXEMPTION_CONTROL_FLAG: '||  zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG(l_trx_line_index)||
          ', EXEMPT_REASON_CODE: '||  zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE(l_trx_line_index)
          );
        END IF;
        EXCEPTION
          WHEN OTHERS THEN
            null;
        END;

       /* ---------------------------------------------------------------------------+
        |                            Get Tax Regimes                                 |
        + ---------------------------------------------------------------------------*/

        /*---------------------------------------------------------------------------------+
    	 | Bug 3666786 - if process for applicability flag is  set to N                    |
    	 | * Do not call additional applicability if line level action is 'CREATE_WITH_TAX'|
    	 | * Do not perform additional applicability and calculation if line level action  |
    	 | is 'CREATE'                                                                     |
         +--------------------------------------------------------------------------------*/

        IF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'EBTAX' THEN
        /* The following complex logic is not really required
           IF nvl(p_event_class_rec.PROCESS_FOR_APPLICABILITY_FLAG,'Y') = 'N'
	         AND zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION(l_trx_line_index) = 'CREATE' THEN
	         null;
           ELSE
             IF nvl(p_event_class_rec.PROCESS_FOR_APPLICABILITY_FLAG,'Y') = 'N'
    	       AND zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION(l_trx_line_index) = 'CREATE_WITH_TAX' THEN
    	       null;
           ELSE
         */

         /* -----------------------------------------------------------------------+
         | Bug 3937387 - Call get_tax_regimes irrespective of value in process_for_|
         | applicability_flag - Needed for TPI since TPI relies heavily on the     |
     	 | derivation of tax regimes by TDS                                        |
         + ----------------------------------------------------------------------*/
         --  IF p_event_class_rec.PROCESS_FOR_APPLICABILITY_FLAG = 'N' THEN
         --    null;
         --  ELSE
           IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_LEVEL_ACTION(l_trx_line_index) = 'CREATE'
             OR p_event_class_rec.perf_addnl_appl_for_imprt_flag = 'Y' THEN

               ZX_TDS_CALC_SERVICES_PUB_PKG.get_tax_regimes(l_trx_line_index,
                                                            p_event_class_rec,
                                                            l_return_status
                                                           );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 IF c_lines%ISOPEN THEN CLOSE c_lines; END IF;
                 IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                  ' RETURN_STATUS = ' || x_return_status);
                 END IF;
                 RAISE FND_API.G_EXC_ERROR;
               END IF;
             END IF; --line level action is CREATE
            /**************************PARTNER CODE START - Point 1b****************************/
            /*Stamp the provider information on the regimes table returned by the get_tax_regimes procedure
              and also populate the trx_app_regimes structure*/

	   IF zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y' THEN

                 ZX_TPI_SERVICES_PKG.popl_pvrdr_info_tax_reg_tbl (p_event_class_rec
                                                             ,l_trx_line_index
                                                             ,l_return_status
                                                             );

             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF c_lines%ISOPEN THEN CLOSE c_lines; END IF;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RAISE FND_API.G_EXC_ERROR;
             END IF;

             /* -----------------------------------------------+
              |    Call TCM Location Caching API               |
              + -----------------------------------------------*/

             prepare_for_loc_caching(l_trx_line_index
                           ,p_event_class_rec
                           ,l_return_status
                            );

             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF x_return_status = FND_API.G_RET_STS_ERROR THEN
                  l_context_info_rec.APPLICATION_ID   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(l_trx_line_index);
                  l_context_info_rec.ENTITY_CODE      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(l_trx_line_index);
                  l_context_info_rec.EVENT_CLASS_CODE := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(l_trx_line_index);
                  l_context_info_rec.TRX_ID           := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_ID(l_trx_line_index);
                  l_context_info_rec.TRX_LINE_ID      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LINE_ID(l_trx_line_index);
                  l_context_info_rec.TRX_LEVEL_TYPE   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LEVEL_TYPE(l_trx_line_index);
                  ZX_API_PUB.add_msg (p_context_info_rec => l_context_info_rec);
                END IF;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RAISE FND_API.G_EXC_ERROR;
             END IF;

           END IF; -- zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y'

           /*******************************PARTNER CODE END ****************************/
           --END IF; -- process for applicability flag is 'N'

             /* ----------------------------------------------------------------------+
             | Bug 3937387 - Initialize the detail_tax_regime structure since the tax |
             | applicability need not be performed in the event of process_for_       |
             | applicability being 'N'. We needed to populate detail_tax_regime_tbl   |
             | though since TPI processing needs this information                     |
             + ----------------------------------------------------------------------*/

             IF p_event_class_rec.PROCESS_FOR_APPLICABILITY_FLAG = 'N' THEN
                ZX_GLOBAL_STRUCTURES_PKG.Init_Detail_Tax_Regime_Tbl;
             END IF;

            /* -----------------------------------------------+
             |     Call TDS Import service                    |
             + -----------------------------------------------*/
        	/* Bug 3895727 - Call calculate tax irrespective of process_for_applicability_flag*/

             ZX_TDS_CALC_SERVICES_PUB_PKG.calculate_tax_for_import(l_trx_line_index,
                                                                   p_event_class_rec,
                                                                   l_return_status
                                                                  );
             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF c_lines%ISOPEN THEN CLOSE c_lines; END IF;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RAISE FND_API.G_EXC_ERROR;
             END IF;

     /* Handle LTE outside the loop
         ELSIF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'LTE' THEN
           ZX_PRODUCT_INTEGRATION_PKG.import_document_with_tax(p_event_class_rec => p_event_class_rec,
                                                               x_return_status   => l_return_status
                                                              );
             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF c_lines%ISOPEN THEN CLOSE c_lines; END IF;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RETURN;
             END IF;
      */
         END IF; --TAX_METHOD_CODE

         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.tax_processing_completed_flag(l_trx_line_index) := 'Y';

	END IF; -- End of Bug fix 5524869

        EXCEPTION
          WHEN FND_API.G_EXC_ERROR THEN
            ROLLBACK TO Import_Doc;
            /*--------------------------------------------------------------+
             | Call procedure to populate all the attributes of plsql table |
             | structure ZX_Global_Structures_Pkg.trx_line_dist_tbl to NULL |
             | except key attributes at a index l_trx_line_index            |
             +--------------------------------------------------------------*/
            Pop_Index_Attrbs_To_Null ( p_index => l_trx_line_index,
                                       x_return_status => l_return_status);

            -- Commented call to dump error message into errors_gt table
            -- This will be handled in the API ZX_API_PUB.Import_Document_With_Tax
            -- ZX_API_PUB.dump_msg;
            l_flag := FALSE;
            IF ( G_LEVEL_ERROR >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_ERROR,G_MODULE_NAME||l_api_name,'');
            END IF;
        END; -- End of Bug fix 5524869

        --bug8265004
        l_line_level_indx1 := zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index);

        IF l_line_level_tbl1.EXISTS(l_line_level_indx1)
           AND l_line_level_tbl1(l_line_level_indx1).trx_id = zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index) THEN
          NULL;
        ELSE
          IF (zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION(l_trx_line_index) = 'CREATE'
             OR p_event_class_rec.perf_addnl_appl_for_imprt_flag = 'Y') AND
             (zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y') THEN
	           l_line_level_tbl1(l_line_level_indx1).trx_id := zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index);
             populate_ptnr_tax_regime_tbl;
          END IF;
        END IF;

          -- bug fix 5417887 begin
          IF zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index) <> l_trx_id THEN

             -- populate the lte_trx_tbl structure for LTE
             IF NVL(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'LTE'
             THEN
                 populate_lte_trx_tbl;
             END IF;

           /*---------------------------------------------------------+
            |  Initialize the tax regime PL/SQL strcture for every doc|
            +--------------------------------------------------------*/
            ZX_GLOBAL_STRUCTURES_PKG.init_tax_regime_tbl;
            -- ZX_GLOBAL_STRUCTURES_PKG.delete_trx_line_dist_tbl;

            l_trx_id := zx_global_structures_pkg.trx_line_dist_tbl.trx_id(l_trx_line_index);
            l_legal_entity_id := zx_global_structures_pkg.trx_line_dist_tbl.legal_entity_id(l_trx_line_index);
            l_trx_date := zx_global_structures_pkg.trx_line_dist_tbl.trx_date(l_trx_line_index);
            l_org_id := zx_global_structures_pkg.trx_line_dist_tbl.internal_organization_id(l_trx_line_index);
          END IF;
         -- bug fix 5417887 end

          -- bug 5730752
          IF ( ZX_TDS_CALC_SERVICES_PUB_PKG.g_detail_tax_lines_tbl.LAST >= 1000) THEN

             ZX_TDS_CALC_SERVICES_PUB_PKG.dump_detail_tax_lines_into_gt(x_return_status  => l_return_status );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status ;
                  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,G_PKG_NAME||': '||l_api_name||':ZX_TDS_CALC_SERVICES_PUB_PKG.dump_detail_tax_lines_into_gt returned errors');
                  END IF;
                  RETURN;
                END IF;
          END IF;
          -- end bug 5730752

       END LOOP;  --l_trx_line_index in 1 .. nvl(zx_global_structures_pkg.trx_line_dist_tbl.internal_organization_id.LAST,0)

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 'Completed the processing loop. Calling db_insert_line_det_factors..');
       END IF;

         /*Merge ruled out by performance due to record of table structure*/
         db_insert_line_det_factors (p_trx_line_dist_tbl  =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl,
                                    p_event_class_rec    =>  p_event_class_rec,
                                    p_insert_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.FIRST,
                                    x_return_status      =>  l_return_status
                                   );

         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
             END IF;
             RETURN;
         END IF;

     EXIT WHEN c_lines%NOTFOUND;

     -- bug 5683445
     ZX_GLOBAL_STRUCTURES_PKG.delete_trx_line_dist_tbl;
     -- bug 6343328
     ZX_GLOBAL_STRUCTURES_PKG.init_detail_tax_regime_tbl;

   END LOOP;

   CLOSE c_lines;

    -- Handle LTE tax method
      IF nvl(p_event_class_rec.TAX_METHOD_CODE,'EBTAX') = 'LTE' THEN
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN

                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 'Tax Method is LTE. Calling LTE in a loop ');
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' Looping over ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl. Number of records: '||
                    to_char(nvl(ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl.LAST,0)) );
           END IF;

           FOR l_trx_id_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl.LAST,-99)
           LOOP

            BEGIN -- Begin of Bug fix 5524869

               SAVEPOINT Import_Tax_LTE;

               l_event_class_rec.application_id   := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).application_id;
               l_event_class_rec.event_class_code := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).event_class_code;
               l_event_class_rec.entity_code      := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).entity_code;
               l_event_class_rec.trx_id           := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).trx_id;
               l_event_class_rec.event_type_code  := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).event_type_code;
               l_event_class_rec.record_flag      := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).record_flag;
               l_event_class_rec.quote_flag       := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).quote_flag;
               l_event_class_rec.prod_family_grp_code := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).prod_family_grp_code;
               l_event_class_rec.event_class_mapping_id := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).event_class_mapping_id;
               l_event_class_rec.record_for_partners_flag := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).record_for_partners_flag;
               l_event_class_rec.internal_organization_id := ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).internal_organization_id;

               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,
                   G_MODULE_NAME||l_api_name,
                   'processing trx_id:  ' ||
                   TO_CHAR(l_event_class_rec.trx_id));
               END IF;

               /*--------------------------------------------+
               |   Call to zx_security.set_security_context |
               +--------------------------------------------*/
               ZX_SECURITY.set_security_context(ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).legal_entity_id,
                                          ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).internal_organization_id,
                                          ZX_GLOBAL_STRUCTURES_PKG.lte_trx_tbl(l_trx_id_index).effective_date,
                                          l_return_status
                                          );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 RAISE FND_API.G_EXC_ERROR;
               END IF;

              call_lte( p_event_class_rec => l_event_class_rec,
                        p_calling_proc => 'IMPORT',
                        x_return_status   => l_return_status
                      );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 IF ( G_LEVEL_ERROR >= G_CURRENT_RUNTIME_LEVEL) THEN
                    FND_LOG.STRING(G_LEVEL_ERROR,G_MODULE_NAME||l_api_name,'Incorrect status returned by Call_lte. Return_Status'||x_return_status);
                 END IF;
                 IF l_return_status = FND_API.G_RET_STS_ERROR THEN
                    RAISE FND_API.G_EXC_ERROR;
                 ELSIF l_return_status = FND_API.G_RET_STS_UNEXP_ERROR THEN
                    RAISE FND_API.G_EXC_UNEXPECTED_ERROR;
                 END IF;
               END IF;

           EXCEPTION
                 WHEN FND_API.G_EXC_ERROR THEN
                   ROLLBACK TO Import_Tax_LTE;
                   IF ( G_LEVEL_ERROR >= G_CURRENT_RUNTIME_LEVEL) THEN
                      FND_LOG.STRING(G_LEVEL_ERROR,G_MODULE_NAME||l_api_name,'Deleting Records from Zx_Lines_Det_Factors for Trx_id : '||l_event_class_rec.trx_id );
                   END IF;

                   DELETE FROM zx_lines_det_factors
                   WHERE  application_id   = l_event_class_rec.application_id
                   AND    entity_code      = l_event_class_rec.entity_code
                   AND    event_class_code = l_event_class_rec.event_class_code
                   AND    trx_id           = l_event_class_rec.trx_id;

                   IF ( G_LEVEL_ERROR >= G_CURRENT_RUNTIME_LEVEL) THEN
                      FND_LOG.STRING(G_LEVEL_ERROR,G_MODULE_NAME||l_api_name,'Records Deleted : '||SQL%ROWCOUNT );
                   END IF;

                   -- Commented call to dump error message into errors_gt table
                   -- This will be handled in the API ZX_API_PUB.Import_Document_With_Tax
                   -- ZX_API_PUB.dump_msg;
           END; -- End of Bug fix 5524869

           ZX_GLOBAL_STRUCTURES_PKG.delete_trx_line_dist_tbl;

          END LOOP;

          -- if l_return_status from LTE returned error, it has
          -- been handled by the exception already, end of this
          -- loop set status to successful to commit other
          -- invoices that went through fine w/o error

          x_return_status := FND_API.G_RET_STS_SUCCESS;

     END IF;


    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN

       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 'Return Status from LTE : ' || l_return_status);
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 'g_ptnr_srvc_subscr_flag : '||
                 zx_global_structures_pkg.g_ptnr_srvc_subscr_flag );
     END IF;



   /**********************PARTNER CODE START ****************************/
    /* ---------------------------------------------------------------------+
     |  Check if partner applicable to call partner related routines        |
     + ---------------------------------------------------------------------*/

    IF (zx_global_structures_pkg.g_ptnr_srvc_subscr_flag = 'Y' AND
        NVL(p_event_class_rec.TAX_METHOD_CODE,'X') <> 'LTE' ) THEN
       -- call only ptnr_bulk_calc_tax_pvt is all cases
       -- bug#7199139
       --IF zx_global_structures_pkg.g_event_class_rec.tax_event_type_code = 'UPDATE' THEN
       --   ptnr_calculate_tax_pvt(p_event_class_rec   => zx_global_structures_pkg.g_event_class_rec,
       --                          x_return_status     => l_return_status
       --                         );
       --ELSE
          ptnr_bulk_calc_tax_pvt(x_return_status   => l_return_status);
       --END IF;
       -- Start : Code added by ssohal
       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
         x_return_status := l_return_status;
         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
         END IF;
         RETURN;
       END IF;
       -- End : Code added by ssohal
    END IF;


    /*******************************PARTNER CODE END ****************************/

   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||
       ' RETURN_STATUS = ' || x_return_status);
   END IF;

   EXCEPTION
    WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF c_lines%ISOPEN THEN CLOSE c_lines; END IF;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
  END import;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  override_summary_tax_lines
--
--  DESCRIPTION
--  Override_tax processing
--
--  CALLED BY
--    override_tax_lines
-----------------------------------------------------------------------
 PROCEDURE override_summary_tax_lines
  ( p_event_class_rec IN OUT NOCOPY ZX_API_PUB.EVENT_CLASS_REC_TYPE ,
    x_return_status   OUT    NOCOPY VARCHAR2
  ) IS
  l_api_name                    CONSTANT VARCHAR2(30) := 'OVERRIDE_SUMMARY_TAX_LINES';
  l_trx_line_index              BINARY_INTEGER;
  l_tax_prof_id                 NUMBER;
  l_return_status               VARCHAR2(30);
  l_context_info_rec            ZX_API_PUB.context_info_rec_type;
 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   OPEN get_overridden_lines(p_event_class_rec.event_id);
   LOOP
      FETCH get_overridden_lines BULK COLLECT INTO
           zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION,
           zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT,
           zx_global_structures_pkg.trx_line_dist_tbl.PRECISION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_MAU,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_PRECISION,
           zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY ,
           zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE,
           zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON,
           zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID,
           zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR1,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR2,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR3,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR4,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR5,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR6,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR7,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR8,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR9,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR10,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE1,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE2,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE3,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE4,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE5,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE6,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE7,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE8,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE9,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE10,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY1,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY2,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY3,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY4,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY5,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY6,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY1,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY2,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY3,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY4,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY5,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY6,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10,
           zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY,
           zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE1,
           zx_global_structures_pkg.trx_line_dist_tbl.TOTAL_INC_TAX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG
      LIMIT G_LINES_PER_FETCH;

      FOR l_trx_line_index IN 1..nvl(zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID.LAST,0)
      LOOP
       /* =============================================================================*
       |Initialize the global structures/global temp tables owned by TDM at Line level |
       * ==============================================================================*/
        ZX_TDS_CALC_SERVICES_PUB_PKG.initialize (p_event_class_rec ,
                                                 'LINE'            ,
                                                 l_return_status
                                                );
        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF get_overridden_lines%ISOPEN THEN CLOSE get_overridden_lines; END IF;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
              ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;

       /*------------------------------------------------------------------------+
       |  Override Summary Tax Lines                                             |
       + ------------------------------------------------------------------------*/

        --Pass the tax event type code derived into event class rec instead of that fetched from zx_lines_det_factors
        zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE(l_trx_line_index):=p_event_class_rec.tax_event_type_code;

        ZX_TDS_CALC_SERVICES_PUB_PKG.override_summary_tax_lines(l_trx_line_index
                                                               ,p_event_class_rec
                                                               ,l_return_status
                                                               );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF get_overridden_lines%ISOPEN THEN CLOSE get_overridden_lines; END IF;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
              ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;

      END LOOP;
     EXIT WHEN get_overridden_lines%NOTFOUND;
   END LOOP;
   CLOSE get_overridden_lines;

    IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
        G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
    END IF;

   EXCEPTION
    WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF get_overridden_lines%ISOPEN THEN CLOSE get_overridden_lines; END IF;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
   END override_summary_tax_lines;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--  override_detail_tax_lines
--
--  DESCRIPTION
--  Override_tax processing
--
--  CALLED BY
--    override_tax_lines
-----------------------------------------------------------------------
 PROCEDURE override_detail_tax_lines
   ( p_event_class_rec IN OUT NOCOPY ZX_API_PUB.EVENT_CLASS_REC_TYPE ,
     x_return_status   OUT    NOCOPY VARCHAR2
   ) IS
   l_api_name                    CONSTANT VARCHAR2(30):= 'OVERRIDE_DETAIL_TAX_LINES';
   l_trx_line_index              BINARY_INTEGER;
   l_tax_prof_id                 NUMBER;
   l_return_status               VARCHAR2(30);
   l_context_info_rec            ZX_API_PUB.context_info_rec_type;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   OPEN get_overridden_lines(p_event_class_rec.event_id);
    LOOP
      FETCH get_overridden_lines BULK COLLECT INTO
           zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION,
           zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT,
           zx_global_structures_pkg.trx_line_dist_tbl.PRECISION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_MAU,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_PRECISION,
           zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT ,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY ,
           zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION,
           zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY ,
           zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE,
           zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT,
           zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON,
           zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID,
           zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9,
           zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR1,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR2,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR3,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR4,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR5,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR6,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR7,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR8,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR9,
           zx_global_structures_pkg.trx_line_dist_tbl.CHAR10,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE1,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE2,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE3,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE4,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE5,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE6,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE7,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE8,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE9,
           zx_global_structures_pkg.trx_line_dist_tbl.DATE10,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID ,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE,
           zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE,
           zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY1,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY2,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY3,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY4,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY5,
           zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY6,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY1,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY2,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY3,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY4,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY5,
           zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY6,
           zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG,
           zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_ENTITY_CODE,
           zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_LINE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9,
           zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10,
           zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID,
           zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY,
           zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE1,
           zx_global_structures_pkg.trx_line_dist_tbl.TOTAL_INC_TAX_AMT,
           zx_global_structures_pkg.trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG
      LIMIT G_LINES_PER_FETCH;

      FOR l_trx_line_index in 1 .. nvl(zx_global_structures_pkg.trx_line_dist_tbl.internal_organization_id.LAST,0)
      LOOP
       /* =============================================================================*
       |Initialize the global structures/global temp tables owned by TDM at Line level |
       * ==============================================================================*/

        ZX_TDS_CALC_SERVICES_PUB_PKG.initialize (p_event_class_rec ,
                                                 'LINE'            ,
                                                 l_return_status
                                                );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF get_overridden_lines%ISOPEN THEN CLOSE get_overridden_lines; END IF;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;


       /* -----------------------------------------------------------------+
        |  Call TDS routine to override the detail tax lines               |
        |                                                                  |
        + -----------------------------------------------------------------*/
         --Pass the tax event type code derived into event class rec instead of that fetched from zx_lines_det_factors
         zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE(l_trx_line_index):=p_event_class_rec.tax_event_type_code;

         ZX_TDS_CALC_SERVICES_PUB_PKG.override_detail_tax_lines(l_trx_line_index
                                                               ,p_event_class_rec
                                                               ,l_return_status
                                                               );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF get_overridden_lines%ISOPEN THEN CLOSE get_overridden_lines; END IF;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
          END IF;

        END LOOP;
       EXIT WHEN get_overridden_lines%NOTFOUND;
    END LOOP;
    CLOSE get_overridden_lines;

    IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
        G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
    END IF;

   EXCEPTION
    WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF get_overridden_lines%ISOPEN THEN CLOSE get_overridden_lines; END IF;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
   END override_detail_tax_lines;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  override_tax_lines
--
--  DESCRIPTION
--  Wrapper procedure to call the procedures to override detail and summary tax lines
--
--  CALLED BY
--    ZX_API_PUB.override_tax
-----------------------------------------------------------------------
 PROCEDURE override_tax_lines(
 p_event_class_rec IN  OUT NOCOPY ZX_API_PUB.EVENT_CLASS_REC_TYPE ,
 p_override_level  IN  VARCHAR2,
 x_return_status   OUT NOCOPY VARCHAR2
 ) IS
  l_api_name                    CONSTANT VARCHAR2(30) := 'OVERRIDE_TAX_LINES';
  l_return_status               VARCHAR2(30);
  l_context_info_rec            ZX_API_PUB.context_info_rec_type;
  l_ptnr_tax_lines_insert       NUMBER;    -- Bug 5332192

  /* Get all the tax lines inserted during override_tax_lines for external tax provider */
 CURSOR dtl_tax_lines_csr(p_event_class_rec ZX_API_PUB.event_class_rec_type) IS
 SELECT distinct
        zdtlg.tax_regime_id,
        zdtlg.tax_regime_code,
        zdtlg.tax_provider_id,
        regimes.effective_from,
        regimes.effective_to
   FROM ZX_DETAIL_TAX_LINES_GT zdtlg,
        ZX_REGIMES_B regimes
   WHERE zdtlg.application_id = p_event_class_rec.application_id
     AND zdtlg.entity_code = p_event_class_rec.entity_code
     AND zdtlg.event_class_code = p_event_class_rec.event_class_code
     AND zdtlg.trx_id = p_event_class_rec.trx_id
     AND regimes.tax_regime_id = zdtlg.tax_regime_id;

 dtl_tax_lines_rec  dtl_tax_lines_csr%ROWTYPE;


 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   /*--------------------------------------------------+
    |   Call Service Type Override Summary or Override |
    |   Detail Tax Lines depending of the overriding   |
    |   level.                                         |
    +--------------------------------------------------*/
    IF p_override_level = 'SUMMARY_OVERRIDE' THEN
       override_summary_tax_lines(p_event_class_rec,
                                  l_return_status
                                  );
       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
         x_return_status := l_return_status;
         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' RETURN_STATUS = ' || x_return_status);
         END IF;
         RETURN;
       END IF;
     ELSIF p_override_level = 'DETAIL_OVERRIDE' THEN
       override_detail_tax_lines(p_event_class_rec,
                                 l_return_status
                                );
       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
         x_return_status := l_return_status;
         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' RETURN_STATUS = ' || x_return_status);
         END IF;
         RETURN;
       END IF;
     END IF;
     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       RETURN;
     END IF;

     /****************************PARTNER CODE START****************/
     IF p_event_class_rec.record_flag ='Y' AND
        p_event_class_rec.record_for_partners_flag = 'Y' THEN

        /*Commented due to GSCC error - need to provide all column names for insert
        INSERT INTO ZX_DETAIL_TAX_LINES_GT
   	     SELECT * from ZX_LINES
	     WHERE application_id = p_event_class_rec.application_id
             AND entity_code = p_event_class_rec.entity_code
             AND event_class_code = p_event_class_rec.event_class_code
             AND trx_id = p_event_class_rec.trx_id
    	     AND tax_provider_id is not null;
        */
        insert_detail_tax_lines_gt(p_event_class_rec => p_event_class_rec,
                                   p_sync_with_prvdr_flag => 'Y',
                                   p_ptnr_tax_lines_insert => l_ptnr_tax_lines_insert,
                                   x_return_status   => l_return_status
                                   );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
        END IF;

        IF l_ptnr_tax_lines_insert = 0 THEN
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' No Tax Partner line needs to be synchronized.');
            END IF;
            RETURN;
        END IF;

        FOR dtl_tax_lines_rec IN dtl_tax_lines_csr(p_event_class_rec)
        LOOP
          IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(dtl_tax_lines_rec.tax_regime_id) THEN
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(dtl_tax_lines_rec.tax_regime_id).tax_regime_id := dtl_tax_lines_rec.tax_regime_id;
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(dtl_tax_lines_rec.tax_regime_id).tax_regime_code := dtl_tax_lines_rec.tax_regime_code;
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(dtl_tax_lines_rec.tax_regime_id).tax_provider_id := dtl_tax_lines_rec.tax_provider_id;
/* Bug 5557565 */
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(dtl_tax_lines_rec.tax_regime_id).effective_from := dtl_tax_lines_rec.effective_from;
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(dtl_tax_lines_rec.tax_regime_id).effective_to := dtl_tax_lines_rec.effective_to;
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(dtl_tax_lines_rec.tax_regime_id).partner_processing_flag := 'S';
          END IF;
        END LOOP;

        FOR l_regime_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.LAST,-99)


        LOOP
         IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(l_regime_index) AND
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id is not null THEN

/* Bug 5382069 */
            ZX_TPI_SERVICES_PKG.partner_pre_processing (
                                p_tax_regime_id        => l_regime_index
                              , p_tax_regime_code      => ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code
                              , p_tax_provider_id      => ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id
                              , p_ptnr_processing_flag => ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag
                              , p_event_class_rec      => p_event_class_rec
                              , x_return_status        => l_return_status);

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
            END IF;

            ZX_TPI_SERVICES_PKG.derive_ext_attrs (p_event_class_rec,
                                                  ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                  ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                  'DERIVE_HDR_ATTRS',
                                                  l_return_status
                                                 );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
            END IF;

            ZX_TPI_SERVICES_PKG.call_partner_service(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                     ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                     'SYNCHRONIZE_FOR_TAX',
                                                     p_event_class_rec,
                                                     l_return_status
    	                                             );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
            END IF;

            ZX_TPI_SERVICES_PKG.ptnr_post_proc_sync_tax(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                        ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                        p_event_class_rec,
    	                                                l_return_status
                                                       );

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
            END IF;
          END IF;--tax_provider_id is not null
        END LOOP;
      END IF;  --recording flag

     /* RE-INITIALISE SYNCHRONIZATION FLAG in ZX_LINES TO 'N' */
     zx_lines_table_handler(p_event_class_rec  => p_event_class_rec,
                            p_event            => 'UPDATE',
                            p_tax_regime_code  => null,
                            p_provider_id      => null,
                            x_return_status    => l_return_status
                           );

     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
           ' RETURN_STATUS = ' || x_return_status);
       END IF;
       RETURN;
     END IF;

     /*	The deleted tax lines are inserted into ZX_DETAIL_TAX_LINES_GT
        for tax lines synchronization view needed for partner service.
        But, eBTax service ZX_TRL_MANAGE_TAX_PKG.Create_Detail_Lines
        creates tax lines for the records remaining in the
        ZX_DETAIL_TAX_LINES_GT. This results in tax line not getting
        deleted from zx_lines when partner created tax line is deleted.
        Hence, following delete is being issued. */

     BEGIN
       DELETE FROM ZX_DETAIL_TAX_LINES_GT
        WHERE application_id   = p_event_class_rec.application_id
          AND entity_code      = p_event_class_rec.entity_code
          AND event_class_code = p_event_class_rec.event_class_code
          AND trx_id           = p_event_class_rec.trx_id
          AND delete_flag      = 'Y';
     END;
     /***********************PARTNER CODE END***************************/

     /*	If the user has overridden the inclusive tax, then the actual line amount portion is
	    also changed as the included tax in the line amount is changed. This change must be
		communicated to the partner(s) involved as line UPDATE scenario */

     partner_inclusive_tax_override(p_event_class_rec,
                                    l_return_status
                                    );

     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' RETURN_STATUS = ' || x_return_status);
       END IF;
       RETURN;
     END IF;

     IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
         G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
     END IF;

 EXCEPTION
    WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
 END override_tax_lines;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  document_level_changes
--
--  DESCRIPTION
--  global_document_update processing
--
--  CALLED BY
--    ZX_API_PUB.global_document_update
-----------------------------------------------------------------------
 PROCEDURE document_level_changes
  ( x_return_status          OUT NOCOPY VARCHAR2 ,
    p_event_class_rec        IN         ZX_API_PUB.event_class_rec_type ,
    p_tax_hold_released_code IN         ZX_API_PUB.validation_status_tbl_type
  ) IS
  l_api_name              CONSTANT VARCHAR2(30):= 'DOCUMENT_LEVEL_CHANGES';
  l_return_status         VARCHAR2(30);
  l_context_info_rec      ZX_API_PUB.context_info_rec_type;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

  /* --------------------------------------------------------------------------------+
   |For tax event type UNFREEZE FOR TAX, confirmation from partner is first required |
   |since partner may have already reported tax to authority. Hence call to TRL      |
   |process is defferred till after partner processing for this case                 |
   + -------------------------------------------------------------------------------*/

  /* -------------------------------------------------------+
   |  Document level changes                                |
   + -------------------------------------------------------*/
   IF p_event_class_rec.tax_event_type_code <> 'UNFREEZE_FOR_TAX' THEN    -- Bug 5200373
     ZX_TRL_PUB_PKG.document_level_changes(l_return_status,
                                           p_event_class_rec,
                                           p_tax_hold_released_code
                                          );

     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
           ' RETURN_STATUS = ' || x_return_status);
       END IF;
       RETURN;
     END IF;
    END IF;

     /****************************PARTNER CODE START****************/
     IF p_event_class_rec.record_flag ='Y' AND
        p_event_class_rec.record_for_partners_flag = 'Y' THEN
        FOR app_tax_lines IN app_tax_lines_csr(p_event_class_rec)    -- Bug 5200373
        LOOP
          IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(app_tax_lines.tax_regime_id) THEN
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_regime_id := app_tax_lines.tax_regime_id;
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_regime_code := app_tax_lines.tax_regime_code;
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_provider_id := app_tax_lines.tax_provider_id;
/* Bug 5557565 */
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).effective_from := app_tax_lines.effective_from;
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).effective_to := app_tax_lines.effective_to;
            ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).partner_processing_flag := 'C';
          END IF;
          --Bug 8532463
          ZX_TPI_SERVICES_PKG.call_partner_service(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_regime_code,
                                                     ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_provider_id,
                                                     'DOCUMENT_LEVEL_CHANGES',   -- Bug 5200373
                                                     p_event_class_rec,
                                                     l_return_status
       	                                           );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                 ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
          END IF;
        END LOOP;
     END IF;  --recording flag

  /* -------------------------------------------------------+
   |  Document level changes                                |
   + -------------------------------------------------------*/
   IF p_event_class_rec.tax_event_type_code = 'UNFREEZE_FOR_TAX' THEN    -- Bug 5200373
     ZX_TRL_PUB_PKG.document_level_changes(l_return_status,
                                           p_event_class_rec,
                                           p_tax_hold_released_code
                                          );

     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
           ' RETURN_STATUS = ' || x_return_status);
       END IF;
       RETURN;
     END IF;
   END IF;

   /***********************PARTNER CODE END***************************/
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

 EXCEPTION
   WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
  END document_level_changes;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  Mark_Tax_Lines_Deleted
--
--  DESCRIPTION
--  Mark_Tax_Lines_Deleted processing
--
--  CALLED BY
--    ZX_API_PUB.Mark_Tax_Lines_Deleted
-----------------------------------------------------------------------
 PROCEDURE mark_tax_lines_deleted (
   p_trx_line_rec  IN         ZX_API_PUB.TRANSACTION_LINE_REC_TYPE ,
   x_return_status OUT NOCOPY VARCHAR2
 ) IS
 l_api_name          CONSTANT VARCHAR2(30) := 'MARK_TAX_LINES_DELETED';
 l_return_status     VARCHAR2(30);
 l_context_info_rec  ZX_API_PUB.context_info_rec_type;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

  /* -------------------------------------------------------+
   |  Mark Tax Lines Delete                                 |
   + -------------------------------------------------------*/
   ZX_TRL_PUB_PKG.mark_tax_lines_delete(l_return_status,p_trx_line_rec);

   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
           ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;

   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

 EXCEPTION
   WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
   END mark_tax_lines_deleted;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  reverse_document
--
--  DESCRIPTION
--  Negate the line amount and line quantity and store into zx_lines_det_factors
--
--  CALLED BY
--    ZX_API_PUB.reverse_document
-----------------------------------------------------------------------
 PROCEDURE reverse_document
  ( p_event_class_rec   IN         ZX_API_PUB.event_class_rec_type,
    x_return_status     OUT NOCOPY VARCHAR2
  ) IS
  l_api_name              CONSTANT VARCHAR2(30):= 'REVERSE_DOCUMENT';
  l_return_status         VARCHAR2(30);
  l_context_info_rec      ZX_API_PUB.context_info_rec_type;
  l_location_type_tbl     ZX_TCM_GEO_JUR_PKG.location_type_tbl_type;
  l_location_id_tbl       ZX_TCM_GEO_JUR_PKG.location_id_tbl_type;
  l_ptnr_tax_lines_insert NUMBER;      -- Bug 5332192
  i                       NUMBER;

 CURSOR get_rev_info_csr IS
   SELECT zl.INTERNAL_ORGANIZATION_ID               ,
          zrtlgt.REVERSING_APPLN_ID                 ,
          zrtlgt.REVERSING_ENTITY_CODE              ,
          zrtlgt.REVERSING_EVNT_CLS_CODE            ,
          zl.EVENT_TYPE_CODE                        ,
          zrtlgt.REVERSING_TRX_ID                   ,
          zrtlgt.REVERSING_TRX_LEVEL_TYPE           ,
          zrtlgt.REVERSING_TRX_LINE_ID              ,
          zl.LINE_LEVEL_ACTION                      ,
          zl.LINE_CLASS                             ,
          zl.TRX_DATE                               ,
          zl.TRX_DOC_REVISION                       ,
          zl.LEDGER_ID                              ,
          zl.TRX_CURRENCY_CODE                      ,
          zl.CURRENCY_CONVERSION_DATE               ,
          zl.CURRENCY_CONVERSION_RATE               ,
          zl.CURRENCY_CONVERSION_TYPE               ,
          zl.MINIMUM_ACCOUNTABLE_UNIT               ,
          zl.PRECISION                              ,
          zl.TRX_LINE_CURRENCY_CODE                 ,
          zl.TRX_LINE_CURRENCY_CONV_DATE            ,
          zl.TRX_LINE_CURRENCY_CONV_RATE            ,
          zl.TRX_LINE_CURRENCY_CONV_TYPE            ,
          zl.TRX_LINE_MAU                           ,
          zl.TRX_LINE_PRECISION                     ,
          zl.TRX_SHIPPING_DATE                      ,
          zl.TRX_RECEIPT_DATE                       ,
          zl.LEGAL_ENTITY_ID                        ,
          zl.ESTABLISHMENT_ID                       ,
          zl.TRX_LINE_TYPE                          ,
          zl.TRX_LINE_DATE                          ,
          zl.TRX_BUSINESS_CATEGORY                  ,
          zl.LINE_INTENDED_USE                      ,
          zl.USER_DEFINED_FISC_CLASS                ,
          -zl.LINE_AMT                              ,
          -zl.TRX_LINE_QUANTITY                     ,
          zl.UNIT_PRICE                             ,
          zl.EXEMPT_CERTIFICATE_NUMBER              ,
          zl.EXEMPT_REASON                          ,
          zl.CASH_DISCOUNT                          ,
          zl.VOLUME_DISCOUNT                        ,
          zl.TRADING_DISCOUNT                       ,
          zl.TRANSFER_CHARGE                        ,
          zl.TRANSPORTATION_CHARGE                  ,
          zl.INSURANCE_CHARGE                       ,
          zl.OTHER_CHARGE                           ,
          zl.PRODUCT_ID                             ,
          zl.PRODUCT_FISC_CLASSIFICATION            ,
          zl.PRODUCT_ORG_ID                         ,
          zl.UOM_CODE                               ,
          zl.PRODUCT_TYPE                           ,
          zl.PRODUCT_CODE                           ,
          zl.PRODUCT_CATEGORY                       ,
          zl.TRX_SIC_CODE                           ,
          zl.FOB_POINT                              ,
          zl.SHIP_TO_LOCATION_ID                    ,
          zl.SHIP_FROM_LOCATION_ID                  ,
          zl.POA_LOCATION_ID                        ,
          zl.POO_LOCATION_ID                        ,
          zl.BILL_TO_LOCATION_ID                    ,
          zl.BILL_FROM_LOCATION_ID                  ,
          zl.ACCOUNT_CCID                           ,
          zl.ACCOUNT_STRING                         ,
          zl.MERCHANT_PARTY_COUNTRY                 ,
          zl.RECEIVABLES_TRX_TYPE_ID                ,
          zl.REF_DOC_APPLICATION_ID                 ,
          zl.REF_DOC_ENTITY_CODE                    ,
          zl.REF_DOC_EVENT_CLASS_CODE               ,
          zl.REF_DOC_TRX_ID                         ,
          zl.REF_DOC_LINE_ID                        ,
          zl.REF_DOC_LINE_QUANTITY                  ,
          zl.RELATED_DOC_APPLICATION_ID             ,
          zl.RELATED_DOC_ENTITY_CODE                ,
          zl.RELATED_DOC_EVENT_CLASS_CODE           ,
          zl.RELATED_DOC_TRX_ID                     ,
          zl.RELATED_DOC_NUMBER                     ,
          zl.RELATED_DOC_DATE                       ,
          zl.ADJUSTED_DOC_NUMBER                    ,
          zl.ADJUSTED_DOC_DATE                      ,
          zl.APPLIED_TO_APPLICATION_ID              ,
          zl.APPLIED_TO_ENTITY_CODE                 ,
          zl.APPLIED_TO_EVENT_CLASS_CODE            ,
          zl.APPLIED_TO_TRX_ID                      ,
          zl.APPLIED_TO_TRX_LINE_ID                 ,
          zl.TRX_ID_LEVEL2                          ,
          zl.TRX_ID_LEVEL3                          ,
          zl.TRX_ID_LEVEL4                          ,
          zl.TRX_ID_LEVEL5                          ,
          zl.TRX_ID_LEVEL6                          ,
          zrthgt.TRX_NUMBER                         ,
          zrthgt.TRX_DESCRIPTION                    ,
          zl.TRX_LINE_NUMBER                        ,
          zrtlgt.TRX_LINE_DESCRIPTION               ,
          zrtlgt.PRODUCT_DESCRIPTION                ,
          zrtlgt.TRX_WAYBILL_NUMBER                 ,
          zrthgt.TRX_COMMUNICATED_DATE              ,
          zrtlgt.TRX_LINE_GL_DATE                   ,
          zrthgt.BATCH_SOURCE_ID                    ,
          zrthgt.BATCH_SOURCE_NAME                  ,
          zrthgt.DOC_SEQ_ID                         ,
          zrthgt.DOC_SEQ_NAME                       ,
          zrthgt.DOC_SEQ_VALUE                      ,
          zrthgt.TRX_DUE_DATE                       ,
          zrthgt.TRX_TYPE_DESCRIPTION               ,
          zl.MERCHANT_PARTY_NAME                    ,
          zl.MERCHANT_PARTY_DOCUMENT_NUMBER         ,
          zl.MERCHANT_PARTY_REFERENCE               ,
          zl.MERCHANT_PARTY_TAXPAYER_ID             ,
          zl.MERCHANT_PARTY_TAX_REG_NUMBER          ,
          zl.PAYING_LOCATION_ID                     ,
          zl.OWN_HQ_LOCATION_ID                     ,
          zl.TRADING_HQ_LOCATION_ID                 ,
          zl.POC_LOCATION_ID                        ,
          zl.POI_LOCATION_ID                        ,
          zl.POD_LOCATION_ID                        ,
          zl.TITLE_TRANSFER_LOCATION_ID             ,
          zl.ASSESSABLE_VALUE                       ,
          zl.ASSET_FLAG                             ,
          zl.ASSET_NUMBER                           ,
          zl.ASSET_ACCUM_DEPRECIATION               ,
          zl.ASSET_TYPE                             ,
          zl.ASSET_COST                             ,
          zl.NUMERIC1                               ,
          zl.NUMERIC2                               ,
          zl.NUMERIC3                               ,
          zl.NUMERIC4                               ,
          zl.NUMERIC5                               ,
          zl.NUMERIC6                               ,
          zl.NUMERIC7                               ,
          zl.NUMERIC8                               ,
          zl.NUMERIC9                               ,
          zl.NUMERIC10                              ,
          zl.CHAR1                                  ,
          zl.CHAR2                                  ,
          zl.CHAR3                                  ,
          zl.CHAR4                                  ,
          zl.CHAR5                                  ,
          zl.CHAR6                                  ,
          zl.CHAR7                                  ,
          zl.CHAR8                                  ,
          zl.CHAR9                                  ,
          zl.CHAR10                                 ,
          zl.DATE1                                  ,
          zl.DATE2                                  ,
          zl.DATE3                                  ,
          zl.DATE4                                  ,
          zl.DATE5                                  ,
          zl.DATE6                                  ,
          zl.DATE7                                  ,
          zl.DATE8                                  ,
          zl.DATE9                                  ,
          zl.DATE10                                 ,
          zl.FIRST_PTY_ORG_ID                       ,
          zl.TAX_EVENT_CLASS_CODE                   ,
          zl.TAX_EVENT_TYPE_CODE                    ,
          zl.DOC_EVENT_STATUS                       ,
          zl.RDNG_SHIP_TO_PTY_TX_PROF_ID            ,
          zl.RDNG_SHIP_FROM_PTY_TX_PROF_ID          ,
          zl.RDNG_BILL_TO_PTY_TX_PROF_ID            ,
          zl.RDNG_BILL_FROM_PTY_TX_PROF_ID          ,
          zl.RDNG_SHIP_TO_PTY_TX_P_ST_ID            ,
          zl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID          ,
          zl.RDNG_BILL_TO_PTY_TX_P_ST_ID            ,
          zl.RDNG_BILL_FROM_PTY_TX_P_ST_ID          ,
          zl.SHIP_TO_PARTY_TAX_PROF_ID              ,
          zl.SHIP_FROM_PARTY_TAX_PROF_ID            ,
          zl.POA_PARTY_TAX_PROF_ID                  ,
          zl.POO_PARTY_TAX_PROF_ID                  ,
          zl.PAYING_PARTY_TAX_PROF_ID               ,
          zl.OWN_HQ_PARTY_TAX_PROF_ID               ,
          zl.TRADING_HQ_PARTY_TAX_PROF_ID           ,
          zl.POI_PARTY_TAX_PROF_ID                  ,
          zl.POD_PARTY_TAX_PROF_ID                  ,
          zl.BILL_TO_PARTY_TAX_PROF_ID              ,
          zl.BILL_FROM_PARTY_TAX_PROF_ID            ,
          zl.TITLE_TRANS_PARTY_TAX_PROF_ID          ,
          zl.SHIP_TO_SITE_TAX_PROF_ID               ,
          zl.SHIP_FROM_SITE_TAX_PROF_ID             ,
          zl.POA_SITE_TAX_PROF_ID                   ,
          zl.POO_SITE_TAX_PROF_ID                   ,
          zl.PAYING_SITE_TAX_PROF_ID                ,
          zl.OWN_HQ_SITE_TAX_PROF_ID                ,
          zl.TRADING_HQ_SITE_TAX_PROF_ID            ,
          zl.POI_SITE_TAX_PROF_ID                   ,
          zl.POD_SITE_TAX_PROF_ID                   ,
          zl.BILL_TO_SITE_TAX_PROF_ID               ,
          zl.BILL_FROM_SITE_TAX_PROF_ID             ,
          zl.TITLE_TRANS_SITE_TAX_PROF_ID           ,
          zl.MERCHANT_PARTY_TAX_PROF_ID             ,
          zrthgt.DOCUMENT_SUB_TYPE                  ,
          zrthgt.SUPPLIER_TAX_INVOICE_NUMBER        ,
          zrthgt.SUPPLIER_TAX_INVOICE_DATE          ,
          zrthgt.SUPPLIER_EXCHANGE_RATE             ,
          zrthgt.TAX_INVOICE_DATE                   ,
          zrthgt.TAX_INVOICE_NUMBER                 ,
          zl.LINE_AMT_INCLUDES_TAX_FLAG             ,
          zl.DEFAULT_TAXATION_COUNTRY               ,
          zl.HISTORICAL_FLAG                        ,
          zl.INTERNAL_ORG_LOCATION_ID               ,
          zl.CTRL_HDR_TX_APPL_FLAG                  ,
          zl.CTRL_TOTAL_HDR_TX_AMT                  ,
          zl.CTRL_TOTAL_LINE_TX_AMT                 ,
          zl.PORT_OF_ENTRY_CODE                     ,
          zl.TAX_REPORTING_FLAG                     ,
          zl.INPUT_TAX_CLASSIFICATION_CODE          ,
          zl.OUTPUT_TAX_CLASSIFICATION_CODE         ,
          null TAX_AMT_REPORTING_FLAG               ,
          null COMPOUNDING_TAX_FLAG                 ,
          zl.SHIP_THIRD_PTY_ACCT_SITE_ID            ,
          zl.BILL_THIRD_PTY_ACCT_SITE_ID            ,
          zl.SHIP_TO_CUST_ACCT_SITE_USE_ID          ,
          zl.BILL_TO_CUST_ACCT_SITE_USE_ID          ,
          null DIST_LEVEL_ACTION                    ,
          to_number(null) ADJUSTED_DOC_TASK_DIST_ID ,
          to_number(null) APPLIED_FROM_TAX_DIST_ID  ,
          to_number(null) TASK_ID                   ,
          to_number(null) AWARD_ID                  ,
          to_number(null) PROJECT_ID                ,
          null EXPENDITURE_TYPE                     ,
          to_number(null) EXPENDITURE_ORGANIZATION_ID ,
          null EXPENDITURE_ITEM_DATE                ,
          to_number(null) TRX_LINE_DIST_AMT         ,
          to_number(null) TRX_LINE_DIST_QUANTITY    ,
          to_number(null) REF_DOC_CURR_CONV_RATE    ,
          to_number(null) ITEM_DIST_NUMBER          ,
          to_number(null) REF_DOC_DIST_ID           ,
          to_number(null) TRX_LINE_DIST_TAX_AMT     ,
          to_number(null) TRX_LINE_DIST_ID          ,
          APPLIED_FROM_APPLICATION_ID               ,
          APPLIED_FROM_EVENT_CLASS_CODE             ,
          APPLIED_FROM_ENTITY_CODE                  ,
          APPLIED_FROM_TRX_ID                       ,
          APPLIED_FROM_LINE_ID                      ,
          APPLIED_FROM_TRX_NUMBER                   ,
          to_number(null) APPLIED_FROM_DIST_ID      ,
          ADJUSTED_DOC_APPLICATION_ID               ,
          ADJUSTED_DOC_EVENT_CLASS_CODE             ,
          ADJUSTED_DOC_ENTITY_CODE                  ,
          ADJUSTED_DOC_TRX_ID                       ,
          ADJUSTED_DOC_LINE_ID                      ,
          to_number(null) ADJUSTED_DOC_DIST_ID      ,
          zl.SOURCE_APPLICATION_ID                  ,
          zl.SOURCE_ENTITY_CODE                     ,
          zl.SOURCE_EVENT_CLASS_CODE                ,
          zl.SOURCE_TRX_ID                          ,
          zl.SOURCE_LINE_ID                         ,
          zl.SOURCE_TRX_LEVEL_TYPE                  ,
          zl.SOURCE_TAX_LINE_ID                     ,
          zl.REF_DOC_TRX_LEVEL_TYPE                 ,
          zl.APPLIED_TO_TRX_LEVEL_TYPE              ,
          zl.APPLIED_FROM_TRX_LEVEL_TYPE            ,
          zl.ADJUSTED_DOC_TRX_LEVEL_TYPE            ,
          zl.APPLICATION_DOC_STATUS                 ,
          zl.HDR_TRX_USER_KEY1                      ,
          zl.HDR_TRX_USER_KEY2                      ,
          zl.HDR_TRX_USER_KEY3                      ,
          zl.HDR_TRX_USER_KEY4                      ,
          zl.HDR_TRX_USER_KEY5                      ,
          zl.HDR_TRX_USER_KEY6                      ,
          zl.LINE_TRX_USER_KEY1                     ,
          zl.LINE_TRX_USER_KEY2                     ,
          zl.LINE_TRX_USER_KEY3                     ,
          zl.LINE_TRX_USER_KEY4                     ,
          zl.LINE_TRX_USER_KEY5                     ,
          zl.LINE_TRX_USER_KEY6                     ,
          zrtlgt.REVERSED_APPLN_ID                  ,
          zrtlgt.REVERSED_ENTITY_CODE               ,
          zrtlgt.REVERSED_EVNT_CLS_CODE             ,
          zrtlgt.REVERSED_TRX_ID                    ,
          zrtlgt.REVERSED_TRX_LINE_ID               ,
          zrtlgt.REVERSED_TRX_LEVEL_TYPE            ,
          zl.EXEMPTION_CONTROL_FLAG                 ,
          zl.TAX_CALCULATION_DONE_FLAG              ,
          zl.TAX_PROCESSING_COMPLETED_FLAG          ,
          zl.USER_UPD_DET_FACTORS_FLAG              ,
          zl.EXEMPT_REASON_CODE                     ,
          zl.INTERFACE_ENTITY_CODE                  ,
          zl.INTERFACE_LINE_ID                      ,
          zl.DEFAULTING_ATTRIBUTE1                  ,
          zl.DEFAULTING_ATTRIBUTE2                  ,
          zl.DEFAULTING_ATTRIBUTE3                  ,
          zl.DEFAULTING_ATTRIBUTE4                  ,
          zl.DEFAULTING_ATTRIBUTE5                  ,
          zl.DEFAULTING_ATTRIBUTE6                  ,
          zl.DEFAULTING_ATTRIBUTE7                  ,
          zl.DEFAULTING_ATTRIBUTE8                  ,
          zl.DEFAULTING_ATTRIBUTE9                  ,
          zl.DEFAULTING_ATTRIBUTE10                 ,
          zl.HISTORICAL_TAX_CODE_ID                 ,
          zl.TOTAL_INC_TAX_AMT                      ,
          zl.GLOBAL_ATTRIBUTE_CATEGORY              ,
          zl.GLOBAL_ATTRIBUTE1                      ,
          zl.HQ_ESTB_PARTY_TAX_PROF_ID              ,
          zl.MERCHANT_PARTY_ID                      ,
          zl.SHIP_THIRD_PTY_ACCT_ID                 ,
          zl.BILL_THIRD_PTY_ACCT_ID                 ,
          zl.START_EXPENSE_DATE                     ,
          zl.TRX_BATCH_ID                           ,
          zl.APPLIED_TO_TRX_NUMBER                  ,
          zl.PROVNL_TAX_DETERMINATION_DATE
         FROM  ZX_LINES_DET_FACTORS zl,
               ZX_REVERSE_TRX_LINES_GT zrtlgt,
               ZX_REV_TRX_HEADERS_GT zrthgt
        WHERE  zl.trx_id =zrtlgt.reversed_trx_id
          AND  zl.application_id = zrtlgt.reversed_appln_id
          AND  zl.entity_code = zrtlgt.reversed_entity_code
          AND  zl.event_class_code = zrtlgt.reversed_evnt_cls_code
          AND  zl.trx_line_id = zrtlgt.reversed_trx_line_id
          AND  zl.trx_level_type = zrtlgt.reversed_trx_level_type
          AND  zrthgt.reversing_appln_id = zrtlgt.reversing_appln_id
          AND  zrthgt.reversing_entity_code = zrtlgt.reversing_entity_code
          AND  zrthgt.reversing_evnt_cls_code = zrtlgt.reversing_evnt_cls_code
          AND  zrthgt.reversing_trx_id = zrtlgt.reversing_trx_id;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   /* -------------------------------------------------------+
   |  Reverse Document                                       |
   + -------------------------------------------------------*/
   ZX_TDS_CALC_SERVICES_PUB_PKG.reverse_document(p_event_class_rec,
                                                 l_return_status
                                                );

   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
       FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
           ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;
  /* -------------------------------------------------------+
   |  Fetch into global table                               |
   + -------------------------------------------------------*/

   OPEN get_rev_info_csr;
    FETCH get_rev_info_csr BULK COLLECT INTO
          zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION,
          zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE,
          zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT,
          zx_global_structures_pkg.trx_line_dist_tbl.PRECISION,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_MAU,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_PRECISION,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE,
          zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY,
          zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE,
          zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON,
          zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT,
          zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT,
          zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT,
          zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE,
          zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE,
          zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE,
          zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION,
          zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT,
          zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID,
          zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING,
          zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY,
          zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY,
          zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION,
          zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME,
          zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME,
          zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION,
          zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME,
          zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE,
          zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE,
          zx_global_structures_pkg.trx_line_dist_tbl.ASSET_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION,
          zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9,
          zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR1,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR2,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR3,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR4,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR5,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR6,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR7,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR8,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR9,
          zx_global_structures_pkg.trx_line_dist_tbl.CHAR10,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE1,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE2,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE3,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE4,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE5,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE6,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE7,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE8,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE9,
          zx_global_structures_pkg.trx_line_dist_tbl.DATE10,
          zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS,
          zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY,
          zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT,
          zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT,
          zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.DIST_LEVEL_ACTION,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TAX_DIST_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TAX_DIST_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TASK_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.AWARD_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.PROJECT_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ORGANIZATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ITEM_DATE,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_AMT,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_QUANTITY,
          zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_CURR_CONV_RATE,
          zx_global_structures_pkg.trx_line_dist_tbl.ITEM_DIST_NUMBER,
          zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_DIST_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_TAX_AMT,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID ,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE ,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE ,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID ,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID ,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER ,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_DIST_ID ,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID ,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE ,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE ,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID ,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID ,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DIST_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS,
          zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY1,
          zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY2,
          zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY3,
          zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY4,
          zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY5,
          zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY6,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY1,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY2,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY3,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY4,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY5,
          zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY6,
          zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_APPLN_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_ENTITY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_EVNT_CLS_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_LINE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_LEVEL_TYPE,
          zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.TAX_CALCULATION_DONE_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.TAX_PROCESSING_COMPLETED_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG,
          zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_ENTITY_CODE,
          zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_LINE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9,
          zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10,
          zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID,
          zx_global_structures_pkg.trx_line_dist_tbl.TOTAL_INC_TAX_AMT,
          zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY,
          zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE1,
zx_global_structures_pkg.trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID              ,
          zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID                      ,
          zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID                 ,
          zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID                 ,
          zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE                     ,
          zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID                           ,
          zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER                  ,
          zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE;
   CLOSE get_rev_info_csr;

  /* -------------------------------------------------------+
   |  Insert into zx_lines_det_factors                      |
   + -------------------------------------------------------*/
    db_insert_line_det_factors (p_trx_line_dist_tbl  =>  zx_global_structures_pkg.trx_line_dist_tbl,
                                p_event_class_rec    =>  p_event_class_rec,
                                p_insert_index       =>  zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID.FIRST,
      	                        x_return_status      =>  l_return_status
                               );

    IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
      x_return_status := l_return_status;
      IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
          ' RETURN_STATUS = ' || x_return_status);
      END IF;
      RETURN;
    END IF;
   /****************************PARTNER CODE START****************/
   IF nvl(zx_global_structures_pkg.g_ptnr_srvc_subscr_flag,'N') = 'Y' AND
      nvl(p_event_class_rec.tax_method_code,'EBTAX') ='EBTAX' AND
      p_event_class_rec.record_for_partners_flag = 'Y' THEN

         insert_detail_tax_lines_gt(p_event_class_rec => p_event_class_rec,
                                    p_sync_with_prvdr_flag => NULL,
                                    p_ptnr_tax_lines_insert => l_ptnr_tax_lines_insert,
                                    x_return_status   => l_return_status
                                    );

         IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
           x_return_status := l_return_status;
           IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
           END IF;
           RETURN;
         END IF;

/* Bug 5662795 */
         IF l_ptnr_tax_lines_insert = 0 THEN
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' No Tax Partner line available for reversing.');
            END IF;
            RETURN;
         END IF;

         ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'N';

         FOR app_tax_lines IN app_tax_lines_csr(p_event_class_rec)
         LOOP
            IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(app_tax_lines.tax_regime_id) THEN
               ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_regime_id := app_tax_lines.tax_regime_id;
               ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_regime_code := app_tax_lines.tax_regime_code;
               ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_provider_id := app_tax_lines.tax_provider_id;
/* Bug 5557565 */
               ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).effective_from := app_tax_lines.effective_from;
               ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).effective_to := app_tax_lines.effective_to;
               ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).partner_processing_flag := 'C';
            END IF;

/* Bug 5662795 */
            ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'Y';
         END LOOP;

         IF nvl(zx_global_structures_pkg.g_ptnr_srvc_subscr_flag,'N') = 'Y' THEN

            FOR l_trx_line_index in 1 .. nvl(zx_global_structures_pkg.trx_line_dist_tbl.internal_organization_id.LAST,0)
            LOOP
              /* -----------------------------------------------+
               |    Call TCM Location Caching API               |
               + -----------------------------------------------*/

               prepare_for_loc_caching(l_trx_line_index
                           ,p_event_class_rec
                           ,l_return_status
                            );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF x_return_status = FND_API.G_RET_STS_ERROR THEN
                     l_context_info_rec.APPLICATION_ID   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(l_trx_line_index);
                     l_context_info_rec.ENTITY_CODE      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(l_trx_line_index);
                     l_context_info_rec.EVENT_CLASS_CODE := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(l_trx_line_index);
                     l_context_info_rec.TRX_ID           := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_ID(l_trx_line_index);
                     l_context_info_rec.TRX_LINE_ID      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LINE_ID(l_trx_line_index);
                     l_context_info_rec.TRX_LEVEL_TYPE   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LEVEL_TYPE(l_trx_line_index);
                     ZX_API_PUB.add_msg (p_context_info_rec => l_context_info_rec);
                  END IF;
                  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
                  END IF;
                  RETURN;
               END IF;
            END LOOP;

           /* -----------------------------------------------+
            |  Populate the locations GT table               |
            + ----------------------------------------------*/

            partner_location_population (p_event_class_rec => p_event_class_rec,
                                   x_return_status => l_return_status);

            IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
               x_return_status := l_return_status;
               IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                  FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                  ' RETURN_STATUS = ' || x_return_status);
               END IF;
               RETURN;
            END IF;

            FOR l_regime_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.LAST,-99)
            LOOP
               ZX_TPI_SERVICES_PKG.partner_pre_processing(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_id,
                                                   ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                   ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
    	                                           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag,
                                                   p_event_class_rec,
                                                   l_return_status
    	                                           );
               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                     ' RETURN_STATUS = ' || x_return_status);
                  END IF;
                  RETURN;
               END IF;

               ZX_TPI_SERVICES_PKG.derive_ext_attrs (p_event_class_rec,
                                              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                              'DERIVE_HDR_ATTRS',
                                              l_return_status
                                              );

               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                    ' RETURN_STATUS = ' || x_return_status);
                 END IF;
                 RETURN;
               END IF;
               ZX_TPI_SERVICES_PKG.derive_ext_attrs (p_event_class_rec,
                                              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                              'DERIVE_LINE_ATTRS',
                                              l_return_status
                                              );
               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                    ' RETURN_STATUS = ' || x_return_status);
                 END IF;
                 RETURN;
               END IF;

               ZX_TPI_SERVICES_PKG.call_partner_service(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                 'CALCULATE_TAX',
                                                 p_event_class_rec,
          	                                 l_return_status
                                                );
               IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                 x_return_status := l_return_status;
                 IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                    ' RETURN_STATUS = ' || x_return_status);
                 END IF;
                 RETURN;
               END IF;

            END LOOP;
         END IF;
   END IF;

  /***********************PARTNER CODE END***************************/
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
   END reverse_document;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  reverse_distributions
--
--  DESCRIPTION
--  Reverse_distributions processing
--
--  CALLED BY
--    ZX_API_PUB.reverse_distributions
-----------------------------------------------------------------------
 PROCEDURE reverse_distributions
  ( x_return_status OUT NOCOPY VARCHAR2
  ) IS
  l_api_name              CONSTANT VARCHAR2(30) := 'REVERSE_DISTRIBUTIONS';
  l_return_status         VARCHAR2(30);
  l_context_info_rec      ZX_API_PUB.context_info_rec_type;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

  /* -------------------------------------------------------+
   |  Reverse Distributions                                 |
   + -------------------------------------------------------*/
   ZX_TRD_SERVICES_PUB_PKG.reverse_distributions(l_return_status);

   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
        ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;

   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

  EXCEPTION
    WHEN OTHERS THEN
       x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
       IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
       END IF;
  END reverse_distributions;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  determine_recovery
--
--  DESCRIPTION
--  determine_recovery processing
--
--  CALLED BY
--    ZX_API_PUB.determine_recovery
-----------------------------------------------------------------------
 PROCEDURE determine_recovery
  ( p_event_class_rec IN         ZX_API_PUB.EVENT_CLASS_REC_TYPE ,
    x_return_status   OUT NOCOPY VARCHAR2
  ) IS
  l_api_name           CONSTANT VARCHAR2(30):= 'DETERMINE_RECOVERY';
  l_return_status      VARCHAR2(30);
  l_context_info_rec   ZX_API_PUB.context_info_rec_type;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;
   l_return_status := FND_API.G_RET_STS_SUCCESS ;

  /* -------------------------------------------------------+
   |  Determine recovery                                    |
   + -------------------------------------------------------*/

   ZX_TRD_SERVICES_PUB_PKG.determine_recovery(p_event_class_rec,
                                              l_return_status
                                             );

   IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
        ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;

   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

  EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
 END determine_recovery;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  override_recovery
--
--  DESCRIPTION
--  override_recovery processing
--
--  CALLED BY
--    ZX_API_PUB.override_recovery
----------------------------------------------------------------------
 PROCEDURE override_recovery
  ( p_event_class_rec IN         ZX_API_PUB.EVENT_CLASS_REC_TYPE ,
    x_return_status   OUT NOCOPY VARCHAR2
  ) IS
  l_api_name          CONSTANT VARCHAR2(30):= 'OVERRIDE_RECOVERY';
  l_return_status     VARCHAR2(30);
  l_context_info_rec  ZX_API_PUB.context_info_rec_type;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   ZX_TRD_SERVICES_PUB_PKG.override_recovery(p_event_class_rec,
                                             x_return_status
                                             );

  IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
        ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;

   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

  EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
  END override_recovery;


-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  freeze_distribution_lines
--
--  DESCRIPTION
--  freeze_distribution_lines processing
--
--  CALLED BY
--    ZX_API_PUB.freeze_distribution_lines
----------------------------------------------------------------------
 PROCEDURE freeze_distribution_lines
  ( p_event_class_rec IN         ZX_API_PUB.event_class_rec_type ,
    x_return_status   OUT NOCOPY VARCHAR2
  ) IS
  l_api_name          CONSTANT VARCHAR2(30):= 'FREEZE_DISTRIBUTION_LINES';
  l_return_status     VARCHAR2(30);
  l_context_info_rec  ZX_API_PUB.context_info_rec_type;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

  /* -------------------------------------------------------+
   |  Freeze tax distributions                              |
   + -------------------------------------------------------*/
   ZX_TRL_PUB_PKG.freeze_taxdistributions(l_return_status,
                                          p_event_class_rec
                                         );

  IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
        ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;

   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
  END freeze_distribution_lines;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  validate_document_for_tax
--
--  DESCRIPTION
--  validate_document_for_tax processing
--
--  CALLED BY
--    ZX_API_PUB.validate_document_for_tax
----------------------------------------------------------------------
 PROCEDURE validate_document_for_tax
  ( p_trx_rec           IN         ZX_API_PUB.TRANSACTION_REC_TYPE ,
    p_event_class_rec   IN         ZX_API_PUB.event_class_rec_type ,
    x_validation_status OUT NOCOPY VARCHAR2,
    x_hold_status_code  OUT NOCOPY ZX_API_PUB.hold_codes_tbl_type ,
    x_return_status     OUT NOCOPY VARCHAR2
  ) IS
  l_api_name             CONSTANT VARCHAR2(30):= 'VALIDATE_DOCUMENT_FOR_TAX';
  l_return_status        VARCHAR2(30);
  l_context_info_rec     ZX_API_PUB.context_info_rec_type;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

  /* -------------------------------------------------------+
   |  Validate document for tax                             |
   + -------------------------------------------------------*/
   ZX_TRD_SERVICES_PUB_PKG.validate_document_for_tax(p_event_class_rec => p_event_class_rec,
                                                     p_transaction_rec => p_trx_rec,
                                                     x_hold_status     => x_hold_status_code,
                                                     x_validate_status => x_validation_status,
                                                     x_return_status   => l_return_status
                                                    );

  IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
        ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;

   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
   END validate_document_for_tax;


-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  discard_tax_only_lines
--
--  DESCRIPTION
--  discard_tax_only_lines processing
--
--  CALLED BY
--    ZX_API_PUB.discard_tax_only_lines
----------------------------------------------------------------------
 PROCEDURE discard_tax_only_lines
  ( p_event_class_rec IN         ZX_API_PUB.EVENT_CLASS_REC_TYPE ,
    x_return_status   OUT NOCOPY VARCHAR2
  ) IS
  l_api_name             CONSTANT VARCHAR2(30):= 'DISCARD_TAX_ONLY_LINES';
  l_return_status        VARCHAR2(30);
  l_context_info_rec     ZX_API_PUB.context_info_rec_type;


 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

  /* -------------------------------------------------------+
   |  Discard tax only lines                                |
   + -------------------------------------------------------*/

   ZX_TRL_PUB_PKG.discard_tax_only_lines(l_return_status,
                                         p_event_class_rec
                                        );

  IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
     x_return_status := l_return_status;
     IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
        FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
        ' RETURN_STATUS = ' || x_return_status);
     END IF;
     RETURN;
   END IF;

   /***********************PARTNER CODE START***************************/
   IF p_event_class_rec.record_flag ='Y' AND
      p_event_class_rec.record_for_partners_flag = 'Y' THEN
      FOR prtnr_tax_lines IN prtnr_tax_lines_csr(p_event_class_rec)
      LOOP
        IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(prtnr_tax_lines.tax_regime_id) THEN
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(prtnr_tax_lines.tax_regime_id).tax_regime_id := prtnr_tax_lines.tax_regime_id;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(prtnr_tax_lines.tax_regime_id).tax_regime_code := prtnr_tax_lines.tax_regime_code;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(prtnr_tax_lines.tax_regime_id).tax_provider_id := prtnr_tax_lines.tax_provider_id;
/* Bug 5557565 */
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(prtnr_tax_lines.tax_regime_id).effective_from := prtnr_tax_lines.effective_from;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(prtnr_tax_lines.tax_regime_id).effective_to := prtnr_tax_lines.effective_to;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(prtnr_tax_lines.tax_regime_id).partner_processing_flag := 'S';
        END IF;
      END LOOP;

      FOR l_regime_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.LAST,-99)
      LOOP
        ZX_TPI_SERVICES_PKG.derive_ext_attrs (p_event_class_rec,
                                              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                              'DERIVE_HDR_ATTRS',
                                              l_return_status
                                             );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;

        ZX_TPI_SERVICES_PKG.call_partner_service(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                 ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                 'SYNCHRONIZE_FOR_TAX',
                                                 p_event_class_rec,
                                                 l_return_status
    	                                        );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;

        ZX_TPI_SERVICES_PKG.ptnr_post_proc_sync_tax(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                    ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                    p_event_class_rec,
                                                    l_return_status
       	                                           );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;
      END LOOP;
    END IF;

     /* RE-INITIALISE SYNCHRONIZATION FLAG in ZX_LINES TO 'N' */
     zx_lines_table_handler(p_event_class_rec  => p_event_class_rec,
                            p_event            => 'UPDATE',
                            p_tax_regime_code  => null,
                            p_provider_id      => null,
                            x_return_status    => l_return_status
                           );

     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
           ' RETURN_STATUS = ' || x_return_status);
       END IF;
       RETURN;
     END IF;


   /***********************PARTNER CODE END***************************/
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
   END discard_tax_only_lines;



-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  synchronize_tax
--
--  DESCRIPTION
--  synchronize_tax processing for partners
--
--  CALLED BY
--    ZX_API_PUB.synchronize_tax
----------------------------------------------------------------------
 PROCEDURE synchronize_tax
  ( p_event_class_rec IN         ZX_API_PUB.EVENT_CLASS_REC_TYPE ,
    x_return_status   OUT NOCOPY VARCHAR2
  ) IS
  l_api_name             CONSTANT VARCHAR2(30):= 'SYNCHRONIZE_TAX';
  l_return_status        VARCHAR2(30);
  l_context_info_rec     ZX_API_PUB.context_info_rec_type;
  l_partner_migrated_flag      VARCHAR2(1);
  l_provider_id         NUMBER;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;
   x_return_status := FND_API.G_RET_STS_SUCCESS ;

  /* -------------------------------------------------------+
   |  Discard tax only lines                                |
   + -------------------------------------------------------*/
   /***********************PARTNER CODE START***************************/
   IF p_event_class_rec.record_flag ='Y' AND
      p_event_class_rec.record_for_partners_flag = 'Y' THEN
      BEGIN
        SELECT zxdet.partner_migrated_flag
        INTO  l_partner_migrated_flag
        FROM zx_lines_det_factors zxdet
        WHERE zxdet.application_id = p_event_class_rec.application_id
        AND zxdet.entity_code = p_event_class_rec.entity_code
        AND zxdet.event_class_code = p_event_class_rec.event_class_code
        AND zxdet.trx_id = p_event_class_rec.trx_id
        AND rownum = 1;
      EXCEPTION WHEN OTHERS THEN
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            'No rows in zx_lines_det_factors for the transaction' );
       END IF;
       RETURN;
      END;


      IF nvl(l_partner_migrated_flag,'N') = 'N'  THEN

       --
      -- bug#7115402- init partner flag
      --
      ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'N';

      FOR app_tax_lines IN app_tax_lines_csr(p_event_class_rec)
      LOOP
        IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(app_tax_lines.tax_regime_id) THEN
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_regime_id := app_tax_lines.tax_regime_id;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_regime_code := app_tax_lines.tax_regime_code;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_provider_id := app_tax_lines.tax_provider_id;
/* Bug 5557565 */
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).effective_from := app_tax_lines.effective_from;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).effective_to := app_tax_lines.effective_to;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).partner_processing_flag := 'S';
        END IF;
        -- bug#7115402- set partner flag
        ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'Y';

      END LOOP;
      ELSE
      --
      -- bug#7115402- init partner flag
      --
      ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'N';

        FOR app_tax_lines IN app_tax_lines_csr2(p_event_class_rec)
        LOOP
          IF NOT ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.EXISTS(app_tax_lines.tax_regime_id) THEN
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_regime_id := app_tax_lines.tax_regime_id;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_regime_code := app_tax_lines.tax_regime_code;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).tax_provider_id := app_tax_lines.tax_provider_id;
/* Bug 5557565 */
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).effective_from := app_tax_lines.effective_from;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).effective_to := app_tax_lines.effective_to;
          ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(app_tax_lines.tax_regime_id).partner_processing_flag := 'S';
        END IF;
        -- bug#7115402- set partner flag
        ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag := 'Y';

      END LOOP;

      END IF;

      -- bug#7115402- execute below loop only if partner
      -- flag is set
     IF ZX_GLOBAL_STRUCTURES_PKG.g_ptnr_srvc_subscr_flag = 'Y' THEN

      FOR l_regime_index IN nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.FIRST,0) .. nvl(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.LAST,-99)
      LOOP

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' at the start of the loop');
       END IF;
      IF ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl.exists(l_regime_index) THEN

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' inside the regime index condition');
       END IF;
        ZX_tpi_services_pkg.get_service_provider(
p_event_class_rec.application_id, p_event_class_rec.entity_code,
p_event_class_rec.event_class_code,
ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
l_provider_id , l_return_status);

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' Provider Id = ' || to_char(l_provider_id));
       END IF;

       IF nvl(l_provider_id,0) > 0 THEN
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' Before  partner pre processing  ');
       END IF;
      ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id :=
l_provider_id;
        ZX_TPI_SERVICES_PKG.partner_pre_processing(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_id,
                                                   ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
    	                                           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
    	                                           ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).partner_processing_flag,
                                                   p_event_class_rec,
                                                   l_return_status
                                                  );
        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
           x_return_status := l_return_status;
           IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
           END IF;
           RETURN;
        END IF;

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' Before  derive ext attsr');
       END IF;

        ZX_TPI_SERVICES_PKG.derive_ext_attrs (p_event_class_rec,
                                              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                              ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                              'DERIVE_HDR_ATTRS',
                                              l_return_status
                                             );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;

       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' Before  call partner service');
       END IF;
         ZX_TPI_SERVICES_PKG.call_partner_service(ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_regime_code,
                                                  ZX_GLOBAL_STRUCTURES_PKG.tax_regime_tbl(l_regime_index).tax_provider_id,
                                                  'SYNCHRONIZE_FOR_TAX',
                                                  p_event_class_rec,
                                                  l_return_status
    	                                         );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;
       END IF;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' after the iteratuion');
       END IF;
       END IF;
      END LOOP;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ' After partner code ');
       END IF;
     END IF; -- bug7115402
    END IF;  --recording

   /***********************PARTNER CODE END***************************/
   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
   END synchronize_tax;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  insupd_line_det_factors
--
--  DESCRIPTION
--  Called to insert/update to zx_lines_det_factors for products integrating
--  with the Line det factors UI
--
--  CALLED BY
--    ZX_API_PUB.insert_line_det_factors
--    ZX_API_PUB.update_line_det_factors
--    ZX_API_PUB.copy_insert_line_det_factors
----------------------------------------------------------------------
  PROCEDURE insupd_line_det_factors
  (
   p_event_class_rec          IN  OUT NOCOPY ZX_API_PUB.event_class_rec_type ,
   x_return_status            OUT NOCOPY VARCHAR2
  )IS

  l_api_name              CONSTANT VARCHAR2(30):= 'INSUPD_LINE_DET_FACTORS';
  l_calculation_done_flag VARCHAR2(1);
  l_context_info_rec      ZX_API_PUB.context_info_rec_type;
  l_return_status         VARCHAR2(1);

 BEGIN
  IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   FOR l_trx_index IN ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.FIRST .. ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.LAST
     LOOP
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
            ', SHIP_THIRD_PTY_ACCT_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID(l_trx_index)) ||
            ', BILL_THIRD_PTY_ACCT_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID(l_trx_index)) ||
            ', SHIP_THIRD_PTY_ACCT_SITE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID(l_trx_index)) ||
            ', BILL_THIRD_PTY_ACCT_SITE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID(l_trx_index)) ||
            ', SHIP_TO_CUST_ACCT_SITE_USE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID(l_trx_index)) ||
	    ', BILL_TO_CUST_ACCT_SITE_USE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID(l_trx_index))||
            ', DEFAULT_TAXATION_COUNTRY: '|| zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(l_trx_index)||
            ', DOCUMENT_SUB_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(l_trx_index)||
            ', USER_DEFINED_FISC_CLASS: '|| zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(l_trx_index)||
            ', PRODUCT_CATEGORY: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY(l_trx_index)||
            ', PRODUCT_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE(l_trx_index)||
            ', PRODUCT_FISC_CLASS: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(l_trx_index)||
            ', ASSESSABLE_VALUE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE(l_trx_index))||
            ', TRANSACTION_BIZ_CATEGORY: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(l_trx_index));
       END IF;
       /* ------------------------------------------------*
       |Get location for internal organization           |
       * -----------------------------------------------*/
       ZX_TCM_PTP_PKG.get_location_id(p_event_class_rec.internal_organization_id,
                                      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID(l_trx_index),
                                      l_return_status
                                      );

       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
         x_return_status := l_return_status;
         IF x_return_status = FND_API.G_RET_STS_ERROR THEN
           l_context_info_rec.APPLICATION_ID   := p_event_class_rec.APPLICATION_ID;
           l_context_info_rec.ENTITY_CODE      := p_event_class_rec.ENTITY_CODE;
           l_context_info_rec.EVENT_CLASS_CODE := p_event_class_rec.EVENT_CLASS_CODE;
           l_context_info_rec.TRX_ID           := p_event_class_rec.TRX_ID;
           ZX_API_PUB.add_msg(p_context_info_rec => l_context_info_rec);
         END IF;
         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
         END IF;
         RETURN;
        END IF;

        /*--------------------------------------------------------------------*
       |Bug 3687807 - assign line_amt to assessable_value if null           |
       * ------------------------------------------------------------------*/
       IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.assessable_value(l_trx_index) is null THEN
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.assessable_value(l_trx_index) :=
	  		       ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_amt(l_trx_index);
       END IF;

      /*----------------------------------------------*
       |Set the tax_processing_completed_flag         |
       *---------------------------------------------*/
       --PO/iP calls this API at end of tax calculation so this flag should be Y
       IF p_event_class_rec.application_id =201 THEN
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.tax_processing_completed_flag(l_trx_index) := 'Y';
       ELSE
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.tax_processing_completed_flag(l_trx_index) := 'N';
       END IF;

       /*----------------------------------------------*
        |Retrieve the ptps for the party ids           |
        *---------------------------------------------*/
        derive_internal_parameters(l_return_status,
                                   l_trx_index,
                                   p_event_class_rec
                                   );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
           ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
       END IF;
        IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,'Processing for Transaction Line with APPLICATION_ID: '||to_char(zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID(l_trx_index))||
          ', ENTITY_CODE: '||zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE(l_trx_index)||
          ', EVENT_CLASS_CODE: '||zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE(l_trx_index)|| ', EVENT_TYPE_CODE: '||zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE(l_trx_index)||
          ', TRX_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID(l_trx_index))||
          ', TRX_LINE_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID(l_trx_index))||
          ', TRX_LEVEL_TYPE: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE(l_trx_index))||
          ', INTERNAL_ORGANIZATION_ID: '|| to_char(zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(l_trx_index))||
          ', LINE_LEVEL_ACTION: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION(l_trx_index)||
          ', TRX_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE(l_trx_index))||
          ', TRX_DOC_REVISION: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION(l_trx_index)||
          ', LEDGER_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID(l_trx_index))||
          ', TRX_CURRENCY_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE(l_trx_index)||
          ', CURRENCY_CONVERSION_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE(l_trx_index))||
          ', CURRENCY_CONVERSION_RATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE(l_trx_index))||
          ', CURRENCY_CONVERSION_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE(l_trx_index)||
          ', MINIMUM_ACCOUNTABLE_UNIT: '|| zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT(l_trx_index)||
          ', PRECISION: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRECISION(l_trx_index)||
          ', TRX_SHIPPING_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE(l_trx_index))||
          ', TRX_RECEIPT_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE(l_trx_index))||
          ', LEGAL_ENTITY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID(l_trx_index))||
          ', ROUNDING_SHIP_TO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_TO_PARTY_ID(l_trx_index))||
          ', ROUNDING_SHIP_FROM_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_FROM_PARTY_ID(l_trx_index))||
          ', ROUNDING_BILL_TO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_TO_PARTY_ID(l_trx_index))||
          ', ROUNDING_BILL_FROM_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_FROM_PARTY_ID(l_trx_index))||
          ', RNDG_SHIP_TO_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_TO_PARTY_SITE_ID(l_trx_index))||
          ', RNDG_SHIP_FROM_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_FROM_PARTY_SITE_ID(l_trx_index))||
          ', RNDG_BILL_TO_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_TO_PARTY_SITE_ID(l_trx_index))||
          ', RNDG_BILL_FROM_PARTY_SITE_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_FROM_PARTY_SITE_ID(l_trx_index))||
          ', ESTABLISHMENT_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID(l_trx_index))||
          ', TRX_LINE_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE(l_trx_index)||
          ', TRX_LINE_DATE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE(l_trx_index))||
          ', TRX_BUSINESS_CATEGORY: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(l_trx_index)||
          ', LINE_INTENDED_USE: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE(l_trx_index)||
          ', USER_DEFINED_FISC_CLASS: '|| zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(l_trx_index)||
          ', LINE_AMT: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT(l_trx_index))||
          ', TRX_LINE_QUANTITY: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY(l_trx_index))||
          ', UNIT_PRICE: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE(l_trx_index))||
          ', EXEMPT_CERTIFICATE_NUMBER: '|| zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER(l_trx_index)||
          ', EXEMPT_REASON: '|| zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON(l_trx_index)||
          ', CASH_DISCOUNT: '|| zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT(l_trx_index)||
          ', VOLUME_DISCOUNT: '|| zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT(l_trx_index)||
          ', TRADING_DISCOUNT: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT(l_trx_index)||
          ', TRANSFER_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE(l_trx_index)||
          ', TRANSPORTATION_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE(l_trx_index)||
          ', INSURANCE_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE(l_trx_index)||
          ', OTHER_CHARGE: '|| zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE(l_trx_index)||
          ', ASSESSABLE_VALUE: '|| zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE(l_trx_index)||
          ', PRODUCT_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID(l_trx_index))||
          ', PRODUCT_FISC_CLASSIFICATION: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(l_trx_index)||
          ', PRODUCT_ORG_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID(l_trx_index))||
          ', UOM_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE(l_trx_index)||
          ', PRODUCT_TYPE: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE(l_trx_index)||
          ', PRODUCT_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE(l_trx_index)||
          ', PRODUCT_CATEGORY: '|| zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY(l_trx_index)||
          ', TRX_SIC_CODE: '|| zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE(l_trx_index)||
          ', LINE_CLASS: '|| zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS(l_trx_index)||
          ', FOB_POINT: '|| zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT(l_trx_index)||
          ', SHIP_TO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID(l_trx_index))||
          ', SHIP_FROM_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID(l_trx_index))||
          ', POA_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_ID(l_trx_index))||
          ', POO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_ID(l_trx_index))||
          ', BILL_TO_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_ID(l_trx_index))||
          ', BILL_FROM_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_ID(l_trx_index))||
          ', MERCHANT_PARTY_ID: '|| to_char( zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID(l_trx_index)));
        END IF;
   END LOOP;
  /* ---------------------------------------------------------------------*
   |Perform insert/update into database based on the API from where called|
   *---------------------------------------------------------------------*/
   IF ZX_API_PUB.G_PUB_SRVC IN ('INSERT_LINE_DET_FACTORS','COPY_INSERT_LINE_DET_FACTORS') THEN
     --PO/iP calls this API at end of tax calculation so this flag should be Y
     IF p_event_class_rec.application_id =201 THEN
        p_event_class_rec.tax_calculation_done_flag := 'Y';
     ELSE
        p_event_class_rec.tax_calculation_done_flag := 'N';
     END IF;

     db_insert_line_det_factors (p_trx_line_dist_tbl  =>  zx_global_structures_pkg.trx_line_dist_tbl,
                                 p_event_class_rec    =>  p_event_class_rec,
                                 p_insert_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.FIRST,
    	                         x_return_status      =>  l_return_status
                                 );
     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
          ' RETURN_STATUS = ' || x_return_status);
       END IF;
       RETURN;
     END IF;
   ELSIF ZX_API_PUB.G_PUB_SRVC = 'UPDATE_LINE_DET_FACTORS' THEN

     SELECT tax_calculation_done_flag
       INTO p_event_class_rec.tax_calculation_done_flag
       FROM ZX_LINES_DET_FACTORS
      WHERE APPLICATION_ID   = p_event_class_rec.APPLICATION_ID
        AND ENTITY_CODE      = p_event_class_rec.ENTITY_CODE
        AND EVENT_CLASS_CODE = p_event_class_rec.EVENT_CLASS_CODE
        AND TRX_ID           = p_event_class_rec.TRX_ID
        AND ROWNUM           = 1;

      IF p_event_class_rec.TAX_EVENT_TYPE_CODE = 'UPDATE' AND
         p_event_class_rec.tax_calculation_done_flag = 'N' THEN
         p_event_class_rec.TAX_EVENT_TYPE_CODE := 'CREATE';
      END IF;

      db_update_line_det_factors (p_trx_line_dist_tbl  =>  zx_global_structures_pkg.trx_line_dist_tbl,
                                  p_event_class_rec    =>  p_event_class_rec,
                                  p_update_index       =>  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.LAST,
                                  x_return_status      =>  l_return_status
                                 );

     IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
       x_return_status := l_return_status;
       IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
         FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
          ' RETURN_STATUS = ' || x_return_status);
       END IF;
       RETURN;
     END IF;
   END IF;

   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;
 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
  END insupd_line_det_factors;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  zx_lines_table_handler
--
--  DESCRIPTION
--  Handles inserts/updates/deletes to zx_lines for partner integration
--
--  CALLED BY
--    ZX_API_PUB.ptnr_sync_calc_tax
--    override_tax
----------------------------------------------------------------------
  PROCEDURE zx_lines_table_handler
  (
   p_event_class_rec          IN  ZX_API_PUB.event_class_rec_type ,
   p_event                    IN  VARCHAR2,
   p_tax_regime_code          IN  VARCHAR2,
   p_provider_id              IN  NUMBER,
   x_return_status            OUT NOCOPY VARCHAR2
  )IS

  l_api_name              CONSTANT VARCHAR2(30):= 'ZX_LINES_TABLE_HANDLER';
  l_context_info_rec      ZX_API_PUB.context_info_rec_type;
  l_return_status         VARCHAR2(1);

 BEGIN
  IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS ;

   IF p_event ='UPDATE' THEN
     UPDATE ZX_LINES
       SET sync_with_prvdr_flag ='N'
       WHERE  application_id = p_event_class_rec.application_id
          AND entity_code = p_event_class_rec.entity_code
          AND event_class_code = p_event_class_rec.event_class_code
          AND trx_id = p_event_class_rec.trx_id
          AND tax_provider_id is not null;
   ELSIF p_event = 'DELETE' THEN
     DELETE from zx_lines
       WHERE application_id    = p_event_class_rec.application_id
          AND entity_code      = p_event_class_rec.entity_code
          AND event_class_code = p_event_class_rec.event_class_code
          AND trx_id           = p_event_class_rec.trx_id
          AND tax_regime_code  = p_tax_regime_code;
   END IF;

   IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
       G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

 EXCEPTION
   WHEN OTHERS THEN
     x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
     IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
     END IF;
  END zx_lines_table_handler;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  Get_Tax_Profile_Ids
--
--  DESCRIPTION
--  Populates the party tax profile ids
--
--  CALLED BY
--    derive_internal_parameters
--    ZX_API_PUB.update_det_factors_hdr
----------------------------------------------------------------------
  PROCEDURE Get_Tax_Profile_Ids
  (
    x_return_status    OUT NOCOPY  VARCHAR2,
    p_party_type_Code  IN          VARCHAR2,
    p_party_id         IN          NUMBER,
    p_party_loc_id     IN          NUMBER,
    p_party_site_id    IN          NUMBER,
    x_tax_prof_id      OUT NOCOPY  NUMBER
  )
  IS
    l_api_name           CONSTANT VARCHAR2(30):= 'GET_TAX_PROFILE_IDS';
    l_party_index        VARCHAR2(100);
    l_site_index         VARCHAR2(100);
    l_return_status      VARCHAR2(30);

  BEGIN
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',
        G_PKG_NAME||': '||l_api_name||'()+'||
        ', Party_id: '||to_char(p_party_id)||
        ', Party Type:'||p_party_type_code ||
        ', p_party_loc_id: '||to_char(p_party_loc_id)||
        ', p_party_site_id: '||to_char(p_party_site_id)
        );
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    IF p_party_id IS NOT NULL THEN
      l_party_index := p_party_type_code||to_char(p_party_id);
      IF (p_party_tax_prof_id_tbl.EXISTS(l_party_index)) THEN
         x_tax_prof_id := p_party_tax_prof_id_tbl(l_party_index);
      ELSE

         ZX_TCM_PTP_PKG.get_ptp(p_party_id
                               ,p_Party_Type_Code
                               ,zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID(1)
                               ,p_party_loc_id
                               ,x_tax_prof_id
                               ,l_return_status
                               );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
            FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;
        p_party_tax_prof_id_tbl(l_party_index) := x_tax_prof_id;
      END IF;
    END IF;

    IF p_party_site_id IS NOT NULL THEN
      l_site_index := p_Party_Type_Code||to_char(p_party_site_id);
      IF (p_site_tax_prof_id_tbl.EXISTS(l_site_index)) THEN
         x_tax_prof_id := p_site_tax_prof_id_tbl(l_site_index);
      ELSE
         ZX_TCM_PTP_PKG.get_ptp( p_party_site_id
                               ,p_party_type_code
                               ,zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID(1)
                               ,p_party_loc_id
                               ,x_tax_prof_id
                               ,l_return_status
                               );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
          x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
             FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;
        p_site_tax_prof_id_tbl(l_site_index) := x_tax_prof_id;
      END IF;
    END IF;

    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
        G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
    END IF;
  END get_tax_profile_ids;


-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  default_tax_attrs_wrapper
--
--  DESCRIPTION
--  This overloaded procedure acts as a wrapper on TDS default_tax_attribs API to
--  default the tax determining attributes. It follows the following logic for
--  defaulting the determining attributes.
--
--    If adjusted_doc informaiton passed
--      default from adjusted_doc
--    elsif applied_from information passed
--      default from applied_from
--    elsif soure_doc information passed
--      default from source
--    else
--      call the TDM default API

--  CALLED BY
--    calculate_tax
--    ZX_API_PUB.insert_line_det_factors
--    ZX_API_PUB.get_default_tax_det_atribs(called from populateTaxAttributes)
----------------------------------------------------------------------

  PROCEDURE default_tax_attrs_wrapper(
   p_trx_line_index   IN             NUMBER,
   p_event_class_rec  IN             ZX_API_PUB.event_class_rec_type,
   x_return_status    OUT NOCOPY     VARCHAR2
  )
  IS
    l_api_name                     CONSTANT VARCHAR2(30):= 'DEFAULT_TAX_ATTRS_WRAPPER';
    l_return_status                VARCHAR2(1);
    l_tax_classification_code      VARCHAR2(50);
    l_intrcmp_src_appln_id         NUMBER;
    l_intrcmp_src_entity_code      VARCHAR2(30);
    l_intrcmp_src_event_class_code VARCHAR2(30);
    l_event_class_rec              ZX_API_PUB.event_class_rec_type;
    l_upg_trx_info_rec             ZX_ON_FLY_TRX_UPGRADE_PKG.zx_upg_trx_info_rec_type;

  -- Bug 8859101 Starts

  l_default_taxation_country  VARCHAR2(2);
  l_doc_sub_type              VARCHAR2(240);
  l_tax_invoice_date ZX_LINES_DET_FACTORS.TAX_INVOICE_DATE%TYPE;

  -- Bug 8859101 ends


  BEGIN
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    --Defaulting Automation accepts event class rec as IN OUT parameter while it is a IN parameter here
    --Hence need to populate event class details into intermediate record l_event_class_rec
    --Populating only those used by the defaulting automation API
    l_event_class_rec.application_id       := p_event_class_rec.application_id;
    l_event_class_rec.entity_code          := p_event_class_rec.entity_code;
    l_event_class_rec.event_class_code     := p_event_class_rec.event_class_code;
    l_event_class_rec.trx_id               := p_event_class_rec.trx_id;
    l_event_class_rec.prod_family_grp_code := p_event_class_rec.prod_family_grp_code;
    l_event_class_rec.tax_method_code      := p_event_class_rec.tax_method_code;

    /*If  the adjusted document information is passed with the transaction line, then derive the values
      tax determining factors from ZX_LINES_DET_FACTORS for the adjusted document*/
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID(p_trx_line_index) is not null THEN
      BEGIN
        SELECT default_taxation_country,
               document_sub_type,
               product_category,
               trx_business_category,
               line_intended_use,
               user_defined_fisc_class,
               product_fisc_classification,
               assessable_value,
               product_type,
               decode(l_event_class_rec.prod_family_grp_code,'P2P',input_tax_classification_code,
                                                             'O2C',output_tax_classification_code)
         INTO  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index),
               l_tax_classification_code
          FROM ZX_LINES_DET_FACTORS
         WHERE application_id   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_application_id(p_trx_line_index)
           AND entity_code      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_entity_code(p_trx_line_index)
           AND event_class_code = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_event_class_code(p_trx_line_index)
           AND trx_id           = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_trx_id(p_trx_line_index)
           AND trx_line_id      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_line_id(p_trx_line_index)
           AND trx_level_type   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_trx_level_type(p_trx_line_index);
       EXCEPTION
         WHEN NO_DATA_FOUND THEN
              l_upg_trx_info_rec.application_id   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_application_id(p_trx_line_index);
              l_upg_trx_info_rec.entity_code      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_entity_code(p_trx_line_index);
              l_upg_trx_info_rec.event_class_code := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_event_class_code(p_trx_line_index);
              l_upg_trx_info_rec.trx_id           := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_trx_id(p_trx_line_index);
              ZX_ON_FLY_TRX_UPGRADE_PKG.upgrade_trx_on_fly(p_upg_trx_info_rec   =>  l_upg_trx_info_rec,
                                                           x_return_status      =>  l_return_status
                                                          );
              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                    ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;
              SELECT default_taxation_country,
                     document_sub_type,
                     product_category,
                     trx_business_category,
                     line_intended_use,
                     user_defined_fisc_class,
                     product_fisc_classification,
                     assessable_value,
                     product_type,
                     decode(l_event_class_rec.prod_family_grp_code,'P2P',input_tax_classification_code,
                                                                   'O2C',output_tax_classification_code)
               INTO  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index),
                     l_tax_classification_code
                FROM ZX_LINES_DET_FACTORS
               WHERE application_id   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_application_id(p_trx_line_index)
                 AND entity_code      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_entity_code(p_trx_line_index)
                 AND event_class_code = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_event_class_code(p_trx_line_index)
                 AND trx_id           = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_trx_id(p_trx_line_index)
                 AND trx_line_id      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_line_id(p_trx_line_index)
                 AND trx_level_type   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.adjusted_doc_trx_level_type(p_trx_line_index);
      END;
      --upgrade of adjusted doc complete
    /*If  the applied from document information is passed with the transaction line, then derive the values
     tax determining factors from ZX_LINES_DET_FACTORS for the applied from document*/
    ELSIF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_application_id(p_trx_line_index) is not null THEN
      BEGIN
        SELECT default_taxation_country,
               document_sub_type,
               product_category,
               trx_business_category,
               line_intended_use,
               user_defined_fisc_class,
               product_fisc_classification,
               assessable_value,
               product_type,
               decode(l_event_class_rec.prod_family_grp_code,'P2P',input_tax_classification_code,
                                                             'O2C',output_tax_classification_code)
         INTO  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index),
               l_tax_classification_code
          FROM ZX_LINES_DET_FACTORS
         WHERE application_id   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_application_id(p_trx_line_index)
           AND entity_code      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_entity_code(p_trx_line_index)
           AND event_class_code = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_event_class_code(p_trx_line_index)
           AND trx_id           = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_trx_id(p_trx_line_index)
           AND trx_line_id      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_line_id(p_trx_line_index)
           AND trx_level_type   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_trx_level_type(p_trx_line_index);
       EXCEPTION
         WHEN NO_DATA_FOUND THEN
              l_upg_trx_info_rec.application_id   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_application_id(p_trx_line_index);
              l_upg_trx_info_rec.entity_code      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_entity_code(p_trx_line_index);
              l_upg_trx_info_rec.event_class_code := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_event_class_code(p_trx_line_index);
              l_upg_trx_info_rec.trx_id           := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_trx_id(p_trx_line_index);
              ZX_ON_FLY_TRX_UPGRADE_PKG.upgrade_trx_on_fly(p_upg_trx_info_rec   =>  l_upg_trx_info_rec,
                                                           x_return_status      =>  l_return_status
                                                          );
              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                    ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;
              SELECT default_taxation_country,
                     document_sub_type,
                     product_category,
                     trx_business_category,
                     line_intended_use,
                     user_defined_fisc_class,
                     product_fisc_classification,
                     assessable_value,
                     product_type,
                     decode(l_event_class_rec.prod_family_grp_code,'P2P',input_tax_classification_code,
                                                                   'O2C',output_tax_classification_code)
               INTO  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index),
                     l_tax_classification_code
                FROM ZX_LINES_DET_FACTORS
               WHERE application_id   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_application_id(p_trx_line_index)
                 AND entity_code      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_entity_code(p_trx_line_index)
                 AND event_class_code = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_event_class_code(p_trx_line_index)
                 AND trx_id           = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_trx_id(p_trx_line_index)
                 AND trx_line_id      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_line_id(p_trx_line_index)
                 AND trx_level_type   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.applied_from_trx_level_type(p_trx_line_index);
      END;
      --upgrade of applied from doc complete
    /*If  the source document information is passed with the transaction line, then derive the values
     tax determining factors from ZX_LINES_DET_FACTORS for the source document*/
    /*ELSIF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SOURCE_TRX_ID(p_trx_line_index) is not null THEN
      BEGIN
        --To support intercompany transactions, fetch the intercompany information
        --from zx_evnt_cls_mappings
        IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(p_trx_line_index) = 'INTERCOMPANY_TRX' THEN
          /* Bug 5223368 : Used the current document application id, entity code and event class code
                           instead of using source document values. */
          /* Bug 5666175 :
             AP's event classes don't match one-to-one with AR. This has resulted
             into an issue when Credit memo is imported during Intercompany xfer.
             We are not able to determine the correct intrcmp_src_evnt_cls_code ('CREDIT_MEMO') from the query below as AP has only one event class 'STANDARD INVOICES'
             with corresponding intrcmp_src_evnt_cls_code 'INVOICE'.
             Since, AR contains invoices, credit memos, debit memos in one entity, assumption here is trx_id will be unique. Hence, omitting event_class_code criteria from query on zx_lines_det_factors.
          */

          /*SELECT intrcmp_src_appln_id,
                 intrcmp_src_entity_code,
                 intrcmp_src_evnt_cls_code
            INTO l_intrcmp_src_appln_id,
                 l_intrcmp_src_entity_code,
                 l_intrcmp_src_event_class_code
            FROM ZX_EVNT_CLS_MAPPINGS
           WHERE application_id   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id(p_trx_line_index)
             AND entity_code      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.entity_code(p_trx_line_index)
             AND event_class_code = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.event_class_code(p_trx_line_index);
        END IF;

        SELECT default_taxation_country,
               document_sub_type,
               product_category,
               trx_business_category,
               line_intended_use,
               user_defined_fisc_class,
               product_fisc_classification,
               assessable_value,
               product_type,
               decode(l_event_class_rec.prod_family_grp_code,'P2P',input_tax_classification_code,
                                                             'O2C',output_tax_classification_code)
         INTO  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index),
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index),
               l_tax_classification_code
          FROM ZX_LINES_DET_FACTORS
         WHERE application_id   = nvl(l_intrcmp_src_appln_id,ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_application_id(p_trx_line_index))
           AND entity_code      = nvl(l_intrcmp_src_entity_code,ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_entity_code(p_trx_line_index))
-- Bug 5666175           AND event_class_code = nvl(l_intrcmp_src_event_class_code,ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_event_class_code(p_trx_line_index))
           AND trx_id           = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_trx_id(p_trx_line_index)
           AND trx_line_id      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_line_id(p_trx_line_index)
           AND trx_level_type   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_trx_level_type(p_trx_line_index);
       EXCEPTION
         WHEN NO_DATA_FOUND THEN
              IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(p_trx_line_index) = 'INTERCOMPANY_TRX' THEN
                l_upg_trx_info_rec.application_id   := l_intrcmp_src_appln_id;
                l_upg_trx_info_rec.entity_code      := l_intrcmp_src_entity_code;
                l_upg_trx_info_rec.event_class_code := l_intrcmp_src_event_class_code;
              ELSE
                l_upg_trx_info_rec.application_id   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_application_id(p_trx_line_index);
                l_upg_trx_info_rec.entity_code      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_entity_code(p_trx_line_index);
                l_upg_trx_info_rec.event_class_code := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_event_class_code(p_trx_line_index);
              END IF;
              l_upg_trx_info_rec.trx_id           := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_trx_id(p_trx_line_index);
              ZX_ON_FLY_TRX_UPGRADE_PKG.upgrade_trx_on_fly(p_upg_trx_info_rec   =>  l_upg_trx_info_rec,
                                                           x_return_status      =>  l_return_status
                                                          );
              IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                    ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
              END IF;
              SELECT default_taxation_country,
                     document_sub_type,
                     product_category,
                     trx_business_category,
                     line_intended_use,
                     user_defined_fisc_class,
                     product_fisc_classification,
                     assessable_value,
                     product_type,
                     decode(l_event_class_rec.prod_family_grp_code,'P2P',input_tax_classification_code,
                                                                   'O2C',output_tax_classification_code)
               INTO  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index),
                     ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index),
                     l_tax_classification_code
                FROM ZX_LINES_DET_FACTORS
               WHERE application_id   = nvl(l_intrcmp_src_appln_id,ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_application_id(p_trx_line_index))
                 AND entity_code      = nvl(l_intrcmp_src_entity_code,ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_entity_code(p_trx_line_index))
                 AND event_class_code = nvl(l_intrcmp_src_event_class_code,ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_event_class_code(p_trx_line_index))
                 AND trx_id           = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_trx_id(p_trx_line_index)
                 AND trx_line_id      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_line_id(p_trx_line_index)
                 AND trx_level_type   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.source_trx_level_type(p_trx_line_index);
      END;
      --upgrade of source document complete
   /*If the  Source Document Line identifiers are not passed and also if the adjusted document or
     applied from document information is not passed with the transaction line, then derive values
     of determining factors based on the defaulting rules setup in eBTax*/
    ELSE
      --If line already exists in line det factors then default and pass header level attributes
      --from that line so that it is not redefaulted again
      IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index) is null  THEN
         IF  l_default_taxation_country is null THEN
            BEGIN
              SELECT default_taxation_country ,
                     document_sub_type,
                     tax_invoice_date --Bug8541137
                INTO l_default_taxation_country,
                     l_doc_sub_type,
                     l_tax_invoice_date --Bug8541137
                FROM ZX_LINES_DET_FACTORS
               WHERE application_id   = p_event_class_rec.application_id
                 AND entity_code      = p_event_class_rec.entity_code
                 AND event_class_code = p_event_class_rec.event_class_code
                 AND trx_id           = p_event_class_rec.trx_id
                 AND rownum           = 1;
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  null;
            END;
        END IF;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index):= l_default_taxation_country;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index)       := l_doc_sub_type;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TAX_INVOICE_DATE(p_trx_line_index)        := l_tax_invoice_date; --Bug8541137
      END IF;

      ZX_DEFAULT_AUTOMATION_PKG.default_tax_attribs (p_trx_line_index    => p_trx_line_index,
                                                     p_event_class_rec   => l_event_class_rec,
                                                     p_taxation_country  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index),
                                                     p_document_sub_type => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index),
                                                     p_tax_invoice_number=> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TAX_INVOICE_NUMBER(p_trx_line_index),
                                                     p_tax_invoice_date  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TAX_INVOICE_DATE(p_trx_line_index),
                                                     x_return_status     => l_return_status
                                                     );
      IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
         x_return_status := l_return_status;
         IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
           FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
             ' RETURN_STATUS = ' || x_return_status);
         END IF;
         RETURN;
      END IF;
    END IF;

    IF l_event_class_rec.prod_family_grp_code = 'P2P' AND
       ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE(p_trx_line_index) is null THEN
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.input_tax_classification_code(p_trx_line_index) := l_tax_classification_code;
    ELSIF l_event_class_rec.prod_family_grp_code = 'O2C' AND
       ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE(p_trx_line_index) is null THEN
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.output_tax_classification_code(p_trx_line_index) := l_tax_classification_code;
    END IF;


    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
        G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
    END IF;

    EXCEPTION
      WHEN OTHERS THEN
        x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
        IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
          FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
        END IF;
  END default_tax_attrs_wrapper;

 -----------------------------------------------------------------------
 --  PUBLIC PROCEDURE
 --  get_default_tax_det_attrs
 --
 --  DESCRIPTION
 --  This overloaded procedure acts as a wrapper on TDS default_tax_attribs
 --  procedure to default the tax determining attributes. It follows the
 --  following logic defaulting the determining attributes.
 --
 --  Fetch from zx_trx_headers_gt and zx_trx_transaction_lines_gt into
 --  global structure zx_global_structures_pkg.trx_line_dist_tbl
 --  For records in trx_line_dist_tbl
 --  Loop
 --   If all of defaulting attributes null (not including tax classification) then
 --    If line_level_action is UPDATE
 --        Fetch all attributes from zx_lines_det_factors
 --          WHEN NO_DATA_FOUND
 --            IF event_class_code in ('PO_PA','RELEASE')
 --               call on-the-fly upgrade
 --            ELSIF user_upd_det_factors_flag = 'N'
 --               call RE-defaulting API for intended_use, product_fiscal_classification, product type
 --          end --when no-data-found
 --        if item/item_org_id/country has changed
 --           call RE-defaulting API for intended_use, product_fiscal_classification, product type
 --        if item/item_org_id/assessable value has changed
 --           call redefaulting API for assessable value
 --        if nothing changed copy from determining attrs from zx_lines_det_factors
 --        Always call the tax classification defaulting API
 --    ELSIF line level action is CREATE
 --       IF historical_tax_code_id passed
 --          redefault the tax attributes for PO (on the fly migration)
 --       elsif historical tax code id null
 --          If adjusted_doc informaiton passed
 --            default from adjusted_doc
 --          elsif applied_from information passed
 --            default from applied_from
 --          elsif soure_doc information passed
 --            default from source
 --          else
 --            call the TDM default API
 --    END IF
 -- ELSIF any of defaulting attributes not null and line level action is create
 --    if historical_tax_code_id not null  then
 --         call just the redefaulting for assessable value
 -- END IF
 --  End loop
 --  Update the GTTs with the defaulting attributes derived here.

 --  CALLED BY
 --    ZX_API_PUB.get_default_tax_det_attrs
 ----------------------------------------------------------------------
 PROCEDURE get_default_tax_det_attrs(
  p_event_class_rec       IN            ZX_API_PUB.event_class_rec_type,
  x_return_status         OUT NOCOPY    VARCHAR2
 )IS
  l_api_name             CONSTANT VARCHAR2(30):= 'GET_DEFAULT_TAX_DET_ATTRS';
  l_return_status                 VARCHAR2(1);
  l_error_buffer                  VARCHAR2(1000);
  l_call_default_APIs             BOOLEAN;
  l_context_info_rec              ZX_API_PUB.context_info_rec_type;

  CURSOR lines (p_event_class_rec  ZX_API_PUB.event_class_rec_type)is
  SELECT   /*+ INDEX(HEADER ZX_TRX_HEADERS_GT_U1) INDEX(TRXLINES ZX_TRANSACTION_LINES_GT_U1) */
          header.INTERNAL_ORGANIZATION_ID           ,
          header.APPLICATION_ID                     ,
          header.ENTITY_CODE                        ,
          header.EVENT_CLASS_CODE                   ,
          header.EVENT_TYPE_CODE                    ,
          header.TRX_ID                             ,
          trxlines.TRX_LEVEL_TYPE                   ,
          trxlines.TRX_LINE_ID                      ,
          trxlines.LINE_LEVEL_ACTION                ,
          nvl(trxlines.LINE_CLASS,p_event_class_rec.EVENT_CLASS_CODE), --Bugfix 4938879
          header.TRX_DATE                           ,
          header.TRX_DOC_REVISION                   ,
          header.LEDGER_ID                          ,
          header.TRX_CURRENCY_CODE                  ,
          header.CURRENCY_CONVERSION_DATE           ,
          header.CURRENCY_CONVERSION_RATE           ,
          header.CURRENCY_CONVERSION_TYPE           ,
          header.MINIMUM_ACCOUNTABLE_UNIT           ,
          header.PRECISION                          ,
          trxlines.TRX_LINE_CURRENCY_CODE           ,
          trxlines.TRX_LINE_CURRENCY_CONV_DATE      ,
          trxlines.TRX_LINE_CURRENCY_CONV_RATE      ,
          trxlines.TRX_LINE_CURRENCY_CONV_TYPE      ,
          trxlines.TRX_LINE_MAU                     ,
          trxlines.TRX_LINE_PRECISION               ,
          trxlines.TRX_SHIPPING_DATE                ,
          trxlines.TRX_RECEIPT_DATE                 ,
          header.LEGAL_ENTITY_ID                    ,
          header.ROUNDING_SHIP_TO_PARTY_ID          ,
          header.ROUNDING_SHIP_FROM_PARTY_ID        ,
          header.ROUNDING_BILL_TO_PARTY_ID          ,
          header.ROUNDING_BILL_FROM_PARTY_ID        ,
          header.RNDG_SHIP_TO_PARTY_SITE_ID         ,
          header.RNDG_SHIP_FROM_PARTY_SITE_ID       ,
          header.RNDG_BILL_TO_PARTY_SITE_ID         ,
          header.RNDG_BILL_FROM_PARTY_SITE_ID       ,
          header.ESTABLISHMENT_ID                   ,
          trxlines.TRX_LINE_TYPE                    ,
          trxlines.TRX_LINE_DATE                    ,
          trxlines.TRX_BUSINESS_CATEGORY            ,
          trxlines.LINE_INTENDED_USE                ,
          trxlines.USER_DEFINED_FISC_CLASS          ,
          trxlines.LINE_AMT                         ,
          trxlines.TRX_LINE_QUANTITY                ,
          trxlines.UNIT_PRICE                       ,
          trxlines.EXEMPT_CERTIFICATE_NUMBER        ,
          trxlines.EXEMPT_REASON                    ,
          trxlines.CASH_DISCOUNT                    ,
          trxlines.VOLUME_DISCOUNT                  ,
          trxlines.TRADING_DISCOUNT                 ,
          trxlines.TRANSFER_CHARGE                  ,
          trxlines.TRANSPORTATION_CHARGE            ,
          trxlines.INSURANCE_CHARGE                 ,
          trxlines.OTHER_CHARGE                     ,
          trxlines.PRODUCT_ID                       ,
          trxlines.PRODUCT_FISC_CLASSIFICATION      ,
          trxlines.PRODUCT_ORG_ID                   ,
          trxlines.UOM_CODE                         ,
          trxlines.PRODUCT_TYPE                     ,
          trxlines.PRODUCT_CODE                     ,
          trxlines.PRODUCT_CATEGORY                 ,
          trxlines.TRX_SIC_CODE                     ,
          trxlines.FOB_POINT                        ,
          trxlines.SHIP_TO_PARTY_ID                 ,
          trxlines.SHIP_FROM_PARTY_ID               ,
          trxlines.POA_PARTY_ID                     ,
          trxlines.POO_PARTY_ID                     ,
          trxlines.BILL_TO_PARTY_ID                 ,
          trxlines.BILL_FROM_PARTY_ID               ,
          trxlines.MERCHANT_PARTY_ID                ,
          trxlines.SHIP_TO_PARTY_SITE_ID            ,
          trxlines.SHIP_FROM_PARTY_SITE_ID          ,
          trxlines.POA_PARTY_SITE_ID                ,
          trxlines.POO_PARTY_SITE_ID                ,
          trxlines.BILL_TO_PARTY_SITE_ID            ,
          trxlines.BILL_FROM_PARTY_SITE_ID          ,
          trxlines.SHIP_TO_LOCATION_ID              ,
          trxlines.SHIP_FROM_LOCATION_ID            ,
          trxlines.POA_LOCATION_ID                  ,
          trxlines.POO_LOCATION_ID                  ,
          trxlines.BILL_TO_LOCATION_ID              ,
          trxlines.BILL_FROM_LOCATION_ID            ,
          trxlines.ACCOUNT_CCID                     ,
          trxlines.ACCOUNT_STRING                   ,
          trxlines.MERCHANT_PARTY_COUNTRY           ,
          header.RECEIVABLES_TRX_TYPE_ID            ,
          trxlines.REF_DOC_APPLICATION_ID           ,
          trxlines.REF_DOC_ENTITY_CODE              ,
          trxlines.REF_DOC_EVENT_CLASS_CODE         ,
          trxlines.REF_DOC_TRX_ID                   ,
          trxlines.REF_DOC_LINE_ID                  ,
          trxlines.REF_DOC_LINE_QUANTITY            ,
          header.RELATED_DOC_APPLICATION_ID         ,
          header.RELATED_DOC_ENTITY_CODE            ,
          header.RELATED_DOC_EVENT_CLASS_CODE       ,
          header.RELATED_DOC_TRX_ID                 ,
          header.RELATED_DOC_NUMBER                 ,
          header.RELATED_DOC_DATE                   ,
          trxlines.APPLIED_FROM_APPLICATION_ID      ,
          trxlines.APPLIED_FROM_EVENT_CLASS_CODE    ,
          trxlines.APPLIED_FROM_ENTITY_CODE         ,
          trxlines.APPLIED_FROM_TRX_ID              ,
          trxlines.APPLIED_FROM_LINE_ID             ,
          trxlines.APPLIED_FROM_TRX_NUMBER          ,
          trxlines.ADJUSTED_DOC_APPLICATION_ID      ,
          trxlines.ADJUSTED_DOC_EVENT_CLASS_CODE    ,
          trxlines.ADJUSTED_DOC_ENTITY_CODE         ,
          trxlines.ADJUSTED_DOC_TRX_ID              ,
          trxlines.ADJUSTED_DOC_LINE_ID             ,
          trxlines.ADJUSTED_DOC_NUMBER              ,
          trxlines.ADJUSTED_DOC_DATE                ,
          trxlines.APPLIED_TO_APPLICATION_ID        ,
          trxlines.APPLIED_TO_ENTITY_CODE           ,
          trxlines.APPLIED_TO_EVENT_CLASS_CODE      ,
          trxlines.APPLIED_TO_TRX_ID                ,
          trxlines.APPLIED_TO_TRX_LINE_ID           ,
          trxlines.TRX_ID_LEVEL2                    ,
          trxlines.TRX_ID_LEVEL3                    ,
          trxlines.TRX_ID_LEVEL4                    ,
          trxlines.TRX_ID_LEVEL5                    ,
          trxlines.TRX_ID_LEVEL6                    ,
          header.TRX_NUMBER                         ,
          header.TRX_DESCRIPTION                    ,
          trxlines.TRX_LINE_NUMBER                  ,
          trxlines.TRX_LINE_DESCRIPTION             ,
          trxlines.PRODUCT_DESCRIPTION              ,
          trxlines.TRX_WAYBILL_NUMBER               ,
          header.TRX_COMMUNICATED_DATE              ,
          trxlines.TRX_LINE_GL_DATE                 ,
          header.BATCH_SOURCE_ID                    ,
          header.BATCH_SOURCE_NAME                  ,
          header.DOC_SEQ_ID                         ,
          header.DOC_SEQ_NAME                       ,
          header.DOC_SEQ_VALUE                      ,
          header.TRX_DUE_DATE                       ,
          header.TRX_TYPE_DESCRIPTION               ,
          trxlines.MERCHANT_PARTY_NAME              ,
          trxlines.MERCHANT_PARTY_DOCUMENT_NUMBER   ,
          trxlines.MERCHANT_PARTY_REFERENCE         ,
          trxlines.MERCHANT_PARTY_TAXPAYER_ID       ,
          trxlines.MERCHANT_PARTY_TAX_REG_NUMBER    ,
          trxlines.PAYING_PARTY_ID                  ,
          trxlines.OWN_HQ_PARTY_ID                  ,
          trxlines.TRADING_HQ_PARTY_ID              ,
          trxlines.POI_PARTY_ID                     ,
          trxlines.POD_PARTY_ID                     ,
          trxlines.TITLE_TRANSFER_PARTY_ID          ,
          trxlines.PAYING_PARTY_SITE_ID             ,
          trxlines.OWN_HQ_PARTY_SITE_ID             ,
          trxlines.TRADING_HQ_PARTY_SITE_ID         ,
          trxlines.POI_PARTY_SITE_ID                ,
          trxlines.POD_PARTY_SITE_ID                ,
          trxlines.TITLE_TRANSFER_PARTY_SITE_ID     ,
          trxlines.PAYING_LOCATION_ID               ,
          trxlines.OWN_HQ_LOCATION_ID               ,
          trxlines.TRADING_HQ_LOCATION_ID           ,
          trxlines.POC_LOCATION_ID                  ,
          trxlines.POI_LOCATION_ID                  ,
          trxlines.POD_LOCATION_ID                  ,
          trxlines.TITLE_TRANSFER_LOCATION_ID       ,
          trxlines.ASSESSABLE_VALUE                 ,
          trxlines.ASSET_FLAG                       ,
          trxlines.ASSET_NUMBER                     ,
          trxlines.ASSET_ACCUM_DEPRECIATION         ,
          trxlines.ASSET_TYPE                       ,
          trxlines.ASSET_COST                       ,
          trxlines.NUMERIC1                         ,
          trxlines.NUMERIC2                         ,
          trxlines.NUMERIC3                         ,
          trxlines.NUMERIC4                         ,
          trxlines.NUMERIC5                         ,
          trxlines.NUMERIC6                         ,
          trxlines.NUMERIC7                         ,
          trxlines.NUMERIC8                         ,
          trxlines.NUMERIC9                         ,
          trxlines.NUMERIC10                        ,
          trxlines.CHAR1                            ,
          trxlines.CHAR2                            ,
          trxlines.CHAR3                            ,
          trxlines.CHAR4                            ,
          trxlines.CHAR5                            ,
          trxlines.CHAR6                            ,
          trxlines.CHAR7                            ,
          trxlines.CHAR8                            ,
          trxlines.CHAR9                            ,
          trxlines.CHAR10                           ,
          trxlines.DATE1                            ,
          trxlines.DATE2                            ,
          trxlines.DATE3                            ,
          trxlines.DATE4                            ,
          trxlines.DATE5                            ,
          trxlines.DATE6                            ,
          trxlines.DATE7                            ,
          trxlines.DATE8                            ,
          trxlines.DATE9                            ,
          trxlines.DATE10                           ,
          header.FIRST_PTY_ORG_ID                   ,
          header.TAX_EVENT_CLASS_CODE               ,
          header.TAX_EVENT_TYPE_CODE                ,
          header.DOC_EVENT_STATUS                   ,
          header.RDNG_SHIP_TO_PTY_TX_PROF_ID        ,
          header.RDNG_SHIP_FROM_PTY_TX_PROF_ID      ,
          header.RDNG_BILL_TO_PTY_TX_PROF_ID        ,
          header.RDNG_BILL_FROM_PTY_TX_PROF_ID      ,
          header.RDNG_SHIP_TO_PTY_TX_P_ST_ID        ,
          header.RDNG_SHIP_FROM_PTY_TX_P_ST_ID      ,
          header.RDNG_BILL_TO_PTY_TX_P_ST_ID        ,
          header.RDNG_BILL_FROM_PTY_TX_P_ST_ID      ,
          trxlines.SHIP_TO_PARTY_TAX_PROF_ID        ,
          trxlines.SHIP_FROM_PARTY_TAX_PROF_ID      ,
          trxlines.POA_PARTY_TAX_PROF_ID            ,
          trxlines.POO_PARTY_TAX_PROF_ID            ,
          trxlines.PAYING_PARTY_TAX_PROF_ID         ,
          trxlines.OWN_HQ_PARTY_TAX_PROF_ID         ,
          trxlines.TRADING_HQ_PARTY_TAX_PROF_ID     ,
          trxlines.POI_PARTY_TAX_PROF_ID            ,
          trxlines.POD_PARTY_TAX_PROF_ID            ,
          trxlines.BILL_TO_PARTY_TAX_PROF_ID        ,
          trxlines.BILL_FROM_PARTY_TAX_PROF_ID      ,
          trxlines.TITLE_TRANS_PARTY_TAX_PROF_ID    ,
          trxlines.SHIP_TO_SITE_TAX_PROF_ID         ,
          trxlines.SHIP_FROM_SITE_TAX_PROF_ID       ,
          trxlines.POA_SITE_TAX_PROF_ID             ,
          trxlines.POO_SITE_TAX_PROF_ID             ,
          trxlines.PAYING_SITE_TAX_PROF_ID          ,
          trxlines.OWN_HQ_SITE_TAX_PROF_ID          ,
          trxlines.TRADING_HQ_SITE_TAX_PROF_ID      ,
          trxlines.POI_SITE_TAX_PROF_ID             ,
          trxlines.POD_SITE_TAX_PROF_ID             ,
          trxlines.BILL_TO_SITE_TAX_PROF_ID         ,
          trxlines.BILL_FROM_SITE_TAX_PROF_ID       ,
          trxlines.TITLE_TRANS_SITE_TAX_PROF_ID     ,
          trxlines.MERCHANT_PARTY_TAX_PROF_ID       ,
          to_number(null) HQ_ESTB_PARTY_TAX_PROF_ID,
          header.DOCUMENT_SUB_TYPE                  ,
          header.SUPPLIER_TAX_INVOICE_NUMBER        ,
          header.SUPPLIER_TAX_INVOICE_DATE          ,
          header.SUPPLIER_EXCHANGE_RATE             ,
          header.TAX_INVOICE_DATE                   ,
          header.TAX_INVOICE_NUMBER                 ,
          trxlines.LINE_AMT_INCLUDES_TAX_FLAG       ,
          header.QUOTE_FLAG                         ,
          header.DEFAULT_TAXATION_COUNTRY           ,
          trxlines.HISTORICAL_FLAG                  ,
          header.INTERNAL_ORG_LOCATION_ID           ,
          trxlines.CTRL_HDR_TX_APPL_FLAG            ,
          header.CTRL_TOTAL_HDR_TX_AMT              ,
          trxlines.CTRL_TOTAL_LINE_TX_AMT           ,
          null DIST_LEVEL_ACTION                    ,
          to_number(null) ADJUSTED_DOC_TASK_DIST_ID ,
          to_number(null) APPLIED_FROM_TAX_DIST_ID  ,
          to_number(null) TASK_ID                   ,
          to_number(null) AWARD_ID                  ,
          to_number(null) PROJECT_ID                ,
          null EXPENDITURE_TYPE                     ,
          to_number(null) EXPENDITURE_ORGANIZATION_ID ,
          null EXPENDITURE_ITEM_DATE                ,
          to_number(null) TRX_LINE_DIST_AMT         ,
          to_number(null) TRX_LINE_DIST_QUANTITY    ,
          to_number(null) REF_DOC_CURR_CONV_RATE    ,
          to_number(null) ITEM_DIST_NUMBER          ,
          to_number(null) REF_DOC_DIST_ID           ,
          to_number(null) TRX_LINE_DIST_TAX_AMT     ,
          to_number(null) TRX_LINE_DIST_ID          ,
          to_number(null) APPLIED_FROM_DIST_ID      ,
          to_number(null) ADJUSTED_DOC_DIST_ID      ,
          to_number(null) OVERRIDING_RECOVERY_RATE  ,
          trxlines.INPUT_TAX_CLASSIFICATION_CODE    ,
          trxlines.OUTPUT_TAX_CLASSIFICATION_CODE   ,
          header.PORT_OF_ENTRY_CODE                 ,
          header.TAX_REPORTING_FLAG                 ,
          null TAX_AMT_INCLUDED_FLAG                ,
          null COMPOUNDING_TAX_FLAG                 ,
          header.SHIP_THIRD_PTY_ACCT_ID             ,
          header.BILL_THIRD_PTY_ACCT_ID             ,
          header.SHIP_THIRD_PTY_ACCT_SITE_ID        ,
          header.BILL_THIRD_PTY_ACCT_SITE_ID        ,
          header.SHIP_TO_CUST_ACCT_SITE_USE_ID      ,
          header.BILL_TO_CUST_ACCT_SITE_USE_ID      ,
          header.PROVNL_TAX_DETERMINATION_DATE      ,
          trxlines.START_EXPENSE_DATE               ,
          header.TRX_BATCH_ID                       ,
          header.APPLIED_TO_TRX_NUMBER              ,
          trxlines.SOURCE_APPLICATION_ID            ,
          trxlines.SOURCE_ENTITY_CODE               ,
          trxlines.SOURCE_EVENT_CLASS_CODE          ,
          trxlines.SOURCE_TRX_ID                    ,
          trxlines.SOURCE_LINE_ID                   ,
          trxlines.SOURCE_TRX_LEVEL_TYPE            ,
          trxlines.REF_DOC_TRX_LEVEL_TYPE           ,
          trxlines.APPLIED_TO_TRX_LEVEL_TYPE        ,
          trxlines.APPLIED_FROM_TRX_LEVEL_TYPE      ,
          trxlines.ADJUSTED_DOC_TRX_LEVEL_TYPE      ,
          header.APPLICATION_DOC_STATUS             ,
          header.HDR_TRX_USER_KEY1                  ,
          header.HDR_TRX_USER_KEY2                  ,
          header.HDR_TRX_USER_KEY3                  ,
          header.HDR_TRX_USER_KEY4                  ,
          header.HDR_TRX_USER_KEY5                  ,
          header.HDR_TRX_USER_KEY6                  ,
          trxlines.LINE_TRX_USER_KEY1               ,
          trxlines.LINE_TRX_USER_KEY2               ,
          trxlines.LINE_TRX_USER_KEY3               ,
          trxlines.LINE_TRX_USER_KEY4               ,
          trxlines.LINE_TRX_USER_KEY5               ,
          trxlines.LINE_TRX_USER_KEY6               ,
          trxlines.SOURCE_TAX_LINE_ID               ,
          trxlines.EXEMPTION_CONTROL_FLAG           ,
          to_number(null) REVERSED_APPLN_ID         ,
          null REVERSED_ENTITY_CODE                 ,
          null REVERSED_EVNT_CLS_CODE               ,
          to_number(null) REVERSED_TRX_ID           ,
          to_number(null) REVERSED_TRX_LEVEL_TYPE   ,
          to_number(null) REVERSED_TRX_LINE_ID      ,
          trxlines.EXEMPT_REASON_CODE               ,
          trxlines.INTERFACE_ENTITY_CODE            ,
          trxlines.INTERFACE_LINE_ID                ,
          trxlines.DEFAULTING_ATTRIBUTE1            ,
          trxlines.DEFAULTING_ATTRIBUTE2            ,
          trxlines.DEFAULTING_ATTRIBUTE3            ,
          trxlines.DEFAULTING_ATTRIBUTE4            ,
          trxlines.DEFAULTING_ATTRIBUTE5            ,
          trxlines.DEFAULTING_ATTRIBUTE6            ,
          trxlines.DEFAULTING_ATTRIBUTE7            ,
          trxlines.DEFAULTING_ATTRIBUTE8            ,
          trxlines.DEFAULTING_ATTRIBUTE9            ,
          trxlines.DEFAULTING_ATTRIBUTE10           ,
          trxlines.HISTORICAL_TAX_CODE_ID           ,
          nvl(trxlines.SHIP_THIRD_PTY_ACCT_ID,header.SHIP_THIRD_PTY_ACCT_ID),
          nvl(trxlines.BILL_THIRD_PTY_ACCT_ID,header.BILL_THIRD_PTY_ACCT_ID),
          nvl(trxlines.SHIP_THIRD_PTY_ACCT_SITE_ID,header.SHIP_THIRD_PTY_ACCT_SITE_ID),
          nvl(trxlines.BILL_THIRD_PTY_ACCT_SITE_ID,header.BILL_THIRD_PTY_ACCT_SITE_ID),
          nvl(trxlines.SHIP_TO_CUST_ACCT_SITE_USE_ID,header.SHIP_TO_CUST_ACCT_SITE_USE_ID),
          nvl(trxlines.BILL_TO_CUST_ACCT_SITE_USE_ID,header.BILL_TO_CUST_ACCT_SITE_USE_ID),
          nvl(trxlines.RECEIVABLES_TRX_TYPE_ID,header.RECEIVABLES_TRX_TYPE_ID),
          trxlines.GLOBAL_ATTRIBUTE_CATEGORY,
          trxlines.GLOBAL_ATTRIBUTE1,
          to_number(null) TOTAL_INC_TAX_AMT         ,
          trxlines.USER_UPD_DET_FACTORS_FLAG
      FROM ZX_TRANSACTION_LINES_GT trxlines,
           ZX_TRX_HEADERS_GT header
      WHERE header.application_id = p_event_class_rec.application_id
        AND header.entity_code = p_event_class_rec.entity_code
        AND header.event_class_code = p_event_class_rec.event_class_code
        AND header.trx_id = p_event_class_rec.trx_id
        AND trxlines.application_id = header.application_id
        AND trxlines.entity_code = header.entity_code
        AND trxlines.event_class_code = header.event_class_code
        AND trxlines.trx_id = header.trx_id
      ORDER by trxlines.trx_id, trxlines.trx_line_id;

 BEGIN
   IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS;

   OPEN lines(p_event_class_rec);
   LOOP
     FETCH lines BULK COLLECT INTO
       zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.ENTITY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.EVENT_CLASS_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.EVENT_TYPE_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LEVEL_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_LEVEL_ACTION,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_CLASS,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_DOC_REVISION,
       zx_global_structures_pkg.trx_line_dist_tbl.LEDGER_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_CURRENCY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_RATE,
       zx_global_structures_pkg.trx_line_dist_tbl.CURRENCY_CONVERSION_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.MINIMUM_ACCOUNTABLE_UNIT,
       zx_global_structures_pkg.trx_line_dist_tbl.PRECISION,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_RATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_CURRENCY_CONV_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_MAU,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_PRECISION,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_SHIPPING_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_RECEIPT_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_TO_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_SHIP_FROM_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_TO_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.ROUNDING_BILL_FROM_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_TO_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RNDG_SHIP_FROM_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_TO_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RNDG_BILL_FROM_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_INTENDED_USE,
       zx_global_structures_pkg.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_QUANTITY,
       zx_global_structures_pkg.trx_line_dist_tbl.UNIT_PRICE,
       zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_CERTIFICATE_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON,
       zx_global_structures_pkg.trx_line_dist_tbl.CASH_DISCOUNT,
       zx_global_structures_pkg.trx_line_dist_tbl.VOLUME_DISCOUNT,
       zx_global_structures_pkg.trx_line_dist_tbl.TRADING_DISCOUNT,
       zx_global_structures_pkg.trx_line_dist_tbl.TRANSFER_CHARGE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRANSPORTATION_CHARGE,
       zx_global_structures_pkg.trx_line_dist_tbl.INSURANCE_CHARGE,
       zx_global_structures_pkg.trx_line_dist_tbl.OTHER_CHARGE,
       zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION,
       zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_ORG_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.UOM_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_CATEGORY,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_SIC_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.FOB_POINT,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POA_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POO_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_CCID,
       zx_global_structures_pkg.trx_line_dist_tbl.ACCOUNT_STRING,
       zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_COUNTRY,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_RECEIVABLES_TRX_TYPE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_APPLICATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_ENTITY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_EVENT_CLASS_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_LINE_QUANTITY,
       zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_APPLICATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_ENTITY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_EVENT_CLASS_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_TRX_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.RELATED_DOC_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_APPLICATION_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_EVENT_CLASS_CODE ,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_ENTITY_CODE ,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_LINE_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_NUMBER ,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_APPLICATION_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_EVENT_CLASS_CODE ,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_ENTITY_CODE ,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_LINE_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_APPLICATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_ENTITY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_EVENT_CLASS_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LINE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL2,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL3,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL4,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL5,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_ID_LEVEL6,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_DESCRIPTION,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DESCRIPTION,
       zx_global_structures_pkg.trx_line_dist_tbl.PRODUCT_DESCRIPTION,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_WAYBILL_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_COMMUNICATED_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_GL_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BATCH_SOURCE_NAME,
       zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_NAME,
       zx_global_structures_pkg.trx_line_dist_tbl.DOC_SEQ_VALUE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_DUE_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_TYPE_DESCRIPTION,
       zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_NAME,
       zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_DOCUMENT_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_REFERENCE,
       zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAXPAYER_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_REG_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_PARTY_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_PARTY_SITE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.PAYING_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POC_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POI_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POD_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANSFER_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.ASSESSABLE_VALUE,
       zx_global_structures_pkg.trx_line_dist_tbl.ASSET_FLAG,
       zx_global_structures_pkg.trx_line_dist_tbl.ASSET_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.ASSET_ACCUM_DEPRECIATION,
       zx_global_structures_pkg.trx_line_dist_tbl.ASSET_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.ASSET_COST,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC1,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC2,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC3,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC4,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC5,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC6,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC7,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC8,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC9,
       zx_global_structures_pkg.trx_line_dist_tbl.NUMERIC10,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR1,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR2,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR3,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR4,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR5,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR6,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR7,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR8,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR9,
       zx_global_structures_pkg.trx_line_dist_tbl.CHAR10,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE1,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE2,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE3,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE4,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE5,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE6,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE7,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE8,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE9,
       zx_global_structures_pkg.trx_line_dist_tbl.DATE10,
       zx_global_structures_pkg.trx_line_dist_tbl.FIRST_PTY_ORG_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_CLASS_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.TAX_EVENT_TYPE_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.DOC_EVENT_STATUS,
       zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_TO_PTY_TX_P_ST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RDNG_SHIP_FROM_PTY_TX_P_ST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_TO_PTY_TX_P_ST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.RDNG_BILL_FROM_PTY_TX_P_ST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POA_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POO_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.PAYING_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POI_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POD_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_FROM_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POA_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POO_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.PAYING_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.OWN_HQ_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRADING_HQ_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POI_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.POD_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_FROM_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TITLE_TRANS_SITE_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.MERCHANT_PARTY_TAX_PROF_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.HQ_ESTB_PARTY_TAX_PROF_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.DOCUMENT_SUB_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_TAX_INVOICE_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.SUPPLIER_EXCHANGE_RATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TAX_INVOICE_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_AMT_INCLUDES_TAX_FLAG,
       zx_global_structures_pkg.trx_line_dist_tbl.QUOTE_FLAG,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY,
       zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_FLAG,
       zx_global_structures_pkg.trx_line_dist_tbl.INTERNAL_ORG_LOCATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.CTRL_HDR_TX_APPL_FLAG,
       zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_HDR_TX_AMT,
       zx_global_structures_pkg.trx_line_dist_tbl.CTRL_TOTAL_LINE_TX_AMT,
       zx_global_structures_pkg.trx_line_dist_tbl.DIST_LEVEL_ACTION,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TAX_DIST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TAX_DIST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TASK_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.AWARD_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.PROJECT_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ORGANIZATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.EXPENDITURE_ITEM_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_AMT,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_QUANTITY,
       zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_CURR_CONV_RATE,
       zx_global_structures_pkg.trx_line_dist_tbl.ITEM_DIST_NUMBER,
       zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_DIST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_TAX_AMT,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_LINE_DIST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_DIST_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_DIST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.OVERRIDING_RECOVERY_RATE,
       zx_global_structures_pkg.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.PORT_OF_ENTRY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.TAX_REPORTING_FLAG,
       zx_global_structures_pkg.trx_line_dist_tbl.TAX_AMT_INCLUDED_FLAG,
       zx_global_structures_pkg.trx_line_dist_tbl.COMPOUNDING_TAX_FLAG,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_SHIP_THIRD_PTY_ACCT_ST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_BILL_THIRD_PTY_ACCT_ST_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_SHIP_TO_CST_ACCT_ST_USE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_BILL_TO_CST_ACCT_ST_USE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_SHIP_THIRD_PTY_ACCT_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_BILL_THIRD_PTY_ACCT_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.PROVNL_TAX_DETERMINATION_DATE,
       zx_global_structures_pkg.trx_line_dist_tbl.START_EXPENSE_DATE ,
       zx_global_structures_pkg.trx_line_dist_tbl.TRX_BATCH_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_NUMBER ,
       zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_APPLICATION_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_ENTITY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_LINE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TRX_LEVEL_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.REF_DOC_TRX_LEVEL_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_TO_TRX_LEVEL_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLIED_FROM_TRX_LEVEL_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.ADJUSTED_DOC_TRX_LEVEL_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.APPLICATION_DOC_STATUS,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY1,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY2,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY3,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY4,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY5,
       zx_global_structures_pkg.trx_line_dist_tbl.HDR_TRX_USER_KEY6,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY1,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY2,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY3,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY4,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY5,
       zx_global_structures_pkg.trx_line_dist_tbl.LINE_TRX_USER_KEY6,
       zx_global_structures_pkg.trx_line_dist_tbl.SOURCE_TAX_LINE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.EXEMPTION_CONTROL_FLAG,
       zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_APPLN_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_ENTITY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_EVNT_CLS_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_LINE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.REVERSED_TRX_LEVEL_TYPE,
       zx_global_structures_pkg.trx_line_dist_tbl.EXEMPT_REASON_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_ENTITY_CODE,
       zx_global_structures_pkg.trx_line_dist_tbl.INTERFACE_LINE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE1,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE2,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE3,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE4,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE5,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE6,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE7,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE8,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE9,
       zx_global_structures_pkg.trx_line_dist_tbl.DEFAULTING_ATTRIBUTE10,
       zx_global_structures_pkg.trx_line_dist_tbl.HISTORICAL_TAX_CODE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_THIRD_PTY_ACCT_SITE_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_THIRD_PTY_ACCT_SITE_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.SHIP_TO_CUST_ACCT_SITE_USE_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.BILL_TO_CUST_ACCT_SITE_USE_ID ,
       zx_global_structures_pkg.trx_line_dist_tbl.RECEIVABLES_TRX_TYPE_ID,
       zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE_CATEGORY ,
       zx_global_structures_pkg.trx_line_dist_tbl.GLOBAL_ATTRIBUTE1,
       zx_global_structures_pkg.trx_line_dist_tbl.TOTAL_INC_TAX_AMT,
       zx_global_structures_pkg.trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG
     LIMIT G_LINES_PER_FETCH;

     FOR l_trx_line_index IN 1 .. nvl(ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID.LAST,0)
     LOOP
       l_call_default_APIs := decide_call_redefault_APIs (p_trx_line_index  => l_trx_line_index);

       IF l_call_default_APIs THEN
         IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_level_action(l_trx_line_index) = 'UPDATE' THEN

             call_redefaulting_APIs(p_event_class_rec  => p_event_class_rec,
                                    p_trx_line_index   => l_trx_line_index,
                                    x_return_status    => l_return_status
                                   );
             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
               IF lines%ISOPEN THEN CLOSE lines; END IF;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
             END IF;
         ELSIF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_level_action(l_trx_line_index) ='CREATE' THEN
           --If historical tax code id, global attribute category and global attribute1 have values passed in them
           IF  ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.historical_tax_code_id(l_trx_line_index) is not null THEN
               /*---------------------------------------------------+
                |   Call TDM API to default the following           |
                |      tax classification,                          |
                |      product fiscal classification,               |
                |      trx biz category                             |
                |      product category                             |
                +---------------------------------------------------*/
                ZX_DEFAULT_AUTOMATION_PKG.default_tax_attributes_for_po(p_trx_line_index => l_trx_line_index,
                                                                        x_return_status  => l_return_status
                                                                        );

                IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                  x_return_status := l_return_status;
                  IF lines%ISOPEN THEN CLOSE lines; END IF;
                  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                      ' RETURN_STATUS = ' || x_return_status);
                  END IF;
                  RETURN;
                END IF;

                --Set other determining attributes to null
                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_intended_use(l_trx_line_index)       := null;
                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.user_defined_fisc_class(l_trx_line_index) := null;
                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.assessable_value(l_trx_line_index)        := null;
                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.document_sub_type(l_trx_line_index)       := null;

           --If historical tax code id, global attribute category and global attribute1 passed as null
           ELSIF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.historical_tax_code_id(l_trx_line_index) is null  THEN

                 default_tax_attrs_wrapper (p_trx_line_index  => l_trx_line_index,
                                            p_event_class_rec => p_event_class_rec,
                                            x_return_status   => l_return_status
                                            );

                 IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                   x_return_status := l_return_status;
                   IF lines%ISOPEN THEN CLOSE lines; END IF;
                   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                     FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                    ' RETURN_STATUS = ' || x_return_status);
                   END IF;
                   RETURN;
                 END IF;
                END IF;  --check on historical_tax_code_id
            END IF;  --line_level_action ='UPDATE'/'CREATE'
      -- Bugfix 4453246
      ELSIF NOT (l_call_default_APIs) AND ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_level_action(l_trx_line_index) = 'CREATE' THEN
         IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.historical_tax_code_id(l_trx_line_index) is not null THEN
            ZX_DEFAULT_AUTOMATION_PKG.redefault_assessable_value(p_application_id   => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(l_trx_line_index),
                                                                 p_entity_code      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(l_trx_line_index),
                                                                 p_event_class_code => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(l_trx_line_index),
                                                                 p_internal_org_id  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(l_trx_line_index),
                                                                 p_trx_id           => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_ID(l_trx_line_index),
                                                                 p_trx_line_id      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LINE_ID(l_trx_line_index),
                                                                 p_trx_level_type   => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LEVEL_TYPE(l_trx_line_index),
                                                                 p_item_id          => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ID(l_trx_line_index),
                                                                 p_item_org_id      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ORG_ID(l_trx_line_index),
                                                                 p_line_amt         => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_AMT(l_trx_line_index),
                                                                 x_assessable_value => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(l_trx_line_index),
                                                                 x_return_status    => l_return_status
                                                                 );
             IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
                x_return_status := l_return_status;
                IF lines%ISOPEN THEN CLOSE lines; END IF;
                IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                   FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
                END IF;
                RETURN;
             END IF;
         END IF;
      END IF;   -- l_call_default_APIs
    END LOOP; --loop over lines
    EXIT WHEN lines%NOTFOUND;
   END LOOP;   --cursor
   CLOSE lines;

   --Update the zx_transaction_lines_gt and zx_trx_headers_gt with defaulted ATAs

   FORALL i IN 1..nvl(ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.LAST,-99)
      UPDATE ZX_TRANSACTION_LINES_GT SET
         trx_business_category         = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_business_category(i),
         line_intended_use             = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_intended_use(i),
         user_defined_fisc_class       = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.user_defined_fisc_class(i),
         product_fisc_classification   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_fisc_classification(i),
         product_category              = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_category(i),
	 product_type = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_type(i),--Bug 5084653
         assessable_value              = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.assessable_value(i),
         input_tax_classification_code = decode(p_event_class_rec.prod_family_grp_code,'P2P', ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.input_tax_classification_code(i),
                                                                                              input_tax_classification_code),
         output_tax_classification_code = decode(p_event_class_rec.prod_family_grp_code,'O2C', ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.output_tax_classification_code(i),
                                                                                              output_tax_classification_code)  ,
         user_upd_det_factors_flag = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.user_upd_det_factors_flag(i)--Bug 5084653
      WHERE application_id    = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id(i)
        AND entity_code       = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.entity_code(i)
        AND event_class_code  = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.event_class_code(i)
        AND trx_id            = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_id(i)
        AND trx_line_id       = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_line_id(i)
        AND trx_level_type    = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_level_type(i);

   FORALL i IN 1..nvl(ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id.LAST,-99)
      UPDATE ZX_TRX_HEADERS_GT SET
         default_taxation_country = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.default_taxation_country(i),
         document_sub_type    = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.document_sub_type(i),
         tax_invoice_date     = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.tax_invoice_date(i),
         tax_invoice_number   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.tax_invoice_number(i)
      WHERE application_id    = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id(i)
        AND entity_code       = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.entity_code(i)
        AND event_class_code  = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.event_class_code(i)
        AND trx_id            = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_id(i);

   IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
        G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

   EXCEPTION
     WHEN OTHERS THEN
          x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
          IF lines%ISOPEN THEN CLOSE lines; END IF;
          IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,SQLERRM);
          END IF;
END get_default_tax_det_attrs;


-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  decide_call_redefault_APIs
--
--  DESCRIPTION
--  Determine if need to default/redefault tax determining attributes
--  AR always passes the tax classification code
--    default only if all other tax determining attributes are null
--  AP always passes the default taxation country
--    default only if all other tax determining attributes are null
--  All other products will pass some attributes or none
--    default only if all tax determining attributes are null
--
--  CALLED BY
--    calculate_tax
--    get_default_tax_det_attrs
--    ZX_API_PUB.insert_line_det_factors
--    ZX_API_PUB.update_line_det_factors
-----------------------------------------------------------------------
FUNCTION decide_call_redefault_APIs
  (p_trx_line_index  IN             BINARY_INTEGER
  ) RETURN BOOLEAN IS

  l_api_name                 CONSTANT VARCHAR2(30):= 'DECIDE_CALL_REDEFAULT_APIS';

BEGIN
  IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
  END IF;

   /*IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index) is null AND
      (ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE(p_trx_line_index) is null OR
       ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.OUTPUT_TAX_CLASSIFICATION_CODE(p_trx_line_index) is null) THEN
       RETURN TRUE;
    */
    --Bug 4634195 - Do not consider header level attributes (default_taxation_country and
    --document_sub_type for PO
    IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index) = 201 THEN
      IF
         -- ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index) is null AND
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index) is null AND
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index) is null AND
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index) is null AND
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index) is null AND
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index) is null AND
         ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index) is null THEN
         RETURN TRUE;
      END IF;
    END IF;
    --Bug 4453246 - Do not consider classification code for decision making
    IF --AP passes the taxation country
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index) is null AND
      -- ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index) is null AND
      -- ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index) is null THEN --AND
      --ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INPUT_TAX_CLASSIFICATION_CODE(p_trx_line_index) is null  THEN
      RETURN TRUE;
    ELSIF --AR/other products may/may not pass the tax classification code
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DOCUMENT_SUB_TYPE(p_trx_line_index) is null AND
      -- ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_CATEGORY(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_BUSINESS_CATEGORY(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_DEFINED_FISC_CLASS(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index) is null AND
      ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index) is null THEN
      RETURN TRUE;
    ELSE
      RETURN FALSE;
    END IF;
    IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',G_PKG_NAME||': '||l_api_name||'()-');
    END IF;
 END decide_call_redefault_APIs;

-----------------------------------------------------------------------
--  PUBLIC PROCEDURE
--  call_redefaulting_APIs
--
--  DESCRIPTION
--  1) Fetch and populate all determining attributes from zx_lines_det_factors
--  2) If product id or product org id changes call the redefaulting APIs for product
--     fiscal classification and intended use
--  3) If product id, product org id, line amount changes, call the redefaulting APIs
--     for assessable value
--  4) Redefault the tax classification code if product is not AR(AR always passes
--     tax classification code)
--  CALLED BY
--    get_default_tax_det_attrs
--    ZX_API_PUB.update_line_det_factors
-----------------------------------------------------------------------
PROCEDURE call_redefaulting_APIs
  (p_event_class_rec IN             ZX_API_PUB.event_class_rec_type,
   p_trx_line_index  IN             BINARY_INTEGER,
   x_return_status   OUT    NOCOPY  VARCHAR2
  ) IS

  l_api_name             CONSTANT VARCHAR2(30):= 'CALL_REDEFAULTING_API';
  l_return_status                 VARCHAR2(1);
  l_context_info_rec              ZX_API_PUB.context_info_rec_type;
  l_document_sub_type             VARCHAR2(240);
  l_line_intended_use             VARCHAR2(240);
  l_product_fisc_classification   VARCHAR2(240);
  l_assessable_value              NUMBER;
  l_trx_business_category         VARCHAR2(240);
  l_user_defined_fisc_class       VARCHAR2(30);
  l_product_category              VARCHAR2(240);
  l_user_upd_det_factors_flag     VARCHAR2(1);
  l_product_id                    NUMBER;
  l_product_org_id                NUMBER;
  l_product_type                  VARCHAR2(240);
  l_taxation_country              VARCHAR2(2);
  l_input_tax_class_code          VARCHAR2(30);
  l_output_tax_class_code         VARCHAR2(150);
  l_line_amt                      NUMBER;
  l_trx_line_id                   NUMBER;
  l_redef_tax_class_code_rec      ZX_API_PUB.def_tax_cls_code_info_rec_type;
  l_error_buffer                  VARCHAR2(1000);
  l_upg_trx_info_rec              ZX_ON_FLY_TRX_UPGRADE_PKG.zx_upg_trx_info_rec_type;

  --Bug 8565358
  -- reverting the changes done for Bug 7045194
  --Bug#7045194
  --l_tcc_valid                     NUMBER;

  --Bug#7045194: validate input tax classification code

  --CURSOR validate_input_tcc_csr
  --(c_input_tcc                ZX_RATES_B.tax_rate_code%TYPE,
   --c_trx_date                 ZX_LINES_DET_FACTORS.trx_date%TYPE,
   --c_internal_organization_id ZX_LINES.internal_organization_id%TYPE)
  --IS
  --SELECT COUNT(1)
--    FROM ZX_INPUT_CLASSIFICATIONS_V
--    WHERE lookup_code  = c_input_tcc
--      AND enabled_flag = 'Y'
--      AND c_trx_date >= start_date_active
--      AND (c_trx_date <= end_date_active
--           OR end_date_active IS NULL)
--      AND org_id IN ( c_internal_organization_id, -99);

  --Bug#7045194: validate output tax classification code

--  CURSOR validate_output_tcc_csr
--  (c_output_tcc               ZX_RATES_B.tax_rate_code%TYPE,
--   c_trx_date                 ZX_LINES_DET_FACTORS.trx_date%TYPE,
--   c_internal_organization_id ZX_LINES.internal_organization_id%TYPE)
--  IS
--  SELECT COUNT(1)
--    FROM ZX_OUTPUT_CLASSIFICATIONS_V
--    WHERE lookup_code  = c_output_tcc
--      AND enabled_flag = 'Y'
--      AND c_trx_date >= start_date_active
--      AND (c_trx_date <= end_date_active
--           OR end_date_active IS NULL)
--      AND org_id IN ( c_internal_organization_id, -99);

BEGIN
  IF ( G_LEVEL_PROCEDURE >= FND_LOG.G_CURRENT_RUNTIME_LEVEL) THEN
     FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.BEGIN',G_PKG_NAME||': '||l_api_name||'()+');
   END IF;

   x_return_status := FND_API.G_RET_STS_SUCCESS ;

  --Bug 8565358
  -- reverting the changes done for Bug 7045194
  -- Bug#7045194
  -- l_tcc_valid := 0;

   BEGIN
   --If stored information different from passed information, redefault again
     SELECT
         DOCUMENT_SUB_TYPE,
         LINE_INTENDED_USE,
         PRODUCT_FISC_CLASSIFICATION,
         ASSESSABLE_VALUE,
         TRX_BUSINESS_CATEGORY,
         USER_DEFINED_FISC_CLASS,
         PRODUCT_CATEGORY,
         USER_UPD_DET_FACTORS_FLAG,
         PRODUCT_ID,
         PRODUCT_ORG_ID,
         PRODUCT_TYPE,
         DEFAULT_TAXATION_COUNTRY,
         LINE_AMT,
         INPUT_TAX_CLASSIFICATION_CODE,
         OUTPUT_TAX_CLASSIFICATION_CODE,
         TRX_LINE_ID --dummy get(need a not null column for checking and populating back the determining attributes conditionally)
     INTO
         l_document_sub_type,
         l_line_intended_use,
         l_product_fisc_classification,
         l_assessable_value,
         l_trx_business_category,
         l_user_defined_fisc_class ,
         l_product_category,
         l_user_upd_det_factors_flag,
         l_product_id,
         l_product_org_id,
         l_product_type,
         l_taxation_country,
         l_line_amt,
         l_input_tax_class_code,
         l_output_tax_class_code,
	 l_trx_line_id
     FROM  ZX_LINES_DET_FACTORS
     WHERE application_id   = p_event_class_rec.application_id
       AND entity_code      = p_event_class_rec.entity_code
       AND event_class_code = p_event_class_rec.event_class_code
       AND trx_id           = p_event_class_rec.trx_id
       AND trx_line_id      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_line_id(p_trx_line_index)
       AND trx_level_type   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_level_type(p_trx_line_index);
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        IF p_event_class_rec.event_class_code in ('PO_PA','RELEASE') THEN
          l_upg_trx_info_rec.application_id   := p_event_class_rec.application_id;
          l_upg_trx_info_rec.entity_code      := p_event_class_rec.entity_code;
          l_upg_trx_info_rec.event_class_code := p_event_class_rec.event_class_code;
          l_upg_trx_info_rec.trx_id           := p_event_class_rec.trx_id;
          ZX_ON_FLY_TRX_UPGRADE_PKG.upgrade_trx_on_fly(p_upg_trx_info_rec   =>  l_upg_trx_info_rec,
                                                       x_return_status      =>  l_return_status
                                                      );
          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                  ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
          END IF;
       -- Start of Bug 6336029
          SELECT
             DOCUMENT_SUB_TYPE,
             LINE_INTENDED_USE,
             PRODUCT_FISC_CLASSIFICATION,
             ASSESSABLE_VALUE,
             TRX_BUSINESS_CATEGORY,
             USER_DEFINED_FISC_CLASS,
             PRODUCT_CATEGORY,
             USER_UPD_DET_FACTORS_FLAG,
             PRODUCT_ID,
             PRODUCT_ORG_ID,
             PRODUCT_TYPE,
             DEFAULT_TAXATION_COUNTRY,
             LINE_AMT,
             INPUT_TAX_CLASSIFICATION_CODE,
             OUTPUT_TAX_CLASSIFICATION_CODE,
             TRX_LINE_ID --dummy get(need a not null column for checking and populating back the determining attributes conditionally)
         INTO
             l_document_sub_type,
             l_line_intended_use,
             l_product_fisc_classification,
             l_assessable_value,
             l_trx_business_category,
             l_user_defined_fisc_class ,
             l_product_category,
             l_user_upd_det_factors_flag,
             l_product_id,
             l_product_org_id,
             l_product_type,
             l_taxation_country,
             l_line_amt,
             l_input_tax_class_code,
             l_output_tax_class_code,
    	       l_trx_line_id
        FROM
             ZX_LINES_DET_FACTORS
        WHERE
             application_id   = p_event_class_rec.application_id
       AND entity_code      = p_event_class_rec.entity_code
       AND event_class_code = p_event_class_rec.event_class_code
       AND trx_id           = p_event_class_rec.trx_id
       AND trx_line_id      = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_line_id(p_trx_line_index)
       AND trx_level_type   = ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_level_type(p_trx_line_index);
       -- End of Bug 6336029
        ELSIF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.USER_UPD_DET_FACTORS_FLAG(p_trx_line_index) ='N' THEN
          ZX_DEFAULT_AUTOMATION_PKG.redefault_intended_use(p_application_id    => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index),
                                                           p_entity_code       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index),
                                                           p_event_class_code  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index),
                                                           p_internal_org_id   => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(p_trx_line_index),
                                                           p_country_code      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index),
                                                           p_item_id           => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ID(p_trx_line_index),
                                                           p_item_org_id       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ORG_ID(p_trx_line_index) ,
                                                           x_intended_use      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index),
                                                           x_return_status     => l_return_status
                                                           );
          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
              x_return_status := l_return_status;
              IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                 FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
                   ' RETURN_STATUS = ' || x_return_status);
              END IF;
              RETURN;
          END IF;

          ZX_DEFAULT_AUTOMATION_PKG.redefault_prod_fisc_class_code(p_application_id       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index),
                                                                   p_entity_code          => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index),
                                                                   p_event_class_code     => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index),
                                                                   p_internal_org_id      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(p_trx_line_index),
                                                                   p_country_code         => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.DEFAULT_TAXATION_COUNTRY(p_trx_line_index),
                                                                   p_item_id              => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ID(p_trx_line_index),
                                                                   p_item_org_id          => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ORG_ID(p_trx_line_index),
                                                                   x_prod_fisc_class_code => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index),
                                                                   x_return_status        => l_return_status
                                                                   );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
             x_return_status := l_return_status;
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
             END IF;
             RETURN;
          END IF;

          ZX_DEFAULT_AUTOMATION_PKG.redefault_assessable_value(p_application_id   => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index),
                                                               p_entity_code      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index),
                                                               p_event_class_code => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index),
                                                               p_internal_org_id  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(p_trx_line_index),
                                                               p_trx_id           => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_ID(p_trx_line_index),
                                                               p_trx_line_id      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LINE_ID(p_trx_line_index),
                                                               p_trx_level_type   => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LEVEL_TYPE(p_trx_line_index),
                                                               p_item_id          => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ID(p_trx_line_index),
                                                               p_item_org_id      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ORG_ID(p_trx_line_index),
                                                               p_line_amt         => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_AMT(p_trx_line_index),
                                                               x_assessable_value => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index),
                                                               x_return_status    => l_return_status
                                                               );
          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
          END IF;

         /*-----------------------------------------------------+
          |   Get the default value for product type            |
          +-----------------------------------------------------*/
          ZX_TCM_EXT_SERVICES_PUB.get_default_classif_code(p_fiscal_type_code  => 'PRODUCT_TYPE',
                                                           p_country_code      => l_taxation_country,
                                                           p_application_id    => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index),
                                                           p_entity_code       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index),
                                                           p_event_class_code  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index),
                                                           p_source_event_class_code  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(p_trx_line_index),
                                                           p_item_id           => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ID(p_trx_line_index),
                                                           p_org_id            => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(p_trx_line_index),
                                                           p_default_code      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index),
                                                           p_return_status     => l_return_status
                                                           );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
             x_return_status := l_return_status;
             IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
             END IF;
             RETURN;
          END IF;
          IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index) is null THEN
            ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index) := l_product_type;
          END IF;

     END IF; --event class code in ('PO_PA','RELEASE') or user_upd_det_factors_flag ='N'
   END; --WHEN NO_DATA_FOUND

   IF l_trx_line_id is not null THEN  --copy additional tax attributes to global structure
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_business_category(p_trx_line_index)       := l_trx_business_category;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_intended_use(p_trx_line_index)           := l_line_intended_use;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.user_defined_fisc_class(p_trx_line_index)     := l_user_defined_fisc_class;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_fisc_classification(p_trx_line_index) := l_product_fisc_classification;
        IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_category(p_trx_line_index) IS NULL THEN
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_category(p_trx_line_index)          := l_product_category;
        END IF;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.assessable_value(p_trx_line_index)            := l_assessable_value;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index)                := l_product_type;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.user_upd_det_factors_flag(p_trx_line_index)   := l_user_upd_det_factors_flag;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.document_sub_type(p_trx_line_index)           := l_document_sub_type;
        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.default_taxation_country(p_trx_line_index)    := l_taxation_country;
   END IF;

   IF l_product_id is not null AND
      (l_product_id <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_id(p_trx_line_index) OR
      l_product_org_id <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_org_id(p_trx_line_index)) THEN

        ZX_DEFAULT_AUTOMATION_PKG.redefault_intended_use(p_application_id    => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index),
                                                         p_entity_code       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index),
                                                         p_event_class_code  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index),
                                                         p_internal_org_id   => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(p_trx_line_index),
                                                         p_country_code      => l_taxation_country,
                                                         p_item_id           => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ID(p_trx_line_index),
                                                         p_item_org_id       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ORG_ID(p_trx_line_index) ,
                                                         x_intended_use      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_INTENDED_USE(p_trx_line_index),
                                                         x_return_status     => l_return_status
                                                         );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;

       /*-----------------------------------------------------+
        |   Get the default value for product type            |
        +-----------------------------------------------------*/
        ZX_TCM_EXT_SERVICES_PUB.get_default_classif_code(p_fiscal_type_code  => 'PRODUCT_TYPE',
                                                         p_country_code      => l_taxation_country,
                                                         p_application_id    => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index),
                                                         p_entity_code       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index),
                                                         p_event_class_code  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index),
                                                         p_source_event_class_code  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.SOURCE_EVENT_CLASS_CODE(p_trx_line_index),
                                                         p_item_id           => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ID(p_trx_line_index),
                                                         p_org_id            => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(p_trx_line_index),
                                                         p_default_code      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index),
                                                         p_return_status     => l_return_status
                                                         );

        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;

        IF ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index) is null THEN
          ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_TYPE(p_trx_line_index) := l_product_type;
        END IF;

       /*-----------------------------------------------------------+
        |   Get the default value for product fiscal classification |
        +---------------------------------------------------------*/
        ZX_DEFAULT_AUTOMATION_PKG.redefault_prod_fisc_class_code(p_application_id       => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index),
                                                                 p_entity_code          => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index),
                                                                 p_event_class_code     => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index),
                                                                 p_internal_org_id      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(p_trx_line_index),
                                                                 p_country_code         => l_taxation_country,
                                                                 p_item_id              => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ID(p_trx_line_index),
                                                                 p_item_org_id          => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ORG_ID(p_trx_line_index),
                                                                 x_prod_fisc_class_code => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_FISC_CLASSIFICATION(p_trx_line_index),
                                                                 x_return_status        => l_return_status
                                                                 );

       IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;
   END IF;
--   IF l_product_id is not null AND
--      (l_product_id <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_id(p_trx_line_index) OR
--      l_product_org_id <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_org_id(p_trx_line_index) OR
--      l_line_amt <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_amt(p_trx_line_index)) THEN
   IF l_line_amt <> ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.line_amt(p_trx_line_index) THEN    -- Bug 5659357

      ZX_DEFAULT_AUTOMATION_PKG.redefault_assessable_value(p_application_id   => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.APPLICATION_ID(p_trx_line_index),
                                                              p_entity_code      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ENTITY_CODE(p_trx_line_index),
                                                              p_event_class_code => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.EVENT_CLASS_CODE(p_trx_line_index),
                                                              p_internal_org_id  => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.INTERNAL_ORGANIZATION_ID(p_trx_line_index),
                                                              p_trx_id           => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_ID(p_trx_line_index),
                                                              p_trx_line_id      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LINE_ID(p_trx_line_index),
                                                              p_trx_level_type   => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.TRX_LEVEL_TYPE(p_trx_line_index),
                                                              p_item_id          => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ID(p_trx_line_index),
                                                              p_item_org_id      => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.PRODUCT_ORG_ID(p_trx_line_index),
                                                              p_line_amt         => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.LINE_AMT(p_trx_line_index),
                                                              x_assessable_value => ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ASSESSABLE_VALUE(p_trx_line_index),
                                                              x_return_status    => l_return_status
                                                              );
        IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
          IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
          END IF;
          RETURN;
        END IF;
   END IF;
   /*-------------------------------------------------------+
    |   Call TDM API to default the tax classification always|
    +-------------------------------------------------------*/
   IF p_event_class_rec.application_id <> 222 THEN
    -- Bug 8565358
    -- reverting the changes done for Bug 7045194
    --Bug#7045194: validate current input/output tax classification
    --code before redefaulting it from setups.

--    IF p_event_class_rec.prod_family_grp_code ='P2P' THEN
--
--     IF l_input_tax_class_code IS NOT NULL THEN
--      OPEN validate_input_tcc_csr (
--                l_input_tax_class_code,
--                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_date(p_trx_line_index),
--                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.internal_organization_id(p_trx_line_index));
--
--      FETCH validate_input_tcc_csr INTO l_tcc_valid;
--      CLOSE validate_input_tcc_csr;
--      IF l_tcc_valid > 0 THEN
--        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.input_tax_classification_code(p_trx_line_index) := l_input_tax_class_code;
--      END IF;
--
--    END IF;
--
--   ELSIF p_event_class_rec.prod_family_grp_code ='O2C' THEN
--    IF l_output_tax_class_code IS NOT NULL THEN
--      OPEN validate_output_tcc_csr (
--                l_output_tax_class_code,
--                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_date(p_trx_line_index),
--                ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.internal_organization_id(p_trx_line_index));
--
--      FETCH validate_output_tcc_csr INTO l_tcc_valid;
--      CLOSE validate_output_tcc_csr;
--      IF l_tcc_valid > 0 THEN
--        ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.output_tax_classification_code(p_trx_line_index) := l_output_tax_class_code;
--
--      END IF;
--    END IF;
--  END IF;    -- validate current input/output tax classification code

  --
  --Bug#7045194: redefaulting tax classification code if
  -- the current one is invalid
  --
--  IF l_tcc_valid = 0 THEN

          l_redef_tax_class_code_rec.application_id                := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.application_id(p_trx_line_index);
          l_redef_tax_class_code_rec.entity_code                   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.entity_code(p_trx_line_index);
          l_redef_tax_class_code_rec.event_class_code              := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.event_class_code(p_trx_line_index);
          l_redef_tax_class_code_rec.internal_organization_id      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.internal_organization_id(p_trx_line_index);
          l_redef_tax_class_code_rec.trx_id                        := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_id(p_trx_line_index);
          l_redef_tax_class_code_rec.trx_line_id                   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_line_id(p_trx_line_index);
          l_redef_tax_class_code_rec.trx_level_type                := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_level_type(p_trx_line_index);
          l_redef_tax_class_code_rec.ledger_id                     := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ledger_id(p_trx_line_index);
          l_redef_tax_class_code_rec.trx_date                      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.trx_date(p_trx_line_index);
          l_redef_tax_class_code_rec.ref_doc_application_id        := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ref_doc_application_id(p_trx_line_index);
          l_redef_tax_class_code_rec.ref_doc_event_class_code      := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ref_doc_event_class_code(p_trx_line_index);
          l_redef_tax_class_code_rec.ref_doc_entity_code           := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ref_doc_entity_code(p_trx_line_index);
          l_redef_tax_class_code_rec.ref_doc_trx_id                := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ref_doc_trx_id(p_trx_line_index);
          l_redef_tax_class_code_rec.ref_doc_line_id               := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ref_doc_line_id(p_trx_line_index);
          l_redef_tax_class_code_rec.ref_doc_trx_level_type        := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ref_doc_trx_level_type(p_trx_line_index);
          l_redef_tax_class_code_rec.account_ccid                  := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.account_ccid(p_trx_line_index);
          l_redef_tax_class_code_rec.account_string                := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.account_string(p_trx_line_index);
          l_redef_tax_class_code_rec.product_id                    := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_id(p_trx_line_index);
          l_redef_tax_class_code_rec.product_org_id                := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.product_org_id(p_trx_line_index);
          l_redef_tax_class_code_rec.receivables_trx_type_id       := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.receivables_trx_type_id(p_trx_line_index);
          l_redef_tax_class_code_rec.ship_third_pty_acct_id        := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_third_pty_acct_id(p_trx_line_index);
          l_redef_tax_class_code_rec.bill_third_pty_acct_id        := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_third_pty_acct_id(p_trx_line_index);
          l_redef_tax_class_code_rec.ship_third_pty_acct_site_id   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_third_pty_acct_site_id(p_trx_line_index);
          l_redef_tax_class_code_rec.bill_third_pty_acct_site_id   := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_third_pty_acct_site_id(p_trx_line_index);
          l_redef_tax_class_code_rec.ship_to_cust_acct_site_use_id := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_cust_acct_site_use_id(p_trx_line_index);
          l_redef_tax_class_code_rec.bill_to_cust_acct_site_use_id := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.bill_to_cust_acct_site_use_id(p_trx_line_index);
          l_redef_tax_class_code_rec.ship_to_location_id           := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.ship_to_location_id(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute1         := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute1(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute2         := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute2(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute3         := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute3(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute4         := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute4(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute5         := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute5(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute6         := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute6(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute7         := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute7(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute8         := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute8(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute9         := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute9(p_trx_line_index);
          l_redef_tax_class_code_rec.defaulting_attribute10        := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.defaulting_attribute10(p_trx_line_index);
          l_redef_tax_class_code_rec.tax_user_override_flag        := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.user_upd_det_factors_flag(p_trx_line_index);
          l_redef_tax_class_code_rec.legal_entity_id               := ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.legal_entity_id(p_trx_line_index);

          IF l_redef_tax_class_code_rec.tax_user_override_flag = 'Y' THEN
            IF p_event_class_rec.prod_family_grp_code ='P2P' THEN
              l_redef_tax_class_code_rec.overridden_tax_cls_code := l_input_tax_class_code;
            ELSIF p_event_class_rec.prod_family_grp_code ='O2C' THEN
              l_redef_tax_class_code_rec.overridden_tax_cls_code := l_output_tax_class_code;
            END IF;
          END IF;

          ZX_TAX_DEFAULT_PKG.get_default_tax_classification (p_definfo        =>  l_redef_tax_class_code_rec,
                                                             p_return_status  =>  l_return_status,
                                                             p_error_buffer   =>  l_error_buffer
                                                            );

          IF l_return_status <> FND_API.G_RET_STS_SUCCESS THEN
            x_return_status := l_return_status;
            IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
                FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name,
               ' RETURN_STATUS = ' || x_return_status);
            END IF;
            RETURN;
          ELSE
            IF p_event_class_rec.prod_family_grp_code ='P2P' THEN
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.input_tax_classification_code(p_trx_line_index) := l_redef_tax_class_code_rec.x_tax_classification_code;
            ELSIF p_event_class_rec.prod_family_grp_code ='O2C' AND --AR will always pass the classification code so do not override
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.output_tax_classification_code(p_trx_line_index) is null THEN
               ZX_GLOBAL_STRUCTURES_PKG.trx_line_dist_tbl.output_tax_classification_code(p_trx_line_index) := l_redef_tax_class_code_rec.x_tax_classification_code;
            END IF;
          END IF;
    --Bug 8565358
    -- reverting the changes done for Bug 7045194
    -- END IF;   -- bug#7045194- current input/output tcc not valid

   END IF; --application_id <>222

   IF ( G_LEVEL_PROCEDURE >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_PROCEDURE,G_MODULE_NAME||l_api_name||'.END',
        G_PKG_NAME||': '||l_api_name||'()-'||' RETURN_STATUS = ' || x_return_status);
   END IF;

   EXCEPTION
      WHEN OTHERS THEN
          x_return_status := FND_API.G_RET_STS_UNEXP_ERROR ;
          IF ( G_LEVEL_EXCEPTION >= G_CURRENT_RUNTIME_LEVEL) THEN
              FND_LOG.STRING(G_LEVEL_EXCEPTION,G_MODULE_NAME||l_api_name,SQLERRM);
          END IF;
 END call_redefaulting_APIs;


 -- This private procedure is called from calculate (GTT version) and import procedures
 -- and populates the source event class info into the event_class_rec.
 -- this procedure should be called once per transaction.

 PROCEDURE pop_src_evnt_cls_info
  ( p_trx_line_index    IN     NUMBER,
    p_event_class_rec   IN OUT NOCOPY  ZX_API_PUB.event_class_rec_type,
    x_return_status 	OUT    NOCOPY  VARCHAR2 )
 IS
   l_api_name CONSTANT VARCHAR2(30)  := 'pop_src_evnt_cls_info';
 BEGIN

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||
                   '.BEGIN',G_PKG_NAME||': '||l_api_name||'()+'||
                   ', RETURN_STATUS = ' || x_return_status);
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    IF zx_global_structures_pkg.trx_line_dist_tbl.source_event_class_code(p_trx_line_index)
       <> 'INTERCOMPANY_TRX'
    THEN
        SELECT mapp.event_class_mapping_id,
               mapp.tax_event_class_code,
               mapp.process_for_applicability_flag
          INTO p_event_class_rec.source_event_class_mapping_id,
               p_event_class_rec.source_tax_event_class_code,
               p_event_class_rec.source_process_for_appl_flag
          FROM zx_evnt_cls_mappings mapp
         WHERE mapp.application_id     = zx_global_structures_pkg.trx_line_dist_tbl.source_application_id(p_trx_line_index)
           AND mapp.entity_code        = zx_global_structures_pkg.trx_line_dist_tbl.source_entity_code(p_trx_line_index)
           AND mapp.event_class_code   = zx_global_structures_pkg.trx_line_dist_tbl.source_event_class_code(p_trx_line_index);
      ELSE
         p_event_class_rec.source_tax_event_class_code:= p_event_class_rec.intrcmp_tx_evnt_cls_code;

         SELECT mapp.event_class_mapping_id,
               mapp.tax_event_class_code,
               mapp.process_for_applicability_flag
          INTO p_event_class_rec.source_event_class_mapping_id,
               p_event_class_rec.source_tax_event_class_code,
               p_event_class_rec.source_process_for_appl_flag
          FROM zx_evnt_cls_mappings mapp
         WHERE mapp.application_id     = p_event_class_rec.intrcmp_src_appln_id
           AND mapp.entity_code        = p_event_class_rec.intrcmp_src_entity_code
           AND mapp.event_class_code   = p_event_class_rec.intrcmp_src_evnt_cls_code;
       END IF;


    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||
                   '.END',G_PKG_NAME||': '||l_api_name||'()-'||
                   ', RETURN_STATUS = ' || x_return_status);
    END IF;

 EXCEPTION
        WHEN OTHERS THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,
                 'Unable to derive the source event calss info ' ||
                 SQLERRM);
            END IF;

 END pop_src_evnt_cls_info;
/* -- Procedure commented by ssohal
  PROCEDURE populate_errors
  ( p_event_class_rec   IN     ZX_API_PUB.event_class_rec_type,
    x_return_status 	OUT    NOCOPY  VARCHAR2 )
 IS
   l_api_name CONSTANT VARCHAR2(30)  := 'populate_errors';
   l_context_info_rec  ZX_API_PUB.context_info_rec_type;
 BEGIN

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||
                   '.BEGIN',G_PKG_NAME||': '||l_api_name||'()+'||
                   ', RETURN_STATUS = ' || x_return_status);
    END IF;

    x_return_status := FND_API.G_RET_STS_SUCCESS;

    FOR i IN 1 .. ZX_API_PUB.errors_tbl.application_id.COUNT LOOP
      IF ZX_API_PUB.errors_tbl.application_id(i) IS NULL THEN
        ZX_API_PUB.errors_tbl.application_id(i) := p_event_class_rec.APPLICATION_ID;
      END IF ;
      IF ZX_API_PUB.errors_tbl.ENTITY_CODE(i) IS NULL THEN
	ZX_API_PUB.errors_tbl.ENTITY_CODE(i) := p_event_class_rec.ENTITY_CODE;
      END IF;
      IF ZX_API_PUB.errors_tbl.EVENT_CLASS_CODE(i) IS NULL THEN
	ZX_API_PUB.errors_tbl.EVENT_CLASS_CODE(i) := p_event_class_rec.EVENT_CLASS_CODE;
      END IF;
      IF ZX_API_PUB.errors_tbl.TRX_ID(i) IS NULL THEN
	ZX_API_PUB.errors_tbl.TRX_ID(i) := p_event_class_rec.TRX_ID;
      END IF;
      IF ZX_API_PUB.errors_tbl.message_text(i) IS NULL THEN
	ZX_API_PUB.errors_tbl.message_text(i) := 'UNEXPECTED_ERROR_POPULATE_ERROR';
      END IF;
    END LOOP;
    IF ZX_API_PUB.errors_tbl.application_id.COUNT = 0 THEN
	  l_context_info_rec.APPLICATION_ID   := p_event_class_rec.APPLICATION_ID;
          l_context_info_rec.ENTITY_CODE      := p_event_class_rec.ENTITY_CODE;
          l_context_info_rec.EVENT_CLASS_CODE := p_event_class_rec.EVENT_CLASS_CODE;
          l_context_info_rec.TRX_ID           := p_event_class_rec.TRX_ID;
          l_context_info_rec.TRX_LINE_ID      := NULL;
          l_context_info_rec.TRX_LEVEL_TYPE   := NULL;
      IF nvl(zx_global_structures_pkg.g_ptnr_srvc_subscr_flag,'N') = 'Y' THEN
          FOR i in ZX_VERTEX_TAX_SERVICE_PKG.g_messages_tbl.error_message_string.first..ZX_VERTEX_TAX_SERVICE_PKG.g_messages_tbl.error_message_string.last
          LOOP
            FND_MESSAGE.SET_NAME('ZX','ZX_GENERIC_TEXT');
            FND_MESSAGE.SET_TOKEN('GENERIC_TEXT',ZX_VERTEX_TAX_SERVICE_PKG.g_messages_tbl.error_message_string(i));
            ZX_API_PUB.add_msg (p_context_info_rec => l_context_info_rec);
          END LOOP;
       ELSE
          ZX_API_PUB.add_msg (p_context_info_rec => l_context_info_rec);
       END IF;
    END IF;

    IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||
                   '.END',G_PKG_NAME||': '||l_api_name||'()-'||
                   ', RETURN_STATUS = ' || x_return_status);
    END IF;

 EXCEPTION
        WHEN OTHERS THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,
                 'Unable to populate error information ' ||
                 SQLERRM);
            END IF;

 END populate_errors;
*/
-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--    Pop_Index_Attrbs_To_Null
--
--  DESCRIPTION
--    To populate all the attributes of plsql table structure
--    ZX_Global_Structures_Pkg.trx_line_dist_tbl to NULL
--    at a particular index p_index except key attributes
--
--  CALLED BY
--    calculate_tax
-----------------------------------------------------------------------
PROCEDURE Pop_Index_Attrbs_To_Null ( p_index          IN  NUMBER,
                                     x_return_status  OUT NOCOPY VARCHAR2
 ) IS
 -- Variables
   l_api_name           CONSTANT VARCHAR2(30):= 'POP_INDEX_ATTRBS_TO_NULL';
   l_application_id     NUMBER;
   l_entity_code        VARCHAR(30);
   l_event_class_code   VARCHAR(30);
   l_trx_id             NUMBER;
   l_trx_line_id        NUMBER;
   l_trx_level_type     VARCHAR(30);

 BEGIN
   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',
         'ZX_SRVC_TYP_PKG: Pop_Index_Attrbs_To_Null()+');
   END IF;
   -- Copy the key attributes in the local variables
   l_application_id   := ZX_Global_Structures_Pkg.trx_line_dist_tbl.Application_id(p_index);
   l_entity_code      := ZX_Global_Structures_Pkg.trx_line_dist_tbl.Entity_code(p_index);
   l_event_class_code := ZX_Global_Structures_Pkg.trx_line_dist_tbl.Event_Class_code(p_index);
   l_trx_id           := ZX_Global_Structures_Pkg.trx_line_dist_tbl.Trx_id(p_index);
   l_trx_line_id      := ZX_Global_Structures_Pkg.trx_line_dist_tbl.Trx_line_Id(p_index);
   l_trx_level_type   := ZX_Global_Structures_Pkg.trx_line_dist_tbl.Trx_level_type(p_index);

   -- Call the procedure to populate all the attributes of plsql tbl structure
   -- ZX_Global_Structures_Pkg.trx_line_dist_tbl at index p_index to NULL
   ZX_GLOBAL_STRUCTURES_PKG.init_trx_line_dist_tbl (p_index);

   -- Populate the key attributes of ZX_Global_Structures_Pkg.trx_line_dist_tbl
   -- with values of local variables
   ZX_Global_Structures_Pkg.trx_line_dist_tbl.Application_id(p_index)   := l_application_id;
   ZX_Global_Structures_Pkg.trx_line_dist_tbl.Entity_code(p_index)      := l_entity_code;
   ZX_Global_Structures_Pkg.trx_line_dist_tbl.Event_Class_code(p_index) := l_event_class_code;
   ZX_Global_Structures_Pkg.trx_line_dist_tbl.Trx_id(p_index)           := l_trx_id;
   ZX_Global_Structures_Pkg.trx_line_dist_tbl.Trx_line_Id(p_index)      := l_trx_line_id;
   ZX_Global_Structures_Pkg.trx_line_dist_tbl.Trx_level_type(p_index)   := l_trx_level_type;

   IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',
         'ZX_SRVC_TYP_PKG: Pop_Index_Attrbs_To_Null()-');
   END IF;

 EXCEPTION
        WHEN OTHERS THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,
                  'Error occurred in ' || l_api_name || ' : ' ||SQLERRM);
            END IF;

 END Pop_Index_Attrbs_To_Null;

-----------------------------------------------------------------------
--  PRIVATE PROCEDURE
--    Pop_Estb_Id
--
--  DESCRIPTION
--    To populate the main establishment id for a trx_line_id into
--    zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID
--    for a Legal Entity id.
--
--  CALLED BY
--    calculate_tax
-----------------------------------------------------------------------
PROCEDURE Pop_Estb_Id ( p_index           IN            NUMBER,
                        p_event_class_rec IN OUT NOCOPY ZX_API_PUB.event_class_rec_type,
                        x_return_status      OUT NOCOPY     VARCHAR2
 ) IS
   l_api_name           CONSTANT VARCHAR2(30):= 'POP_ESTB_ID';
   l_legal_entity_id     NUMBER;
   l_establishment_id    NUMBER;
   l_tbl_index           BINARY_INTEGER;
   l_trx_date            DATE;

 BEGIN
  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.BEGIN',
         'ZX_SRVC_TYP_PKG: Pop_Estb_Id()+');
  END IF;

  l_legal_entity_id      := ZX_Global_Structures_Pkg.trx_line_dist_tbl.LEGAL_ENTITY_ID(p_index);
  l_trx_date             := ZX_Global_Structures_Pkg.trx_line_dist_tbl.TRX_DATE(p_index);

  IF l_legal_entity_id is NOT NULL  THEN
    l_tbl_index := to_char(l_legal_entity_id);
    IF  NOT l_main_estb_for_entity_tbl.EXISTS(l_tbl_index) THEN
       SELECT xle_etb.establishment_id
         INTO l_establishment_id
         FROM zx_party_tax_profile ptp,
              xle_etb_profiles xle_etb
        WHERE ptp.party_id         = xle_etb.party_id
          AND ptp.party_type_code  = 'LEGAL_ESTABLISHMENT'
          AND xle_etb.legal_entity_id = l_legal_entity_id
          AND xle_etb.main_establishment_flag = 'Y'
          AND l_trx_date BETWEEN NVL(xle_etb.main_effective_from,l_trx_date)
                           AND NVL(xle_etb.main_effective_to,l_trx_date);

       l_main_estb_for_entity_tbl(l_tbl_index).legal_entity_id  := l_legal_entity_id;
       l_main_estb_for_entity_tbl(l_tbl_index).establishment_id := l_establishment_id;
    ELSE
       l_establishment_id := l_main_estb_for_entity_tbl(l_tbl_index).establishment_id;
    END IF;
  END IF;

  zx_global_structures_pkg.trx_line_dist_tbl.ESTABLISHMENT_ID(p_index) := l_establishment_id;
  p_event_class_rec.ESTABLISHMENT_ID := l_establishment_id;

  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',
         ' legal_entity_id: '||l_legal_entity_id || ' :  l_establishment_id : '||l_establishment_id);
  END IF;

  IF ( G_LEVEL_STATEMENT >= G_CURRENT_RUNTIME_LEVEL) THEN
      FND_LOG.STRING(G_LEVEL_STATEMENT,G_MODULE_NAME||l_api_name||'.END',
         'ZX_SRVC_TYP_PKG: Pop_Estb_Id()-');
  END IF;

 EXCEPTION
        WHEN OTHERS THEN
            x_return_status := FND_API.G_RET_STS_UNEXP_ERROR;
            IF ( G_LEVEL_UNEXPECTED >= G_CURRENT_RUNTIME_LEVEL) THEN
               FND_LOG.STRING(G_LEVEL_UNEXPECTED,G_MODULE_NAME||l_api_name,
                  'Error occurred in ' || l_api_name || ' : ' ||SQLERRM);
            END IF;

 END Pop_Estb_Id;

 END ZX_SRVC_TYP_PKG;

/
