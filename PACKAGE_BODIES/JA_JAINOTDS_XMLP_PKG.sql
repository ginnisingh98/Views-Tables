--------------------------------------------------------
--  DDL for Package Body JA_JAINOTDS_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JA_JAINOTDS_XMLP_PKG" AS
/* $Header: JAINOTDSB.pls 120.1 2007/12/25 16:23:37 dwkrishn noship $ */
  FUNCTION CF_VENDOR_NAMEFORMULA0009(VENDOR_ID IN NUMBER) RETURN CHAR IS
    VEN_NAME VARCHAR2(80);
  BEGIN
    SELECT
      VENDOR_NAME
    INTO VEN_NAME
    FROM
      PO_VENDORS
    WHERE VENDOR_ID = CF_VENDOR_NAMEFORMULA0009.VENDOR_ID;
    RETURN (VEN_NAME);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_VENDOR_NAMEFORMULA0009;

  FUNCTION CF_VENDOR_SITEFORMULA(VENDOR_SITE_ID IN NUMBER) RETURN CHAR IS
    SITE_NAME VARCHAR2(15);
  BEGIN
    SELECT
      VENDOR_SITE_CODE
    INTO SITE_NAME
    FROM
      PO_VENDOR_SITES_ALL
    WHERE VENDOR_SITE_ID = CF_VENDOR_SITEFORMULA.VENDOR_SITE_ID;
    RETURN (SITE_NAME);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_VENDOR_SITEFORMULA;

  FUNCTION CF_VENDOR_NAME1FORMULA(VENDOR_ID1 IN NUMBER
                                 ,VENDOR_ID IN NUMBER
                                 ,CF_VENDOR_NAME IN VARCHAR2) RETURN CHAR IS
    VEN_NAME VARCHAR2(100);
  BEGIN
    IF VENDOR_ID1 = VENDOR_ID THEN
      RETURN (CF_VENDOR_NAME);
    ELSE
      SELECT
        VENDOR_NAME
      INTO VEN_NAME
      FROM
        PO_VENDORS
      WHERE VENDOR_ID = VENDOR_ID1;
      RETURN (VEN_NAME);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_VENDOR_NAME1FORMULA;

  FUNCTION CF_VENDOR_SITE_1FORMULA(VENDOR_SITE_ID1 IN NUMBER
                                  ,VENDOR_SITE_ID IN NUMBER
                                  ,CF_VENDOR_SITE IN VARCHAR2) RETURN CHAR IS
    SITE_NAME VARCHAR2(100);
  BEGIN
    IF VENDOR_SITE_ID1 = VENDOR_SITE_ID THEN
      RETURN (CF_VENDOR_SITE);
    ELSE
      SELECT
        VENDOR_SITE_CODE
      INTO SITE_NAME
      FROM
        PO_VENDOR_SITES_ALL
      WHERE VENDOR_SITE_ID = VENDOR_SITE_ID1;
      RETURN (SITE_NAME);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_VENDOR_SITE_1FORMULA;

  FUNCTION CF_TDS_SECTIONFORMULA(VENDOR_ID1 IN NUMBER
                                ,VENDOR_ID IN NUMBER
                                ,INVOICE_ID IN NUMBER
                                ,INVOICE_NUM1 IN VARCHAR2) RETURN CHAR IS
    V_TDS_SECTION VARCHAR2(100);
  BEGIN
    IF VENDOR_ID1 = VENDOR_ID THEN
      RETURN (NULL);
    ELSE
      SELECT
        TDS_SECTION
      INTO V_TDS_SECTION
      FROM
        JAI_AP_TDS_INVOICES
      WHERE INVOICE_ID = CF_TDS_SECTIONFORMULA.INVOICE_ID
        AND TDS_INVOICE_NUM = INVOICE_NUM1;
      RETURN (V_TDS_SECTION);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_TDS_SECTIONFORMULA;

  FUNCTION CF_TDS_TAX_RATEFORMULA(VENDOR_ID1 IN NUMBER
                                 ,VENDOR_ID IN NUMBER
                                 ,INVOICE_ID IN NUMBER
                                 ,INVOICE_NUM1 IN VARCHAR2) RETURN NUMBER IS
    V_TDS_RATE NUMBER;
  BEGIN
    IF VENDOR_ID1 = VENDOR_ID THEN
      RETURN (NULL);
    ELSE
      SELECT
        TDS_TAX_RATE
      INTO V_TDS_RATE
      FROM
        JAI_AP_TDS_INVOICES
      WHERE INVOICE_ID = CF_TDS_TAX_RATEFORMULA.INVOICE_ID
        AND TDS_INVOICE_NUM = INVOICE_NUM1;
      RETURN (V_TDS_RATE);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_TDS_TAX_RATEFORMULA;

  FUNCTION CF_TAX_NAMEFORMULA(VENDOR_ID1 IN NUMBER
                             ,VENDOR_ID IN NUMBER
                             ,INVOICE_ID IN NUMBER
                             ,INVOICE_NUM1 IN VARCHAR2) RETURN CHAR IS
    V_TDS_TAX_NAME VARCHAR2(100);
    V_TDS_TAX_ID NUMBER;
  BEGIN
    IF VENDOR_ID1 = VENDOR_ID THEN
      RETURN (NULL);
    ELSE
      SELECT
        TDS_TAX_ID
      INTO V_TDS_TAX_ID
      FROM
        JAI_AP_TDS_INVOICES
      WHERE INVOICE_ID = CF_TAX_NAMEFORMULA.INVOICE_ID
        AND TDS_INVOICE_NUM = INVOICE_NUM1;
      SELECT
        TAX_NAME
      INTO V_TDS_TAX_NAME
      FROM
        JAI_CMN_TAXES_ALL
      WHERE TAX_ID = V_TDS_TAX_ID;
      RETURN (V_TDS_TAX_NAME);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_TAX_NAMEFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR C_PROGRAM_ID(P_REQUEST_ID IN NUMBER) IS
      SELECT
        CONCURRENT_PROGRAM_ID,
        NVL(ENABLE_TRACE
           ,'N')
      FROM
        FND_CONCURRENT_REQUESTS
      WHERE REQUEST_ID = P_REQUEST_ID;
    V_ENABLE_TRACE FND_CONCURRENT_PROGRAMS.ENABLE_TRACE%TYPE;
    V_PROGRAM_ID FND_CONCURRENT_PROGRAMS.CONCURRENT_PROGRAM_ID%TYPE;
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    P_FROM_DATE_1:=to_char(P_FROM_DATE,'DD-MON-YY');
    P_TO_DATE_1:=to_char(P_TO_DATE,'DD-MON-YY');
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.MESSAGE(1275
               ,'Report Version is 120.2 Last modified date is 25/07/2005')*/NULL;
    BEGIN
      OPEN C_PROGRAM_ID(P_CONC_REQUEST_ID);
      FETCH C_PROGRAM_ID
       INTO V_PROGRAM_ID,V_ENABLE_TRACE;
      CLOSE C_PROGRAM_ID;
      /*SRW.MESSAGE(1275
                 ,'v_program_id -> ' || V_PROGRAM_ID || ', v_enable_trace -> ' || V_ENABLE_TRACE || ', request_id -> ' || P_CONC_REQUEST_ID)*/NULL;
      IF V_ENABLE_TRACE = 'Y' THEN
        EXECUTE IMMEDIATE
          'ALTER SESSION SET EVENTS ''10046 trace name context forever, level 4''';
      END IF;
      RETURN (TRUE);
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(1275
                   ,'Error during enabling the trace. ErrCode -> ' || SQLCODE || ', ErrMesg ->' || SQLERRM)*/NULL;
        RETURN (TRUE);
    END;
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

END JA_JAINOTDS_XMLP_PKG;



/
