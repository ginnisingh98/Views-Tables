--------------------------------------------------------
--  DDL for Package Body EGO_ITEM_GTN_CHG_ATTRS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."EGO_ITEM_GTN_CHG_ATTRS_PKG" as
/* $Header: EGOCGTIB.pls 120.0 2005/11/04 16:46 sshrikha noship $ */


procedure ADD_LANGUAGE
is
begin
  delete from EGO_GTN_ATTR_CHG_TL T
  where not exists
    (select NULL
    from EGO_GTN_ATTR_CHG_B B
    where B.EXTENSION_ID = T.EXTENSION_ID
    );

  update EGO_GTN_ATTR_CHG_TL T set (
      INVOICE_NAME,
      DESCRIPTIVE_SIZE,
      FUNCTIONAL_NAME,
      TRADE_ITEM_FORM_DESCRIPTION,
      WARRANTY_DESCRIPTION,
      TRADE_ITEM_FINISH_DESCRIPTION,
      DESCRIPTION_SHORT
    ) = (select
      B.INVOICE_NAME,
      B.DESCRIPTIVE_SIZE,
      B.FUNCTIONAL_NAME,
      B.TRADE_ITEM_FORM_DESCRIPTION,
      B.WARRANTY_DESCRIPTION,
      B.TRADE_ITEM_FINISH_DESCRIPTION,
      B.DESCRIPTION_SHORT
    from EGO_GTN_ATTR_CHG_TL B
    where B.EXTENSION_ID = T.EXTENSION_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.EXTENSION_ID,
      T.LANGUAGE
  ) in (select
      SUBT.EXTENSION_ID,
      SUBT.LANGUAGE
    from EGO_GTN_ATTR_CHG_TL SUBB, EGO_GTN_ATTR_CHG_TL SUBT
    where SUBB.EXTENSION_ID = SUBT.EXTENSION_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.INVOICE_NAME <> SUBT.INVOICE_NAME
      or (SUBB.INVOICE_NAME is null and SUBT.INVOICE_NAME is not null)
      or (SUBB.INVOICE_NAME is not null and SUBT.INVOICE_NAME is null)
      or SUBB.DESCRIPTIVE_SIZE <> SUBT.DESCRIPTIVE_SIZE
      or (SUBB.DESCRIPTIVE_SIZE is null and SUBT.DESCRIPTIVE_SIZE is not null)
      or (SUBB.DESCRIPTIVE_SIZE is not null and SUBT.DESCRIPTIVE_SIZE is null)
      or SUBB.FUNCTIONAL_NAME <> SUBT.FUNCTIONAL_NAME
      or (SUBB.FUNCTIONAL_NAME is null and SUBT.FUNCTIONAL_NAME is not null)
      or (SUBB.FUNCTIONAL_NAME is not null and SUBT.FUNCTIONAL_NAME is null)
      or SUBB.TRADE_ITEM_FORM_DESCRIPTION <> SUBT.TRADE_ITEM_FORM_DESCRIPTION
      or (SUBB.TRADE_ITEM_FORM_DESCRIPTION is null and SUBT.TRADE_ITEM_FORM_DESCRIPTION is not null)
      or (SUBB.TRADE_ITEM_FORM_DESCRIPTION is not null and SUBT.TRADE_ITEM_FORM_DESCRIPTION is null)
      or SUBB.WARRANTY_DESCRIPTION <> SUBT.WARRANTY_DESCRIPTION
      or (SUBB.WARRANTY_DESCRIPTION is null and SUBT.WARRANTY_DESCRIPTION is not null)
      or (SUBB.WARRANTY_DESCRIPTION is not null and SUBT.WARRANTY_DESCRIPTION is null)
      or SUBB.TRADE_ITEM_FINISH_DESCRIPTION <> SUBT.TRADE_ITEM_FINISH_DESCRIPTION
      or (SUBB.TRADE_ITEM_FINISH_DESCRIPTION is null and SUBT.TRADE_ITEM_FINISH_DESCRIPTION is not null)
      or (SUBB.TRADE_ITEM_FINISH_DESCRIPTION is not null and SUBT.TRADE_ITEM_FINISH_DESCRIPTION is null)
      or SUBB.DESCRIPTION_SHORT <> SUBT.DESCRIPTION_SHORT
      or (SUBB.DESCRIPTION_SHORT is null and SUBT.DESCRIPTION_SHORT is not null)
      or (SUBB.DESCRIPTION_SHORT is not null and SUBT.DESCRIPTION_SHORT is null)
  ));

  insert into EGO_GTN_ATTR_CHG_TL (
    EXTENSION_ID,
    INVENTORY_ITEM_ID,
    ORGANIZATION_ID,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    ITEM_CATALOG_GROUP_ID,
    REVISION_ID,
    INVOICE_NAME,
    DESCRIPTIVE_SIZE,
    FUNCTIONAL_NAME,
    TRADE_ITEM_FORM_DESCRIPTION,
    WARRANTY_DESCRIPTION,
    TRADE_ITEM_FINISH_DESCRIPTION,
    DESCRIPTION_SHORT,
    LANGUAGE,
    SOURCE_LANG,
    CHANGE_ID,
    CHANGE_LINE_ID,
    IMPLEMENTATION_DATE,
    ACD_TYPE
  ) select /*+ ORDERED */
    B.EXTENSION_ID,
    B.INVENTORY_ITEM_ID,
    B.ORGANIZATION_ID,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATE_LOGIN,
    B.ITEM_CATALOG_GROUP_ID,
    B.REVISION_ID,
    B.INVOICE_NAME,
    B.DESCRIPTIVE_SIZE,
    B.FUNCTIONAL_NAME,
    B.TRADE_ITEM_FORM_DESCRIPTION,
    B.WARRANTY_DESCRIPTION,
    B.TRADE_ITEM_FINISH_DESCRIPTION,
    B.DESCRIPTION_SHORT,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG,
    B.CHANGE_ID,
    B.CHANGE_LINE_ID,
    B.IMPLEMENTATION_DATE,
    B.ACD_TYPE
  from EGO_GTN_ATTR_CHG_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from EGO_GTN_ATTR_CHG_TL T
    where T.EXTENSION_ID = B.EXTENSION_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end EGO_ITEM_GTN_CHG_ATTRS_PKG;

/
