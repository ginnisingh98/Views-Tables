--------------------------------------------------------
--  DDL for Package Body PA_CLIENT_EXTN_STATUS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PA_CLIENT_EXTN_STATUS" AS
/* $Header: PAXVPS2B.pls 120.2 2005/08/31 11:08:27 vmangulu noship $  */
--=========================================================
--
-- ----------------------------------------------------------------------------------------------
-- PROJECT, TASK AND RESOURCE CUSTOMIZATION FUNCTIONS
--
-- These functions determine whether the get_cols procedure should be used by the
-- Post-Query triggers in Project Status Inquiry form:
-- o	Project Status window calls ProjectCustomExtn
-- o	Task Status window calls TaskCustomExtn
-- o	Resource Status window calls RsrcCustomExtn
--
-- The allowable return values are upper-case, 'Y'  or 'N'.
--
-- By DEFAULT, this package sets the return values for all
-- functions to  'N' .
--
-- If a function returns 'N', then the following will occur:
--
--  o	The extension will NOT  be called for the corresponding
--	block Post_Query trigger.
--  o	The Project Status Inquiry form will populate
-- 	the block fields from the corresponding view generated by the
-- 	Project Status Column setup form.
--  o	If the client changes and regenerates the
--	corresponding view definition in
--  	the Project Status Column setup form, the data
-- 	retrieved by the modified view will be reflected in the
-- 	Project Status Inquiry form.
--
-- ----------------------------------------------------------------------------------------------
--

FUNCTION ProjCustomExtn RETURN VARCHAR2
	IS
BEGIN

	RETURN ('N');
END;

FUNCTION TaskCustomExtn RETURN VARCHAR2
	IS
BEGIN

	RETURN ('N');
END;

FUNCTION RsrcCustomExtn RETURN VARCHAR2
	IS
BEGIN

	RETURN ('N');
END;

--
-- ========================================================
-- 14-JUL-99, jwhite:
--
--  Functions to Enable Project Status Totals Processing
-- ========================================================
--
--      PLEASE SEE THE COMMENTS section of this package for more
--      details. You may also need to modify a user-defined
--      totals view.
--
--      If the Getcols extension is enabled, then
--      you must modify this function to RETURN ('N') if you
--      want PSI Totals functionality to be enabled.
--
-- 	If you want to enable the Get_Totals procedure,
--	you must hardcode the Proj_Tot_Custom_Extn function to
--	RETURN ('Y').
--
--

        FUNCTION Hide_Totals RETURN VARCHAR2
        IS
        BEGIN
                 RETURN (ProjCustomExtn);
        END;

        FUNCTION Proj_Tot_Custom_Extn RETURN VARCHAR2
        IS
        BEGIN
		RETURN ('N');
	END;



--
-- ========================================================
--	Generic Procedure to Process Derived Columns in Oracle Forms
--	Project Status Inquiry
-- ========================================================
--

PROCEDURE getcols (x_project_id			        IN NUMBER
		, x_task_id				IN NUMBER
		, x_resource_list_member_id		IN NUMBER
		, x_cost_budget_type_code		IN VARCHAR2
		, x_rev_budget_type_code		IN VARCHAR2
		, x_status_view				IN VARCHAR2
		, x_pa_install				IN VARCHAR2
		, x_derived_col_1			OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
		, x_derived_col_2			OUT NOCOPY VARCHAR2	 --File.Sql.39 bug 4440895
		, x_derived_col_3			OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
		, x_derived_col_4			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_5			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_6			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_7			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_8			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_9			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_10			OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_derived_col_11			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_12			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_13			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_14			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_15			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_16			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_17			OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_derived_col_18			OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_derived_col_19			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_20			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_21			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_22			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_23			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_24			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_25			OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_derived_col_26			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_27			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_28			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_29			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_30			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_31			OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_derived_col_32			OUT NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_derived_col_33			OUT NOCOPY NUMBER) --File.Sql.39 bug 4440895
IS

	p_burdened_cost_itd		NUMBER  := 0;
	p_base_burdened_cost_tot	NUMBER  := 0;
	p_actuals_labor_hours_itd	NUMBER  := 0;
	p_base_cost_labor_hours_tot	NUMBER  := 0;
	p_cmt_burdened_cost_ptd		NUMBER  := 0;
	p_base_burdened_cost_itd	NUMBER  := 0;
	p_base_revenue_tot		NUMBER  := 0;
	p_revenue_itd			NUMBER  := 0;
	p_revenue_ptd			NUMBER  := 0;

BEGIN

IF (x_status_view = 'PROJECTS')	THEN

	SELECT 	nvl(burdened_cost_itd, 0)
			, nvl(baseline_burdened_cost_tot, 0)
			, nvl(actuals_labor_hours_itd, 0)
			, nvl(baseline_cost_labor_hours_tot, 0)
			, nvl(cmt_burdened_cost_ptd, 0)
			, nvl(baseline_burdened_cost_itd, 0)
			, nvl(baseline_revenue_tot, 0)
			, nvl(revenue_itd, 0)
			, nvl(revenue_ptd, 0)
	INTO	p_burdened_cost_itd
			, p_base_burdened_cost_tot
			, p_actuals_labor_hours_itd
			, p_base_cost_labor_hours_tot
			, p_cmt_burdened_cost_ptd
			, p_base_burdened_cost_itd
			, p_base_revenue_tot
			, p_revenue_itd
			, p_revenue_ptd
	FROM 	pa_status_proj_v
	WHERE		project_id =  x_project_id;

ELSIF (x_status_view = 'TASKS') THEN

	SELECT 	nvl(burdened_cost_itd, 0)
			, nvl(baseline_burdened_cost_tot, 0)
			, nvl(actuals_labor_hours_itd, 0)
			, nvl(baseline_cost_labor_hours_tot, 0)
			, nvl(cmt_burdened_cost_ptd, 0)
			, nvl(baseline_burdened_cost_itd, 0)
			, nvl(baseline_revenue_tot, 0)
			, nvl(revenue_itd, 0)
			, nvl(revenue_ptd, 0)
	INTO	p_burdened_cost_itd
		, p_base_burdened_cost_tot
		, p_actuals_labor_hours_itd
		, p_base_cost_labor_hours_tot
		, p_cmt_burdened_cost_ptd
		, p_base_burdened_cost_itd
		, p_base_revenue_tot
		, p_revenue_itd
		, p_revenue_ptd
	FROM 	pa_status_task_v
	WHERE		project_id =  x_project_id
	AND		task_id 	   =  x_task_id;

ELSIF (x_status_view = 'RESOURCES') THEN

   IF (x_task_id IS NULL) THEN
	SELECT 	nvl(burdened_cost_itd, 0)
			, nvl(baseline_burdened_cost_tot, 0)
			, nvl(actuals_labor_hours_itd, 0)
			, nvl(baseline_cost_labor_hours_tot, 0)
			, nvl(cmt_burdened_cost_ptd, 0)
			, nvl(baseline_burdened_cost_itd, 0)
			, nvl(baseline_revenue_tot, 0)
			, nvl(revenue_itd, 0)
	INTO	p_burdened_cost_itd
		, p_base_burdened_cost_tot
		, p_actuals_labor_hours_itd
		, p_base_cost_labor_hours_tot
		, p_cmt_burdened_cost_ptd
		, p_base_burdened_cost_itd
		, p_base_revenue_tot
		, p_revenue_itd
	FROM 	pa_status_rsrc_v
	WHERE		project_id =  x_project_id
	AND		task_id   is null
	AND		resource_list_member_id = x_resource_list_member_id;

  ELSE
	SELECT 	nvl(burdened_cost_itd, 0)
			, nvl(baseline_burdened_cost_tot, 0)
			, nvl(actuals_labor_hours_itd, 0)
			, nvl(baseline_cost_labor_hours_tot, 0)
			, nvl(cmt_burdened_cost_ptd, 0)
			, nvl(baseline_burdened_cost_itd, 0)
			, nvl(baseline_revenue_tot, 0)
			, nvl(revenue_itd, 0)
	INTO	p_burdened_cost_itd
		, p_base_burdened_cost_tot
		, p_actuals_labor_hours_itd
		, p_base_cost_labor_hours_tot
		, p_cmt_burdened_cost_ptd
		, p_base_burdened_cost_itd
		, p_base_revenue_tot
		, p_revenue_itd
	FROM 	pa_status_rsrc_v
	WHERE		project_id =  x_project_id
	AND		task_id     =   x_task_id
	AND		resource_list_member_id = x_resource_list_member_id;
  END IF;
ELSE
		x_derived_col_3	:= '*** INVALID ARGUEMENT ***';
		Return;
END IF;
--
--=========================================================
--	Calculate Derived Amounts and Pass Derived Parameters Back to Form
--=========================================================
--

IF  (x_status_view = 'RESOURCES')  THEN

-- Extension called from Resources Status window

---------	Costing Derived Columns ---------------------------------

-- Financial % Complete
	IF (p_base_burdened_cost_tot = 0)	THEN
		x_derived_col_24 :=  NULL;
	ELSE
		x_derived_col_24 := ROUND((p_burdened_cost_itd/p_base_burdened_cost_tot) * 100);
	END IF;

-- Hours % Complete
	IF (p_base_cost_labor_hours_tot = 0) THEN
		x_derived_col_25 := NULL;
	ELSE
	x_derived_col_25 := ROUND((p_actuals_labor_hours_itd/ p_base_cost_labor_hours_tot) * 100);
	END IF;

-- Estimate To Complete
	x_derived_col_26 := (ROUND(p_base_burdened_cost_tot - p_cmt_burdened_cost_ptd - 	p_burdened_cost_itd))/(PA_STATUS.Get_Factor);

-- Total Cost ITD
	x_derived_col_27 := (ROUND(p_burdened_cost_itd + p_cmt_burdened_cost_ptd))/(PA_STATUS.Get_Factor);

-- Over Budget
	IF ((p_burdened_cost_itd + p_cmt_burdened_cost_ptd )  > (p_base_burdened_cost_itd * 1.1)) 	THEN
		x_derived_col_3 := '*';
	ELSE
		x_derived_col_3 := NULL;
	END IF;
--
---------------------------------- Billing Derived Columns ------------------
--
	IF (x_pa_install = 'BILLING') THEN

-- Budgeted/Plan Margin, ITD
		x_derived_col_28  := (ROUND(p_base_revenue_tot - p_base_burdened_cost_tot)) /(PA_STATUS.Get_Factor);

-- Actual Margin, ITD
		x_derived_col_29  := (ROUND(p_revenue_itd - p_burdened_cost_itd)) /(PA_STATUS.Get_Factor);

	ELSE

		x_derived_col_28 := NULL;
		x_derived_col_29 := NULL;

	END IF;
--
ELSE
-- This Extension must have been called from Project or Task Status

---------	Costing Derived Columns ---------------------------------

-- Financial % Complete
	IF (p_base_burdened_cost_tot = 0)	THEN
		x_derived_col_22 :=  NULL;
	ELSE
		x_derived_col_22 := ROUND((p_burdened_cost_itd/p_base_burdened_cost_tot) * 100);
	END IF;

-- Hours % Complete
	IF (p_base_cost_labor_hours_tot = 0) THEN
		x_derived_col_23 := NULL;
	ELSE
	x_derived_col_23 := ROUND((p_actuals_labor_hours_itd/ p_base_cost_labor_hours_tot) * 100);
	END IF;

-- Estimate To Complete
	x_derived_col_24 := (ROUND(p_base_burdened_cost_tot - p_cmt_burdened_cost_ptd - 	p_burdened_cost_itd))/(PA_STATUS.Get_Factor);

-- Total Cost ITD
	x_derived_col_25 := (ROUND(p_burdened_cost_itd + p_cmt_burdened_cost_ptd))/(PA_STATUS.Get_Factor);

-- Over Budget
	IF ((p_burdened_cost_itd + p_cmt_burdened_cost_ptd )  > (p_base_burdened_cost_itd * 1.1)) 	THEN
		x_derived_col_3 := '*';
	ELSE
		x_derived_col_3 := NULL;
	END IF;
--
---------------------------------- Billing Derived Columns ------------------
--
	IF (x_pa_install = 'BILLING') THEN

-- Budgeted/Plan Margin, ITD
		x_derived_col_26  := (ROUND(p_base_revenue_tot - p_base_burdened_cost_tot)) /(PA_STATUS.Get_Factor);

-- Actual Margin, ITD
		x_derived_col_27  := (ROUND(p_revenue_itd - p_burdened_cost_itd)) /(PA_STATUS.Get_Factor);

	ELSE

		x_derived_col_26 := NULL;
		x_derived_col_27 := NULL;

	END IF;
----------------------------------------------------------------------------------------
-- Cost Accrual code
----------------------------------------------------------------------------------------
--Please UNcomment the call to this procedure if you have cost accrual enabled
--and want to display the columns in PSI
--this procedure is defined in the cost accrual billing extension template.
----------------------------------------------------------------------------------------

/***************************************************************************************
 pa_rev_ca.get_psi_cols (
		x_project_id
		, x_task_id
		, x_resource_list_member_id
		, x_cost_budget_type_code
		, x_rev_budget_type_code
		, x_status_view
		, x_pa_install
		, x_derived_col_1
		, x_derived_col_2
		, x_derived_col_3
		, x_derived_col_4
		, x_derived_col_5
		, x_derived_col_6
		, x_derived_col_7
		, x_derived_col_8
		, x_derived_col_9
		, x_derived_col_10
		, x_derived_col_11
		, x_derived_col_12
		, x_derived_col_13
		, x_derived_col_14
		, x_derived_col_15
		, x_derived_col_16
		, x_derived_col_17
		, x_derived_col_18
		, x_derived_col_19
		, x_derived_col_20
		, x_derived_col_21
		, x_derived_col_22
		, x_derived_col_23
		, x_derived_col_24
		, x_derived_col_25
		, x_derived_col_26
		, x_derived_col_27
		, x_derived_col_28
		, x_derived_col_29
		, x_derived_col_30
		, x_derived_col_31
		, x_derived_col_32
		, x_derived_col_33
		, p_revenue_ptd
		, p_revenue_itd 			 );

***************************************************************************************/
END IF;


EXCEPTION
	WHEN NO_DATA_FOUND THEN
		x_derived_col_3	:= '*** NO DATA FOUND ***';
		Return;
	WHEN OTHERS THEN
		x_derived_col_3	:= '*** OTHER EXCEPTION ***';
		Return;

END getcols;
-- ============================================================================

--
-- ========================================================
--	Generic Procedure to Process Totals in Oracle Forms
--	Project Status Inquiry Project Status window.
-- ========================================================
--

PROCEDURE Get_Totals
		(x_where_clause                         IN     VARCHAR2
		, x_in_tot_column4			IN     NUMBER
		, x_in_tot_column5			IN     NUMBER
		, x_in_tot_column6			IN     NUMBER
		, x_in_tot_column7			IN     NUMBER
		, x_in_tot_column8			IN     NUMBER
		, x_in_tot_column9			IN     NUMBER
		, x_in_tot_column10			IN     NUMBER
		, x_in_tot_column11			IN     NUMBER
		, x_in_tot_column12			IN     NUMBER
		, x_in_tot_column13			IN     NUMBER
		, x_in_tot_column14			IN     NUMBER
		, x_in_tot_column15			IN     NUMBER
		, x_in_tot_column16			IN     NUMBER
		, x_in_tot_column17			IN     NUMBER
		, x_in_tot_column18			IN     NUMBER
		, x_in_tot_column19			IN     NUMBER
		, x_in_tot_column20			IN     NUMBER
		, x_in_tot_column21			IN     NUMBER
		, x_in_tot_column22			IN     NUMBER
		, x_in_tot_column23			IN     NUMBER
		, x_in_tot_column24			IN     NUMBER
		, x_in_tot_column25			IN     NUMBER
		, x_in_tot_column26			IN     NUMBER
		, x_in_tot_column27			IN     NUMBER
		, x_in_tot_column28			IN     NUMBER
		, x_in_tot_column29			IN     NUMBER
		, x_in_tot_column30			IN     NUMBER
		, x_in_tot_column31			IN     NUMBER
		, x_in_tot_column32			IN     NUMBER
		, x_in_tot_column33			IN     NUMBER
		, x_out_tot_column4			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column5			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column6			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column7			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column8			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column9			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column10			OUT    NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_out_tot_column11			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column12			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column13			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column14			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column15			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column16			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column17			OUT    NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_out_tot_column18			OUT    NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_out_tot_column19			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column20			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column21			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column22			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column23			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column24			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column25			OUT    NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_out_tot_column26			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column27			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column28			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column29			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column30			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column31			OUT    NOCOPY NUMBER --File.Sql.39 bug 4440895
		, x_out_tot_column32			OUT    NOCOPY NUMBER 	 --File.Sql.39 bug 4440895
		, x_out_tot_column33			OUT    NOCOPY NUMBER --File.Sql.39 bug 4440895
                , x_error_code                          OUT    NOCOPY NUMBER --File.Sql.39 bug 4440895
                , x_error_message                       OUT    NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
                )

  IS

-- Define your local variables here

  BEGIN

-- Initialize the output parameters here

        x_error_code := 0;
        x_error_message := NULL;

-- Add you business rules here to calculate values for the totals fields


        EXCEPTION
	   WHEN OTHERS THEN
-- Add your exception handler here
-- To raise an Oracle error, assign SQLCODE to x_error_code
-- If you assign a message to x_error_message, it will be appended to
-- the message displayed by the PSI form.
		x_error_code :=  SQLCODE;
                x_error_message := SQLERRM;
		Return;

  END Get_Totals;
-- ==========================================================================

--
--
END  pa_client_extn_status;

/
