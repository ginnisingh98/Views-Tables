--------------------------------------------------------
--  DDL for Package Body ZX_AR_EXTRACT_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."ZX_AR_EXTRACT_PKG" AS
/* $Header: zxrirextractpvtb.pls 120.60.12010000.41 2010/04/22 06:58:16 srajapar ship $ */

-----------------------------------------
--Private Methods Declarations
-----------------------------------------
PROCEDURE build_sql(
          p_mrc_sob_type        IN VARCHAR2
          );

PROCEDURE fetch_ar_trx_info;

PROCEDURE execute_dynamic_sql_strg(
          p_statement          IN VARCHAR2
          );

PROCEDURE insert_ar_trx_info;

PROCEDURE assign_ar_global_variables(
  p_trl_global_variables_rec  IN ZX_EXTRACT_PKG.TRL_GLOBAL_VARIABLES_REC_TYPE
  );

PROCEDURE init_ar_gt_tables;

-- this function returns the standard tables used for AR
-- if there is any change to the below function, please modify the
-- get_static_where_clause_ar_inv appropriately
FUNCTION get_std_table_list_ar_inv RETURN VARCHAR2;

-- this function returns the static where clause for the tables listed
-- in get_std_table_list_ar_inv
FUNCTION get_static_where_clause_ar_inv RETURN VARCHAR2;

-- this function returns the standard hint
-- when the tables mentioned at get_std_table_list_ar_inv are used
-- and the static where at get_static_where_clause_ar_inv is used
FUNCTION get_hint_ar_inv RETURN VARCHAR2;

-----------------------------------------
--Public Variable Declarations
-----------------------------------------

  C_LINES_PER_INSERT                 CONSTANT NUMBER :=  5000;

  L_COLUMN_LIST_AR_INV               VARCHAR2(32000);
  L_TABLE_LIST_AR_INV                VARCHAR2(2000);
  L_WHERE_CLAUSE_AR_INV              VARCHAR2(15000);
-- New for EU VAT --
  L_COLUMN_LIST_AR_INV_NO_TAX        VARCHAR2(32000);
  L_TABLE_LIST_AR_INV_NO_TAX         VARCHAR2(2000);
  L_WHERE_CLAUSE_AR_INV_NO_TAX       VARCHAR2(15000);
-- EU VAT  END --
  L_COLUMN_LIST_AR_CM                VARCHAR2(32000);
  L_TABLE_LIST_AR_CM                 VARCHAR2(2000);
  L_WHERE_CLAUSE_AR_CM               VARCHAR2(15000);
  L_COLUMN_LIST_AR_APP               VARCHAR2(32000);
  L_TABLE_LIST_AR_APP                VARCHAR2(2000);
  L_WHERE_CLAUSE_AR_APP              VARCHAR2(32000);
  L_COLUMN_LIST_AR_ADJ               VARCHAR2(32000);
  L_TABLE_LIST_AR_ADJ                VARCHAR2(2000);
  L_WHERE_CLAUSE_AR_ADJ              VARCHAR2(32000);
  L_COLUMN_LIST_AR_MISC              VARCHAR2(32000);
  L_TABLE_LIST_AR_MISC               VARCHAR2(2000);
  L_WHERE_CLAUSE_AR_MISC             VARCHAR2(32000);
  L_COLUMN_LIST_AR_BR                VARCHAR2(32000);
  L_TABLE_LIST_AR_BR                 VARCHAR2(2000);
  L_WHERE_CLAUSE_AR_BR               VARCHAR2(32000);


  -- Declare Table Type variables
  GT_DETAIL_TAX_LINE_ID           ZX_EXTRACT_PKG.DETAIL_TAX_LINE_ID_TBL;
  GT_LEDGER_ID                    ZX_EXTRACT_PKG.LEDGER_ID_TBL;
  GT_TRX_ID                       ZX_EXTRACT_PKG.TRX_ID_TBL;
  GT_DOC_SEQ_ID                   ZX_EXTRACT_PKG.DOC_SEQ_ID_TBL;
  GT_DOC_SEQ_NAME                 ZX_EXTRACT_PKG.DOC_SEQ_NAME_TBL;
  GT_TRX_TYPE_ID                  ZX_EXTRACT_PKG.TRX_TYPE_ID_TBL;
  GT_LINE_CLASS                   ZX_EXTRACT_PKG.TRX_LINE_CLASS_TBL;
  GT_EVENT_CLASS_CODE             ZX_EXTRACT_PKG.EVENT_CLASS_CODE_TBL;
  GT_APPLIED_FROM_ENTITY_CODE     ZX_EXTRACT_PKG.APPLIED_FROM_ENTITY_CODE_TBL;
  GT_APPLIED_FROM_TRX_ID          ZX_EXTRACT_PKG.APPLIED_FROM_TRX_ID_TBL;
  GT_APPLIED_FROM_EVENT_CLS_CD    ZX_EXTRACT_PKG.APPLIED_FROM_EVENT_CLS_CD_TBL;
  GT_APPLIED_TO_ENTITY_CODE       ZX_EXTRACT_PKG.APPLIED_TO_ENTITY_CODE_TBL;
  GT_APPLIED_TO_TRX_ID            ZX_EXTRACT_PKG.APPLIED_TO_TRX_ID_TBL;
  GT_APPLIED_TO_EVENT_CLS_CODE    ZX_EXTRACT_PKG.APPLIED_TO_EVENT_CLS_CODE_TBL;
  GT_APPLIED_TO_TRX_NUMBER        ZX_EXTRACT_PKG.APPLIED_TO_TRX_NUMBER_TBL;
  GT_BILLING_TRADING_PARTNER_ID   ZX_EXTRACT_PKG.BILLING_TRADING_PARTNER_ID_TBL;
  GT_BILLING_TP_SITE_ID           ZX_EXTRACT_PKG.BILLING_TP_SITE_ID_TBL;
  GT_BILLING_TP_ADDRESS_ID        ZX_EXTRACT_PKG.BILLING_TP_ADDRESS_ID_TBL;
  GT_SHIPPING_TP_ID               ZX_EXTRACT_PKG.SHIPPING_TP_ID_TBL;
  GT_SHIPPING_TP_SITE_ID          ZX_EXTRACT_PKG.SHIPPING_TP_SITE_ID_TBL;
  GT_SHIPPING_TP_ADDRESS_ID       ZX_EXTRACT_PKG.SHIPPING_TP_ADDRESS_ID_TBL;
  GT_BATCH_SOURCE_ID              ZX_EXTRACT_PKG.BATCH_SOURCE_ID_TBL;
  GT_TRX_BATCH_SOURCE_DATE        ZX_EXTRACT_PKG.TRX_BATCH_SOURCE_DATE_TBL;
  GT_TAX_RATE_ID                  ZX_EXTRACT_PKG.TAX_RATE_ID_TBL;
  GT_TAX_RATE_REG_TYPE_CODE       ZX_EXTRACT_PKG.TAX_RATE_REG_TYPE_CODE_TBL;
  --GT_TAX_RATE_ID                 ZX_EXTRACT_PKG.TAX_RATE_ID_TBL;
  GT_PRODUCT_ID                   ZX_EXTRACT_PKG.PRODUCT_ID_TBL;
  GT_PRODUCT_DESCRIPTION          ZX_EXTRACT_PKG.PRODUCT_DESCRIPTION_TBL;
  GT_TAXABLE_LINE_SOURCELE        ZX_EXTRACT_PKG.TAXABLE_LINE_SOURCE_TABLE_TBL;
  GT_TAXABLE_ITEM_SOURCE_ID       ZX_EXTRACT_PKG.TAXABLE_ITEM_SOURCE_ID_TBL;
  GT_TAX_EXEMPTION_ID             ZX_EXTRACT_PKG.TAX_EXEMPTION_ID_TBL;
  GT_TAX_EXCEPTION_ID             ZX_EXTRACT_PKG.TAX_EXCEPTION_ID_TBL;
  GT_TAXABLE_LINE_TOTAL_AMOUNT    ZX_EXTRACT_PKG.TAXABLE_LINE_TOTAL_AMOUNT_TBL;
  GT_TAX_LINE_ID                  ZX_EXTRACT_PKG.TAX_LINE_ID_TBL;
  GT_TAX_AMT                      ZX_EXTRACT_PKG.TAX_AMT_TBL;
  --  GT_EXEMPT_ENTERED_AMOUNT       ZX_EXTRACT_PKG.EXEMPT_ENTERED_AMOUNT_TBL;
  GT_TAX_AMT_FUNCL_CURR           ZX_EXTRACT_PKG.TAX_AMT_FUNCL_CURR_TBL;
  GT_TAX_LINE_NUMBER              ZX_EXTRACT_PKG.TAX_LINE_NUMBER_TBL;
  --  GT_TAXABLE_AMT                 ZX_EXTRACT_PKG.TAXABLE_AMT_TBL;
  --  GT_TAXABLE_AMT_FUNCL_CURR      ZX_EXTRACT_PKG.TAXABLE_AMT_FUNCL_CURR_TBL;
  --  GT_ACCTG_DIST_ID               ZX_EXTRACT_PKG.ACCTG_DIST_ID_TBL;
  --  GT_XLA_CODE_COMBINATION_ID     ZX_EXTRACT_PKG.XLA_CODE_COMBINATION_ID_TBL;
  GT_TRX_LINE_ID                   ZX_EXTRACT_PKG.TRX_LINE_ID_TBL;
  GT_TRX_LINE_QUANTITY             ZX_EXTRACT_PKG.TRX_LINE_QUANTITY_TBL;
  GT_BILLING_TP_SITE_NAME          ZX_EXTRACT_PKG.BILLING_TP_SITE_NAME_TBL;
  GT_BILLING_TP_SITE_TX_REG_NUM    ZX_EXTRACT_PKG.BILLING_TP_SITE_TX_REG_NUM_TBL;
  GT_SHIPPING_TP_SITE_NAME         ZX_EXTRACT_PKG.SHIPPING_TP_SITE_NAME_TBL;
  GT_SHIPPING_TP_SITE_TX_REG_NUM   ZX_EXTRACT_PKG.SHIPPING_TP_SITE_TX_RG_NUM_TBL;
  GT_EXEMPT_CERTIFICATE_NUMBER     ZX_EXTRACT_PKG.EXEMPT_CERTIFICATE_NUMBER_TBL;
  GT_EXEMPT_REASON_CODE            ZX_EXTRACT_PKG.EXEMPT_REASON_CODE_TBL;
  GT_TAX_EXCEPTION_REASON_CODE     ZX_EXTRACT_PKG.TAX_EXCEPTION_REASON_CODE_TBL;
  GT_UOM_CODE                      ZX_EXTRACT_PKG.UOM_CODE_TBL;
  GT_RECONCILIATION_FLAG           ZX_EXTRACT_PKG.RECONCILIATION_FLAG_TBL;
  GT_INTERNAL_ORGANIZATION_ID      ZX_EXTRACT_PKG.INTERNAL_ORGANIZATION_ID_TBL;
  --GT_CURRENCY_CONVERSION_RATE      ZX_EXTRACT_PKG.CURRENCY_CONVERSION_RATE_TBL;
  --GT_TRX_CURRENCY_CODE         ZX_EXTRACT_PKG.TRX_CURRENCY_CODE_TBL;
   --   GT_XLA_ACCOUNTING_DATE       ZX_EXTRACT_PKG.XLA_ACCOUNTING_DATE_TBL;
  --GT_INTERNAL_ORGANIZATION_ID      ZX_EXTRACT_PKG.INTERNAL_ORGANIZATION_ID_TBL;
  --   GT_TAXABLE_EXMT_TOT_ENT_AMT   ZX_EXTRACT_PKG.TAXABLE_EXMT_TOT_ENT_AMT_TBL; --Check this column
  GT_BR_REF_CUSTOMER_TRX_ID        ZX_EXTRACT_PKG.BR_REF_CUSTOMER_TRX_ID_TBL;
  GT_REVERSE_FLAG                  ZX_EXTRACT_PKG.REVERSE_FLAG_TBL;
  -- GT_REVERSE_DATE                 ZX_EXTRACT_PKG.REVERSE_DATE_TBL;
  GT_AMOUNT_APPLIED                ZX_EXTRACT_PKG.AMOUNT_APPLIED_TBL;
  GT_TAX_APPLIED                   ZX_EXTRACT_PKG.TAX_APPLIED_TBL;
  GT_TAX_RATE                      ZX_EXTRACT_PKG.TAX_RATE_TBL;
  GT_TAX_RATE_CODE                 ZX_EXTRACT_PKG.TAX_RATE_CODE_TBL;
  GT_TAX_RATE_VAT_TRX_TYPE_CODE    ZX_EXTRACT_PKG.TAX_RATE_VAT_TRX_TYPE_CODE_TBL;
  GT_TAX_TYPE_CODE                 ZX_EXTRACT_PKG.TAX_TYPE_CODE_TBL;
  GT_TAX_TYPE_MNG                  ZX_EXTRACT_PKG.TAX_TYPE_MNG_TBL;
  GT_TAX_STATUS_ID                 ZX_EXTRACT_PKG.TAX_STATUS_ID_TBL;
  GT_TAX_RATE_CODE_NAME            ZX_EXTRACT_PKG.TAX_RATE_CODE_NAME_TBL;
--GT_TAX_RATE_CODE_DESCRIPTION       ZX_EXTRACT_PKG.TAX_RATE_CODE_DESCRIPTION_TBL;
  GT_TRX_NUMBER                    ZX_EXTRACT_PKG.TRX_NUMBER_TBL;
  GT_TRX_DESCRIPTION               ZX_EXTRACT_PKG.TRX_DESCRIPTION_TBL;
  GT_DOC_SEQ_VALUE                 ZX_EXTRACT_PKG.DOC_SEQ_VALUE_TBL;
  GT_TRX_DATE                      ZX_EXTRACT_PKG.TRX_DATE_TBL;
  GT_DEPOSIT_DATE                  ZX_EXTRACT_PKG.DEPOSIT_DATE_TBL;
  GT_TRX_DUE_DATE                  ZX_EXTRACT_PKG.TRX_DUE_DATE_TBL;
  GT_TRX_SHIPPING_DATE             ZX_EXTRACT_PKG.TRX_SHIPPING_DATE_TBL;
  GT_TRX_COMMUNICATED_DATE         ZX_EXTRACT_PKG.TRX_COMMUNICATED_DATE_TBL;
  GT_TRX_CURRENCY_CODE             ZX_EXTRACT_PKG.TRX_CURRENCY_CODE_TBL;
  GT_CURRENCY_CONVERSION_TYPE      ZX_EXTRACT_PKG.CURRENCY_CONVERSION_TYPE_TBL;
  GT_CURRENCY_CONVERSION_DATE      ZX_EXTRACT_PKG.CURRENCY_CONVERSION_DATE_TBL;
  GT_CURRENCY_CONVERSION_RATE      ZX_EXTRACT_PKG.CURRENCY_CONVERSION_RATE_TBL;
  GT_TRX_SIC_CODE                  ZX_EXTRACT_PKG.TRX_SIC_CODE_TBL;
  GT_FOB_POINT                     ZX_EXTRACT_PKG.FOB_POINT_TBL;
  GT_TRX_WAYBILL_NUMBER            ZX_EXTRACT_PKG.TRX_WAYBILL_NUMBER_TBL;
  GT_TRX_BATCH_SOURCE_NAME         ZX_EXTRACT_PKG.TRX_BATCH_SOURCE_NAME_TBL;
  GT_TRX_LINE_CLASS                ZX_EXTRACT_PKG.TRX_LINE_CLASS_TBL;
  --  GT_TRX_TYPE_MEANING              ZX_EXTRACT_PKG.TRX_TYPE_MEANING_TBL;
  GT_TRX_TYPE_DESCRIPTION          ZX_EXTRACT_PKG.TRX_TYPE_DESCRIPTION_TBL;
  GT_TAX_RATE_CODE_DESCRIPTION     ZX_EXTRACT_PKG.TAX_RATE_CODE_DESCRIPTION_TBL;
  -- GT_TAX_RATE_CODE                 ZX_EXTRACT_PKG.TAX_RATE_CODE_TBL;
  -- GT_TAX_RATE                      ZX_EXTRACT_PKG.TAX_RATE_TBL;
  -- GT_TAX_RATE_CODE_TYPE_CODE       ZX_EXTRACT_PKG.TAX_RATE_CODE_TYPE_CODE_TBL;
  -- GT_TAX_RATE_CODE_NAME            ZX_EXTRACT_PKG.TAX_RATE_CODE_NAME_TBL;
  GT_TRX_LINE_DESCRIPTION          ZX_EXTRACT_PKG.TRX_LINE_DESCRIPTION_TBL;
  GT_TAXABLE_AMT                   ZX_EXTRACT_PKG.TAXABLE_AMT_TBL;
  GT_TAXABLE_AMT_FUNCL_CURR        ZX_EXTRACT_PKG.TAXABLE_AMT_FUNCL_CURR_TBL;
  -- GT_GDF_RA_CUST_TRX_LINE_ATT1     ZX_EXTRACT_PKG.GDF_RA_CUST_TRX_LINE_ATT1_TBL;
  -- GT_GDF_RA_CUST_TRX_LINE_ATT11    ZX_EXTRACT_PKG.GDF_RA_CUST_TRX_LINE_ATT11_TBL;
  GT_TRX_LINE_NUMBER               ZX_EXTRACT_PKG.TRX_LINE_NUMBER_TBL;
  GT_TRX_LINE_TYPE                 ZX_EXTRACT_PKG.TRX_LINE_TYPE_TBL;
  -- GT_TRX_LINE_TYPE                 ZX_EXTRACT_PKG.TRX_LINE_TYPE_TBL;
  GT_TAX_LINE_USER_CATEGORY        ZX_EXTRACT_PKG.TAX_LINE_USER_CATEGORY_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE1      ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE1_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE2      ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE2_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE3      ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE3_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE4      ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE4_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE5      ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE5_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE6      ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE6_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE7      ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE7_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE8      ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE8_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE9      ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE9_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE10     ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE10_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE11     ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE11_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE12     ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE12_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE13     ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE13_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE14     ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE14_TBL;
  GT_TAX_LINE_USER_ATTRIBUTE15     ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE15_TBL;
  -- GT_XLA_ACCOUNTING_DATE          ZX_EXTRACT_PKG.XLA_ACCOUNTING_DATE_TBL;
  GT_APPLICATION_ID                ZX_EXTRACT_PKG.APPLICATION_ID_TBL;
  GT_DOC_EVENT_STATUS              ZX_EXTRACT_PKG.DOC_EVENT_STATUS_TBL;
  GT_APPLICATION_DOC_STATUS        ZX_EXTRACT_PKG.APPLICATION_DOC_STATUS_TBL;
  GT_ESTABLISHMENT_ID              ZX_EXTRACT_PKG.ESTABLISHMENT_ID_TBL;
  GT_EXTRACT_SOURCE_LEDGER         ZX_EXTRACT_PKG.EXTRACT_SOURCE_LEDGER_TBL;
  GT_FUNCTIONAL_CURRECNY_CODE      ZX_EXTRACT_PKG.FUNCTIONAL_CURRENCY_CODE_TBL;
   --   GT_INTERNAL_ORGANIZATION_ID  ZX_EXTRACT_PKG.INTERNAL_ORGANIZATION_ID_TBL;
  GT_LEDGER_NAME                   ZX_EXTRACT_PKG.LEDGER_NAME_TBL;
  GT_MINIMUM_ACCOUNTABLE_UNIT      ZX_EXTRACT_PKG.MINIMUM_ACCOUNTABLE_UNIT_TBL;
  GT_PRECISION                     ZX_EXTRACT_PKG.PRECISION_TBL;
  GT_RECEIPT_CLASS_ID              ZX_EXTRACT_PKG.RECEIPT_CLASS_ID_TBL;
  GT_ADJUSTED_DOC_APPL_ID          ZX_EXTRACT_PKG.ADJUSTED_DOC_APPL_ID_TBL;
  GT_ADJUSTED_DOC_DATE             ZX_EXTRACT_PKG.ADJUSTED_DOC_DATE_TBL;
  GT_ADJUSTED_DOC_ENTITY_CODE      ZX_EXTRACT_PKG.ADJUSTED_DOC_ENTITY_CODE_TBL;
  GT_ADJUSTED_DOC_EVENT_CLS_CD     ZX_EXTRACT_PKG.ADJUSTED_DOC_EVENT_CLS_CD_TBL;
  GT_ADJUSTED_DOC_NUMBER           ZX_EXTRACT_PKG.ADJUSTED_DOC_NUMBER_TBL;
  GT_ADJUSTED_DOC_TRX_ID           ZX_EXTRACT_PKG.ADJUSTED_DOC_TRX_ID_TBL;
  GT_RELATED_DOC_APPLICATION_ID    ZX_EXTRACT_PKG.RELATED_DOC_APPLICATION_ID_TBL;
  GT_RELATED_DOC_DATE              ZX_EXTRACT_PKG.RELATED_DOC_DATE_TBL;
  GT_RELATED_DOC_ENTITY_CODE       ZX_EXTRACT_PKG.RELATED_DOC_ENTITY_CODE_TBL;
  GT_RELATED_DOC_EVENT_CLS_CODE    ZX_EXTRACT_PKG.RELATED_DOC_EVENT_CLS_CODE_TBL;
  GT_RELATED_DOC_NUMBER            ZX_EXTRACT_PKG.RELATED_DOC_NUMBER_TBL;
  GT_RELATED_DOC_TRX_ID            ZX_EXTRACT_PKG.RELATED_DOC_TRX_ID_TBL;
  GT_APPLIED_TO_APPLICATION_ID     ZX_EXTRACT_PKG.APPLIED_TO_APPLICATION_ID_TBL;
  GT_APPLIED_TO_TRX_LINE_ID        ZX_EXTRACT_PKG.APPLIED_TO_TRX_LINE_ID_TBL;
  GT_BANKING_TP_TAXPAYER_ID        ZX_EXTRACT_PKG.BANKING_TP_TAXPAYER_ID_TBL;
  GT_BANKING_ACCOUNT_ID            ZX_EXTRACT_PKG.BANK_ACCOUNT_ID_TBL;
  GT_OFFSET_TAX_RATE               ZX_EXTRACT_PKG.OFFSET_TAX_RATE_CODE_TBL;
  GT_OFFSET_FLAG                   ZX_EXTRACT_PKG.OFFSET_FLAG_TBL;
  GT_REF_DOC_APPLICATION_ID        ZX_EXTRACT_PKG.REF_DOC_APPLICATION_ID_TBL;
  GT_REF_DOC_ENTITY_CODE           ZX_EXTRACT_PKG.REF_DOC_ENTITY_CODE_TBL;
  GT_REF_DOC_EVENT_CLASS_CODE      ZX_EXTRACT_PKG.REF_DOC_EVENT_CLASS_CODE_TBL;
  GT_REF_DOC_LINE_ID               ZX_EXTRACT_PKG.REF_DOC_LINE_ID_TBL;
  GT_REF_DOC_LINE_QUANTITY         ZX_EXTRACT_PKG.REF_DOC_LINE_QUANTITY_TBL;
  GT_REF_DOC_TRX_ID                ZX_EXTRACT_PKG.REF_DOC_TRX_ID_TBL;
  GT_DEF_REC_SETTLEMENT_OPT_CD     ZX_EXTRACT_PKG.DEF_REC_SETTLEMENT_OPT_CD_TBL;
  GT_DEFAULT_TAXATION_COUNTRY      ZX_EXTRACT_PKG.DEFAULT_TAXATION_COUNTRY_TBL;
  GT_DOCUMENT_SUB_TYPE             ZX_EXTRACT_PKG.DOCUMENT_SUB_TYPE_TBL;
  GT_TRX_BUSINESS_CATEGORY         ZX_EXTRACT_PKG.TRX_BUSINESS_CATEGORY_TBL;
  GT_LINE_INTENDED_USE             ZX_EXTRACT_PKG.LINE_INTENDED_USE_TBL;
  GT_PRODUCT_CATEGORY              ZX_EXTRACT_PKG.PRODUCT_CATEGORY_TBL;
  GT_PROD_FISC_CLASSIFICATION      ZX_EXTRACT_PKG.PROD_FISC_CLASSIFICATION_TBL;
  GT_SUPPLIER_EXCHANGE_RATE        ZX_EXTRACT_PKG.SUPPLIER_EXCHANGE_RATE_TBL;
  GT_SUPPLIER_TAX_INVOICE_DATE     ZX_EXTRACT_PKG.SUPPLIER_TAX_INVOICE_DATE_TBL;
  GT_SUPPLIER_TAX_INVOICE_NUM      ZX_EXTRACT_PKG.SUPPLIER_TAX_INVOICE_NUM_TBL;
  GT_USER_DEFINED_FISC_CLASS       ZX_EXTRACT_PKG.USER_DEFINED_FISC_CLASS_TBL;
  GT_EXCEPTION_RATE                ZX_EXTRACT_PKG.EXCEPTION_RATE_TBL;
  GT_EXEMPT_RATE_MODIFIER          ZX_EXTRACT_PKG.EXEMPT_RATE_MODIFIER_TBL;
  GT_ORIG_TAX_AMT                  ZX_EXTRACT_PKG.ORIG_TAX_AMT_TBL;
  GT_ORIG_TAX_AMT_TAX_CURR         ZX_EXTRACT_PKG.ORIG_TAX_AMT_TAX_CURR_TBL;
  GT_ORIG_TAXABLE_AMT              ZX_EXTRACT_PKG.ORIG_TAXABLE_AMT_TBL;
  GT_ORIG_TAXABLE_AMT_TAX_CURR     ZX_EXTRACT_PKG.ORIG_TAXABLE_AMT_TAX_CURR_TBL;
  GT_RECOVERY_RATE_CODE            ZX_EXTRACT_PKG.RECOVERY_RATE_CODE_TBL;
  GT_TAX_AMT_TAX_CURR              ZX_EXTRACT_PKG.TAX_AMT_TAX_CURR_TBL;
  GT_TAX_APPORTIONMENT_LINE_NUM    ZX_EXTRACT_PKG.TAX_APPORTIONMENT_LINE_NUM_TBL;
  GT_TAX_CURRENCY_CODE             ZX_EXTRACT_PKG.TAX_CURRENCY_CODE_TBL;
  GT_TAX_DATE                      ZX_EXTRACT_PKG.TAX_DATE_TBL;
  GT_TAX_DETERMINE_DATE            ZX_EXTRACT_PKG.TAX_DETERMINE_DATE_TBL;
  GT_TAX_INVOICE_DATE              ZX_EXTRACT_PKG.TAX_INVOICE_DATE_TBL;
  GT_TAX_INVOICE_NUMBER            ZX_EXTRACT_PKG.TAX_INVOICE_NUMBER_TBL;
  GT_TAX_JURISDICTION_CODE         ZX_EXTRACT_PKG.TAX_JURISDICTION_CODE_TBL;
  GT_TAX_RATE_VAT_TRX_TYPE_DESC    ZX_EXTRACT_PKG.TAX_RATE_VAT_TRX_TYPE_DESC_TBL;
  GT_TAX_REGIME_CODE               ZX_EXTRACT_PKG.TAX_REGIME_CODE_TBL;
  GT_TAX_STATUS_CODE               ZX_EXTRACT_PKG.TAX_STATUS_CODE_TBL;
  GT_TAX                           ZX_EXTRACT_PKG.TAX_TBL;
  GT_BILLING_TP_PARTY_NUMBER       ZX_EXTRACT_PKG.BILLING_TP_PARTY_NUMBER_TBL;
  GT_BILLING_TP_TAX_REG_NUM        ZX_EXTRACT_PKG.BILLING_TP_TAX_REG_NUM_TBL;
  GT_BILLING_TP_TAXPAYER_ID        ZX_EXTRACT_PKG.BILLING_TP_TAXPAYER_ID_TBL;
  GT_BILLING_TP_NAME               ZX_EXTRACT_PKG.BILLING_TP_NAME_TBL;
  GT_BILLING_TP_NUMBER             ZX_EXTRACT_PKG.BILLING_TP_NUMBER_TBL;
  GT_SHIP_FROM_PTY_TAX_PROF_ID     ZX_EXTRACT_PKG.SHIP_FROM_PTY_TAX_PROF_ID_TBL;
  GT_SHIP_FROM_SITE_TAX_PROF_ID    ZX_EXTRACT_PKG.SHIP_FROM_SITE_TAX_PROF_ID_TBL;
  GT_SHIP_TO_PARTY_TAX_PROF_ID     ZX_EXTRACT_PKG.SHIP_TO_PARTY_TAX_PROF_ID_TBL;
  GT_SHIP_TO_SITE_TAX_PROF_ID      ZX_EXTRACT_PKG.SHIP_TO_SITE_TAX_PROF_ID_TBL;
  GT_BILL_TO_PTY_TAX_PROF_ID       ZX_EXTRACT_PKG.BILL_FROM_PTY_TAX_PROF_ID_TBL;
  GT_BILL_TO_SITE_TAX_PROF_ID      ZX_EXTRACT_PKG.BILL_FROM_SITE_TAX_PROF_ID_TBL;
  GT_HQ_ESTB_REG_NUMBER            ZX_EXTRACT_PKG.HQ_ESTB_REG_NUMBER_TBL;
  gt_tax_line_registration_num     ZX_EXTRACT_PKG.tax_line_registration_num_tbl;
  GT_LEGAL_ENTITY_TAX_REG_NUM      ZX_EXTRACT_PKG.LEGAL_ENTITY_TAX_REG_NUM_TBL;
  GT_OWN_HQ_PARTY_SITE_PROF_ID     ZX_EXTRACT_PKG.OWN_HQ_PARTY_SITE_PROF_ID_TBL;
  GT_OWN_HQ_PARTY_TAX_PROF_ID      ZX_EXTRACT_PKG.OWN_HQ_PARTY_TAX_PROF_ID_TBL;
  GT_PORT_OF_ENTRY_CODE            ZX_EXTRACT_PKG.PORT_OF_ENTRY_CODE_TBL;
  GT_REGISTRATION_PARTY_TYPE       ZX_EXTRACT_PKG.REGISTRATION_PARTY_TYPE_TBL;
  GT_CANCEL_FLAG                   ZX_EXTRACT_PKG.CANCEL_FLAG_TBL;
  GT_HISTORICAL_FLAG               ZX_EXTRACT_PKG.HISTORICAL_FLAG_TBL;
  GT_MRC_TAX_LINE_FLAG             ZX_EXTRACT_PKG.MRC_TAX_LINE_FLAG_TBL;
  GT_POSTED_FLAG                   ZX_EXTRACT_PKG.POSTED_FLAG_TBL;
  GT_ENTITY_CODE                   ZX_EXTRACT_PKG.ENTITY_CODE_TBL;
  GT_POSTED_DATE                   ZX_EXTRACT_PKG.POSTED_DATE_TBL;
  GT_REPORTING_ONLY_FLAG           ZX_EXTRACT_PKG.REPORTING_ONLY_FLAG_TBL;
  GT_TAX_AMT_INCLUDED_FLAG         ZX_EXTRACT_PKG.TAX_AMT_INCLUDED_FLAG_TBL;
  GT_TAX_ONLY_LINE_FLAG            ZX_EXTRACT_PKG.TAX_ONLY_FLAG_TBL;
  GT_AR_CASH_RECEIPT_REV_STATUS    ZX_EXTRACT_PKG.AR_CASH_RECEIPT_REV_STAT_TBL;
  GT_AR_CASH_RECEIPT_REV_DATE      ZX_EXTRACT_PKG.AR_CASH_RECEIPT_REV_DATE_TBL;
  GT_EXTRACT_REPORT_LINE_NUMBER    ZX_EXTRACT_PKG.EXTRACT_REPORT_LINE_NUMBER_TBL;
  G_CREATED_BY                     NUMBER(15);
  G_CREATION_DATE                  DATE;
  G_LAST_UPDATED_BY                NUMBER(15);
  G_LAST_UPDATE_DATE               DATE;
  G_LAST_UPDATE_LOGIN              NUMBER(15);
  G_PROGRAM_APPLICATION_ID         NUMBER;
  G_PROGRAM_ID                     NUMBER;
  G_PROGRAM_LOGIN_ID               NUMBER;
  -- New columns added for US Sales Tax Report--
  GT_EVENT_CLASS_MAPPING_ID        ZX_EXTRACT_PKG.EVENT_CLASS_MAPPING_ID_TBL;
  GT_TRX_LEVEL_TYPE                ZX_EXTRACT_PKG.TRX_LEVEL_TYPE_TBL;
  GT_PLACE_OF_SUPPLY_TYPE_CODE     ZX_EXTRACT_PKG.PLACE_OF_SUPPLY_TYPE_CODE_TBL;
  GT_POA_LOCATION_ID               ZX_EXTRACT_PKG.POA_LOCATION_ID_TBL;
  GT_POO_LOCATION_ID               ZX_EXTRACT_PKG.POO_LOCATION_ID_TBL;
  GT_DEF_PLACE_OF_SUP_TYPE_CODE    ZX_EXTRACT_PKG.DEF_PLACE_OF_SUP_TYPE_CODE_TBL;
  GT_LINE_AMT                      ZX_EXTRACT_PKG.TRX_LINE_AMT_TBL;
  GT_TAX_PROVIDER_ID               ZX_EXTRACT_PKG.TAX_PROVIDER_ID_TBL;
  GT_AR_CASH_RCPT_RVRS_DATE        ZX_EXTRACT_PKG.AR_CASH_RCPT_RVRS_DATE_TBL;
  GT_AR_CASH_RCPT_RVRS_STATUS      ZX_EXTRACT_PKG.AR_CASH_RCPT_RVRS_STATUS_TBL;
  GT_ACCTD_AMOUNT_CR               ZX_EXTRACT_PKG.ACCTD_AMOUNT_CR_TBL;
  GT_ACCTD_AMOUNT_DR               ZX_EXTRACT_PKG.ACCTD_AMOUNT_DR_TBL;
  GT_REC_APPLICATION_STATUS        ZX_EXTRACT_PKG.REC_APPLICATION_STATUS_TBL;
  GT_ACCOUNT_CLASS                 ZX_EXTRACT_PKG.ACCOUNT_CLASS_TBL;
  GT_LATEST_REC_FLAG               ZX_EXTRACT_PKG.LATEST_REC_FLAG_TBL;
  GT_ACTG_SOURCE_ID                ZX_EXTRACT_PKG.ACTG_SOURCE_ID_TBL;
  GT_GL_DATE                       ZX_EXTRACT_PKG.GL_DATE_TBL;
  GT_UNIT_PRICE                    ZX_EXTRACT_PKG.UNIT_PRICE_TBL;
  gt_assessable_value              ZX_EXTRACT_PKG.assessable_value_tbl;




-- Global Parameters

  G_REPORTING_LEVEL                VARCHAR2(30);
  G_REPORTING_CONTEXT              VARCHAR2(30);
-- apai    G_LEGAL_ENTITY_LEVEL            VARCHAR2(30);
  G_LEGAL_ENTITY_ID                NUMBER;
  G_SUMMARY_LEVEL                  VARCHAR2(30);
  G_LEDGER_ID                      NUMBER;
  G_REGISTER_TYPE                  VARCHAR2(30);
  G_PRODUCT                        VARCHAR2(30);
  G_MATRIX_REPORT                  VARCHAR2(30);
  G_CURRENCY_CODE_LOW              VARCHAR2(30);
  G_CURRENCY_CODE_HIGH             VARCHAR2(30);
  G_INCLUDE_AP_STD_TRX_CLASS       VARCHAR2(1);
  G_INCLUDE_AP_DM_TRX_CLASS        VARCHAR2(1);
  G_INCLUDE_AP_CM_TRX_CLASS        VARCHAR2(1);
  G_INCLUDE_AP_PREP_TRX_CLASS      VARCHAR2(1);
  G_INCLUDE_AP_MIX_TRX_CLASS       VARCHAR2(1);
  G_INCLUDE_AP_EXP_TRX_CLASS       VARCHAR2(1);
  G_INCLUDE_AP_INT_TRX_CLASS       VARCHAR2(1);
  G_INCLUDE_AR_INV_TRX_CLASS       VARCHAR2(1);
  G_INCLUDE_AR_APPL_TRX_CLASS      VARCHAR2(1);
  G_INCLUDE_AR_ADJ_TRX_CLASS       VARCHAR2(30);
  G_INCLUDE_AR_MISC_TRX_CLASS      VARCHAR2(1);
  G_INCLUDE_AR_BR_TRX_CLASS        VARCHAR2(1);
  G_INCLUDE_GL_MANUAL_LINES        VARCHAR2(30);
  G_TRX_NUMBER_LOW                 VARCHAR2(30);
  G_TRX_NUMBER_HIGH                VARCHAR2(30);
  G_EXTRACT_REPORT_LINE_NUMBER     NUMBER;
  G_AR_TRX_PRINTING_STATUS         VARCHAR2(30);
  G_AR_EXEMPTION_STATUS            VARCHAR2(30);
  G_GL_DATE_LOW                    DATE;
  G_GL_DATE_HIGH                   DATE;
  G_TRX_DATE_LOW                   DATE;
  G_TRX_DATE_HIGH                  DATE;
  G_GL_PERIOD_NAME_LOW             VARCHAR2(15);
  G_GL_PERIOD_NAME_HIGH            VARCHAR2(15);
  G_TRX_DATE_PERIOD_NAME_LOW       VARCHAR2(15);
  G_TRX_DATE_PERIOD_NAME_HIGH      VARCHAR2(15);
  g_tax_jurisdiction_code          VARCHAR2(30);
  g_first_party_tax_reg_num        VARCHAR2(30);
  G_TAX_REGIME_CODE                VARCHAR2(30);
  G_TAX                            VARCHAR2(30);
  G_TAX_STATUS_CODE                VARCHAR2(30);
  G_TAX_RATE_CODE_LOW              VARCHAR2(30);
  G_TAX_RATE_CODE_HIGH             VARCHAR2(30);
  G_TAX_TYPE_CODE_LOW              VARCHAR2(30);
  G_TAX_TYPE_CODE_HIGH             VARCHAR2(30);
  G_DOCUMENT_SUB_TYPE              VARCHAR2(30);
  G_TRX_BUSINESS_CATEGORY          VARCHAR2(30);
  G_TAX_INVOICE_DATE_LOW           VARCHAR2(30);
  G_TAX_INVOICE_DATE_HIGH          VARCHAR2(30);
  G_POSTING_STATUS                 VARCHAR2(30);
  G_EXTRACT_ACCTED_TAX_LINES       VARCHAR2(30);
  G_INCLUDE_ACCOUNTING_SEGMENTS    VARCHAR2(1);
  G_BALANCING_SEGMENT_LOW          VARCHAR2(30);
  G_BALANCING_SEGMENT_HIGH         VARCHAR2(30);
  G_INCLUDE_DISCOUNTS              VARCHAR2(1);
  G_EXTRACT_STARTING_LINE_NUM      NUMBER;
  G_REQUEST_ID                     NUMBER;
  G_REP_CONTEXT_ID                 NUMBER ;
  G_REPORT_NAME                    VARCHAR2(30);
  G_VAT_TRANSACTION_TYPE_CODE      VARCHAR2(30);
  G_INCLUDE_FULLY_NR_TAX_FLAG      VARCHAR2(30);
  G_MUNICIPAL_TAX_TYPE_CODE_LOW    VARCHAR2(30);
  G_MUNICIPAL_TAX_TYPE_CODE_HIGH   VARCHAR2(30);
  G_PROV_TAX_TYPE_CODE_LOW         VARCHAR2(30);
  G_PROV_TAX_TYPE_CODE_HIGH        VARCHAR2(30);
  G_EXCISE_TAX_TYPE_CODE_LOW       VARCHAR2(30);
  G_EXCISE_TAX_TYPE_CODE_HIGH      VARCHAR2(30);
  G_NON_TAXABLE_TAX_TYPE_CODE      VARCHAR2(30);
  G_PER_TAX_TYPE_CODE_LOW          VARCHAR2(30);
  G_PER_TAX_TYPE_CODE_HIGH         VARCHAR2(30);
  G_VAT_TAX_TYPE_CODE              VARCHAR2(30);
  G_EXCISE_TAX                     VARCHAR2(30);
  G_VAT_ADDITIONAL_TAX             VARCHAR2(30);
  G_VAT_NON_TAXABLE_TAX            VARCHAR2(30);
  G_VAT_NOT_TAX                    VARCHAR2(30);
  G_VAT_PERCEPTION_TAX             VARCHAR2(30);
  G_VAT_TAX                        VARCHAR2(30);
  G_INC_SELF_WD_TAX                VARCHAR2(30);
  G_EXCLUDING_TRX_LETTER           VARCHAR2(30);
  G_TRX_LETTER_LOW                 VARCHAR2(30);
  G_TRX_LETTER_HIGH                VARCHAR2(30);
  G_INCLUDE_REFERENCED_SOURCE      VARCHAR2(30);
  G_PARTY_NAME                     VARCHAR2(30);
  G_BATCH_NAME                     VARCHAR2(30);
  G_BATCH_DATE_LOW                 DATE;
  G_BATCH_DATE_HIGH                DATE;
  G_BATCH_SOURCE_ID                VARCHAR2(30);
  G_ADJUSTED_DOC_FROM              VARCHAR2(30);
  G_ADJUSTED_DOC_TO                VARCHAR2(30);
  G_STANDARD_VAT_TAX_RATE          VARCHAR2(30);
  G_MUNICIPAL_TAX                  VARCHAR2(30);
  G_PROVINCIAL_TAX                 VARCHAR2(30);
  G_TAX_ACCOUNT_LOW                VARCHAR2(300);
  G_TAX_ACCOUNT_HIGH               VARCHAR2(300);
  G_EXP_CERT_DATE_FROM             DATE;
  G_EXP_CERT_DATE_TO               DATE;
  G_EXP_METHOD                     VARCHAR2(30);
  G_PRINT_COMPANY_INFO             VARCHAR2(30);
  G_REPRINT                        VARCHAR2(1);
  G_ERRBUF                         VARCHAR2(30);
  G_AR_RETCODE                     VARCHAR2(30);
  G_TRX_CLASS                      VARCHAR2(30);
  G_CHART_OF_ACCOUNTS_ID           NUMBER;
  g_gl_or_trx_date_filter          varchar(1); --Bug 5347188
  G_ACCOUNTING_STATUS              VARCHAR2(30);
  G_REPORTED_STATUS                VARCHAR2(30);
  --Bug 9031051
  G_ESL_EU_TRX_TYPE                VARCHAR2(30);
  G_ESL_DEFAULT_TAX_DATE           VARCHAR2(15);
  G_ESL_OUT_OF_PERIOD_ADJ          VARCHAR2(15);
  G_ESL_EU_GOODS                   VARCHAR2(30);
  G_ESL_EU_SERVICES                VARCHAR2(30);
  G_ESL_EU_ADDL_CODE1              VARCHAR2(30);
  G_ESL_EU_ADDL_CODE2              VARCHAR2(30);
  G_ESL_EU_SITE_REPORTED           VARCHAR2(15);

  g_current_runtime_level           NUMBER;
  g_level_statement       CONSTANT  NUMBER  := FND_LOG.LEVEL_STATEMENT;
  g_level_procedure       CONSTANT  NUMBER  := FND_LOG.LEVEL_PROCEDURE;
  g_level_event           CONSTANT  NUMBER  := FND_LOG.LEVEL_EVENT;
  g_level_unexpected      CONSTANT  NUMBER  := FND_LOG.LEVEL_UNEXPECTED;
  g_error_buffer                    VARCHAR2(200);
  g_retcode                         NUMBER   := 0;

/*===========================================================================+
 | PROCEDURE                                                                 |
 |   insert_tax_data                                                         |
 |                                                                           |
 | DESCRIPTION                                                               |
 |    This procedure takes the input parameters from ZX_EXTRACT_PKG          |
 |    and builds  dynamic SQL statement clauses based on the parameters,     |
 |    supplies them as output parameters.                                    |
 |                                                                           |
 | SCOPE - Public                                                            |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   04-Mar-04  Ling Zhang   Created                                         |
 |                                                                           |
 +===========================================================================*/

PROCEDURE insert_tax_data (
  P_MRC_SOB_TYPE             IN            VARCHAR2,
  P_TRL_GLOBAL_VARIABLES_REC IN OUT NOCOPY ZX_EXTRACT_PKG.TRL_GLOBAL_VARIABLES_REC_TYPE
) IS

BEGIN

  g_current_runtime_level := FND_LOG.G_CURRENT_RUNTIME_LEVEL;
  g_retcode := P_TRL_GLOBAL_VARIABLES_REC.RETCODE;
  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.insert_tax_data.BEGIN',
                                    'ZX_AR_EXTRACT_PKG: insert_tax_data(+)');
  END IF;

  assign_ar_global_variables(
    P_TRL_GLOBAL_VARIABLES_REC => P_TRL_GLOBAL_VARIABLES_REC
  );

  IF g_retcode <> 2 THEN
    build_sql( P_MRC_SOB_TYPE => P_MRC_SOB_TYPE);
  END IF;
  IF g_retcode <> 2 THEN
    fetch_ar_trx_info;
  END IF;

  -- assign the output global variable

  P_TRL_GLOBAL_VARIABLES_REC.EXTRACT_REPORT_LINE_NUMBER := G_EXTRACT_REPORT_LINE_NUMBER;
  P_TRL_GLOBAL_VARIABLES_REC.RETCODE := g_retcode;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.insert_tax_data.END',
                                    'ZX_AR_EXTRACT_PKG: insert_tax_data(-)');
  END IF;


 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','insert_tax_data- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.insert_tax_data',
                      g_error_buffer);
    END IF;
    P_TRL_GLOBAL_VARIABLES_REC.RETCODE := 2;


END insert_tax_data;

/*===========================================================================+
 | PROCEDURE                                                                 |
 |   build_sql                                                               |
 |                                                                           |
 | DESCRIPTION                                                               |
 |    This procedure of the ZX_AR_EXTRACT_PKG, takes the input parameters       |
 |    and builds a dynamic SQL statement based on the parameters, and        |
 |    supplies it as an output parameter.                                    |
 |                                                                           |
 | SCOPE - Public                                                            |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   15-July-99 Nilesh Patel Created                                         |
 |   18-Apr-02  Bug 2322350                                                  |
 |   30-APR-02  Bug 2111178 :Modified the code due to performance problems   |
 |                           when running TRL in AR,Modified the code to have|
 |                           bind variables ,instead of hard coded dates.    |
 |   16-SEP-03  Phong La     Changed for Primary and Reporting SOB types for |
 |                           MRC changes                                     |
 |   06-OCT-03  Phong La     Changed and added Exchange rate, Min acct unit, |
 |                           Precision, Balancing segment value, Org id,     |
 |                           Gl date, Gl posted date, Tax class, Taxable     |
 |                           amount, tax entered amount, Exempt entered      |
 |                           amount, tax exemption id  and others            |
 |   04-Mar-04  Ling Zhang   Change the signature. Original passing-in params|
 |                           defined as public variable to be shared among   |
 |                           the fetch and insert procedures.                |
 +===========================================================================*/

PROCEDURE build_sql(
    P_MRC_SOB_TYPE                  IN VARCHAR2
) IS


  L_WHERE_REPORTING_CONTEXT_TRXH  VARCHAR2(2500);
  L_WHERE_REPORTING_CONTEXT_VAT   VARCHAR2(500);
  L_WHERE_REPORTING_CONTEXT_EX    VARCHAR2(500);
  L_WHERE_REPORTING_CONTEXT_TYP   VARCHAR2(500);
  L_WHERE_REPORTING_CONTEXT_BS    VARCHAR2(500);
  L_WHERE_REPORTING_CONTEXT_ADJ   VARCHAR2(500);
  L_WHERE_REPORTING_CONTEXT_CS    VARCHAR2(500);
  L_WHERE_REPORTING_CONTEXT_TH    VARCHAR2(500);
  L_WHERE_AR_TRX_PRINTING_STATUS  VARCHAR2(200);
  L_WHERE_REGISTER_TYPE_AR_TRX    VARCHAR2(200);
  L_WHERE_REGISTER_TYPE_AR_TRXCM  VARCHAR2(200);
  L_WHERE_REG_TYPE_TRXCM_ARDTAX   VARCHAR2(200);
  L_WHERE_REGISTER_TYPE_AR_APP    VARCHAR2(200);
  L_WHERE_REGISTER_TYPE_AR_ADJ    VARCHAR2(200);
  L_WHERE_REGISTER_TYPE_AR_MISC   VARCHAR2(200);
  L_WHERE_REGISTER_TYPE_AR_BR     VARCHAR2(200);
  L_WHERE_TAX_CLASS               VARCHAR2(200);
  L_WHERE_PRODUCT_AR              VARCHAR2(200);
  L_WHERE_GL_DATE_INV             VARCHAR2(200);
  L_WHERE_GL_DATE_APP             VARCHAR2(200);
  L_WHERE_GL_DATE_ADJ             VARCHAR2(200);
  L_WHERE_GL_DATE_MISC            VARCHAR2(200);
  L_WHERE_GL_DATE_BR              VARCHAR2(200);
  L_WHERE_TRX_DATE_INV            VARCHAR2(200);
  L_WHERE_TRX_DATE_CM             VARCHAR2(200);
  L_WHERE_TRX_DATE_APP            VARCHAR2(200);
  L_WHERE_TRX_DATE_ADJ            VARCHAR2(200);
  L_WHERE_TRX_DATE_MISC           VARCHAR2(200);
  L_WHERE_TRX_DATE_BR             VARCHAR2(200);
  L_WHERE_TRX_CLASS_INV_CM_DM     VARCHAR2(200);
  L_WHERE_TRX_CLASS_CM            VARCHAR2(200);
  L_WHERE_TRX_CLASS_APP_DISC      VARCHAR2(200);
  L_WHERE_TRX_CLASS_ADJ_FINCHRG   VARCHAR2(200);
  L_WHERE_TRX_CLASS_ADJ_TAX       VARCHAR2(200);
  L_WHERE_TRX_CLASS_MISC          VARCHAR2(200);
  L_WHERE_TRX_CLASS_BR            VARCHAR2(200);
  L_WHERE_TAX_CODE                VARCHAR2(200);
  L_WHERE_CURRENCY_CODE_INV       VARCHAR2(200);
  L_WHERE_CURRENCY_CODE_APP        VARCHAR2(200);
  L_WHERE_ACCOUNTING_STATUS_TRX      VARCHAR2(200);
  L_WHERE_ACCOUNTING_STATUS_ADJ      VARCHAR2(200);
  L_WHERE_ACCOUNTING_STATUS_APP      VARCHAR2(200);
  L_WHERE_ACCOUNTING_STATUS_BR       VARCHAR2(200);
  --L_WHERE_ACCOUNTING_STATUS_CM_REC   varchar2(200);
  L_WHERE_EXEMPTION_STATUS        VARCHAR2(200);
  L_WHERE_EXEMPT_STATUS_OTH      VARCHAR2(200);
  L_WHERE_GBL_TAX_DATE            VARCHAR2(200);
  L_WHERE_GBL_TAX_DATE_C          VARCHAR2(200);
  L_WHERE_GBL_CM_TAX_DATE         VARCHAR2(200); -- Bug 2322350
  L_WHERE_PARTY_NAME              VARCHAR2(500);
  L_WHERE_BATCH_SOURCE_NAME       VARCHAR2(200);
  L_WHERE_BATCH_SOURCE_NAME_C     VARCHAR2(200);
  L_WHERE_TAX_CODE_VAT_TRX_TYPE   VARCHAR2(200);
  L_WHERE_TAX_CODE_TYPE           VARCHAR2(200);
  L_WHERE_TP_TAX_REG_NUM          VARCHAR2(200);
  L_WHERE_TP_TAX_REG_NUM_C        VARCHAR2(200);
  L_WHERE_TP_TAXPAYER_ID          VARCHAR2(1000); -- apai 0220
  L_WHERE_TP_TAXPAYER_ID_C        VARCHAR2(1000); -- apai 0220
  L_WHERE_TP_NAME_AR              VARCHAR2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_INV          VARCHAR2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_CM           VARCHAR2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_APP          VARCHAR2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_ADJ          VARCHAR2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_BR           VARCHAR2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_MISC          VARCHAR2(1000); -- apai 0220
  L_WHERE_CHART_OF_ACCOUNTS_ID    VARCHAR2(1000); -- apai 0220
  L_CHART_OF_ACCOUNTS_ID          number(15);
  L_WHERE_GL_FLEX                 VARCHAR2(2000);
  L_WHERE_GDF_AR_TAX_CODES_ATT1   VARCHAR2(500);
  L_WHERE_GDF_RA_CUST_TRX_ATT1    VARCHAR2(200);
  L_WHERE_GDF_RA_CUST_TRX_ATT1_C  VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT1     VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT1_C   VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT2     VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT2_C   VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT3     VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT3_C   VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT4     VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT4_C   VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT5     VARCHAR2(200);
  L_WHERE_CUST_TRX_LINES_ATT5_C   VARCHAR2(200);
  L_WHERE_TRX_LINES_ATT1_IS_NULL  VARCHAR2(200);
  L_WHERE_TRX_LINES_ATT1_IS_NL_C  VARCHAR2(200);
  L_WHERE_SPECIAL_PL_HU           VARCHAR2(5000);
  L_WHERE_SPECIAL_PL_HU_C         VARCHAR2(5000);
  L_WHERE_AR_ADJUSTMENTS_ATT1     VARCHAR2(300);
  L_WHERE_AR_ADJUSTMENTS_ATT2     VARCHAR2(300);
  L_WHERE_AR_ADJUSTMENTS_ATT3     VARCHAR2(300);
  L_WHERE_AR_ADJUSTMENTS_ATT4     VARCHAR2(300);
  L_WHERE_AR_ADJUSTMENTS_ATT5     VARCHAR2(300);
  L_WHERE_AR_ADJ_ATT1_IS_NULL     VARCHAR2(300);
  L_WHERE_SPECIAL_PL_HU_ADJ       VARCHAR2(5000);
  L_REPORTING_CONTEXT_VAL         VARCHAR2(15);
  L_INV_ORGANIZATION_ID           NUMBER;
  L_WHERE_INV_ORG_ID              VARCHAR2(200);
  L_WHERE_SET_OF_BOOKS_ID         VARCHAR2(200);
  L_TRX_DATE_LOW                  DATE;
  L_TRX_DATE_HIGH                 DATE;
  L_IS_DEFERRED_TAX_USED_STMT     VARCHAR2(4000);
  L_IS_DEFERRED_TAX_USED          NUMBER;
  -- Added by apai
  L_WHERE_TRADING_PARTNER_ID      VARCHAR2(1000); -- apai 0220
  L_WHERE_TRADING_PARTNER_ID_C    VARCHAR2(1000); -- apai 0220
  L_WHERE_TAX_ACCOUNT_FLEX        VARCHAR2(1000); -- apai 0220
  L_WHERE_LEDGER_ID               VARCHAR2(1000);
  L_WHERE_LEDGER_ID_MISC          VARCHAR2(1000);
  L_WHERE_LEDGER_ID_APP           VARCHAR2(1000);
  L_WHERE_LEDGER_ID_ADJ           VARCHAR2(1000);
  L_WHERE_LEGAL_ENTITY_ID         VARCHAR2(1000);
  L_WHERE_LEGAL_ENTITY_ID_MISC    VARCHAR2(1000);
  L_WHERE_DOCUMENT_SUB_TYPE       VARCHAR2(1000);
  L_WHERE_TRX_BUSINESS_CATEGORY   VARCHAR2(1000);
  L_WHERE_TAX_INVOICE_DATE        VARCHAR2(1000);
  L_WHERE_TAX_INVOICE_DATE_ADJ    VARCHAR2(1000);
  L_WHERE_TAX_INVOICE_DATE_APP    VARCHAR2(1000);
  L_WHERE_TAX_INVOICE_DATE_MISC   VARCHAR2(1000);
  L_WHERE_TAX_JURISDICTION_CODE   VARCHAR2(1000);
  L_WHERE_TAX_REGIME_CODE         VARCHAR2(1000);
  L_WHERE_TAX                     VARCHAR2(1000);
  L_WHERE_TAX_STATUS_CODE         VARCHAR2(1000);
  L_WHERE_TAX_JURIS_CODE_OTH      VARCHAR2(1000);
  L_WHERE_TAX_JURIS_CODE_ADJ      VARCHAR2(1000);
  L_WHERE_TAX_REGIME_CODE_OTH     VARCHAR2(1000);
  L_WHERE_TAX_REGIME_CODE_ADJ     VARCHAR2(1000);
  L_WHERE_TAX_OTH                 VARCHAR2(1000);
  L_WHERE_TAX_ADJ                 VARCHAR2(1000);
  L_WHERE_TAX_STATUS_CODE_OTH     VARCHAR2(1000);
  L_WHERE_TAX_STATUS_CODE_ADJ     VARCHAR2(1000);
  L_WHERE_FIRST_PTY_TAX_REG_NUM   VARCHAR2(1000);
  L_WHERE_FIRST_PTY_TAX_REG_OTH   VARCHAR2(1000);
  L_WHERE_FIRST_PTY_TAX_REG_ADJ   VARCHAR2(1000);
  L_WHERE_FIRST_PTY_TAX_REG_MIS   VARCHAR2(1000);
  L_WHERE_TAX_RATE_CODE           VARCHAR2(1000);
  L_WHERE_TAX_RATE_CODE_OTH       VARCHAR2(1000);
  L_WHERE_TAX_TYPE_CODE           VARCHAR2(1000);
  L_WHERE_TAX_TYPE_CODE_ADJ       VARCHAR2(1000);
  L_WHERE_CURRENCY_CODE           VARCHAR2(1000);
  L_WHERE_CURRENCY_CODE_ADJ       VARCHAR2(1000);
  L_WHERE_BATCH_NAME              VARCHAR2(1000);
--L_WHERE_SOURCE_NAME
  L_WHERE_TAX_LTE_OTHER_CLS       VARCHAR2(1000);
  L_WHERE_TAX_LTE                 VARCHAR2(1000);

  L_WHERE_ACCOUNTING_STATUS       VARCHAR2(500);
  L_WHERE_REPORTED_STATUS         VARCHAR2(500);

  -- EU VAT No Tax Code --
  L_WHERE_REP_CONTEXT_NO_TAX    VARCHAR2(500);
  L_WHERE_LEDGER_ID_NO_TAX           VARCHAR2(500);
  L_WHERE_LEGAL_ENTITY_ID_NO_TAX     VARCHAR2(500);
  L_WHERE_REG_TYPE_AR_TRX_NO_TAX    VARCHAR2(500);
--  L_WHERE_TRX_CLASS_INV_CM_DM_NO_TAX    VARCHAR2(500);
  L_WHERE_PARTY_NAME_NO_TAX           VARCHAR2(500);
  L_WHERE_BATCH_NAME_NO_TAX           VARCHAR2(500);
  L_WHERE_TRX_NUM_INV_NO_TAX       VARCHAR2(500);
  L_WHERE_GL_TRX_DATE_INV_NO_TAX      VARCHAR2(500);
  L_WHERE_TRX_DATE_INV_NO_TAX         VARCHAR2(500);
  L_WHERE_GL_DATE_INV_NO_TAX          VARCHAR2(500);
  L_WHERE_DOC_SUB_TYPE_NO_TAX    VARCHAR2(500);
  L_WHERE_TRX_BUS_CAT_NO_TAX    VARCHAR2(500);
  --L_WHERE_TAX_INVOICE_DATE_NO_TAX      VARCHAR2(500);
  L_WHERE_TAX_JURIS_CODE_NO_TAX    VARCHAR2(500);
  L_WHERE_FIRST_REG_NUM_NO_TAX    VARCHAR2(500);
  L_WHERE_TAX_REGIME_CODE_NO_TAX         VARCHAR2(500);
  L_WHERE_TAX_NO_TAX                   VARCHAR2(500);
  L_WHERE_TAX_STATUS_CODE_NO_TAX        VARCHAR2(500);
  L_WHERE_TAX_CODE_NO_TAX      VARCHAR2(500);
  L_WHERE_TAX_TYPE_CODE_NO_TAX          VARCHAR2(500);
  L_WHERE_CURRENCY_CODE_NO_TAX          VARCHAR2(500);
  L_WHERE_EXEM_STATUS_NO_TAX        VARCHAR2(500);
  L_WHERE_TAX_TRX_TYPE_NO_TAX    VARCHAR2(500);
  L_WHERE_TAX_LTE_NO_TAX                  VARCHAR2(500);
--  L_WHERE_ACCOUNTING_STATUS_TRX_NO_TAX    VARCHAR2(500);
 -- L_WHERE_REPORTED_STATUS_NO_TAX          VARCHAR2(500);
  -- no tax code end --

  -- MRC changes
  --
  L_TBL_NAME_AR_DIST_ALL          VARCHAR2(30);
  L_TBL_NAME_AR_DIST              VARCHAR2(30);
  L_TBL_NAME_AR_TRX_HIST_ALL      VARCHAR2(30);
  L_TBL_NAME_AR_TRX_HIST          VARCHAR2(30);
  L_TBL_NAME_CUSTOMER_TRX_ALL     VARCHAR2(30);
  L_TBL_NAME_CUSTOMER_TRX         VARCHAR2(30);
  L_TBL_NAME_AR_ADJUSTMENTS_ALL   VARCHAR2(30);
  L_TBL_NAME_AR_ADJUSTMENTS       VARCHAR2(30);
  L_TBL_AR_RECEIVABLE_APPS_ALL    VARCHAR2(30);
  L_TBL_AR_RECEIVABLE_APPS        VARCHAR2(30);
  L_TBL_CUS_TRX_LINE_GL_DIST_ALL  VARCHAR2(30);
  L_TBL_CUS_TRX_LINE_GL_DIST      VARCHAR2(30);
  -- added by lxzhang
  L_TBL_AR_MISC_CASH_DIST_ALL     VARCHAR2(30);

  --
  --  group by statements
  --
  L_GROUP_BY_AR_INV         VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_2       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_3       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_4       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_5       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_6       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_8        VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_9        VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_10       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_11       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_12       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_13       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_14       VARCHAR2(15000); -- apai 0220

  l_where_num_of_tax_lines        VARCHAR2(2000);
  l_where_tax_code_other_trx      VARCHAR2(2000);
  l_where_reg_type_other_trx      VARCHAR2(200);

  L_BALANCING_SEGMENT            VARCHAR2(50);
  L_ACCOUNTING_SEGMENT           VARCHAR2(50);

--  L_REP_CONTEXT_ID      NUMBER ;

  L_WHERE_GL_TRX_DATE_INV   VARCHAR2(2000); --Bug 5347188
  L_WHERE_GL_TRX_DATE_MISC  VARCHAR2(2000); --Bug 5347188
  L_WHERE_GL_TRX_DATE_APP   VARCHAR2(2000); --Bug 5347188
  L_WHERE_GL_TRX_DATE_ADJ   VARCHAR2(2000); --Bug 5347188
  L_WHERE_GL_TRX_DATE_BR    VARCHAR2(2000); --Bug 5347188

  l_fnd_mo_org_stg        VARCHAR2(5000);
  l_internal_org_stg      VARCHAR2(2000);
  l_string_len            NUMBER;
  l_org_len               NUMBER;
  l_get_org_id            VARCHAR2(15);
  lte_count               NUMBER;
BEGIN


    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql.BEGIN',
                                      'ZX_AR_EXTRACT_PKG: build_sql(+)');
    END IF;

  --
  -- determine which table to use based on MRC sob type
  --
  IF P_MRC_SOB_TYPE = 'T' THEN
    L_TBL_NAME_AR_DIST_ALL         := 'AR_DISTRIBUTIONS_ALL_MRC_V';
    L_TBL_NAME_AR_DIST             := 'AR_DISTRIBUTIONS_MRC_V';
    L_TBL_NAME_AR_TRX_HIST_ALL     := 'AR_TRX_HISTORY_ALL_MRC_V';
    L_TBL_NAME_AR_TRX_HIST         := 'AR_TRX_HISTORY_MRC_V';
    L_TBL_NAME_CUSTOMER_TRX_ALL    := 'RA_CUSTOMER_TRX_ALL_MRC_V';
    L_TBL_NAME_CUSTOMER_TRX        := 'RA_CUSTOMER_TRX_MRC_V';
    L_TBL_NAME_AR_ADJUSTMENTS_ALL  := 'AR_ADJUSTMENTS_ALL_MRC_V';
    L_TBL_NAME_AR_ADJUSTMENTS      := 'AR_ADJUSTMENTS_MRC_V';
    L_TBL_AR_RECEIVABLE_APPS_ALL   := 'AR_RECEIVABLE_APPS_ALL_MRC_V';
    L_TBL_AR_RECEIVABLE_APPS       := 'AR_RECEIVABLE_APPS_MRC_V';
    L_TBL_CUS_TRX_LINE_GL_DIST_ALL := 'RA_TRX_LINE_GL_DIST_ALL_MRC_V';
    L_TBL_CUS_TRX_LINE_GL_DIST     := 'RA_TRX_LINE_GL_DIST_MRC_V';
    L_TBL_AR_MISC_CASH_DIST_ALL    := 'AR_MISC_CASH_DISTS_ALL_MRC_V'; -- added by lxzhang
  ELSE
    L_TBL_NAME_AR_DIST_ALL         := 'AR_DISTRIBUTIONS_ALL';
    L_TBL_NAME_AR_DIST             := 'AR_DISTRIBUTIONS';
    L_TBL_NAME_AR_TRX_HIST_ALL     := 'AR_TRANSACTION_HISTORY_ALL';
    L_TBL_NAME_AR_TRX_HIST         := 'AR_TRANSACTION_HISTORY';
    L_TBL_NAME_CUSTOMER_TRX_ALL    := 'RA_CUSTOMER_TRX_ALL';
    L_TBL_NAME_CUSTOMER_TRX        := 'RA_CUSTOMER_TRX';
    L_TBL_NAME_AR_ADJUSTMENTS_ALL  := 'AR_ADJUSTMENTS_ALL';
    L_TBL_NAME_AR_ADJUSTMENTS      := 'AR_ADJUSTMENTS';
    L_TBL_AR_RECEIVABLE_APPS_ALL   := 'AR_RECEIVABLE_APPLICATIONS_ALL';
    L_TBL_AR_RECEIVABLE_APPS       := 'AR_RECEIVABLE_APPLICATIONS';
    L_TBL_CUS_TRX_LINE_GL_DIST_ALL := 'RA_CUST_TRX_LINE_GL_DIST_ALL';
    L_TBL_CUS_TRX_LINE_GL_DIST     := 'RA_CUST_TRX_LINE_GL_DIST';
    L_TBL_AR_MISC_CASH_DIST_ALL    := 'AR_MISC_CASH_DISTRIBUTIONS_ALL'; -- added by lxzhang
  END IF;

  --
  --   Performance Imporvement
  --   Go through AR_VAT_TAX_ALL table for the Reporting Level / Context
  --   and see if there exists any row which has
  --  If no rows are found, the customer is not using Deferred Taxes.
  --  In that case, do not build SQL for Transaction Class 'APPLICATION', , 'EDISC--  ','UNEDISC','ADJ','FINCHRG', 'BR'

  --   Building Where Clauses:
  --   L_WHERE_REPORTING_CONTEXT :
  --   These where clauses will be used in the queries to restrict the
  --   data from multi-org tables to the appropriate reporting context .
  --   Hardcode the Low and High Transaction dates if they are null.


 -- New Where Clause Code based on Etax Repository :   -- Skorrapa
 -- These where clauses will be build for transaction classes : Invoice, Debit Memor, and Credit Memo



     --  ADD NEW PREDICATE CODE HERE



  --   L_WHERE_REPORTING_CONTEXT :
  --   These where clauses will be used in the queries to restrict the
  --   data from multi-org tables to the appropriate reporting context .

  --   Hardcode the Low and High Transaction dates if they are null.
  IF G_REPORTING_LEVEL IS NOT NULL THEN
     L_REPORTING_CONTEXT_VAL := ' '||TO_CHAR(G_REPORTING_CONTEXT)||' ';

    FND_MO_REPORTING_API.INITIALIZE (
         p_reporting_level =>G_REPORTING_LEVEL,
         p_reporting_entity_id => G_REPORTING_CONTEXT,
         p_pred_type =>'AUTO');


    IF (g_level_procedure >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                                        'After FND_MO_REPORTING_API.INITIALIZE Call : ');
    END IF;

-- Check with Kripa  --skorrapa


    l_fnd_mo_org_stg := FND_MO_REPORTING_API.GET_PREDICATE('ZX_DET',NULL,L_REPORTING_CONTEXT_VAL);
    IF (g_level_procedure >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                                        'After FND_MO_REPORTING_API.GET_PREDICATE Call = '||l_fnd_mo_org_stg);
    END IF;

    l_internal_org_stg:= REPLACE(l_fnd_mo_org_stg,'ORG_ID','INTERNAL_ORGANIZATION_ID');

    IF (g_level_procedure >= g_current_runtime_level ) THEN
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                    'l_internal_org_stg = '||l_internal_org_stg);
    END IF;


    IF G_REPORTING_LEVEL IN ('1000','3000') THEN
      L_WHERE_REPORTING_CONTEXT_TRXH := l_internal_org_stg;
      L_WHERE_REPORTING_CONTEXT_VAT :=
          FND_MO_REPORTING_API.GET_PREDICATE('VAT',NULL,L_REPORTING_CONTEXT_VAL);
      L_WHERE_REPORTING_CONTEXT_EX :=
          FND_MO_REPORTING_API.GET_PREDICATE('EX',NULL,L_REPORTING_CONTEXT_VAL);
      L_WHERE_REPORTING_CONTEXT_TYP :=
          FND_MO_REPORTING_API.GET_PREDICATE('TYPES',NULL,L_REPORTING_CONTEXT_VAL);
      L_WHERE_REPORTING_CONTEXT_BS :=
          FND_MO_REPORTING_API.GET_PREDICATE('BS',NULL,L_REPORTING_CONTEXT_VAL);
      L_WHERE_REPORTING_CONTEXT_ADJ :=
          FND_MO_REPORTING_API.GET_PREDICATE('ADJ',NULL,L_REPORTING_CONTEXT_VAL);
      L_WHERE_REPORTING_CONTEXT_CS :=
          FND_MO_REPORTING_API.GET_PREDICATE('ARCS',NULL,L_REPORTING_CONTEXT_VAL);
      L_WHERE_REPORTING_CONTEXT_TH :=
          FND_MO_REPORTING_API.GET_PREDICATE('TH',NULL,L_REPORTING_CONTEXT_VAL);
    ELSE
      L_WHERE_REPORTING_CONTEXT_TRXH := ' AND NULL IS NULL';
      L_WHERE_REPORTING_CONTEXT_VAT :=' AND NULL IS NULL';
      L_WHERE_REPORTING_CONTEXT_EX :=' AND NULL IS NULL';
      L_WHERE_REPORTING_CONTEXT_TYP := ' AND NULL IS NULL';
      L_WHERE_REPORTING_CONTEXT_BS :=' AND NULL IS NULL';
      L_WHERE_REPORTING_CONTEXT_ADJ :=' AND NULL IS NULL';
      L_WHERE_REPORTING_CONTEXT_CS :=' AND NULL IS NULL';
      L_WHERE_REPORTING_CONTEXT_TH :=' AND NULL IS NULL';
    END IF;
  END IF;

  IF G_ESL_EU_TRX_TYPE IS NOT NULL THEN
    L_WHERE_REP_CONTEXT_NO_TAX  := ' AND NULL IS NULL';
    L_WHERE_LEDGER_ID_NO_TAX         := ' AND ZX_DET.LEDGER_ID = :G_LEDGER_ID ';
    L_WHERE_LEGAL_ENTITY_ID_NO_TAX   := ' AND DECODE(:G_LEGAL_ENTITY_ID,NULL,NULL) IS NULL ';
    L_WHERE_REG_TYPE_AR_TRX_NO_TAX := ' AND 1 = 1 ';
    --L_WHERE_TRX_CLASS_INV_CM_DM_NO_TAX
    L_WHERE_PARTY_NAME_NO_TAX        := ' AND DECODE(:G_PARTY_NAME,NULL,NULL) IS NULL ';
    L_WHERE_BATCH_NAME_NO_TAX     := ' AND DECODE(:G_BATCH_NAME,NULL,NULL) IS NULL ';
    L_WHERE_TRX_NUM_INV_NO_TAX := ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
    --L_WHERE_GL_TRX_DATE_INV_NO_TAX :=
    --L_WHERE_TRX_DATE_INV_NO_TAX
    --L_WHERE_GL_DATE_INV_NO_TAX
    L_WHERE_DOC_SUB_TYPE_NO_TAX   := ' AND DECODE(:G_TRX_BUSINESS_CATEGORY,NULL,NULL) IS NULL ';
    L_WHERE_TRX_BUS_CAT_NO_TAX  := ' AND DECODE(:G_TRX_BUSINESS_CATEGORY,NULL,NULL) IS NULL ';
    --L_WHERE_TAX_INVOICE_DATE_NO_TAX
    L_WHERE_TAX_JURIS_CODE_NO_TAX  := ' AND DECODE(:g_tax_jurisdiction_code,NULL,NULL) IS NULL ';
    L_WHERE_FIRST_REG_NUM_NO_TAX :=  ' AND DECODE(:g_first_party_tax_reg_num,NULL,NULL) IS NULL ';
    L_WHERE_TAX_REGIME_CODE_NO_TAX    := ' AND DECODE(:G_TAX_REGIME_CODE,NULL,NULL) IS NULL ';
    L_WHERE_TAX_NO_TAX               := ' AND DECODE(:G_TAX,NULL,NULL) IS NULL ';
    L_WHERE_TAX_STATUS_CODE_NO_TAX  := ' AND DECODE(:G_TAX_STATUS_CODE,NULL,NULL) IS NULL ';
    L_WHERE_TAX_CODE_NO_TAX := ' AND DECODE(:G_TAX_RATE_CODE_LOW,NULL,NULL) IS NULL '||
                               ' AND DECODE(:G_TAX_RATE_CODE_HIGH,NULL,NULL) IS NULL ';

    L_WHERE_TAX_TYPE_CODE_NO_TAX      := ' AND DECODE(:G_TAX_TYPE_CODE_LOW,NULL,NULL) IS NULL '||
                                 ' AND DECODE(:G_TAX_TYPE_CODE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_CURRENCY_CODE_NO_TAX     := ' AND DECODE(:G_CURRENCY_CODE_LOW,NULL,NULL) IS NULL
                                            AND DECODE(:G_CURRENCY_CODE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_EXEM_STATUS_NO_TAX   := ' AND DECODE(:G_AR_EXEMPTION_STATUS,NULL,NULL) is NULL' ;
    L_WHERE_TAX_TRX_TYPE_NO_TAX  := ' AND DECODE(:G_VAT_TRANSACTION_TYPE_CODE,NULL,NULL) IS NULL ';
    --L_WHERE_TAX_LTE_NO_TAX
    --L_WHERE_ACCOUNTING_STATUS_TRX_NO_TAX
    --L_WHERE_REPORTED_STATUS_NO_TAX

  END IF;
  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                    'L_WHERE_REPORTING_CONTEXT_TRXH : '||L_WHERE_REPORTING_CONTEXT_TRXH);
  END IF;

--New parameter code
  IF G_LEDGER_ID IS NOT NULL THEN
    L_WHERE_LEDGER_ID := ' AND ZX_DET.LEDGER_ID = :G_LEDGER_ID ';
    L_WHERE_LEDGER_ID_MISC := ' AND DIST.SET_OF_BOOKS_ID = :G_LEDGER_ID ';
    L_WHERE_LEDGER_ID_APP := ' AND APP.SET_OF_BOOKS_ID = :G_LEDGER_ID ';
   -- IF G_ESL_EU_TRX_TYPE IS NULL THEN
       L_WHERE_LEDGER_ID_ADJ := ' AND ZX_DET.SET_OF_BOOKS_ID = :G_LEDGER_ID ';
   -- ELSE
    --   L_WHERE_LEDGER_ID_ADJ := ' AND ZX_DET.LEDGER_ID = :G_LEDGER_ID ';
  --  END IF;
  ELSE
    L_WHERE_LEDGER_ID := ' AND DECODE(:G_LEDGER_ID,NULL,NULL) IS NULL ';
    L_WHERE_LEDGER_ID_MISC := ' AND DECODE(:G_LEDGER_ID,NULL,NULL) IS NULL ';
    L_WHERE_LEDGER_ID_ADJ := ' AND DECODE(:G_LEDGER_ID,NULL,NULL) IS NULL ';
  END IF;

--New parameter code  :

  IF g_reporting_level = '2000' THEN
    L_WHERE_LEGAL_ENTITY_ID := ' AND ZX_DET.LEGAL_ENTITY_ID = :G_LEGAL_ENTITY_ID ';
    L_WHERE_LEGAL_ENTITY_ID_MISC := ' AND ARCS.LEGAL_ENTITY_ID = :G_LEGAL_ENTITY_ID ';
  ELSE
    L_WHERE_LEGAL_ENTITY_ID := ' AND DECODE(:G_LEGAL_ENTITY_ID,NULL,NULL) IS NULL ';
    L_WHERE_LEGAL_ENTITY_ID_MISC := ' AND DECODE(:G_LEGAL_ENTITY_ID,NULL,NULL) IS NULL ';
  END IF;

-- New Parameter code

  --    L_WHERE_REGISTER_TYPE:
  --    The following where clauses will be built to select appropriate register type
  --IF G_INCLUDE_AR_INV_TRX_CLASS = 'Y' THEN
  IF G_REGISTER_TYPE = 'INTERIM' THEN
    /* Commented this as part of Bug 5503747 as
    the column ZX_ACCOUNTS.INTERIM_TAX_CCID should be used instead of ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE*/
  --  L_WHERE_REGISTER_TYPE_AR_TRX :=
--             ' AND ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE = ''DEFERRED'' ';
    L_WHERE_REGISTER_TYPE_AR_TRX := ' AND ZX_ACCOUNTS.INTERIM_TAX_CCID IS NOT NULL ';
    L_WHERE_REGISTER_TYPE_AR_APP := ' AND ARDTAX.SOURCE_TYPE = ''DEFERRED_TAX''';
    L_WHERE_REGISTER_TYPE_AR_ADJ := ' AND ARDTAX.SOURCE_TYPE = ''DEFERRED_TAX''';
    L_WHERE_REGISTER_TYPE_AR_MISC := ' AND 1 = 2 ';
    L_WHERE_REG_TYPE_OTHER_TRX := ' AND ARDTAX2.SOURCE_TYPE = ''DEFERRED_TAX''';
    L_WHERE_REGISTER_TYPE_AR_BR := ' AND ARDTAX.SOURCE_TYPE = ''DEFERRED_TAX''';
  ELSIF G_REGISTER_TYPE = 'TAX' THEN
   /* L_WHERE_REGISTER_TYPE_AR_TRX :=
             ' AND NVL(ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,''IMMEDIATE'') = ''IMMEDIATE'' ';*/
--Bug 5503747
    L_WHERE_REGISTER_TYPE_AR_TRX  := ' AND ZX_ACCOUNTS.INTERIM_TAX_CCID IS NULL ';
    L_WHERE_REGISTER_TYPE_AR_APP  := ' AND ARDTAX.SOURCE_TYPE = ''TAX''';
    L_WHERE_REGISTER_TYPE_AR_ADJ  := ' AND ARDTAX.SOURCE_TYPE = ''TAX''';
    L_WHERE_REGISTER_TYPE_AR_MISC := ' AND 1 = 1 ';
    L_WHERE_REG_TYPE_OTHER_TRX    := ' AND ARDTAX2.SOURCE_TYPE = ''TAX''';
    L_WHERE_REGISTER_TYPE_AR_BR   := ' AND ARDTAX.SOURCE_TYPE = ''TAX''';
  ELSIF G_REGISTER_TYPE = 'NON-RECOVERABLE' THEN
    L_WHERE_REGISTER_TYPE_AR_TRX  := ' AND 1 = 2 ';
    L_WHERE_REGISTER_TYPE_AR_APP  := ' AND ARDTAX.SOURCE_TYPE IN
           (''EDISC_NON_REC_TAX'''||','||'''UNEDISC_NON_REC_TAX'''||')';
    L_WHERE_REGISTER_TYPE_AR_ADJ  := ' AND ARDTAX.SOURCE_TYPE IN
           ('||'''ADJ_NON_REC_TAX'''||','||'''FINCHRG_NON_REC_TAX'''||')';
    L_WHERE_REGISTER_TYPE_AR_MISC := ' AND 1 = 2 ';
    L_WHERE_REG_TYPE_OTHER_TRX    := ' AND ARDTAX2.SOURCE_TYPE IN
       ( ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'',''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'' ) ';
    L_WHERE_REGISTER_TYPE_AR_BR   := ' AND ARDTAX.SOURCE_TYPE IN
       ( ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'',''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'' ) ';
  ELSIF NVL(G_REGISTER_TYPE,'ALL') = 'ALL' THEN
    L_WHERE_REGISTER_TYPE_AR_TRX  := ' AND 1 = 1 ';
    L_WHERE_REGISTER_TYPE_AR_APP  := ' AND 1 = 1 ';
    L_WHERE_REGISTER_TYPE_AR_ADJ  := ' AND 1 = 1 ';
    L_WHERE_REGISTER_TYPE_AR_MISC := ' AND 1 = 1 ';
    L_WHERE_REGISTER_TYPE_AR_BR   := ' AND 1 = 1 ';
  END IF;
--END IF;


-- New Parameter code
 /* Commented during Bug 5347188 : as 4 boundary conditions are not handled
    IF G_TRX_DATE_LOW IS NOT NULL AND G_TRX_DATE_HIGH IS NOT NULL THEN
       L_WHERE_TRX_DATE_INV := ' AND ZX_DET.TRX_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ' ;
       L_WHERE_TRX_DATE_MISC :=' AND ARCS.RECEIPT_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
       L_WHERE_TRX_DATE_APP :=' AND ARCS.RECEIPT_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
       L_WHERE_TRX_DATE_ADJ :=' AND ADJ.APPLY_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
       L_WHERE_TRX_DATE_BR :=' AND TH.TRX_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
     ELSE
       L_WHERE_TRX_DATE_INV :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_TRX_DATE_MISC :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_TRX_DATE_APP :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_TRX_DATE_ADJ :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_TRX_DATE_BR :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
     END IF; */

--Added for Bug 5347188 : to take care of all 4 boundary conditions for g_trx_date_low and g_trx_date_high
  IF G_TRX_DATE_LOW IS NOT NULL AND G_TRX_DATE_HIGH IS NOT NULL THEN
    L_WHERE_TRX_DATE_INV  := ' ZX_DET.TRX_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ' ;
    L_WHERE_TRX_DATE_MISC := ' ARCS.RECEIPT_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
    L_WHERE_TRX_DATE_APP  := ' ARCS.RECEIPT_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
    L_WHERE_TRX_DATE_ADJ  := ' ADJ.APPLY_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
    L_WHERE_TRX_DATE_BR   := ' TH.TRX_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
  ELSIF G_TRX_DATE_LOW IS NULL AND G_TRX_DATE_HIGH IS NULL THEN
    L_WHERE_TRX_DATE_INV  := ' DECODE(:G_TRX_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_DATE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_TRX_DATE_MISC := ' DECODE(:G_TRX_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_DATE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_TRX_DATE_APP  := ' DECODE(:G_TRX_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_DATE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_TRX_DATE_ADJ  := ' DECODE(:G_TRX_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_DATE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_TRX_DATE_BR   := ' DECODE(:G_TRX_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_DATE_HIGH,NULL,NULL) IS NULL ';
  ELSIF G_TRX_DATE_LOW IS NOT NULL AND G_TRX_DATE_HIGH IS NULL THEN
    L_WHERE_TRX_DATE_INV  := ' ZX_DET.TRX_DATE >= :G_TRX_DATE_LOW AND DECODE(:G_TRX_DATE_HIGH, NULL,NULL) IS NULL ';
    L_WHERE_TRX_DATE_MISC := ' ARCS.RECEIPT_DATE >= :G_TRX_DATE_LOW AND DECODE(:G_TRX_DATE_HIGH, NULL,NULL) IS NULL ';
    L_WHERE_TRX_DATE_APP  := ' ARCS.RECEIPT_DATE >= :G_TRX_DATE_LOW AND DECODE(:G_TRX_DATE_HIGH, NULL,NULL) IS NULL ';
    L_WHERE_TRX_DATE_ADJ  := ' ADJ.APPLY_DATE >= :G_TRX_DATE_LOW AND DECODE(:G_TRX_DATE_HIGH, NULL,NULL) IS NULL ';
    L_WHERE_TRX_DATE_BR   := ' TH.TRX_DATE >= :G_TRX_DATE_LOW AND DECODE(:G_TRX_DATE_HIGH, NULL,NULL) IS NULL ';
  ELSE
    L_WHERE_TRX_DATE_INV  := ' DECODE(:G_TRX_DATE_LOW, NULL,NULL) IS NULL and ZX_DET.TRX_DATE <= :G_TRX_DATE_HIGH ';
    L_WHERE_TRX_DATE_MISC := ' DECODE(:G_TRX_DATE_LOW, NULL,NULL) IS NULL and ARCS.RECEIPT_DATE <= :G_TRX_DATE_HIGH ';
    L_WHERE_TRX_DATE_APP  := ' DECODE(:G_TRX_DATE_LOW, NULL,NULL) IS NULL and ARCS.RECEIPT_DATE <= :G_TRX_DATE_HIGH ';
    L_WHERE_TRX_DATE_ADJ  := ' DECODE(:G_TRX_DATE_LOW, NULL,NULL) IS NULL and ADJ.APPLY_DATE <= :G_TRX_DATE_HIGH ';
    L_WHERE_TRX_DATE_BR   := ' DECODE(:G_TRX_DATE_LOW, NULL,NULL) IS NULL and TH.TRX_DATE <= :G_TRX_DATE_HIGH ';
  END IF;

  /* Commented during Bug 5347188 : as 4 boundary conditions are not handled
    IF G_GL_DATE_LOW IS NOT NULL AND G_GL_DATE_HIGH IS NOT NULL THEN
       L_WHERE_GL_DATE_INV := ' AND DIST.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ' ;
       L_WHERE_GL_DATE_MISC := ' AND DIST.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
       L_WHERE_GL_DATE_APP :=' AND APP.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
       L_WHERE_GL_DATE_ADJ :=' AND ADJ.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
       L_WHERE_GL_DATE_BR :=' AND TH.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
     ELSE
       L_WHERE_GL_DATE_MISC   := ' AND 1=1 ';
       L_WHERE_GL_DATE_APP   := ' AND 1=1 ';
       L_WHERE_GL_DATE_ADJ :=' AND 1=1 ';
       L_WHERE_GL_DATE_BR :=' AND 1=1 ';
       L_WHERE_GL_DATE_INV :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_GL_DATE_MISC :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_GL_DATE_APP :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_GL_DATE_ADJ :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_GL_DATE_BR :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
     END IF;*/

--Added for Bug 5347188 : to take care of all 4 boundary conditions for g_gl_date_low and g_gl_date_high
  IF G_GL_DATE_LOW IS NOT NULL AND G_GL_DATE_HIGH IS NOT NULL THEN
    L_WHERE_GL_DATE_INV  := ' DIST.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ' ;
    L_WHERE_GL_DATE_MISC := ' DIST.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
    L_WHERE_GL_DATE_APP  := ' APP.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
    L_WHERE_GL_DATE_ADJ  := ' ADJ.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
    L_WHERE_GL_DATE_BR   := ' TH.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
    L_WHERE_GL_DATE_INV_NO_TAX := ' AND ZX_DET.TRX_LINE_GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH '   ;
  ELSIF G_GL_DATE_LOW IS NULL AND G_GL_DATE_HIGH IS NULL THEN
    L_WHERE_GL_DATE_INV  := ' DECODE(:G_GL_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_GL_DATE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_MISC := ' DECODE(:G_GL_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_GL_DATE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_APP  := ' DECODE(:G_GL_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_GL_DATE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_ADJ  := ' DECODE(:G_GL_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_GL_DATE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_BR   := ' DECODE(:G_GL_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_GL_DATE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_INV_NO_TAX := 'AND  DECODE(:G_GL_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_GL_DATE_HIGH,NULL,NULL) IS NULL ';
  ELSIF G_GL_DATE_LOW IS NOT NULL AND G_GL_DATE_HIGH IS NULL THEN
    L_WHERE_GL_DATE_INV  := ' DIST.GL_DATE >= :G_GL_DATE_LOW AND DECODE(:G_GL_DATE_HIGH, NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_MISC := ' DIST.GL_DATE >= :G_GL_DATE_LOW AND DECODE(:G_GL_DATE_HIGH, NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_APP  := ' APP.GL_DATE >= :G_GL_DATE_LOW AND DECODE(:G_GL_DATE_HIGH, NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_ADJ  := ' ADJ.GL_DATE >= :G_GL_DATE_LOW AND DECODE(:G_GL_DATE_HIGH, NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_BR   := ' TH.GL_DATE >= :G_GL_DATE_LOW AND DECODE(:G_GL_DATE_HIGH, NULL,NULL) IS NULL ';
    L_WHERE_GL_DATE_INV_NO_TAX  := 'AND  ZX_DET.TRX_LINE_GL_DATE >= :G_GL_DATE_LOW AND DECODE(:G_GL_DATE_HIGH, NULL,NULL) IS NULL ';
  ELSE
    L_WHERE_GL_DATE_INV  := ' DECODE(:G_GL_DATE_LOW, NULL,NULL) IS NULL and DIST.GL_DATE <= :G_GL_DATE_HIGH ';
    L_WHERE_GL_DATE_MISC := ' DECODE(:G_GL_DATE_LOW, NULL,NULL) IS NULL and DIST.GL_DATE <= :G_GL_DATE_HIGH ';
    L_WHERE_GL_DATE_APP  := ' DECODE(:G_GL_DATE_LOW, NULL,NULL) IS NULL and APP.GL_DATE <= :G_GL_DATE_HIGH ';
    L_WHERE_GL_DATE_ADJ  := ' DECODE(:G_GL_DATE_LOW, NULL,NULL) IS NULL and ADJ.GL_DATE <= :G_GL_DATE_HIGH ';
    L_WHERE_GL_DATE_BR   := ' DECODE(:G_GL_DATE_LOW, NULL,NULL) IS NULL and TH.GL_DATE <= :G_GL_DATE_HIGH ';
    L_WHERE_GL_DATE_INV_NO_TAX  := 'AND  DECODE(:G_GL_DATE_LOW, NULL,NULL) IS NULL and ZX_DET.TRX_LINE_GL_DATE <= :G_GL_DATE_HIGH ';
  END IF;

--Bug 5347188 : To take care of the OR GLDate/TrxDate filtering based on the parameter p_gl_or_trx_date_filter
  IF ( g_gl_or_trx_date_filter = 'Y' ) THEN
    L_WHERE_GL_TRX_DATE_INV := ' AND ( ( '||L_WHERE_TRX_DATE_INV||' ) OR ('||L_WHERE_GL_DATE_INV||')) ';
    L_WHERE_TRX_DATE_INV := ' ' ;
    L_WHERE_GL_DATE_INV := ' ' ;

    L_WHERE_GL_TRX_DATE_MISC := ' AND ( ( '||L_WHERE_TRX_DATE_MISC||' ) OR ('||L_WHERE_GL_DATE_MISC||')) ';
    L_WHERE_TRX_DATE_MISC := ' ' ;
    L_WHERE_GL_DATE_MISC := ' ' ;

    L_WHERE_GL_TRX_DATE_APP := ' AND ( ( '||L_WHERE_TRX_DATE_APP||' ) OR ('||L_WHERE_GL_DATE_APP||')) ';
    L_WHERE_TRX_DATE_APP := ' ' ;
    L_WHERE_GL_DATE_APP := ' ' ;

    L_WHERE_GL_TRX_DATE_ADJ := ' AND ( ( '||L_WHERE_TRX_DATE_ADJ||' ) OR ('||L_WHERE_GL_DATE_ADJ||')) ';
    L_WHERE_TRX_DATE_ADJ := ' ' ;
    L_WHERE_GL_DATE_ADJ := ' ' ;

    L_WHERE_GL_TRX_DATE_BR := ' AND ( ( '||L_WHERE_TRX_DATE_BR||' ) OR ('||L_WHERE_GL_DATE_BR||')) ';
    L_WHERE_TRX_DATE_BR := ' ' ;
    L_WHERE_GL_DATE_BR := ' ' ;
  ELSE
    L_WHERE_TRX_DATE_INV := ' AND '||L_WHERE_TRX_DATE_INV;
    L_WHERE_GL_DATE_INV := ' AND '||L_WHERE_GL_DATE_INV;

    L_WHERE_TRX_DATE_MISC := ' AND '||L_WHERE_TRX_DATE_MISC;
    L_WHERE_GL_DATE_MISC := ' AND '||L_WHERE_GL_DATE_MISC;

    L_WHERE_TRX_DATE_APP := ' AND '||L_WHERE_TRX_DATE_APP;
    L_WHERE_GL_DATE_APP := ' AND '||L_WHERE_GL_DATE_APP;

    L_WHERE_TRX_DATE_ADJ := ' AND '||L_WHERE_TRX_DATE_ADJ;
    L_WHERE_GL_DATE_ADJ := ' AND '||L_WHERE_GL_DATE_ADJ;

    L_WHERE_TRX_DATE_BR := ' AND '||L_WHERE_TRX_DATE_BR;
    L_WHERE_GL_DATE_BR := ' AND '||L_WHERE_GL_DATE_BR;

    L_WHERE_GL_TRX_DATE_INV := ' ';
    L_WHERE_GL_TRX_DATE_MISC := ' ';
    L_WHERE_GL_TRX_DATE_APP := ' ';
    L_WHERE_GL_TRX_DATE_ADJ := ' ';
    L_WHERE_GL_TRX_DATE_BR := ' ';
  END IF ;

-- New parameter code
  IF G_DOCUMENT_SUB_TYPE IS NOT NULL THEN
    L_WHERE_DOCUMENT_SUB_TYPE := ' AND ZX_DET.DOCUMENT_SUB_TYPE = :G_DOCUMENT_SUB_TYPE ';
  ELSE
    L_WHERE_DOCUMENT_SUB_TYPE := ' AND DECODE(:G_DOCUMENT_SUB_TYPE,NULL,NULL) IS NULL ';
  END IF;

  IF G_TRX_BUSINESS_CATEGORY IS NOT NULL THEN
    L_WHERE_TRX_BUSINESS_CATEGORY := ' AND ZX_DET.TRX_BUSINESS_CATEGORY = :G_TRX_BUSINESS_CATEGORY ';
  ELSE
    L_WHERE_TRX_BUSINESS_CATEGORY := ' AND DECODE(:G_TRX_BUSINESS_CATEGORY,NULL,NULL) IS NULL ';
  END IF;
    /*Bug 5119565 */

    --Bug 9031051
  IF G_TAX_INVOICE_DATE_LOW IS NOT NULL AND G_TAX_INVOICE_DATE_HIGH IS NOT NULL THEN
    IF G_ESL_EU_TRX_TYPE IS NOT NULL THEN
      IF G_ESL_DEFAULT_TAX_DATE = 'GL DATE' THEN
        L_WHERE_TAX_INVOICE_DATE :=  ' AND NVL(ZX_DET.TAX_INVOICE_DATE, ZX_DET.trx_line_gl_date) BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
        L_WHERE_TAX_INVOICE_DATE_ADJ :=  ' AND ADJ.GL_DATE BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
        L_WHERE_TAX_INVOICE_DATE_APP :=  ' AND APP.GL_DATE BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
      ELSIF G_ESL_DEFAULT_TAX_DATE = 'TRX DATE' THEN
        L_WHERE_TAX_INVOICE_DATE := ' AND NVL(ZX_DET.TAX_INVOICE_DATE, ZX_DET.trx_date) BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
        L_WHERE_TAX_INVOICE_DATE_ADJ :=  ' AND ADJ.APPLY_DATE BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
        L_WHERE_TAX_INVOICE_DATE_APP :=  ' AND APP.APPLY_DATE BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
      ELSE
        L_WHERE_TAX_INVOICE_DATE := ' AND ZX_DET.TAX_INVOICE_DATE BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
        L_WHERE_TAX_INVOICE_DATE_ADJ := ' AND 1=1 ';
        L_WHERE_TAX_INVOICE_DATE_APP := ' AND :G_TAX_INVOICE_DATE_LOW IS NOT NULL AND :G_TAX_INVOICE_DATE_HIGH IS NOT NULL ';
      END IF;
      L_WHERE_REPORTING_CONTEXT_TRXH := ' AND NULL IS NULL';
      L_WHERE_LEDGER_ID := ' AND DECODE(:G_LEDGER_ID, NULL, NULL, NULL) IS NULL';
      L_WHERE_LEGAL_ENTITY_ID := ' AND DECODE(:G_LEGAL_ENTITY_ID,NULL,NULL,NULL) IS NULL';
    ELSE
      L_WHERE_TAX_INVOICE_DATE := ' AND ZX_DET.TAX_INVOICE_DATE BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
      L_WHERE_TAX_INVOICE_DATE_ADJ := ' AND ZX_DET.TAX_INVOICE_DATE BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
      L_WHERE_TAX_INVOICE_DATE_APP := ' AND :G_TAX_INVOICE_DATE_LOW IS NOT NULL AND :G_TAX_INVOICE_DATE_HIGH IS NOT NULL ';
    END IF;
  ELSIF G_TAX_INVOICE_DATE_LOW IS NULL AND G_TAX_INVOICE_DATE_HIGH IS NULL THEN
    L_WHERE_TAX_INVOICE_DATE := ' AND :G_TAX_INVOICE_DATE_LOW IS NULL AND :G_TAX_INVOICE_DATE_HIGH IS NULL ';
    L_WHERE_TAX_INVOICE_DATE_ADJ := ' AND :G_TAX_INVOICE_DATE_LOW IS NULL AND :G_TAX_INVOICE_DATE_HIGH IS NULL ';
    L_WHERE_TAX_INVOICE_DATE_APP := ' AND :G_TAX_INVOICE_DATE_LOW IS NULL AND :G_TAX_INVOICE_DATE_HIGH IS NULL ';
  ELSIF G_TAX_INVOICE_DATE_LOW IS NOT NULL AND G_TAX_INVOICE_DATE_HIGH IS NULL THEN
    L_WHERE_TAX_INVOICE_DATE := ' AND ZX_DET.TAX_INVOICE_DATE >= :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH IS NULL ';
    L_WHERE_TAX_INVOICE_DATE_ADJ := ' AND ZX_DET.TAX_INVOICE_DATE >= :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH IS NULL ';
    L_WHERE_TAX_INVOICE_DATE_APP := ' AND :G_TAX_INVOICE_DATE_LOW IS NOT NULL AND :G_TAX_INVOICE_DATE_HIGH IS NULL ';
  ELSE
    L_WHERE_TAX_INVOICE_DATE := ' AND :G_TAX_INVOICE_DATE_LOW IS NULL  AND ZX_DET.TAX_INVOICE_DATE  <= :G_TAX_INVOICE_DATE_HIGH ';
    L_WHERE_TAX_INVOICE_DATE_ADJ := ' AND :G_TAX_INVOICE_DATE_LOW IS NULL  AND ZX_DET.TAX_INVOICE_DATE  <= :G_TAX_INVOICE_DATE_HIGH ';
    L_WHERE_TAX_INVOICE_DATE_APP := ' AND :G_TAX_INVOICE_DATE_LOW IS NULL AND :G_TAX_INVOICE_DATE_HIGH IS NOT NULL ';
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'L_WHERE_TAX_INVOICE_DATE_ADJ : '|| L_WHERE_TAX_INVOICE_DATE_ADJ);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'L_WHERE_TAX_INVOICE_DATE_APP : '|| L_WHERE_TAX_INVOICE_DATE_APP);
  END IF;
    --End Bug 9031051

  L_WHERE_TAX_INVOICE_DATE_MISC := ' AND decode(:G_TAX_INVOICE_DATE_LOW,NULL,NULL,NULL) IS NULL
                                              AND decode(:G_TAX_INVOICE_DATE_HIGH,NULL, NULL,NULL) IS NULL';

--New Parameter Code
  IF g_first_party_tax_reg_num IS NOT NULL THEN
    L_WHERE_FIRST_PTY_TAX_REG_NUM :=  ' AND zx_line.hq_estb_reg_number = :g_first_party_tax_reg_num ';
  ELSE
    L_WHERE_FIRST_PTY_TAX_REG_NUM :=  ' AND DECODE(:g_first_party_tax_reg_num,NULL,NULL) IS NULL ';
  END IF;

  IF g_first_party_tax_reg_num IS NOT NULL THEN
    IF G_ESL_EU_TRX_TYPE IS NULL THEN
      L_WHERE_FIRST_PTY_TAX_REG_OTH :=  ' AND ptp.rep_registration_number = :g_first_party_tax_reg_num ';
    ELSE
      L_WHERE_FIRST_PTY_TAX_REG_OTH :=  ' AND DECODE(:g_first_party_tax_reg_num,NULL,NULL) IS NULL ';
    END IF;
    L_WHERE_FIRST_PTY_TAX_REG_MIS :=  ' AND DECODE(:g_first_party_tax_reg_num,NULL,NULL) IS NULL ';
    L_WHERE_FIRST_PTY_TAX_REG_ADJ :=  ' AND DECODE(:g_first_party_tax_reg_num,NULL,NULL) IS NULL '; -- New --
  ELSE
    L_WHERE_FIRST_PTY_TAX_REG_OTH :=  ' AND DECODE(:g_first_party_tax_reg_num,NULL,NULL) IS NULL ';
    L_WHERE_FIRST_PTY_TAX_REG_MIS :=  ' AND DECODE(:g_first_party_tax_reg_num,NULL,NULL) IS NULL ';
  END IF;


  IF g_tax_jurisdiction_code IS NOT NULL THEN
    L_WHERE_TAX_JURISDICTION_CODE := ' AND ZX_LINE.TAX_JURISDICTION_CODE = :g_tax_jurisdiction_code ';
  ELSE
    L_WHERE_TAX_JURISDICTION_CODE := ' AND DECODE(:g_tax_jurisdiction_code,NULL,NULL) IS NULL ';
  END IF;

  IF g_tax_jurisdiction_code IS NOT NULL THEN
    L_WHERE_TAX_JURIS_CODE_OTH := ' AND ZX_RATE.TAX_JURISDICTION_CODE = :g_tax_jurisdiction_code ';
    L_WHERE_TAX_JURIS_CODE_ADJ := ' AND :G_TAX_JURISDICTION_CODE IS NOT NULL ';
  ELSE
    L_WHERE_TAX_JURIS_CODE_OTH := ' AND DECODE(:g_tax_jurisdiction_code,NULL,NULL) IS NULL ';
    L_WHERE_TAX_JURIS_CODE_ADJ := ' AND DECODE(:g_tax_jurisdiction_code,NULL,NULL) IS NULL ';
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'L_WHERE_TAX_JURIS_CODE_ADJ : '|| L_WHERE_TAX_JURIS_CODE_ADJ);
  END IF;

  IF G_TAX_REGIME_CODE IS NOT NULL THEN
    L_WHERE_TAX_REGIME_CODE := ' AND ZX_LINE.TAX_REGIME_CODE = :G_TAX_REGIME_CODE ';
  ELSE
    L_WHERE_TAX_REGIME_CODE := ' AND DECODE(:G_TAX_REGIME_CODE,NULL,NULL) IS NULL ';
  END IF;

  IF G_TAX_REGIME_CODE IS NOT NULL THEN
    L_WHERE_TAX_REGIME_CODE_OTH := ' AND ZX_RATE.TAX_REGIME_CODE = :G_TAX_REGIME_CODE ';
    L_WHERE_TAX_REGIME_CODE_ADJ := ' AND :G_TAX_REGIME_CODE IS NOT NULL ';
  ELSE
    L_WHERE_TAX_REGIME_CODE_OTH := ' AND DECODE(:G_TAX_REGIME_CODE,NULL,NULL) IS NULL ';
    L_WHERE_TAX_REGIME_CODE_ADJ := ' AND DECODE(:G_TAX_REGIME_CODE,NULL,NULL) IS NULL ';
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'L_WHERE_TAX_REGIME_CODE_ADJ : '|| L_WHERE_TAX_REGIME_CODE_ADJ);
  END IF;

  IF G_TAX IS NOT NULL THEN
    L_WHERE_TAX := ' AND ZX_LINE.TAX = :G_TAX ';
  ELSE
    L_WHERE_TAX := ' AND DECODE(:G_TAX,NULL,NULL) IS NULL ';
  END IF;

  IF G_TAX IS NOT NULL THEN
    L_WHERE_TAX_OTH := ' AND ZX_RATE.TAX = :G_TAX ';
    L_WHERE_TAX_ADJ := ' AND :G_TAX IS NOT NULL ';
  ELSE
    L_WHERE_TAX_OTH := ' AND DECODE(:G_TAX,NULL,NULL) IS NULL ';
    L_WHERE_TAX_ADJ := ' AND DECODE(:G_TAX,NULL,NULL) IS NULL ';
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                    'L_WHERE_TAX_ADJ : '|| L_WHERE_TAX_ADJ);
  END IF;

  IF G_TAX_STATUS_CODE IS NOT NULL THEN
    L_WHERE_TAX_STATUS_CODE := ' AND ZX_LINE.TAX_STATUS_CODE = :G_TAX_STATUS_CODE ';
  ELSE
    L_WHERE_TAX_STATUS_CODE := ' AND DECODE(:G_TAX_STATUS_CODE,NULL,NULL) IS NULL ';
  END IF;

  IF G_TAX_STATUS_CODE IS NOT NULL THEN
    L_WHERE_TAX_STATUS_CODE_OTH := ' AND ZX_RATE.TAX_STATUS_CODE = :G_TAX_STATUS_CODE ';
    L_WHERE_TAX_STATUS_CODE_ADJ := ' AND :G_TAX_STATUS_CODE IS NOT NULL ';
  ELSE
    L_WHERE_TAX_STATUS_CODE_OTH := ' AND DECODE(:G_TAX_STATUS_CODE,NULL,NULL) IS NULL ';
    L_WHERE_TAX_STATUS_CODE_ADJ := ' AND DECODE(:G_TAX_STATUS_CODE,NULL,NULL) IS NULL ';
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                    'L_WHERE_TAX_STATUS_CODE_ADJ : '||L_WHERE_TAX_STATUS_CODE_ADJ);
  END IF;

  IF g_tax_rate_code_low IS NOT NULL AND g_tax_rate_code_high IS NOT NULL THEN
     L_WHERE_TAX_RATE_CODE := ' AND ZX_LINE.TAX_RATE_CODE BETWEEN :G_TAX_RATE_CODE_LOW AND :G_TAX_RATE_CODE_HIGH ';
     L_WHERE_TAX_RATE_CODE_OTH := ' AND :G_TAX_RATE_CODE_LOW IS NOT NULL AND :G_TAX_RATE_CODE_HIGH IS NOT NULL ';
  ELSE
     L_WHERE_TAX_RATE_CODE := ' AND DECODE(:G_TAX_RATE_CODE_LOW,NULL,NULL) IS NULL '||
                              ' AND DECODE(:G_TAX_RATE_CODE_HIGH,NULL,NULL) IS NULL ';
     L_WHERE_TAX_RATE_CODE_OTH := ' AND DECODE(:G_TAX_RATE_CODE_LOW,NULL,NULL) IS NULL '||
                              ' AND DECODE(:G_TAX_RATE_CODE_HIGH,NULL,NULL) IS NULL ';
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                    'L_WHERE_TAX_RATE_CODE_OTH : '||L_WHERE_TAX_RATE_CODE_OTH);
  END IF;

  IF g_tax_type_code_low IS NOT NULL AND g_tax_type_code_high IS NOT NULL THEN
     L_WHERE_TAX_TYPE_CODE := ' AND ZX_TAX.TAX_TYPE_CODE BETWEEN :G_TAX_TYPE_CODE_LOW AND :G_TAX_TYPE_CODE_HIGH ';
     L_WHERE_TAX_TYPE_CODE_ADJ := ' AND :G_TAX_TYPE_CODE_LOW IS NOT NULL AND :G_TAX_TYPE_CODE_HIGH IS NOT NULL  ';
  ELSE
     L_WHERE_TAX_TYPE_CODE := ' AND DECODE(:G_TAX_TYPE_CODE_LOW,NULL,NULL) IS NULL '||
                                ' AND DECODE(:G_TAX_TYPE_CODE_HIGH,NULL,NULL) IS NULL ';
     L_WHERE_TAX_TYPE_CODE_ADJ := ' AND DECODE(:G_TAX_TYPE_CODE_LOW,NULL,NULL) IS NULL '||
                                ' AND DECODE(:G_TAX_TYPE_CODE_HIGH,NULL,NULL) IS NULL ';
  END IF;
  IF (g_level_procedure >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                    'L_WHERE_TAX_TYPE_CODE_ADJ : '||L_WHERE_TAX_TYPE_CODE_ADJ);
  END IF;

/*   IF G_TAX_RATE_CODE IS NOT NULL THEN
      L_WHERE_TAX_RATE_CODE := ' AND ZX_LINE.TAX_RATE_CODE = :G_TAX_RATE_CODE ';
   ELSE
      L_WHERE_TAX_RATE_CODE := ' AND DECODE(:G_TAX_RATE_CODE,NULL,NULL) IS NULL ';
   END IF;

   IF G_TAX_TYPE_CODE IS NOT NULL THEN
      L_WHERE_TAX_TYPE_CODE := ' AND ZX_TAX.TAX_TYPE_CODE = :G_TAX_TYPE_CODE ';
   ELSE
      L_WHERE_TAX_TYPE_CODE := ' AND DECODE(:G_TAX_TYPE_CODE,NULL,NULL) IS NULL ';
   END IF;
*/

   -- LTE paramaters code
        --L_WHERE_TAX_LTE := ' AND ZX_LINE.TAX IN (''VAT'')';
        L_WHERE_TAX_LTE := ' AND 1 = 1';

  IF G_TAX IS NULL AND G_VAT_TAX IS NOT NULL THEN
    L_WHERE_TAX_LTE := ' AND ZX_LINE.TAX IN (:G_VAT_TAX,:G_VAT_ADDITIONAL_TAX,:G_VAT_NON_TAXABLE_TAX,
                        :G_VAT_NOT_TAX,:G_VAT_PERCEPTION_TAX,:G_EXCISE_TAX) ';
  ELSE
  /*      lte_count := 1;
       BEGIN
          IF G_VAT_ADDITIONAL_TAX IS NOT NULL THEN
             L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| ',:G_VAT_ADDITIONAL_TAX)';
          ELSE
             L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| ',:G_VAT_ADDITIONAL_TAX)';
        lte_count := 2;
          END IF;
       END;
    END IF;

         IF G_VAT_NON_TAXABLE_TAX IS NOT NULL THEN
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_NON_TAXABLE_TAX||'',';
         ELSE
           L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_NON_TAXABLE_TAX||'',';
        lte_count := 2;
         END IF;

         IF G_VAT_NOT_TAX IS NOT NULL THEN
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_NOT_TAX||'',';
         ELSE
           L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_NOT_TAX||'',';
        lte_count := 2;
         END IF;

         IF G_VAT_PERCEPTION_TAX IS NOT NULL THEN
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_PERCEPTION_TAX||'',';
         ELSE
           L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_PERCEPTION_TAX||'',';
        lte_count := 2;
         END IF;

         IF G_EXCISE_TAX IS NOT NULL THEN
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_EXCISE_TAX||';
         ELSE
            --L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_EXCISE_TAX||''';
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_EXCISE_TAX';
        lte_count := 2;
         END IF;

             L_WHERE_TAX_LTE := L_WHERE_TAX_LTE || ')';
       END;
    ELSE
   */
    L_WHERE_TAX_LTE := 'AND decode(:G_VAT_TAX,NULL,NULL) is null
                        AND decode(:G_VAT_ADDITIONAL_TAX,NULL,NULL) is null
                        AND decode(:G_VAT_NON_TAXABLE_TAX,NULL,NULL) is null
                        AND decode(:G_VAT_NOT_TAX,NULL,NULL) is null
                        AND decode(:G_VAT_PERCEPTION_TAX,NULL,NULL) is null
                        AND decode(:G_EXCISE_TAX,NULL,NULL) is null ';
  END IF;

  L_WHERE_TAX_LTE_OTHER_CLS := 'AND decode(:G_VAT_TAX,NULL,NULL) is null
                                AND decode(:P_VAT_ADDITIONAL_TAX,NULL,NULL) is null
                                AND decode(:G_VAT_NON_TAXABLE_TAX,NULL,NULL) is null
                                AND decode(:G_VAT_NOT_TAX,NULL,NULL) is null
                                AND decode(:G_VAT_PERCEPTION_TAX,NULL,NULL) is null
                                AND decode(:G_EXCISE_TAX,NULL,NULL) is null ';

-- Add code for Category - Tax predicate


  -- New Parameter code
  --  L_WHERE_CURRENCY_CODE

  IF G_CURRENCY_CODE_LOW IS NOT NULL AND G_CURRENCY_CODE_HIGH IS NOT NULL THEN
    L_WHERE_CURRENCY_CODE := ' AND ZX_DET.TRX_CURRENCY_CODE BETWEEN :G_CURRENCY_CODE_LOW AND :G_CURRENCY_CODE_HIGH ';
    L_WHERE_CURRENCY_CODE_APP  :=
        ' AND ARCS.CURRENCY_CODE BETWEEN :G_CURRENCY_CODE_LOW AND :G_CURRENCY_CODE_HIGH ';
    L_WHERE_CURRENCY_CODE_ADJ := ' AND :G_CURRENCY_CODE_LOW IS NOT NULL AND :G_CURRENCY_CODE_HIGH IS NOT NULL ';
  ELSE
    L_WHERE_CURRENCY_CODE := ' AND DECODE(:G_CURRENCY_CODE_LOW,NULL,NULL) IS NULL
                               AND DECODE(:G_CURRENCY_CODE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_CURRENCY_CODE_APP := ' AND DECODE(:G_CURRENCY_CODE_LOW,NULL,NULL) IS NULL
                                   AND DECODE(:G_CURRENCY_CODE_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_CURRENCY_CODE_ADJ := ' AND DECODE(:G_CURRENCY_CODE_LOW,NULL,NULL) IS NULL
                                   AND DECODE(:G_CURRENCY_CODE_HIGH,NULL,NULL) IS NULL ';
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'L_WHERE_CURRENCY_CODE_ADJ : '|| L_WHERE_CURRENCY_CODE_ADJ);
  END IF;

-- Check this with kripa

  --  L_WHERE_EXEMPTION_STATUS
  IF G_AR_EXEMPTION_STATUS IS NULL THEN
    L_WHERE_EXEMPTION_STATUS := ' AND DECODE(:G_AR_EXEMPTION_STATUS,NULL,NULL) is NULL' ;
  ELSE
    L_WHERE_EXEMPTION_STATUS := ' AND ZX_EX.EXEMPTION_STATUS_CODE = :G_AR_EXEMPTION_STATUS ';
  END IF;

  L_WHERE_EXEMPT_STATUS_OTH := ' AND DECODE(:G_AR_EXEMPTION_STATUS,NULL,NULL) is NULL' ;


--  L_WHERE_EXEMPTION_STATUS_C := ' AND  DECODE(:G_AR_EXEMPTION_STATUS,NULL,NULL) is NULL' ;

-- Verify this parameter

  --  L_WHERE_BATCH_SOURCE_NAME
  IF  G_BATCH_NAME IS NOT NULL THEN
    L_WHERE_BATCH_NAME := ' AND ZX_DET.BATCH_SOURCE_NAME = :G_BATCH_NAME ';
  ELSE
    L_WHERE_BATCH_NAME := ' AND DECODE(:G_BATCH_NAME,NULL,NULL) IS NULL ';
  END IF;

  IF g_party_name IS NOT NULL THEN
    L_WHERE_PARTY_NAME := ' AND NVL(ZX_DET.SHIP_THIRD_PTY_ACCT_ID, ZX_DET.BILL_THIRD_PTY_ACCT_ID) = to_number(:G_PARTY_NAME)';
  ELSE
    L_WHERE_PARTY_NAME := ' AND DECODE(:G_PARTY_NAME,NULL,NULL) IS NULL ';
  END IF;

 --  L_WHERE_TAX_CODE_VAT_TRX_TYPE
  IF G_VAT_TRANSACTION_TYPE_CODE IS NOT NULL THEN
    L_WHERE_TAX_CODE_VAT_TRX_TYPE   := ' AND ZX_RATE.VAT_TRANSACTION_TYPE_CODE  = :G_VAT_TRANSACTION_TYPE_CODE ';
  ELSE
    L_WHERE_TAX_CODE_VAT_TRX_TYPE  := ' AND DECODE(:G_VAT_TRANSACTION_TYPE_CODE,NULL,NULL) IS NULL ';
  END IF;

-- New parameter code
  -- Building predicates for different TRX_CLASSES
 -- Check for Misc and BR classes
  IF G_INCLUDE_AR_INV_TRX_CLASS = 'Y' THEN
     L_WHERE_TRX_CLASS_INV_CM_DM  := ' AND ZX_DET.LINE_CLASS in (''INVOICE'',''CREDIT_MEMO'',''DEBIT_MEMO'') ';
  ELSE
      L_WHERE_TRX_CLASS_INV_CM_DM := ' AND 1 = 2 ';
  END IF;

  IF G_REPORT_NAME = 'ZXXVATRN'  THEN
    IF G_INCLUDE_DISCOUNTS = 'Y' AND  G_INCLUDE_AR_APPL_TRX_CLASS = 'Y' THEN
      L_WHERE_TRX_CLASS_APP_DISC := ' AND ard.source_type in (''EDISC'',''UNEDISC'',''REC'') ';
    ELSIF G_INCLUDE_DISCOUNTS = 'Y' AND  G_INCLUDE_AR_APPL_TRX_CLASS <> 'Y' THEN
      L_WHERE_TRX_CLASS_APP_DISC := ' AND ard.source_type in (''EDISC'',''UNEDISC'') ';
    ELSIF G_INCLUDE_DISCOUNTS <> 'Y' AND  G_INCLUDE_AR_APPL_TRX_CLASS = 'Y' THEN
      L_WHERE_TRX_CLASS_APP_DISC := ' AND ard.source_type in (''REC'') ';
    ELSE
       L_WHERE_TRX_CLASS_APP_DISC := ' AND 1 = 2 ';
    END IF;
  ELSIF G_REPORT_NAME = 'ZXXEUSL'  THEN
    L_WHERE_TRX_CLASS_APP_DISC := ' AND ard.source_type in (''EDISC'',''UNEDISC'') ';
  ELSE
    IF G_INCLUDE_AR_APPL_TRX_CLASS = 'Y' THEN
       L_WHERE_TRX_CLASS_APP_DISC := ' AND ard.source_type in (''EDISC'',''UNEDISC'',''REC'') ';
    ELSE
       L_WHERE_TRX_CLASS_APP_DISC := ' AND 1 = 2 ';
    END IF;
  END IF;

  IF G_INCLUDE_AR_ADJ_TRX_CLASS IN ('Y','TAX ADJUSTMENTS') THEN
    L_WHERE_TRX_CLASS_ADJ_FINCHRG := ' AND ADJ.TYPE IN (''INVOICE'',''CHARGES'',''LINE'',''TAX'') ';
    L_WHERE_TRX_CLASS_ADJ_TAX :=
         ' AND ARDTAX.SOURCE_TYPE IN (''TAX'',''DEFERRED_TAX'', ''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'') ';
  ELSIF G_INCLUDE_AR_ADJ_TRX_CLASS = 'ADJUSTMENTS' THEN
    L_WHERE_TRX_CLASS_ADJ_FINCHRG := ' AND ADJ.TYPE IN (''INVOICE'',''CHARGES'',''LINE'',''TAX'') ';
    L_WHERE_TRX_CLASS_ADJ_TAX :=
         ' AND ARDTAX.SOURCE_TYPE IN (''ADJ'',''TAX'',''DEFERRED_TAX'', ''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'') ';
  ELSIF NVL(G_INCLUDE_AR_ADJ_TRX_CLASS,'NONE') in ('NONE','N') THEN
    L_WHERE_TRX_CLASS_ADJ_FINCHRG := ' AND 1 = 2 ';
    L_WHERE_TRX_CLASS_ADJ_TAX := ' AND 1 = 2 ';
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                'G_INCLUDE_AR_ADJ_TRX_CLASS : '||G_INCLUDE_AR_ADJ_TRX_CLASS);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                'L_WHERE_TRX_CLASS_ADJ_FINCHRG : '||L_WHERE_TRX_CLASS_ADJ_FINCHRG);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                'L_WHERE_TRX_CLASS_ADJ_TAX : '||L_WHERE_TRX_CLASS_ADJ_TAX);
  END IF;

-- New paraneter code
  IF G_TRX_NUMBER_LOW IS NOT NULL AND G_TRX_NUMBER_HIGH IS NOT NULL THEN
    L_WHERE_TRX_NUMBER_INV := ' AND ZX_DET.TRX_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
    L_WHERE_TRX_NUMBER_APP := ' AND ARCS.RECEIPT_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
    L_WHERE_TRX_NUMBER_ADJ := ' AND ADJ.ADJUSTMENT_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
    L_WHERE_TRX_NUMBER_BR := ' AND ZX_DET.TRX_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
    L_WHERE_TRX_NUMBER_MISC := ' AND ARCS.RECEIPT_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
  ELSE
    L_WHERE_TRX_NUMBER_INV := ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_TRX_NUMBER_APP := ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_TRX_NUMBER_ADJ := ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_TRX_NUMBER_BR :=  ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
    L_WHERE_TRX_NUMBER_MISC :=  ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
  END IF;


  IF g_accounting_status = 'ACCOUNTED' THEN
     L_WHERE_ACCOUNTING_STATUS_TRX  := ' AND DIST.GL_POSTED_DATE IS NOT NULL ';
     L_WHERE_ACCOUNTING_STATUS_APP  := ' AND APP.GL_POSTED_DATE IS NOT NULL ';
     L_WHERE_ACCOUNTING_STATUS_ADJ  := ' AND ADJ.GL_POSTED_DATE IS NOT NULL ';
     L_WHERE_ACCOUNTING_STATUS_BR   := ' AND TH.GL_POSTED_DATE IS NOT NULL ';
     --L_WHERE_ACCOUNTING_STATUS_CM_REC := ' AND 1 = 1 ';

  ELSIF g_accounting_status = 'UNACCOUNTED' THEN
    -- IF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION' OR
    --    UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE' THEN
    --    L_WHERE_ACCOUNTING_STATUS_TRX  := ' AND 1=1 ';
    -- ELSE
        L_WHERE_ACCOUNTING_STATUS_TRX  := ' AND DIST.GL_POSTED_DATE IS NULL ';
    -- END IF;

     L_WHERE_ACCOUNTING_STATUS_APP  := ' AND APP.GL_POSTED_DATE IS NULL ';
     L_WHERE_ACCOUNTING_STATUS_ADJ  := ' AND ADJ.GL_POSTED_DATE IS NULL ';
     L_WHERE_ACCOUNTING_STATUS_BR   := ' AND TH.GL_POSTED_DATE IS NULL ';
    -- L_WHERE_ACCOUNTING_STATUS_CM_REC := ' AND 1 = 2 ';

  ELSIF g_accounting_status = 'BOTH' OR g_accounting_status IS NULL THEN
     L_WHERE_ACCOUNTING_STATUS_TRX := ' AND 1=1 ';
     L_WHERE_ACCOUNTING_STATUS_APP := ' AND 1=1 ';
     L_WHERE_ACCOUNTING_STATUS_ADJ := ' AND 1=1 ';
     L_WHERE_ACCOUNTING_STATUS_BR  := ' AND 1=1 ';
     --L_WHERE_ACCOUNTING_STATUS_CM_REC := ' AND 1 = 1 ';

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                    'L_WHERE_ACCOUNTING_STATUS_TRX : '||L_WHERE_ACCOUNTING_STATUS_TRX);
    END IF;

  END IF;


  IF G_REPORTED_STATUS IS NOT NULL  THEN
    L_WHERE_REPORTED_STATUS  := ' AND ZX_LINE.LEGAL_REPORTING_STATUS = ''000000000000000''';
  ELSE
    L_WHERE_REPORTED_STATUS  := ' AND 1 = 1 ';
  END IF;



 -- End of New Where Clause Code :   -- Skorrapa

    -- Bug#6743991 -- Reconciliation report --

  IF G_TAX_ACCOUNT_LOW IS NOT NULL AND
    G_TAX_ACCOUNT_HIGH IS NOT NULL
  THEN

    L_WHERE_GL_FLEX :=
         FA_RX_FLEX_PKG.FLEX_SQL(
         P_APPLICATION_ID => 101,
         P_ID_FLEX_CODE => 'GL#',
         P_ID_FLEX_NUM => G_CHART_OF_ACCOUNTS_ID,
         P_TABLE_ALIAS => 'CC',
         P_MODE => 'WHERE',
         P_QUALIFIER =>'ALL',
         P_FUNCTION => 'BETWEEN',
         P_OPERAND1 => G_TAX_ACCOUNT_LOW,
         P_OPERAND2 => G_TAX_ACCOUNT_HIGH );

    L_WHERE_GL_FLEX := ' AND '||L_WHERE_GL_FLEX||' ';

  ELSE
    L_WHERE_GL_FLEX := ' AND 1=1 ';
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                  'L_WHERE_GL_FLEX :'||L_WHERE_GL_FLEX);
  END IF;


-- End of Old Predicate Code
/*
  --  L_WHERE_GL_FLEX
  --  Get the SEGMENT_NUMBER of the Balancing Segment of the
  --  Chart_of_accounts_id associated with the user's set of books.
  --  Get the chart of accounts id

  IF G_BALANCING_SEGMENT_LOW IS NOT NULL AND
    G_BALANCING_SEGMENT_HIGH IS NOT NULL
  THEN
    SELECT CHART_OF_ACCOUNTS_ID
      INTO   L_CHART_OF_ACCOUNTS_ID
      FROM   GL_SETS_OF_BOOKS
      WHERE  SET_OF_BOOKS_ID = FND_PROFILE.VALUE('GL_SET_OF_BKS_ID');

  --      Build the where clause for restricting the data to the
  --      balancing segments specified.
  --      L_WHERE_GL_FLEX'

    L_WHERE_GL_FLEX :=
         FA_RX_FLEX_PKG.FLEX_SQL(
         P_APPLICATION_ID => 101,
         P_ID_FLEX_CODE => 'GL#',
         P_ID_FLEX_NUM => G_CHART_OF_ACCOUNTS_ID,
         P_TABLE_ALIAS => 'CC',
         P_MODE => 'WHERE',
         P_QUALIFIER =>'GL_BALANCING',
         P_FUNCTION => 'BETWEEN',
         P_OPERAND1 => G_BALANCING_SEGMENT_LOW,
         P_OPERAND2 => G_BALANCING_SEGMENT_HIGH );

    L_WHERE_GL_FLEX := ' AND '||L_WHERE_GL_FLEX||' ';


  END IF;

  L_IS_DEFERRED_TAX_USED_STMT :=
      'SELECT count(*) '||
      ' FROM AR_VAT_TAX_ALL_B VAT '||
      ' WHERE VAT.INTERIM_TAX_CCID IS NOT NULL  '||
      ' AND ROWNUM = :1 '
      || L_WHERE_TAX_CLASS
      || L_WHERE_TAX_CODE
      || L_WHERE_TAX_CODE_VAT_TRX_TYPE
      || L_WHERE_TAX_CODE_TYPE
      || L_WHERE_GDF_AR_TAX_CODES_ATT1
      || L_WHERE_REPORTING_CONTEXT_VAT;


  BEGIN
    EXECUTE IMMEDIATE L_IS_DEFERRED_TAX_USED_STMT
            INTO  L_IS_DEFERRED_TAX_USED
            USING 1;
                  --G_TAX_CODE_LOW,
                  --G_TAX_CODE_HIGH,
                  --G_TAX_CODE_VAT_TRX_TYPE_LOW,
                  --G_TAX_CODE_VAT_TRX_TYPE_HIGH,
                  --G_TAX_CODE_TYPE_LOW,
                  --G_TAX_CODE_TYPE_HIGH,
              --    G_GDF_AR_TAX_CODES_ATT1,
               --   G_GDF_AR_TAX_CODES_CATEGORY;

  EXCEPTION
    WHEN OTHERS THEN
      IF PG_DEBUG = 'Y' THEN
       arp_util_tax.debug ('L_IS_DEFERRED_TAX_USED_STMT ' || L_IS_DEFERRED_TAX_USED_STMT);
            arp_util_tax.debug(' Exception ZX_EXTRACT_PKG.L_IS_DEFERRED_TAX_USED_STMT: '
                             ||SQLCODE||' ; '||SQLERRM);
      END IF;
      IF PG_DEBUG = 'Y' THEN
      arp_util_Tax.debug ('Setting L_IS_DEFERRED_TAX_USED to 0 ');
      END IF;
      L_IS_DEFERRED_TAX_USED := 0;
  END;
*/
  --  Building the Column List, Table List and Where Clauses for
  -- Invoices, On account credit and debit memos:
  -- CONDITIONALLY EXECUTE


  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                  'Dynamic SQL Statement Sarts Here:');
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                  'G_INCLUDE_AR_INV_TRX_CLASS : '||G_INCLUDE_AR_INV_TRX_CLASS);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                  'G_REGISTER_TYPE   : '||G_REGISTER_TYPE);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                  'G_SUMMARY_LEVEL   : '||G_SUMMARY_LEVEL);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                  'G_ACCOUNTING_STATUS   : '||G_ACCOUNTING_STATUS);
  END IF;


-- Build SQL for INV, CM, DM

  IF  G_INCLUDE_AR_INV_TRX_CLASS = 'Y' THEN
  --   IF G_REGISTER_TYPE <> 'NON-RECOVERABLE'  THEN
  --    IF (G_REGISTER_TYPE = 'INTERIM' AND L_IS_DEFERRED_TAX_USED = 1)
   --           OR G_REGISTER_TYPE IN ('TAX','ALL')
    --  THEN
    IF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION' THEN
      IF (G_ACCOUNTING_STATUS = 'UNACCOUNTED') OR
         (G_GL_DATE_LOW IS NULL AND G_GL_DATE_HIGH IS NULL) THEN
        IF (g_level_procedure >= g_current_runtime_level ) THEN
              FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                            'SQL-1 For Invoice, Credit Memo, Debit Memo: Header Level');
              FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                            'G_ACCOUNTING_STATUS   : '||G_ACCOUNTING_STATUS);
        END IF;


  L_COLUMN_LIST_AR_INV :=
  'SELECT '|| get_hint_ar_inv ||
  'ZX_DET.LEDGER_ID,
   ZX_DET.TRX_ID    ,
   ZX_DET.DOC_SEQ_ID ,
   ZX_DET.DOC_SEQ_NAME ,
   ZX_DET.RECEIVABLES_TRX_TYPE_ID,
   ZX_DET.LINE_CLASS,
   ZX_DET.EVENT_CLASS_CODE ,
   TO_CHAR(NULL) ,'|| --APPLIED_FROM_ENTITY_CODE
   'TO_NUMBER(NULL)  ,'||--APPLIED_FROM_TRX_ID
   'TO_CHAR(NULL)  ,'||--APPLIED_FROM_EVENT_CLASS_CODE
   'TO_CHAR(NULL)  ,'||  -- ADJUSTED_DOC_ENTITY_CODE --APPLIED_TO_ENTITY_CODE
   'TO_NUMBER(NULL) ,'|| --ADJSUTED_DOC_ID --APPLIED_TO_TRX_ID
   'TO_CHAR(NULL)  ,'||  --ADJUSTED_DOC_EVENT_CLASS_CODE  --APPLIED_TO_EVENT_CLASS_CODE
   'ZX_DET.ADJUSTED_DOC_NUMBER  ,'|| --ADJUSTED_DOC_NUMBER  --APPLIED_TO_TRX_NUMBER
   'ZX_DET.BATCH_SOURCE_ID,
   ZX_LINE.TAX_RATE_ID ,
   DECODE(ZX_ACCOUNTS.INTERIM_TAX_CCID,NULL,''TAX'',''INTERIM''),
   ZX_DET.PRODUCT_ID,
   ZX_DET.PRODUCT_DESCRIPTION,
   TO_CHAR(NULL),'||  --TAXABLE_LINE_SOURCE_TABLE
   'TO_NUMBER(NULL),'|| --TAXABLE_ITEM_SOURCE_ID
   'ZX_LINE.TAX_EXEMPTION_ID,
   ZX_LINE.TAX_EXCEPTION_ID,
   TO_NUMBER(NULL),'||     --TAXABLE_LINE_TOTAL_AMOUNT
   'TO_NUMBER(NULL),'|| --ZX_LINE.TAX_LINE_ID
   'SUM(ZX_LINE.TAX_AMT),
   sum(ZX_LINE.TAX_AMT_FUNCL_CURR)  ,
   TO_NUMBER(NULL),'|| --ZX_LINE.TAX_LINE_NUMBER
   'sum(ZX_LINE.TAXABLE_AMT),
   sum(ZX_LINE.TAXABLE_AMT_FUNCL_CURR) ,
   TO_NUMBER(NULL),'|| --ZX_LINE.TRX_LINE_ID
   'TO_NUMBER(NULL),'|| --ZX_LINE.TRX_LINE_QUANTITY
   'ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
   ZX_LINE.EXEMPT_REASON_CODE   ,
   TO_CHAR(NULL), --exception_reason_code
   ZX_DET.UOM_CODE,
   TO_CHAR(NULL),'||--RECONCILIATION_FLAG
   'ZX_DET.INTERNAL_ORGANIZATION_ID ,'||--ORG_ID
   'TO_NUMBER(NULL),'||--BR_REF_CUSTOMER_TRX_ID
  -- 'TO_CHAR(NULL),  --reverse_date
   'TO_NUMBER(NULL),'||  --AMOUNT_APPLIED
   'TO_NUMBER(NULL),'||  --TAX_APPLIED
   'DECODE(ZX_LINE.TAX_PROVIDER_ID ,NULL, ZX_RATE.PERCENTAGE_RATE,ZX_LINE.TAX_RATE),
   ZX_LINE.TAX_RATE_CODE,
   ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
   ZX_TAX.TAX_TYPE_CODE,
   ZX_RATE.TAX_RATE_NAME,
   ZX_DET.TRX_NUMBER,
   ZX_DET.TRX_DESCRIPTION,
   ZX_DET.DOC_SEQ_VALUE,
   ZX_DET.TRX_DATE,
   TO_DATE(NULL),   --Deposit Date
   ZX_DET.TRX_DUE_DATE ,
   ZX_DET.TRX_SHIPPING_DATE ,
   ZX_DET.TRX_COMMUNICATED_DATE ,
   ZX_DET.TRX_CURRENCY_CODE,
   ZX_DET.CURRENCY_CONVERSION_TYPE,
   ZX_DET.CURRENCY_CONVERSION_DATE,
   ZX_DET.CURRENCY_CONVERSION_RATE,
   ZX_DET.TRX_SIC_CODE,
   ZX_DET.FOB_POINT,
   ZX_DET.TRX_WAYBILL_NUMBER,
   ZX_DET.BATCH_SOURCE_NAME,
   ZX_DET.TRX_TYPE_DESCRIPTION,
   ZX_RATE.DESCRIPTION,'||
   'to_char(NULL),'||  --ZX_DET.TRX_LINE_DESCRIPTION,
   'TO_NUMBER(NULL),'|| --ZX_LINE.TRX_LINE_NUMBER,
   'TO_CHAR(NULL),'|| --ZX_DET.TRX_LINE_TYPE,
   'TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   ZX_DET.APPLICATION_ID,
   ZX_DET.DOC_EVENT_STATUS,
   ZX_DET.APPLICATION_DOC_STATUS,
   ZX_DET.ESTABLISHMENT_ID,
   ''AR'','||           --EXTRACT_SOURCE_LEDGER
   '--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
   --ZX_DET.LEDGER_NAME,
   ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
   ZX_DET.PRECISION,
   TO_NUMBER(NULL),'|| --RECEIPT_CLASS_ID
   'ZX_DET.APPLIED_TO_APPLICATION_ID,
   ZX_DET.APPLIED_TO_TRX_LINE_ID,
   ZX_DET.APPLIED_TO_ENTITY_CODE,
   ZX_DET.APPLIED_TO_TRX_ID,
   ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
   ZX_DET.APPLIED_TO_TRX_NUMBER,
   ZX_DET.RELATED_DOC_APPLICATION_ID,
   ZX_DET.RELATED_DOC_DATE,
   ZX_DET.RELATED_DOC_ENTITY_CODE,
   ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
   ZX_DET.RELATED_DOC_NUMBER,
   ZX_DET.RELATED_DOC_TRX_ID,
   ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
   ZX_DET.ADJUSTED_DOC_DATE,
   --ZX_DET.BANKING_TP_TAXPAYER_ID,
   ZX_DET.REF_DOC_APPLICATION_ID,
   ZX_DET.REF_DOC_ENTITY_CODE,
   ZX_DET.REF_DOC_EVENT_CLASS_CODE,
   TO_NUMBER(NULL),'||   --ZX_DET.REF_DOC_LINE_ID,
   'TO_NUMBER(NULL),'||   --ZX_DET.REF_DOC_LINE_QUANTITY,
   'ZX_DET.REF_DOC_TRX_ID,
   ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
   ZX_DET.DEFAULT_TAXATION_COUNTRY,
   ZX_DET.DOCUMENT_SUB_TYPE,
   sum(ZX_DET.ASSESSABLE_VALUE),
   ZX_DET.TRX_BUSINESS_CATEGORY,
   ZX_DET.LINE_INTENDED_USE,
   ZX_DET.PRODUCT_CATEGORY,
   ZX_DET.PRODUCT_FISC_CLASSIFICATION,
   ZX_DET.SUPPLIER_EXCHANGE_RATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
   ZX_DET.USER_DEFINED_FISC_CLASS,
   ZX_LINE.EXCEPTION_RATE,
   ZX_LINE.EXEMPT_RATE_MODIFIER,
   sum(ZX_LINE.ORIG_TAX_AMT),
   sum(ZX_LINE.ORIG_TAX_AMT_TAX_CURR) ,
   sum(ZX_LINE.ORIG_TAXABLE_AMT),
   sum(ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR),
   TO_CHAR(NULL),'|| -- RECOVERY_RATE_CODE,
   'sum(ZX_LINE.TAX_AMT_TAX_CURR) ,
   ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
   ZX_LINE.TAX_CURRENCY_CODE,
   ZX_LINE.TAX_DATE,
   ZX_LINE.TAX_DETERMINE_DATE,
   ZX_DET.TAX_INVOICE_DATE,
   ZX_DET.TAX_INVOICE_NUMBER,
   ZX_LINE.TAX_JURISDICTION_CODE,
   ZX_LINE.TAX_REGIME_CODE,
   ZX_LINE.TAX_STATUS_CODE,
   ZX_LINE.TAX_STATUS_ID,
   ZX_LINE.TAX,
   ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
   ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
   ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_ID,
   ZX_LINE.HQ_ESTB_REG_NUMBER ,
   zx_line.tax_registration_number,
   ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
   ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
   ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
   ZX_DET.PORT_OF_ENTRY_CODE,
   ZX_LINE.REGISTRATION_PARTY_TYPE,
   ZX_LINE.HISTORICAL_FLAG,
   ZX_LINE.MRC_TAX_LINE_FLAG,
   To_CHAR(NULL) POSTED_FLAG,
   ZX_LINE.REPORTING_ONLY_FLAG,
   ZX_LINE.TAX_AMT_INCLUDED_FLAG,
   ZX_LINE.TAX_ONLY_LINE_FLAG,
   ZX_DET.EVENT_CLASS_MAPPING_ID,
   ZX_DET.TRX_LEVEL_TYPE,
   ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
   ZX_DET.POA_LOCATION_ID,
   ZX_DET.POO_LOCATION_ID,
   ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
   sum(ZX_DET.LINE_AMT),
   ZX_LINE.TAX_PROVIDER_ID,
   TO_DATE(NULL),
   TO_CHAR(NULL),
   TO_NUMBER(NULL),
   TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   ZX_DET.TRX_ID ,
   ZX_DET.ENTITY_CODE,
   TO_DATE(NULL),
   ZX_DET.TRX_LINE_GL_DATE,
   to_number(NULL), --ZX_DET.UNIT_PRICE,
   TO_NUMBER(NULL),
   ZX_LINE.OFFSET_TAX_RATE_CODE,
   ZX_LINE.OFFSET_FLAG';

  L_TABLE_LIST_AR_INV :=  ' FROM '||get_std_table_list_ar_inv;

  L_WHERE_CLAUSE_AR_INV := ' WHERE '
   || get_static_where_clause_ar_inv
   || L_WHERE_REPORTING_CONTEXT_TRXH
   || L_WHERE_LEDGER_ID
   || L_WHERE_LEGAL_ENTITY_ID
   || L_WHERE_REGISTER_TYPE_AR_TRX
   || L_WHERE_TRX_CLASS_INV_CM_DM
   || L_WHERE_PARTY_NAME
   || L_WHERE_BATCH_NAME
   || L_WHERE_TRX_NUMBER_INV
   || L_WHERE_GL_TRX_DATE_INV
   || L_WHERE_TRX_DATE_INV
   || L_WHERE_GL_DATE_INV
   || L_WHERE_DOCUMENT_SUB_TYPE
   || L_WHERE_TRX_BUSINESS_CATEGORY
   || L_WHERE_TAX_INVOICE_DATE
   || L_WHERE_TAX_JURISDICTION_CODE
   || L_WHERE_FIRST_PTY_TAX_REG_NUM
   || L_WHERE_TAX_REGIME_CODE
   || L_WHERE_TAX
   || L_WHERE_TAX_STATUS_CODE
   || L_WHERE_TAX_RATE_CODE
   || L_WHERE_TAX_TYPE_CODE
   || L_WHERE_CURRENCY_CODE
   || L_WHERE_EXEMPTION_STATUS
   || L_WHERE_TAX_CODE_VAT_TRX_TYPE
   || L_WHERE_TAX_LTE
   || L_WHERE_ACCOUNTING_STATUS_TRX
   || L_WHERE_REPORTED_STATUS;

  L_GROUP_BY_AR_INV :=
    ' GROUP BY '||
    'ZX_DET.LEDGER_ID,
     ZX_DET.TRX_ID    ,
     ZX_DET.DOC_SEQ_ID ,
     ZX_DET.DOC_SEQ_NAME ,
     ZX_DET.RECEIVABLES_TRX_TYPE_ID,
     ZX_DET.LINE_CLASS,
     ZX_DET.EVENT_CLASS_CODE ,
     ZX_DET.ADJUSTED_DOC_NUMBER ,
     ZX_DET.BATCH_SOURCE_ID,
     ZX_LINE.TAX_RATE_ID ,
     DECODE(ZX_ACCOUNTS.INTERIM_TAX_CCID,NULL,''TAX'',''INTERIM''),
    -- ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
     --ZX_LINE.TAX_RATE_REGISTER_TYPE_CODE,
     ZX_DET.PRODUCT_ID,
     ZX_DET.PRODUCT_DESCRIPTION,
     ZX_LINE.TAX_EXEMPTION_ID,
     ZX_LINE.TAX_EXCEPTION_ID,
     --ZX_LINE.TAX_AMT,
     --ZX_LINE.TAX_AMT_FUNCL_CURR  ,
     --ZX_LINE.TAXABLE_AMT,
     --ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
     ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
     ZX_LINE.EXEMPT_REASON_CODE   ,
     TO_CHAR(NULL), --exception_reason_code
     ZX_DET.UOM_CODE,
     ZX_DET.INTERNAL_ORGANIZATION_ID ,--ORG_ID
     TO_CHAR(NULL),  --reverse_date
     DECODE(ZX_LINE.TAX_PROVIDER_ID ,NULL, ZX_RATE.PERCENTAGE_RATE,ZX_LINE.TAX_RATE),
     ZX_LINE.TAX_RATE_CODE,
     ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
   --ZX_RATE.RATE_TYPE_CODE,
     ZX_TAX.TAX_TYPE_CODE,
     ZX_RATE.TAX_RATE_NAME,
     ZX_DET.TRX_NUMBER,
     ZX_DET.TRX_DESCRIPTION,
     ZX_DET.DOC_SEQ_VALUE,
     ZX_DET.TRX_DATE,
     ZX_DET.TRX_DUE_DATE ,
     ZX_DET.TRX_SHIPPING_DATE ,
     ZX_DET.TRX_COMMUNICATED_DATE ,
     ZX_DET.TRX_CURRENCY_CODE,
     ZX_DET.CURRENCY_CONVERSION_TYPE,
     ZX_DET.CURRENCY_CONVERSION_DATE,
     ZX_DET.CURRENCY_CONVERSION_RATE,
     ZX_DET.TRX_SIC_CODE,
     ZX_DET.FOB_POINT,
     ZX_DET.TRX_WAYBILL_NUMBER,
     ZX_DET.BATCH_SOURCE_NAME,
     ZX_DET.TRX_TYPE_DESCRIPTION,
     ZX_RATE.DESCRIPTION,
     --ZX_DET.TRX_LINE_DESCRIPTION,
     ZX_DET.APPLICATION_ID,
     ZX_DET.DOC_EVENT_STATUS,
     ZX_DET.APPLICATION_DOC_STATUS,
     ZX_DET.ESTABLISHMENT_ID,
     --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
     --ZX_DET.LEDGER_NAME,
     ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
     ZX_DET.PRECISION,
     ZX_DET.APPLIED_TO_APPLICATION_ID,
     ZX_DET.APPLIED_TO_TRX_LINE_ID,
     ZX_DET.APPLIED_TO_ENTITY_CODE,
     ZX_DET.APPLIED_TO_TRX_ID,
     ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
     ZX_DET.APPLIED_TO_TRX_NUMBER,
     ZX_DET.RELATED_DOC_APPLICATION_ID,
     ZX_DET.RELATED_DOC_DATE,
     ZX_DET.RELATED_DOC_ENTITY_CODE,
     ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
     ZX_DET.RELATED_DOC_NUMBER,
     ZX_DET.RELATED_DOC_TRX_ID,
     ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
     ZX_DET.ADJUSTED_DOC_DATE,
     --ZX_DET.BANKING_TP_TAXPAYER_ID,
     ZX_DET.REF_DOC_APPLICATION_ID,
     ZX_DET.REF_DOC_ENTITY_CODE,
     ZX_DET.REF_DOC_EVENT_CLASS_CODE,
     ZX_DET.REF_DOC_TRX_ID,
     ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
     ZX_DET.DEFAULT_TAXATION_COUNTRY,
     ZX_DET.DOCUMENT_SUB_TYPE,
     --ZX_DET.ASSESSABLE_VALUE,
     ZX_DET.TRX_BUSINESS_CATEGORY,
     ZX_DET.LINE_INTENDED_USE,
     ZX_DET.PRODUCT_CATEGORY,
     ZX_DET.PRODUCT_FISC_CLASSIFICATION,
     ZX_DET.SUPPLIER_EXCHANGE_RATE,
     ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
     ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
     ZX_DET.USER_DEFINED_FISC_CLASS,
     ZX_LINE.EXCEPTION_RATE,
     ZX_LINE.EXEMPT_RATE_MODIFIER,
     --ZX_LINE.ORIG_TAX_AMT,
     --ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
     --ZX_LINE.ORIG_TAXABLE_AMT,
     --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
     --ZX_LINE.TAX_AMT_TAX_CURR ,
     ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
     ZX_LINE.TAX_CURRENCY_CODE,
     ZX_LINE.TAX_DATE,
     ZX_LINE.TAX_DETERMINE_DATE,
     ZX_DET.TAX_INVOICE_DATE,
     ZX_DET.TAX_INVOICE_NUMBER,
     ZX_LINE.TAX_JURISDICTION_CODE,
     ZX_LINE.TAX_REGIME_CODE,
     ZX_LINE.TAX_STATUS_CODE,
     ZX_LINE.TAX_STATUS_ID,
     ZX_LINE.TAX,
     ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
     ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
     ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
     ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
     ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
     ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
     ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
     ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
     ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
     ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
     ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
     ZX_DET.BILL_THIRD_PTY_ACCT_ID,
     ZX_LINE.HQ_ESTB_REG_NUMBER ,
     zx_line.tax_registration_number,
     ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
     ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
     ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
     ZX_DET.PORT_OF_ENTRY_CODE,
     ZX_LINE.REGISTRATION_PARTY_TYPE,
     ZX_LINE.HISTORICAL_FLAG,
     ZX_LINE.MRC_TAX_LINE_FLAG,
     To_CHAR(NULL),
     ZX_LINE.REPORTING_ONLY_FLAG,
     ZX_LINE.TAX_AMT_INCLUDED_FLAG,
     ZX_LINE.TAX_ONLY_LINE_FLAG,
     ZX_DET.EVENT_CLASS_MAPPING_ID,
     ZX_DET.TRX_LEVEL_TYPE,
     ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
     ZX_DET.POA_LOCATION_ID,
     ZX_DET.POO_LOCATION_ID,
     ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
     --ZX_DET.LINE_AMT,
     ZX_LINE.TAX_PROVIDER_ID ,
     ZX_DET.ENTITY_CODE,
     ZX_DET.TRX_LINE_GL_DATE,
     --ZX_DET.UNIT_PRICE,
     ZX_LINE.OFFSET_TAX_RATE_CODE,
     ZX_LINE.OFFSET_FLAG';

        L_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV || L_GROUP_BY_AR_INV;
      ELSIF (G_ACCOUNTING_STATUS = 'ACCOUNTED' OR
          (NVL(G_ACCOUNTING_STATUS,'BOTH') = 'BOTH' AND NVL(G_INCLUDE_ACCOUNTING_SEGMENTS,'N')='Y'))
        OR  (G_GL_DATE_LOW IS NOT NULL OR  G_GL_DATE_HIGH IS NOT NULL) THEN

        IF (g_level_procedure >= g_current_runtime_level ) THEN
          FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-1-1 For Invoice, Credit Memo, Debit Memo: Header Level - Accounted');
        END IF;


  L_COLUMN_LIST_AR_INV :=
  'SELECT '|| get_hint_ar_inv ||
  'ZX_DET.LEDGER_ID,
   ZX_DET.TRX_ID    ,
   ZX_DET.DOC_SEQ_ID ,
   ZX_DET.DOC_SEQ_NAME ,
   ZX_DET.RECEIVABLES_TRX_TYPE_ID,
   ZX_DET.LINE_CLASS,
   ZX_DET.EVENT_CLASS_CODE ,
   TO_CHAR(NULL) ,'|| --APPLIED_FROM_ENTITY_CODE
   'TO_NUMBER(NULL)  ,'||--APPLIED_FROM_TRX_ID
   'TO_CHAR(NULL)  ,'||--APPLIED_FROM_EVENT_CLASS_CODE
   'TO_CHAR(NULL)  ,'||  -- ADJUSTED_DOC_ENTITY_CODE --APPLIED_TO_ENTITY_CODE
   'TO_NUMBER(NULL) ,'|| --ADJSUTED_DOC_ID --APPLIED_TO_TRX_ID
   'TO_CHAR(NULL)  ,'||  --ADJUSTED_DOC_EVENT_CLASS_CODE  --APPLIED_TO_EVENT_CLASS_CODE
   'ZX_DET.ADJUSTED_DOC_NUMBER  ,'|| --ADJUSTED_DOC_NUMBER  --APPLIED_TO_TRX_NUMBER
   'ZX_DET.BATCH_SOURCE_ID,
   ZX_LINE.TAX_RATE_ID ,
   DECODE(ZX_ACCOUNTS.INTERIM_TAX_CCID,NULL,''TAX'',''INTERIM''),
   ZX_DET.PRODUCT_ID,
   ZX_DET.PRODUCT_DESCRIPTION,
   TO_CHAR(NULL),'||  --TAXABLE_LINE_SOURCE_TABLE
   'TO_NUMBER(NULL),'|| --TAXABLE_ITEM_SOURCE_ID
   'ZX_LINE.TAX_EXEMPTION_ID,
   ZX_LINE.TAX_EXCEPTION_ID,
   TO_NUMBER(NULL),'||     --TAXABLE_LINE_TOTAL_AMOUNT
   'TO_NUMBER(NULL),'|| --ZX_LINE.TAX_LINE_ID
   'SUM(DIST.AMOUNT),
   sum(DIST.ACCTD_AMOUNT)  ,
   TO_NUMBER(NULL),'|| --ZX_LINE.TAX_LINE_NUMBER
   'SUM(DECODE(ZX_LINE.MANUALLY_ENTERED_FLAG,
         ''Y'',DECODE(ZX_LINE.TAX_AMT_INCLUDED_FLAG,''N'', ZX_LINE.LINE_AMT,
                                                           ZX_LINE.TAXABLE_AMT)
              ,ZX_LINE.TAXABLE_AMT)*(DIST.PERCENT)/100),
   SUM(ZX_LINE.TAXABLE_AMT_FUNCL_CURR *(DIST.PERCENT)/100) ,
   TO_NUMBER(NULL),'|| --ZX_LINE.TRX_LINE_ID
   'TO_NUMBER(NULL),'|| --ZX_LINE.TRX_LINE_QUANTITY
   'ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
   ZX_LINE.EXEMPT_REASON_CODE   ,
   TO_CHAR(NULL), --exception_reason_code
   ZX_DET.UOM_CODE,
   TO_CHAR(NULL),'||--RECONCILIATION_FLAG
   'ZX_DET.INTERNAL_ORGANIZATION_ID ,'||--ORG_ID
   'TO_NUMBER(NULL),'||--BR_REF_CUSTOMER_TRX_ID
  -- 'TO_CHAR(NULL),  --reverse_date
   'TO_NUMBER(NULL),'||  --AMOUNT_APPLIED
   'TO_NUMBER(NULL),'||  --TAX_APPLIED
   'DECODE(ZX_LINE.TAX_PROVIDER_ID ,NULL, ZX_RATE.PERCENTAGE_RATE,ZX_LINE.TAX_RATE),
   ZX_LINE.TAX_RATE_CODE,
   ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
   ZX_TAX.TAX_TYPE_CODE,
   ZX_RATE.TAX_RATE_NAME,
   ZX_DET.TRX_NUMBER,
   ZX_DET.TRX_DESCRIPTION,
   ZX_DET.DOC_SEQ_VALUE,
   ZX_DET.TRX_DATE,
   TO_DATE(NULL),   --Deposit Date
   ZX_DET.TRX_DUE_DATE ,
   ZX_DET.TRX_SHIPPING_DATE ,
   ZX_DET.TRX_COMMUNICATED_DATE ,
   ZX_DET.TRX_CURRENCY_CODE,
   ZX_DET.CURRENCY_CONVERSION_TYPE,
   ZX_DET.CURRENCY_CONVERSION_DATE,
   ZX_DET.CURRENCY_CONVERSION_RATE,
   ZX_DET.TRX_SIC_CODE,
   ZX_DET.FOB_POINT,
   ZX_DET.TRX_WAYBILL_NUMBER,
   ZX_DET.BATCH_SOURCE_NAME,
   ZX_DET.TRX_TYPE_DESCRIPTION,
   ZX_RATE.DESCRIPTION,
   TO_CHAR(NULL),'||   --ZX_DET.TRX_LINE_DESCRIPTION,
   'TO_NUMBER(NULL),'|| --ZX_LINE.TRX_LINE_NUMBER,
   'TO_CHAR(NULL),'|| --ZX_DET.TRX_LINE_TYPE,
   'TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   ZX_DET.APPLICATION_ID,
   ZX_DET.DOC_EVENT_STATUS,
   ZX_DET.APPLICATION_DOC_STATUS,
   ZX_DET.ESTABLISHMENT_ID,
   ''AR'','||           --EXTRACT_SOURCE_LEDGER
   '--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
   --ZX_DET.LEDGER_NAME,
   ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
   ZX_DET.PRECISION,
   TO_NUMBER(NULL),'|| --RECEIPT_CLASS_ID
   'ZX_DET.APPLIED_TO_APPLICATION_ID,
   ZX_DET.APPLIED_TO_TRX_LINE_ID,
   ZX_DET.APPLIED_TO_ENTITY_CODE,
   ZX_DET.APPLIED_TO_TRX_ID,
   ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
   ZX_DET.APPLIED_TO_TRX_NUMBER,
   ZX_DET.RELATED_DOC_APPLICATION_ID,
   ZX_DET.RELATED_DOC_DATE,
   ZX_DET.RELATED_DOC_ENTITY_CODE,
   ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
   ZX_DET.RELATED_DOC_NUMBER,
   ZX_DET.RELATED_DOC_TRX_ID,
   ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
   ZX_DET.ADJUSTED_DOC_DATE,
   --ZX_DET.BANKING_TP_TAXPAYER_ID,
   ZX_DET.REF_DOC_APPLICATION_ID,
   ZX_DET.REF_DOC_ENTITY_CODE,
   ZX_DET.REF_DOC_EVENT_CLASS_CODE,
   TO_NUMBER(NULL),'||   --ZX_DET.REF_DOC_LINE_ID,
   'TO_NUMBER(NULL),'||   --ZX_DET.REF_DOC_LINE_QUANTITY,
   'ZX_DET.REF_DOC_TRX_ID,
   ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
   ZX_DET.DEFAULT_TAXATION_COUNTRY,
   ZX_DET.DOCUMENT_SUB_TYPE,
   SUM(ZX_DET.ASSESSABLE_VALUE),
   ZX_DET.TRX_BUSINESS_CATEGORY,
   ZX_DET.LINE_INTENDED_USE,
   ZX_DET.PRODUCT_CATEGORY,
   ZX_DET.PRODUCT_FISC_CLASSIFICATION,
   ZX_DET.SUPPLIER_EXCHANGE_RATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
   ZX_DET.USER_DEFINED_FISC_CLASS,
   ZX_LINE.EXCEPTION_RATE,
   ZX_LINE.EXEMPT_RATE_MODIFIER,
   SUM(ZX_LINE.ORIG_TAX_AMT),
   SUM(ZX_LINE.ORIG_TAX_AMT_TAX_CURR) ,
   SUM(ZX_LINE.ORIG_TAXABLE_AMT),
   SUM(ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR),
   TO_CHAR(NULL),'|| -- RECOVERY_RATE_CODE,
   'SUM(ZX_LINE.TAX_AMT_TAX_CURR) ,
   ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
   ZX_LINE.TAX_CURRENCY_CODE,
   ZX_LINE.TAX_DATE,
   ZX_LINE.TAX_DETERMINE_DATE,
   ZX_DET.TAX_INVOICE_DATE,
   ZX_DET.TAX_INVOICE_NUMBER,
   ZX_LINE.TAX_JURISDICTION_CODE,
   ZX_LINE.TAX_REGIME_CODE,
   ZX_LINE.TAX_STATUS_CODE,
   ZX_LINE.TAX_STATUS_ID,
   ZX_LINE.TAX,
   ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
   ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
   ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_ID,
   ZX_LINE.HQ_ESTB_REG_NUMBER ,
   zx_line.tax_registration_number,
   ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
   ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
   ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
   ZX_DET.PORT_OF_ENTRY_CODE,
   ZX_LINE.REGISTRATION_PARTY_TYPE,
   ZX_LINE.HISTORICAL_FLAG,
   ZX_LINE.MRC_TAX_LINE_FLAG,
   DECODE(DIST.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,
   ZX_LINE.REPORTING_ONLY_FLAG,
   ZX_LINE.TAX_AMT_INCLUDED_FLAG,
   ZX_LINE.TAX_ONLY_LINE_FLAG,
   ZX_DET.EVENT_CLASS_MAPPING_ID,
   ZX_DET.TRX_LEVEL_TYPE,
   ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
   ZX_DET.POA_LOCATION_ID,
   ZX_DET.POO_LOCATION_ID,
   ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
   SUM(ZX_DET.LINE_AMT),
   ZX_LINE.TAX_PROVIDER_ID,
   TO_DATE(NULL),
   TO_CHAR(NULL),
   TO_NUMBER(NULL),
   TO_NUMBER(NULL),
   TO_CHAR(NULL),
   DIST.ACCOUNT_CLASS,
   TO_CHAR(NULL),
   ZX_DET.TRX_ID ,
   ZX_DET.ENTITY_CODE,
   DIST.GL_POSTED_DATE,
   DIST.GL_DATE,
   to_number(NULL),     --ZX_DET.UNIT_PRICE,
   TO_NUMBER(NULL),
   ZX_LINE.OFFSET_TAX_RATE_CODE,
   ZX_LINE.OFFSET_FLAG';

  L_TABLE_LIST_AR_INV :=  ' FROM '||get_std_table_list_ar_inv;

  L_WHERE_CLAUSE_AR_INV := ' WHERE '
   || get_static_where_clause_ar_inv
   || L_WHERE_REPORTING_CONTEXT_TRXH
   || L_WHERE_LEDGER_ID
   || L_WHERE_LEGAL_ENTITY_ID
   || L_WHERE_REGISTER_TYPE_AR_TRX
   || L_WHERE_TRX_CLASS_INV_CM_DM
   || L_WHERE_PARTY_NAME
   || L_WHERE_BATCH_NAME
   || L_WHERE_TRX_NUMBER_INV
   || L_WHERE_GL_TRX_DATE_INV
   || L_WHERE_TRX_DATE_INV
   || L_WHERE_GL_DATE_INV
   || L_WHERE_DOCUMENT_SUB_TYPE
   || L_WHERE_TRX_BUSINESS_CATEGORY
   || L_WHERE_TAX_INVOICE_DATE
   || L_WHERE_TAX_JURISDICTION_CODE
   || L_WHERE_FIRST_PTY_TAX_REG_NUM
   || L_WHERE_TAX_REGIME_CODE
   || L_WHERE_TAX
   || L_WHERE_TAX_STATUS_CODE
   || L_WHERE_TAX_RATE_CODE
   || L_WHERE_TAX_TYPE_CODE
   || L_WHERE_CURRENCY_CODE
   || L_WHERE_EXEMPTION_STATUS
   || L_WHERE_TAX_CODE_VAT_TRX_TYPE
   || L_WHERE_TAX_LTE
   || L_WHERE_ACCOUNTING_STATUS_TRX
   || L_WHERE_REPORTED_STATUS;

  L_GROUP_BY_AR_INV :=
  ' GROUP BY '||
  'ZX_DET.LEDGER_ID,
   ZX_DET.TRX_ID    ,
   ZX_DET.DOC_SEQ_ID ,
   ZX_DET.DOC_SEQ_NAME ,
   ZX_DET.RECEIVABLES_TRX_TYPE_ID,
   ZX_DET.LINE_CLASS,
   ZX_DET.EVENT_CLASS_CODE ,
   ZX_DET.ADJUSTED_DOC_NUMBER ,
   ZX_DET.BATCH_SOURCE_ID,
   ZX_LINE.TAX_RATE_ID ,
   DECODE(ZX_ACCOUNTS.INTERIM_TAX_CCID,NULL,''TAX'',''INTERIM''),
  --ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
   --ZX_LINE.TAX_RATE_REGISTER_TYPE_CODE,
   ZX_DET.PRODUCT_ID,
   ZX_DET.PRODUCT_DESCRIPTION,
   ZX_LINE.TAX_EXEMPTION_ID,
   ZX_LINE.TAX_EXCEPTION_ID,
   --ZX_LINE.TAX_AMT,
  --ZX_LINE.TAX_AMT_FUNCL_CURR  ,
  --ZX_LINE.TAXABLE_AMT,
  --ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
   ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
   ZX_LINE.EXEMPT_REASON_CODE   ,
   TO_CHAR(NULL), --exception_reason_code
   ZX_DET.UOM_CODE,
   ZX_DET.INTERNAL_ORGANIZATION_ID ,--ORG_ID
   TO_CHAR(NULL),  --reverse_date
   DECODE(ZX_LINE.TAX_PROVIDER_ID ,NULL, ZX_RATE.PERCENTAGE_RATE,ZX_LINE.TAX_RATE),
   ZX_LINE.TAX_RATE_CODE,
   ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
 --ZX_RATE.RATE_TYPE_CODE,
   ZX_TAX.TAX_TYPE_CODE,
   ZX_RATE.TAX_RATE_NAME,
   ZX_DET.TRX_NUMBER,
   ZX_DET.TRX_DESCRIPTION,
   ZX_DET.DOC_SEQ_VALUE,
   ZX_DET.TRX_DATE,
   ZX_DET.TRX_DUE_DATE ,
   ZX_DET.TRX_SHIPPING_DATE ,
   ZX_DET.TRX_COMMUNICATED_DATE ,
   ZX_DET.TRX_CURRENCY_CODE,
   ZX_DET.CURRENCY_CONVERSION_TYPE,
   ZX_DET.CURRENCY_CONVERSION_DATE,
   ZX_DET.CURRENCY_CONVERSION_RATE,
   ZX_DET.TRX_SIC_CODE,
   ZX_DET.FOB_POINT,
   ZX_DET.TRX_WAYBILL_NUMBER,
   ZX_DET.BATCH_SOURCE_NAME,
   ZX_DET.TRX_TYPE_DESCRIPTION,
   ZX_RATE.DESCRIPTION,
    --ZX_DET.TRX_LINE_DESCRIPTION,
   ZX_DET.APPLICATION_ID,
   ZX_DET.DOC_EVENT_STATUS,
   ZX_DET.APPLICATION_DOC_STATUS,
   ZX_DET.ESTABLISHMENT_ID,
   --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
   --ZX_DET.LEDGER_NAME,
   ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
   ZX_DET.PRECISION,
   ZX_DET.APPLIED_TO_APPLICATION_ID,
   ZX_DET.APPLIED_TO_TRX_LINE_ID,
   ZX_DET.APPLIED_TO_ENTITY_CODE,
   ZX_DET.APPLIED_TO_TRX_ID,
   ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
   ZX_DET.APPLIED_TO_TRX_NUMBER,
   ZX_DET.RELATED_DOC_APPLICATION_ID,
   ZX_DET.RELATED_DOC_DATE,
   ZX_DET.RELATED_DOC_ENTITY_CODE,
   ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
   ZX_DET.RELATED_DOC_NUMBER,
   ZX_DET.RELATED_DOC_TRX_ID,
   ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
   ZX_DET.ADJUSTED_DOC_DATE,
   --ZX_DET.BANKING_TP_TAXPAYER_ID,
   ZX_DET.REF_DOC_APPLICATION_ID,
   ZX_DET.REF_DOC_ENTITY_CODE,
   ZX_DET.REF_DOC_EVENT_CLASS_CODE,
   ZX_DET.REF_DOC_TRX_ID,
   ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
   ZX_DET.DEFAULT_TAXATION_COUNTRY,
   ZX_DET.DOCUMENT_SUB_TYPE,
   --ZX_DET.ASSESSABLE_VALUE,
   ZX_DET.TRX_BUSINESS_CATEGORY,
   ZX_DET.LINE_INTENDED_USE,
   ZX_DET.PRODUCT_CATEGORY,
   ZX_DET.PRODUCT_FISC_CLASSIFICATION,
   ZX_DET.SUPPLIER_EXCHANGE_RATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
   ZX_DET.USER_DEFINED_FISC_CLASS,
   ZX_LINE.EXCEPTION_RATE,
   ZX_LINE.EXEMPT_RATE_MODIFIER,
   --ZX_LINE.ORIG_TAX_AMT,
   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
   --ZX_LINE.ORIG_TAXABLE_AMT,
   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
   --ZX_LINE.TAX_AMT_TAX_CURR ,
   ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
   ZX_LINE.TAX_CURRENCY_CODE,
   ZX_LINE.TAX_DATE,
   ZX_LINE.TAX_DETERMINE_DATE,
   ZX_DET.TAX_INVOICE_DATE,
   ZX_DET.TAX_INVOICE_NUMBER,
   ZX_LINE.TAX_JURISDICTION_CODE,
   ZX_LINE.TAX_REGIME_CODE,
   ZX_LINE.TAX_STATUS_CODE,
   ZX_LINE.TAX_STATUS_ID,
   ZX_LINE.TAX,
   ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
   ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
   ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_ID,
   ZX_LINE.HQ_ESTB_REG_NUMBER ,
   zx_line.tax_registration_number,
   ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
   ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
   ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
   ZX_DET.PORT_OF_ENTRY_CODE,
   ZX_LINE.REGISTRATION_PARTY_TYPE,
   ZX_LINE.HISTORICAL_FLAG,
   ZX_LINE.MRC_TAX_LINE_FLAG,
   DECODE(DIST.GL_POSTED_DATE, NULL, ''N'', ''Y''),
   ZX_LINE.REPORTING_ONLY_FLAG,
   ZX_LINE.TAX_AMT_INCLUDED_FLAG,
   ZX_LINE.TAX_ONLY_LINE_FLAG,
   ZX_DET.EVENT_CLASS_MAPPING_ID,
   ZX_DET.TRX_LEVEL_TYPE,
   ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
   ZX_DET.POA_LOCATION_ID,
   ZX_DET.POO_LOCATION_ID,
   ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
   --ZX_DET.LINE_AMT,
   ZX_LINE.TAX_PROVIDER_ID ,
   ZX_DET.ENTITY_CODE,
   DIST.GL_POSTED_DATE,
   DIST.ACCOUNT_CLASS,
   DIST.GL_DATE,
   --ZX_DET.UNIT_PRICE,
   ZX_LINE.OFFSET_TAX_RATE_CODE,
   ZX_LINE.OFFSET_FLAG';

        L_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV || L_GROUP_BY_AR_INV;

      END IF;  -- G_ACCOUNTING_STATUS check --

    ELSIF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE' THEN
        -- apai commented : needs to be removed AND NVL(G_TRX_CLASS,'INV') IN ('INV','CM','DM')  THEN

      IF (G_ACCOUNTING_STATUS = 'UNACCOUNTED')
        OR  (G_GL_DATE_LOW IS NULL AND
             G_GL_DATE_HIGH IS NULL AND
             G_ACCOUNTING_STATUS <> 'ACCOUNTED') THEN
        --  (NVL(G_ACCOUNTING_STATUS,'BOTH') = 'BOTH' AND NVL(G_INCLUDE_ACCOUNTING_SEGMENTS,'N')='N'))

        IF (g_level_procedure >= g_current_runtime_level ) THEN
           FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-2 For Invoice, Credit Memo, Debit Memo: Line Level');
           FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'G_ACCOUNTING_STATUS   : '||G_ACCOUNTING_STATUS);
        END IF;


  L_COLUMN_LIST_AR_INV :=
  'SELECT '|| get_hint_ar_inv ||
  'ZX_DET.LEDGER_ID,
   ZX_DET.TRX_ID    ,
   ZX_DET.DOC_SEQ_ID ,
   ZX_DET.DOC_SEQ_NAME ,
   ZX_DET.RECEIVABLES_TRX_TYPE_ID,
   ZX_DET.LINE_CLASS,
   ZX_DET.EVENT_CLASS_CODE ,
   TO_CHAR(NULL) ,'|| --APPLIED_FROM_ENTITY_CODE
  'TO_NUMBER(NULL)  ,'||--APPLIED_FROM_TRX_ID
  'TO_CHAR(NULL)  ,'||--APPLIED_FROM_EVENT_CLASS_CODE
  'TO_CHAR(NULL)  ,'||  -- ADJUSTED_DOC_ENTITY_CODE --APPLIED_TO_ENTITY_CODE
  'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| --ADJSUTED_DOC_ID --APPLIED_TO_TRX_ID
  --'TO_CHAR(NULL)  ,'||  --ADJUSTED_DOC_EVENT_CLASS_CODE  --APPLIED_TO_EVENT_CLASS_CODE
  'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE ,'|| --ADJUSTED_DOC_EVENT_CLASS_CODE Bug 9031051
  'ZX_DET.ADJUSTED_DOC_NUMBER  ,'|| --ADJUSTED_DOC_NUMBER  --APPLIED_TO_TRX_NUMBER
  'ZX_DET.BATCH_SOURCE_ID,
   ZX_LINE.TAX_RATE_ID ,
   DECODE(ZX_ACCOUNTS.INTERIM_TAX_CCID,NULL,''TAX'',''INTERIM''),
   ZX_DET.PRODUCT_ID,
   ZX_DET.PRODUCT_DESCRIPTION,
   TO_CHAR(NULL), --TAXABLE_LINE_SOURCE_TABLE,
   TO_NUMBER(NULL), --TAXABLE_ITEM_SOURCE_ID,
   ZX_LINE.TAX_EXEMPTION_ID ,
   ZX_LINE.TAX_EXCEPTION_ID  ,
   TO_NUMBER(NULL),  --TAXABLE_LINE_TOTAL_AMOUNT  ,
   ZX_LINE.TAX_LINE_ID,
   ZX_LINE.TAX_AMT,
   ZX_LINE.TAX_AMT_FUNCL_CURR  ,
   ZX_LINE.TAX_LINE_NUMBER,
   DECODE(ZX_LINE.MANUALLY_ENTERED_FLAG,
          ''Y'',DECODE(ZX_LINE.TAX_AMT_INCLUDED_FLAG,''N'', ZX_LINE.LINE_AMT,ZX_LINE.TAXABLE_AMT),
          ZX_LINE.TAXABLE_AMT),
   ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
   ZX_LINE.TRX_LINE_ID,
   ZX_LINE.TRX_LINE_QUANTITY  ,
   ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
   ZX_LINE.EXEMPT_REASON_CODE   ,
   TO_CHAR(NULL), --exception_reason_code
   ZX_DET.UOM_CODE,
   TO_CHAR(NULL)  ,'||--RECONCILIATION_FLAG
  'ZX_DET.INTERNAL_ORGANIZATION_ID ,'||--ORG_ID
  'TO_NUMBER(NULL),'||--BR_REF_CUSTOMER_TRX_ID
 -- 'TO_CHAR(NULL),  --reverse_date
  'TO_NUMBER(NULL)   ,'||--AMOUNT_APPLIED
  'TO_NUMBER(NULL),'||  --TAX_APPLIED
  'DECODE(ZX_LINE.TAX_PROVIDER_ID ,NULL, ZX_RATE.PERCENTAGE_RATE,ZX_LINE.TAX_RATE),
   ZX_LINE.TAX_RATE_CODE,
   ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
  --ZX_RATE.RATE_TYPE_CODE,
   ZX_TAX.TAX_TYPE_CODE,
   ZX_RATE.TAX_RATE_NAME,
   ZX_DET.TRX_NUMBER,
   ZX_DET.TRX_DESCRIPTION,
   ZX_DET.DOC_SEQ_VALUE,
   ZX_DET.TRX_DATE,
   TO_DATE(NULL),   --Deposit Date
   ZX_DET.TRX_DUE_DATE ,
   ZX_DET.TRX_SHIPPING_DATE ,
   ZX_DET.TRX_COMMUNICATED_DATE ,
   ZX_DET.TRX_CURRENCY_CODE,
   ZX_DET.CURRENCY_CONVERSION_TYPE,
   ZX_DET.CURRENCY_CONVERSION_DATE,
   ZX_DET.CURRENCY_CONVERSION_RATE,
   ZX_DET.TRX_SIC_CODE,
   ZX_DET.FOB_POINT,
   ZX_DET.TRX_WAYBILL_NUMBER,
   ZX_DET.BATCH_SOURCE_NAME,
   ZX_DET.TRX_TYPE_DESCRIPTION,
   ZX_RATE.DESCRIPTION,
   ZX_DET.TRX_LINE_DESCRIPTION,
   ZX_LINE.TRX_LINE_NUMBER,
   ZX_DET.TRX_LINE_TYPE,
   ZX_LINE.ATTRIBUTE_CATEGORY,
   ZX_LINE.ATTRIBUTE1,
   ZX_LINE.ATTRIBUTE2,
   ZX_LINE.ATTRIBUTE3,
   ZX_LINE.ATTRIBUTE4,
   ZX_LINE.ATTRIBUTE5,
   ZX_LINE.ATTRIBUTE6,
   ZX_LINE.ATTRIBUTE7,
   ZX_LINE.ATTRIBUTE8,
   ZX_LINE.ATTRIBUTE9,
   ZX_LINE.ATTRIBUTE10,
   ZX_LINE.ATTRIBUTE11,
   ZX_LINE.ATTRIBUTE12,
   ZX_LINE.ATTRIBUTE13,
   ZX_LINE.ATTRIBUTE14,
   ZX_LINE.ATTRIBUTE15,
   ZX_DET.APPLICATION_ID,
   ZX_DET.DOC_EVENT_STATUS,
   ZX_DET.APPLICATION_DOC_STATUS,
   ZX_DET.ESTABLISHMENT_ID,
   ''AR'','|| --EXTRACT_SOURCE_LEDGER
  '--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
   --ZX_DET.LEDGER_NAME,
   ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
   ZX_DET.PRECISION,
   TO_NUMBER(NULL),'|| --RECEIPT_CLASS_ID
  'ZX_DET.APPLIED_TO_APPLICATION_ID,
   ZX_DET.APPLIED_TO_TRX_LINE_ID,
   ZX_DET.APPLIED_TO_ENTITY_CODE,
   ZX_DET.APPLIED_TO_TRX_ID,
   ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
   ZX_DET.APPLIED_TO_TRX_NUMBER,
   ZX_DET.RELATED_DOC_APPLICATION_ID,
   ZX_DET.RELATED_DOC_DATE,
   ZX_DET.RELATED_DOC_ENTITY_CODE,
   ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
   ZX_DET.RELATED_DOC_NUMBER,
   ZX_DET.RELATED_DOC_TRX_ID,
   ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
   ZX_DET.ADJUSTED_DOC_DATE,
   --ZX_DET.BANKING_TP_TAXPAYER_ID,
   ZX_DET.REF_DOC_APPLICATION_ID,
   ZX_DET.REF_DOC_ENTITY_CODE,
   ZX_DET.REF_DOC_EVENT_CLASS_CODE,
   ZX_DET.REF_DOC_LINE_ID,
   ZX_DET.REF_DOC_LINE_QUANTITY,
   ZX_DET.REF_DOC_TRX_ID,
   ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
   ZX_DET.DEFAULT_TAXATION_COUNTRY,
   ZX_DET.DOCUMENT_SUB_TYPE,
   ZX_DET.ASSESSABLE_VALUE,
   ZX_DET.TRX_BUSINESS_CATEGORY,
   ZX_DET.LINE_INTENDED_USE,
   ZX_DET.PRODUCT_CATEGORY,
   ZX_DET.PRODUCT_FISC_CLASSIFICATION,
   ZX_DET.SUPPLIER_EXCHANGE_RATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
   ZX_DET.USER_DEFINED_FISC_CLASS,
   ZX_LINE.EXCEPTION_RATE,
   ZX_LINE.EXEMPT_RATE_MODIFIER,
   ZX_LINE.ORIG_TAX_AMT,
   ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
   ZX_LINE.ORIG_TAXABLE_AMT,
   ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
   TO_CHAR(NULL),'|| -- RECOVERY_RATE_CODE,
  'ZX_LINE.TAX_AMT_TAX_CURR ,
   ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
   ZX_LINE.TAX_CURRENCY_CODE,
   ZX_LINE.TAX_DATE,
   ZX_LINE.TAX_DETERMINE_DATE,
   ZX_DET.TAX_INVOICE_DATE,
   ZX_DET.TAX_INVOICE_NUMBER,
   ZX_LINE.TAX_JURISDICTION_CODE,
   ZX_LINE.TAX_REGIME_CODE,
   ZX_LINE.TAX_STATUS_CODE,
   ZX_LINE.TAX_STATUS_ID,
   ZX_LINE.TAX,
   ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
   ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
   ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_ID,
   ZX_LINE.HQ_ESTB_REG_NUMBER ,
   zx_line.tax_registration_number,
   ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
   ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
   ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
   ZX_DET.PORT_OF_ENTRY_CODE,
   ZX_LINE.REGISTRATION_PARTY_TYPE,
   ZX_LINE.HISTORICAL_FLAG,
   ZX_LINE.MRC_TAX_LINE_FLAG,
   TO_CHAR(NULL)POSTED_FLAG,
   ZX_LINE.REPORTING_ONLY_FLAG,
   ZX_LINE.TAX_AMT_INCLUDED_FLAG,
   ZX_LINE.TAX_ONLY_LINE_FLAG,
   ZX_DET.EVENT_CLASS_MAPPING_ID,
   ZX_DET.TRX_LEVEL_TYPE,
   ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
   ZX_DET.POA_LOCATION_ID,
   ZX_DET.POO_LOCATION_ID,
   ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
   ZX_DET.LINE_AMT,
   ZX_LINE.TAX_PROVIDER_ID,
   TO_DATE(NULL),
   TO_CHAR(NULL),
   TO_NUMBER(NULL),
   TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL),
   ZX_DET.ENTITY_CODE,
   TO_DATE(NULL),
   ZX_DET.TRX_LINE_GL_DATE,
   ZX_DET.UNIT_PRICE,
   TO_NUMBER(NULL),
   ZX_LINE.OFFSET_TAX_RATE_CODE,
   ZX_LINE.OFFSET_FLAG';

  L_TABLE_LIST_AR_INV :=  ' FROM '||get_std_table_list_ar_inv;

  L_WHERE_CLAUSE_AR_INV := ' WHERE '
   || get_static_where_clause_ar_inv
   || L_WHERE_REPORTING_CONTEXT_TRXH
   || L_WHERE_LEDGER_ID
   || L_WHERE_LEGAL_ENTITY_ID
   || L_WHERE_REGISTER_TYPE_AR_TRX
   || L_WHERE_TRX_CLASS_INV_CM_DM
   || L_WHERE_PARTY_NAME
   || L_WHERE_BATCH_NAME
   || L_WHERE_TRX_NUMBER_INV
   || L_WHERE_GL_TRX_DATE_INV
   || L_WHERE_TRX_DATE_INV
   || L_WHERE_GL_DATE_INV
   || L_WHERE_DOCUMENT_SUB_TYPE
   || L_WHERE_TRX_BUSINESS_CATEGORY
   || L_WHERE_TAX_INVOICE_DATE
   || L_WHERE_TAX_JURISDICTION_CODE
   || L_WHERE_FIRST_PTY_TAX_REG_NUM
   || L_WHERE_TAX_REGIME_CODE
   || L_WHERE_TAX
   || L_WHERE_TAX_STATUS_CODE
   || L_WHERE_TAX_RATE_CODE
   || L_WHERE_TAX_TYPE_CODE
   || L_WHERE_CURRENCY_CODE
   || L_WHERE_EXEMPTION_STATUS
   || L_WHERE_TAX_CODE_VAT_TRX_TYPE
   || L_WHERE_TAX_LTE
   || L_WHERE_ACCOUNTING_STATUS_TRX
   || L_WHERE_REPORTED_STATUS;

  L_GROUP_BY_AR_INV :=
   ' GROUP BY '||
   'ZX_DET.LEDGER_ID,
    ZX_DET.TRX_ID,
    ZX_DET.DOC_SEQ_ID ,
    ZX_DET.DOC_SEQ_NAME ,
    ZX_DET.RECEIVABLES_TRX_TYPE_ID,
    ZX_DET.LINE_CLASS,
    ZX_DET.EVENT_CLASS_CODE ,
    ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,
    ZX_DET.ADJUSTED_DOC_NUMBER,
    ZX_DET.ADJUSTED_DOC_TRX_ID,
    ZX_DET.BATCH_SOURCE_ID,
    ZX_LINE.TAX_RATE_ID ,
    DECODE(ZX_ACCOUNTS.INTERIM_TAX_CCID,NULL,''TAX'',''INTERIM''),
    ZX_DET.PRODUCT_ID,
    ZX_DET.PRODUCT_DESCRIPTION,
    ZX_LINE.TAX_EXEMPTION_ID ,
    ZX_LINE.TAX_EXCEPTION_ID  ,
    ZX_LINE.TAX_LINE_ID,
    ZX_LINE.TAX_AMT,
    ZX_LINE.TAX_AMT_FUNCL_CURR  ,
    ZX_LINE.TAX_LINE_NUMBER,
    DECODE(ZX_LINE.MANUALLY_ENTERED_FLAG,
           ''Y'',DECODE(ZX_LINE.TAX_AMT_INCLUDED_FLAG,''N'', ZX_LINE.LINE_AMT,ZX_LINE.TAXABLE_AMT),
           ZX_LINE.TAXABLE_AMT),
    ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
    ZX_LINE.TRX_LINE_ID,
    ZX_LINE.TRX_LINE_QUANTITY  ,
    ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
    ZX_LINE.EXEMPT_REASON_CODE   ,
    TO_CHAR(NULL),
    ZX_DET.UOM_CODE,
    ZX_DET.INTERNAL_ORGANIZATION_ID ,
    TO_CHAR(NULL),
    DECODE(ZX_LINE.TAX_PROVIDER_ID ,NULL, ZX_RATE.PERCENTAGE_RATE,ZX_LINE.TAX_RATE),
    ZX_LINE.TAX_RATE_CODE,
    ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
   --ZX_RATE.RATE_TYPE_CODE,
    ZX_TAX.TAX_TYPE_CODE,
    ZX_RATE.TAX_RATE_NAME,
    ZX_DET.TRX_NUMBER,
    ZX_DET.TRX_DESCRIPTION,
    ZX_DET.DOC_SEQ_VALUE,
    ZX_DET.TRX_DATE,
    ZX_DET.TRX_DUE_DATE ,
    ZX_DET.TRX_SHIPPING_DATE ,
    ZX_DET.TRX_COMMUNICATED_DATE ,
    ZX_DET.TRX_CURRENCY_CODE,
    ZX_DET.CURRENCY_CONVERSION_TYPE,
    ZX_DET.CURRENCY_CONVERSION_DATE,
    ZX_DET.CURRENCY_CONVERSION_RATE,
    ZX_DET.TRX_SIC_CODE,
    ZX_DET.FOB_POINT,
    ZX_DET.TRX_WAYBILL_NUMBER,
    ZX_DET.BATCH_SOURCE_NAME,
    ZX_DET.TRX_TYPE_DESCRIPTION,
    ZX_RATE.DESCRIPTION,
    ZX_DET.TRX_LINE_DESCRIPTION,
    ZX_LINE.TRX_LINE_NUMBER,
    ZX_DET.TRX_LINE_TYPE,
    ZX_LINE.ATTRIBUTE_CATEGORY,
    ZX_LINE.ATTRIBUTE1,
    ZX_LINE.ATTRIBUTE2,
    ZX_LINE.ATTRIBUTE3,
    ZX_LINE.ATTRIBUTE4,
    ZX_LINE.ATTRIBUTE5,
    ZX_LINE.ATTRIBUTE6,
    ZX_LINE.ATTRIBUTE7,
    ZX_LINE.ATTRIBUTE8,
    ZX_LINE.ATTRIBUTE9,
    ZX_LINE.ATTRIBUTE10,
    ZX_LINE.ATTRIBUTE11,
    ZX_LINE.ATTRIBUTE12,
    ZX_LINE.ATTRIBUTE13,
    ZX_LINE.ATTRIBUTE14,
    ZX_LINE.ATTRIBUTE15,
    ZX_DET.APPLICATION_ID,
    ZX_DET.DOC_EVENT_STATUS,
    ZX_DET.APPLICATION_DOC_STATUS,
    ZX_DET.ESTABLISHMENT_ID,
    ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
    ZX_DET.PRECISION,
    ZX_DET.APPLIED_TO_APPLICATION_ID,
    ZX_DET.APPLIED_TO_TRX_LINE_ID,
    ZX_DET.APPLIED_TO_ENTITY_CODE,
    ZX_DET.APPLIED_TO_TRX_ID,
    ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
    ZX_DET.APPLIED_TO_TRX_NUMBER,
    ZX_DET.RELATED_DOC_APPLICATION_ID,
    ZX_DET.RELATED_DOC_DATE,
    ZX_DET.RELATED_DOC_ENTITY_CODE,
    ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
    ZX_DET.RELATED_DOC_NUMBER,
    ZX_DET.RELATED_DOC_TRX_ID,
    ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
    ZX_DET.ADJUSTED_DOC_DATE,
    ZX_DET.REF_DOC_APPLICATION_ID,
    ZX_DET.REF_DOC_ENTITY_CODE,
    ZX_DET.REF_DOC_EVENT_CLASS_CODE,
    ZX_DET.REF_DOC_LINE_ID,
    ZX_DET.REF_DOC_LINE_QUANTITY,
    ZX_DET.REF_DOC_TRX_ID,
    ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
    ZX_DET.DEFAULT_TAXATION_COUNTRY,
    ZX_DET.DOCUMENT_SUB_TYPE,
    ZX_DET.ASSESSABLE_VALUE,
    ZX_DET.TRX_BUSINESS_CATEGORY,
    ZX_DET.LINE_INTENDED_USE,
    ZX_DET.PRODUCT_CATEGORY,
    ZX_DET.PRODUCT_FISC_CLASSIFICATION,
    ZX_DET.SUPPLIER_EXCHANGE_RATE,
    ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
    ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
    ZX_DET.USER_DEFINED_FISC_CLASS,
    ZX_LINE.EXCEPTION_RATE,
    ZX_LINE.EXEMPT_RATE_MODIFIER,
    ZX_LINE.ORIG_TAX_AMT,
    ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
    ZX_LINE.ORIG_TAXABLE_AMT,
    ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
    ZX_LINE.TAX_AMT_TAX_CURR ,
    ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
    ZX_LINE.TAX_CURRENCY_CODE,
    ZX_LINE.TAX_DATE,
    ZX_LINE.TAX_DETERMINE_DATE,
    ZX_DET.TAX_INVOICE_DATE,
    ZX_DET.TAX_INVOICE_NUMBER,
    ZX_LINE.TAX_JURISDICTION_CODE,
    ZX_LINE.TAX_REGIME_CODE,
    ZX_LINE.TAX_STATUS_CODE,
    ZX_LINE.TAX_STATUS_ID,
    ZX_LINE.TAX,
    ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
    ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
    ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
    ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
    ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
    ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
    ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
    ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
    ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
    ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
    ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
    ZX_DET.BILL_THIRD_PTY_ACCT_ID,
    ZX_LINE.HQ_ESTB_REG_NUMBER ,
    zx_line.tax_registration_number,
    ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
    ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
    ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
    ZX_DET.PORT_OF_ENTRY_CODE,
    ZX_LINE.REGISTRATION_PARTY_TYPE,
    ZX_LINE.HISTORICAL_FLAG,
    ZX_LINE.MRC_TAX_LINE_FLAG,
    TO_CHAR(NULL),
    ZX_LINE.REPORTING_ONLY_FLAG,
    ZX_LINE.TAX_AMT_INCLUDED_FLAG,
    ZX_LINE.TAX_ONLY_LINE_FLAG,
    ZX_DET.EVENT_CLASS_MAPPING_ID,
    ZX_DET.TRX_LEVEL_TYPE,
    ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
    ZX_DET.POA_LOCATION_ID,
    ZX_DET.POO_LOCATION_ID,
    ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
    ZX_DET.LINE_AMT,
    ZX_LINE.TAX_PROVIDER_ID,
    ZX_DET.ENTITY_CODE,
    TO_DATE(NULL),
    ZX_DET.TRX_LINE_GL_DATE,
    ZX_DET.UNIT_PRICE,
    ZX_LINE.OFFSET_TAX_RATE_CODE,
    ZX_LINE.OFFSET_FLAG';


 -- P_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV || L_GROUP_BY_AR_INV_4;
        L_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV || L_GROUP_BY_AR_INV;


      ELSIF (G_ACCOUNTING_STATUS = 'ACCOUNTED' OR
            (NVL(G_ACCOUNTING_STATUS,'BOTH') = 'BOTH' AND NVL(G_INCLUDE_ACCOUNTING_SEGMENTS,'N')='Y'))
        OR  (G_GL_DATE_LOW IS NOT NULL OR G_GL_DATE_HIGH IS NOT NULL) THEN

        IF (g_level_procedure >= g_current_runtime_level ) THEN
          FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                     'SQL-2-1 For Invoice, Credit Memo, Debit Memo: Line Level: Accounting');
          FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'G_ACCOUNTING_STATUS   : '||G_ACCOUNTING_STATUS);
        END IF;


  L_COLUMN_LIST_AR_INV :=
   'SELECT '|| get_hint_ar_inv ||
   'ZX_DET.LEDGER_ID,
    ZX_DET.TRX_ID    ,
    ZX_DET.DOC_SEQ_ID ,
    ZX_DET.DOC_SEQ_NAME ,
    ZX_DET.RECEIVABLES_TRX_TYPE_ID,
    ZX_DET.LINE_CLASS,
    ZX_DET.EVENT_CLASS_CODE ,
    TO_CHAR(NULL) ,'|| --APPLIED_FROM_ENTITY_CODE
   'TO_NUMBER(NULL)  ,'||--APPLIED_FROM_TRX_ID
   'TO_CHAR(NULL)  ,'||--APPLIED_FROM_EVENT_CLASS_CODE
   'ZX_DET.ADJUSTED_DOC_ENTITY_CODE ,'||  --APPLIED_TO_ENTITY_CODE --TO_CHAR(NULL)
   'ZX_DET.ADJUSTED_DOC_TRX_ID ,'|| --TO_NUMBER(NULL) --APPLIED_TO_TRX_ID
   'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE  ,'||  --TO_CHAR(NULL)  --APPLIED_TO_EVENT_CLASS_CODE
   'ZX_DET.ADJUSTED_DOC_NUMBER  ,'|| --ADJUSTED_DOC_NUMBER  --APPLIED_TO_TRX_NUMBER
   'ZX_DET.BATCH_SOURCE_ID,
    ZX_LINE.TAX_RATE_ID ,
    DECODE(ZX_ACCOUNTS.INTERIM_TAX_CCID,NULL,''TAX'',''INTERIM''),
    ZX_DET.PRODUCT_ID,
    ZX_DET.PRODUCT_DESCRIPTION,
    TO_CHAR(NULL), --TAXABLE_LINE_SOURCE_TABLE,
    TO_NUMBER(NULL), --TAXABLE_ITEM_SOURCE_ID,
    ZX_LINE.TAX_EXEMPTION_ID ,
    ZX_LINE.TAX_EXCEPTION_ID  ,
    TO_NUMBER(NULL),  --TAXABLE_LINE_TOTAL_AMOUNT  ,
    ZX_LINE.TAX_LINE_ID,
    ZX_LINE.TAX_AMT,
    ZX_LINE.TAX_AMT_FUNCL_CURR  ,
    ZX_LINE.TAX_LINE_NUMBER,
    DECODE(ZX_LINE.MANUALLY_ENTERED_FLAG,
           ''Y'',DECODE(ZX_LINE.TAX_AMT_INCLUDED_FLAG,''N'', ZX_LINE.LINE_AMT,ZX_LINE.TAXABLE_AMT),
           ZX_LINE.TAXABLE_AMT),
    ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
    ZX_LINE.TRX_LINE_ID,
    ZX_LINE.TRX_LINE_QUANTITY  ,
    ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
    ZX_LINE.EXEMPT_REASON_CODE   ,
    TO_CHAR(NULL), --exception_reason_code
    ZX_DET.UOM_CODE,
    TO_CHAR(NULL)  ,'||--RECONCILIATION_FLAG
   'ZX_DET.INTERNAL_ORGANIZATION_ID ,'||--ORG_ID
   'TO_NUMBER(NULL),'||--BR_REF_CUSTOMER_TRX_ID
  -- 'TO_CHAR(NULL),  --reverse_date
   'TO_NUMBER(NULL)   ,'||--AMOUNT_APPLIED
   'TO_NUMBER(NULL),'||  --TAX_APPLIED
   'DECODE(ZX_LINE.TAX_PROVIDER_ID ,NULL, ZX_RATE.PERCENTAGE_RATE,ZX_LINE.TAX_RATE),
    ZX_LINE.TAX_RATE_CODE,
    ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
   --ZX_RATE.RATE_TYPE_CODE,
    ZX_TAX.TAX_TYPE_CODE,
    ZX_RATE.TAX_RATE_NAME,
    ZX_DET.TRX_NUMBER,
    ZX_DET.TRX_DESCRIPTION,
    ZX_DET.DOC_SEQ_VALUE,
    ZX_DET.TRX_DATE,
    TO_DATE(NULL),   --Deposit Date
    ZX_DET.TRX_DUE_DATE ,
    ZX_DET.TRX_SHIPPING_DATE ,
    ZX_DET.TRX_COMMUNICATED_DATE ,
    ZX_DET.TRX_CURRENCY_CODE,
    ZX_DET.CURRENCY_CONVERSION_TYPE,
    ZX_DET.CURRENCY_CONVERSION_DATE,
    ZX_DET.CURRENCY_CONVERSION_RATE,
    ZX_DET.TRX_SIC_CODE,
    ZX_DET.FOB_POINT,
    ZX_DET.TRX_WAYBILL_NUMBER,
    ZX_DET.BATCH_SOURCE_NAME,
    ZX_DET.TRX_TYPE_DESCRIPTION,
    ZX_RATE.DESCRIPTION,
    ZX_DET.TRX_LINE_DESCRIPTION,
    ZX_LINE.TRX_LINE_NUMBER,
    ZX_DET.TRX_LINE_TYPE,
    ZX_LINE.ATTRIBUTE_CATEGORY,
    ZX_LINE.ATTRIBUTE1,
    ZX_LINE.ATTRIBUTE2,
    ZX_LINE.ATTRIBUTE3,
    ZX_LINE.ATTRIBUTE4,
    ZX_LINE.ATTRIBUTE5,
    ZX_LINE.ATTRIBUTE6,
    ZX_LINE.ATTRIBUTE7,
    ZX_LINE.ATTRIBUTE8,
    ZX_LINE.ATTRIBUTE9,
    ZX_LINE.ATTRIBUTE10,
    ZX_LINE.ATTRIBUTE11,
    ZX_LINE.ATTRIBUTE12,
    ZX_LINE.ATTRIBUTE13,
    ZX_LINE.ATTRIBUTE14,
    ZX_LINE.ATTRIBUTE15,
    ZX_DET.APPLICATION_ID,
    ZX_DET.DOC_EVENT_STATUS,
    ZX_DET.APPLICATION_DOC_STATUS,
    ZX_DET.ESTABLISHMENT_ID,
    ''AR'','|| --EXTRACT_SOURCE_LEDGER
   '--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
    --ZX_DET.LEDGER_NAME,
    ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
    ZX_DET.PRECISION,
    TO_NUMBER(NULL),'|| --RECEIPT_CLASS_ID
   'ZX_DET.APPLIED_TO_APPLICATION_ID,
    ZX_DET.APPLIED_TO_TRX_LINE_ID,
    ZX_DET.APPLIED_TO_ENTITY_CODE,
    ZX_DET.APPLIED_TO_TRX_ID,
    ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
    ZX_DET.APPLIED_TO_TRX_NUMBER,
    ZX_DET.RELATED_DOC_APPLICATION_ID,
    ZX_DET.RELATED_DOC_DATE,
    ZX_DET.RELATED_DOC_ENTITY_CODE,
    ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
    ZX_DET.RELATED_DOC_NUMBER,
    ZX_DET.RELATED_DOC_TRX_ID,
    ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
    ZX_DET.ADJUSTED_DOC_DATE,
    --ZX_DET.BANKING_TP_TAXPAYER_ID,
    ZX_DET.REF_DOC_APPLICATION_ID,
    ZX_DET.REF_DOC_ENTITY_CODE,
    ZX_DET.REF_DOC_EVENT_CLASS_CODE,
    ZX_DET.REF_DOC_LINE_ID,
    ZX_DET.REF_DOC_LINE_QUANTITY,
    ZX_DET.REF_DOC_TRX_ID,
    ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
    ZX_DET.DEFAULT_TAXATION_COUNTRY,
    ZX_DET.DOCUMENT_SUB_TYPE,
    ZX_DET.ASSESSABLE_VALUE,
    ZX_DET.TRX_BUSINESS_CATEGORY,
    ZX_DET.LINE_INTENDED_USE,
    ZX_DET.PRODUCT_CATEGORY,
    ZX_DET.PRODUCT_FISC_CLASSIFICATION,
    ZX_DET.SUPPLIER_EXCHANGE_RATE,
    ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
    ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
    ZX_DET.USER_DEFINED_FISC_CLASS,
    ZX_LINE.EXCEPTION_RATE,
    ZX_LINE.EXEMPT_RATE_MODIFIER,
    ZX_LINE.ORIG_TAX_AMT,
    ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
    ZX_LINE.ORIG_TAXABLE_AMT,
    ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
    TO_CHAR(NULL),'|| -- RECOVERY_RATE_CODE,
   'ZX_LINE.TAX_AMT_TAX_CURR ,
    ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
    ZX_LINE.TAX_CURRENCY_CODE,
    ZX_LINE.TAX_DATE,
    ZX_LINE.TAX_DETERMINE_DATE,
    ZX_DET.TAX_INVOICE_DATE,
    ZX_DET.TAX_INVOICE_NUMBER,
    ZX_LINE.TAX_JURISDICTION_CODE,
    ZX_LINE.TAX_REGIME_CODE,
    ZX_LINE.TAX_STATUS_CODE,
    ZX_LINE.TAX_STATUS_ID,
    ZX_LINE.TAX,
    ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
    ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
    ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
    ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
    ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
    ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
    ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
    ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
    ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
    ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
    ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
    ZX_DET.BILL_THIRD_PTY_ACCT_ID,
    ZX_LINE.HQ_ESTB_REG_NUMBER ,
    zx_line.tax_registration_number,
    ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
    ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
    ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
    ZX_DET.PORT_OF_ENTRY_CODE,
    ZX_LINE.REGISTRATION_PARTY_TYPE,
    ZX_LINE.HISTORICAL_FLAG,
    ZX_LINE.MRC_TAX_LINE_FLAG,
    DECODE(DIST.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,
    ZX_LINE.REPORTING_ONLY_FLAG,
    ZX_LINE.TAX_AMT_INCLUDED_FLAG,
    ZX_LINE.TAX_ONLY_LINE_FLAG,
    ZX_DET.EVENT_CLASS_MAPPING_ID,
    ZX_DET.TRX_LEVEL_TYPE,
    ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
    ZX_DET.POA_LOCATION_ID,
    ZX_DET.POO_LOCATION_ID,
    ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
    ZX_DET.LINE_AMT,
    ZX_LINE.TAX_PROVIDER_ID,
    TO_DATE(NULL),
    TO_CHAR(NULL),
    TO_NUMBER(NULL),
    TO_NUMBER(NULL),
    TO_CHAR(NULL),
    DIST.ACCOUNT_CLASS,
    TO_CHAR(NULL),
    TO_CHAR(NULL) ,
    ZX_DET.ENTITY_CODE,
    DIST.GL_POSTED_DATE,
    DIST.GL_DATE,
    ZX_DET.UNIT_PRICE,
    TO_NUMBER(NULL),
    ZX_LINE.OFFSET_TAX_RATE_CODE,
    ZX_LINE.OFFSET_FLAG';

  L_TABLE_LIST_AR_INV :=  ' FROM '||get_std_table_list_ar_inv;

  L_WHERE_CLAUSE_AR_INV := ' WHERE '
   || get_static_where_clause_ar_inv
   || L_WHERE_REPORTING_CONTEXT_TRXH
   || L_WHERE_LEDGER_ID
   || L_WHERE_LEGAL_ENTITY_ID
   || L_WHERE_REGISTER_TYPE_AR_TRX
   || L_WHERE_TRX_CLASS_INV_CM_DM
   || L_WHERE_PARTY_NAME
   || L_WHERE_BATCH_NAME
   || L_WHERE_TRX_NUMBER_INV
   || L_WHERE_GL_TRX_DATE_INV
   || L_WHERE_TRX_DATE_INV
   || L_WHERE_GL_DATE_INV
   || L_WHERE_DOCUMENT_SUB_TYPE
   || L_WHERE_TRX_BUSINESS_CATEGORY
   || L_WHERE_TAX_INVOICE_DATE
   || L_WHERE_TAX_JURISDICTION_CODE
   || L_WHERE_FIRST_PTY_TAX_REG_NUM
   || L_WHERE_TAX_REGIME_CODE
   || L_WHERE_TAX
   || L_WHERE_TAX_STATUS_CODE
   || L_WHERE_TAX_RATE_CODE
   || L_WHERE_TAX_TYPE_CODE
   || L_WHERE_CURRENCY_CODE
   || L_WHERE_EXEMPTION_STATUS
   || L_WHERE_TAX_CODE_VAT_TRX_TYPE
   || L_WHERE_TAX_LTE
   || L_WHERE_ACCOUNTING_STATUS_TRX
   || L_WHERE_REPORTED_STATUS;

  L_GROUP_BY_AR_INV :=
  ' GROUP BY '||
  'ZX_DET.LEDGER_ID,
   ZX_DET.TRX_ID    ,
   ZX_DET.DOC_SEQ_ID ,
   ZX_DET.DOC_SEQ_NAME ,
   ZX_DET.RECEIVABLES_TRX_TYPE_ID,
   ZX_DET.LINE_CLASS,
   ZX_DET.EVENT_CLASS_CODE ,
   ZX_DET.ADJUSTED_DOC_NUMBER ,
   ZX_DET.BATCH_SOURCE_ID,
   ZX_LINE.TAX_RATE_ID ,
   DECODE(ZX_ACCOUNTS.INTERIM_TAX_CCID,NULL,''TAX'',''INTERIM''),
--         ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        --ZX_LINE.TAX_RATE_REGISTER_TYPE_CODE,
   ZX_DET.PRODUCT_ID,
   ZX_DET.PRODUCT_DESCRIPTION,
   ZX_LINE.TAX_EXEMPTION_ID ,
   ZX_LINE.TAX_EXCEPTION_ID  ,
   ZX_LINE.TAX_LINE_ID,
   ZX_LINE.TAX_AMT,
   ZX_LINE.TAX_AMT_FUNCL_CURR  ,
   ZX_LINE.TAX_LINE_NUMBER,
   DECODE(ZX_LINE.MANUALLY_ENTERED_FLAG,
          ''Y'',DECODE(ZX_LINE.TAX_AMT_INCLUDED_FLAG,''N'', ZX_LINE.LINE_AMT,ZX_LINE.TAXABLE_AMT),
          ZX_LINE.TAXABLE_AMT),
   ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
   ZX_LINE.TRX_LINE_ID,
   ZX_LINE.TRX_LINE_QUANTITY  ,
   ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
   ZX_LINE.EXEMPT_REASON_CODE   ,
   TO_CHAR(NULL), --exception_reason_code
   ZX_DET.UOM_CODE,
   ZX_DET.INTERNAL_ORGANIZATION_ID ,--ORG_ID
   TO_CHAR(NULL),  --reverse_date
   DECODE(ZX_LINE.TAX_PROVIDER_ID ,NULL, ZX_RATE.PERCENTAGE_RATE,ZX_LINE.TAX_RATE),
   ZX_LINE.TAX_RATE_CODE,
   ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
   --ZX_RATE.RATE_TYPE_CODE,
   ZX_TAX.TAX_TYPE_CODE,
   ZX_RATE.TAX_RATE_NAME,
   ZX_DET.TRX_NUMBER,
   ZX_DET.TRX_DESCRIPTION,
   ZX_DET.DOC_SEQ_VALUE,
   ZX_DET.TRX_DATE,
   ZX_DET.TRX_DUE_DATE ,
   ZX_DET.TRX_SHIPPING_DATE ,
   ZX_DET.TRX_COMMUNICATED_DATE ,
   ZX_DET.TRX_CURRENCY_CODE,
   ZX_DET.CURRENCY_CONVERSION_TYPE,
   ZX_DET.CURRENCY_CONVERSION_DATE,
   ZX_DET.CURRENCY_CONVERSION_RATE,
   ZX_DET.TRX_SIC_CODE,
   ZX_DET.FOB_POINT,
   ZX_DET.TRX_WAYBILL_NUMBER,
   ZX_DET.BATCH_SOURCE_NAME,
   ZX_DET.TRX_TYPE_DESCRIPTION,
   ZX_RATE.DESCRIPTION,
   ZX_DET.TRX_LINE_DESCRIPTION,
   ZX_LINE.TRX_LINE_NUMBER,
   ZX_DET.TRX_LINE_TYPE,
   ZX_LINE.ATTRIBUTE_CATEGORY,
   ZX_LINE.ATTRIBUTE1,
   ZX_LINE.ATTRIBUTE2,
   ZX_LINE.ATTRIBUTE3,
   ZX_LINE.ATTRIBUTE4,
   ZX_LINE.ATTRIBUTE5,
   ZX_LINE.ATTRIBUTE6,
   ZX_LINE.ATTRIBUTE7,
   ZX_LINE.ATTRIBUTE8,
   ZX_LINE.ATTRIBUTE9,
   ZX_LINE.ATTRIBUTE10,
   ZX_LINE.ATTRIBUTE11,
   ZX_LINE.ATTRIBUTE12,
   ZX_LINE.ATTRIBUTE13,
   ZX_LINE.ATTRIBUTE14,
   ZX_LINE.ATTRIBUTE15,
   ZX_DET.APPLICATION_ID,
   ZX_DET.DOC_EVENT_STATUS,
   ZX_DET.APPLICATION_DOC_STATUS,
   ZX_DET.ESTABLISHMENT_ID,
  --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
   --ZX_DET.LEDGER_NAME,
   ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
   ZX_DET.PRECISION,
   ZX_DET.APPLIED_TO_APPLICATION_ID,
   ZX_DET.APPLIED_TO_TRX_LINE_ID,
   ZX_DET.APPLIED_TO_ENTITY_CODE,
   ZX_DET.APPLIED_TO_TRX_ID,
   ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
   ZX_DET.APPLIED_TO_TRX_NUMBER,
   ZX_DET.RELATED_DOC_APPLICATION_ID,
   ZX_DET.RELATED_DOC_DATE,
   ZX_DET.RELATED_DOC_ENTITY_CODE,
   ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
   ZX_DET.RELATED_DOC_NUMBER,
   ZX_DET.RELATED_DOC_TRX_ID,
   ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
   ZX_DET.ADJUSTED_DOC_DATE,
   --ZX_DET.BANKING_TP_TAXPAYER_ID,
   ZX_DET.REF_DOC_APPLICATION_ID,
   ZX_DET.REF_DOC_ENTITY_CODE,
   ZX_DET.REF_DOC_EVENT_CLASS_CODE,
   ZX_DET.REF_DOC_LINE_ID,
   ZX_DET.REF_DOC_LINE_QUANTITY,
   ZX_DET.REF_DOC_TRX_ID,
   ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
   ZX_DET.DEFAULT_TAXATION_COUNTRY,
   ZX_DET.DOCUMENT_SUB_TYPE,
   ZX_DET.ASSESSABLE_VALUE,
   ZX_DET.TRX_BUSINESS_CATEGORY,
   ZX_DET.LINE_INTENDED_USE,
   ZX_DET.PRODUCT_CATEGORY,
   ZX_DET.PRODUCT_FISC_CLASSIFICATION,
   ZX_DET.SUPPLIER_EXCHANGE_RATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
   ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
   ZX_DET.USER_DEFINED_FISC_CLASS,
   ZX_LINE.EXCEPTION_RATE,
   ZX_LINE.EXEMPT_RATE_MODIFIER,
   ZX_LINE.ORIG_TAX_AMT,
   ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
   ZX_LINE.ORIG_TAXABLE_AMT,
   ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
   ZX_LINE.TAX_AMT_TAX_CURR ,
   ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
   ZX_LINE.TAX_CURRENCY_CODE,
   ZX_LINE.TAX_DATE,
   ZX_LINE.TAX_DETERMINE_DATE,
   ZX_DET.TAX_INVOICE_DATE,
   ZX_DET.TAX_INVOICE_NUMBER,
   ZX_LINE.TAX_JURISDICTION_CODE,
   ZX_LINE.TAX_REGIME_CODE,
   ZX_LINE.TAX_STATUS_CODE,
   ZX_LINE.TAX_STATUS_ID,
   ZX_LINE.TAX,
   ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
   ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
   ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
   ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
   ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
   ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
   ZX_DET.BILL_THIRD_PTY_ACCT_ID,
   ZX_LINE.HQ_ESTB_REG_NUMBER ,
   zx_line.tax_registration_number,
   ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
   ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
   ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
   ZX_DET.PORT_OF_ENTRY_CODE,
   ZX_LINE.REGISTRATION_PARTY_TYPE,
   ZX_LINE.HISTORICAL_FLAG,
   ZX_LINE.MRC_TAX_LINE_FLAG,
   DECODE(DIST.GL_POSTED_DATE, NULL, ''N'', ''Y''),
   ZX_LINE.REPORTING_ONLY_FLAG,
   ZX_LINE.TAX_AMT_INCLUDED_FLAG,
   ZX_LINE.TAX_ONLY_LINE_FLAG,
   ZX_DET.EVENT_CLASS_MAPPING_ID,
   ZX_DET.TRX_LEVEL_TYPE,
   ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
   ZX_DET.POA_LOCATION_ID,
   ZX_DET.POO_LOCATION_ID,
   ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
   ZX_DET.LINE_AMT,
   ZX_LINE.TAX_PROVIDER_ID,
   ZX_DET.ENTITY_CODE,
   DIST.GL_POSTED_DATE,
   DIST.ACCOUNT_CLASS,
   DIST.GL_DATE,
   ZX_DET.UNIT_PRICE,
   ZX_LINE.OFFSET_TAX_RATE_CODE,
   ZX_LINE.OFFSET_FLAG,
   ZX_DET.ADJUSTED_DOC_ENTITY_CODE ,
   ZX_DET.ADJUSTED_DOC_TRX_ID ,
   ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE';

 -- P_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV || L_GROUP_BY_AR_INV_4;
        L_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV || L_GROUP_BY_AR_INV;

      END IF;   -- G_ACCOUNTING_STATUS Check ---

    ELSIF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN
        -- apai commented : needs to be removed   AND NVL(G_TRX_CLASS,'INV') IN ('INV','CM','DM')  THEN
        --    Matrix reporting is not supported at transaction distribution level


      IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-3 For Invoice, Credit Memo, Debit Memo: Distribution Level');
      END IF;

  L_COLUMN_LIST_AR_INV :=
   'SELECT '|| get_hint_ar_inv ||
   'DISTINCT ZX_DET.LEDGER_ID,
    ZX_DET.TRX_ID    ,
    ZX_DET.DOC_SEQ_ID ,
    ZX_DET.DOC_SEQ_NAME ,
    ZX_DET.RECEIVABLES_TRX_TYPE_ID,
    ZX_DET.LINE_CLASS,
    ZX_DET.EVENT_CLASS_CODE ,
    TO_CHAR(NULL) ,'|| --APPLIED_FROM_ENTITY_CODE
   'TO_NUMBER(NULL)  ,'||--APPLIED_FROM_TRX_ID
   'TO_CHAR(NULL)  ,'||--APPLIED_FROM_EVENT_CLASS_CODE
   'TO_CHAR(NULL)  ,'||  -- ADJUSTED_DOC_ENTITY_CODE --APPLIED_TO_ENTITY_CODE
   'TO_NUMBER(NULL) ,'|| --ADJSUTED_DOC_ID --APPLIED_TO_TRX_ID
   'TO_CHAR(NULL)  ,'||  --ADJUSTED_DOC_EVENT_CLASS_CODE  --APPLIED_TO_EVENT_CLASS_CODE
   'ZX_DET.ADJUSTED_DOC_NUMBER  ,'|| --ADJUSTED_DOC_NUMBER  --APPLIED_TO_TRX_NUMBER
   'ZX_DET.BATCH_SOURCE_ID,
    ZX_LINE.TAX_RATE_ID ,
    DECODE(ZX_ACCOUNTS.INTERIM_TAX_CCID,NULL,''TAX'',''INTERIM''),
    ZX_DET.PRODUCT_ID,
    ZX_DET.PRODUCT_DESCRIPTION,
    TO_CHAR(NULL),   --TAXABLE_LINE_SOURCE_TABLE,
    TO_NUMBER(NULL),   --TAXABLE_ITEM_SOURCE_ID,
    ZX_LINE.TAX_EXEMPTION_ID ,
    ZX_LINE.TAX_EXCEPTION_ID  ,
    TO_NUMBER(NULL),   --TAXABLE_LINE_TOTAL_AMOUNT  ,
    ZX_LINE.TAX_LINE_ID,
    DIST.AMOUNT,     -- ZX_LINE.TAX_AMT,
    DIST.ACCTD_AMOUNT,    --ZX_LINE.TAX_AMT_FUNCL_CURR  ,
    ZX_LINE.TAX_LINE_NUMBER,
    DECODE(ZX_LINE.MANUALLY_ENTERED_FLAG,
           ''Y'',DECODE(ZX_LINE.TAX_AMT_INCLUDED_FLAG,''N'', ZX_LINE.LINE_AMT,
                                                             ZX_LINE.TAXABLE_AMT)
                ,ZX_LINE.TAXABLE_AMT)*(DIST.PERCENT)/100,
    ZX_LINE.TAXABLE_AMT_FUNCL_CURR *(DIST.PERCENT)/100,
    ZX_LINE.TRX_LINE_ID,
    ZX_LINE.TRX_LINE_QUANTITY  ,
    ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
    ZX_LINE.EXEMPT_REASON_CODE   ,
    TO_CHAR(NULL), --exception_reason_code
    ZX_DET.UOM_CODE,
    TO_CHAR(NULL)  ,'||--RECONCILIATION_FLAG
   'ZX_DET.INTERNAL_ORGANIZATION_ID ,'||--ORG_ID
   'TO_NUMBER(NULL),'||--BR_REF_CUSTOMER_TRX_ID
   --'TO_CHAR(NULL),  --reverse_date
   'TO_NUMBER(NULL)   ,'||--AMOUNT_APPLIED
   'TO_NUMBER(NULL),'||  --TAX_APPLIED
   'DECODE(ZX_LINE.TAX_PROVIDER_ID ,NULL, ZX_RATE.PERCENTAGE_RATE,ZX_LINE.TAX_RATE),
    ZX_LINE.TAX_RATE_CODE,
    ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
   --ZX_RATE.RATE_TYPE_CODE,
    ZX_TAX.TAX_TYPE_CODE,
    ZX_RATE.TAX_RATE_NAME,
    ZX_DET.TRX_NUMBER,
    ZX_DET.TRX_DESCRIPTION,
    ZX_DET.DOC_SEQ_VALUE,
    ZX_DET.TRX_DATE,
    TO_DATE(NULL),   --Deposit Date
    ZX_DET.TRX_DUE_DATE ,
    ZX_DET.TRX_SHIPPING_DATE ,
    ZX_DET.TRX_COMMUNICATED_DATE ,
    ZX_DET.TRX_CURRENCY_CODE,
    ZX_DET.CURRENCY_CONVERSION_TYPE,
    ZX_DET.CURRENCY_CONVERSION_DATE,
    ZX_DET.CURRENCY_CONVERSION_RATE,
    ZX_DET.TRX_SIC_CODE,
    ZX_DET.FOB_POINT,
    ZX_DET.TRX_WAYBILL_NUMBER,
    ZX_DET.BATCH_SOURCE_NAME,
    ZX_DET.TRX_TYPE_DESCRIPTION,
    ZX_RATE.DESCRIPTION,
    ZX_DET.TRX_LINE_DESCRIPTION,
    ZX_LINE.TRX_LINE_NUMBER,
    ZX_DET.TRX_LINE_TYPE,
    ZX_LINE.ATTRIBUTE_CATEGORY,
    ZX_LINE.ATTRIBUTE1,
    ZX_LINE.ATTRIBUTE2,
    ZX_LINE.ATTRIBUTE3,
    ZX_LINE.ATTRIBUTE4,
    ZX_LINE.ATTRIBUTE5,
    ZX_LINE.ATTRIBUTE6,
    ZX_LINE.ATTRIBUTE7,
    ZX_LINE.ATTRIBUTE8,
    ZX_LINE.ATTRIBUTE9,
    ZX_LINE.ATTRIBUTE10,
    ZX_LINE.ATTRIBUTE11,
    ZX_LINE.ATTRIBUTE12,
    ZX_LINE.ATTRIBUTE13,
    ZX_LINE.ATTRIBUTE14,
    ZX_LINE.ATTRIBUTE15,
    ZX_DET.APPLICATION_ID,
    ZX_DET.DOC_EVENT_STATUS,
    ZX_DET.APPLICATION_DOC_STATUS,
    ZX_DET.ESTABLISHMENT_ID,
    ''AR'','|| --EXTRACT_SOURCE_LEDGER
   '--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
    --ZX_DET.LEDGER_NAME,
    ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
    ZX_DET.PRECISION,
    TO_NUMBER(NULL)  ,'|| --RECEIPT_CLASS_ID
   'ZX_DET.APPLIED_TO_APPLICATION_ID,
    ZX_DET.APPLIED_TO_TRX_LINE_ID,
    ZX_DET.APPLIED_TO_ENTITY_CODE,
    ZX_DET.APPLIED_TO_TRX_ID,
    ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
    ZX_DET.APPLIED_TO_TRX_NUMBER,
    ZX_DET.RELATED_DOC_APPLICATION_ID,
    ZX_DET.RELATED_DOC_DATE,
    ZX_DET.RELATED_DOC_ENTITY_CODE,
    ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
    ZX_DET.RELATED_DOC_NUMBER,
    ZX_DET.RELATED_DOC_TRX_ID,
    ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
    ZX_DET.ADJUSTED_DOC_DATE,
    --ZX_DET.BANKING_TP_TAXPAYER_ID,
    ZX_DET.REF_DOC_APPLICATION_ID,
    ZX_DET.REF_DOC_ENTITY_CODE,
    ZX_DET.REF_DOC_EVENT_CLASS_CODE,
    ZX_DET.REF_DOC_LINE_ID,
    ZX_DET.REF_DOC_LINE_QUANTITY,
    ZX_DET.REF_DOC_TRX_ID,
    ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
    ZX_DET.DEFAULT_TAXATION_COUNTRY,
    ZX_DET.DOCUMENT_SUB_TYPE,
    ZX_DET.ASSESSABLE_VALUE,
    ZX_DET.TRX_BUSINESS_CATEGORY,
    ZX_DET.LINE_INTENDED_USE,
    ZX_DET.PRODUCT_CATEGORY,
    ZX_DET.PRODUCT_FISC_CLASSIFICATION,
    ZX_DET.SUPPLIER_EXCHANGE_RATE,
    ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
    ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
    ZX_DET.USER_DEFINED_FISC_CLASS,
    ZX_LINE.EXCEPTION_RATE,
    ZX_LINE.EXEMPT_RATE_MODIFIER,
    ZX_LINE.ORIG_TAX_AMT,
    ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
    ZX_LINE.ORIG_TAXABLE_AMT,
    ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
    TO_CHAR(NULL)  ,'|| -- RECOVERY_RATE_CODE,
   'ZX_LINE.TAX_AMT_TAX_CURR ,
    ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
    ZX_LINE.TAX_CURRENCY_CODE,
    ZX_LINE.TAX_DATE,
    ZX_LINE.TAX_DETERMINE_DATE,
    ZX_DET.TAX_INVOICE_DATE,
    ZX_DET.TAX_INVOICE_NUMBER,
    ZX_LINE.TAX_JURISDICTION_CODE,
    ZX_LINE.TAX_REGIME_CODE,
    ZX_LINE.TAX_STATUS_CODE,
    ZX_LINE.TAX_STATUS_ID,
    ZX_LINE.TAX,
    ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
    ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
    ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
    ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
    ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
    ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
    ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
    ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
    ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
    ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
    ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
    ZX_DET.BILL_THIRD_PTY_ACCT_ID,
    ZX_LINE.HQ_ESTB_REG_NUMBER ,
    zx_line.tax_registration_number,
    ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
    ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
    ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
    ZX_DET.PORT_OF_ENTRY_CODE,
    ZX_LINE.REGISTRATION_PARTY_TYPE,
    ZX_LINE.HISTORICAL_FLAG,
    ZX_LINE.MRC_TAX_LINE_FLAG,
    DECODE(DIST.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,
    ZX_LINE.REPORTING_ONLY_FLAG,
    ZX_LINE.TAX_AMT_INCLUDED_FLAG,
    ZX_LINE.TAX_ONLY_LINE_FLAG,
    ZX_DET.EVENT_CLASS_MAPPING_ID,
    ZX_DET.TRX_LEVEL_TYPE,
    ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
    ZX_DET.POA_LOCATION_ID,
    ZX_DET.POO_LOCATION_ID,
    ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
    ZX_DET.LINE_AMT,
    ZX_LINE.TAX_PROVIDER_ID,
    TO_DATE(NULL),
    TO_CHAR(NULL),
    TO_NUMBER(NULL),
    TO_NUMBER(NULL),
    TO_CHAR(NULL),
    DIST.ACCOUNT_CLASS,
    DIST.LATEST_REC_FLAG,
    DIST.CUST_TRX_LINE_GL_DIST_ID ,
    ZX_DET.ENTITY_CODE,
    DIST.GL_POSTED_DATE,
    DIST.GL_DATE,
    ZX_DET.UNIT_PRICE,
    TO_NUMBER(NULL),
    ZX_LINE.OFFSET_TAX_RATE_CODE,
    ZX_LINE.OFFSET_FLAG';

    L_TABLE_LIST_AR_INV := ' FROM '|| get_std_table_list_ar_inv
     ||' ,GL_CODE_COMBINATIONS CC ';

    L_WHERE_CLAUSE_AR_INV := ' WHERE '
     || get_static_where_clause_ar_inv
     || ' AND DIST.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID '
     || L_WHERE_REPORTING_CONTEXT_TRXH
     || L_WHERE_LEDGER_ID
     || L_WHERE_LEGAL_ENTITY_ID
     || L_WHERE_REGISTER_TYPE_AR_TRX
     || L_WHERE_TRX_CLASS_INV_CM_DM
     || L_WHERE_PARTY_NAME
     || L_WHERE_BATCH_NAME
     || L_WHERE_TRX_NUMBER_INV
     || L_WHERE_GL_TRX_DATE_INV
     || L_WHERE_TRX_DATE_INV
     || L_WHERE_GL_DATE_INV
     || L_WHERE_DOCUMENT_SUB_TYPE
     || L_WHERE_TRX_BUSINESS_CATEGORY
     || L_WHERE_TAX_INVOICE_DATE
     || L_WHERE_TAX_JURISDICTION_CODE
     || L_WHERE_FIRST_PTY_TAX_REG_NUM
     || L_WHERE_TAX_REGIME_CODE
     || L_WHERE_TAX
     || L_WHERE_TAX_STATUS_CODE
     || L_WHERE_TAX_RATE_CODE
     || L_WHERE_TAX_TYPE_CODE
     || L_WHERE_CURRENCY_CODE
     || L_WHERE_EXEMPTION_STATUS
     || L_WHERE_TAX_CODE_VAT_TRX_TYPE
     || L_WHERE_TAX_LTE
     || L_WHERE_ACCOUNTING_STATUS_TRX
     || L_WHERE_GL_FLEX
     || L_WHERE_REPORTED_STATUS;


--P_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV;

    END IF; -- G_SUMMARY_LEVEL
   --   END IF; -- G_REGISTER_TYPE
  --  END IF; -- G_REGISTER_TYPE
  END IF; -- G_INCLUDE_AR_INV_TRX_CLASS


  --  The queries for Invoices, Applied Credit Memos, Applications, Adjustments,
  --  Cash Receipts have been separated for ease of maintenance.

  --  Building the Column List, Table List and Where Clauses for

  --  Applied Credit Memos : Applied Credit Memos : Applied Credit Memos
  --  Applied Credit Memos : Applied Credit Memos : Applied Credit Memos
  --  Applied Credit Memos : Applied Credit Memos : Applied Credit Memos
  -- CONDITIONALLY EXECUTE

  -- Build SQL for APPLIED CM

  --    NEED CHECK WITH KRIPA HOW TO HANDLE APPLIED CREDIT MEMOS IN ETAX


  IF  G_INCLUDE_AR_APPL_TRX_CLASS = 'Y' OR G_INCLUDE_DISCOUNTS = 'Y' THEN
    IF (UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION'
        OR
        UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE')
    THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-4 For AR Applications : Header or Line Level');
    END IF;

    L_COLUMN_LIST_AR_APP :=
      'SELECT '||
           'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID, '||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,
             TO_NUMBER(NULL), '||
             'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
             'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
            ' ''APP'',
             APP.RECEIVABLE_APPLICATION_ID, '||
            '''APP'','||
            'TO_CHAR(NULL),'||  --ZX_DET.ADJUSTED_DOC_ENTITY_CODE,   --INV
            'ZX_DET.CUSTOMER_TRX_ID ,'|| --ZX_DET.ADJUSTED_DOC_TRX_ID--Applied_to_trx_id--adjusted_doc_id in eTax
            'TO_CHAR(NULL),'||   --ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE  -- INV
            'ZX_DET.TRX_NUMBER,'||   --ZX_DET.ADJUSTED_DOC_NUMBER --Applied_doc_number
             'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''UNEDISC_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''EDISC_NON_REC_TAX'',''NON-RECOVERABLE'',NULL), ' || -- REG. TYPE CODE
            'TO_NUMBER(NULL),
             TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL),'||
            'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0)-nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||-- Total Amount
            'TO_NUMBER(NULL), ' || -- tax_line_id
            'sum(nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
            'sum(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)) ,'||
            'ARDTAX.TAX_LINK_ID, '||  -- Tax Line number populating with tax_link_id
            'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)) ,'||
            'sum(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 17
             'ARD.LINE_ID,
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
             'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'', ''Y'',''N''), ' ||
            'ZX_DET.ORG_ID,
            TO_NUMBER(NULL), ' ||
        --    'ARCS.REVERSAL_DATE,     --Check this column
            ' APP.AMOUNT_APPLIED,
             APP.TAX_APPLIED,
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
              ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
             TO_CHAR(NULL),  --ZX_DET.TRX_DESCRIPTION,
             ARCS.DOC_SEQUENCE_VALUE,
             ARCS.RECEIPT_DATE,
             ARCS.DEPOSIT_DATE,
             TO_DATE(NULL),    --ZX_DET.TRX_DUE_DATE,
              TO_DATE(NULL),    --ZX_DET.TRX_SHIPPING_DATE,
              TO_DATE(NULL),    --ZX_DET.TRX_COMMUNICATED_DATE,
             ARCS.CURRENCY_CODE,
             ARCS.EXCHANGE_RATE_TYPE,
             ARCS.EXCHANGE_DATE,
             ARCS.EXCHANGE_RATE,
             TO_CHAR(NULL),
             ZX_DET.FOB_POINT,
             ZX_DET.WAYBILL_NUMBER,
             TO_CHAR(NULL),'|| --ZX_DET.BATCH_SOURCE_NAME,
            'TO_CHAR(NULL),'|| -- TRX_TYPE_DESCRIPTION
            -- 'ZX_RATE.RATE_TYPE_CODE,
      'ZX_RATE.DESCRIPTION,
            TO_CHAR(NULL),
            TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             NVL(ZX_DET.APPLICATION_ID,222),
             TO_CHAR(NULL),    --ZX_DET.DOC_EVENT_STATUS,
              TO_CHAR(NULL),    --ZX_DET.APPLICATION_DOC_STATUS,
              TO_NUMBER(NULL),    --ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              TO_NUMBER(NULL),    --ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              TO_NUMBER(NULL),    --ZX_DET.PRECISION,
              TO_NUMBER(NULL),   --RECEIPT_CLASS_ID,
              TO_NUMBER(NULL),    --ZX_DET.APPLIED_TO_APPLICATION_ID,
              ARD.REF_CUSTOMER_TRX_LINE_ID,    --ZX_DET.APPLIED_TO_TRX_LINE_ID,
              TO_CHAR(NULL),    --ZX_DET.APPLIED_TO_ENTITY_CODE,
              TO_NUMBER(NULL),    --ZX_DET.APPLIED_TO_TRX_ID,
              TO_CHAR(NULL),    --ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              TO_CHAR(NULL),    --ZX_DET.APPLIED_TO_TRX_NUMBER,
              TO_NUMBER(NULL),    --ZX_DET.RELATED_DOC_APPLICATION_ID,
              TO_DATE(NULL),    --ZX_DET.RELATED_DOC_DATE,
              TO_CHAR(NULL),    --ZX_DET.RELATED_DOC_ENTITY_CODE,
              TO_CHAR(NULL),    --ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              TO_CHAR(NULL),    --ZX_DET.RELATED_DOC_NUMBER,
              TO_NUMBER(NULL),    --ZX_DET.RELATED_DOC_TRX_ID,
              TO_NUMBER(NULL),'||    --ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ' ZX_DET.TRX_DATE,  '||  --ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              'TO_NUMBER(NULL),    --ZX_DET.REF_DOC_APPLICATION_ID,
              TO_CHAR(NULL),    --ZX_DET.REF_DOC_ENTITY_CODE,
              TO_CHAR(NULL),    --ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              TO_NUMBER(NULL),    --ZX_DET.REF_DOC_LINE_ID,
              TO_NUMBER(NULL),    --ZX_DET.REF_DOC_LINE_QUANTITY,
              TO_NUMBER(NULL),    --ZX_DET.REF_DOC_TRX_ID,
              TO_CHAR(NULL),    --ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              TO_CHAR(NULL),    --ZX_DET.DEFAULT_TAXATION_COUNTRY,
              TO_CHAR(NULL),    --ZX_DET.DOCUMENT_SUB_TYPE,
         TO_NUMBER(NULL),    --ZX_DET.ASSESSABLE_VALUE,
              TO_CHAR(NULL),    --ZX_DET.TRX_BUSINESS_CATEGORY,
              TO_CHAR(NULL),    --ZX_DET.LINE_INTENDED_USE,
              TO_CHAR(NULL),    --ZX_DET.PRODUCT_CATEGORY,
              TO_CHAR(NULL),    --ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              TO_NUMBER(NULL),    --ZX_DET.SUPPLIER_EXCHANGE_RATE,
              TO_DATE(NULL),    --ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              TO_CHAR(NULL),    --ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              TO_CHAR(NULL),    --ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),    --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),    --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),    --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),    --ZX_DET.TAX_INVOICE_DATE,
              TO_NUMBER(NULL),    --ZX_DET.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              ZX_RATE.TAX,
              TO_NUMBER(NULL),    --ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         TO_NUMBER(NULL),    --ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         TO_NUMBER(NULL),    --ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_SITE_USE_ID,  --ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_SITE_USE_ID,   --ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_TO_CUSTOMER_ID,    --ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_TO_CUSTOMER_ID,   --ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER
             'TO_CHAR(NULL),  --ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              TO_CHAR(NULL),    --ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
            'DECODE(APP.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,'||     -- POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
      'TO_NUMBER(NULL),    -- ZX_DET.EVENT_CLASS_MAPPING_ID,
         TO_CHAR(NULL),    --ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         TO_NUMBER(NULL),    --ZX_DET.POA_LOCATION_ID,
         TO_NUMBER(NULL),    --ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL), '||      -- Default Place of supply type code
         'sum(nvl(ARD.AMOUNT_CR,0) - nvl(ARD.AMOUNT_DR,0)),'|| --ZX_DET.LINE_AMT
         'TO_NUMBER(NULL),
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
         sum(ARDTAX.ACCTD_AMOUNT_CR),
         sum(ARDTAX.ACCTD_AMOUNT_DR),
         APP.STATUS,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ARD.LINE_ID ,
         TO_CHAR(NULL), --ZX_DET.ENTITY_CODE,
   APP.GL_POSTED_DATE,
         APP.GL_DATE,
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

 L_TABLE_LIST_AR_APP   :=
    ' FROM   '||
    ' GL_CODE_COMBINATIONS       CC, '||
    ' FND_DOCUMENT_SEQUENCES    SEQ, '||
    L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
    L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
    ' AR_PAYMENT_SCHEDULES_ALL   PAY, '||
    ' ZX_RATES_VL           ZX_RATE, '  ||
    ' ZX_TAXES_B    ZX_TAX, '||
    ' RA_CUSTOMER_TRX_ALL        ZX_DET, '||
 --   ' ZX_PARTY_TAX_PROFILE     PTP, '||
    ' AR_CASH_RECEIPTS_ALL       ARCS, '||
    L_TBL_AR_RECEIVABLE_APPS_ALL || ' APP ';

L_WHERE_CLAUSE_AR_APP   :=
' WHERE zx_det.customer_trx_id  = app.applied_customer_trx_id '||
' AND NVL(ZX_DET.APPLICATION_ID,222)    = 222 '||
--' AND zx_det.tax_reporting_flag = ''Y'''||
--' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
' AND app.cash_receipt_id = ARcs.cash_receipt_id '||
' AND app.status = ''APP'' ' ||
' AND nvl(ARcs.confirmed_flag, ''Y'') = ''Y'' '||
' AND pay.payment_schedule_id = app.payment_schedule_id '||
' AND ( (
                         ard.source_type = ''EDISC''
                         and (ardtax.source_type_secondary = ''EDISC''
                              or ardtax.source_type = ''EDISC_NON_REC_TAX'')
        )
        OR
        (
                         ard.source_type = ''REC''
                         and ardtax.source_type_secondary in (''PAYMENT'',
                         ''ASSIGNMENT'',''RECONCILE'',''ASSIGNMENT_RECONCILE'')
        )
        OR
        (
                         ard.source_type = ''UNEDISC''
                         and (ardtax.source_type_secondary = ''UNEDISC''
                              or ardtax.source_type = ''UNEDISC_NON_REC_TAX'')
        )
      ) '||
' AND ard.source_id = app.receivable_application_id '||
' AND ard.source_table = ''RA'' '||
' AND ardtax.source_id = app.receivable_application_id '||
' AND ardtax.source_type in (''TAX'',''DEFERRED_TAX'', '||
'                 ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'') '||
' AND ardtax.source_table = ''RA'' '||
' AND nvl(ardtax.tax_link_id,0) = nvl(ard.tax_link_id,0) '||
' AND ardtax.tax_code_id = ZX_RATE.TAX_RATE_ID '||
' AND zx_tax.tax = zx_rate.tax
  AND zx_tax.TAX_REGIME_CODE = zx_rate.TAX_REGIME_CODE
  AND zx_tax.CONTENT_OWNER_ID = zx_rate.CONTENT_OWNER_ID '||
' AND ard.code_combination_id = cc.code_combination_id '||
' AND arcs.doc_sequence_id = seq.doc_sequence_id (+) '
       || L_WHERE_REPORTING_CONTEXT_CS
       || L_WHERE_LEDGER_ID_APP
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_APP
       || L_WHERE_TRX_CLASS_APP_DISC
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_APP
       || L_WHERE_GL_TRX_DATE_APP
       || L_WHERE_TRX_DATE_APP
       || L_WHERE_GL_DATE_APP
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE_APP
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE_OTH
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE_APP
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
       || L_WHERE_ACCOUNTING_STATUS_APP
 ||' GROUP BY '||
     'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID, '||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,
             DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
            ' ''APP'',
             APP.RECEIVABLE_APPLICATION_ID, '||
            '''APP'',
             ZX_DET.CUSTOMER_TRX_ID, '||
             --'ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
             --'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
           -- 'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
           -- 'ZX_DET.ADJUSTED_DOC_NUMBER, --Applied_doc_number
             'ZX_DET.TRX_NUMBER,'||
             'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''UNEDISC_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''EDISC_NON_REC_TAX'',''NON-RECOVERABLE'',NULL), ' || -- REG. TYPE CODE
             'ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,'||
             'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'', ''Y'',''N''), ' ||
           -- 'ZX_DET.INTERNAL_ORGANIZATION_ID,
           -- ARCS.REVERSAL_DATE,
            ' ZX_DET.ORG_ID,
             APP.AMOUNT_APPLIED,
             APP.TAX_APPLIED,
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
            -- ZX_DET.TRX_DESCRIPTION,
             ARCS.DOC_SEQUENCE_VALUE,
             ARCS.RECEIPT_DATE,
             ARCS.DEPOSIT_DATE,
          --   ZX_DET.TRX_DUE_DATE,
           --  ZX_DET.TRX_SHIPPING_DATE,
            -- ZX_DET.TRX_COMMUNICATED_DATE,
             ARCS.CURRENCY_CODE,
             ARCS.EXCHANGE_RATE_TYPE,
             ARCS.EXCHANGE_DATE,
             ARCS.EXCHANGE_RATE,
             ZX_DET.FOB_POINT,
             ZX_DET.WAYBILL_NUMBER,'||
             'ZX_DET.APPLICATION_ID,
       ZX_RATE.DESCRIPTION,
       ARD.REF_CUSTOMER_TRX_LINE_ID,
       ZX_DET.TRX_DATE,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_RATE.TAX,
              ZX_DET.SHIP_TO_SITE_USE_ID,
              ZX_DET.BILL_TO_SITE_USE_ID,
              ZX_DET.SHIP_TO_CUSTOMER_ID,
              ZX_DET.BILL_TO_CUSTOMER_ID,
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
         APP.STATUS,
         ARD.LINE_ID ,
         ARDTAX.TAX_LINK_ID,
   APP.GL_POSTED_DATE,
   DECODE(APP.GL_POSTED_DATE, NULL, ''N'', ''Y''),
         APP.GL_DATE';

  /*L_COLUMN_LIST_AR_APP :=
      'SELECT '||
           'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID, '||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,
             TO_NUMBER(NULL), '||
             'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
             'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
            ' ''APP'',
             APP.RECEIVABLE_APPLICATION_ID, '||
            '''APP'','||
             'ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
             'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.ADJUSTED_DOC_NUMBER, --Applied_doc_number
             ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''UNEDISC_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''EDISC_NON_REC_TAX'',''NON-RECOVERABLE'',NULL), ' || -- REG. TYPE CODE
            'TO_NUMBER(NULL),
             TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL),'||
            'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0)-nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||-- Total Amount
            'TO_NUMBER(NULL), ' || -- tax_line_id
            'sum(nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
            'sum(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)) ,'||
            'TO_NUMBER(NULL), '||
            'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)) ,'||
            'sum(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 17
             'TO_NUMBER(NULL),
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
             'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'', ''Y'',''N''), ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,
            TO_NUMBER(NULL), ' ||
        --    'ARCS.REVERSAL_DATE,     --Check this column
            ' APP.AMOUNT_APPLIED,
             APP.TAX_APPLIED,
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
             ZX_DET.TRX_DESCRIPTION,
             ARCS.DOC_SEQUENCE_VALUE,
             ARCS.RECEIPT_DATE,
             ARCS.DEPOSIT_DATE,
             ZX_DET.TRX_DUE_DATE,
             ZX_DET.TRX_SHIPPING_DATE,
             ZX_DET.TRX_COMMUNICATED_DATE,
             ARCS.CURRENCY_CODE,
             ARCS.EXCHANGE_RATE_TYPE,
             ARCS.EXCHANGE_DATE,
             ARCS.EXCHANGE_RATE,
             TO_CHAR(NULL),
             ZX_DET.FOB_POINT,
             ZX_DET.TRX_WAYBILL_NUMBER,
             ZX_DET.BATCH_SOURCE_NAME,'||
            'TO_CHAR(NULL),'|| -- TRX_TYPE_DESCRIPTION
            -- 'ZX_RATE.RATE_TYPE_CODE,
      'ZX_RATE.DESCRIPTION,
            TO_CHAR(NULL),
            TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
              to_number(NULL),      --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
         ZX_DET.ASSESSABLE_VALUE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),    --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),    --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),    --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),    --ZX_DET.TAX_INVOICE_DATE,
              TO_NUMBER(NULL),    --ZX_DET.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              ZX_RATE.TAX,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,'||
         'ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER
             'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
            'DECODE(APP.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,'||     -- POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
         sum(ARDTAX.ACCTD_AMOUNT_CR),
         sum(ARDTAX.ACCTD_AMOUNT_DR),
         APP.STATUS,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ARD.LINE_ID ,
         ZX_DET.ENTITY_CODE,
   APP.GL_POSTED_DATE,
         APP.GL_DATE,
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

-- P_COLUMN_LIST_AR_APP := L_COLUMN_LIST_AR_APP;

 L_TABLE_LIST_AR_APP   :=
    ' FROM   '||
    ' GL_CODE_COMBINATIONS       CC, '||
--    ' HZ_CUST_SITE_USES_ALL     TPSU_BILL, '||
--    ' HZ_CUST_SITE_USES_ALL     TPSU_SHIP, '||
--    ' RA_BATCH_SOURCES_ALL      BS, '||
    ' FND_DOCUMENT_SEQUENCES    SEQ, '||
--    ' AR_DISTRIBUTIONS_ALL       ARD, '||
--    ' AR_DISTRIBUTIONS_ALL       ARDTAX, '||
    L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
    L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
    ' AR_PAYMENT_SCHEDULES_ALL   PAY, '||
    ' ZX_RATES_VL           ZX_RATE, '  ||
       ' ZX_TAXES_B    ZX_TAX, '||
--    ' ZX_EXEMPTIONS         ZX_EX, ' ||
    ' ZX_LINES_DET_FACTORS        ZX_DET, '||
    ' ZX_PARTY_TAX_PROFILE     PTP, '||
    L_TBL_NAME_CUSTOMER_TRX_ALL || ' TRXH, ' ||
    ' AR_CASH_RECEIPTS_ALL       ARCS, '||
--    ' AR_RECEIVABLE_APPLICATIONS_ALL APP ';
    L_TBL_AR_RECEIVABLE_APPS_ALL || ' APP ';

--P_TABLE_LIST_AR_APP := L_TABLE_LIST_AR_APP;

L_WHERE_CLAUSE_AR_APP   :=
' WHERE zx_det.trx_id  = app.applied_customer_trx_id '||
   ' AND ZX_DET.APPLICATION_ID    = 222 '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
  ' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
' AND   app.cash_receipt_id = ARcs.cash_receipt_id '||
' AND   app.status = ''APP'' ' ||
' AND   nvl(ARcs.confirmed_flag, ''Y'') = ''Y'' '||
--' AND   app.set_of_books_id = '||to_char(G_LEDGER_ID)||' '||
' AND   trxh.complete_flag = ''Y'' '||
' AND   trxh.customer_trx_id    = zx_det.trx_id '||
' AND   pay.payment_schedule_id = app.payment_schedule_id '||
' AND ( (
                         ard.source_type = ''EDISC''
                         and (ardtax.source_type_secondary = ''EDISC''
                              or ardtax.source_type = ''EDISC_NON_REC_TAX'')
        )
        OR
        (
                         ard.source_type = ''REC''
                         and ardtax.source_type_secondary in (''PAYMENT'',
                         ''ASSIGNMENT'',''RECONCILE'',''ASSIGNMENT_RECONCILE'')
        )
        OR
        (
                         ard.source_type = ''UNEDISC''
                         and (ardtax.source_type_secondary = ''UNEDISC''
                              or ardtax.source_type = ''UNEDISC_NON_REC_TAX'')
        )
      ) '||
' AND   ard.source_id = app.receivable_application_id '||
' AND   ard.source_table = ''RA'' '||
' AND   ardtax.source_id = app.receivable_application_id '||
' AND   ardtax.source_type in (''TAX'',''DEFERRED_TAX'', '||
'                   ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'') '||
' AND   ardtax.source_table = ''RA'' '||
' AND   nvl(ardtax.tax_link_id,0) = nvl(ard.tax_link_id,0) '||
--' AND   ZX_LINE.TAX_EXEMPTION_ID = ZX_EX.TAX_EXEMPTION_ID '||
' AND   ardtax.tax_code_id = ZX_RATE.TAX_RATE_ID '||
  ' AND  zx_tax.tax = zx_rate.tax
    and zx_tax.TAX_REGIME_CODE = zx_rate.TAX_REGIME_CODE
    and zx_tax.CONTENT_OWNER_ID = zx_rate.CONTENT_OWNER_ID '||
' AND   ard.code_combination_id = cc.code_combination_id '||
' AND   arcs.doc_sequence_id = seq.doc_sequence_id (+) '
       || L_WHERE_REPORTING_CONTEXT_TRXH
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_APP
       || L_WHERE_TRX_CLASS_APP_DISC
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_APP
       ||L_WHERE_GL_TRX_DATE_APP
       || L_WHERE_TRX_DATE_APP
       || L_WHERE_GL_DATE_APP
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE_APP
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
 ||' GROUP BY '||
     'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID, '||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,
             DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
            ' ''APP'',
             APP.RECEIVABLE_APPLICATION_ID, '||
            '''APP'','||
             'ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
             'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.ADJUSTED_DOC_NUMBER, --Applied_doc_number
             ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''UNEDISC_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''EDISC_NON_REC_TAX'',''NON-RECOVERABLE'',NULL), ' || -- REG. TYPE CODE
             'ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,'||
             'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'', ''Y'',''N''), ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,
           -- ARCS.REVERSAL_DATE,
             APP.AMOUNT_APPLIED,
             APP.TAX_APPLIED,
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
             ZX_DET.TRX_DESCRIPTION,
             ARCS.DOC_SEQUENCE_VALUE,
             ARCS.RECEIPT_DATE,
             ARCS.DEPOSIT_DATE,
             ZX_DET.TRX_DUE_DATE,
             ZX_DET.TRX_SHIPPING_DATE,
             ZX_DET.TRX_COMMUNICATED_DATE,
             ARCS.CURRENCY_CODE,
             ARCS.EXCHANGE_RATE_TYPE,
             ARCS.EXCHANGE_DATE,
             ARCS.EXCHANGE_RATE,
             ZX_DET.FOB_POINT,
             ZX_DET.TRX_WAYBILL_NUMBER,
             ZX_DET.BATCH_SOURCE_NAME,'||
            -- 'ZX_RATE.RATE_TYPE_CODE,
             'ZX_DET.APPLICATION_ID,
       ZX_RATE.DESCRIPTION,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
            --  RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
         ZX_DET.ASSESSABLE_VALUE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
             -- ZX_LINE.EXCEPTION_RATE,
              --ZX_LINE.EXEMPT_RATE_MODIFIER,
             -- ZX_RATE.RECOVERY_RATE_CODE,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              ZX_RATE.TAX,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,'||
         'ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
             ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,'||
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_DET.LINE_AMT,
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
         APP.STATUS,
         ARD.LINE_ID ,
         ZX_DET.entity_code,
   APP.GL_POSTED_DATE,
   DECODE(APP.GL_POSTED_DATE, NULL, ''N'', ''Y''),
         APP.GL_DATE'; */

    ELSIF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN

IF G_REPORT_NAME = 'ZXXVATRN' THEN
    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-5 For AR Applications :Reconciliation Report:  Distribution Level');
    END IF;

  L_COLUMN_LIST_AR_APP :=
      'SELECT DISTINCT '||
            'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID, '||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,
             TO_NUMBER(NULL), '||
             'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
       'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
            ' ''APP'',
             APP.RECEIVABLE_APPLICATION_ID, '||
            ' ''APP'','||
             'TO_CHAR(NULL),'||  --ZX_DET.ADJUSTED_DOC_ENTITY_CODE,   --INV
             'TO_NUMBER(NULL) ,'|| --ZX_DET.ADJUSTED_DOC_TRX_ID--Applied_to_trx_id--adjusted_doc_id in eTax
            'TO_CHAR(NULL),'||   --ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE  -- INV
            'ARCS.RECEIPT_NUMBER,'||   --ZX_DET.ADJUSTED_DOC_NUMBER --Applied_doc_number
            'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''UNEDISC_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''EDISC_NON_REC_TAX'',''NON-RECOVERABLE'',NULL), ' || -- REG. TYPE CODE
            'TO_NUMBER(NULL),
             TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL) ,'||
            'TO_NUMBER(NULL), ' ||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'|| -- Total Amount
            'TO_NUMBER(NULL),
            (nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
            '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)),
             TO_NUMBER(NULL), '||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 20
            'ARD.LINE_ID,
            TO_NUMBER(NULL),
            TO_CHAR(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
            'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N''),'  ||
            'ZX_DET.ORG_ID,
            TO_NUMBER(NULL), ' ||
           -- 'ARCS.REVERSAL_DATE,
             'APP.AMOUNT_APPLIED,
             APP.TAX_APPLIED,
             TO_NUMBER(NULL),       --ZX_RATE.PERCENTAGE_RATE,
             TO_CHAR(NULL),          --ZX_RATE.TAX_RATE_CODE,
             TO_CHAR(NULL),          --ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
             TO_CHAR(NULL),          --ZX_TAX.TAX_TYPE_CODE,
             TO_CHAR(NULL),          --ZX_RATE.TAX_RATE_NAME,
             ZX_DET.TRX_NUMBER,
              TO_CHAR(NULL),   --ZX_DET.TRX_DESCRIPTION,
              ARCS.DOC_SEQUENCE_VALUE,
              ARCS.RECEIPT_DATE,
              ARCS.DEPOSIT_DATE,
              TO_DATE(NULL),    --ZX_DET.TRX_DUE_DATE,
              TO_DATE(NULL),    --ZX_DET.TRX_SHIPPING_DATE,
              TO_DATE(NULL),    --ZX_DET.TRX_COMMUNICATED_DATE,
              ARCS.CURRENCY_CODE,
              ARCS.EXCHANGE_RATE_TYPE,
              ARCS.EXCHANGE_DATE,
              ARCS.EXCHANGE_RATE,
              TO_CHAR(NULL),
              ZX_DET.FOB_POINT,
              ZX_DET.WAYBILL_NUMBER,
              BAT.NAME,
              TO_CHAR(NULL),
             -- ZX_RATE.RATE_TYPE_CODE,
        TO_CHAR(NULL),
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              NVL(ZX_DET.APPLICATION_ID,222),
              TO_CHAR(NULL),    --ZX_DET.DOC_EVENT_STATUS,
              TO_CHAR(NULL),    --ZX_DET.APPLICATION_DOC_STATUS,
              TO_NUMBER(NULL),    --ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              TO_NUMBER(NULL),    --ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              TO_NUMBER(NULL),    --ZX_DET.PRECISION,
              TO_NUMBER(NULL),   --RECEIPT_CLASS_ID,
              TO_NUMBER(NULL),    --ZX_DET.APPLIED_TO_APPLICATION_ID,
              TO_NUMBER(NULL),    --ZX_DET.APPLIED_TO_TRX_LINE_ID,
              TO_CHAR(NULL),    --ZX_DET.APPLIED_TO_ENTITY_CODE,
              TO_NUMBER(NULL),    --ZX_DET.APPLIED_TO_TRX_ID,
              TO_CHAR(NULL),    --ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              TO_CHAR(NULL),    --ZX_DET.APPLIED_TO_TRX_NUMBER,
              TO_NUMBER(NULL),    --ZX_DET.RELATED_DOC_APPLICATION_ID,
              TO_DATE(NULL),    --ZX_DET.RELATED_DOC_DATE,
              TO_CHAR(NULL),    --ZX_DET.RELATED_DOC_ENTITY_CODE,
              TO_CHAR(NULL),    --ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              TO_CHAR(NULL),    --ZX_DET.RELATED_DOC_NUMBER,
              TO_NUMBER(NULL),    --ZX_DET.RELATED_DOC_TRX_ID,
              TO_NUMBER(NULL),    --ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              TO_DATE(NULL),    --ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              TO_NUMBER(NULL),    --ZX_DET.REF_DOC_APPLICATION_ID,
              TO_CHAR(NULL),    --ZX_DET.REF_DOC_ENTITY_CODE,
              TO_CHAR(NULL),    --ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              TO_NUMBER(NULL),    --ZX_DET.REF_DOC_LINE_ID,
              TO_NUMBER(NULL),    --ZX_DET.REF_DOC_LINE_QUANTITY,
              TO_NUMBER(NULL),    --ZX_DET.REF_DOC_TRX_ID,
              TO_CHAR(NULL),    --ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              TO_CHAR(NULL),    --ZX_DET.DEFAULT_TAXATION_COUNTRY,
              TO_CHAR(NULL),    --ZX_DET.DOCUMENT_SUB_TYPE,
         TO_NUMBER(NULL),    --ZX_DET.ASSESSABLE_VALUE,
              TO_CHAR(NULL),    --ZX_DET.TRX_BUSINESS_CATEGORY,
              TO_CHAR(NULL),    --ZX_DET.LINE_INTENDED_USE,
              TO_CHAR(NULL),    --ZX_DET.PRODUCT_CATEGORY,
              TO_CHAR(NULL),    --ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              TO_NUMBER(NULL),    --ZX_DET.SUPPLIER_EXCHANGE_RATE,
              TO_DATE(NULL),    --ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              TO_CHAR(NULL),    --ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              TO_CHAR(NULL),    --ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),    --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),   --ZX_DET.TAX_INVOICE_DATE,
              TO_CHAR(NULL),    --ZX_DET.TAX_INVOICE_NUMBER,
              TO_CHAR(NULL),    --ZX_RATE.TAX_JURISDICTION_CODE,
              TO_CHAR(NULL),    --ZX_RATE.TAX_REGIME_CODE,
              TO_CHAR(NULL),    --ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              TO_CHAR(NULL),    --ZX_RATE.TAX,
              TO_NUMBER(NULL),    --ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         TO_NUMBER(NULL),    --ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         TO_NUMBER(NULL),    --ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_SITE_USE_ID,  --ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_SITE_USE_ID,   --ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_TO_CUSTOMER_ID,    --ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_TO_CUSTOMER_ID,   --ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'TO_NUMBER(NULL),    -- ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),    --ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              TO_CHAR(NULL),    --ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
              'DECODE(APP.POSTING_CONTROL_ID,-3, ''N'', ''Y'') POSTED_FLAG,'||     --POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
        'TO_NUMBER(NULL),    -- ZX_DET.EVENT_CLASS_MAPPING_ID,
         TO_CHAR(NULL),    --ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         TO_NUMBER(NULL),    --ZX_DET.POA_LOCATION_ID,
         TO_NUMBER(NULL),    --ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         TO_NUMBER(NULL),    --ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
         ARDTAX.ACCTD_AMOUNT_CR,
         ARDTAX.ACCTD_AMOUNT_DR,
         APP.STATUS,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ARDTAX.LINE_ID ,
         TO_CHAR(NULL),       --zx_det.entity_code,
   APP.GL_POSTED_DATE,
         APP.GL_DATE,
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

--P_COLUMN_LIST_AR_APP := L_COLUMN_LIST_AR_APP;

L_TABLE_LIST_AR_APP   :=
    ' FROM GL_CODE_COMBINATIONS CC,  '||
    'FND_DOCUMENT_SEQUENCES     SEQ, '||
    'AR_DISTRIBUTIONS_ALL       ARD, '||
    'AR_DISTRIBUTIONS_ALL       ARDTAX, '||
    'AR_PAYMENT_SCHEDULES_ALL   PAY, '||
    'RA_CUSTOMER_TRX_ALL         ZX_DET, '||
    'RA_BATCH_SOURCES_ALL        BAT, '||
    'AR_CASH_RECEIPTS_ALL       ARCS, '||
    'AR_RECEIVABLE_APPLICATIONS_ALL APP ';

--P_TABLE_LIST_AR_APP := L_TABLE_LIST_AR_APP;

L_WHERE_CLAUSE_AR_APP   :=
' WHERE zx_det.customer_trx_id = app.applied_customer_trx_id '||
   ' AND NVL(ZX_DET.APPLICATION_ID,222)    = 222 '||
' AND   app.cash_receipt_id = ARcs.cash_receipt_id '||
' AND   app.status = ''APP'' ' ||
' AND   app.display = ''Y'' ' ||
' AND   nvl(ARcs.confirmed_flag, ''Y'') = ''Y'' '||
' AND   ZX_DET.batch_source_id = bat.batch_source_id '||
' AND   ZX_DET.ORG_ID = BAT.ORG_ID '||
--' AND   app.set_of_books_id = '||to_char(G_LEDGER_ID) ||' '||
' AND   pay.payment_schedule_id = app.payment_schedule_id '||
--' AND   cc.chart_of_accounts_id = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
' AND ( (
                 ard.source_type = ''EDISC''
                         and (ardtax.source_type_secondary = ''EDISC''
                              or ardtax.source_type = ''EDISC_NON_REC_TAX'')
        )
        OR
        (
                         ard.source_type = ''REC''
                         and ard.ref_account_class <> ''TAX''
                         and ardtax.source_type_secondary  in (''PAYMENT'',
                         ''ASSIGNMENT'',''RECONCILE'',''ASSIGNMENT_RECONCILE'')
        )
        OR
        (
                  ard.source_type = ''UNEDISC''
                         and (ardtax.source_type_secondary = ''UNEDISC''
                              or ardtax.source_type = ''UNEDISC_NON_REC_TAX'')
        )
      ) '||
' AND   ard.source_id = app.receivable_application_id '||
' AND   ard.source_table = ''RA'' '||
' AND   ardtax.code_combination_id = cc.code_combination_id '||
' AND   ardtax.source_id = app.receivable_application_id '||
' AND   ardtax.source_type in (''TAX'',''DEFERRED_TAX'', '||
'                   ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'') '||
' AND   ardtax.source_table = ''RA'' '||
' AND   nvl(ardtax.tax_link_id,0) = nvl(ard.tax_link_id,0) '||
' AND   ARcs.doc_sequence_id = seq.doc_sequence_id (+) '
       || L_WHERE_REPORTING_CONTEXT_CS
       || L_WHERE_LEDGER_ID_APP
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_APP
       || L_WHERE_TRX_CLASS_APP_DISC
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_APP
       || L_WHERE_GL_TRX_DATE_APP
       || L_WHERE_TRX_DATE_APP
       || L_WHERE_GL_DATE_APP
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE_APP
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
       || L_WHERE_GL_FLEX
       || L_WHERE_ACCOUNTING_STATUS_APP;

ELSE
    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-5-1 For AR Applications : Distribution Level');
    END IF;

  L_COLUMN_LIST_AR_APP :=
      'SELECT DISTINCT '||
            'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID, '||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,
             TO_NUMBER(NULL), '||
             'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
       'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
            ' ''APP'',
             APP.RECEIVABLE_APPLICATION_ID, '||
            ' ''APP'','||
             'ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
             'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.TRX_NUMBER,'||  --Applied_doc_number
            'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''UNEDISC_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''EDISC_NON_REC_TAX'',''NON-RECOVERABLE'',NULL), ' || -- REG. TYPE CODE
            'TO_NUMBER(NULL),
             TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL) ,'||
            'TO_NUMBER(NULL), ' ||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'|| -- Total Amount
            'TO_NUMBER(NULL),
            (nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
            '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)),
             TO_NUMBER(NULL), '||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 20
            'ARD.LINE_ID,
            TO_NUMBER(NULL),
            TO_CHAR(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
            'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N''),'  ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,
            TO_NUMBER(NULL), ' ||
           -- 'ARCS.REVERSAL_DATE,
             'APP.AMOUNT_APPLIED,
             APP.TAX_APPLIED,
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
              ZX_DET.TRX_DESCRIPTION,
              ARCS.DOC_SEQUENCE_VALUE,
              ARCS.RECEIPT_DATE,
              ARCS.DEPOSIT_DATE,
              ZX_DET.TRX_DUE_DATE,
              ZX_DET.TRX_SHIPPING_DATE,
              ZX_DET.TRX_COMMUNICATED_DATE,
              ARCS.CURRENCY_CODE,
              ARCS.EXCHANGE_RATE_TYPE,
              ARCS.EXCHANGE_DATE,
              ARCS.EXCHANGE_RATE,
              TO_CHAR(NULL),
              ZX_DET.FOB_POINT,
              ZX_DET.TRX_WAYBILL_NUMBER,
             ZX_DET.BATCH_SOURCE_NAME,
              TO_CHAR(NULL),
             -- ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.DESCRIPTION,
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
             ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
              TO_NUMBER(NULL),   --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
         ZX_DET.ASSESSABLE_VALUE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),    --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),   --ZX_DET.TAX_INVOICE_DATE,
              TO_CHAR(NULL),    --ZX_DET.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              ZX_RATE.TAX,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
           'DECODE(APP.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,'||     --POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
         ARDTAX.ACCTD_AMOUNT_CR,
         ARDTAX.ACCTD_AMOUNT_DR,
         APP.STATUS,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ARDTAX.LINE_ID ,
         zx_det.entity_code,
   APP.GL_POSTED_DATE,
         APP.GL_DATE,
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

--P_COLUMN_LIST_AR_APP := L_COLUMN_LIST_AR_APP;

L_TABLE_LIST_AR_APP   :=
    ' FROM GL_CODE_COMBINATIONS CC,  '||
    'FND_DOCUMENT_SEQUENCES     SEQ, '||
    'AR_DISTRIBUTIONS_ALL       ARD, '||
    'AR_DISTRIBUTIONS_ALL       ARDTAX, '||
    'AR_PAYMENT_SCHEDULES_ALL   PAY, '||
    'ZX_RATES_VL        ZX_RATE , '  ||
       ' ZX_TAXES_B    ZX_TAX, '||
    'ZX_LINES_DET_FACTORS         ZX_DET, '||
    ' ZX_PARTY_TAX_PROFILE     PTP, '||
    'AR_CASH_RECEIPTS_ALL       ARCS, '||
    'AR_RECEIVABLE_APPLICATIONS_ALL APP ';

--P_TABLE_LIST_AR_APP := L_TABLE_LIST_AR_APP;

L_WHERE_CLAUSE_AR_APP   :=
' WHERE zx_det.trx_id = app.applied_customer_trx_id '||
   ' AND ZX_DET.APPLICATION_ID    = 222 '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
  ' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
' AND   app.cash_receipt_id = ARcs.cash_receipt_id '||
' AND   app.status = ''APP'' ' ||
' AND   app.display = ''Y'' ' ||
' AND   nvl(ARcs.confirmed_flag, ''Y'') = ''Y'' '||
--' AND   app.set_of_books_id = '||to_char(G_LEDGER_ID) ||' '||
' AND   pay.payment_schedule_id = app.payment_schedule_id '||
--' AND   cc.chart_of_accounts_id = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
' AND ( (
                         ard.source_type = ''EDISC''
                         and (ardtax.source_type_secondary = ''EDISC''
                              or ardtax.source_type = ''EDISC_NON_REC_TAX'')
        )
        OR
        (
                         ard.source_type = ''REC''
                         and ard.ref_account_class <> ''TAX''
                         and ardtax.source_type_secondary  in (''PAYMENT'',
                         ''ASSIGNMENT'',''RECONCILE'',''ASSIGNMENT_RECONCILE'')
        )
        OR
        (
                         ard.source_type = ''UNEDISC''
                         and (ardtax.source_type_secondary = ''UNEDISC''
                              or ardtax.source_type = ''UNEDISC_NON_REC_TAX'')
        )
      ) '||
' AND   ard.source_id = app.receivable_application_id '||
' AND   ard.source_table = ''RA'' '||
' AND   ard.code_combination_id = cc.code_combination_id '||
' AND   ardtax.source_id = app.receivable_application_id '||
' AND   ardtax.source_type in (''TAX'',''DEFERRED_TAX'', '||
'                   ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'') '||
' AND   ardtax.source_table = ''RA'' '||
' AND   nvl(ardtax.tax_link_id,0) = nvl(ard.tax_link_id,0) '||
' AND   ardtax.tax_code_id = ZX_RATE.TAX_RATE_ID '||
  ' AND  zx_tax.tax = zx_rate.tax
    and zx_tax.TAX_REGIME_CODE = zx_rate.TAX_REGIME_CODE
    and zx_tax.CONTENT_OWNER_ID = zx_rate.CONTENT_OWNER_ID '||
' AND   ARcs.doc_sequence_id = seq.doc_sequence_id (+) '
       || L_WHERE_REPORTING_CONTEXT_TRXH
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_APP
       || L_WHERE_TRX_CLASS_APP_DISC
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_APP
       || L_WHERE_GL_TRX_DATE_APP
       || L_WHERE_TRX_DATE_APP
       || L_WHERE_GL_DATE_APP
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE_OTH
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE_APP
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
       || L_WHERE_GL_FLEX
       || L_WHERE_ACCOUNTING_STATUS_APP;

      END IF; -- Report Name  -- Reconciliation Report
    END IF; -- G_SUMMARY_LEVEL
  END IF; -- G_TRX_CLASS
-- END IF; -- DEFERRED TAX USED



  --   ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS
  --   ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS
  -- IF L_IS_DEFERRED_TAX_USED = 1 THEN

  IF G_INCLUDE_AR_ADJ_TRX_CLASS IN ('Y', 'ADJUSTMENTS', 'TAX ADJUSTMENTS') THEN
    IF ((UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION'
        OR
        UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE'))
        --AND G_ESL_EU_TRX_TYPE IS NULL)   --Bug 9031051

    THEN

      IF (g_level_procedure >= g_current_runtime_level ) THEN
          FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-6-1 For AR Adjustments : Header or Line Level');
      END IF;

   L_COLUMN_LIST_AR_ADJ :=

      'SELECT DISTINCT '||
            'ADJ.SET_OF_BOOKS_ID,
             ADJ.ADJUSTMENT_ID, '||
            'ADJ.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL), '||
            '''ADJ'','||
            ' ''ADJ'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL), '||
            'TO_CHAR(NULL),
            TO_CHAR(NULL),'||    --INV
            'ADJ.CUSTOMER_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'TO_CHAR(NULL),'||   -- INV
            'ZX_DET.TRX_NUMBER,'||  --Applied_doc_number
            'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''ADJ_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''FINCHRG_NON_REC_TAX'',''NON-RECOVERABLE'',NULL),'|| -- REG. TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL), ' ||
            'sum((nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0))),'||--Total Amount
            'TO_NUMBER(NULL),
            SUM((nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0))),'||
            'sum((nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0))),'||
            'ARDTAX.TAX_LINK_ID, '||  -- Tax Line number populating with tax_link_id
            'sum((nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0))),'||
            'sum((nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0))),'|| -- ar matrix ++ 24
           -- 'to_number(NULL),
             'ard.line_id,
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
            'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N''), ' ||
            'ZX_DET.ORG_ID,'||  -- Org_id
            'TO_NUMBER(NULL), ' ||
           -- 'TO_DATE(NULL),
            'TO_NUMBER(NULL),   --Applied_amount
             TO_NUMBER(NULL),   --tax_amount
             TO_NUMBER(NULL),
             ZX_RATE.TAX_RATE_CODE, '|| -- TO_CHAR(NULL),
             'ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
             to_char(NULL),    --ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ADJ.ADJUSTMENT_NUMBER,
              TO_CHAR(NULL),  --ZX_DET.TRX_DESCRIPTION,
              ADJ.DOC_SEQUENCE_VALUE,
              ADJ.APPLY_DATE,
              TO_DATE(NULL),   --Deposit Date
              TO_DATE(NULL),    --ZX_DET.TRX_DUE_DATE,
              TO_DATE(NULL),    --ZX_DET.TRX_SHIPPING_DATE,
              TO_DATE(NULL),    --ZX_DET.TRX_COMMUNICATED_DATE,
              ZX_DET.INVOICE_CURRENCY_CODE ,
              TO_CHAR(NULL), --ZX_DET.CURRENCY_CONVERSION_TYPE,
              TO_DATE(NULL),   --ZX_DET.CURRENCY_CONVERSION_DATE,
              ZX_DET.EXCHANGE_RATE,  --ZX_DET.CURRENCY_CONVERSION_RATE,
              TO_CHAR(NULL),
              ZX_DET.FOB_POINT,
              ZX_DET.WAYBILL_NUMBER,'||
             'BAT.NAME,
              TYPES.DESCRIPTION,
        to_char(null),
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              NVL(ZX_DET.APPLICATION_ID,222),
              TO_CHAR(NULL),    --ZX_DET.DOC_EVENT_STATUS,
              TO_CHAR(NULL),    --ZX_DET.APPLICATION_DOC_STATUS,
              TO_NUMBER(NULL),  --ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              TO_NUMBER(NULL), --ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              TO_NUMBER(NULL), --ZX_DET.PRECISION,
              TO_NUMBER(NULL), --RECEIPT_CLASS_ID,
              TO_NUMBER(NULL), --ZX_DET.APPLIED_TO_APPLICATION_ID,
              ARD.REF_CUSTOMER_TRX_LINE_ID, --ZX_DET.APPLIED_TO_TRX_LINE_ID,
              TO_CHAR(NULL),  --ZX_DET.APPLIED_TO_ENTITY_CODE,
              TO_NUMBER(NULL), --ZX_DET.APPLIED_TO_TRX_ID,
              TO_CHAR(NULL),   --ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              TO_CHAR(NULL),   --ZX_DET.APPLIED_TO_TRX_NUMBER,
              TO_NUMBER(NULL), --ZX_DET.RELATED_DOC_APPLICATION_ID,
              TO_DATE(NULL),    --ZX_DET.RELATED_DOC_DATE,
              TO_CHAR(NULL),   --ZX_DET.RELATED_DOC_ENTITY_CODE,
              TO_CHAR(NULL),   --ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              TO_CHAR(NULL),   --ZX_DET.RELATED_DOC_NUMBER,
              TO_NUMBER(NULL), --ZX_DET.RELATED_DOC_TRX_ID,
              TO_NUMBER(NULL),'|| --ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              'ZX_DET.TRX_DATE,'|| --ZX_DET.ADJUSTED_DOC_DATE,
              '--ZX_DET.BANKING_TP_TAXPAYER_ID,
              TO_NUMBER(NULL), --ZX_DET.REF_DOC_APPLICATION_ID,
              TO_CHAR(NULL),   --ZX_DET.REF_DOC_ENTITY_CODE,
              TO_CHAR(NULL),   --ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              TO_NUMBER(NULL), --ZX_DET.REF_DOC_LINE_ID,
              TO_NUMBER(NULL), --ZX_DET.REF_DOC_LINE_QUANTITY,
              TO_NUMBER(NULL), --ZX_DET.REF_DOC_TRX_ID,
              TO_CHAR(NULL),   --ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              TO_CHAR(NULL),   --ZX_DET.DEFAULT_TAXATION_COUNTRY,
              TO_CHAR(NULL),   --ZX_DET.DOCUMENT_SUB_TYPE,
              TO_NUMBER(NULL), --ZX_DET.ASSESSABLE_VALUE,
              TO_CHAR(NULL),   --ZX_DET.TRX_BUSINESS_CATEGORY,
              TO_CHAR(NULL),   --ZX_DET.LINE_INTENDED_USE,
              TO_CHAR(NULL),   --ZX_DET.PRODUCT_CATEGORY,
              TO_CHAR(NULL),   --ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              TO_NUMBER(NULL), --ZX_DET.SUPPLIER_EXCHANGE_RATE,
              TO_DATE(NULL),   --ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              TO_CHAR(NULL),   --ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              TO_CHAR(NULL),   --ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),   --   ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),  --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),   --ZX_DET.TAX_INVOICE_DATE,
              TO_CHAR(NULL),  --ZX_DET.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              ZX_RATE.TAX,
              TO_NUMBER(NULL),  --ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         TO_NUMBER(NULL),  --ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         TO_NUMBER(NULL),  --ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_SITE_USE_ID,  --ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_SITE_USE_ID,   --ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_TO_CUSTOMER_ID,    --ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_TO_CUSTOMER_ID,   --ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'TO_NUMBER(NULL),   --ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              TO_CHAR(NULL),   --ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE,
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG,
               'DECODE(ADJ.POSTING_CONTROL_ID,-3, ''N'', ''Y'') POSTED_FLAG,'||     --POSTED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
              'TO_NUMBER(NULL),   --ZX_DET.EVENT_CLASS_MAPPING_ID,
         TO_CHAR(NULL),   --ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         TO_NUMBER(NULL),  --ZX_DET.POA_LOCATION_ID,
         TO_NUMBER(NULL),   --ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),'||       -- Default Place of supply type code
         'sum(nvl(ARD.AMOUNT_CR,0) - nvl(ARD.AMOUNT_DR,0)),'|| --ZX_DET.LINE_AMT
         'TO_NUMBER(NULL),
         TO_DATE(NULL),
         TO_CHAR(NULL),
         SUM(ARDTAX.ACCTD_AMOUNT_CR),
         sum(ARDTAX.ACCTD_AMOUNT_DR),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ZX_DET.CUSTOMER_TRX_ID,   --ARDTAX.LINE_ID,
   TO_CHAR(NULL),  --ZX_DET.ENTITY_CODE,
   ADJ.GL_POSTED_DATE,
         ADJ.GL_DATE,
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

  L_TABLE_LIST_AR_ADJ   :=
  ' FROM    ' ||
  '     GL_CODE_COMBINATIONS CC,'||
  '     FND_DOCUMENT_SEQUENCES   SEQ, '||
  '     AR_DISTRIBUTIONS_ALL  ARD, '||
  '     AR_DISTRIBUTIONS_ALL ARDTAX, '||
  '     RA_BATCH_SOURCES_ALL BAT,'||
  '     RA_CUST_TRX_TYPES_ALL TYPES , '||
  '     ZX_RATES_VL ZX_RATE , '||
  '     RA_CUSTOMER_TRX_ALL   ZX_DET,'||
  '     AR_ADJUSTMENTS_ALL ADJ  ';

  L_WHERE_CLAUSE_AR_ADJ   :=

  ' WHERE         ' ||
  ' ADJ.STATUS = ''A'' '||
--  '    AND        ADJ.SET_OF_BOOKS_ID =  '||to_char(G_LEDGER_ID)||' '||
  ' AND        ADJ.CUSTOMER_TRX_ID = ZX_DET.CUSTOMER_TRX_ID '||
   'AND NVL(ZX_DET.APPLICATION_ID,222)    = 222 '||
  ' AND ZX_DET.COMPLETE_FLAG = ''Y''  '||
  ' AND ZX_DET.CUST_TRX_TYPE_ID = TYPES.CUST_TRX_TYPE_ID '||
  ' AND BAT.BATCH_SOURCE_ID(+) = ZX_DET.BATCH_SOURCE_ID '||
  ' AND NVL(TYPES.ORG_ID,-9999) = NVL(ZX_DET.ORG_ID,-9999) '||
  ' AND NVL(BAT.ORG_ID,-9999) = NVL(ZX_DET.ORG_ID,-9999) '||
 -- '    AND        CC.CHART_OF_ACCOUNTS_ID = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
  '    AND        ARD.SOURCE_ID(+) = ARDTAX.SOURCE_ID '||
  '    AND        ARDTAX.SOURCE_ID  = ADJ.ADJUSTMENT_ID '||
  '    AND        nvl(ARDTAX.CODE_COMBINATION_ID,ARD.CODE_COMBINATION_ID)
                             = CC.CODE_COMBINATION_ID '||
  '    AND        nvl(ARD.SOURCE_TYPE,''ADJ'') IN (''ADJ'',''REC'',''FINCHRG'') '||
  '    AND        ARD.SOURCE_TABLE(+) = ''ADJ'' '||
  '    AND        ARDTAX.SOURCE_TABLE = ''ADJ'' '||
  '    AND        DECODE(ADJ.TYPE,''TAX'',ARDTAX.TAX_LINK_ID,ARD.TAX_LINK_ID) = ARDTAX.TAX_LINK_ID '||
  '    AND        ADJ.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID (+) '||
  '   AND       zx_rate.tax_rate_id = ardtax.tax_code_id '
       || L_WHERE_LEDGER_ID_ADJ
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_ADJ
       || L_WHERE_TRX_CLASS_ADJ_FINCHRG
       || L_WHERE_TRX_CLASS_ADJ_TAX
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_ADJ
       || L_WHERE_GL_TRX_DATE_ADJ
       || L_WHERE_TRX_DATE_ADJ
       || L_WHERE_GL_DATE_ADJ
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE_ADJ
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE_OTH
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE_ADJ
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
       || L_WHERE_GL_FLEX
       || L_WHERE_ACCOUNTING_STATUS_ADJ
       || ' GROUP BY ' ||
            'ADJ.SET_OF_BOOKS_ID,
             ADJ.ADJUSTMENT_ID,
             ADJ.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            '''ADJ'','||
            ' ''ADJ'','||
            'ADJ.CUSTOMER_TRX_ID,
            ZX_DET.TRX_NUMBER,
            ZX_DET.BATCH_SOURCE_ID,
            ARDTAX.TAX_CODE_ID,
            DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''ADJ_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''FINCHRG_NON_REC_TAX'',''NON-RECOVERABLE'',NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
          DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N'')
            ' || ' , ' ||
            'ZX_DET.ORG_ID,
             ADJ.ADJUSTMENT_NUMBER,
              ADJ.DOC_SEQUENCE_VALUE,
              ADJ.APPLY_DATE,
              ZX_DET.INVOICE_CURRENCY_CODE ,
              ZX_DET.FOB_POINT,
              ZX_DET.WAYBILL_NUMBER,
              BAT.NAME,
              TYPES.DESCRIPTION,
              NVL(ZX_DET.APPLICATION_ID,222),
              ''AR'','||
              'ARD.REF_CUSTOMER_TRX_LINE_ID,
              ZX_DET.TRX_DATE,
         ZX_DET.SHIP_TO_SITE_USE_ID,
         ZX_DET.BILL_TO_SITE_USE_ID,
         ZX_DET.SHIP_TO_CUSTOMER_ID,
         ZX_DET.BILL_TO_CUSTOMER_ID,'||
               'DECODE(ADJ.POSTING_CONTROL_ID,-3, ''N'', ''Y''),'||
         'ZX_DET.CUSTOMER_TRX_ID,
   ADJ.GL_POSTED_DATE,
              ZX_RATE.TAX_JURISDICTION_CODE,
             ZX_RATE.TAX_RATE_NAME,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_RATE.tax,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
            ard.line_id,
            ardtax.tax_link_id,
         ADJ.GL_DATE,
         ZX_DET.EXCHANGE_RATE';
--   P_WHERE_CLAUSE_AR_ADJ := L_WHERE_CLAUSE_AR_ADJ;


    ELSIF  UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN

   -- IF G_REPORT_NAME = 'ZXXVATRN' THEN
         IF (g_level_procedure >= g_current_runtime_level ) THEN
            FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-7-1 For AR Adjustments - Distributions Level');
         END IF;


  L_COLUMN_LIST_AR_ADJ :=

      'SELECT DISTINCT '||
            'ADJ.SET_OF_BOOKS_ID,
             ADJ.ADJUSTMENT_ID, '||
            'ADJ.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL), '||
            '''ADJ'','||
            ' ''ADJ'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL), '||
            'TO_CHAR(NULL),
            TO_CHAR(NULL),'||    --INV
            'TO_NUMBER(NULL),'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'TO_CHAR(NULL),'||   -- INV
            'ZX_DET.TRX_NUMBER,'||  --Applied_doc_number
            'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''ADJ_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''FINCHRG_NON_REC_TAX'',''NON-RECOVERABLE'',NULL),'|| -- REG. TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL), ' ||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||--Total Amount
            'TO_NUMBER(NULL),
            (nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0)),'||
            '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)),'||
            ' ARDTAX.TAX_LINK_ID, '||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 24
            'ARD.LINE_ID,
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
            'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N''), ' ||
            'ZX_DET.ORG_ID,'||  -- Org_id
            'TO_NUMBER(NULL), ' ||
           -- 'TO_DATE(NULL),
            'TO_NUMBER(NULL),   --Applied_amount
             TO_NUMBER(NULL),   --tax_amount
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),   --ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
             TO_CHAR(NULL),   --ZX_TAX.TAX_TYPE_CODE,
             TO_CHAR(NULL), --ZX_RATE.TAX_RATE_NAME,
             ADJ.ADJUSTMENT_NUMBER,
              TO_CHAR(NULL),  --ZX_DET.TRX_DESCRIPTION,
              ADJ.DOC_SEQUENCE_VALUE,
              ADJ.APPLY_DATE,
              TO_DATE(NULL),   --Deposit Date
              TO_DATE(NULL),    --ZX_DET.TRX_DUE_DATE,
              TO_DATE(NULL),    --ZX_DET.TRX_SHIPPING_DATE,
              TO_DATE(NULL),    --ZX_DET.TRX_COMMUNICATED_DATE,
              ZX_DET.INVOICE_CURRENCY_CODE ,
              TO_CHAR(NULL), --ZX_DET.CURRENCY_CONVERSION_TYPE,
              TO_DATE(NULL),   --ZX_DET.CURRENCY_CONVERSION_DATE,
              ZX_DET.EXCHANGE_RATE,  --ZX_DET.CURRENCY_CONVERSION_RATE,
              TO_CHAR(NULL),
              ZX_DET.FOB_POINT,
              ZX_DET.WAYBILL_NUMBER,'||
             'BAT.NAME,
              TYPES.DESCRIPTION,
        TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_NUMBER(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              NVL(ZX_DET.APPLICATION_ID,222),
              TO_CHAR(NULL),    --ZX_DET.DOC_EVENT_STATUS,
              TO_CHAR(NULL),    --ZX_DET.APPLICATION_DOC_STATUS,
              TO_NUMBER(NULL),  --ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              TO_NUMBER(NULL), --ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              TO_NUMBER(NULL), --ZX_DET.PRECISION,
              TO_NUMBER(NULL), --RECEIPT_CLASS_ID,
              TO_NUMBER(NULL), --ZX_DET.APPLIED_TO_APPLICATION_ID,
              TO_NUMBER(NULL), --ZX_DET.APPLIED_TO_TRX_LINE_ID,
              TO_CHAR(NULL),  --ZX_DET.APPLIED_TO_ENTITY_CODE,
              TO_NUMBER(NULL), --ZX_DET.APPLIED_TO_TRX_ID,
              TO_CHAR(NULL),   --ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              TO_CHAR(NULL),   --ZX_DET.APPLIED_TO_TRX_NUMBER,
              TO_NUMBER(NULL), --ZX_DET.RELATED_DOC_APPLICATION_ID,
              TO_DATE(NULL),    --ZX_DET.RELATED_DOC_DATE,
              TO_CHAR(NULL),   --ZX_DET.RELATED_DOC_ENTITY_CODE,
              TO_CHAR(NULL),   --ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              TO_CHAR(NULL),   --ZX_DET.RELATED_DOC_NUMBER,
              TO_NUMBER(NULL), --ZX_DET.RELATED_DOC_TRX_ID,
              TO_NUMBER(NULL), --ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              TO_DATE(NULL), --ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              TO_NUMBER(NULL), --ZX_DET.REF_DOC_APPLICATION_ID,
              TO_CHAR(NULL),   --ZX_DET.REF_DOC_ENTITY_CODE,
              TO_CHAR(NULL),   --ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              TO_NUMBER(NULL), --ZX_DET.REF_DOC_LINE_ID,
              TO_NUMBER(NULL), --ZX_DET.REF_DOC_LINE_QUANTITY,
              TO_NUMBER(NULL), --ZX_DET.REF_DOC_TRX_ID,
              TO_CHAR(NULL),   --ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              TO_CHAR(NULL),   --ZX_DET.DEFAULT_TAXATION_COUNTRY,
              TO_CHAR(NULL),   --ZX_DET.DOCUMENT_SUB_TYPE,
              TO_NUMBER(NULL), --ZX_DET.ASSESSABLE_VALUE,
              TO_CHAR(NULL),   --ZX_DET.TRX_BUSINESS_CATEGORY,
              TO_CHAR(NULL),   --ZX_DET.LINE_INTENDED_USE,
              TO_CHAR(NULL),   --ZX_DET.PRODUCT_CATEGORY,
              TO_CHAR(NULL),   --ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              TO_NUMBER(NULL), --ZX_DET.SUPPLIER_EXCHANGE_RATE,
              TO_DATE(NULL),   --ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              TO_CHAR(NULL),   --ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              TO_CHAR(NULL),   --ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),   --   ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),  --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),   --ZX_DET.TAX_INVOICE_DATE,
              TO_CHAR(NULL),  --ZX_DET.TAX_INVOICE_NUMBER,
              TO_CHAR(NULL),  --ZX_RATE.TAX_JURISDICTION_CODE,
              TO_CHAR(NULL),  --ZX_RATE.TAX_REGIME_CODE,
              TO_CHAR(NULL),  --ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              TO_CHAR(NULL),  --ZX_RATE.TAX,
              TO_NUMBER(NULL),  --ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         TO_NUMBER(NULL),  --ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         TO_NUMBER(NULL),  --ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_SITE_USE_ID,  --ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_SITE_USE_ID,   --ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_TO_CUSTOMER_ID,    --ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_TO_CUSTOMER_ID,   --ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'TO_NUMBER(NULL),   --ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL),  --ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              TO_CHAR(NULL),   --ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE,
              'DECODE(ADJ.UPGRADE_METHOD, ''11I'', ''Y'',''11IMFAR'', ''Y'',''N''),'||     --ZX_LINE.HISTORICAL_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG,
               'DECODE(ADJ.POSTING_CONTROL_ID,-3, ''N'', ''Y'') POSTED_FLAG,'||     --POSTED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
              'TO_NUMBER(NULL),   --ZX_DET.EVENT_CLASS_MAPPING_ID,
         TO_CHAR(NULL),   --ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         TO_NUMBER(NULL),  --ZX_DET.POA_LOCATION_ID,
         TO_NUMBER(NULL),   --ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         TO_NUMBER(NULL), --ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),
         TO_DATE(NULL),
         TO_CHAR(NULL),
         ARDTAX.ACCTD_AMOUNT_CR,
         ARDTAX.ACCTD_AMOUNT_DR,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ARDTAX.LINE_ID,
   TO_CHAR(NULL),  --ZX_DET.ENTITY_CODE,
   ADJ.GL_POSTED_DATE,
         ADJ.GL_DATE,
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

  L_TABLE_LIST_AR_ADJ   :=
  ' FROM    ' ||
  '     GL_CODE_COMBINATIONS CC,'||
  '     FND_DOCUMENT_SEQUENCES   SEQ, '||
  '     AR_DISTRIBUTIONS_ALL  ARD, '||
  '     AR_DISTRIBUTIONS_ALL ARDTAX, '||
  '     RA_BATCH_SOURCES_ALL BAT,'||
  '     RA_CUST_TRX_TYPES_ALL TYPES , '||
  '     RA_CUSTOMER_TRX_ALL   ZX_DET,'||
  '     AR_ADJUSTMENTS_ALL ADJ  ';

  L_WHERE_CLAUSE_AR_ADJ   :=

  ' WHERE         ' ||
  ' ADJ.STATUS = ''A'' '||
--  '    AND        ADJ.SET_OF_BOOKS_ID =  '||to_char(G_LEDGER_ID)||' '||
  ' AND        ADJ.CUSTOMER_TRX_ID = ZX_DET.CUSTOMER_TRX_ID '||
   'AND NVL(ZX_DET.APPLICATION_ID,222)    = 222 '||
  ' AND ZX_DET.COMPLETE_FLAG = ''Y''  '||
  ' AND ZX_DET.CUST_TRX_TYPE_ID = TYPES.CUST_TRX_TYPE_ID '||
  ' AND BAT.BATCH_SOURCE_ID(+) = ZX_DET.BATCH_SOURCE_ID '||
  ' AND NVL(TYPES.ORG_ID,-9999) = NVL(ZX_DET.ORG_ID,-9999) '||
  ' AND NVL(BAT.ORG_ID,-9999) = NVL(ZX_DET.ORG_ID,-9999) '||
 -- '    AND        CC.CHART_OF_ACCOUNTS_ID = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
  '    AND        ARD.SOURCE_ID(+) = ARDTAX.SOURCE_ID '||
  '    AND        ARDTAX.SOURCE_ID  = ADJ.ADJUSTMENT_ID '||
  '    AND        nvl(ARDTAX.CODE_COMBINATION_ID,ARD.CODE_COMBINATION_ID)
                             = CC.CODE_COMBINATION_ID '||
  '    AND        nvl(ARD.SOURCE_TYPE,''ADJ'') IN (''ADJ'',''REC'',''FINCHRG'') '||
  '    AND        ARD.SOURCE_TABLE(+) = ''ADJ'' '||
  '    AND        (ARD.REF_ACCOUNT_CLASS IS NULL OR '||
  '                 ARD.REF_ACCOUNT_CLASS <> ''TAX'') '||
  '    AND        ARDTAX.SOURCE_TABLE = ''ADJ'' '||
  '    AND        DECODE(ADJ.TYPE,''TAX'',ARDTAX.TAX_LINK_ID,ARD.TAX_LINK_ID) = ARDTAX.TAX_LINK_ID '||
  '    AND        ADJ.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID (+) '
       || L_WHERE_LEDGER_ID_ADJ
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_ADJ
       || L_WHERE_TRX_CLASS_ADJ_FINCHRG
       || L_WHERE_TRX_CLASS_ADJ_TAX
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_ADJ
       ||L_WHERE_GL_TRX_DATE_ADJ
       || L_WHERE_TRX_DATE_ADJ
       || L_WHERE_GL_DATE_ADJ
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE_MISC
       || L_WHERE_TAX_JURIS_CODE_ADJ
       --|| L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_MIS
       || L_WHERE_TAX_REGIME_CODE_ADJ
       || L_WHERE_TAX_ADJ
       || L_WHERE_TAX_STATUS_CODE_ADJ
       || L_WHERE_TAX_RATE_CODE_OTH
       || L_WHERE_TAX_TYPE_CODE_ADJ
       || L_WHERE_CURRENCY_CODE_ADJ
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
       || L_WHERE_GL_FLEX
       || L_WHERE_ACCOUNTING_STATUS_ADJ;

    /*ELSE
         IF (g_level_procedure >= g_current_runtime_level ) THEN
            FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-7-1-1 For AR Adjustments : Distributions Level');
         END IF;


  L_COLUMN_LIST_AR_ADJ :=

      'SELECT DISTINCT '||
            'ADJ.SET_OF_BOOKS_ID,
             ADJ.ADJUSTMENT_ID, '||
            'ADJ.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL), '||
            '''ADJ'','||
            ' ''ADJ'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL), '||
            'TO_CHAR(NULL),
            ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
            'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.ADJUSTED_DOC_NUMBER,'||  --Applied_doc_number
            'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''ADJ_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''FINCHRG_NON_REC_TAX'',''NON-RECOVERABLE'',NULL),'|| -- REG. TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL), ' ||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||--Total Amount
            'TO_NUMBER(NULL),
            (nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0)),'||
            '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)),'||
            ' TO_NUMBER(NULL), '||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 24
            'ARD.LINE_ID,
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
            'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N''), ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,'||  -- Org_id
            'TO_NUMBER(NULL), ' ||
           -- 'TO_DATE(NULL),
            'TO_NUMBER(NULL),   --Applied_amount
             TO_NUMBER(NULL),   --tax_amount
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ADJ.ADJUSTMENT_NUMBER,
              ZX_DET.TRX_DESCRIPTION,
              ADJ.DOC_SEQUENCE_VALUE,
              ADJ.APPLY_DATE,
              TO_DATE(NULL),   --Deposit Date
              ZX_DET.TRX_DUE_DATE,
              ZX_DET.TRX_SHIPPING_DATE,
              ZX_DET.TRX_COMMUNICATED_DATE,
              ZX_DET.TRX_CURRENCY_CODE,
              ZX_DET.CURRENCY_CONVERSION_TYPE,
              ZX_DET.CURRENCY_CONVERSION_DATE,
              ZX_DET.CURRENCY_CONVERSION_RATE,
              TO_CHAR(NULL),
              ZX_DET.FOB_POINT,
              ZX_DET.TRX_WAYBILL_NUMBER,'||
             'ZX_DET.BATCH_SOURCE_NAME,
              ZX_DET.TRX_TYPE_DESCRIPTION,
        ZX_RATE.DESCRIPTION,
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
             ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
              TO_NUMBER(NULL), --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
         ZX_DET.ASSESSABLE_VALUE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),   --   ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),  --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),   --ZX_DET.TAX_INVOICE_DATE,
              TO_CHAR(NULL),  --ZX_DET.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              ZX_RATE.TAX,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE,
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG,
          'DECODE(ADJ.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,'||     --POSTED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
              'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),
         TO_DATE(NULL),
         TO_CHAR(NULL),
         ARDTAX.ACCTD_AMOUNT_CR,
         ARDTAX.ACCTD_AMOUNT_DR,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ARDTAX.LINE_ID,
   ZX_DET.ENTITY_CODE,
   ADJ.GL_POSTED_DATE,
         ADJ.GL_DATE,
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

  L_TABLE_LIST_AR_ADJ   :=
  ' FROM    ' ||
  '     GL_CODE_COMBINATIONS CC,'||
  '     FND_DOCUMENT_SEQUENCES   SEQ, '||
  '     AR_DISTRIBUTIONS_ALL  ARD, '||
  '     AR_DISTRIBUTIONS_ALL ARDTAX, '||
  '     ZX_RATES_VL     ZX_RATE,'||
  '     ZX_TAXES_B    ZX_TAX, '||
  '     ZX_LINES_DET_FACTORS   ZX_DET,'||
  '     ZX_PARTY_TAX_PROFILE     PTP, '||
  '     AR_ADJUSTMENTS_ALL ADJ  ';

  L_WHERE_CLAUSE_AR_ADJ   :=

  ' WHERE         ' ||
  -- apai commented : needs to be removed '               ADJ.TYPE IN (''INVOICE'',''CHARGES'',''LINE'',''TAX'') '||
  '               ADJ.STATUS = ''A'' '||
--  '    AND        ADJ.SET_OF_BOOKS_ID =  '||to_char(G_LEDGER_ID)||' '||
  '    AND        ADJ.CUSTOMER_TRX_ID = ZX_DET.TRX_ID '||
   ' AND ZX_DET.APPLICATION_ID    = 222 '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
  ' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
  ' AND ZX_DET.TAX_EVENT_TYPE_CODE IN (''VALIDATE_FOR_TAX'',''FREEZE_FOR_TAX'') '||
 -- '    AND        CC.CHART_OF_ACCOUNTS_ID = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
  '    AND        ARD.SOURCE_ID(+) = ARDTAX.SOURCE_ID '||
  '    AND        ARDTAX.SOURCE_ID  = ADJ.ADJUSTMENT_ID '||
  '    AND        nvl(ARD.CODE_COMBINATION_ID,ARDTAX.CODE_COMBINATION_ID)
                             = CC.CODE_COMBINATION_ID '||
  '    AND        nvl(ARD.SOURCE_TYPE,''ADJ'') IN (''ADJ'',''REC'',''FINCHRG'') '||
  '    AND        ARD.SOURCE_TABLE(+) = ''ADJ'' '||
  '    AND        ARDTAX.SOURCE_TABLE = ''ADJ'' '||
  '    AND        ARDTAX.TAX_CODE_ID   = ZX_RATE.TAX_RATE_ID(+) '||
  ' AND  zx_tax.tax(+) = zx_rate.tax
    and zx_tax.TAX_REGIME_CODE(+) = zx_rate.TAX_REGIME_CODE
    and zx_tax.CONTENT_OWNER_ID(+) = zx_rate.CONTENT_OWNER_ID '||
  '    AND        ARD.TAX_LINK_ID(+)  = ARDTAX.TAX_LINK_ID '||
  '    AND        ADJ.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID (+) '
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_ADJ
       || L_WHERE_TRX_CLASS_ADJ_FINCHRG
       || L_WHERE_TRX_CLASS_ADJ_TAX
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_ADJ
       ||L_WHERE_GL_TRX_DATE_ADJ
       || L_WHERE_TRX_DATE_ADJ
       || L_WHERE_GL_DATE_ADJ
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
       || L_WHERE_GL_FLEX
       || L_WHERE_ACCOUNTING_STATUS_ADJ;

      END IF;  -- G_REPORT_NAME*/
    END IF; -- G_SUMMARY_LEVEL
  END IF; -- G_TRX_CLASS IS NULL

  -- END IF; -- DEFERRED TAX USED
  --Bug 9031051
 /* IF G_ESL_EU_TRX_TYPE IS NOT NULL AND G_INCLUDE_AR_INV_TRX_CLASS = 'Y' THEN
     IF (g_level_procedure >= g_current_runtime_level ) THEN
          FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-6-2 For AR Adjustments EU VAT');
      END IF;

   L_COLUMN_LIST_AR_ADJ :=

      'SELECT DISTINCT '||
            'ADJ.SET_OF_BOOKS_ID,
             ADJ.ADJUSTMENT_ID, '||
            'ADJ.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL), '||
            '''ADJ'','||
            ' ZX_DET.EVENT_CLASS_CODE,
             TO_CHAR(NULL),
             TO_NUMBER(NULL), '||
            'TO_CHAR(NULL),
            ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
            'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||
            'ZX_DET.TRX_NUMBER,'||  --Applied_doc_number
            'TO_NUMBER(NULL),'|| --ZX_DET.BATCH_SOURCE_ID
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''ADJ_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''FINCHRG_NON_REC_TAX'',''NON-RECOVERABLE'',NULL),'|| -- REG. TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL), ' ||
            'sum((nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0))),'||--Total Amount
            'TO_NUMBER(NULL),
            SUM((nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0))),'||
            'sum((nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0))),'||
            'ARDTAX.TAX_LINK_ID, '||  -- Tax Line number populating with tax_link_id
            'sum((nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0))),'||
            'sum((nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0))),'|| -- ar matrix ++ 24
           -- 'to_number(NULL),
             'ard.line_id,
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
            'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N''), ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,'||  -- Org_id
            'TO_NUMBER(NULL), ' ||
           -- 'TO_DATE(NULL),
            'TO_NUMBER(NULL),   --Applied_amount
             TO_NUMBER(NULL),   --tax_amount
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,' ||
       --      ZX_RATE.RATE_TYPE_CODE,
             'to_char(NULL),'||    --ZX_TAX.TAX_TYPE_CODE,
             'ZX_RATE.TAX_RATE_NAME,
             ADJ.ADJUSTMENT_NUMBER,
              TO_CHAR(NULL),'||  --ZX_DET.TRX_DESCRIPTION,
              'ADJ.DOC_SEQUENCE_VALUE,
              ADJ.APPLY_DATE,
              TO_DATE(NULL), '||  --Deposit Date
              'TO_DATE(NULL), '||   --ZX_DET.TRX_DUE_DATE,
              'TO_DATE(NULL), '||   --ZX_DET.TRX_SHIPPING_DATE,
              'TO_DATE(NULL), '||   --ZX_DET.TRX_COMMUNICATED_DATE,
              'ZX_DET.TRX_CURRENCY_CODE ,'||
              'TO_CHAR(NULL),'|| --ZX_DET.CURRENCY_CONVERSION_TYPE,
              'TO_DATE(NULL),'||   --ZX_DET.CURRENCY_CONVERSION_DATE,
              'TO_NUMBER(NULL),'||  --ZX_DET.CURRENCY_CONVERSION_RATE,
              'TO_CHAR(NULL),
              ZX_DET.FOB_POINT,
              ZX_DET.TRX_WAYBILL_NUMBER,'||
             'TO_CHAR(NULL),'||--BAT.NAME,
              'TO_CHAR(NULL),'||--TYPES.DESCRIPTION,
        'to_char(null),
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              ZX_DET.APPLICATION_ID,
              TO_CHAR(NULL),'||    --ZX_DET.DOC_EVENT_STATUS,
              'TO_CHAR(NULL),'||    --ZX_DET.APPLICATION_DOC_STATUS,
              'TO_NUMBER(NULL),'||  --ZX_DET.ESTABLISHMENT_ID,
              '''AR'','|| --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              'TO_NUMBER(NULL),'|| --ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              'TO_NUMBER(NULL),'|| --ZX_DET.PRECISION,
              'TO_NUMBER(NULL),'|| --RECEIPT_CLASS_ID,
              'TO_NUMBER(NULL),'|| --ZX_DET.APPLIED_TO_APPLICATION_ID,
              'ZX_DET.ADJUSTED_DOC_LINE_ID,'|| --ZX_DET.APPLIED_TO_TRX_LINE_ID,
              'TO_CHAR(NULL),'||  --ZX_DET.APPLIED_TO_ENTITY_CODE,
              'TO_NUMBER(NULL),'|| --ZX_DET.APPLIED_TO_TRX_ID,
              'TO_CHAR(NULL),'||   --ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              'TO_CHAR(NULL),'||   --ZX_DET.APPLIED_TO_TRX_NUMBER,
              'TO_NUMBER(NULL),'|| --ZX_DET.RELATED_DOC_APPLICATION_ID,
              'TO_DATE(NULL), '||   --ZX_DET.RELATED_DOC_DATE,
              'TO_CHAR(NULL),'||   --ZX_DET.RELATED_DOC_ENTITY_CODE,
              'TO_CHAR(NULL), '||   --ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              'TO_CHAR(NULL), '||  --ZX_DET.RELATED_DOC_NUMBER,
              'TO_NUMBER(NULL),'|| --ZX_DET.RELATED_DOC_TRX_ID,
              'ZX_DET.ADJUSTED_DOC_APPLICATION_ID, '||--ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              'ZX_DET.ADJUSTED_DOC_DATE, '||--ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              'TO_NUMBER(NULL), '||--ZX_DET.REF_DOC_APPLICATION_ID,
              'TO_CHAR(NULL), '||  --ZX_DET.REF_DOC_ENTITY_CODE,
              'TO_CHAR(NULL), '||  --ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              'TO_NUMBER(NULL), '||--ZX_DET.REF_DOC_LINE_ID,
              'TO_NUMBER(NULL), '||--ZX_DET.REF_DOC_LINE_QUANTITY,
              'TO_NUMBER(NULL),'|| --ZX_DET.REF_DOC_TRX_ID,
              'TO_CHAR(NULL), '||  --ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              'TO_CHAR(NULL), '||  --ZX_DET.DEFAULT_TAXATION_COUNTRY,
              'TO_CHAR(NULL), '||  --ZX_DET.DOCUMENT_SUB_TYPE,
              'TO_NUMBER(NULL),'|| --ZX_DET.ASSESSABLE_VALUE,
              'TO_CHAR(NULL), '||  --ZX_DET.TRX_BUSINESS_CATEGORY,
              'TO_CHAR(NULL), '||  --ZX_DET.LINE_INTENDED_USE,
              'TO_CHAR(NULL), '||  --ZX_DET.PRODUCT_CATEGORY,
              'TO_CHAR(NULL), '||  --ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              'TO_NUMBER(NULL),'|| --ZX_DET.SUPPLIER_EXCHANGE_RATE,
              'TO_DATE(NULL), '||  --ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              'TO_CHAR(NULL), '||  --ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              'TO_CHAR(NULL), '||  --ZX_DET.USER_DEFINED_FISC_CLASS,
              'TO_NUMBER(NULL), '||   --ZX_LINE.EXCEPTION_RATE,
              'TO_NUMBER(NULL), '||   --ZX_LINE.EXEMPT_RATE_MODIFIER,
              'TO_NUMBER(NULL), '||   --ZX_LINE.ORIG_TAX_AMT,
              'TO_NUMBER(NULL),  '||  --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              'TO_NUMBER(NULL),  '||  --ZX_LINE.ORIG_TAXABLE_AMT,
              'TO_NUMBER(NULL), '||   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              'TO_CHAR(NULL),  '|| --   ZX_RATE.RECOVERY_RATE_CODE,
              'TO_NUMBER(NULL), '||   --ZX_LINE.TAX_AMT_TAX_CURR,
              'TO_NUMBER(NULL), '||  --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              'TO_CHAR(NULL), '|| --ZX_LINE.TAX_CURRENCY_CODE,
              'TO_DATE(NULL), '||  --ZX_LINE.TAX_DATE,
              'TO_DATE(NULL), '||  --ZX_LINE.TAX_DETERMINE_DATE,
              'TO_DATE(NULL), '||  --ZX_DET.TAX_INVOICE_DATE,
              'TO_CHAR(NULL),'||  --ZX_DET.TAX_INVOICE_NUMBER,
              'ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL), '|| --ZX_LINE.TAX_STATUS_ID,
              'ZX_RATE.TAX,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
              ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,'||
              'ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
              ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
              ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
              ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'TO_NUMBER(NULL),'||   --ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              'TO_NUMBER(NULL),'||  --ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              'TO_CHAR(NULL), '||  --ZX_DET.PORT_OF_ENTRY_CODE,
              'TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE,
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG,
              'DECODE(ADJ.POSTING_CONTROL_ID,-3, ''N'', ''Y''),'||-- POSTED_FLAG,'||     --POSTED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
              'TO_NUMBER(NULL),'||   --ZX_DET.EVENT_CLASS_MAPPING_ID,
              'TO_CHAR(NULL),'||   --ZX_DET.TRX_LEVEL_TYPE,
              'TO_CHAR(NULL), '||      -- Place of supply type code
              'TO_NUMBER(NULL),'||  --ZX_DET.POA_LOCATION_ID,
              'TO_NUMBER(NULL),'||   --ZX_DET.POO_LOCATION_ID,
              'TO_CHAR(NULL), '||      -- Default Place of supply type code
              'TO_NUMBER(NULL), '||--ZX_DET.LINE_AMT,
              'TO_NUMBER(NULL),
              TO_DATE(NULL),
              TO_CHAR(NULL),
              SUM(ARDTAX.ACCTD_AMOUNT_CR),
              sum(ARDTAX.ACCTD_AMOUNT_DR),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              ZX_DET.TRX_ID, '||  --ARDTAX.LINE_ID,
              'TO_CHAR(NULL), '|| --ZX_DET.ENTITY_CODE,
              'ADJ.GL_POSTED_DATE,
              ADJ.GL_DATE,
              TO_NUMBER(NULL),
              TO_NUMBER(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL)';

  L_TABLE_LIST_AR_ADJ   :=
  ' FROM    ' ||
  '     GL_CODE_COMBINATIONS CC,'||
  '     FND_DOCUMENT_SEQUENCES   SEQ, '||
  '     AR_DISTRIBUTIONS_ALL  ARD, '||
  '     AR_DISTRIBUTIONS_ALL ARDTAX, '||
  --     RA_BATCH_SOURCES_ALL BAT,'||
  --    RA_CUST_TRX_TYPES_ALL TYPES , '||
  '     ZX_RATES_VL ZX_RATE , '||
  '     ZX_LINES_DET_FACTORS ZX_DET,'||
  '     AR_ADJUSTMENTS_ALL ADJ  ';

  L_WHERE_CLAUSE_AR_ADJ   :=
  ' WHERE         ' ||
  ' ADJ.STATUS = ''A'' '||
  ' AND        ADJ.ADJUSTMENT_ID = ZX_DET.TRX_ID '||
  ' AND ZX_DET.APPLICATION_ID   = 222 '||
  ' AND ZX_DET.EVENT_CLASS_CODE = ''INVOICE_ADJUSTMENT'' ' ||
  ' AND ZX_DET.TAX_EVENT_TYPE_CODE IN (''VALIDATE_FOR_TAX'',''FREEZE_FOR_TAX'')  '||
  '    AND        ARD.SOURCE_ID(+) = ARDTAX.SOURCE_ID '||
  '    AND        ARDTAX.SOURCE_ID  = ADJ.ADJUSTMENT_ID '||
  '    AND        nvl(ARDTAX.CODE_COMBINATION_ID,ARD.CODE_COMBINATION_ID)
                             = CC.CODE_COMBINATION_ID '||
  '    AND        nvl(ARD.SOURCE_TYPE,''ADJ'') IN (''ADJ'',''REC'',''FINCHRG'') '||
  '    AND        ARD.SOURCE_TABLE(+) = ''ADJ'' '||
  '    AND        ARDTAX.SOURCE_TABLE = ''ADJ'' '||
  '    AND        DECODE(ADJ.TYPE,''TAX'',ARDTAX.TAX_LINK_ID,ARD.TAX_LINK_ID) = ARDTAX.TAX_LINK_ID '||
  '    AND        ADJ.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID (+) '||
  '   AND       zx_rate.tax_rate_id = ardtax.tax_code_id '
         || L_WHERE_LEDGER_ID_ADJ
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_ADJ
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_ADJ
       ||L_WHERE_GL_TRX_DATE_ADJ
       || L_WHERE_TRX_DATE_ADJ
       || L_WHERE_GL_DATE_ADJ
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       || L_WHERE_TAX_JURIS_CODE_ADJ
       || L_WHERE_FIRST_PTY_TAX_REG_ADJ
       || L_WHERE_TAX_REGIME_CODE_ADJ
       || L_WHERE_TAX_ADJ
       || L_WHERE_TAX_STATUS_CODE_ADJ
       || L_WHERE_TAX_RATE_CODE_OTH
       || L_WHERE_TAX_TYPE_CODE_ADJ
       || L_WHERE_CURRENCY_CODE_ADJ
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
       || L_WHERE_GL_FLEX
       || L_WHERE_ACCOUNTING_STATUS_ADJ
       || ' GROUP BY ' ||
            'ADJ.SET_OF_BOOKS_ID,
             ADJ.ADJUSTMENT_ID,
             ADJ.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            '''ADJ'','||
            ' ZX_DET.EVENT_CLASS_CODE,
            ZX_DET.TRX_NUMBER,
            ARDTAX.TAX_CODE_ID,
            DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''ADJ_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''FINCHRG_NON_REC_TAX'',''NON-RECOVERABLE'',NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
          DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N'')
            ' || ' , ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,
             ADJ.ADJUSTMENT_NUMBER,
              ADJ.DOC_SEQUENCE_VALUE,
              ADJ.APPLY_DATE,
              ZX_DET.TRX_CURRENCY_CODE ,
              ZX_DET.FOB_POINT,
              ZX_DET.TRX_WAYBILL_NUMBER,
              ZX_DET.APPLICATION_ID,
              ''AR'','||
              'ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
              ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
              ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
              ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
              ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
              ZX_DET.BILL_THIRD_PTY_ACCT_ID,'||
              'DECODE(ADJ.POSTING_CONTROL_ID,-3, ''N'', ''Y''),'||
              'ZX_DET.TRX_ID,
              ADJ.GL_POSTED_DATE,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_RATE_NAME,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_RATE.tax,
            ard.line_id,
            ardtax.tax_link_id,
            ADJ.GL_DATE,
            ZX_DET.ADJUSTED_DOC_ENTITY_CODE,
            ZX_DET.ADJUSTED_DOC_TRX_ID,
            ZX_DET.ADJUSTED_DOC_LINE_ID,
            ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,
            zx_det.adjusted_doc_application_id,
            ZX_DET.ADJUSTED_DOC_DATE';
     END IF;
*/
  IF G_INCLUDE_AR_MISC_TRX_CLASS = 'Y' THEN
  --  IF G_REGISTER_TYPE NOT IN ('NON-RECOVERABLE','INTERIM') THEN
      IF (UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION'
          OR
          UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE')
      THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-8 For AR Misc Cash Receipts : Header or Line Level');
    END IF;

  L_COLUMN_LIST_AR_MISC :=
      'SELECT  '||
           'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID,'||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL),'||
            '''MISC_CASH_RECEIPT'','||
            '''MISC_CASH_RECEIPT'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL), '||
            'TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             TO_CHAR(NULL),
            TO_NUMBER(NULL),'||
            'ARDTAX.TAX_CODE_ID,'||
            '''TAX'','|| -- REGISTER TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL) ,'||
            'TO_NUMBER(NULL), ' ||
            'nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0) ,'|| -- Total Amount
            'TO_NUMBER(NULL),
            nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0),'||
            'nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0) ,'||
            ' TO_NUMBER(NULL), '||
            'nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0) ,'||
            'nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0),'|| -- ar matrix ++ 25
            'ARD.LINE_ID,
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),'||
             '''N'', ' ||
            'DIST.ORG_ID,
            TO_NUMBER(NULL), ' ||
        --'ARCS.REVERSAL_DATE,
            'TO_NUMBER(NULL),   --amount_applied
             TO_NUMBER(NULL),  --tax_applied
             ZX_RATE.PERCENTAGE_RATE,  --ZX_TAX.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
              TO_CHAR(NULL),
              ARCS.DOC_SEQUENCE_VALUE,
              ARCS.RECEIPT_DATE,
             ARCS.DEPOSIT_DATE,
              TO_DATE(NULL), ' ||
             'TO_DATE(NULL),
              TO_DATE(NULL),
              ARCS.CURRENCY_CODE,
              ARCS.EXCHANGE_RATE_TYPE,
              ARCS.EXCHANGE_DATE,
              ARCS.EXCHANGE_RATE,
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              ARCS.TYPE,
        ZX_RATE.DESCRIPTION,
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               ARD.SOURCE_TYPE,
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              222 ,--ZX_DET.APPLICATION_ID,
              TO_CHAR(NULL)  ,--ZX_DET.DOC_EVENT_STATUS,
              TO_CHAR(NULL)  ,--ZX_DET.APPLICATION_DOC_STATUS,
              TO_NUMBER(NULL) ,-- ZX_DET.ESTABLISHMENT_ID,
              ''AR'',    --EXTRACT_SOURCE_LEDGER,
             --TO_CHAR(NULL)  ,--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
             --TO_CHAR(NULL)  ,--ZX_DET.LEDGER_NAME,
              TO_NUMBER(NULL)  ,--ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              TO_NUMBER(NULL) ,-- ZX_DET.PRECISION,
              ARM.RECEIPT_CLASS_ID ,-- RECEIPT_CLASS_ID,   --Check this
              TO_NUMBER(NULL)  ,--ZX_DET.APPLIED_TO_APPLICATION_ID,
              TO_NUMBER(NULL)  ,--ZX_DET.APPLIED_TO_TRX_LINE_ID
              TO_CHAR(NULL)  ,--ZX_DET.APPLIED_TO_ENTITY_CODE,
              TO_NUMBER(NULL)  ,--ZX_DET.APPLIED_TO_TRX_ID,
              TO_CHAR(NULL)  ,--ZX_DET.APPLIED_TO_EVENT_CLASS_CODE
              TO_CHAR(NULL), -- ZX_DET.APPLIED_TO_TRX_NUMBER
              TO_NUMBER(NULL), -- ZX_DET.RELATED_DOC_APPLICATION_ID,
              TO_DATE(NULL)  , --ZX_DET.RELATED_DOC_DATE,
              TO_CHAR(NULL)  ,--ZX_DET.RELATED_DOC_ENTITY_CODE,
              TO_CHAR(NULL) , --ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              TO_CHAR(NULL) , --ZX_DET.RELATED_DOC_NUMBER,
              TO_NUMBER(NULL), -- ZX_DET.RELATED_DOC_TRX_ID,
              TO_NUMBER(NULL), -- ZX_DET.ADJUSTED_DOC_APPLICATION_ID
              TO_DATE(NULL), -- ZX_DET.ADJUSTED_DOC_DATE,
            --TO_CHAR(NULL)  ,--ZX_DET.BANKING_TP_TAXPAYER_ID,
              TO_NUMBER(NULL) ,-- ZX_DET.REF_DOC_APPLICATION_ID,
              TO_CHAR(NULL) , --ZX_DET.REF_DOC_ENTITY_CODE,
              TO_CHAR(NULL) , --ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              TO_NUMBER(NULL), -- ZX_DET.REF_DOC_LINE_ID,
              TO_NUMBER(NULL), -- ZX_DET.REF_DOC_LINE_QUANTITY,
              TO_NUMBER(NULL), -- ZX_DET.REF_DOC_TRX_ID,
              TO_CHAR(NULL)  ,--ZX_DET.DEF_REC_SETTLEMENT_OPTION_CODE,
              TO_CHAR(NULL) , --ZX_DET.DEFAULT_TAXATION_COUNTRY,
              TO_CHAR(NULL) , --ZX_DET.DOCUMENT_SUB_TYPE,
              TO_CHAR(NULL),  --ZX_DET.ASSESSABLE_VALUE,
              TO_CHAR(NULL) , --ZX_DET.TRX_BUSINESS_CATEGORY,
              TO_CHAR(NULL) , --ZX_DET.LINE_INTENDED_USE,
              TO_CHAR(NULL) , --ZX_DET.PRODUCT_CATEGORY,
              TO_CHAR(NULL) , --ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              TO_NUMBER(NULL) ,-- ZX_DET.SUPPLIER_EXCHANGE_RATE,
              TO_DATE(NULL)  , --ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              TO_CHAR(NULL)  ,--ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              TO_CHAR(NULL) , --ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL), -- ZX_DET.EXCEPTION_RATE,
              TO_NUMBER(NULL)  ,--ZX_DET.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL) , --TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),      --ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),   --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),  --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),  --ZX_LINE.TAX_INVOICE_DATE,
              TO_CHAR(NULL),   --ZX_LINE.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              ZX_RATE.TAX,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'TO_NUMBER(NULL), -- ZX_DET.OWN_HQ_PARTY_SITE_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              TO_CHAR(NULL) ,  --ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
        'DECODE(DIST.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,'||     --POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_FLAG
         'TO_NUMBER(NULL) ,-- ZX_DET.EVENT_CLASS_MAPPING_ID,
         TO_CHAR(NULL)  ,--ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         TO_NUMBER(NULL), -- ZX_DET.POA_LOCATION_ID,
         TO_NUMBER(NULL), -- ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         TO_NUMBER(NULL), -- ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
        -- sum(ARDTAX.ACCTD_AMOUNT_CR),
        -- sum(ARDTAX.ACCTD_AMOUNT_DR),
         ARDTAX.ACCTD_AMOUNT_CR,
         ARDTAX.ACCTD_AMOUNT_DR,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ARCS.CASH_RECEIPT_ID ,
   ''RECEIPTS'',   --ZX_DET.ENTITY_CODE,
         DIST.GL_POSTED_DATE,
         DIST.GL_DATE,
         TO_NUMBER(NULL),
         ARCS.REMITTANCE_BANK_ACCOUNT_ID ,
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

-- P_COLUMN_LIST_AR_MISC := L_COLUMN_LIST_AR_MISC;

 L_TABLE_LIST_AR_MISC   :=

' FROM  '||
'               GL_CODE_COMBINATIONS CC, '||
'               ZX_RATES_VL     ZX_RATE, '||
       ' ZX_TAXES_B    ZX_TAX, '||
       ' AR_RECEIPT_METHODS ARM ,'||
'               FND_DOCUMENT_SEQUENCES  SEQ,'||
-- '            AR_DISTRIBUTIONS_ALL ARD, '||
-- '            AR_DISTRIBUTIONS_ALL ARDTAX, '||
                L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
                L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
'               AR_CASH_RECEIPTS_ALL ARCS, '||
--'             AR_MISC_CASH_DISTRIBUTIONS_ALL DIST ';
                L_TBL_AR_MISC_CASH_DIST_ALL || ' DIST '; -- changed by lxzhang

-- P_TABLE_LIST_AR_MISC := L_TABLE_LIST_AR_MISC;

 L_WHERE_CLAUSE_AR_MISC :=

' WHERE  '||
'               NVL(ARCS.CONFIRMED_FLAG,''Y'') = ''Y'' '||
'   AND         DIST.CASH_RECEIPT_ID = ARCS.CASH_RECEIPT_ID '||
' and ARCS.RECEIPT_METHOD_ID = ARM.RECEIPT_METHOD_ID '||
--'   AND         DIST.SET_OF_BOOKS_ID = '||to_char(G_LEDGER_ID)||' '||
'   AND         ARCS.TYPE = ''MISC'' '||
'   AND         ARD.SOURCE_TABLE = ''MCD'' '||
'   AND         ARD.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         ARD.SOURCE_TYPE = ''MISCCASH'' '||
'   AND         ARDTAX.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         DIST.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID '||
'   AND         ARDTAX.SOURCE_TYPE = ''TAX'' ' ||
'   AND         ARDTAX.SOURCE_TABLE = ''MCD'' '|| --BugFix 2747443
'   AND         ARDTAX.TAX_CODE_ID  = ZX_RATE.TAX_RATE_ID '||
  ' AND  zx_tax.tax = zx_rate.tax
    and zx_tax.TAX_REGIME_CODE = zx_rate.TAX_REGIME_CODE
    and zx_tax.CONTENT_OWNER_ID = zx_rate.CONTENT_OWNER_ID '||
'   AND         ARCS.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID(+) '
       || L_WHERE_LEDGER_ID_MISC
       || L_WHERE_LEGAL_ENTITY_ID_MISC
       || L_WHERE_REGISTER_TYPE_AR_MISC
       || L_WHERE_TRX_CLASS_MISC
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_MISC
       || L_WHERE_GL_TRX_DATE_MISC
       || L_WHERE_TRX_DATE_MISC
       || L_WHERE_GL_DATE_MISC
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE_MISC
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_MIS
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE_OTH
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE_APP
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS;

      ELSIF  UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN
    -- apai commented : needs to be removed  AND  NVL(G_TRX_CLASS,'MISC_CASH_RECEIPT') = ('MISC_CASH_RECEIPT') THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-9 For AR Misc Cash Receipts : Distributions Level');
    END IF;

L_COLUMN_LIST_AR_MISC :=
      'SELECT  '||
           'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID,'||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL),'||
            '''MISC_CASH_RECEIPT'','||
            '''MISC_CASH_RECEIPT'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL), '||
            'TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             TO_CHAR(NULL),
            TO_NUMBER(NULL),'||
            'ARDTAX.TAX_CODE_ID,'||
            '''TAX'','|| -- REGISTER TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL) ,'||
            'TO_NUMBER(NULL), ' ||
            'nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0) ,'|| -- Total Amount
            'TO_NUMBER(NULL),
            nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0),'||
            'nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0) ,'||
            ' TO_NUMBER(NULL), '||
            'nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0) ,'||
            'nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0),'|| -- ar matrix ++ 25
            'ARD.LINE_ID,
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),'||
             '''N'', ' ||
            'DIST.ORG_ID,
            TO_NUMBER(NULL), ' ||
        --'ARCS.REVERSAL_DATE,
            'TO_NUMBER(NULL),   --amount_applied
             TO_NUMBER(NULL),  --tax_applied
             ZX_RATE.PERCENTAGE_RATE,  --ZX_TAX.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
              TO_CHAR(NULL),
              ARCS.DOC_SEQUENCE_VALUE,
              ARCS.RECEIPT_DATE,
             ARCS.DEPOSIT_DATE,
              TO_DATE(NULL), ' ||
             'TO_DATE(NULL),
              TO_DATE(NULL),
              ARCS.CURRENCY_CODE,
              ARCS.EXCHANGE_RATE_TYPE,
              ARCS.EXCHANGE_DATE,
              ARCS.EXCHANGE_RATE,
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              ARCS.TYPE,
        ZX_RATE.DESCRIPTION,
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               ARD.SOURCE_TYPE,
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              222 ,--ZX_DET.APPLICATION_ID,
              TO_CHAR(NULL)  ,--ZX_DET.DOC_EVENT_STATUS,
              TO_CHAR(NULL)  ,--ZX_DET.APPLICATION_DOC_STATUS,
              TO_NUMBER(NULL) ,-- ZX_DET.ESTABLISHMENT_ID,
              ''AR'',    --EXTRACT_SOURCE_LEDGER,
             --TO_CHAR(NULL)  ,--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
             --TO_CHAR(NULL)  ,--ZX_DET.LEDGER_NAME,
              TO_NUMBER(NULL)  ,--ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              TO_NUMBER(NULL) ,-- ZX_DET.PRECISION,
              ARM.RECEIPT_CLASS_ID ,-- RECEIPT_CLASS_ID,   --Check this
              TO_NUMBER(NULL)  ,--ZX_DET.APPLIED_TO_APPLICATION_ID,
              TO_NUMBER(NULL)  ,--ZX_DET.APPLIED_TO_TRX_LINE_ID
              TO_CHAR(NULL)  ,--ZX_DET.APPLIED_TO_ENTITY_CODE,
              TO_NUMBER(NULL)  ,--ZX_DET.APPLIED_TO_TRX_ID,
              TO_CHAR(NULL)  ,--ZX_DET.APPLIED_TO_EVENT_CLASS_CODE
              TO_CHAR(NULL), -- ZX_DET.APPLIED_TO_TRX_NUMBER
              TO_NUMBER(NULL), -- ZX_DET.RELATED_DOC_APPLICATION_ID,
              TO_DATE(NULL)  , --ZX_DET.RELATED_DOC_DATE,
              TO_CHAR(NULL)  ,--ZX_DET.RELATED_DOC_ENTITY_CODE,
              TO_CHAR(NULL) , --ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              TO_CHAR(NULL) , --ZX_DET.RELATED_DOC_NUMBER,
              TO_NUMBER(NULL), -- ZX_DET.RELATED_DOC_TRX_ID,
              TO_NUMBER(NULL), -- ZX_DET.ADJUSTED_DOC_APPLICATION_ID
              TO_DATE(NULL), -- ZX_DET.ADJUSTED_DOC_DATE,
            --TO_CHAR(NULL)  ,--ZX_DET.BANKING_TP_TAXPAYER_ID,
              TO_NUMBER(NULL) ,-- ZX_DET.REF_DOC_APPLICATION_ID,
              TO_CHAR(NULL) , --ZX_DET.REF_DOC_ENTITY_CODE,
              TO_CHAR(NULL) , --ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              TO_NUMBER(NULL), -- ZX_DET.REF_DOC_LINE_ID,
              TO_NUMBER(NULL), -- ZX_DET.REF_DOC_LINE_QUANTITY,
              TO_NUMBER(NULL), -- ZX_DET.REF_DOC_TRX_ID,
              TO_CHAR(NULL)  ,--ZX_DET.DEF_REC_SETTLEMENT_OPTION_CODE,
              TO_CHAR(NULL) , --ZX_DET.DEFAULT_TAXATION_COUNTRY,
              TO_CHAR(NULL) , --ZX_DET.DOCUMENT_SUB_TYPE,
              TO_CHAR(NULL) , --ZX_DET.ASSESSABLE_VALUE,
              TO_CHAR(NULL) , --ZX_DET.TRX_BUSINESS_CATEGORY,
              TO_CHAR(NULL) , --ZX_DET.LINE_INTENDED_USE,
              TO_CHAR(NULL) , --ZX_DET.PRODUCT_CATEGORY,
              TO_CHAR(NULL) , --ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              TO_NUMBER(NULL) ,-- ZX_DET.SUPPLIER_EXCHANGE_RATE,
              TO_DATE(NULL)  , --ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              TO_CHAR(NULL)  ,--ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              TO_CHAR(NULL) , --ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL), -- ZX_DET.EXCEPTION_RATE,
              TO_NUMBER(NULL)  ,--ZX_DET.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL) , --TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),      --ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),   --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),  --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),  --ZX_LINE.TAX_INVOICE_DATE,
              TO_CHAR(NULL),   --ZX_LINE.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
              ZX_RATE.TAX,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'TO_NUMBER(NULL), -- ZX_DET.OWN_HQ_PARTY_SITE_PROF_ID,
              TO_NUMBER(NULL), -- ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              TO_CHAR(NULL) ,  --ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
          'DECODE(DIST.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,'||     --POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_FLAG
         'TO_NUMBER(NULL) ,-- ZX_DET.EVENT_CLASS_MAPPING_ID,
         TO_CHAR(NULL)  ,--ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         TO_NUMBER(NULL), -- ZX_DET.POA_LOCATION_ID,
         TO_NUMBER(NULL), -- ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         TO_NUMBER(NULL), -- ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
         ARDTAX.ACCTD_AMOUNT_CR,
         ARDTAX.ACCTD_AMOUNT_DR,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ARDTAX.LINE_ID ' ||
    ',''RECEIPTS'','||
  'DIST.GL_POSTED_DATE,
         DIST.GL_DATE,
         TO_NUMBER(NULL),
         ARCS.REMITTANCE_BANK_ACCOUNT_ID ,
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

 L_TABLE_LIST_AR_MISC   :=

' FROM  '||
'               GL_CODE_COMBINATIONS CC, '||
'               ZX_RATES_VL     ZX_RATE, '||
       ' ZX_TAXES_B    ZX_TAX, '||
              ' AR_RECEIPT_METHODS ARM ,'||
'               FND_DOCUMENT_SEQUENCES  SEQ,'||
-- '            AR_DISTRIBUTIONS_ALL ARD, '||
-- '            AR_DISTRIBUTIONS_ALL ARDTAX, '||
                L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
                L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
'               AR_CASH_RECEIPTS_ALL ARCS, '||
--'             AR_MISC_CASH_DISTRIBUTIONS_ALL DIST ';
                L_TBL_AR_MISC_CASH_DIST_ALL || ' DIST '; -- changed by lxzhang

-- P_TABLE_LIST_AR_MISC := L_TABLE_LIST_AR_MISC;

 L_WHERE_CLAUSE_AR_MISC :=

' WHERE  '||
'               NVL(ARCS.CONFIRMED_FLAG,''Y'') = ''Y'' '||
'   AND         DIST.CASH_RECEIPT_ID = ARCS.CASH_RECEIPT_ID '||
' and ARCS.RECEIPT_METHOD_ID = ARM.RECEIPT_METHOD_ID '||
--'   AND         DIST.SET_OF_BOOKS_ID = '||to_char(G_LEDGER_ID)||' '||
'   AND         ARCS.TYPE = ''MISC'' '||
'   AND         ARD.SOURCE_TABLE = ''MCD'' '||
'   AND         ARD.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         ARD.SOURCE_TYPE = ''MISCCASH'' '||
'   AND         ARDTAX.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         DIST.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID '||
'   AND         ARDTAX.SOURCE_TYPE = ''TAX'' ' ||
'   AND         ARDTAX.SOURCE_TABLE = ''MCD'' '|| --BugFix 2747443
'   AND         ARDTAX.TAX_CODE_ID  = ZX_RATE.TAX_RATE_ID '||
  ' AND  zx_tax.tax = zx_rate.tax
    and zx_tax.TAX_REGIME_CODE = zx_rate.TAX_REGIME_CODE
    and zx_tax.CONTENT_OWNER_ID = zx_rate.CONTENT_OWNER_ID '||
'   AND         ARCS.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID(+) '
       || L_WHERE_LEDGER_ID_MISC
       || L_WHERE_LEGAL_ENTITY_ID_MISC
       || L_WHERE_REGISTER_TYPE_AR_MISC
       || L_WHERE_TRX_CLASS_MISC
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_MISC
       ||L_WHERE_GL_TRX_DATE_MISC
       || L_WHERE_TRX_DATE_MISC
       || L_WHERE_GL_DATE_MISC
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE_MISC
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_MIS
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE_OTH
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE_APP
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_GL_FLEX
       || L_WHERE_TAX_LTE_OTHER_CLS;

/*L_COLUMN_LIST_AR_MISC :=
      'SELECT  '||
      'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID,'||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL),'||
            '''MISC_CASH_RECEIPT'','||
            '''MISC_CASH_RECEIPT'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_NUMBER(NULL),'||
            'ARDTAX.TAX_CODE_ID,'||
            '''TAX'','|| -- REGISTER TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL), ' ||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            'TO_NUMBER(NULL), --Tax Line ID
            (nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0)),'||
            '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)),
             TO_NUMBER(NULL), '||  --Tax Line Number
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 26
            'TO_NUMBER(NULL),'||   -- Trx_line_id
             'TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             ''N'', ' ||    --Reconcialiation Flag
            'DIST.ORG_ID,
            TO_NUMBER(NULL), ' ||
            'ARCS.REVERSAL_DATE,
             TO_NUMBER(NULL),   -- Amount_applied
             TO_NUMBER(NULL),   -- tax_Amount
             TO_NUMBER(NULL), --ZX_TAX.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --      ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
              TO_CHAR(NULL),
              ARCS.DOC_SEQUENCE_VALUE,
              ARCS.RECEIPT_DATE,
              ARCS.DEPOSIT_DATE,
              TO_DATE(NULL), ' ||
             'TO_DATE(NULL),
              TO_DATE(NULL),
              ARCS.CURRENCY_CODE,
              ARCS.EXCHANGE_RATE_TYPE,
              ARCS.EXCHANGE_DATE,
              ARCS.EXCHANGE_RATE,'||
             'TO_CHAR(NULL),     --trx_sic_code
              TO_CHAR(NULL),    --FOB
              TO_CHAR(NULL),   --Waybill Number
              TO_CHAR(NULL),   --batch source name
              TO_CHAR(NULL),'|| --trx_type_description
              'TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_NUMBER(NULL),  --ZX_DET.APPLICATION_ID
             TO_CHAR(NULL) ,-- ZX_DET.DOC_EVENT_STATUS
        TO_CHAR(NULL) ,-- ZX_DET.APPLICATION_DOC_STATUS,
               TO_NUMBER(NULL)  ,--ZX_DET.ESTABLISHMENT_ID
              ''AR'',     --EXTRACT_SOURCE_LEDGER
             TO_CHAR(NULL) ,-- ZX_DET.FUNCTIONAL_CURRECNY_CODE
             TO_CHAR(NULL) ,-- ZX_DET.LEDGER_NAME
               TO_NUMBER(NULL) , --ZX_DET.MINIMUM_ACCOUNTABLE_UNIT
               TO_NUMBER(NULL),  --ZX_DET.PRECISION
               TO_NUMBER(NULL),  --RECEIPT_CLASS_ID
               TO_NUMBER(NULL),  --ZX_DET.ADJUSTED_DOC_APPLICATION_ID
               TO_DATE(NULL),  -- ZX_DET.ADJUSTED_DOC_DATE
             TO_CHAR(NULL), -- ZX_DET.ADJUSTED_DOC_ENTITY_CODE
             TO_CHAR(NULL), -- ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE
             TO_CHAR(NULL), -- ZX_DET.ADJUSTED_DOC_NUMBER
               TO_NUMBER(NULL),  --ZX_DET.ADJUSTED_DOC_TRX_ID
               TO_NUMBER(NULL),  --ZX_DET.RELATED_DOC_APPLICATION_ID
               TO_DATE(NULL),  -- ZX_DET.RELATED_DOC_DATE
             TO_CHAR(NULL) ,-- ZX_DET.RELATED_DOC_ENTITY_CODE
             TO_CHAR(NULL), -- ZX_DET.RELATED_DOC_EVENT_CLASS_CODE
             TO_CHAR(NULL), -- ZX_DET.RELATED_DOC_NUMBER
               TO_NUMBER(NULL),  --ZX_DET.RELATED_DOC_TRX_ID
               TO_NUMBER(NULL),  --ZX_DET.APPLIED_TO_APPLICATION_ID
               TO_NUMBER(NULL),  --ZX_DET.APPLIED_TO_TRX_LINE_ID
             TO_CHAR(NULL), -- ZX_DET.BANKING_TP_TAXPAYER_ID
               TO_NUMBER(NULL),  --ZX_DET.REF_DOC_APPLICATION_ID
             TO_CHAR(NULL), -- ZX_DET.REF_DOC_ENTITY_CODE
             TO_CHAR(NULL), -- ZX_DET.REF_DOC_EVENT_CLASS_CODE
               TO_NUMBER(NULL),  --ZX_DET.REF_DOC_LINE_ID
               TO_NUMBER(NULL),  --ZX_DET.REF_DOC_LINE_QUANTITY
               TO_NUMBER(NULL)  --ZX_DET.REF_DOC_TRX_ID
             TO_CHAR(NULL) -- ZX_DET.DEF_REC_SETTLEMENT_OPTION_CODE
             TO_CHAR(NULL) -- ZX_DET.DEFAULT_TAXATION_COUNTRY
             TO_CHAR(NULL) -- ZX_DET.DOCUMENT_SUB_TYPE
              TO_CHAR(NULL) , --ZX_DET.ASSESSABLE_VALUE,
             TO_CHAR(NULL) -- ZX_DET.TRX_BUSINESS_CATEGORY
             TO_CHAR(NULL) -- ZX_DET.LINE_INTENDED_USE
             TO_CHAR(NULL) -- ZX_DET.PRODUCT_CATEGORY
             TO_CHAR(NULL) -- ZX_DET.PRODUCT_FISC_CLASSIFICATION
               TO_NUMBER(NULL)  --ZX_DET.SUPPLIER_EXCHANGE_RATE
               TO_DATE(NULL),  -- ZX_DET.SUPPLIER_TAX_INVOICE_DATE
             TO_CHAR(NULL), -- ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER
             TO_CHAR(NULL), -- ZX_DET.USER_DEFINED_FISC_CLASS
               TO_NUMBER(NULL),  --ZX_DET.EXCEPTION_RATE
             TO_CHAR(NULL), -- ZX_DET.EXEMPT_RATE_MODIFIER
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR
              to_char(NULL),  --ZX_RATE.RECOVERY_RATE_CODE
              TO_NUMBER(NULL),   --ZX_LINE.TAX_AMT_TAX_CURR
              TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER
              TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE
              TO_DATE(NULL),  --ZX_LINE.TAX_DATE
              TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE
              TO_DATE(NULL),  --ZX_LINE.TAX_INVOICE_DATE
              TO_CHAR(NULL),   --ZX_LINE.TAX_INVOICE_NUMBER
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_RATE.TAX,
               TO_NUMBER(NULL) , --ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID
               TO_NUMBER(NULL) , --ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID
               TO_NUMBER(NULL)  ,--ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID
               TO_NUMBER(NULL)  ,--ZX_DET.SHIP_TO_SITE_TAX_PROF_ID
               TO_NUMBER(NULL) , --ZX_DET.BILL_TO_PARTY_TAX_PROF_ID
               TO_NUMBER(NULL)  ,--ZX_DET.BILL_TO_SITE_TAX_PROF_ID
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER
              ' TO_NUMBER(NULL)  ,--ZX_DET.OWN_HQ_PARTY_SITE_PROF_ID,
               TO_NUMBER(NULL) , --ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              TO_CHAR(NULL) ,--ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
           'TO_CHAR(NULL) POSTED_FLAG,'||     -- POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_FLAG
         ' TO_NUMBER(NULL) . --ZX_DET.EVENT_CLASS_MAPPING_ID,
         TO_CHAR(NULL) --ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
          TO_NUMBER(NULL) . --ZX_DET.POA_LOCATION_ID,
          TO_NUMBER(NULL) . --ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
          TO_NUMBER(NULL),  --ZX_DET.LINE_AMT,
         TO_NUMBER(NULL) ';

L_TABLE_LIST_AR_MISC   :=

' FROM          '||
'               GL_CODE_COMBINATIONS CC,'||
'               ZX_RATES_VL      ZX_RATE, '||
       ' ZX_TAXES_B    ZX_TAX, '||
'               FND_DOCUMENT_SEQUENCES  SEQ,'||
-- '            AR_DISTRIBUTIONS_ALL ARD, '||
-- '            AR_DISTRIBUTIONS_ALL ARDTAX, '||
                L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
                L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
'               AR_CASH_RECEIPTS_ALL ARCS, '||
--'             AR_MISC_CASH_DISTRIBUTIONS_ALL DIST ';
                L_TBL_AR_MISC_CASH_DIST_ALL || ' DIST '; -- changed by lxzhang

--P_TABLE_LIST_AR_MISC := L_TABLE_LIST_AR_MISC;

L_WHERE_CLAUSE_AR_MISC  :=

' WHERE  '||
'               NVL(ARCS.CONFIRMED_FLAG,''Y'') = ''Y'' '||
'   AND         DIST.CASH_RECEIPT_ID = ARCS.CASH_RECEIPT_ID '||
--'   AND         DIST.SET_OF_BOOKS_ID =  '||to_char(G_LEDGER_ID)||' '||
'   AND         ARCS.TYPE = ''MISC'' '||
'   AND         CC.CHART_OF_ACCOUNTS_ID = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
'   AND         ARD.SOURCE_TABLE = ''MCD'' '||
'   AND         ARD.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         ARD.SOURCE_TYPE = ''MISCCASH'' '||
'   AND         ARDTAX.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         DIST.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID '||
'   AND         ARDTAX.SOURCE_TYPE = ''TAX'' ' ||
'   AND         ARDTAX.SOURCE_TABLE = ''MCD'' '|| --BugFix 2747443
'   AND         ARDTAX.TAX_CODE_ID  = ZX_RATE.TAX_RATE_ID '||
  ' AND  zx_tax.tax = zx_rate.tax
    and zx_tax.TAX_REGIME_CODE = zx_rate.TAX_REGIME_CODE
    and zx_tax.CONTENT_OWNER_ID = zx_rate.CONTENT_OWNER_ID '||
'   AND         ARCS.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID(+) '
       || L_WHERE_LEDGER_ID_MISC
       || L_WHERE_LEGAL_ENTITY_ID_MISC
       || L_WHERE_REGISTER_TYPE_AR_MISC
       || L_WHERE_TRX_CLASS_MISC
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_MISC
       || L_WHERE_TRX_DATE_MISC
       || L_WHERE_GL_DATE_MISC
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE_MISC
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS;
*/
      END IF; -- G_SUMMARY_LEVEL
--    END IF; -- G_REGISTER_TYPE
  END IF; -- G_TRX_CLASS IS NULL

--  Building the Column List, Table List and Where Clauses for
--  Bills Receivable : Bills Receivable : Bills Receivable : Bills Receivable :
--  Bills Receivable : Bills Receivable : Bills Receivable : Bills Receivable :
--  Bills Receivable : Bills Receivable : Bills Receivable : Bills Receivable :

  IF G_INCLUDE_AR_BR_TRX_CLASS = 'Y' THEN
 --   IF L_IS_DEFERRED_TAX_USED = 1 THEN
      IF (UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION'
          OR
          UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE')
      THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-10 For AR Bills Receivables : Header or Line Level');
    END IF;

L_COLUMN_LIST_AR_BR   :=
'SELECT  '||
 'ZX_DET.LEDGER_ID,
       ZX_DET.TRX_ID, '||
      'ZX_DET.DOC_SEQ_ID,
       ZX_DET.DOC_SEQ_NAME,
       TO_NUMBER(NULL),
       ''BR'', '||
       '''BR'', '||
      ' TO_CHAR(NULL),
       TO_NUMBER(NULL), '||
      ' TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_NUMBER(NULL),'||
      ' TO_CHAR(NULL),
       TO_CHAR(NULL), '||
      'ZX_DET.BATCH_SOURCE_ID,'||
      'ARDTAX.TAX_CODE_ID,'||
      'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM''
      ,NULL), ' || -- REG. TYPE CODE
       'TO_NUMBER(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_NUMBER(NULL),
       TO_NUMBER(NULL) ,'||
      'TO_NUMBER(NULL), ' ||
       'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0)-nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||-- Total Amount
      'TO_NUMBER(NULL),
      sum(nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
      'sum(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)) ,'||
      'TO_NUMBER(NULL), '||
      'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)) ,'||
      'sum(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 27
      'TO_NUMBER(NULL),
       TO_NUMBER(NULL), '||
      'TO_CHAR(NULL),'||
      'TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),
       ''N'', ' ||
      'ZX_DET.INTERNAL_ORGANIZATION_ID,
      TO_NUMBER(NULL), ' ||
      --'TO_DATE(NULL),
       'TO_NUMBER(NULL), --amount_applied
       TO_NUMBER(NULL), --tax_applied
       ZX_RATE.PERCENTAGE_RATE,
       ZX_RATE.TAX_RATE_CODE,
       ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
      ZX_DET.TRX_NUMBER,
       ZX_DET.TRX_DESCRIPTION,
       ZX_DET.DOC_SEQ_VALUE,
       ZX_DET.TRX_DATE,
       TO_DATE(NULL), --Deposit Date
       ZX_DET.TRX_DUE_DATE,
       ZX_DET.TRX_SHIPPING_DATE,
       ZX_DET.TRX_COMMUNICATED_DATE,
       ZX_DET.TRX_CURRENCY_CODE,
       ZX_DET.CURRENCY_CONVERSION_TYPE,
       ZX_DET.CURRENCY_CONVERSION_DATE,
       ZX_DET.CURRENCY_CONVERSION_RATE,
       TO_CHAR(NULL),
       ZX_DET.FOB_POINT,
       ZX_DET.TRX_WAYBILL_NUMBER,
       ZX_DET.BATCH_SOURCE_NAME, '||
       'ZX_DET.TRX_TYPE_DESCRIPTION,
       ZX_RATE.DESCRIPTION,
      TO_CHAR(NULL),
      TO_NUMBER(NULL),
       TO_CHAR(NULL),
       LINE.ATTRIBUTE_CATEGORY,
        LINE.ATTRIBUTE1,
        LINE.ATTRIBUTE2,
        LINE.ATTRIBUTE3,
        LINE.ATTRIBUTE4,
        LINE.ATTRIBUTE5,
        LINE.ATTRIBUTE6,
        LINE.ATTRIBUTE7,
        LINE.ATTRIBUTE8,
        LINE.ATTRIBUTE9,
        LINE.ATTRIBUTE10,
        LINE.ATTRIBUTE11,
        LINE.ATTRIBUTE12,
        LINE.ATTRIBUTE13,
        LINE.ATTRIBUTE14,
        LINE.ATTRIBUTE15,
       ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
        ''AR'', --EXTRACT_SOURCE_LEDGER,
        --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
        --ZX_DET.LEDGER_NAME,
        ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
        to_number(NULL),   --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
        --ZX_DET.BANKING_TP_TAXPAYER_ID,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
        ZX_DET.ASSESSABLE_VALUE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
        TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
        TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
        TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
        TO_NUMBER(NULL),   --ZX_LINE.TAX_AMT_TAX_CURR,
        TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
        TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DATE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE,
        TO_DATE(NULL),  --ZX_DET.TAX_INVOICE_DATE,
        TO_CHAR(NULL),   --ZX_DET.TAX_INVOICE_NUMBER,
        ZX_RATE.TAX_JURISDICTION_CODE,
        ZX_RATE.TAX_REGIME_CODE,
        ZX_RATE.TAX_STATUS_CODE,
        TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
        ZX_RATE.TAX,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
        'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
        'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,
        TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE,
        'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG,
        'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG,
     'DECODE(TH.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,'||     --POSTED_FLAG,
        'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG,
        'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG,
        'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),
         TO_DATE(NULL),
         TO_CHAR(NULL),
         sum(ARDTAX.ACCTD_AMOUNT_CR),
         sum(ARDTAX.ACCTD_AMOUNT_DR),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ZX_DET.TRX_ID ,
         ZX_DET.ENTITY_CODE,
   TH.GL_POSTED_DATE,
         TH.GL_DATE,
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

--P_COLUMN_LIST_AR_BR   := L_COLUMN_LIST_AR_BR  ;

L_TABLE_LIST_AR_BR   :=
    ' FROM GL_CODE_COMBINATIONS CC,  '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_BILL, '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_SHIP, '||
--    'RA_CUST_TRX_TYPES_ALL      TYPES, '||
--    'RA_BATCH_SOURCES_ALL       BS, '||
--    'FND_DOCUMENT_SEQUENCES     SEQ, '||
      'ZX_RATES_VL                ZX_RATE, '  ||
       ' ZX_TAXES_B    ZX_TAX, '||
     'RA_CUSTOMER_TRX_LINES_ALL  LINE, '||
     'ZX_LINES_DET_FACTORS         ZX_DET, '||
    ' ZX_PARTY_TAX_PROFILE     PTP, '||
--    'AR_DISTRIBUTIONS_ALL       ARDTAX, '||
--    'AR_TRANSACTION_HISTORY_ALL TH ';
    L_TBL_NAME_CUSTOMER_TRX_ALL || ' TRXH, ' ||
    L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
    L_TBL_NAME_AR_TRX_HIST_ALL || ' TH ' ;

--P_TABLE_LIST_AR_BR := L_TABLE_LIST_AR_BR;

L_WHERE_CLAUSE_AR_BR    :=
' WHERE  th.transaction_history_id = ardtax.source_id '||
' AND   ardtax.source_table = ''TH''' ||
' AND   ardtax.source_type in (''TAX'',''DEFERRED_TAX'') '||
' AND   ardtax.source_table_secondary = ''CTL'''||
' AND   ardtax.source_id_secondary = line.customer_Trx_line_id '||
' AND   line.customer_trx_id =  zx_det.trx_id  '||
   ' AND ZX_DET.APPLICATION_ID    = 222 '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
  ' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
--' AND   trxh.cust_trx_type_id = types.cust_trx_type_id  '||
--' AND   trxh.batch_source_id = bs.batch_source_id(+)  '||
' AND   trxh.complete_flag = ''Y'''||
' AND   trxh.customer_trx_id = zx_det.trx_id '||
--' AND     zx_det.ledger_id = '||to_char(G_LEDGER_ID) ||' '||
--' AND   cc.chart_of_accounts_id = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
' AND   ardtax.code_combination_id = cc.code_combination_id '||
' AND   nvl(ardtax.tax_code_id,ardtax.location_segment_id) = ZX_RATE.TAX_RATE_ID ' ||
  ' AND  zx_tax.tax = zx_rate.tax
    and zx_tax.TAX_REGIME_CODE = zx_rate.TAX_REGIME_CODE
    and zx_tax.CONTENT_OWNER_ID = zx_rate.CONTENT_OWNER_ID '
--' AND   trxh.bill_to_site_use_id =  tpsu_bill.site_use_id (+) '||
--' AND   trxh.ship_to_site_use_id =  tpsu_ship.site_use_id(+) '||
--' AND   bs.batch_source_id (+) = trxh.batch_source_id '||
--' AND   trxh.doc_sequence_id = seq.doc_sequence_id (+) '||
--' AND ( bs.org_id is null or bs.org_id = trxh.org_id ) '
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_BR
       || L_WHERE_TRX_CLASS_BR
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_BR
       ||L_WHERE_GL_TRX_DATE_BR
       || L_WHERE_TRX_DATE_BR
       || L_WHERE_GL_DATE_BR
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE_OTH
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
||' GROUP BY '||
   'ZX_DET.LEDGER_ID,
       ZX_DET.TRX_ID, '||
      'ZX_DET.DOC_SEQ_ID,
       ZX_DET.DOC_SEQ_NAME,
      ZX_DET.BATCH_SOURCE_ID,'||
      'ARDTAX.TAX_CODE_ID,'||
      'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM''
      ,NULL), ' || -- REG. TYPE CODE
      'ZX_DET.INTERNAL_ORGANIZATION_ID,
       ZX_RATE.PERCENTAGE_RATE,
       ZX_RATE.TAX_RATE_CODE,
       ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
      ZX_DET.TRX_NUMBER,
       ZX_DET.TRX_DESCRIPTION,
       ZX_DET.DOC_SEQ_VALUE,
       ZX_DET.TRX_DATE,
       ZX_DET.TRX_DUE_DATE,
       ZX_DET.TRX_SHIPPING_DATE,
       ZX_DET.TRX_COMMUNICATED_DATE,
       ZX_DET.TRX_CURRENCY_CODE,
       ZX_DET.CURRENCY_CONVERSION_TYPE,
       ZX_DET.CURRENCY_CONVERSION_DATE,
       ZX_DET.CURRENCY_CONVERSION_RATE,
       ZX_DET.FOB_POINT,
       ZX_DET.TRX_WAYBILL_NUMBER,
       ZX_DET.BATCH_SOURCE_NAME, '||
       'ZX_DET.TRX_TYPE_DESCRIPTION,
       ZX_RATE.DESCRIPTION,
       LINE.ATTRIBUTE_CATEGORY,
        LINE.ATTRIBUTE1,
        LINE.ATTRIBUTE2,
        LINE.ATTRIBUTE3,
        LINE.ATTRIBUTE4,
        LINE.ATTRIBUTE5,
        LINE.ATTRIBUTE6,
        LINE.ATTRIBUTE7,
        LINE.ATTRIBUTE8,
        LINE.ATTRIBUTE9,
        LINE.ATTRIBUTE10,
        LINE.ATTRIBUTE11,
        LINE.ATTRIBUTE12,
        LINE.ATTRIBUTE13,
        LINE.ATTRIBUTE14,
        LINE.ATTRIBUTE15,
       ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
        --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
        --ZX_DET.LEDGER_NAME,
        ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
        TO_NUMBER(NULL),   --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
        --ZX_DET.BANKING_TP_TAXPAYER_ID,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
        ZX_DET.ASSESSABLE_VALUE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
       -- ZX_LINE.EXCEPTION_RATE,
       -- ZX_LINE.EXEMPT_RATE_MODIFIER,
      --  ZX_RATE.RECOVERY_RATE_CODE,
        ZX_RATE.TAX_JURISDICTION_CODE,
        ZX_RATE.TAX_REGIME_CODE,
        ZX_RATE.TAX_STATUS_CODE,
        TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
        ZX_RATE.TAX,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,'||
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_DET.LINE_AMT,
         ZX_DET.TRX_ID ,
         ZX_DET.ENTITY_CODE,
   TH.GL_POSTED_DATE,
   DECODE(TH.GL_POSTED_DATE, NULL, ''N'', ''Y''),
         TH.GL_DATE';

--P_WHERE_CLAUSE_AR_BR  := L_WHERE_CLAUSE_AR_BR ;

      ELSIF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN
      -- apai commented : needs to be removed   AND  NVL(G_TRX_CLASS,'BR' ) = 'BR' THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-11 For AR Bills Receivables : Distributions Level');
    END IF;

L_COLUMN_LIST_AR_BR   :=

'SELECT DISTINCT '||
       'ZX_DET.LEDGER_ID,
       ZX_DET.TRX_ID, '||
      'ZX_DET.DOC_SEQ_ID,
       ZX_DET.DOC_SEQ_NAME,
       TO_NUMBER(NULL),
       ''BR'', '||
       '''BR'', '||
      ' TO_CHAR(NULL),
       TO_NUMBER(NULL), '||
      ' TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_NUMBER(NULL),'||
      ' TO_CHAR(NULL),
       TO_CHAR(NULL), '||
      'ZX_DET.BATCH_SOURCE_ID,'||
      'ARDTAX.TAX_CODE_ID,'||
      'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM''
      ,NULL), ' || -- REG. TYPE CODE
       'TO_NUMBER(NULL),
       TO_CHAR(NULL),
       ARDTAX.SOURCE_TABLE,
       ARDTAX.SOURCE_ID,
       TO_NUMBER(NULL),'||
      'TO_NUMBER(NULL), ' ||
      '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)) ,'|| -- Total Amount
      'TO_NUMBER(NULL),
      (nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
      '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)) ,
       TO_NUMBER(NULL), '||
      '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
      '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 30
      'TO_NUMBER(NULL),
       TO_NUMBER(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),'||
       '''N'', ' ||
      'ZX_DET.INTERNAL_ORGANIZATION_ID,'||  -- Org_id
      'LINE.BR_REF_CUSTOMER_TRX_ID, ' ||  --add in BR_REF_CUSTOMER_TRX_ID
      --'TO_DATE(NULL),
       'TO_NUMBER(NULL),  --amount_applied
       TO_NUMBER(NULL),  --tax_applied
       ZX_RATE.PERCENTAGE_RATE,
       ZX_RATE.TAX_RATE_CODE,
       ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       --ZX_RATE.RATE_TYPE_CODE,
       ZX_TAX.TAX_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
       ZX_DET.TRX_NUMBER,
       ZX_DET.TRX_DESCRIPTION,
       ZX_DET.DOC_SEQ_VALUE,
       ZX_DET.TRX_DATE,
       TO_DATE(NULL),   -- Deposit Date
       ZX_DET.TRX_DUE_DATE,
       ZX_DET.TRX_SHIPPING_DATE,
       ZX_DET.TRX_COMMUNICATED_DATE,
       ZX_DET.TRX_CURRENCY_CODE,
       ZX_DET.CURRENCY_CONVERSION_TYPE,
       ZX_DET.CURRENCY_CONVERSION_DATE,
       ZX_DET.CURRENCY_CONVERSION_RATE,
       TO_CHAR(NULL),
       ZX_DET.FOB_POINT,
       ZX_DET.TRX_WAYBILL_NUMBER,
       ZX_DET.BATCH_SOURCE_NAME,
       ZX_DET.TRX_TYPE_DESCRIPTION,
       ZX_RATE.DESCRIPTION,
      TO_CHAR(NULL),
       TO_NUMBER(NULL),
       TO_CHAR(NULL),
       LINE.ATTRIBUTE_CATEGORY,
        LINE.ATTRIBUTE1,
        LINE.ATTRIBUTE2,
        LINE.ATTRIBUTE3,
        LINE.ATTRIBUTE4,
        LINE.ATTRIBUTE5,
        LINE.ATTRIBUTE6,
        LINE.ATTRIBUTE7,
        LINE.ATTRIBUTE8,
        LINE.ATTRIBUTE9,
        LINE.ATTRIBUTE10,
        LINE.ATTRIBUTE11,
        LINE.ATTRIBUTE12,
        LINE.ATTRIBUTE13,
        LINE.ATTRIBUTE14,
        LINE.ATTRIBUTE15,
       ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
        ''AR'', --EXTRACT_SOURCE_LEDGER,
        --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
        --ZX_DET.LEDGER_NAME,
        ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
        TO_NUMBER(NULL),  --RECEIPT_CLASS_ID,
        ZX_DET.APPLIED_TO_APPLICATION_ID,
        ZX_DET.APPLIED_TO_TRX_LINE_ID,
        ZX_DET.APPLIED_TO_ENTITY_CODE,
        ZX_DET.APPLIED_TO_TRX_ID,
        ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
        ZX_DET.APPLIED_TO_TRX_NUMBER,
        ZX_DET.RELATED_DOC_APPLICATION_ID,
        ZX_DET.RELATED_DOC_DATE,
        ZX_DET.RELATED_DOC_ENTITY_CODE,
        ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
        ZX_DET.RELATED_DOC_NUMBER,
        ZX_DET.RELATED_DOC_TRX_ID,
        ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
        ZX_DET.ADJUSTED_DOC_DATE,
        --ZX_DET.BANKING_TP_TAXPAYER_ID,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
        ZX_DET.ASSESSABLE_VALUE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
        TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
        TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
        TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
        TO_NUMBER(NULL),   --ZX_LINE.TAX_AMT_TAX_CURR,
        TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
        TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DATE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE,
        TO_DATE(NULL),  --ZX_DET.TAX_INVOICE_DATE,
        TO_CHAR(NULL),   --ZX_DET.TAX_INVOICE_NUMBER,
        ZX_RATE.TAX_JURISDICTION_CODE,
        ZX_RATE.TAX_REGIME_CODE,
        ZX_RATE.TAX_STATUS_CODE,
        TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
        ZX_RATE.TAX,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||  --zx_line.tax_registration_number
        'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
        'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,
        TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
        'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
        'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
    'DECODE(TH.GL_POSTED_DATE, NULL, ''N'', ''Y'') POSTED_FLAG,'||     --POSTED_FLAG
        'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
        'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
        'TO_CHAR(NULL),'||    --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),
         TO_DATE(NULL),
         TO_CHAR(NULL),
         ARDTAX.ACCTD_AMOUNT_CR,
         ARDTAX.ACCTD_AMOUNT_DR,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ARDTAX.LINE_ID ,
  ZX_DET.ENTITY_CODE,
  TH.GL_POSTED_DATE,
         TH.GL_DATE,
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
   TO_CHAR(NULL),
   TO_CHAR(NULL)';

--P_COLUMN_LIST_AR_BR   := L_COLUMN_LIST_AR_BR ;

L_TABLE_LIST_AR_BR   :=
    ' FROM GL_CODE_COMBINATIONS CC,  '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_BILL, '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_SHIP, '||
--    'RA_CUST_TRX_TYPES_ALL      TYPES, '||
--    'RA_BATCH_SOURCES_ALL       BS, '||
    'FND_DOCUMENT_SEQUENCES     SEQ, '||
    'ZX_RATES_VL                ZX_RATE, '  ||
       ' ZX_TAXES_B    ZX_TAX, '||
    'RA_CUSTOMER_TRX_LINES_ALL  LINE, '||
    'ZX_LINES_DET_FACTORS       ZX_DET, '||
    ' ZX_PARTY_TAX_PROFILE     PTP, '||
--    'AR_DISTRIBUTIONS_ALL       ARDTAX, '||
--    'AR_TRANSACTION_HISTORY_ALL TH ';
    L_TBL_NAME_CUSTOMER_TRX_ALL || ' TRXH, ' ||
    L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
    L_TBL_NAME_AR_TRX_HIST_ALL || ' TH ' ;


--P_TABLE_LIST_AR_BR := L_TABLE_LIST_AR_BR;

L_WHERE_CLAUSE_AR_BR    :=
' WHERE  th.transaction_history_id = ardtax.source_id '||
' AND   ardtax.source_table = ''TH'' ' ||
' AND   ardtax.source_type in (''TAX'',''DEFERRED_TAX'') '||
' AND   ardtax.source_table_secondary = ''CTL'' '||
' AND   ardtax.source_id_secondary = line.customer_Trx_line_id '||
' AND   line.customer_trx_id =  zx_det.trx_id '||
   ' AND ZX_DET.APPLICATION_ID    = 222 '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
  ' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
--' AND   trxh.cust_trx_type_id = types.cust_trx_type_id  '||
--' AND   trxh.batch_source_id = bs.batch_source_id(+)  '||
' AND   trxh.complete_flag = ''Y'' '||
' AND   trxh.customer_trx_id  = zx_det.trx_id '||
--' AND     zx_det.ledger_id  = '||to_char(G_LEDGER_ID) ||' '||
--' AND   cc.chart_of_accounts_id = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
' AND   ardtax.code_combination_id = cc.code_combination_id '||
' AND   nvl(ardtax.tax_code_id,ardtax.location_segment_id) = ZX_RATE.TAX_RATE_ID '||
  ' AND  zx_tax.tax = zx_rate.tax
    and zx_tax.TAX_REGIME_CODE = zx_rate.TAX_REGIME_CODE
    and zx_tax.CONTENT_OWNER_ID = zx_rate.CONTENT_OWNER_ID '
--' AND   trxh.bill_to_site_use_id =  tpsu_bill.site_use_id (+) '||
--' AND   trxh.ship_to_site_use_id =  tpsu_ship.site_use_id(+) '||
--' AND   bs.batch_source_id (+) = trxh.batch_source_id '||
--' AND   trxh.doc_sequence_id = seq.doc_sequence_id (+) '||
--' AND ( bs.org_id is null or bs.org_id = trxh.org_id ) '
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_BR
       || L_WHERE_TRX_CLASS_BR
       || L_WHERE_PARTY_NAME
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_BR
       ||L_WHERE_GL_TRX_DATE_BR
       || L_WHERE_TRX_DATE_BR
       || L_WHERE_GL_DATE_BR
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       || L_WHERE_TAX_JURIS_CODE_OTH
       || L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE_OTH
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
       || L_WHERE_ACCOUNTING_STATUS_BR;

--P_WHERE_CLAUSE_AR_BR  :=  L_WHERE_CLAUSE_AR_BR;

      END IF; -- G_SUMMARY_LEVEL
  --  END IF; -- L_IS_DEFERRED_TAX_USED
  END IF; -- G_TRX_CLASS IS NULL


   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql',
                      'SQL-12 For No Tax code CMs: Header or Line Level');
    END IF;


  IF G_ESL_EU_TRX_TYPE IS NOT NULL THEN
     L_COLUMN_LIST_AR_INV_NO_TAX :=
       'SELECT  DISTINCT ZX_DET.LEDGER_ID,
        ZX_DET.TRX_ID    ,
        ZX_DET.DOC_SEQ_ID ,
        ZX_DET.DOC_SEQ_NAME ,
        ZX_DET.RECEIVABLES_TRX_TYPE_ID,
        ZX_DET.LINE_CLASS,
        ZX_DET.EVENT_CLASS_CODE ,
        TO_CHAR(NULL) ,'|| --APPLIED_FROM_ENTITY_CODE
       'TO_NUMBER(NULL)  ,'||--APPLIED_FROM_TRX_ID
       'TO_CHAR(NULL)  ,'||--APPLIED_FROM_EVENT_CLASS_CODE
       'TO_CHAR(NULL)  ,'||  -- ADJUSTED_DOC_ENTITY_CODE --APPLIED_TO_ENTITY_CODE
       'ZX_DET.ADJUSTED_DOC_TRX_ID ,'|| --ADJSUTED_DOC_ID --APPLIED_TO_TRX_ID
       --'TO_CHAR(NULL)  ,'||  --ADJUSTED_DOC_EVENT_CLASS_CODE  --APPLIED_TO_EVENT_CLASS_CODE
       'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE ,'|| --ADJUSTED_DOC_EVENT_CLASS_CODE Bug 9031051
       'ZX_DET.ADJUSTED_DOC_NUMBER  ,'|| --ADJUSTED_DOC_NUMBER  --APPLIED_TO_TRX_NUMBER
       'ZX_DET.BATCH_SOURCE_ID,
        ZX_LINE.TAX_RATE_ID ,
        TO_CHAR(NULL) ,   -- ZX_ACCOUNTS.INTERIM_TAX_CCID
        ZX_DET.PRODUCT_ID,
        ZX_DET.PRODUCT_DESCRIPTION,
        TO_CHAR(NULL), --TAXABLE_LINE_SOURCE_TABLE,
        TO_NUMBER(NULL), --TAXABLE_ITEM_SOURCE_ID,
        TO_NUMBER(NULL), --ZX_LINE.TAX_EXEMPTION_ID ,
        TO_NUMBER(NULL), --ZX_LINE.TAX_EXCEPTION_ID  ,
        TO_NUMBER(NULL),  --TAXABLE_LINE_TOTAL_AMOUNT  ,
        ZX_LINE.TAX_LINE_ID,
        TO_NUMBER(NULL), --ZX_LINE.TAX_AMT,
        TO_NUMBER(NULL), --ZX_LINE.TAX_AMT_FUNCL_CURR  ,
        TO_NUMBER(NULL), --ZX_LINE.TAX_LINE_NUMBER,
        TO_NUMBER(NULL), --ZX_LINE.TAXABLE_AMT,
        TO_NUMBER(NULL), --ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
        ZX_DET.TRX_LINE_ID,
        TO_NUMBER(NULL), --ZX_LINE.TRX_LINE_QUANTITY  ,
        ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
        TO_CHAR(NULL), --ZX_LINE.EXEMPT_REASON_CODE   ,
        TO_CHAR(NULL), --exception_reason_code
        ZX_DET.UOM_CODE,
        TO_CHAR(NULL)  ,'||--RECONCILIATION_FLAG
       'ZX_DET.INTERNAL_ORGANIZATION_ID ,'||--ORG_ID
       'TO_NUMBER(NULL),'||--BR_REF_CUSTOMER_TRX_ID
        'TO_NUMBER(NULL)   ,'||--AMOUNT_APPLIED
        'TO_NUMBER(NULL),'||  --TAX_APPLIED
       'TO_NUMBER(NULL), --ZX_LINE.TAX_PROVIDER_ID
        TO_CHAR(NULL), --ZX_LINE.TAX_RATE_CODE,
        TO_CHAR(NULL), --ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
        TO_CHAR(NULL), --ZX_TAX.TAX_TYPE_CODE,
        TO_CHAR(NULL), --ZX_RATE.TAX_RATE_NAME,
        ZX_DET.TRX_NUMBER,
        ZX_DET.TRX_DESCRIPTION,
        ZX_DET.DOC_SEQ_VALUE,
        ZX_DET.TRX_DATE,
        TO_DATE(NULL),   --Deposit Date
        ZX_DET.TRX_DUE_DATE ,
        ZX_DET.TRX_SHIPPING_DATE ,
        ZX_DET.TRX_COMMUNICATED_DATE ,
        ZX_DET.TRX_CURRENCY_CODE,
        ZX_DET.CURRENCY_CONVERSION_TYPE,
        ZX_DET.CURRENCY_CONVERSION_DATE,
        ZX_DET.CURRENCY_CONVERSION_RATE,
        ZX_DET.TRX_SIC_CODE,
        ZX_DET.FOB_POINT,
        ZX_DET.TRX_WAYBILL_NUMBER,
        ZX_DET.BATCH_SOURCE_NAME,
        ZX_DET.TRX_TYPE_DESCRIPTION,
        TO_CHAR(NULL), --ZX_RATE.DESCRIPTION,
        ZX_DET.TRX_LINE_DESCRIPTION,
        TO_NUMBER(NULL), --ZX_LINE.TRX_LINE_NUMBER,
        ZX_DET.TRX_LINE_TYPE,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE_CATEGORY,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE1,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE2,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE3,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE4,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE5,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE6,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE7,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE8,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE9,
       TO_CHAR(NULL), -- ZX_LINE.ATTRIBUTE10,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE11,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE12,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE13,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE14,
        TO_CHAR(NULL), --ZX_LINE.ATTRIBUTE15,
        ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
        ''AR'','||
        'ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
        TO_NUMBER(NULL),
        ZX_DET.APPLIED_TO_APPLICATION_ID,
        ZX_DET.ADJUSTED_DOC_LINE_ID,   --ZX_DET.APPLIED_TO_TRX_LINE_ID,
        ZX_DET.APPLIED_TO_ENTITY_CODE,
        ZX_DET.APPLIED_TO_TRX_ID,
        ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
        ZX_DET.APPLIED_TO_TRX_NUMBER,
        ZX_DET.RELATED_DOC_APPLICATION_ID,
        ZX_DET.RELATED_DOC_DATE,
        ZX_DET.RELATED_DOC_ENTITY_CODE,
        ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
        ZX_DET.RELATED_DOC_NUMBER,
        ZX_DET.RELATED_DOC_TRX_ID,
        ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
        ZX_DET.ADJUSTED_DOC_DATE,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        TO_CHAR(NULL),
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
         ZX_DET.ASSESSABLE_VALUE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
        TO_NUMBER(NULL),  --ZX_LINE.EXCEPTION_RATE,
        TO_NUMBER(NULL),  --ZX_LINE.EXEMPT_RATE_MODIFIER,
        TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT,
        TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
        TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT,
        TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
        TO_CHAR(NULL),   -- RECOVERY_RATE_CODE,
        TO_NUMBER(NULL),  --ZX_LINE.TAX_AMT_TAX_CURR ,
        TO_NUMBER(NULL),  --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
        TO_CHAR(NULL), --ZX_LINE.TAX_CURRENCY_CODE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DATE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE,
        ZX_DET.TAX_INVOICE_DATE,
        ZX_DET.TAX_INVOICE_NUMBER,
        TO_CHAR(NULL), --ZX_LINE.TAX_JURISDICTION_CODE,
        TO_CHAR(NULL), --ZX_LINE.TAX_REGIME_CODE,
        TO_CHAR(NULL), --ZX_LINE.TAX_STATUS_CODE,
         TO_NUMBER(NULL),  --ZX_LINE.TAX_STATUS_ID,
        TO_CHAR(NULL), --ZX_LINE.TAX,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        TO_CHAR(NULL), --ZX_LINE.HQ_ESTB_REG_NUMBER ,
        TO_CHAR(NULL), --zx_line.tax_registration_number,
        TO_CHAR(NULL), --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
        ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,
        TO_CHAR(NULL), --ZX_LINE.REGISTRATION_PARTY_TYPE,
        TO_CHAR(NULL), --ZX_LINE.HISTORICAL_FLAG,
        TO_CHAR(NULL), --ZX_LINE.MRC_TAX_LINE_FLAG,
        TO_CHAR(NULL), -- POSTED_FLAG,
        TO_CHAR(NULL), --ZX_LINE.REPORTING_ONLY_FLAG,
        TO_CHAR(NULL), --ZX_LINE.TAX_AMT_INCLUDED_FLAG,
        TO_CHAR(NULL), --ZX_LINE.TAX_ONLY_LINE_FLAG,
         ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL), --ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL), --ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),  --ZX_LINE.TAX_PROVIDER_ID,
         TO_DATE(NULL),
         TO_CHAR(NULL),
         TO_NUMBER(NULL),
         TO_NUMBER(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ZX_DET.ENTITY_CODE,
         TO_DATE(NULL),
         ZX_DET.TRX_LINE_GL_DATE,
         ZX_DET.UNIT_PRICE,
         TO_NUMBER(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL)';

  L_TABLE_LIST_AR_INV_NO_TAX :=  ' FROM ZX_LINES_DET_FACTORS ZX_DET ,
                                         ZX_LINES ZX_LINE ';

  L_WHERE_CLAUSE_AR_INV_NO_TAX := ' WHERE ZX_DET.APPLICATION_ID     = 222'
       ||' AND ZX_LINE.APPLICATION_ID           = ZX_DET.APPLICATION_ID
         -- AND ZX_LINE.ADJUSTED_DOC_ENTITY_CODE              = ZX_DET.ENTITY_CODE
          AND ZX_LINE.TRX_ID                   = ZX_DET.ADJUSTED_DOC_TRX_ID
          AND ZX_LINE.TRX_LINE_ID              = ZX_DET.ADJUSTED_DOC_LINE_ID
          AND ZX_LINE.INTERNAL_ORGANIZATION_ID = ZX_DET.INTERNAL_ORGANIZATION_ID'
     --||' AND ZX_DET.TAX_REPORTING_FLAG = ''Y'''
     ||' AND ZX_DET.TAX_EVENT_TYPE_CODE IN (''VALIDATE_FOR_TAX'',''FREEZE_FOR_TAX'')'
     ||' AND NOT EXISTS (SELECT 1 FROM ZX_LINES ZX_LINE1
                            WHERE ZX_LINE1.APPLICATION_ID           = ZX_DET.APPLICATION_ID
                            AND ZX_LINE1.ENTITY_CODE              = ZX_DET.ENTITY_CODE
                            AND ZX_LINE1.EVENT_CLASS_CODE         = ZX_DET.EVENT_CLASS_CODE
                            AND ZX_LINE1.TRX_ID                   = ZX_DET.TRX_ID
                            AND ZX_LINE1.TRX_LINE_ID              = ZX_DET.TRX_LINE_ID
                            AND ZX_LINE1.INTERNAL_ORGANIZATION_ID = ZX_DET.INTERNAL_ORGANIZATION_ID) '
     ||' AND ZX_DET.EVENT_CLASS_CODE IN (''CREDIT_MEMO'')'
     ||' AND ZX_DET.ADJUSTED_DOC_TRX_ID IS NOT NULL '
     || L_WHERE_REP_CONTEXT_NO_TAX
     || L_WHERE_LEDGER_ID_NO_TAX
     || L_WHERE_LEGAL_ENTITY_ID_NO_TAX
     || L_WHERE_REG_TYPE_AR_TRX_NO_TAX
     || L_WHERE_PARTY_NAME_NO_TAX
     || L_WHERE_BATCH_NAME_NO_TAX
     || L_WHERE_TRX_NUMBER_INV
     || L_WHERE_GL_TRX_DATE_INV
     || L_WHERE_TRX_DATE_INV
     || L_WHERE_GL_DATE_INV_NO_TAX
     || L_WHERE_DOC_SUB_TYPE_NO_TAX
     || L_WHERE_TRX_BUS_CAT_NO_TAX
     || L_WHERE_TAX_INVOICE_DATE
     || L_WHERE_TAX_JURIS_CODE_NO_TAX
     || L_WHERE_FIRST_PTY_TAX_REG_NUM     --L_WHERE_FIRST_REG_NUM_NO_TAX
     || L_WHERE_TAX_REGIME_CODE_NO_TAX
     || L_WHERE_TAX_NO_TAX
     || L_WHERE_TAX_STATUS_CODE_NO_TAX
     || L_WHERE_TAX_CODE_NO_TAX
     || L_WHERE_TAX_TYPE_CODE_NO_TAX
     || L_WHERE_CURRENCY_CODE_NO_TAX
     || L_WHERE_EXEM_STATUS_NO_TAX
     || L_WHERE_TAX_TRX_TYPE_NO_TAX
     || L_WHERE_TAX_LTE;
     --|| L_WHERE_ACCOUNTING_STATUS_TRX_NO_TAX
--     || L_WHERE_REPORTED_STATUS;_
 END IF;


    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.build_sql.END',
                                      'ZX_AR_EXTRACT_PKG: build_sql(-)');
    END IF;

 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 100);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','build_sql- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.build_sql',
                      g_error_buffer);
    END IF;
    g_retcode := 2;

END build_sql;

/*===========================================================================+
 | PROCEDURE                                                                 |
 |   fetch_ar_trx_info                                                          |
 |                                                                           |
 | DESCRIPTION                                                               |
 |    This procedure executes the Dynamic SQL statement returned by          |
 |    the procedure build_sql.                                               |
 |                                                                           |
 |    Called from ZX_EXTRACT_PKG.POPULATE                                   |
 |                                                                           |
 | SCOPE - Public                                                            |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   20-Feb-04  Ling Zhang   move from ZX_EXTRACT_PKG and modify with AR    |
 |                           specific logic.                                 |
 +===========================================================================*/

PROCEDURE fetch_ar_trx_info IS

  l_sql_statement_ar_1  VARCHAR2(32000);
  l_sql_statement_ar_2  VARCHAR2(32000);
  l_sql_statement_ar_3  VARCHAR2(32000);
  l_sql_statement_ar_4  VARCHAR2(32000);
  l_sql_statement_ar_5  VARCHAR2(32000);
  l_sql_statement_ar_6  VARCHAR2(32000);
  l_sql_statement_ar_7  VARCHAR2(32000);
  L_SQL_STATEMENT_TBL   SQL_STATEMENT_TABTYPE;
  l_sql1          VARCHAR2(3500);
  l_sql2          VARCHAR2(3500);
  l_sql3          VARCHAR2(3500);
  l_sql4          VARCHAR2(3500);
  l_sql5          VARCHAR2(3500);
  l_sql6          VARCHAR2(3500);
  l_sql7          VARCHAR2(3500);
  l_sql8          VARCHAR2(3500);
  l_sql9          VARCHAR2(3500);
  l_sql10          VARCHAR2(3500);
  l_sql11          VARCHAR2(3500);
BEGIN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info.BEGIN',
                                      'ZX_AR_EXTRACT_PKG: fetch_ar_trx_info(+)');
    END IF;

  --   Since the driving SQL statement for AR exceeds 32000 characters which
  --   is the maximum length of varchar2 field, the query will be executed
  --   in parts.

/*  IF G_TRX_CLASS IN ('INV','DM','CM') THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_inv  ||
      l_table_list_ar_inv   ||
      l_where_clause_ar_inv ;

  ELSIF G_TRX_CLASS IN ('APP','EDISC','UNEDISC') THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_app  ||
      l_table_list_ar_app   ||
      l_where_clause_ar_app ;

  ELSIF G_TRX_CLASS IN ('ADJ','FINCHRG') THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_adj  ||
      l_table_list_ar_adj   ||
      l_where_clause_ar_adj ;

  ELSIF G_TRX_CLASS = 'MISC_CASH_RECEIPT' THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_misc  ||
      l_table_list_ar_misc   ||
      l_where_clause_ar_misc ;

  ELSIF G_TRX_CLASS = 'BR' THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_br  ||
      l_table_list_ar_br   ||
      l_where_clause_ar_br ;
  ELSE */
    l_sql_statement_ar_1 :=
      l_column_list_ar_inv  ||
      l_table_list_ar_inv   ||
      l_where_clause_ar_inv ;

    l_sql_statement_ar_3 :=
      l_column_list_ar_app  ||
      l_table_list_ar_app   ||
      l_where_clause_ar_app ;

    l_sql_statement_ar_4 :=
      l_column_list_ar_adj  ||
      l_table_list_ar_adj   ||
      l_where_clause_ar_adj ;

    l_sql_statement_ar_5 :=
      l_column_list_ar_misc  ||
      l_table_list_ar_misc   ||
      l_where_clause_ar_misc ;

    l_sql_statement_ar_6 :=
      l_column_list_ar_br  ||
      l_table_list_ar_br   ||
      l_where_clause_ar_br ;

    l_sql_statement_ar_7 :=
      l_column_list_ar_inv_no_tax  ||
      l_table_list_ar_inv_no_tax   ||
      l_where_clause_ar_inv_no_tax ;
--  END IF ;

 IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info',
                                      'l_sql_statement_tbl  : ');
 END IF;
/*
 --    l_sql1 := substr(l_sql_statement_ar_1,1,3000);
 IF (g_level_procedure >= g_current_runtime_level ) THEN
      l_sql1 := substr(l_sql_statement_ar_1,1,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl1  : '||l_sql1);
     l_sql2 := substr(l_sql_statement_ar_1,3001,3000);
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl2  : '||l_sql2);
        l_sql3 := substr(l_sql_statement_ar_1,6001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl3  : '||l_sql3);
        l_sql4 := substr(l_sql_statement_ar_1,9001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl4  : '||l_sql4);
        l_sql5 := substr(l_sql_statement_ar_1,12001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl5  : '||l_sql5);
        l_sql6 := substr(l_sql_statement_ar_1,15001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl6  : '||l_sql6);
        l_sql7 := substr(l_sql_statement_ar_1,18001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl7  : '||l_sql7);
        l_sql8 := substr(l_sql_statement_ar_1,21001,3000);
 END IF;

IF (g_level_procedure >= g_current_runtime_level ) THEN
      l_sql1 := substr(l_sql_statement_ar_3,1,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl1  : '||l_sql1);
     l_sql2 := substr(l_sql_statement_ar_3,3001,3000);
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl2  : '||l_sql2);
        l_sql3 := substr(l_sql_statement_ar_3,6001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl3  : '||l_sql3);
        l_sql4 := substr(l_sql_statement_ar_3,9001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl4  : '||l_sql4);
        l_sql5 := substr(l_sql_statement_ar_3,12001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl5  : '||l_sql5);
        l_sql6 := substr(l_sql_statement_ar_3,15001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl6  : '||l_sql6);
        l_sql7 := substr(l_sql_statement_ar_3,18001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl7  : '||l_sql7);
        l_sql8 := substr(l_sql_statement_ar_3,21001,3000);
 END IF;

IF (g_level_procedure >= g_current_runtime_level ) THEN
      l_sql1 := substr(l_sql_statement_ar_4,1,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl1  : '||l_sql1);
     l_sql2 := substr(l_sql_statement_ar_4,3001,3000);
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl2  : '||l_sql2);
        l_sql3 := substr(l_sql_statement_ar_4,6001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl3  : '||l_sql3);
        l_sql4 := substr(l_sql_statement_ar_4,9001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl4  : '||l_sql4);
        l_sql5 := substr(l_sql_statement_ar_4,12001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl5  : '||l_sql5);
        l_sql6 := substr(l_sql_statement_ar_4,15001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl6  : '||l_sql6);
        l_sql7 := substr(l_sql_statement_ar_4,18001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl7  : '||l_sql7);
        l_sql8 := substr(l_sql_statement_ar_4,21001,3000);
 END IF;
IF (g_level_procedure >= g_current_runtime_level ) THEN
      l_sql1 := substr(l_sql_statement_ar_5,1,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl1  : '||l_sql1);
     l_sql2 := substr(l_sql_statement_ar_5,3001,3000);
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl2  : '||l_sql2);
        l_sql3 := substr(l_sql_statement_ar_5,6001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl3  : '||l_sql3);
        l_sql4 := substr(l_sql_statement_ar_5,9001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl4  : '||l_sql4);
        l_sql5 := substr(l_sql_statement_ar_5,12001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl5  : '||l_sql5);
        l_sql6 := substr(l_sql_statement_ar_5,15001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl6  : '||l_sql6);
        l_sql7 := substr(l_sql_statement_ar_5,18001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info SQL', 'l_sql_statement_tbl7  : '||l_sql7);
        l_sql8 := substr(l_sql_statement_ar_4,21001,3000);
 END IF;
*/
  l_sql_statement_tbl(1) := l_sql_statement_ar_1; --AR_INV
  l_sql_statement_tbl(2) := l_sql_statement_ar_3; --AR_APP
  l_sql_statement_tbl(3) := l_sql_statement_ar_4; --AR_ADJ
  l_sql_statement_tbl(4) := l_sql_statement_ar_5; --AR_MISC
  l_sql_statement_tbl(5) := l_sql_statement_ar_6; --AR_BR
  l_sql_statement_tbl(6) := l_sql_statement_ar_7; --AR_INV_no_tax


--         execute_dynamic_sql_strg(l_sql_statement_ar_1);
    FOR I IN 1..l_sql_statement_tbl.COUNT LOOP
      IF L_SQL_STATEMENT_TBL(I) IS NOT NULL THEN
         execute_dynamic_sql_strg(l_sql_statement_tbl(i));
         --COMMIT; Bug 8262631
      END IF;
    END LOOP;

   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.fetch_ar_trx_info.END',
                                      'ZX_AR_EXTRACT_PKG: fetch_ar_trx_info(-)');
    END IF;


END fetch_ar_trx_info;

/**********************************************************
      -- PROCEDURE execute_dynamic_sql_strg

**************************************************************/

PROCEDURE execute_dynamic_sql_strg(
    p_statement          IN VARCHAR2
) IS

  TYPE zx_rep_detail_curtype IS REF CURSOR;
  zx_rep_detail_csr       zx_rep_detail_curtype;
  i                             BINARY_INTEGER;
  total_rec                             BINARY_INTEGER;
  l_sql1          VARCHAR2(3500);
  l_sql2          VARCHAR2(3500);
  l_sql3          VARCHAR2(3500);
  l_sql4          VARCHAR2(3500);
  l_sql5          VARCHAR2(3500);
  l_sql6          VARCHAR2(3500);
  l_sql7          VARCHAR2(3500);
  l_sql8          VARCHAR2(3500);
  l_sql9          VARCHAR2(3500);
  l_sql10          VARCHAR2(3500);
  l_sql11          VARCHAR2(3500);
   st1             varchar(32000);
BEGIN

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg.BEGIN',
                                      'ZX_AR_EXTRACT_PKG: execute_dynamic_sql_strg(+)');
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg',
                                      'OPEN zx_rep_detail_csr : ');
  END IF;

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    l_sql1 := substr(p_statement,1,2000);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'l_sql_statement_tbl1  : '||l_sql1);
    l_sql2 := substr(p_statement,2001,2000);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'l_sql_statement_tbl2  : '||l_sql2);
    l_sql3 := substr(p_statement,4001,2000);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'l_sql_statement_tbl3  : '||l_sql3);
    l_sql4 := substr(p_statement,6001,2000);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'l_sql_statement_tbl4  : '||l_sql4);
    l_sql5 := substr(p_statement,8001,2000);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'l_sql_statement_tbl5  : '||l_sql5);
    l_sql6 := substr(p_statement,10001,2000);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'l_sql_statement_tbl6  : '||l_sql6);
    l_sql7 := substr(p_statement,12001,2000);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'l_sql_statement_tbl7  : '||l_sql7);
    l_sql8 := substr(p_statement,14001,3000);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'l_sql_statement_tbl8  : '||l_sql8);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_LEDGER_ID  : '||to_char(G_LEDGER_ID));
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_LEGAL_ENTITY_ID  : '||G_LEGAL_ENTITY_ID);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_BATCH_NAME  : '||G_BATCH_NAME);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TRX_NUMBER_LOW  : '||G_TRX_NUMBER_LOW);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TRX_NUMBER_HIGH  : '||G_TRX_NUMBER_HIGH);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TRX_DATE_LOW  : '||G_TRX_DATE_LOW);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TRX_DATE_HIGH  : '||G_TRX_DATE_HIGH);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_GL_DATE_LOW  : '||G_GL_DATE_LOW);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_GL_DATE_HIGH  : '||G_GL_DATE_HIGH);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_DOCUMENT_SUB_TYPE  : '||G_DOCUMENT_SUB_TYPE);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_DOCUMENT_SUB_TYPE  : '||G_DOCUMENT_SUB_TYPE);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TRX_BUSINESS_CATEGORY,  : '||G_TRX_BUSINESS_CATEGORY);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX_INVOICE_DATE_LOW,  : '||G_TAX_INVOICE_DATE_LOW);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX_INVOICE_DATE_HIGH,  : '||G_TAX_INVOICE_DATE_HIGH);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX_JURISDICTION_CODE,  : '||G_TAX_JURISDICTION_CODE);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_FIRST_PARTY_TAX_REG_NUM,  : '||G_FIRST_PARTY_TAX_REG_NUM);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX_REGIME_CODE,  : '||G_TAX_REGIME_CODE);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX,  : '||G_TAX);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX_STATUS_CODE,  : '||G_TAX_STATUS_CODE);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX_RATE_CODE_LOW,  : '||G_TAX_RATE_CODE_LOW);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX_RATE_CODE_HIGH,  : '||G_TAX_RATE_CODE_HIGH);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX_TYPE_CODE_LOW,  : '||G_TAX_TYPE_CODE_LOW);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_TAX_TYPE_CODE_HIGH,  : '||G_TAX_TYPE_CODE_HIGH);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_CURRENCY_CODE_LOW,  : '||G_CURRENCY_CODE_LOW);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_CURRENCY_CODE_HIGH,  : '||G_CURRENCY_CODE_HIGH);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_AR_EXEMPTION_STATUS,  : '||G_AR_EXEMPTION_STATUS);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_VAT_TRANSACTION_TYPE_CODE,  : '||G_VAT_TRANSACTION_TYPE_CODE);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_VAT_TAX,  : '||G_VAT_TAX);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_VAT_ADDITIONAL_TAX,  : '||G_VAT_ADDITIONAL_TAX);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_VAT_NON_TAXABLE_TAX,  : '||G_VAT_NON_TAXABLE_TAX);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_VAT_NOT_TAX,  : '||G_VAT_NOT_TAX);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_VAT_PERCEPTION_TAX,  : '||G_VAT_PERCEPTION_TAX);
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg SQL', 'G_EXCISE_TAX,  : '||G_EXCISE_TAX);

 END IF;



--    OPEN zx_rep_detail_csr FOR st1 USING
    OPEN zx_rep_detail_csr FOR p_statement USING
                               G_LEDGER_ID,
                               G_LEGAL_ENTITY_ID,
                               G_PARTY_NAME,
                               G_BATCH_NAME,
                               G_TRX_NUMBER_LOW,
                               G_TRX_NUMBER_HIGH,
                               G_TRX_DATE_LOW,
                               G_TRX_DATE_HIGH,
                               G_GL_DATE_LOW,
                               G_GL_DATE_HIGH,
                               G_DOCUMENT_SUB_TYPE,
                               G_TRX_BUSINESS_CATEGORY,
                               G_TAX_INVOICE_DATE_LOW,
                               G_TAX_INVOICE_DATE_HIGH,
                               G_TAX_JURISDICTION_CODE,
                               G_FIRST_PARTY_TAX_REG_NUM,
                               G_TAX_REGIME_CODE,
                               G_TAX,
                               G_TAX_STATUS_CODE,
                               G_TAX_RATE_CODE_LOW,
                               G_TAX_RATE_CODE_HIGH,
                               G_TAX_TYPE_CODE_LOW,
                               G_TAX_TYPE_CODE_HIGH,
                             --  G_TAX_RATE_CODE,
                             --  G_TAX_TYPE_CODE,
                               G_CURRENCY_CODE_LOW,
                               G_CURRENCY_CODE_HIGH,
                               G_AR_EXEMPTION_STATUS,
                               G_VAT_TRANSACTION_TYPE_CODE,
                               G_VAT_TAX,
                               G_VAT_ADDITIONAL_TAX,
                               G_VAT_NON_TAXABLE_TAX,
                               G_VAT_NOT_TAX,
                               G_VAT_PERCEPTION_TAX,
                               G_EXCISE_TAX;


   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg',
                                      'After Using Clause of zx_rep_detail_csr : ');

    END IF;
   IF zx_rep_detail_csr%NOTFOUND THEN

     IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg',
                                      'End of fetch zx_rep_detail_csr : ');

     END IF;
   END If;
  --
  -- init counter and global AR tables
  --
  i := 1;
  total_rec := 0;
  init_ar_gt_tables;

    g_created_by        := fnd_global.user_id;
    g_creation_date     := sysdate;
    g_last_updated_by   := fnd_global.user_id;
    g_last_update_login := fnd_global.login_id;
    g_last_update_date  := sysdate;

  -- insert when fetch up to 1000 rows
  --
   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg',
                                      'FETCH zx_rep_detail_csr : ');
    END IF;

  LOOP
    FETCH zx_rep_detail_csr  INTO
        GT_LEDGER_ID(i),
       GT_TRX_ID(i),
        GT_DOC_SEQ_ID(i),
        GT_DOC_SEQ_NAME(i),
        GT_TRX_TYPE_ID(i),
        GT_LINE_CLASS(i),
        GT_EVENT_CLASS_CODE(i),
        GT_APPLIED_FROM_ENTITY_CODE(i),
        GT_APPLIED_FROM_TRX_ID(i),
        GT_APPLIED_FROM_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_ENTITY_CODE(i),
        GT_ADJUSTED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_NUMBER(i),
        GT_BATCH_SOURCE_ID(i),
        GT_TAX_RATE_ID(i),
        GT_TAX_RATE_REG_TYPE_CODE(i),   --Check this
        GT_PRODUCT_ID(i),
        GT_PRODUCT_DESCRIPTION(i),
        GT_TAXABLE_LINE_SOURCELE(i),
        GT_TAXABLE_ITEM_SOURCE_ID(i),
        GT_TAX_EXEMPTION_ID(i),
        GT_TAX_EXCEPTION_ID(i),
        GT_TAXABLE_LINE_TOTAL_AMOUNT(i),
        GT_TAX_LINE_ID(i),
        GT_TAX_AMT(i),
        GT_TAX_AMT_FUNCL_CURR(i),
        GT_TAX_LINE_NUMBER(i),
        GT_TAXABLE_AMT(i),
        GT_TAXABLE_AMT_FUNCL_CURR(i),
        GT_TRX_LINE_ID(i),
        GT_TRX_LINE_QUANTITY(i),
        GT_EXEMPT_CERTIFICATE_NUMBER(i),
        GT_EXEMPT_REASON_CODE(i),
        GT_TAX_EXCEPTION_REASON_CODE(i),
        GT_UOM_CODE(i),
        GT_RECONCILIATION_FLAG(i),
        GT_INTERNAL_ORGANIZATION_ID(i),
        GT_BR_REF_CUSTOMER_TRX_ID(i),
     --   GT_REVERSE_FLAG(i),     --REVERSAL_DATE    Check this column
        GT_AMOUNT_APPLIED(i),
        GT_TAX_APPLIED(i),
        GT_TAX_RATE(i),
        GT_TAX_RATE_CODE(i),
        GT_TAX_RATE_VAT_TRX_TYPE_CODE(i),
        GT_TAX_TYPE_CODE(i),
        GT_TAX_RATE_CODE_NAME(i),     --  Do we need to rename tax_rate_name?
        GT_TRX_NUMBER(i),
        GT_TRX_DESCRIPTION(i),
        GT_DOC_SEQ_VALUE(i),
        GT_TRX_DATE(i),
        GT_DEPOSIT_DATE(i),
        GT_TRX_DUE_DATE(i),
        GT_TRX_SHIPPING_DATE(i),
        GT_TRX_COMMUNICATED_DATE(i),
        GT_TRX_CURRENCY_CODE(i),
        GT_CURRENCY_CONVERSION_TYPE(i),
        GT_CURRENCY_CONVERSION_DATE(i),
        GT_CURRENCY_CONVERSION_RATE(i),
        GT_TRX_SIC_CODE(i),
        GT_FOB_POINT(i),
        GT_TRX_WAYBILL_NUMBER(i),
        GT_TRX_BATCH_SOURCE_NAME(i),
        GT_TRX_TYPE_DESCRIPTION(i),
        GT_TAX_RATE_CODE_DESCRIPTION(i),
        GT_TRX_LINE_DESCRIPTION(i),
        GT_TRX_LINE_NUMBER(i),
        GT_TRX_LINE_TYPE(i),
        GT_TAX_LINE_USER_CATEGORY(i),
        GT_TAX_LINE_USER_ATTRIBUTE1(i),
        GT_TAX_LINE_USER_ATTRIBUTE2(i),
        GT_TAX_LINE_USER_ATTRIBUTE3(i),
        GT_TAX_LINE_USER_ATTRIBUTE4(i),
        GT_TAX_LINE_USER_ATTRIBUTE5(i),
        GT_TAX_LINE_USER_ATTRIBUTE6(i),
        GT_TAX_LINE_USER_ATTRIBUTE7(i),
        GT_TAX_LINE_USER_ATTRIBUTE8(i),
        GT_TAX_LINE_USER_ATTRIBUTE9(i),
        GT_TAX_LINE_USER_ATTRIBUTE10(i),
        GT_TAX_LINE_USER_ATTRIBUTE11(i),
        GT_TAX_LINE_USER_ATTRIBUTE12(i),
        GT_TAX_LINE_USER_ATTRIBUTE13(i),
        GT_TAX_LINE_USER_ATTRIBUTE14(i),
        GT_TAX_LINE_USER_ATTRIBUTE15(i),
        GT_APPLICATION_ID(i),
        GT_DOC_EVENT_STATUS(i),
        GT_APPLICATION_DOC_STATUS(i),
        GT_ESTABLISHMENT_ID(i),
        GT_EXTRACT_SOURCE_LEDGER(i),
      --  GT_FUNCTIONAL_CURRECNY_CODE(i),
      --  GT_LEDGER_NAME(i),
        GT_MINIMUM_ACCOUNTABLE_UNIT(i),
        GT_PRECISION(i),
        GT_RECEIPT_CLASS_ID(i),
        GT_APPLIED_TO_APPLICATION_ID(i),
        GT_APPLIED_TO_TRX_LINE_ID(i),
        GT_APPLIED_TO_ENTITY_CODE(i),
        GT_APPLIED_TO_TRX_ID(i),
        GT_APPLIED_TO_EVENT_CLS_CODE(i),
        GT_APPLIED_TO_TRX_NUMBER(i),
        GT_RELATED_DOC_APPLICATION_ID(i),
        GT_RELATED_DOC_DATE(i),
        GT_RELATED_DOC_ENTITY_CODE(i),
        GT_RELATED_DOC_EVENT_CLS_CODE(i),
        GT_RELATED_DOC_NUMBER(i),
        GT_RELATED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_APPL_ID(i),
        GT_ADJUSTED_DOC_DATE(i),
        GT_REF_DOC_APPLICATION_ID(i),
        GT_REF_DOC_ENTITY_CODE(i),
        GT_REF_DOC_EVENT_CLASS_CODE(i),
        GT_REF_DOC_LINE_ID(i),
        GT_REF_DOC_LINE_QUANTITY(i),
        GT_REF_DOC_TRX_ID(i),
        GT_DEF_REC_SETTLEMENT_OPT_CD(i),
        GT_DEFAULT_TAXATION_COUNTRY(i),
        GT_DOCUMENT_SUB_TYPE(i),
        GT_ASSESSABLE_VALUE(i),
        GT_TRX_BUSINESS_CATEGORY(i),
        GT_LINE_INTENDED_USE(i),
        GT_PRODUCT_CATEGORY(i),
        GT_PROD_FISC_CLASSIFICATION(i),
        GT_SUPPLIER_EXCHANGE_RATE(i),
        GT_SUPPLIER_TAX_INVOICE_DATE(i),
        GT_SUPPLIER_TAX_INVOICE_NUM(i),
        GT_USER_DEFINED_FISC_CLASS(i),
        GT_EXCEPTION_RATE(i),
        GT_EXEMPT_RATE_MODIFIER(i),
        GT_ORIG_TAX_AMT(i),
        GT_ORIG_TAX_AMT_TAX_CURR(i),
        GT_ORIG_TAXABLE_AMT(i),
        GT_ORIG_TAXABLE_AMT_TAX_CURR(i),
        GT_RECOVERY_RATE_CODE(i),
        GT_TAX_AMT_TAX_CURR(i),
        GT_TAX_APPORTIONMENT_LINE_NUM(i),
        GT_TAX_CURRENCY_CODE(i),
        GT_TAX_DATE(i),
        GT_TAX_DETERMINE_DATE(i),
        GT_TAX_INVOICE_DATE(i),
        GT_TAX_INVOICE_NUMBER(i),
        GT_TAX_JURISDICTION_CODE(i),
        GT_TAX_REGIME_CODE(i),
        GT_TAX_STATUS_CODE(i),
        GT_TAX_STATUS_ID(i),
        GT_TAX(i),
        GT_SHIP_FROM_PTY_TAX_PROF_ID(i),
        GT_SHIP_FROM_SITE_TAX_PROF_ID(i),
        GT_SHIP_TO_PARTY_TAX_PROF_ID(i),
        GT_SHIP_TO_SITE_TAX_PROF_ID(i),
        GT_BILL_TO_PTY_TAX_PROF_ID(i),
        GT_BILL_TO_SITE_TAX_PROF_ID(i),
        GT_SHIPPING_TP_ADDRESS_ID(i),    --SHIP_THIRD_PTY_ACCT_SITE_ID
        GT_BILLING_TP_ADDRESS_ID(i),
        GT_SHIPPING_TP_SITE_ID(i),
        GT_BILLING_TP_SITE_ID(i),
        GT_SHIPPING_TP_ID(i),
        GT_BILLING_TRADING_PARTNER_ID(i),
        GT_HQ_ESTB_REG_NUMBER(i),
        gt_tax_line_registration_num(i),
        GT_LEGAL_ENTITY_TAX_REG_NUM(i),
        GT_OWN_HQ_PARTY_SITE_PROF_ID(i),
        GT_OWN_HQ_PARTY_TAX_PROF_ID(i),
        GT_PORT_OF_ENTRY_CODE(i),
        GT_REGISTRATION_PARTY_TYPE(i),
        GT_HISTORICAL_FLAG(i),
        GT_MRC_TAX_LINE_FLAG(i),
      GT_POSTED_FLAG(i),
        GT_REPORTING_ONLY_FLAG(i),
        GT_TAX_AMT_INCLUDED_FLAG(i),
        GT_TAX_ONLY_LINE_FLAG(i),
        GT_EVENT_CLASS_MAPPING_ID(i),
        GT_TRX_LEVEL_TYPE(i),
        GT_PLACE_OF_SUPPLY_TYPE_CODE(i),
        GT_POA_LOCATION_ID(i),
        GT_POO_LOCATION_ID(i),
        GT_DEF_PLACE_OF_SUP_TYPE_CODE(i),
        GT_LINE_AMT(i),
        GT_TAX_PROVIDER_ID(i),
        GT_AR_CASH_RCPT_RVRS_DATE(i),
        GT_AR_CASH_RCPT_RVRS_STATUS(i),
        GT_ACCTD_AMOUNT_CR(i),
        GT_ACCTD_AMOUNT_DR(i),
        GT_REC_APPLICATION_STATUS(i),
        GT_ACCOUNT_CLASS(i),
        GT_LATEST_REC_FLAG(i),
        GT_ACTG_SOURCE_ID(i),
  GT_ENTITY_CODE(i),
  GT_POSTED_DATE(i),
        GT_GL_DATE(i),
        GT_UNIT_PRICE(i),
        GT_BANKING_ACCOUNT_ID(i),
  GT_OFFSET_TAX_RATE(i),
  GT_OFFSET_FLAG(i);


   IF zx_rep_detail_csr%NOTFOUND THEN
      IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg',
                                      'End of FETCH zx_rep_detail_csr : ');
     END IF;
   END IF;
    IF  zx_rep_detail_csr%FOUND THEN
      -- populate EXTRACT_REPORT_LINE_NUMBER
      --
      GT_EXTRACT_REPORT_LINE_NUMBER(i) := G_EXTRACT_REPORT_LINE_NUMBER;
      G_EXTRACT_REPORT_LINE_NUMBER := G_EXTRACT_REPORT_LINE_NUMBER + 1;

      IF (i >= C_LINES_PER_INSERT) THEN
          total_rec := total_rec + i;
        insert_ar_trx_info;
        --COMMIT; Bug 8262631
        --
        -- reset counter and init gt tables
        --
        i := 1;
        init_ar_gt_tables;
      ELSE
        i := i + 1;
      END IF;

    ELSE
          total_rec := total_rec + i;
      --
      -- total rows fetched less than 1000
      -- insert the rest of rows
      --
      insert_ar_trx_info;
      --COMMIT; Bug 8262631
      CLOSE zx_rep_detail_csr;
      EXIT;
    END IF;
  END LOOP;

    IF total_rec = 0 THEN
     IF (g_level_procedure >= g_current_runtime_level ) THEN
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg',
                      'No Data found for the product AR (OR) Verify Parameters');
       g_retcode := 2;
      END IF;
    END IF;


   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.execute_dynamic_sql_strg.END',
                                      'ZX_AR_EXTRACT_PKG: execute_dynamic_sql_strg(-)');
    END IF;

 EXCEPTION
   WHEN VALUE_ERROR THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 100);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','execute_dynamic_sql_strg- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.execute_dynamic_sql_strg - Numeric error',
                      g_error_buffer);
    END IF;
    g_retcode := 2;

   WHEN NO_DATA_FOUND THEN

  g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 100);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','execute_dynamic_sql_strg- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.execute_dynamic_sql_strg-No data',
                      g_error_buffer);
    END IF;
    g_retcode := 2;

  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','execute_dynamic_sql_strg- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.execute_dynamic_sql_strg',
                      g_error_buffer);
    END IF;

    g_retcode := 2;

END execute_dynamic_sql_strg;


/*===========================================================================+
 | PROCEDURE                                                                 |
 |   insert_ar_trx_info                                                      |
 |   name changed from INSERT_AR_SUB_ITF                                     |
 |   (rewrite from INSERT_SQL_AR)                                            |
 | DESCRIPTION                                                               |
 |    This procedure inserts AR data into ZX_AR_EXTRACT_PKG_SUB_ITF table       |
 |                                                                           |
 | SCOPE - Private                                                           |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |  04-JAN-03   S. korrapati Created                                         |
 |  30-JUN-04   Amol Pai     Added Insert into ar and common extension       |
 |                           tables (moved code from populate to build_sql)  |
 |                                                                           |
 +===========================================================================*/
PROCEDURE insert_ar_trx_info
IS

  l_count       number;

BEGIN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.insert_ar_trx_info.BEGIN',
                                      'ZX_AR_EXTRACT_PKG: insert_ar_trx_info(+)');
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.insert_ar_trx_info',
                                      'Rows fetched : '||to_char(GT_LEDGER_ID.COUNT));
    END IF;

  l_count := NVL(GT_LEDGER_ID.COUNT, 0);

  FORALL i IN 1 .. l_count
    INSERT INTO ZX_REP_TRX_DETAIL_T(
        DETAIL_TAX_LINE_ID,
        LEDGER_ID,
        TRX_ID ,
        DOC_SEQ_ID,
        DOC_SEQ_NAME ,
        TRX_TYPE_ID ,
        TRX_LINE_CLASS,
        EVENT_CLASS_CODE ,
        APPLIED_FROM_ENTITY_CODE,
        APPLIED_FROM_TRX_ID,
        APPLIED_FROM_EVENT_CLASS_CODE,
        ADJUSTED_DOC_ENTITY_CODE ,
        ADJUSTED_DOC_TRX_ID ,
        ADJUSTED_DOC_EVENT_CLASS_CODE ,
        ADJUSTED_DOC_NUMBER ,
        TRX_BATCH_SOURCE_ID,
        TAX_RATE_ID ,
        TAX_RATE_REGISTER_TYPE_CODE,
        PRODUCT_ID,
        PRODUCT_DESCRIPTION,
        TAXABLE_LINE_SOURCE_TABLE ,
        TAXABLE_ITEM_SOURCE_ID,
        TAX_EXEMPTION_ID ,
        TAX_EXCEPTION_ID ,
        TAXABLE_LINE_TOTAL_AMOUNT,
        TAX_LINE_ID ,
        TAX_AMT ,
        TAX_AMT_FUNCL_CURR ,
        TAX_LINE_NUMBER ,
        TAXABLE_AMT ,
        TAXABLE_AMT_FUNCL_CURR ,
        TRX_LINE_ID ,
        TRX_LINE_QUANTITY ,
        EXEMPT_CERTIFICATE_NUMBER,
        EXEMPT_REASON_CODE ,
        TAX_EXCEPTION_REASON_CODE ,
        UOM_CODE,
        RECONCILIATION_FLAG ,
        INTERNAL_ORGANIZATION_ID,
        BR_REF_CUSTOMER_TRX_ID,
      --  REVERSE_FLAG,
        AMOUNT_APPLIED,
        TAX_APPLIED,
        TAX_RATE,
        TAX_RATE_CODE,
        TAX_RATE_VAT_TRX_TYPE_CODE,
        TAX_TYPE_CODE,
        TAX_RATE_CODE_NAME ,
        TRX_NUMBER ,
        TRX_DESCRIPTION ,
        DOC_SEQ_VALUE,
        TRX_DATE,
        DEPOSIT_DATE,
        TRX_DUE_DATE ,
        TRX_SHIPPING_DATE ,
        TRX_COMMUNICATED_DATE ,
        TRX_CURRENCY_CODE,
        CURRENCY_CONVERSION_TYPE,
        CURRENCY_CONVERSION_DATE,
        CURRENCY_CONVERSION_RATE,
        TRX_SIC_CODE,
        FOB_POINT,
        TRX_WAYBILL_NUMBER  ,
        TRX_BATCH_SOURCE_NAME,
        TRX_TYPE_DESCRIPTION,
        TRX_TYPE_MNG,
        TAX_RATE_CODE_DESCRIPTION ,
        TRX_LINE_DESCRIPTION,
        TRX_LINE_NUMBER,
        TRX_LINE_TYPE,
        TAX_LINE_USER_CATEGORY ,
        TAX_LINE_USER_ATTRIBUTE1 ,
        TAX_LINE_USER_ATTRIBUTE2 ,
        TAX_LINE_USER_ATTRIBUTE3 ,
        TAX_LINE_USER_ATTRIBUTE4 ,
        TAX_LINE_USER_ATTRIBUTE5 ,
        TAX_LINE_USER_ATTRIBUTE6 ,
        TAX_LINE_USER_ATTRIBUTE7 ,
        TAX_LINE_USER_ATTRIBUTE8 ,
        TAX_LINE_USER_ATTRIBUTE9,
        TAX_LINE_USER_ATTRIBUTE10 ,
        TAX_LINE_USER_ATTRIBUTE11,
        TAX_LINE_USER_ATTRIBUTE12 ,
        TAX_LINE_USER_ATTRIBUTE13 ,
        TAX_LINE_USER_ATTRIBUTE14 ,
        TAX_LINE_USER_ATTRIBUTE15 ,
        APPLICATION_ID,
        DOC_EVENT_STATUS,
        APPLICATION_DOC_STATUS,
        ESTABLISHMENT_ID,
        EXTRACT_SOURCE_LEDGER ,
        --FUNCTIONAL_CURRENCY_CODE,
        --LEDGER_NAME,
        MINIMUM_ACCOUNTABLE_UNIT,
        PRECISION,
        RECEIPT_CLASS_ID ,
        APPLIED_TO_APPLICATION_ID                 ,
        APPLIED_TO_TRX_LINE_ID                   ,
        APPLIED_TO_ENTITY_CODE ,
        APPLIED_TO_TRX_ID,
        APPLIED_TO_EVENT_CLASS_CODE ,
        APPLIED_TO_TRX_NUMBER ,
        RELATED_DOC_APPLICATION_ID ,
        RELATED_DOC_DATE ,
        RELATED_DOC_ENTITY_CODE ,
        RELATED_DOC_EVENT_CLASS_CODE ,
        RELATED_DOC_NUMBER ,
        RELATED_DOC_TRX_ID ,
        ADJUSTED_DOC_APPLICATION_ID ,
        ADJUSTED_DOC_DATE ,
        REF_DOC_APPLICATION_ID ,
        REF_DOC_ENTITY_CODE ,
        REF_DOC_EVENT_CLASS_CODE ,
        REF_DOC_LINE_ID ,
        REF_DOC_LINE_QUANTITY ,
        REF_DOC_TRX_ID ,
        DEF_REC_SETTLEMENT_OPTION_CODE,
        DEFAULT_TAXATION_COUNTRY,
        DOCUMENT_SUB_TYPE,
        ASSESSABLE_VALUE,
        TRX_BUSINESS_CATEGORY,
        LINE_INTENDED_USE,
        PRODUCT_CATEGORY  ,
        PRODUCT_FISC_CLASSIFICATION,
        SUPPLIER_EXCHANGE_RATE,
        SUPPLIER_TAX_INVOICE_DATE,
        SUPPLIER_TAX_INVOICE_NUMBER,
        USER_DEFINED_FISC_CLASS,
        EXCEPTION_RATE,
        EXEMPT_RATE_MODIFIER,
        ORIG_TAX_AMT,
        ORIG_TAX_AMT_TAX_CURR ,
        ORIG_TAXABLE_AMT,
        ORIG_TAXABLE_AMT_TAX_CURR,
        recovery_rate_code,
        TAX_AMT_TAX_CURR ,
        TAX_APPORTIONMENT_LINE_NUMBER,
        TAX_CURRENCY_CODE,
        TAX_DATE,
        TAX_DETERMINE_DATE,
        TAX_INVOICE_DATE,
        TAX_INVOICE_NUMBER ,
        TAX_JURISDICTION_CODE,
       -- TAX_RATE_VAT_TRX_TYPE_DESC ,
        TAX_REGIME_CODE,
        TAX_STATUS_CODE,
        TAX_STATUS_ID,
        TAX,
        SHIP_FROM_PARTY_TAX_PROF_ID,
        SHIP_FROM_SITE_TAX_PROF_ID,
        SHIP_TO_PARTY_TAX_PROF_ID  ,
        SHIP_TO_SITE_TAX_PROF_ID  ,
        BILL_TO_PARTY_TAX_PROF_ID,
        BILL_TO_SITE_TAX_PROF_ID,
        SHIPPING_TP_ADDRESS_ID,    --SHIP_THIRD_PTY_ACCT_SITE_ID
        BILLING_TP_ADDRESS_ID,     --bill_third_pty_acct_site_id
        SHIPPING_TP_SITE_ID,       --ship_to_cust_acct_site_use_id
        BILLING_TP_SITE_ID,        --bill_to_cust_acct_site_use_id
        SHIPPING_TRADING_PARTNER_ID, --ship_third_pty_acct_id
        BILLING_TRADING_PARTNER_ID,  -- bill_third_pty_acct_id
        HQ_ESTB_REG_NUMBER ,
        TAX_LINE_REGISTRATION_NUMBER,
        LEGAL_ENTITY_TAX_REG_NUMBER,
        OWN_HQ_PARTY_SITE_PROF_ID ,
        OWN_HQ_PARTY_TAX_PROF_ID ,
        PORT_OF_ENTRY_CODE,
        REGISTRATION_PARTY_TYPE,
        HISTORICAL_FLAG,
        MRC_TAX_LINE_FLAG,
     POSTED_FLAG,
        REPORTING_ONLY_FLAG,
        TAX_AMT_INCLUDED_FLAG,
        TAX_ONLY_FLAG,
        EVENT_CLASS_MAPPING_ID,
        TRX_LEVEL_TYPE,
        PLACE_OF_SUPPLY_TYPE_CODE,
        POA_LOCATION_ID,
        POO_LOCATION_ID,
        DEF_PLACE_OF_SUPPLY_TYPE_CODE,
        TRX_LINE_AMT,
        TAX_PROVIDER_ID,
        CREATED_BY ,
        CREATION_DATE ,
        LAST_UPDATED_BY,
        LAST_UPDATE_DATE,
        LAST_UPDATE_LOGIN,
        REQUEST_ID,
        AR_CASH_RECEIPT_REVERSE_DATE,
        AR_CASH_RECEIPT_REVERSE_STATUS,
        ACCTD_AMOUNT_CR,
        ACCTD_AMOUNT_DR,
        REC_APPLICATION_STATUS,
        ACCOUNT_CLASS,
        LATEST_REC_FLAG,
        ACTG_SOURCE_ID,
  ENTITY_CODE,
  POSTED_DATE,
        GL_DATE,
        UNIT_PRICE,
        BANK_ACCOUNT_ID,
  REP_CONTEXT_ID,
  OFFSET_TAX_RATE_CODE,
  OFFSET_FLAG)
  VALUES(
        ZX_REP_TRX_DETAIL_T_S.NEXTVAL,
        GT_LEDGER_ID(i),
        GT_TRX_ID(i),
        GT_DOC_SEQ_ID(i),
        GT_DOC_SEQ_NAME(i),
        GT_TRX_TYPE_ID(i),
        GT_LINE_CLASS(i),
        GT_EVENT_CLASS_CODE(i),
        GT_APPLIED_FROM_ENTITY_CODE(i),
        GT_APPLIED_FROM_TRX_ID(i),
        GT_APPLIED_FROM_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_ENTITY_CODE(i),
        GT_ADJUSTED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_NUMBER(i),
        GT_BATCH_SOURCE_ID(i),
        GT_TAX_RATE_ID(i),
       -- g_register_type,
        GT_TAX_RATE_REG_TYPE_CODE(i),
        GT_PRODUCT_ID(i),
        GT_PRODUCT_DESCRIPTION(i),
        GT_TAXABLE_LINE_SOURCELE(i),
        GT_TAXABLE_ITEM_SOURCE_ID(i),
        GT_TAX_EXEMPTION_ID(i),
        GT_TAX_EXCEPTION_ID(i),
        GT_TAXABLE_LINE_TOTAL_AMOUNT(i),
        GT_TAX_LINE_ID(i),
        GT_TAX_AMT(i),
        GT_TAX_AMT_FUNCL_CURR(i),
        GT_TAX_LINE_NUMBER(i),
        GT_TAXABLE_AMT(i),
        GT_TAXABLE_AMT_FUNCL_CURR(i),
        GT_TRX_LINE_ID(i),
        GT_TRX_LINE_QUANTITY(i),
        GT_EXEMPT_CERTIFICATE_NUMBER(i),
        GT_EXEMPT_REASON_CODE(i),
        GT_TAX_EXCEPTION_REASON_CODE(i),
        GT_UOM_CODE(i),
        GT_RECONCILIATION_FLAG(i),
        GT_INTERNAL_ORGANIZATION_ID(i),
        GT_BR_REF_CUSTOMER_TRX_ID(i),
     --   GT_REVERSE_FLAG(i),   -- REVERSAL_DATE    Check this column
        GT_AMOUNT_APPLIED(i),
        GT_TAX_APPLIED(i),
        GT_TAX_RATE(i),
        GT_TAX_RATE_CODE(i),
        GT_TAX_RATE_VAT_TRX_TYPE_CODE(i),
        GT_TAX_TYPE_CODE(i),
        GT_TAX_RATE_CODE_NAME(i),     --  Do we need to rename tax_rate_name?
        GT_TRX_NUMBER(i),
        GT_TRX_DESCRIPTION(i),
        GT_DOC_SEQ_VALUE(i),
        GT_TRX_DATE(i),
        GT_DEPOSIT_DATE(i),
        GT_TRX_DUE_DATE(i),
        GT_TRX_SHIPPING_DATE(i),
        GT_TRX_COMMUNICATED_DATE(i),
        GT_TRX_CURRENCY_CODE(i),
        GT_CURRENCY_CONVERSION_TYPE(i),
        GT_CURRENCY_CONVERSION_DATE(i),
        GT_CURRENCY_CONVERSION_RATE(i),
        GT_TRX_SIC_CODE(i),
        GT_FOB_POINT(i),
        GT_TRX_WAYBILL_NUMBER(i),
        GT_TRX_BATCH_SOURCE_NAME(i),
        GT_TRX_TYPE_DESCRIPTION(i),
        GT_TRX_TYPE_DESCRIPTION(i),
        GT_TAX_RATE_CODE_DESCRIPTION(i), --populate
        GT_TRX_LINE_DESCRIPTION(i),
        GT_TRX_LINE_NUMBER(i),
        GT_TRX_LINE_TYPE(i),
        GT_TAX_LINE_USER_CATEGORY(i),
        GT_TAX_LINE_USER_ATTRIBUTE1(i),
        GT_TAX_LINE_USER_ATTRIBUTE2(i),
        GT_TAX_LINE_USER_ATTRIBUTE3(i),
        GT_TAX_LINE_USER_ATTRIBUTE4(i),
        GT_TAX_LINE_USER_ATTRIBUTE5(i),
        GT_TAX_LINE_USER_ATTRIBUTE6(i),
        GT_TAX_LINE_USER_ATTRIBUTE7(i),
        GT_TAX_LINE_USER_ATTRIBUTE8(i),
        GT_TAX_LINE_USER_ATTRIBUTE9(i),
        GT_TAX_LINE_USER_ATTRIBUTE10(i),
        GT_TAX_LINE_USER_ATTRIBUTE11(i),
        GT_TAX_LINE_USER_ATTRIBUTE12(i),
        GT_TAX_LINE_USER_ATTRIBUTE13(i),
        GT_TAX_LINE_USER_ATTRIBUTE14(i),
        GT_TAX_LINE_USER_ATTRIBUTE15(i),
        GT_APPLICATION_ID(i),
        GT_DOC_EVENT_STATUS(i),
        GT_APPLICATION_DOC_STATUS(i),
        GT_ESTABLISHMENT_ID(i),
        GT_EXTRACT_SOURCE_LEDGER(i),
      --  GT_FUNCTIONAL_CURRECNY_CODE(i),
      --  GT_LEDGER_NAME(i),
        GT_MINIMUM_ACCOUNTABLE_UNIT(i),
        GT_PRECISION(i),
        GT_RECEIPT_CLASS_ID(i),
        GT_APPLIED_TO_APPLICATION_ID(i),
        GT_APPLIED_TO_TRX_LINE_ID(i),
        GT_APPLIED_TO_ENTITY_CODE(i),
        GT_APPLIED_TO_TRX_ID(i),
        GT_APPLIED_TO_EVENT_CLS_CODE(i),
        GT_APPLIED_TO_TRX_NUMBER(i),
        GT_RELATED_DOC_APPLICATION_ID(i),
        GT_RELATED_DOC_DATE(i),
        GT_RELATED_DOC_ENTITY_CODE(i),
        GT_RELATED_DOC_EVENT_CLS_CODE(i),
        GT_RELATED_DOC_NUMBER(i),
        GT_RELATED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_APPL_ID(i),
        GT_ADJUSTED_DOC_DATE(i),
        GT_REF_DOC_APPLICATION_ID(i),
        GT_REF_DOC_ENTITY_CODE(i),
        GT_REF_DOC_EVENT_CLASS_CODE(i),
        GT_REF_DOC_LINE_ID(i),
        GT_REF_DOC_LINE_QUANTITY(i),
        GT_REF_DOC_TRX_ID(i),
        GT_DEF_REC_SETTLEMENT_OPT_CD(i),
        GT_DEFAULT_TAXATION_COUNTRY(i),
        GT_DOCUMENT_SUB_TYPE(i),
        GT_ASSESSABLE_VALUE(i),
        GT_TRX_BUSINESS_CATEGORY(i),
        GT_LINE_INTENDED_USE(i),
        GT_PRODUCT_CATEGORY(i),
        GT_PROD_FISC_CLASSIFICATION(i),
        GT_SUPPLIER_EXCHANGE_RATE(i),
        GT_SUPPLIER_TAX_INVOICE_DATE(i),
        GT_SUPPLIER_TAX_INVOICE_NUM(i),
        GT_USER_DEFINED_FISC_CLASS(i),
        GT_EXCEPTION_RATE(i),
        GT_EXEMPT_RATE_MODIFIER(i),
        GT_ORIG_TAX_AMT(i),
        GT_ORIG_TAX_AMT_TAX_CURR(i),
        GT_ORIG_TAXABLE_AMT(i),
        GT_ORIG_TAXABLE_AMT_TAX_CURR(i),
        GT_RECOVERY_RATE_CODE(i),
        GT_TAX_AMT_TAX_CURR(i),
        GT_TAX_APPORTIONMENT_LINE_NUM(i),
        GT_TAX_CURRENCY_CODE(i),
        GT_TAX_DATE(i),
        GT_TAX_DETERMINE_DATE(i),
        GT_TAX_INVOICE_DATE(i),
        GT_TAX_INVOICE_NUMBER(i),
        GT_TAX_JURISDICTION_CODE(i),
        GT_TAX_REGIME_CODE(i),
        GT_TAX_STATUS_CODE(i),
        GT_TAX_STATUS_ID(i),
        GT_TAX(i),
        GT_SHIP_FROM_PTY_TAX_PROF_ID(i),
        GT_SHIP_FROM_SITE_TAX_PROF_ID(i),
        GT_SHIP_TO_PARTY_TAX_PROF_ID(i),
        GT_SHIP_TO_SITE_TAX_PROF_ID(i),
        GT_BILL_TO_PTY_TAX_PROF_ID(i),
        GT_BILL_TO_SITE_TAX_PROF_ID(i),
        GT_SHIPPING_TP_ADDRESS_ID(i),    --SHIP_THIRD_PTY_ACCT_SITE_ID
        GT_BILLING_TP_ADDRESS_ID(i),
        GT_SHIPPING_TP_SITE_ID(i),
        GT_BILLING_TP_SITE_ID(i),
        GT_SHIPPING_TP_ID(i),
        GT_BILLING_TRADING_PARTNER_ID(i),
        GT_HQ_ESTB_REG_NUMBER(i),
        gt_tax_line_registration_num(i),
        GT_LEGAL_ENTITY_TAX_REG_NUM(i),
        GT_OWN_HQ_PARTY_SITE_PROF_ID(i),
        GT_OWN_HQ_PARTY_TAX_PROF_ID(i),
        GT_PORT_OF_ENTRY_CODE(i),
        GT_REGISTRATION_PARTY_TYPE(i),
        GT_HISTORICAL_FLAG(i),
        GT_MRC_TAX_LINE_FLAG(i),
      GT_POSTED_FLAG(i),
        GT_REPORTING_ONLY_FLAG(i),
        GT_TAX_AMT_INCLUDED_FLAG(i),
        GT_TAX_ONLY_LINE_FLAG(i),
        GT_EVENT_CLASS_MAPPING_ID(i),
        GT_TRX_LEVEL_TYPE(i),
        GT_PLACE_OF_SUPPLY_TYPE_CODE(i),
        GT_POA_LOCATION_ID(i),
        GT_POO_LOCATION_ID(i),
        GT_DEF_PLACE_OF_SUP_TYPE_CODE(i),
        GT_LINE_AMT(i),
        GT_TAX_PROVIDER_ID(i),
        G_CREATED_BY ,
        G_CREATION_DATE ,
        G_LAST_UPDATED_BY,
        G_LAST_UPDATE_DATE,
        G_LAST_UPDATE_LOGIN,
--        1,
 --       SYSDATE,
  --      1,
   --     SYSDATE,
    --    1,
        g_request_id,
   GT_AR_CASH_RCPT_RVRS_DATE(i),
        GT_AR_CASH_RCPT_RVRS_STATUS(i),
        GT_ACCTD_AMOUNT_CR(i),
        GT_ACCTD_AMOUNT_DR(i),
        GT_REC_APPLICATION_STATUS(i),
        GT_ACCOUNT_CLASS(i),
        GT_LATEST_REC_FLAG(i),
        GT_ACTG_SOURCE_ID(i),
  GT_ENTITY_CODE(i),
  GT_POSTED_DATE(i),
       GT_GL_DATE(i),
        GT_UNIT_PRICE(i),
       GT_BANKING_ACCOUNT_ID(i),
       G_REP_CONTEXT_ID,
       GT_OFFSET_TAX_RATE(i),
       GT_OFFSET_FLAG(i));

    IF (g_level_procedure >= g_current_runtime_level ) THEN
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.insert_ar_trx_info',
                      'Number of AR rows successfully inserted = '||TO_CHAR(NVL(GT_LEDGER_ID.COUNT, 0)));
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.insert_ar_trx_info.END',
                                      'ZX_AR_EXTRACT_PKG: insert_ar_trx_info(-)');
    END IF;

 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','insert_ar_trx_info- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.insert_ar_trx_info',
                      g_error_buffer);
    END IF;
    g_retcode := 2;

END insert_ar_trx_info;

/*===========================================================================+
 | PROCEDURE                                                                 |
 |   init_ar_gt_tables                                                          |
 | DESCRIPTION                                                               |
 |    This proceure initializes all GT tables used to hold data fetched      |
 |    from the execute sql for AP, AR and GL                                 |
 |                                                                           |
 | SCOPE - Private                                                           |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   4-AUG-03   Phong La     Created                                         |
 |  07-OCT-03   Phong La     Bugfix 3175265 added initialize tables for      |
 |                           GL_POSTED_DATE, PRECISION, EXCHANGE_RATE,       |
 |                           MINIMUM_ACCOUNTABLE_UNIT, ORG_ID,               |
 |                           BALANCING_SEGMENT_VALUE, TAX_CODE_TYPE_CODE,    |
 |                           AL_JOURNAL_SEQUENCE_ID                          |
 |                                                                           |
 +===========================================================================*/

PROCEDURE init_ar_gt_tables  IS
BEGIN

   GT_LEDGER_ID.DELETE;
   GT_TRX_ID.DELETE;
   GT_DOC_SEQ_ID.DELETE;
   GT_DOC_SEQ_NAME.DELETE;
   GT_TRX_TYPE_ID.DELETE;
   GT_LINE_CLASS.DELETE;
   GT_EVENT_CLASS_CODE.DELETE;
   GT_APPLIED_FROM_ENTITY_CODE.DELETE;
   GT_APPLIED_FROM_TRX_ID.DELETE;
   GT_APPLIED_FROM_EVENT_CLS_CD.DELETE;
   GT_ADJUSTED_DOC_ENTITY_CODE.DELETE;
   GT_ADJUSTED_DOC_TRX_ID.DELETE;
   GT_ADJUSTED_DOC_EVENT_CLS_CD.DELETE;
   GT_ADJUSTED_DOC_NUMBER.DELETE;
   GT_BATCH_SOURCE_ID.DELETE;
   GT_TAX_RATE_ID.DELETE;
   GT_TAX_RATE_REG_TYPE_CODE.DELETE;   --Check this
   GT_PRODUCT_ID.DELETE;
   GT_PRODUCT_DESCRIPTION.DELETE;
   GT_TAXABLE_LINE_SOURCELE.DELETE;
   GT_TAXABLE_ITEM_SOURCE_ID.DELETE;
   GT_TAX_EXEMPTION_ID.DELETE;
   GT_TAX_EXCEPTION_ID.DELETE;
   GT_TAXABLE_LINE_TOTAL_AMOUNT.DELETE;
   GT_TAX_LINE_ID.DELETE;
   GT_TAX_AMT.DELETE;
   GT_TAX_AMT_FUNCL_CURR.DELETE;
   GT_TAX_LINE_NUMBER.DELETE;
   GT_TAXABLE_AMT.DELETE;
   GT_TAXABLE_AMT_FUNCL_CURR.DELETE;
   GT_TRX_LINE_ID.DELETE;
   GT_TRX_LINE_QUANTITY.DELETE;
   GT_EXEMPT_CERTIFICATE_NUMBER.DELETE;
   GT_EXEMPT_REASON_CODE.DELETE;
   GT_TAX_EXCEPTION_REASON_CODE.DELETE;
   GT_UOM_CODE.DELETE;
   GT_RECONCILIATION_FLAG.DELETE;
   GT_INTERNAL_ORGANIZATION_ID.DELETE;
   GT_BR_REF_CUSTOMER_TRX_ID.DELETE;
     --   GT_REVERSE_FLAG.DELETE;     --REVERSAL_DATE    Check this column
   GT_AMOUNT_APPLIED.DELETE;
   GT_TAX_APPLIED.DELETE;
   GT_TAX_RATE.DELETE;
   GT_TAX_RATE_CODE.DELETE;
   GT_TAX_RATE_VAT_TRX_TYPE_CODE.DELETE;
   GT_TAX_TYPE_CODE.DELETE;
   GT_TAX_RATE_CODE_NAME.DELETE;     --  Do we need to rename tax_rate_name?
   GT_TRX_NUMBER.DELETE;
   GT_TRX_DESCRIPTION.DELETE;
   GT_DOC_SEQ_VALUE.DELETE;
   GT_TRX_DATE.DELETE;
   GT_DEPOSIT_DATE.DELETE;
   GT_TRX_DUE_DATE.DELETE;
   GT_TRX_SHIPPING_DATE.DELETE;
   GT_TRX_COMMUNICATED_DATE.DELETE;
   GT_TRX_CURRENCY_CODE.DELETE;
   GT_CURRENCY_CONVERSION_TYPE.DELETE;
   GT_CURRENCY_CONVERSION_DATE.DELETE;
   GT_CURRENCY_CONVERSION_RATE.DELETE;
   GT_TRX_SIC_CODE.DELETE;
   GT_FOB_POINT.DELETE;
   GT_TRX_WAYBILL_NUMBER.DELETE;
   GT_TRX_BATCH_SOURCE_NAME.DELETE;
   GT_TRX_TYPE_DESCRIPTION.DELETE;
   GT_TAX_RATE_CODE_DESCRIPTION.DELETE;
   GT_TRX_LINE_DESCRIPTION.DELETE;
   GT_TRX_LINE_NUMBER.DELETE;
   GT_TRX_LINE_TYPE.DELETE;
   GT_TAX_LINE_USER_CATEGORY.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE1.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE2.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE3.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE4.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE5.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE6.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE7.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE8.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE9.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE10.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE11.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE12.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE13.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE14.DELETE;
   GT_TAX_LINE_USER_ATTRIBUTE15.DELETE;
   GT_APPLICATION_ID.DELETE;
   GT_DOC_EVENT_STATUS.DELETE;
   GT_APPLICATION_DOC_STATUS.DELETE;
   GT_ESTABLISHMENT_ID.DELETE;
   GT_EXTRACT_SOURCE_LEDGER.DELETE;
      --  GT_FUNCTIONAL_CURRECNY_CODE.DELETE;
      --  GT_LEDGER_NAME.DELETE;
   GT_MINIMUM_ACCOUNTABLE_UNIT.DELETE;
   GT_PRECISION.DELETE;
   GT_RECEIPT_CLASS_ID.DELETE;
   GT_APPLIED_TO_APPLICATION_ID.DELETE;
   GT_APPLIED_TO_TRX_LINE_ID.DELETE;
   GT_APPLIED_TO_ENTITY_CODE.DELETE;
   GT_APPLIED_TO_TRX_ID.DELETE;
   GT_APPLIED_TO_EVENT_CLS_CODE.DELETE;
   GT_APPLIED_TO_TRX_NUMBER.DELETE;
   GT_RELATED_DOC_APPLICATION_ID.DELETE;
   GT_RELATED_DOC_DATE.DELETE;
   GT_RELATED_DOC_ENTITY_CODE.DELETE;
   GT_RELATED_DOC_EVENT_CLS_CODE.DELETE;
   GT_RELATED_DOC_NUMBER.DELETE;
   GT_RELATED_DOC_TRX_ID.DELETE;
   GT_ADJUSTED_DOC_APPL_ID.DELETE;
   GT_ADJUSTED_DOC_DATE.DELETE;
   GT_REF_DOC_APPLICATION_ID.DELETE;
   GT_REF_DOC_ENTITY_CODE.DELETE;
   GT_REF_DOC_EVENT_CLASS_CODE.DELETE;
   GT_REF_DOC_LINE_ID.DELETE;
   GT_REF_DOC_LINE_QUANTITY.DELETE;
   GT_REF_DOC_TRX_ID.DELETE;
   GT_DEF_REC_SETTLEMENT_OPT_CD.DELETE;
   GT_DEFAULT_TAXATION_COUNTRY.DELETE;
   GT_DOCUMENT_SUB_TYPE.DELETE;
   GT_ASSESSABLE_VALUE.DELETE;
   GT_TRX_BUSINESS_CATEGORY.DELETE;
   GT_LINE_INTENDED_USE.DELETE;
   GT_PRODUCT_CATEGORY.DELETE;
   GT_PROD_FISC_CLASSIFICATION.DELETE;
   GT_SUPPLIER_EXCHANGE_RATE.DELETE;
   GT_SUPPLIER_TAX_INVOICE_DATE.DELETE;
   GT_SUPPLIER_TAX_INVOICE_NUM.DELETE;
   GT_USER_DEFINED_FISC_CLASS.DELETE;
   GT_EXCEPTION_RATE.DELETE;
   GT_EXEMPT_RATE_MODIFIER.DELETE;
   GT_ORIG_TAX_AMT.DELETE;
   GT_ORIG_TAX_AMT_TAX_CURR.DELETE;
   GT_ORIG_TAXABLE_AMT.DELETE;
   GT_ORIG_TAXABLE_AMT_TAX_CURR.DELETE;
   GT_RECOVERY_RATE_CODE.DELETE;
   GT_TAX_AMT_TAX_CURR.DELETE;
   GT_TAX_APPORTIONMENT_LINE_NUM.DELETE;
   GT_TAX_CURRENCY_CODE.DELETE;
   GT_TAX_DATE.DELETE;
   GT_TAX_DETERMINE_DATE.DELETE;
   GT_TAX_INVOICE_DATE.DELETE;
   GT_TAX_INVOICE_NUMBER.DELETE;
   GT_TAX_JURISDICTION_CODE.DELETE;
   GT_TAX_REGIME_CODE.DELETE;
   GT_TAX_STATUS_CODE.DELETE;
   GT_TAX_STATUS_ID.DELETE;
   GT_TAX.DELETE;
   GT_SHIP_FROM_PTY_TAX_PROF_ID.DELETE;
   GT_SHIP_FROM_SITE_TAX_PROF_ID.DELETE;
   GT_SHIP_TO_PARTY_TAX_PROF_ID.DELETE;
   GT_SHIP_TO_SITE_TAX_PROF_ID.DELETE;
   GT_BILL_TO_PTY_TAX_PROF_ID.DELETE;
   GT_BILL_TO_SITE_TAX_PROF_ID.DELETE;
   GT_HQ_ESTB_REG_NUMBER.DELETE;
   gt_tax_line_registration_num.delete;
   GT_LEGAL_ENTITY_TAX_REG_NUM.DELETE;
   GT_OWN_HQ_PARTY_SITE_PROF_ID.DELETE;
   GT_OWN_HQ_PARTY_TAX_PROF_ID.DELETE;
   GT_PORT_OF_ENTRY_CODE.DELETE;
   GT_REGISTRATION_PARTY_TYPE.DELETE;
   GT_HISTORICAL_FLAG.DELETE;
   GT_MRC_TAX_LINE_FLAG.DELETE;
   GT_POSTED_FLAG.DELETE;
   GT_REPORTING_ONLY_FLAG.DELETE;
   GT_TAX_AMT_INCLUDED_FLAG.DELETE;
   GT_TAX_ONLY_LINE_FLAG.DELETE;
-- GT_SHIP_FROM_PTY_TAX_PROF_ID.DELETE;
-- GT_SHIP_FROM_SITE_TAX_PROF_ID.DELETE;
-- GT_SHIP_TO_PARTY_TAX_PROF_ID.DELETE;
-- GT_SHIP_TO_SITE_TAX_PROF_ID.DELETE;
-- GT_BILL_FROM_PTY_TAX_PROF_ID.DELETE;
-- GT_BILL_FROM_SITE_TAX_PROF_ID.DELETE;
   GT_EVENT_CLASS_MAPPING_ID.DELETE;
   GT_TRX_LEVEL_TYPE.DELETE;
   GT_PLACE_OF_SUPPLY_TYPE_CODE.DELETE;
   GT_POA_LOCATION_ID.DELETE;
   GT_POO_LOCATION_ID.DELETE;
   GT_DEF_PLACE_OF_SUP_TYPE_CODE.DELETE;
   GT_LINE_AMT.DELETE;
   GT_TAX_PROVIDER_ID.DELETE;
   GT_AR_CASH_RCPT_RVRS_DATE.DELETE;
   GT_AR_CASH_RCPT_RVRS_STATUS.DELETE;
   GT_ACCTD_AMOUNT_CR.DELETE;
   GT_ACCTD_AMOUNT_DR.DELETE;
   GT_REC_APPLICATION_STATUS.DELETE;
   GT_ACCOUNT_CLASS.DELETE;
   GT_LATEST_REC_FLAG.DELETE;
   GT_ACTG_SOURCE_ID.DELETE;
   GT_ENTITY_CODE.DELETE;
   GT_POSTED_DATE.DELETE;
   GT_GL_DATE.DELETE;
   GT_UNIT_PRICE.DELETE;
   GT_BANKING_ACCOUNT_ID.DELETE;
 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','init_ar_gt_tables- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.init_ar_gt_tables',
                      g_error_buffer);
    END IF;
    g_retcode := 2;

END init_ar_gt_tables;

/*===========================================================================+
 | FUNCTION                                                                  |
 |   ASSIGN_GLOBAL_VARIABLES_AR                                              |
 |                                                                           |
 | DESCRIPTION                                                               |
 |    Assign the global variable to the the output parameters.               |
 |    This procedure is used by AR procedures to get the global              |
 |    variable  values from Main package.                                    |
 |                                                                           |
 | SCOPE - Public                                                            |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   21-Jan-2005  Srinivasa Rao Korrapati                                    |
 |                                                                           |
 +===========================================================================*/

PROCEDURE assign_ar_global_variables (
  P_TRL_GLOBAL_VARIABLES_REC IN ZX_EXTRACT_PKG.TRL_GLOBAL_VARIABLES_REC_TYPE
) IS

BEGIN

  IF (g_level_procedure >= g_current_runtime_level ) THEN
    FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.assign_ar_global_variables.BEGIN',
                                      'ZX_AR_EXTRACT_PKG:assign_ar_global_variables(+)');
  END IF;

  G_REPORTING_LEVEL    := P_TRL_GLOBAL_VARIABLES_REC.REPORTING_LEVEL;
  G_REPORTING_CONTEXT  := P_TRL_GLOBAL_VARIABLES_REC.REPORTING_CONTEXT;
  -- apai G_LEGAL_ENTITY_LEVEL    := P_TRL_GLOBAL_VARIABLES_REC.LEGAL_ENTITY_LEVEL;
  G_LEGAL_ENTITY_ID    := P_TRL_GLOBAL_VARIABLES_REC.LEGAL_ENTITY_ID;
  G_SUMMARY_LEVEL      := P_TRL_GLOBAL_VARIABLES_REC.SUMMARY_LEVEL;
  G_LEDGER_ID          := P_TRL_GLOBAL_VARIABLES_REC.LEDGER_ID;
  G_REGISTER_TYPE      := P_TRL_GLOBAL_VARIABLES_REC.REGISTER_TYPE;
  G_PRODUCT                    := P_TRL_GLOBAL_VARIABLES_REC.PRODUCT;
  G_MATRIX_REPORT              := P_TRL_GLOBAL_VARIABLES_REC.MATRIX_REPORT;
  G_CURRENCY_CODE_LOW          := P_TRL_GLOBAL_VARIABLES_REC.CURRENCY_CODE_LOW;
  G_CURRENCY_CODE_HIGH         := P_TRL_GLOBAL_VARIABLES_REC.CURRENCY_CODE_HIGH;
  G_INCLUDE_AP_STD_TRX_CLASS   := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_STD_TRX_CLASS;
  G_INCLUDE_AP_DM_TRX_CLASS    := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_DM_TRX_CLASS;
  G_INCLUDE_AP_CM_TRX_CLASS    := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_CM_TRX_CLASS;
  G_INCLUDE_AP_PREP_TRX_CLASS  := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_PREP_TRX_CLASS;
  G_INCLUDE_AP_MIX_TRX_CLASS   := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_MIX_TRX_CLASS;
  G_INCLUDE_AP_EXP_TRX_CLASS   := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_EXP_TRX_CLASS;
  G_INCLUDE_AP_INT_TRX_CLASS   := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_INT_TRX_CLASS;
  G_INCLUDE_AR_INV_TRX_CLASS   := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_INV_TRX_CLASS;
  G_INCLUDE_AR_APPL_TRX_CLASS  := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_APPL_TRX_CLASS;
  G_INCLUDE_AR_ADJ_TRX_CLASS   := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_ADJ_TRX_CLASS;
  G_INCLUDE_AR_MISC_TRX_CLASS  := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_MISC_TRX_CLASS;
  G_INCLUDE_AR_BR_TRX_CLASS  := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_BR_TRX_CLASS;
  G_INCLUDE_GL_MANUAL_LINES  := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_GL_MANUAL_LINES;
  G_TRX_NUMBER_LOW           := P_TRL_GLOBAL_VARIABLES_REC.TRX_NUMBER_LOW;
  G_TRX_NUMBER_HIGH          := P_TRL_GLOBAL_VARIABLES_REC.TRX_NUMBER_HIGH;
  G_AR_TRX_PRINTING_STATUS   := P_TRL_GLOBAL_VARIABLES_REC.AR_TRX_PRINTING_STATUS;
  G_AR_EXEMPTION_STATUS      := P_TRL_GLOBAL_VARIABLES_REC.AR_EXEMPTION_STATUS;
  G_GL_DATE_LOW          := P_TRL_GLOBAL_VARIABLES_REC.GL_DATE_LOW;
  G_GL_DATE_HIGH         := P_TRL_GLOBAL_VARIABLES_REC.GL_DATE_HIGH;
  G_TRX_DATE_LOW         := P_TRL_GLOBAL_VARIABLES_REC.TRX_DATE_LOW;
  G_TRX_DATE_HIGH        := P_TRL_GLOBAL_VARIABLES_REC.TRX_DATE_HIGH;
  G_GL_PERIOD_NAME_LOW   := P_TRL_GLOBAL_VARIABLES_REC.GL_PERIOD_NAME_LOW;
  G_GL_PERIOD_NAME_HIGH  := P_TRL_GLOBAL_VARIABLES_REC.GL_PERIOD_NAME_HIGH;
  G_TRX_DATE_PERIOD_NAME_LOW   := P_TRL_GLOBAL_VARIABLES_REC.TRX_DATE_PERIOD_NAME_LOW;
  G_TRX_DATE_PERIOD_NAME_HIGH  := P_TRL_GLOBAL_VARIABLES_REC.TRX_DATE_PERIOD_NAME_HIGH;
  g_tax_jurisdiction_code      := P_TRL_GLOBAL_VARIABLES_REC.tax_jurisdiction_code;
  g_first_party_tax_reg_num    := P_TRL_GLOBAL_VARIABLES_REC.first_party_tax_reg_num;
  G_TAX_REGIME_CODE    := P_TRL_GLOBAL_VARIABLES_REC.TAX_REGIME_CODE;
  G_TAX                := P_TRL_GLOBAL_VARIABLES_REC.TAX;
  G_TAX_STATUS_CODE    := P_TRL_GLOBAL_VARIABLES_REC.TAX_STATUS_CODE;
  G_TAX_RATE_CODE_LOW  := P_TRL_GLOBAL_VARIABLES_REC.tax_rate_code_low;
  G_TAX_RATE_CODE_HIGH := P_TRL_GLOBAL_VARIABLES_REC.tax_rate_code_high;
  G_TAX_TYPE_CODE_LOW  := P_TRL_GLOBAL_VARIABLES_REC.tax_type_code_low;
  G_TAX_TYPE_CODE_HIGH := P_TRL_GLOBAL_VARIABLES_REC.tax_type_code_high;
  --G_TAX_RATE_CODE      := P_TRL_GLOBAL_VARIABLES_REC.TAX_RATE_CODE;
  --G_TAX_TYPE_CODE      := P_TRL_GLOBAL_VARIABLES_REC.TAX_TYPE_CODE;
  G_DOCUMENT_SUB_TYPE      := P_TRL_GLOBAL_VARIABLES_REC.DOCUMENT_SUB_TYPE;
  G_TRX_BUSINESS_CATEGORY  := P_TRL_GLOBAL_VARIABLES_REC.TRX_BUSINESS_CATEGORY;
  G_TAX_INVOICE_DATE_LOW   := P_TRL_GLOBAL_VARIABLES_REC.TAX_INVOICE_DATE_LOW;
  G_TAX_INVOICE_DATE_HIGH  := P_TRL_GLOBAL_VARIABLES_REC.TAX_INVOICE_DATE_HIGH;
  G_POSTING_STATUS         := P_TRL_GLOBAL_VARIABLES_REC.POSTING_STATUS;
  G_EXTRACT_ACCTED_TAX_LINES     := P_TRL_GLOBAL_VARIABLES_REC.EXTRACT_ACCTED_TAX_LINES;
  G_INCLUDE_ACCOUNTING_SEGMENTS  := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_ACCOUNTING_SEGMENTS;
  G_BALANCING_SEGMENT_LOW        := P_TRL_GLOBAL_VARIABLES_REC.BALANCING_SEGMENT_LOW;
  G_BALANCING_SEGMENT_HIGH       := P_TRL_GLOBAL_VARIABLES_REC.BALANCING_SEGMENT_HIGH;
  G_INCLUDE_DISCOUNTS            := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_DISCOUNTS;
  G_EXTRACT_STARTING_LINE_NUM    := P_TRL_GLOBAL_VARIABLES_REC.EXTRACT_STARTING_LINE_NUM;
  G_REQUEST_ID                   := P_TRL_GLOBAL_VARIABLES_REC.REQUEST_ID;
  G_REPORT_NAME                  := P_TRL_GLOBAL_VARIABLES_REC.REPORT_NAME;
  G_VAT_TRANSACTION_TYPE_CODE    := P_TRL_GLOBAL_VARIABLES_REC.VAT_TRANSACTION_TYPE_CODE;
  G_INCLUDE_FULLY_NR_TAX_FLAG    := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_FULLY_NR_TAX_FLAG;
  G_MUNICIPAL_TAX_TYPE_CODE_LOW  := P_TRL_GLOBAL_VARIABLES_REC.MUNICIPAL_TAX_TYPE_CODE_LOW;
  G_MUNICIPAL_TAX_TYPE_CODE_HIGH := P_TRL_GLOBAL_VARIABLES_REC.MUNICIPAL_TAX_TYPE_CODE_HIGH;
  G_PROV_TAX_TYPE_CODE_LOW    := P_TRL_GLOBAL_VARIABLES_REC.PROV_TAX_TYPE_CODE_LOW;
  G_PROV_TAX_TYPE_CODE_HIGH   := P_TRL_GLOBAL_VARIABLES_REC.PROV_TAX_TYPE_CODE_HIGH;
  G_EXCISE_TAX_TYPE_CODE_LOW  := P_TRL_GLOBAL_VARIABLES_REC.EXCISE_TAX_TYPE_CODE_LOW;
  G_EXCISE_TAX_TYPE_CODE_HIGH := P_TRL_GLOBAL_VARIABLES_REC.EXCISE_TAX_TYPE_CODE_HIGH;
  G_NON_TAXABLE_TAX_TYPE_CODE := P_TRL_GLOBAL_VARIABLES_REC.NON_TAXABLE_TAX_TYPE_CODE;
  G_PER_TAX_TYPE_CODE_LOW     := P_TRL_GLOBAL_VARIABLES_REC.PER_TAX_TYPE_CODE_LOW;
  G_PER_TAX_TYPE_CODE_HIGH    := P_TRL_GLOBAL_VARIABLES_REC.PER_TAX_TYPE_CODE_HIGH;
  G_VAT_TAX_TYPE_CODE    := P_TRL_GLOBAL_VARIABLES_REC.VAT_TAX_TYPE_CODE;
  G_EXCISE_TAX           := P_TRL_GLOBAL_VARIABLES_REC.EXCISE_TAX;
  G_VAT_ADDITIONAL_TAX   := P_TRL_GLOBAL_VARIABLES_REC.VAT_ADDITIONAL_TAX;
  G_VAT_NON_TAXABLE_TAX  := P_TRL_GLOBAL_VARIABLES_REC.VAT_NON_TAXABLE_TAX;
  G_VAT_NOT_TAX          := P_TRL_GLOBAL_VARIABLES_REC.VAT_NOT_TAX;
  G_VAT_PERCEPTION_TAX   := P_TRL_GLOBAL_VARIABLES_REC.VAT_PERCEPTION_TAX;
  G_VAT_TAX              := P_TRL_GLOBAL_VARIABLES_REC.VAT_TAX;
  G_INC_SELF_WD_TAX      := P_TRL_GLOBAL_VARIABLES_REC.INC_SELF_WD_TAX;
  G_EXCLUDING_TRX_LETTER := P_TRL_GLOBAL_VARIABLES_REC.EXCLUDING_TRX_LETTER;
  G_TRX_LETTER_LOW       := P_TRL_GLOBAL_VARIABLES_REC.TRX_LETTER_LOW;
  G_TRX_LETTER_HIGH      := P_TRL_GLOBAL_VARIABLES_REC.TRX_LETTER_HIGH;
  G_INCLUDE_REFERENCED_SOURCE  := P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_REFERENCED_SOURCE;
  G_PARTY_NAME        := P_TRL_GLOBAL_VARIABLES_REC.PARTY_NAME;
  G_BATCH_NAME        := P_TRL_GLOBAL_VARIABLES_REC.BATCH_NAME;
  G_BATCH_DATE_LOW    := P_TRL_GLOBAL_VARIABLES_REC.BATCH_DATE_LOW;
  G_BATCH_DATE_HIGH   := P_TRL_GLOBAL_VARIABLES_REC.BATCH_DATE_HIGH;
  G_BATCH_SOURCE_ID   := P_TRL_GLOBAL_VARIABLES_REC.BATCH_SOURCE_ID;
  G_ADJUSTED_DOC_FROM := P_TRL_GLOBAL_VARIABLES_REC.ADJUSTED_DOC_FROM;
  G_ADJUSTED_DOC_TO   := P_TRL_GLOBAL_VARIABLES_REC.ADJUSTED_DOC_TO;
  G_STANDARD_VAT_TAX_RATE    := P_TRL_GLOBAL_VARIABLES_REC.STANDARD_VAT_TAX_RATE;
  G_MUNICIPAL_TAX     := P_TRL_GLOBAL_VARIABLES_REC.MUNICIPAL_TAX;
  G_PROVINCIAL_TAX    := P_TRL_GLOBAL_VARIABLES_REC.PROVINCIAL_TAX;
  G_TAX_ACCOUNT_LOW   := P_TRL_GLOBAL_VARIABLES_REC.TAX_ACCOUNT_LOW;
  G_TAX_ACCOUNT_HIGH  := P_TRL_GLOBAL_VARIABLES_REC.TAX_ACCOUNT_HIGH;
  G_EXP_CERT_DATE_FROM := P_TRL_GLOBAL_VARIABLES_REC.EXP_CERT_DATE_FROM;
  G_EXP_CERT_DATE_TO   := P_TRL_GLOBAL_VARIABLES_REC.EXP_CERT_DATE_TO;
  G_EXP_METHOD         := P_TRL_GLOBAL_VARIABLES_REC.EXP_METHOD;
  G_PRINT_COMPANY_INFO := P_TRL_GLOBAL_VARIABLES_REC.PRINT_COMPANY_INFO;
  G_REPRINT            := P_TRL_GLOBAL_VARIABLES_REC.REPRINT;
  G_ERRBUF             := P_TRL_GLOBAL_VARIABLES_REC.ERRBUF;
  G_AR_RETCODE         := P_TRL_GLOBAL_VARIABLES_REC.RETCODE;
  G_ACCOUNTING_STATUS  := p_trl_global_variables_rec.accounting_status;
  G_CHART_OF_ACCOUNTS_ID  := P_TRL_GLOBAL_VARIABLES_REC.chart_of_accounts_id; --6743991
  G_REPORT_NAME           := P_TRL_GLOBAL_VARIABLES_REC.REPORT_NAME; --6743991
  G_REPORTED_STATUS       := p_trl_global_variables_rec.reported_status;
  g_gl_or_trx_date_filter := p_trl_global_variables_rec.GL_OR_TRX_DATE_FILTER ; --Bug 5347188
  --Bug 9031051
  G_ESL_DEFAULT_TAX_DATE  := P_TRL_GLOBAL_VARIABLES_REC.ESL_DEFAULT_TAX_DATE;
  G_ESL_OUT_OF_PERIOD_ADJ := P_TRL_GLOBAL_VARIABLES_REC.ESL_OUT_OF_PERIOD_ADJ;
  G_ESL_EU_TRX_TYPE       := P_TRL_GLOBAL_VARIABLES_REC.ESL_EU_TRX_TYPE;
  G_ESL_EU_GOODS          := P_TRL_GLOBAL_VARIABLES_REC.ESL_EU_GOODS;
  G_ESL_EU_SERVICES       := P_TRL_GLOBAL_VARIABLES_REC.ESL_EU_SERVICES;
  G_ESL_EU_ADDL_CODE1     := P_TRL_GLOBAL_VARIABLES_REC.ESL_EU_ADDL_CODE1;
  G_ESL_EU_ADDL_CODE2     := P_TRL_GLOBAL_VARIABLES_REC.ESL_EU_ADDL_CODE2;
  G_EXTRACT_REPORT_LINE_NUMBER  := 1;
  G_TRX_CLASS  := NULL;

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.assign_ar_global_variables',
                      'Getting the rep_context_id ');
    END IF ;

--G_REP_CONTEXT_ID := ZX_EXTRACT_PKG.GET_REP_CONTEXT_ID(P_TRL_GLOBAL_VARIABLES_REC.LEGAL_ENTITY_ID,
 --                                                                P_TRL_GLOBAL_VARIABLES_REC.request_id);

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.assign_ar_global_variables',
                      ' G_REP_CONTEXT_ID fetched is : '||G_REP_CONTEXT_ID);
    END IF ;

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.assign_ar_global_variables.END',
                                      'ZX_AR_EXTRACT_PKG:assign_ar_global_variables(-)');
    END IF;
 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','assign_ar_global_variables- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.assign_ar_global_variables',
                      g_error_buffer);
    END IF;
    g_retcode := 2;

END assign_ar_global_variables;


-- this function returns the standard HINT used for AR
FUNCTION get_hint_ar_inv RETURN VARCHAR2 IS
BEGIN
  IF G_TRX_DATE_LOW IS NOT NULL AND G_TRX_DATE_HIGH IS NOT NULL THEN
    RETURN ' /*+ leading(zx_det,dist,lines) parallel(zx_det) */ ';
  ELSIF G_GL_DATE_LOW IS NOT NULL AND G_GL_DATE_HIGH IS NOT NULL THEN
    IF G_TAX_ACCOUNT_LOW IS NOT NULL AND G_TAX_ACCOUNT_HIGH IS NOT NULL THEN
      RETURN ' /*+ leading(cc,dist,zx_det) parallel(dist) */ ';
    ELSE
      RETURN ' /*+ leading(dist,zx_det,lines) parallel(dist) */ ';
    END IF;
  ELSE
    -- this is the default hint clause
    RETURN ' /*+ leading(zx_det,dist,lines) parallel(zx_det) */ ';
  END IF;
END get_hint_ar_inv;

-- this function returns the standard tables used for AR
-- if there is any change to the below function, please modify the
-- get_static_where_clause_ar_inv appropriately
FUNCTION get_std_table_list_ar_inv RETURN VARCHAR2 IS
  l_from_clause VARCHAR2(1000);
BEGIN
  l_from_clause :=
        ' ZX_LINES_DET_FACTORS ZX_DET'
     ||' ,ZX_LINES       ZX_LINE'
     ||' ,ZX_EXEMPTIONS  ZX_EX'
     ||' ,ZX_TAXES_B     ZX_TAX'
     ||' ,ZX_ACCOUNTS    ZX_ACCOUNTS'
     ||' ,ZX_RATES_VL    ZX_RATE'
     ||' ,RA_CUST_TRX_LINE_GL_DIST_ALL  DIST'
     ||' ,RA_CUSTOMER_TRX_LINES_ALL     LINES ';
  RETURN l_from_clause;
END get_std_table_list_ar_inv;


-- this function returns the static where clause for the tables
-- used in get_std_table_list_ar_inv
FUNCTION get_static_where_clause_ar_inv RETURN VARCHAR2 IS
  l_where_clause VARCHAR2(10000);
BEGIN
  l_where_clause :=
           ' ZX_DET.APPLICATION_ID     = 222'
     ||' AND ZX_DET.TAX_REPORTING_FLAG = ''Y'''
     ||' AND ZX_DET.TRX_LEVEL_TYPE = ''LINE'''
     ||' AND ZX_DET.TAX_EVENT_TYPE_CODE IN (''VALIDATE_FOR_TAX'',''FREEZE_FOR_TAX'')'
     ||' AND ZX_LINE.APPLICATION_ID           = ZX_DET.APPLICATION_ID'
     ||' AND ZX_LINE.ENTITY_CODE              = ZX_DET.ENTITY_CODE'
     ||' AND ZX_LINE.EVENT_CLASS_CODE         = ZX_DET.EVENT_CLASS_CODE'
     ||' AND ZX_LINE.TRX_ID                   = ZX_DET.TRX_ID'
     ||' AND ZX_LINE.TRX_LINE_ID              = ZX_DET.TRX_LINE_ID'
     ||' AND ZX_LINE.INTERNAL_ORGANIZATION_ID = ZX_DET.INTERNAL_ORGANIZATION_ID'
     ||' AND ZX_EX.TAX_EXEMPTION_ID(+) = ZX_LINE.TAX_EXEMPTION_ID'
     ||' AND ZX_TAX.TAX_ID     = ZX_LINE.TAX_ID'
     ||' AND ZX_ACCOUNTS.TAX_ACCOUNT_ENTITY_ID(+)    = ZX_LINE.TAX_RATE_ID'
     ||' AND ZX_ACCOUNTS.INTERNAL_ORGANIZATION_ID(+) = ZX_LINE.INTERNAL_ORGANIZATION_ID'
     ||' AND ZX_ACCOUNTS.LEDGER_ID(+)                = ZX_LINE.LEDGER_ID'
     ||' AND (ZX_ACCOUNTS.TAX_ACCOUNT_ENTITY_CODE = ''RATES'' OR ZX_ACCOUNTS.TAX_ACCOUNT_ENTITY_CODE IS NULL)'
     ||' AND ZX_RATE.TAX_RATE_ID = ZX_LINE.TAX_RATE_ID'
     ||' AND DIST.CUSTOMER_TRX_ID  = ZX_DET.TRX_ID'
     ||' AND DIST.ACCOUNT_CLASS    = ''TAX'''
     ||' AND DIST.ACCOUNT_SET_FLAG = ''N'''
     ||' AND LINES.CUSTOMER_TRX_LINE_ID = DIST.CUSTOMER_TRX_LINE_ID '
     ||' AND LINES.TAX_LINE_ID = ZX_LINE.TAX_LINE_ID ' ;
  RETURN l_where_clause;
END get_static_where_clause_ar_inv;


END ZX_AR_EXTRACT_PKG;

/
