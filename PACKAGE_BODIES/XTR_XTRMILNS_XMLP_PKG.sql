--------------------------------------------------------
--  DDL for Package Body XTR_XTRMILNS_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XTR_XTRMILNS_XMLP_PKG" AS
/* $Header: XTRMILNSB.pls 120.1 2007/12/28 12:56:47 npannamp noship $ */
  FUNCTION CF_SET_PARAFORMULA RETURN VARCHAR2 IS
  BEGIN
    SELECT
      SUBSTR(USER
            ,1
            ,10)
    INTO
      CP_PARA
    FROM
      DUAL;
    RETURN (CP_PARA);
  END CF_SET_PARAFORMULA;
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    L_DMMY_NUM NUMBER;
    L_MESSAGE FND_NEW_MESSAGES.MESSAGE_TEXT%TYPE;
    CURSOR GET_LANGUAGE_DESC IS
      SELECT
        ITEM_NAME,
        SUBSTR(TEXT
              ,1
              ,100) LANG_NAME
      FROM
        XTR_SYS_LANGUAGES_VL
      WHERE MODULE_NAME = 'XTRMILNS';
  BEGIN
    BEGIN
      COMPANY_NAME_HEADER := CEP_STANDARD.GET_WINDOW_SESSION_TITLE;
    EXCEPTION
      WHEN OTHERS THEN
        FND_MESSAGE.SET_NAME('XTR'
                            ,'XTR_LOOKUP_ERR');
        L_MESSAGE := FND_MESSAGE.GET;
        RAISE_APPLICATION_ERROR(-20101
                               ,NULL);
    END;
    IF (P_DISPLAY_DEBUG = 'Y') THEN
      NULL;
    END IF;
    FOR c IN GET_LANGUAGE_DESC LOOP
      IF C.ITEM_NAME = 'Z1ACCT_MGR' THEN
        Z1ACCT_MGR := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1NAME' THEN
        Z1NAME := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1COMPANY' THEN
        Z1COMPANY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1ORDER_BY_PTY_MGR' THEN
        Z1ORDER_BY_PTY_MGR := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PARAMETERS' THEN
        Z1PARAMETERS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PARTY_CODE' THEN
        Z1PARTY_CODE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PRIORITY_SUM' THEN
        Z1PRIORITY_SUM := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1VALUATION_AMOUNT' THEN
        Z1VALUATION_AMOUNT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1VALUATION_REVIEWS_BEFORE' THEN
        Z1VALUATION_REVIEWS_BEFORE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1VALUER' THEN
        Z1VALUER := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2COMPANY' THEN
        Z2COMPANY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2END_OF_REPORT' THEN
        Z2END_OF_REPORT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2ISSUED_BY' THEN
        Z2ISSUED_BY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PARTY_ACCT_MANAGER' THEN
        Z2PARTY_ACCT_MANAGER := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PARTY_NAME1' THEN
        Z2PARTY_NAME1 := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PRIORITY_SUM' THEN
        Z2PRIORITY_SUM := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SECURITY_DESCRIPTION' THEN
        Z2SECURITY_DESCRIPTION := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SECURITY_REF' THEN
        Z2SECURITY_REF := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SEC_VALUE' THEN
        Z2SEC_VALUE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2VALUE_DATE' THEN
        Z2VALUE_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PAGE' THEN
        Z2PAGE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'REPORT_DATE' THEN
        REPORT_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1P_FACTOR' THEN
        Z1P_FACTOR := C.LANG_NAME;
      END IF;
    END LOOP;
    RETURN (TRUE);
  END BEFOREREPORT;
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;
  FUNCTION AFTERPFORM RETURN BOOLEAN IS
    TEMP NUMBER(15) := 1000;
  BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    IF P_FACTOR IS NOT NULL THEN
      SELECT
        SUBSTRB(DESCRIPTION
               ,1
               ,20),
        DECODE(SUBSTR(P_FACTOR
                     ,1
                     ,1)
              ,'U'
              ,1
              ,'T'
              ,1000
              ,'M'
              ,1000000
              ,'B'
              ,100000000)
      INTO
        LP_FACTOR_DESC
        ,TEMP
      FROM
        FND_LOOKUPS
      WHERE LOOKUP_TYPE = 'XTR_FACTOR'
        AND LOOKUP_CODE = SUBSTR(P_FACTOR
            ,1
            ,1);
    ELSE
      SELECT
        SUBSTRB(DESCRIPTION
               ,1
               ,20)
      INTO
        LP_FACTOR_DESC
      FROM
        FND_LOOKUPS
      WHERE LOOKUP_TYPE = 'XTR_FACTOR'
        AND LOOKUP_CODE = 'T';
      TEMP := 1000;
    END IF;
    AMT_UNIT2 := TEMP;
    PARTY_CODE2 := P_CPARTY;
    VALUER2 := P_VALUER;
    BEFORE_VALUE_DATE2 := TRUNC(P_BEFORE_DATE);
    OVER_VALUATION2 := P_VALIDATION_AMOUNT;
    OVER_PRIORITY_SUM2 := P_PRIORITY_TOTAL;
    ACCOUNT_MANAGER2 := P_ACCOUNT_MANAGER;
    SELECT
      CP.USER_CONCURRENT_PROGRAM_NAME
    INTO
      REPORT_SHORT_NAME
    FROM
      FND_CONCURRENT_PROGRAMS_VL CP,
      FND_CONCURRENT_REQUESTS CR
    WHERE CR.REQUEST_ID = P_CONC_REQUEST_ID
      AND CP.APPLICATION_ID = CR.PROGRAM_APPLICATION_ID
      AND CP.CONCURRENT_PROGRAM_ID = CR.CONCURRENT_PROGRAM_ID;
      REPORT_SHORT_NAME := substr(REPORT_SHORT_NAME,1,instr(REPORT_SHORT_NAME,' (XML)'));
    RETURN (TRUE);
  END AFTERPFORM;
  FUNCTION CP_PARA_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARA;
  END CP_PARA_P;
END XTR_XTRMILNS_XMLP_PKG;


/
