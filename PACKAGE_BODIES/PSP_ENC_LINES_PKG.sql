--------------------------------------------------------
--  DDL for Package Body PSP_ENC_LINES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PSP_ENC_LINES_PKG" AS
/* $Header: PSPENLTB.pls 115.10 2002/11/19 11:45:24 ddubey ship $ */

/* Introduced x_enc_start_date,x_enc_end_date for Enh. Bug# 2259310 */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_ENC_LINE_ID in NUMBER,
  X_BUSINESS_GROUP_ID in NUMBER,
  X_ENC_ELEMENT_TYPE_ID in NUMBER,
  X_ENCUMBRANCE_DATE in DATE,
  X_DR_CR_FLAG in VARCHAR2,
  X_ENCUMBRANCE_AMOUNT in NUMBER,
  X_ENC_LINE_TYPE in VARCHAR2,
  X_SCHEDULE_LINE_ID in NUMBER,
  X_ORG_SCHEDULE_ID in NUMBER,
  X_DEFAULT_ORG_ACCOUNT_ID in NUMBER,
  X_SUSPENSE_ORG_ACCOUNT_ID in NUMBER,
  X_ELEMENT_ACCOUNT_ID in NUMBER,
  X_GL_PROJECT_FLAG in VARCHAR2,
  X_ENC_SUMMARY_LINE_ID in NUMBER,
  X_PERSON_ID in NUMBER,
  X_ASSIGNMENT_ID in NUMBER,
  X_AWARD_ID in NUMBER,
  X_TASK_ID in NUMBER,
  X_EXPENDITURE_TYPE in VARCHAR2,
  X_EXPENDITURE_ORGANIZATION_ID in NUMBER,
  X_PROJECT_ID in NUMBER,
  X_GL_CODE_COMBINATION_ID in NUMBER,
  X_TIME_PERIOD_ID in NUMBER,
  X_PAYROLL_ID in NUMBER,
  X_SET_OF_BOOKS_ID in NUMBER,
  X_DEFAULT_REASON_CODE in VARCHAR2,
  X_SUSPENSE_REASON_CODE in VARCHAR2,
  X_ENC_CONTROL_ID in NUMBER,
  X_MODE in VARCHAR2 default 'R',
  X_CHANGE_FLAG  in VARCHAR2 default 'N',
  X_STATUS_CODE	in VARCHAR2,
  X_ENC_START_DATE in DATE DEFAULT NULL,
  X_ENC_END_DATE   in DATE DEFAULT NULL
  ) is
    cursor C is select ROWID from PSP_ENC_LINES
      where ENC_LINE_ID = X_ENC_LINE_ID;
    X_LAST_UPDATE_DATE DATE;
    X_LAST_UPDATED_BY NUMBER;
    X_LAST_UPDATE_LOGIN NUMBER;
begin
  X_LAST_UPDATE_DATE := SYSDATE;
  if(X_MODE = 'I') then
    X_LAST_UPDATED_BY := 1;
    X_LAST_UPDATE_LOGIN := 0;
  elsif (X_MODE = 'R') then
    X_LAST_UPDATED_BY := FND_GLOBAL.USER_ID;
    if X_LAST_UPDATED_BY is NULL then
      X_LAST_UPDATED_BY := -1;
    end if;
    X_LAST_UPDATE_LOGIN :=FND_GLOBAL.LOGIN_ID;
    if X_LAST_UPDATE_LOGIN is NULL then
      X_LAST_UPDATE_LOGIN := -1;
    end if;
  else
    FND_MESSAGE.SET_NAME( 'FND', 'SYSTEM-INVALID ARGS');
    app_exception.raise_exception;
  end if;
  insert into PSP_ENC_LINES (
    ENC_LINE_ID,
    BUSINESS_GROUP_ID,
    ENC_ELEMENT_TYPE_ID,
    ENCUMBRANCE_DATE,
    DR_CR_FLAG,
    ENCUMBRANCE_AMOUNT,
    ENC_LINE_TYPE,
    SCHEDULE_LINE_ID,
    ORG_SCHEDULE_ID,
    DEFAULT_ORG_ACCOUNT_ID,
    SUSPENSE_ORG_ACCOUNT_ID,
    ELEMENT_ACCOUNT_ID,
    GL_PROJECT_FLAG,
    ENC_SUMMARY_LINE_ID,
    PERSON_ID,
    ASSIGNMENT_ID,
    AWARD_ID,
    TASK_ID,
    EXPENDITURE_TYPE,
    EXPENDITURE_ORGANIZATION_ID,
    PROJECT_ID,
    GL_CODE_COMBINATION_ID,
    TIME_PERIOD_ID,
    PAYROLL_ID,
    SET_OF_BOOKS_ID,
    DEFAULT_REASON_CODE,
    SUSPENSE_REASON_CODE,
    ENC_CONTROL_ID,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    STATUS_CODE,
    CHANGE_FLAG
  ) values (
    X_ENC_LINE_ID,
    X_BUSINESS_GROUP_ID,
    X_ENC_ELEMENT_TYPE_ID,
    X_ENCUMBRANCE_DATE,
    X_DR_CR_FLAG,
    X_ENCUMBRANCE_AMOUNT,
    X_ENC_LINE_TYPE,
    X_SCHEDULE_LINE_ID,
    X_ORG_SCHEDULE_ID,
    X_DEFAULT_ORG_ACCOUNT_ID,
    X_SUSPENSE_ORG_ACCOUNT_ID,
    X_ELEMENT_ACCOUNT_ID,
    X_GL_PROJECT_FLAG,
    X_ENC_SUMMARY_LINE_ID,
    X_PERSON_ID,
    X_ASSIGNMENT_ID,
    X_AWARD_ID,
    X_TASK_ID,
    X_EXPENDITURE_TYPE,
    X_EXPENDITURE_ORGANIZATION_ID,
    X_PROJECT_ID,
    X_GL_CODE_COMBINATION_ID,
    X_TIME_PERIOD_ID,
    X_PAYROLL_ID,
    X_SET_OF_BOOKS_ID,
    X_DEFAULT_REASON_CODE,
    X_SUSPENSE_REASON_CODE,
    X_ENC_CONTROL_ID,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_STATUS_CODE,
    X_CHANGE_FLAG
  );

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

/* Introduced x_enc_start_date,x_enc_end_date for Enh. Bug# 2259310 */
procedure LOCK_ROW (
  X_ENC_LINE_ID in NUMBER,
  X_BUSINESS_GROUP_ID in NUMBER,
  X_ENC_ELEMENT_TYPE_ID in NUMBER,
  X_ENCUMBRANCE_DATE in DATE,
  X_DR_CR_FLAG in VARCHAR2,
  X_ENCUMBRANCE_AMOUNT in NUMBER,
  X_ENC_LINE_TYPE in VARCHAR2,
  X_SCHEDULE_LINE_ID in NUMBER,
  X_ORG_SCHEDULE_ID in NUMBER,
  X_DEFAULT_ORG_ACCOUNT_ID in NUMBER,
  X_SUSPENSE_ORG_ACCOUNT_ID in NUMBER,
  X_ELEMENT_ACCOUNT_ID in NUMBER,
  X_GL_PROJECT_FLAG in VARCHAR2,
  X_ENC_SUMMARY_LINE_ID in NUMBER,
  X_PERSON_ID in NUMBER,
  X_ASSIGNMENT_ID in NUMBER,
  X_AWARD_ID in NUMBER,
  X_TASK_ID in NUMBER,
  X_EXPENDITURE_TYPE in VARCHAR2,
  X_EXPENDITURE_ORGANIZATION_ID in NUMBER,
  X_PROJECT_ID in NUMBER,
  X_GL_CODE_COMBINATION_ID in NUMBER,
  X_TIME_PERIOD_ID in NUMBER,
  X_PAYROLL_ID in NUMBER,
  X_SET_OF_BOOKS_ID in NUMBER,
  X_DEFAULT_REASON_CODE in VARCHAR2,
  X_SUSPENSE_REASON_CODE in VARCHAR2,
  X_ENC_CONTROL_ID in NUMBER,
  X_ENC_START_DATE in DATE DEFAULT NULL,
  X_ENC_END_DATE   in DATE DEFAULT NULL
) is
  cursor c1 is select
      BUSINESS_GROUP_ID,
      ENC_ELEMENT_TYPE_ID,
      ENCUMBRANCE_DATE,
      DR_CR_FLAG,
      ENCUMBRANCE_AMOUNT,
      ENC_LINE_TYPE,
      SCHEDULE_LINE_ID,
      ORG_SCHEDULE_ID,
      DEFAULT_ORG_ACCOUNT_ID,
      SUSPENSE_ORG_ACCOUNT_ID,
      ELEMENT_ACCOUNT_ID,
      GL_PROJECT_FLAG,
      ENC_SUMMARY_LINE_ID,
      PERSON_ID,
      ASSIGNMENT_ID,
      AWARD_ID,
      TASK_ID,
      EXPENDITURE_TYPE,
      EXPENDITURE_ORGANIZATION_ID,
      PROJECT_ID,
      GL_CODE_COMBINATION_ID,
      TIME_PERIOD_ID,
      PAYROLL_ID,
      SET_OF_BOOKS_ID,
      DEFAULT_REASON_CODE,
      SUSPENSE_REASON_CODE,
      ENC_CONTROL_ID
    from PSP_ENC_LINES
    where ENC_LINE_ID = X_ENC_LINE_ID
    for update of ENC_LINE_ID nowait;
  tlinfo c1%rowtype;

begin
  open c1;
  fetch c1 into tlinfo;
  if (c1%notfound) then
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
    close c1;
    return;
  end if;
  close c1;

  if ( (tlinfo.BUSINESS_GROUP_ID = X_BUSINESS_GROUP_ID)
      AND (tlinfo.ENC_ELEMENT_TYPE_ID = X_ENC_ELEMENT_TYPE_ID)
      AND (tlinfo.ENCUMBRANCE_DATE = X_ENCUMBRANCE_DATE)
      AND (tlinfo.DR_CR_FLAG = X_DR_CR_FLAG)
      AND (tlinfo.ENCUMBRANCE_AMOUNT = X_ENCUMBRANCE_AMOUNT)
      AND (tlinfo.ENC_LINE_TYPE = X_ENC_LINE_TYPE)
      AND ((tlinfo.SCHEDULE_LINE_ID = X_SCHEDULE_LINE_ID)
           OR ((tlinfo.SCHEDULE_LINE_ID is null)
               AND (X_SCHEDULE_LINE_ID is null)))
      AND ((tlinfo.ORG_SCHEDULE_ID = X_ORG_SCHEDULE_ID)
           OR ((tlinfo.ORG_SCHEDULE_ID is null)
               AND (X_ORG_SCHEDULE_ID is null)))
      AND ((tlinfo.DEFAULT_ORG_ACCOUNT_ID = X_DEFAULT_ORG_ACCOUNT_ID)
           OR ((tlinfo.DEFAULT_ORG_ACCOUNT_ID is null)
               AND (X_DEFAULT_ORG_ACCOUNT_ID is null)))
      AND ((tlinfo.SUSPENSE_ORG_ACCOUNT_ID = X_SUSPENSE_ORG_ACCOUNT_ID)
           OR ((tlinfo.SUSPENSE_ORG_ACCOUNT_ID is null)
               AND (X_SUSPENSE_ORG_ACCOUNT_ID is null)))
      AND ((tlinfo.ELEMENT_ACCOUNT_ID = X_ELEMENT_ACCOUNT_ID)
           OR ((tlinfo.ELEMENT_ACCOUNT_ID is null)
               AND (X_ELEMENT_ACCOUNT_ID is null)))
      AND (tlinfo.GL_PROJECT_FLAG = X_GL_PROJECT_FLAG)
      AND ((tlinfo.ENC_SUMMARY_LINE_ID = X_ENC_SUMMARY_LINE_ID)
           OR ((tlinfo.ENC_SUMMARY_LINE_ID is null)
               AND (X_ENC_SUMMARY_LINE_ID is null)))
      AND (tlinfo.PERSON_ID = X_PERSON_ID)
      AND (tlinfo.ASSIGNMENT_ID = X_ASSIGNMENT_ID)
      AND ((tlinfo.AWARD_ID = X_AWARD_ID)
           OR ((tlinfo.AWARD_ID is null)
               AND (X_AWARD_ID is null)))
      AND ((tlinfo.TASK_ID = X_TASK_ID)
           OR ((tlinfo.TASK_ID is null)
               AND (X_TASK_ID is null)))
      AND ((tlinfo.EXPENDITURE_TYPE = X_EXPENDITURE_TYPE)
           OR ((tlinfo.EXPENDITURE_TYPE is null)
               AND (X_EXPENDITURE_TYPE is null)))
      AND ((tlinfo.EXPENDITURE_ORGANIZATION_ID = X_EXPENDITURE_ORGANIZATION_ID)
           OR ((tlinfo.EXPENDITURE_ORGANIZATION_ID is null)
               AND (X_EXPENDITURE_ORGANIZATION_ID is null)))
      AND ((tlinfo.PROJECT_ID = X_PROJECT_ID)
           OR ((tlinfo.PROJECT_ID is null)
               AND (X_PROJECT_ID is null)))
      AND ((tlinfo.GL_CODE_COMBINATION_ID = X_GL_CODE_COMBINATION_ID)
           OR ((tlinfo.GL_CODE_COMBINATION_ID is null)
               AND (X_GL_CODE_COMBINATION_ID is null)))
      AND (tlinfo.TIME_PERIOD_ID = X_TIME_PERIOD_ID)
      AND (tlinfo.PAYROLL_ID = X_PAYROLL_ID)
      AND ((tlinfo.SET_OF_BOOKS_ID = X_SET_OF_BOOKS_ID)
           OR ((tlinfo.SET_OF_BOOKS_ID is null)
               AND (X_SET_OF_BOOKS_ID is null)))
      AND ((tlinfo.DEFAULT_REASON_CODE = X_DEFAULT_REASON_CODE)
           OR ((tlinfo.DEFAULT_REASON_CODE is null)
               AND (X_DEFAULT_REASON_CODE is null)))
      AND ((tlinfo.SUSPENSE_REASON_CODE = X_SUSPENSE_REASON_CODE)
           OR ((tlinfo.SUSPENSE_REASON_CODE is null)
               AND (X_SUSPENSE_REASON_CODE is null)))
      AND (tlinfo.ENC_CONTROL_ID = X_ENC_CONTROL_ID)
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;
  return;
end LOCK_ROW;

/* Introduced x_enc_start_date,x_enc_end_date for Enh. Bug# 2259310 */
procedure UPDATE_ROW (
  X_ENC_LINE_ID in NUMBER,
  X_BUSINESS_GROUP_ID in NUMBER,
  X_ENC_ELEMENT_TYPE_ID in NUMBER,
  X_ENCUMBRANCE_DATE in DATE,
  X_DR_CR_FLAG in VARCHAR2,
  X_ENCUMBRANCE_AMOUNT in NUMBER,
  X_ENC_LINE_TYPE in VARCHAR2,
  X_SCHEDULE_LINE_ID in NUMBER,
  X_ORG_SCHEDULE_ID in NUMBER,
  X_DEFAULT_ORG_ACCOUNT_ID in NUMBER,
  X_SUSPENSE_ORG_ACCOUNT_ID in NUMBER,
  X_ELEMENT_ACCOUNT_ID in NUMBER,
  X_GL_PROJECT_FLAG in VARCHAR2,
  X_ENC_SUMMARY_LINE_ID in NUMBER,
  X_PERSON_ID in NUMBER,
  X_ASSIGNMENT_ID in NUMBER,
  X_AWARD_ID in NUMBER,
  X_TASK_ID in NUMBER,
  X_EXPENDITURE_TYPE in VARCHAR2,
  X_EXPENDITURE_ORGANIZATION_ID in NUMBER,
  X_PROJECT_ID in NUMBER,
  X_GL_CODE_COMBINATION_ID in NUMBER,
  X_TIME_PERIOD_ID in NUMBER,
  X_PAYROLL_ID in NUMBER,
  X_SET_OF_BOOKS_ID in NUMBER,
  X_DEFAULT_REASON_CODE in VARCHAR2,
  X_SUSPENSE_REASON_CODE in VARCHAR2,
  X_ENC_CONTROL_ID in NUMBER,
  X_MODE in VARCHAR2 default 'R',
  X_ENC_START_DATE in DATE DEFAULT NULL,
  X_ENC_END_DATE   in DATE DEFAULT NULL
  ) is
    X_LAST_UPDATE_DATE DATE;
    X_LAST_UPDATED_BY NUMBER;
    X_LAST_UPDATE_LOGIN NUMBER;
begin
  X_LAST_UPDATE_DATE := SYSDATE;
  if(X_MODE = 'I') then
    X_LAST_UPDATED_BY := 1;
    X_LAST_UPDATE_LOGIN := 0;
  elsif (X_MODE = 'R') then
    X_LAST_UPDATED_BY := FND_GLOBAL.USER_ID;
    if X_LAST_UPDATED_BY is NULL then
      X_LAST_UPDATED_BY := -1;
    end if;
    X_LAST_UPDATE_LOGIN :=FND_GLOBAL.LOGIN_ID;
    if X_LAST_UPDATE_LOGIN is NULL then
      X_LAST_UPDATE_LOGIN := -1;
    end if;
  else
    FND_MESSAGE.SET_NAME('FND', 'SYSTEM-INVALID ARGS');
    app_exception.raise_exception;
  end if;
  update PSP_ENC_LINES set
    BUSINESS_GROUP_ID = X_BUSINESS_GROUP_ID,
    ENC_ELEMENT_TYPE_ID = X_ENC_ELEMENT_TYPE_ID,
    ENCUMBRANCE_DATE = X_ENCUMBRANCE_DATE,
    DR_CR_FLAG = X_DR_CR_FLAG,
    ENCUMBRANCE_AMOUNT = X_ENCUMBRANCE_AMOUNT,
    ENC_LINE_TYPE = X_ENC_LINE_TYPE,
    SCHEDULE_LINE_ID = X_SCHEDULE_LINE_ID,
    ORG_SCHEDULE_ID = X_ORG_SCHEDULE_ID,
    DEFAULT_ORG_ACCOUNT_ID = X_DEFAULT_ORG_ACCOUNT_ID,
    SUSPENSE_ORG_ACCOUNT_ID = X_SUSPENSE_ORG_ACCOUNT_ID,
    ELEMENT_ACCOUNT_ID = X_ELEMENT_ACCOUNT_ID,
    GL_PROJECT_FLAG = X_GL_PROJECT_FLAG,
    ENC_SUMMARY_LINE_ID = X_ENC_SUMMARY_LINE_ID,
    PERSON_ID = X_PERSON_ID,
    ASSIGNMENT_ID = X_ASSIGNMENT_ID,
    AWARD_ID = X_AWARD_ID,
    TASK_ID = X_TASK_ID,
    EXPENDITURE_TYPE = X_EXPENDITURE_TYPE,
    EXPENDITURE_ORGANIZATION_ID = X_EXPENDITURE_ORGANIZATION_ID,
    PROJECT_ID = X_PROJECT_ID,
    GL_CODE_COMBINATION_ID = X_GL_CODE_COMBINATION_ID,
    TIME_PERIOD_ID = X_TIME_PERIOD_ID,
    PAYROLL_ID = X_PAYROLL_ID,
    SET_OF_BOOKS_ID = X_SET_OF_BOOKS_ID,
    DEFAULT_REASON_CODE = X_DEFAULT_REASON_CODE,
    SUSPENSE_REASON_CODE = X_SUSPENSE_REASON_CODE,
    ENC_CONTROL_ID = X_ENC_CONTROL_ID,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where ENC_LINE_ID = X_ENC_LINE_ID
  ;
  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

/* Introduced x_enc_start_date,x_enc_end_date for Enh. Bug# 2259310 */
procedure ADD_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_ENC_LINE_ID in NUMBER,
  X_BUSINESS_GROUP_ID in NUMBER,
  X_ENC_ELEMENT_TYPE_ID in NUMBER,
  X_ENCUMBRANCE_DATE in DATE,
  X_DR_CR_FLAG in VARCHAR2,
  X_ENCUMBRANCE_AMOUNT in NUMBER,
  X_ENC_LINE_TYPE in VARCHAR2,
  X_SCHEDULE_LINE_ID in NUMBER,
  X_ORG_SCHEDULE_ID in NUMBER,
  X_DEFAULT_ORG_ACCOUNT_ID in NUMBER,
  X_SUSPENSE_ORG_ACCOUNT_ID in NUMBER,
  X_ELEMENT_ACCOUNT_ID in NUMBER,
  X_GL_PROJECT_FLAG in VARCHAR2,
  X_ENC_SUMMARY_LINE_ID in NUMBER,
  X_PERSON_ID in NUMBER,
  X_ASSIGNMENT_ID in NUMBER,
  X_AWARD_ID in NUMBER,
  X_TASK_ID in NUMBER,
  X_EXPENDITURE_TYPE in VARCHAR2,
  X_EXPENDITURE_ORGANIZATION_ID in NUMBER,
  X_PROJECT_ID in NUMBER,
  X_GL_CODE_COMBINATION_ID in NUMBER,
  X_TIME_PERIOD_ID in NUMBER,
  X_PAYROLL_ID in NUMBER,
  X_SET_OF_BOOKS_ID in NUMBER,
  X_DEFAULT_REASON_CODE in VARCHAR2,
  X_SUSPENSE_REASON_CODE in VARCHAR2,
  X_ENC_CONTROL_ID in NUMBER,
  X_MODE in VARCHAR2 default 'R',
  X_CHANGE_FLAG IN VARCHAR2 default 'N',
  X_STATUS_CODE in VARCHAR2,
  X_ENC_START_DATE in DATE DEFAULT NULL,
  X_ENC_END_DATE   in DATE DEFAULT NULL
  ) is
  cursor c1 is select rowid from PSP_ENC_LINES
     where ENC_LINE_ID = X_ENC_LINE_ID
  ;
  dummy c1%rowtype;
begin
  open c1;
  fetch c1 into dummy;
  if (c1%notfound) then
    close c1;

    /* Introduced x_enc_start_date,x_enc_end_date for Enh. Bug# 2259310 */
    INSERT_ROW (
     X_ROWID,
     X_ENC_LINE_ID,
     X_BUSINESS_GROUP_ID,
     X_ENC_ELEMENT_TYPE_ID,
     X_ENCUMBRANCE_DATE,
     X_DR_CR_FLAG,
     X_ENCUMBRANCE_AMOUNT,
     X_ENC_LINE_TYPE,
     X_SCHEDULE_LINE_ID,
     X_ORG_SCHEDULE_ID,
     X_DEFAULT_ORG_ACCOUNT_ID,
     X_SUSPENSE_ORG_ACCOUNT_ID,
     X_ELEMENT_ACCOUNT_ID,
     X_GL_PROJECT_FLAG,
     X_ENC_SUMMARY_LINE_ID,
     X_PERSON_ID,
     X_ASSIGNMENT_ID,
     X_AWARD_ID,
     X_TASK_ID,
     X_EXPENDITURE_TYPE,
     X_EXPENDITURE_ORGANIZATION_ID,
     X_PROJECT_ID,
     X_GL_CODE_COMBINATION_ID,
     X_TIME_PERIOD_ID,
     X_PAYROLL_ID,
     X_SET_OF_BOOKS_ID,
     X_DEFAULT_REASON_CODE,
     X_SUSPENSE_REASON_CODE,
     X_ENC_CONTROL_ID,
     X_MODE,
     X_CHANGE_FLAG,
     X_STATUS_CODE,
     X_ENC_START_DATE ,
     X_ENC_END_DATE );
    return;
  end if;
  close c1;

  /* Introduced x_enc_start_date,x_enc_end_date for Enh. Bug# 2259310 */
  UPDATE_ROW (
   X_ENC_LINE_ID,
   X_BUSINESS_GROUP_ID,
   X_ENC_ELEMENT_TYPE_ID,
   X_ENCUMBRANCE_DATE,
   X_DR_CR_FLAG,
   X_ENCUMBRANCE_AMOUNT,
   X_ENC_LINE_TYPE,
   X_SCHEDULE_LINE_ID,
   X_ORG_SCHEDULE_ID,
   X_DEFAULT_ORG_ACCOUNT_ID,
   X_SUSPENSE_ORG_ACCOUNT_ID,
   X_ELEMENT_ACCOUNT_ID,
   X_GL_PROJECT_FLAG,
   X_ENC_SUMMARY_LINE_ID,
   X_PERSON_ID,
   X_ASSIGNMENT_ID,
   X_AWARD_ID,
   X_TASK_ID,
   X_EXPENDITURE_TYPE,
   X_EXPENDITURE_ORGANIZATION_ID,
   X_PROJECT_ID,
   X_GL_CODE_COMBINATION_ID,
   X_TIME_PERIOD_ID,
   X_PAYROLL_ID,
   X_SET_OF_BOOKS_ID,
   X_DEFAULT_REASON_CODE,
   X_SUSPENSE_REASON_CODE,
   X_ENC_CONTROL_ID,
   X_MODE,
   X_ENC_START_DATE ,
   X_ENC_END_DATE);
end ADD_ROW;

procedure DELETE_ROW (
  X_ENC_LINE_ID in NUMBER
) is
begin
  delete from PSP_ENC_LINES
  where ENC_LINE_ID = X_ENC_LINE_ID;
  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure insert_into_enc_controls(
	X_ENC_CONTROL_ID 		IN	NUMBER,
	X_BUSINESS_GROUP_ID		IN	NUMBER,
	X_SET_OF_BOOKS_ID		IN	NUMBER,
	X_ACTION_TYPE			IN	VARCHAR2,
	X_GL_ENC_PERIOD_EXT_VALUE	IN	VARCHAR2,
	X_OGM_ENC_PERIOD_EXT_VALUE	IN	VARCHAR2,
	X_PAYROLL_ID			IN	NUMBER,
	X_ENCUMBRANCE_DATE		IN	DATE,
	X_CI_SUMMARIZATION_OPTION	IN	VARCHAR2,
	X_TIME_SUMMARIZATION_OPTION	IN	VARCHAR2,
	X_NUMBER_OF_DR			IN	NUMBER,
	X_NUMBER_OF_CR			IN	NUMBER,
	X_TOTAL_DR_AMOUNT		IN	NUMBER,
	X_TOTAL_CR_AMOUNT		IN	NUMBER,
	X_GL_DR_AMOUNT			IN	NUMBER,
	X_GL_CR_AMOUNT			IN	NUMBER,
	X_OGM_DR_AMOUNT			IN	NUMBER,
	X_OGM_CR_AMOUNT			IN	NUMBER,
	X_ACTION_CODE			IN	VARCHAR2,
	X_RUN_ID			IN	NUMBER,
	X_BATCH_NAME			IN	VARCHAR2,
	X_SUMM_GL_DR_AMOUNT		IN	NUMBER,
	X_SUMM_GL_CR_AMOUNT		IN	NUMBER,
	X_SUMM_OGM_DR_AMOUNT		IN	NUMBER,
	X_SUMM_OGM_CR_AMOUNT		IN	NUMBER,
	X_TIME_PERIOD_ID		IN	NUMBER) IS

	X_LAST_UPDATE_DATE	DATE := sysdate;
	X_LAST_UPDATE_LOGIN	NUMBER := fnd_global.login_id;
	X_LAST_UPDATED_BY	NUMBER := fnd_global.user_id;
BEGIN
	INSERT INTO PSP_ENC_CONTROLS(
	ENC_CONTROL_ID,
	BUSINESS_GROUP_ID,
	SET_OF_BOOKS_ID,
	ACTION_TYPE	,
	GL_ENC_PERIOD_EXT_VALUE,
	OGM_ENC_PERIOD_EXT_VALUE,
	PAYROLL_ID,
	ENCUMBRANCE_DATE,
	CI_SUMMARIZATION_OPTION,
	TIME_SUMMARIZATION_OPTION,
	NUMBER_OF_DR,
	NUMBER_OF_CR,
	TOTAL_DR_AMOUNT,
	TOTAL_CR_AMOUNT,
	GL_DR_AMOUNT,
	GL_CR_AMOUNT,
	OGM_DR_AMOUNT,
	OGM_CR_AMOUNT,
	ACTION_CODE,
	RUN_ID,
	BATCH_NAME,
	TIME_PERIOD_ID,
	SUMM_GL_DR_AMOUNT,
	SUMM_GL_CR_AMOUNT,
	SUMM_OGM_DR_AMOUNT,
	SUMM_OGM_CR_AMOUNT,
	LAST_UPDATE_DATE,
	LAST_UPDATED_BY,
	LAST_UPDATE_LOGIN,
	CREATION_DATE,
	CREATED_BY)
	VALUES
	(
	X_ENC_CONTROL_ID,
	X_BUSINESS_GROUP_ID,
	X_SET_OF_BOOKS_ID,
	X_ACTION_TYPE	,
	X_GL_ENC_PERIOD_EXT_VALUE,
	X_OGM_ENC_PERIOD_EXT_VALUE,
	X_PAYROLL_ID,
	X_ENCUMBRANCE_DATE,
	X_CI_SUMMARIZATION_OPTION,
	X_TIME_SUMMARIZATION_OPTION,
	X_NUMBER_OF_DR,
	X_NUMBER_OF_CR,
	X_TOTAL_DR_AMOUNT,
	X_TOTAL_CR_AMOUNT,
	X_GL_DR_AMOUNT,
	X_GL_CR_AMOUNT,
	X_OGM_DR_AMOUNT,
	X_OGM_CR_AMOUNT,
	X_ACTION_CODE,
	X_RUN_ID,
	X_BATCH_NAME,
	X_TIME_PERIOD_ID,
	X_SUMM_GL_DR_AMOUNT,
	X_SUMM_GL_CR_AMOUNT,
	X_SUMM_OGM_DR_AMOUNT,
	X_SUMM_OGM_DR_AMOUNT,
	X_LAST_UPDATE_DATE,
	X_LAST_UPDATED_BY,
	X_LAST_UPDATE_LOGIN,
	X_LAST_UPDATE_DATE,
	X_LAST_UPDATED_BY);

END;

end PSP_ENC_LINES_PKG;

/
