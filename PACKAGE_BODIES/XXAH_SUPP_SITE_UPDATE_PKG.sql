--------------------------------------------------------
--  DDL for Package Body XXAH_SUPP_SITE_UPDATE_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XXAH_SUPP_SITE_UPDATE_PKG" as
   /***************************************************************************
   *                           IDENTIFICATION
   *                           ==============
   * NAME              : XXAH_SUPP_SITE_UPDATE_PKG
   * DESCRIPTION       : PACKAGE TO Supplier Update Conversion
   ****************************************************************************
   *                           CHANGE HISTORY
   *                           ==============
   * DATE             VERSION     DONE BY
   * 25-JAN-2018        1.0       Sunil Thamke     Initial
   * 03-May-2018        2.0       Menaka Kumar     Code fix for updating Blank to NL Prefereed.
   ****************************************************************************/
gv_request_id                     fnd_concurrent_requests.request_id%TYPE:= Fnd_Global.conc_request_id;
gv_commit_flag                    VARCHAR2(1);
gv_api_msg                        VARCHAR2(2000);


PROCEDURE P_MAIN (errbuf  OUT VARCHAR2,
                  retcode OUT NUMBER,
                  p_type IN VARCHAR2,
                  p_vendor_name IN VARCHAR2)
IS

   lv_bank_id                      NUMBER;
   lv_branch_id                    NUMBER;
      lv_account_id                   NUMBER;

CURSOR c_supp_rec
IS
SELECT distinct aps.segment1, aps.vendor_name,aps.vendor_id,aps.party_id ORA_PARTY_ID,psp.PK1_VALUE ora_party_site_id, psp.PK2_VALUE ora_vendor_site_id, psp.C_EXT_ATTR1
  FROM APPS.pos_supp_prof_ext_b psp,
       APPS.ego_attr_groups_v egv,
       EGO.EGO_DATA_LEVEL_B edl,
       ap_suppliers aps,
        ap_supplier_sites_all assa
 WHERE    psp.ATTR_GROUP_ID = egv.ATTR_GROUP_ID
       AND psp.DATA_LEVEL_ID = edl.DATA_LEVEL_ID
       and psp.party_id = aps.party_id
       and aps.vendor_id = assa.vendor_id
       and assa.org_id =83
       AND edl.DATA_LEVEL_NAME = 'SUPP_ADDR_SITE_LEVEL'
       AND psp.C_EXT_ATTR1 = 'Preferred'
       --and aps.vendor_id = 1294021
       AND aps.vendor_name = nvl(p_vendor_name, aps.vendor_name)
       AND psp.ATTR_GROUP_ID = 221
      -- and rownum <= 1
       order by aps.vendor_id desc;


CURSOR c_supplier_site(p_vendor_id IN NUMBER, p_vendor_site_id IN NUMBER)
IS
  SELECT party_site_id,
         vendor_site_id,
         VENDOR_SITE_CODE,
         org_id
    FROM ap_supplier_sites_all
   WHERE     vendor_id = p_vendor_id
         AND vendor_site_id = p_vendor_site_id
         AND (INACTIVE_DATE IS NULL OR TRUNC (INACTIVE_DATE) >= TRUNC (SYSDATE))
ORDER BY vendor_site_id;




CURSOR c_ss_prf(p_party_id IN NUMBER, p_party_site_id IN VARCHAR2, p_vendor_site_id IN VARCHAR2 )
IS
SELECT edl.DATA_LEVEL_NAME,psp.PK1_VALUE, psp.PK2_VALUE, psp.C_EXT_ATTR1
  FROM APPS.pos_supp_prof_ext_b psp,
       APPS.ego_attr_groups_v egv,
       EGO.EGO_DATA_LEVEL_B edl
 WHERE    psp.ATTR_GROUP_ID = egv.ATTR_GROUP_ID
       AND psp.DATA_LEVEL_ID = edl.DATA_LEVEL_ID
       AND edl.DATA_LEVEL_NAME = 'SUPP_ADDR_SITE_LEVEL'
       AND psp.C_EXT_ATTR1 = 'Preferred'
       AND psp.party_id = p_party_id
       AND psp.PK1_VALUE = p_party_site_id
       AND psp.PK2_VALUE = p_vendor_site_id
       AND psp.ATTR_GROUP_ID = 221;

CURSOR c_empty_cg
IS
   select aps.VENDOR_ID , VENDOR_NAME, SEGMENT1, party_id , VENDOR_SITE_CODE ,party_site_id, vendor_site_id,
(select NAME from hr_all_organization_units where ORGANIZATION_ID=assa.ORG_ID)OU_NAME
from ap_suppliers aps ,
ap_supplier_sites_all assa
where
  aps.vendor_id = assa.vendor_id
 and assa.ORG_ID=83
 and     aps.vendor_name = nvl(p_vendor_name, aps.vendor_name)
and assa.vendor_site_id in (538765,
500733,
543742,
505766,
496774,
500743,
531771,
515791,
503749,
496805,
536742,
531816,
505760,
515786,
515784,
496806,
537758,
538735,
539754,
489751,
539741,
525793,
538759,
542792,
512760,
524730,
505741,
540742,
518777,
529791,
527732,
498743,
515738,
481779,
501761,
537749,
496751,
515743,
541742,
590740,
515798,
500780,
525754,
543732,
536748,
525755,
515787,
507767,
543749,
498742,
469732,
525739,
594750,
496793,
505762,
538732,
496749,
540758,
507741,
501793,
496801,
515760,
500739,
531768,
540785,
501776,
520743,
518782,
505742,
500757,
509749,
496753,
539738,
512751,
533743,
525766,
510746,
501765,
500735,
537761,
501752,
515774,
525783,
540791,
511756,
520748,
520757,
502739,
531802,
529783,
533740,
505758,
257731,
539737,
519743,
518736,
479742,
512794,
500755,
515735,
537750,
511774,
515778,
531763,
515773,
510761,
529780,
512769,
510740,
525780,
496785,
518768,
536756,
539752,
520749,
538767,
531799,
525735,
501751,
500762,
503734,
531803,
494810,
498739,
492752,
481785,
511751,
505756,
501775,
532738,
541748,
538753,
540755,
537730,
501785,
540734,
498731,
531781,
529779,
494796,
501797,
540761,
499751,
540752,
507734,
521731,
558749,
516740,
500732,
518737,
515752,
499747,
531777,
525747,
532735,
516757,
501812,
532734,
511748,
503732,
525782,
518749,
496798,
540738,
540753,
496810,
481777,
516738,
502737,
513745,
496769,
505773,
498735,
496788,
516736,
492746,
525758,
540786,
516733,
529792,
520741,
501781,
505775,
531828,
541730,
499737,
515794,
515800,
536738,
525753,
501743,
538782,
531755,
509776,
510741,
529774,
494805,
531761,
516744,
496766,
496807,
520752,
531753,
510774,
496803,
518773,
531756,
505771,
537752,
538737,
529796,
510779,
525778,
529781,
561759,
501741,
516737,
536747,
538780,
537746,
509752,
540777,
531831,
531767,
498730,
546731,
536760,
501798,
538757,
503743,
519736,
540769,
501789,
512743,
490740,
540771,
538741,
531792,
518756,
529788,
505735,
525752,
537733,
510747,
500748,
506737,
518754,
500742,
539740,
505738,
505736,
505769,
512785,
513755,
519742,
536757,
479759,
511788,
542787,
510758,
538766,
514730,
543733,
542760,
496784,
509734,
478787,
536731,
540757,
518748,
507762,
506738,
510776,
509764,
536755,
496804,
537734,
500774,
538740,
505798,
500737,
500752,
500747,
511767,
486753,
503741,
518780,
537736,
505811,
500773,
500758,
536740,
479741,
492767,
541739,
529734,
513737,
525761,
494801,
505789,
509772,
525781,
510765,
515788,
520755,
536739,
496759,
500741,
507731,
498740,
501764,
519734,
507732,
501800,
501778,
495733,
503746,
533738,
531750,
531760,
525756,
499748,
479735,
501731,
507735,
525746,
518740,
537751,
536732,
515742,
505790,
496755,
503742,
514732,
501807,
501815,
479740,
505794,
498750,
519741,
505743,
497730,
496762,
531742,
540759,
505755,
498734,
531811,
507770,
497734,
531782,
499745,
494802,
536746,
537745,
511769,
520733,
498748,
509775,
496756,
509771,
539734,
512795,
513754,
531801,
541750,
531794,
537756,
536751,
505757,
539753,
532737,
515736,
540760,
496772,
496794,
496800,
540733,
479754,
467744,
496761,
501794,
539743,
494804,
521735,
513742,
509748,
512748,
498741,
502734,
510756,
505751,
538731,
540735,
500777,
500746,
505731,
531734,
531818,
536761,
496791,
540776,
537763,
541745,
520735,
501754,
531786,
506740,
496760,
518762,
513750,
538752,
529777,
537762,
509767,
533745,
525786,
541741,
501779,
512788,
516732,
509750,
525733,
496778,
515795,
499734,
500761,
509773,
538734,
531765,
518767,
495736,
538777,
540762,
481773,
511758,
518752,
518759,
529776,
505748,
537743,
536759,
501802,
501749,
518781,
510742,
525796,
507764,
515762,
538762,
525751,
533732,
531795,
531744,
511768,
518755,
503736,
498737,
540793,
505800,
501809,
531746,
509745,
521730,
540743,
537740,
505767,
540772,
515763,
479752,
506730,
539742,
499739,
503739,
515789,
538763,
576745,
499733,
511763,
531747,
500740,
520730,
501796,
515745,
511770,
533742,
494798,
513746,
537735,
538773,
515746,
501772,
505791,
515765,
500772,
536741,
529795,
538755,
537753,
496775,
520760,
509774,
503738,
539746,
496757,
518735,
500749,
479751,
541735,
512781,
501811,
536754,
540770,
511754,
478804,
533744,
497735,
510762,
496747,
505754,
479766,
538772,
552766,
529789,
537757,
529787,
536752,
529778,
531762,
515764,
512790,
531735,
529775,
500745,
518763,
500744,
531758,
543750,
507736,
505730,
551751,
529790,
542742,
525768,
525763,
501769,
515775,
542774,
519733,
521736,
539736,
479734,
525794,
533736,
518776,
499732,
542768,
509739,
501806,
540731,
531813,
518744,
518742,
529749,
499746,
515776,
507768,
501747,
496777,
513753,
515734,
505747,
540783,
500781,
539757,
539744,
515777,
506734,
518778,
525736,
536753,
512792,
525732,
515779,
501758,
512791,
520736,
512793,
587765,
507763,
540739,
540741,
541749,
509763,
537741,
498744,
510780,
531751,
515750,
516759,
540764,
518747,
525749,
542757,
538739,
501770,
539731,
501734,
520761,
516760,
519735,
538747,
496809,
496763,
525745,
500750,
507747,
542781,
538764,
499753,
500734,
520734,
500753,
531821,
518739,
507769,
501784,
511766,
505788,
500770,
531787,
496771,
541740,
509741,
540775,
520739,
540773,
521733,
516748,
500766,
525750,
542772,
525737,
520747,
505746,
541743,
516746,
531809,
531817,
501753,
509757,
531764,
531740,
529745,
486754,
541737,
533733,
538733,
538771,
540788,
504730,
515753,
507752,
520758,
496782,
479744,
543745,
518772,
510732,
529737,
496767,
519737,
486756,
511759,
496758,
499750,
541734,
512742,
548770,
539756,
486757,
531827,
518753,
516758,
531793,
496796,
501801,
496799,
507742,
518775,
509743,
505777,
540778,
537755,
536745,
542797,
500779,
531790,
542794,
510748,
540763,
513740,
525764,
537754,
539732,
541746,
515744,
538758,
529785,
536734,
501803,
499735,
520746,
531766,
531804,
509735,
531731,
518741,
501808,
533748,
515799,
540740,
538754,
515755,
531743,
500767,
500736,
505749,
479753,
518765,
479739,
500763,
538746,
503735,
496790,
498749,
500778,
505764,
499738,
531822,
531757,
518745,
516741,
525767,
515782,
520750,
525743,
492741,
518746,
510763,
538768,
515754,
500764,
529735,
542764,
542798,
525744,
510754,
529751,
518769,
529740,
511753,
479755,
496787,
525738,
493748,
505793,
507733,
531788,
520751
);
/*538765,
500733,
543742,
505766,
496774,
500743,
531771,
515791,
503749,
496805,
529746,
536742,
531816,
505760,
515786,
515784,
496806,
537758,
538735,
539754,
489751,
501768,
539741,
525793,
538759,
542792,
512760,
524730,
505741,
540742,
538751,
518777,
529791,
527732,
498743,
515738,
481779,
501761,
537749,
496751,
515743,
531825,
541742,
515798,
500780,
525754,
543732,
536748,
525755,
515787,
507767,
543749,
501810,
498742,
469732,
525739,
496793,
505762,
505762,
538732,
507765,
496749,
540758,
507741,
501793,
496801,
515760,
500739,
531768,
540785,
501776,
520743,
518782,
505742,
500757,
509749,
496753,
539738,
512751,
533743,
525766,
510746,
501765,
500735,
537761,
501752,
515774,
525785,
525783,
540791,
511756,
520748,
520757,
502739,
518774,
531802,
529783,
533740,
505758,
257731,
539737,
519743,
518736,
479742,
512794,
500755,
515735,
539745,
537750,
511774,
515778,
531763,
515773,
510761,
529780,
512769,
510740,
525780,
496785,
518768,
536756,
539752,
520749,
538767,
531799,
525735,
511765,
501751,
500762,
503734,
531803,
494810,
498739,
492752,
481785,
511751,
505756,
501775,
532738,
541748,
518779,
538753,
540755,
537730,
501785,
540734,
498731,
531781,
529779,
494796,
501797,
540761,
499751,
540752,
507734,
521731,
518766,
516740,
500732,
518737,
515752,
499747,
531777,
525747,
532735,
516757,
501812,
532734,
511748,
503732,
525782,
518749,
496798,
539733,
540738,
540753,
496810,
481777,
516738,
507777,
502737,
513745,
496769,
505773,
498735,
496788,
516736,
492746,
525758,
540786,
516733,
529792,
520741,
501781,
505775,
531828,
541730,
501746,
499737,
515794,
515800,
536738,
525753,
501743,
538782,
503747,
531755,
509776,
510741,
529774,
494805,
531761,
516744,
496766,
496807,
520752,
531753,
510774,
496803,
518773,
531756,
505771,
537752,
520762,
538737,
529796,
510779,
525778,
529781,
501741,
516737,
536747,
538780,
525773,
537746,
507780,
509752,
509753,
540777,
531831,
529741,
531767,
498730,
546731,
536760,
501798,
538757,
503743,
519736,
540769,
501789,
512743,
490740,
498745,
532736,
540771,
538741,
531792,
518756,
529788,
505735,
525752,
531812,
537733,
510747,
500748,
506737,
518754,
500742,
539740,
505738,
496773,
500775,
505736,
505769,
505769,
512785,
513755,
519742,
516739,
536757,
479759,
511788,
542787,
510758,
538766,
514730,
543733,
542760,
496784,
509734,
478787,
536731,
538783,
518732,
540757,
518748,
507762,
506738,
510776,
509764,
536755,
496804,
537734,
500774,
538740,
505798,
500737,
500752,
500747,
511767,
486753,
503741,
518780,
537736,
505811,
521732,
500773,
500758,
536740,
479741,
492767,
541739,
529734,
513737,
525761,
494801,
505789,
509772,
525781,
510765,
515788,
520755,
536739,
496759,
500741,
548746,
507731,
498740,
478796,
501764,
519734,
507732,
501800,
501778,
495733,
503746,
533738,
531750,
531760,
525756,
499748,
479735,
501731,
507735,
525746,
518740,
537751,
536732,
515742,
505790,
496755,
540790,
503742,
514732,
501807,
501815,
479740,
505794,
498750,
519741,
505743,
497730,
496762,
531742,
540759,
505755,
498734,
531811,
507770,
497734,
531782,
529784,
499745,
507776,
494802,
536746,
537745,
511769,
520733,
498748,
509775,
496756,
502735,
509771,
539734,
512795,
513754,
531801,
541750,
531794,
537756,
536751,
505757,
539753,
532737,
515736,
540760,
496772,
496794,
501738,
496800,
540733,
479754,
467744,
496761,
501794,
539743,
494804,
521735,
513742,
509748,
512748,
498741,
502734,
510756,
505751,
538731,
540735,
500777,
500746,
505731,
531734,
531818,
536761,
496791,
540776,
537763,
541745,
400730,
520735,
501754,
531786,
506740,
496760,
518762,
513750,
538752,
529777,
505776,
537762,
509767,
533745,
525786,
516745,
541741,
501779,
512788,
516732,
509750,
525733,
496778,
515795,
499734,
500761,
499741,
509773,
538734,
531765,
538779,
518767,
495736,
538777,
540762,
481773,
511758,
518752,
518759,
529776,
505748,
537743,
536759,
501802,
501749,
518781,
510742,
525796,
507764,
515762,
538762,
525751,
498751,
533732,
531796,
531795,
531744,
511768,
518755,
503736,
498737,
540793,
505800,
501809,
531746,
502738,
509745,
521730,
540743,
537740,
505767,
540772,
515763,
479752,
506730,
539742,
499739,
502740,
503739,
515789,
538763,
499733,
479757,
511763,
531747,
500740,
520730,
501796,
515745,
511770,
533742,
494798,
513746,
537735,
538773,
515746,
501772,
505791,
515765,
500772,
536741,
529795,
538755,
537753,
496775,
520760,
509774,
503738,
539746,
496757,
518735,
500749,
479751,
541735,
512781,
501811,
536754,
540770,
511754,
478804,
533744,
497735,
510762,
496747,
505754,
479766,
538772,
501757,
529789,
537757,
529787,
536752,
529778,
531762,
515764,
520745,
512790,
531735,
529775,
500745,
518763,
500744,
531758,
543750,
507736,
539755,
505730,
529790,
542742,
525768,
525763,
501769,
515775,
542774,
519733,
521736,
539736,
479734,
525794,
533736,
518776,
499732,
531745,
542768,
509739,
501806,
540731,
531813,
518744,
518742,
529749,
499746,
515776,
507768,
501747,
496777,
513753,
515734,
505747,
540783,
500781,
540784,
539757,
539744,
515777,
506734,
518778,
525736,
536753,
512792,
491734,
525732,
515779,
536735,
501758,
496808,
512791,
501788,
520736,
512793,
507763,
540739,
540741,
541749,
509763,
537741,
498744,
510780,
531751,
515750,
516759,
540764,
518747,
525749,
542757,
538739,
501770,
539731,
501734,
520761,
516760,
519735,
538747,
496809,
496763,
525745,
500750,
507747,
542781,
538764,
499753,
500734,
520734,
500753,
531821,
518739,
507769,
501784,
511766,
505788,
500770,
531787,
505792,
496771,
541740,
509741,
525774,
540775,
520739,
540773,
521733,
516748,
500766,
525750,
542772,
525737,
520747,
505746,
541743,
531754,
516746,
531809,
531817,
501753,
509757,
531764,
531740,
529745,
486758,
486754,
541737,
533733,
538733,
538771,
540788,
504730,
515753,
507752,
520758,
496782,
479744,
543745,
518772,
510732,
529737,
496767,
519737,
486756,
511759,
543748,
496758,
499750,
541734,
512742,
533747,
548770,
539756,
486757,
531827,
518753,
516758,
531793,
496796,
501801,
496799,
507742,
518775,
509743,
505777,
540778,
537755,
536745,
542797,
540737,
500779,
531790,
531791,
542794,
510748,
540763,
513740,
525764,
537754,
539732,
541746,
515744,
538758,
529785,
536734,
501803,
499735,
520746,
531766,
531804,
509735,
496797,
531731,
518741,
501808,
533748,
515799,
540740,
538754,
515755,
531743,
500767,
500736,
505749,
479753,
518765,
479739,
507774,
507775,
500763,
538746,
503735,
496790,
498749,
500778,
505764,
499738,
531822,
531757,
518745,
516741,
525767,
515782,
520750,
525743,
546822,
492741,
518746,
510763,
538768,
515754,
539747,
500764,
529735,
542764,
542798,
479767,
525744,
510754,
322733,
529751,
518769,
529740,
511753,
479755,
496787,
525738,
493748,
505793,
507733,
531788,
520751);/*
--and rownum <=100;
   --  AND aps.vendor_name = nvl(p_vendor_name, aps.vendor_name)
   --  and  rownum <= 30;
 -- and aps.party_id =2335377
 /*

and aps.party_id not in
(
select distinct PARTY_ID from pos_supp_prof_ext_b
where C_EXT_ATTR1  in ('CZ preferred','Creditor','NL preferred','Non preferred','Preferred'))
and aps.PARTY_ID in (
select distinct PARTY_ID from pos_supp_prof_ext_b
where C_EXT_ATTR1 = 'NFR' )
and  aps.segment1 in ('200009283',
'200008390',
'200009482',
'200008548',
'200008303',
'200008399',
'200009122',
'200008836',
'200008517',
'200008331',
'200009044',
'200009211',
'200009154',
'200008545'
)*/
--order by VENDOR_ID desc;


        l_supplier_type    VARCHAR2(10);

BEGIN
    fnd_global.Apps_initialize (user_id => fnd_global.user_id,
                                resp_id => fnd_global.resp_id,
                                resp_appl_id => fnd_global.resp_appl_id);

            FND_FILE.PUT_LINE(FND_FILE.LOG,'--BEGIN--');
    IF p_type = 'NL preferred' then
    FOR i IN c_supp_rec
        LOOP
        l_supplier_type    := NULL;
            FND_FILE.PUT_LINE(FND_FILE.LOG,'Supplier Name: '||i.vendor_name);
            FOR j IN c_supplier_site(i.vendor_id, i.ora_vendor_site_id)
            LOOP
            FND_FILE.PUT_LINE(FND_FILE.LOG,'vendor site name: '||j.VENDOR_SITE_CODE||'Org: '||j.org_id);
  FND_FILE.PUT_LINE(FND_FILE.LOG,'party_site_id:'||TO_CHAR(j.party_site_id)||'vendor_site_id:'||TO_CHAR(j.vendor_site_id));

                FOR k IN c_ss_prf(i.ORA_PARTY_ID, TO_CHAR(j.party_site_id), TO_CHAR(j.vendor_site_id))
                LOOP
                    FND_FILE.PUT_LINE(FND_FILE.LOG,'SUPPLIER_TYPE:'|| k.C_EXT_ATTR1);

                    l_supplier_type    := NULL;
                    l_supplier_type := k.C_EXT_ATTR1;
                END LOOP;

                    IF l_supplier_type = 'Preferred' THEN

                     P_UPDATE_UDA (i.ORA_PARTY_ID,
                      'XXAH_COUPA_CONTENT',
                      'Coupa Content Group',
                      'NL preferred',
                      NULL,
                      'SUPP_ADDR_SITE_LEVEL',
                      i.ora_party_site_id,
                      i.ora_vendor_site_id
                     );
  FND_FILE.PUT_LINE(FND_FILE.OUTPUT,i.segment1||' | '||i.vendor_name||' | '||j.VENDOR_SITE_CODE||' | '||j.org_id);
                    END IF;

            END LOOP;
             FND_FILE.PUT_LINE(FND_FILE.LOG,'--END--');
        END LOOP;
    END IF;

    IF p_type = 'Non preferred' then
     FND_FILE.PUT_LINE(FND_FILE.LOG,'inside Non Pre');
FOR r_empty_cg IN c_empty_cg
    LOOP
            BEGIN
            FND_FILE.PUT_LINE(FND_FILE.LOG,'inside Begin NP'||r_empty_cg.vendor_site_id);
               P_CRE_UDA (r_empty_cg.party_id,
                      'XXAH_COUPA_CONTENT',
                      'Coupa Content Group',
                       p_type,
                      NULL,
                      'SUPP_ADDR_SITE_LEVEL',
                      r_empty_cg.party_site_id,
                      r_empty_cg.vendor_site_id
                     );
FND_FILE.PUT_LINE(FND_FILE.OUTPUT,r_empty_cg.segment1||' | '||r_empty_cg.vendor_name||' | '||r_empty_cg.VENDOR_SITE_CODE||' | '||r_empty_cg.OU_NAME);
            END;

    END LOOP;
    END IF;

END P_MAIN;

PROCEDURE P_UPDATE_UDA (
   ln_party_id            IN   NUMBER,
   lv_attr_group_name     IN   VARCHAR2,
   lv_attr_display_name   IN   VARCHAR2,
   ln_attr_value_str1     IN   VARCHAR2,
   ln_attr_value_str2     IN   VARCHAR2,
   p_data_level           IN   VARCHAR2,
   p_data_level_1         IN   NUMBER,
   p_data_level_2         IN   NUMBER
)
IS
   ln_attr_num                    NUMBER                        := NULL;
   ln_msg_index_out               NUMBER                        := NULL;
   lv_failed_row_id_list          VARCHAR2 (100)                := NULL;
   ldt_attr_date                  DATE                          := NULL;
   ln_attr_value_str              VARCHAR2 (50)                 := NULL;
   lv_pk_column_values            ego_col_name_value_pair_array := ego_col_name_value_pair_array();
   lv_attributes_row_table        ego_user_attr_row_table;
   lv_attributes_row_table1       ego_user_attr_row_table;
   lv_attributes_data_table       ego_user_attr_data_table;
   lv_attributes_data_table1      ego_user_attr_data_table;
   lv_class_code                  ego_col_name_value_pair_array := ego_col_name_value_pair_array();
   l_pk_column_name_value_pairs   ego_col_name_value_pair_array := ego_col_name_value_pair_array();
   lv_return_status               VARCHAR2 (10)                 := NULL;
   ln_msg_count                   NUMBER                        := 0;
   lv_msg_data                    VARCHAR2 (1000)               := NULL;
   ln_errorcode                   NUMBER                        := 0;
   lv_attr_name                   VARCHAR2 (50);
   lv_attr_group_id               NUMBER;
   l_data_level_1                 NUMBER;
   l_data_level_2                 NUMBER;
   l_vendor_id                       NUMBER;
   l_vendor_site_id                  NUMBER;
   l_party_site_id                  NUMBER;
   l_ego_col_name                  VARCHAR2 (30);
   l_extension_id            NUMBER;
   l_c_ext_attr1             VARCHAR2 (30);
   l_c_ext_attr2             VARCHAR2 (30);
  l_msg                VARCHAR2(200);

BEGIN
   fnd_global.apps_initialize (user_id           => fnd_global.user_id,
                               resp_id           => fnd_global.resp_id,
                               resp_appl_id      => fnd_global.resp_appl_id
                              );
l_extension_id    := NULL;
l_c_ext_attr1    := NULL;
l_c_ext_attr2    := NULL;

   BEGIN
      SELECT egoattributeeo.attr_name, ext.attr_group_id
        INTO lv_attr_name, lv_attr_group_id
        FROM ego_attrs_v egoattributeeo, ego_fnd_dsc_flx_ctx_ext ext
       WHERE egoattributeeo.application_id = ext.application_id
         AND egoattributeeo.attr_group_type = ext.descriptive_flexfield_name
         AND egoattributeeo.attr_group_name = ext.descriptive_flex_context_code
         AND egoattributeeo.application_id = 177
         AND egoattributeeo.attr_group_type = 'POS_SUPP_PROFMGMT_GROUP'
         AND egoattributeeo.attr_group_name = lv_attr_group_name
         AND egoattributeeo.attr_display_name = lv_attr_display_name;
           fnd_file.put_line(fnd_file.LOG,'lv_attr_group_id '||lv_attr_group_id||' lv_attr_name '||lv_attr_name);
   EXCEPTION
      WHEN OTHERS
      THEN
         fnd_file.put_line(fnd_file.LOG,'+---------------------------------------------------------------------------+');
         fnd_file.put_line (fnd_file.LOG,
                               'lv_attr_group_name '
                            || lv_attr_group_name
                            || ' lv_attr_display_name '
                            || lv_attr_display_name
                           );
         fnd_file.put_line (fnd_file.LOG,
                               'Error at ego_attrs_v '
                            || SQLCODE
                            || ' -ERROR- '
                            || SQLERRM
                           );
         fnd_file.put_line(fnd_file.LOG,'+---------------------------------------------------------------------------+');
   END;



   lv_pk_column_values.EXTEND (1);
   lv_pk_column_values (1) :=
                         ego_col_name_value_pair_obj ('PARTY_ID', ln_party_id);
   lv_class_code.EXTEND (1);
   lv_class_code (1) :=
                ego_col_name_value_pair_obj ('CLASSIFICATION_CODE', 'BS:BASE');
--
IF lv_attr_group_name = 'XXAH_COUPA_CONTENT'   THEN

                lv_attributes_data_table :=
         ego_user_attr_data_table
            (ego_user_attr_data_obj
                                  (row_identifier            => 1,
                                   attr_name                 => 'XXAH_COUPA_CONTENT',
                                   attr_value_str            => TRIM(ln_attr_value_str1),
                                   attr_value_num            => NULL,
                                   attr_value_date           => NULL,
                                   attr_disp_value           => NULL,
                                   attr_unit_of_measure      => NULL,
                                   user_row_identifier       => 1
                                  ));
   END IF;

    lv_attributes_row_table :=
      ego_user_attr_row_table
         (ego_user_attr_row_obj
                    (row_identifier         => 1,
                     attr_group_id          => lv_attr_group_id,
                     attr_group_app_id      => 177,
                     attr_group_type        => 'POS_SUPP_PROFMGMT_GROUP',
                     attr_group_name        => lv_attr_group_name,
                     data_level             => p_data_level,
                     data_level_1           => 'N',
                     data_level_2           => p_data_level_1,
                     data_level_3           => p_data_level_2,
                     data_level_4           => NULL,
                     data_level_5           => NULL,
                     transaction_type       => ego_user_attrs_data_pvt.g_update_mode
                    )
         );
   --Supplier uda updation started
   pos_vendor_pub_pkg.process_user_attrs_data
                         (p_api_version                      => 1.0,
                          p_attributes_row_table             => lv_attributes_row_table,
                          p_attributes_data_table            => lv_attributes_data_table,
                          p_pk_column_name_value_pairs       => lv_pk_column_values,
                          p_class_code_name_value_pairs      => lv_class_code,
                          x_failed_row_id_list               => lv_failed_row_id_list,
                          x_return_status                    => lv_return_status,
                          x_errorcode                        => ln_errorcode,
                          x_msg_count                        => ln_msg_count,
                          x_msg_data                         => lv_msg_data
                         );

   IF lv_return_status = fnd_api.g_ret_sts_success
   THEN
        gv_commit_flag := 'Y';
        commit;
                 FND_FILE.PUT_LINE(FND_FILE.LOG,'UDA updated '|| lv_attr_group_name);
   ELSE
      fnd_file.put_line (fnd_file.LOG,'Error Message UDA Data  : ' || lv_msg_data);


      FOR i IN 1 .. ln_msg_count
      LOOP
         fnd_msg_pub.get (p_msg_index          => i,
                          p_data               => lv_msg_data,
                          p_encoded            => 'F',
                          p_msg_index_out      => ln_msg_index_out
                         );
         fnd_message.set_encoded (lv_msg_data);

         fnd_file.put_line (fnd_file.LOG,
                            'Inside Error Loop P_UPDATE_UDA : ' || i || ', ' || lv_msg_data
                           );
      END LOOP;
gv_commit_flag := 'N';
       gv_api_msg := gv_api_msg || lv_msg_data;
      ROLLBACK;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
FND_FILE.PUT_LINE(FND_FILE.LOG,'+---------------------------------------------------------------------------+');
FND_FILE.PUT_LINE(FND_FILE.LOG,'Error -P_UPDATE_UDA '||SQLCODE||' -ERROR- '||SQLERRM);
FND_FILE.PUT_LINE(FND_FILE.LOG,'+---------------------------------------------------------------------------+');
      ROLLBACK;
END P_UPDATE_UDA;


PROCEDURE P_CRE_UDA (
   ln_party_id            IN   NUMBER,
   lv_attr_group_name     IN   VARCHAR2,
   lv_attr_display_name   IN   VARCHAR2,
   ln_attr_value_str1     IN   VARCHAR2,
   ln_attr_value_str2     IN   VARCHAR2,
   p_data_level           IN   VARCHAR2,
   p_data_level_1         IN   NUMBER,
   p_data_level_2         IN   NUMBER
)
IS
   ln_attr_num                    NUMBER                        := NULL;
   ln_msg_index_out               NUMBER                        := NULL;
   lv_failed_row_id_list          VARCHAR2 (100)                := NULL;
   ldt_attr_date                  DATE                          := NULL;
   ln_attr_value_str              VARCHAR2 (50)                 := NULL;
   lv_pk_column_values            ego_col_name_value_pair_array := ego_col_name_value_pair_array();
   lv_attributes_row_table        ego_user_attr_row_table;
   lv_attributes_row_table1       ego_user_attr_row_table;
   lv_attributes_data_table       ego_user_attr_data_table;
   lv_attributes_data_table1      ego_user_attr_data_table;
   lv_class_code                  ego_col_name_value_pair_array := ego_col_name_value_pair_array();
   l_pk_column_name_value_pairs   ego_col_name_value_pair_array := ego_col_name_value_pair_array();
   lv_return_status               VARCHAR2 (10)                 := NULL;
   ln_msg_count                   NUMBER                        := 0;
   lv_msg_data                    VARCHAR2 (1000)               := NULL;
   ln_errorcode                   NUMBER                        := 0;
   lv_attr_name                   VARCHAR2 (50);
   lv_attr_group_id               NUMBER;
   l_data_level_1                 NUMBER;
   l_data_level_2                 NUMBER;
   l_vendor_id                       NUMBER;
   l_vendor_site_id                  NUMBER;
   l_party_site_id                  NUMBER;
   l_ego_col_name                  VARCHAR2 (30);
BEGIN
   fnd_global.apps_initialize (user_id           => fnd_global.user_id,
                               resp_id           => fnd_global.resp_id,
                               resp_appl_id      => fnd_global.resp_appl_id
                              );
FND_FILE.PUT_LINE(FND_FILE.LOG,'inside create UDA');
   BEGIN
      SELECT egoattributeeo.attr_name, ext.attr_group_id
        INTO lv_attr_name, lv_attr_group_id
        FROM ego_attrs_v egoattributeeo, ego_fnd_dsc_flx_ctx_ext ext
       WHERE egoattributeeo.application_id = ext.application_id
         AND egoattributeeo.attr_group_type = ext.descriptive_flexfield_name
         AND egoattributeeo.attr_group_name = ext.descriptive_flex_context_code
         AND egoattributeeo.application_id = 177
         AND egoattributeeo.attr_group_type = 'POS_SUPP_PROFMGMT_GROUP'
         AND egoattributeeo.attr_group_name = lv_attr_group_name
         AND egoattributeeo.attr_display_name = lv_attr_display_name;
   EXCEPTION
      WHEN OTHERS
      THEN
         fnd_file.put_line(fnd_file.LOG,'+---------------------------------------------------------------------------+');
         fnd_file.put_line (fnd_file.LOG,
                               'lv_attr_group_name '
                            || lv_attr_group_name
                            || ' lv_attr_display_name '
                            || lv_attr_display_name
                           );
         fnd_file.put_line (fnd_file.LOG,
                               'Error at ego_attrs_v '
                            || SQLCODE
                            || ' -ERROR- '
                            || SQLERRM
                           );
         fnd_file.put_line(fnd_file.LOG,'+---------------------------------------------------------------------------+');
   END;



   lv_pk_column_values.EXTEND (1);
   lv_pk_column_values (1) :=
                         ego_col_name_value_pair_obj ('PARTY_ID', ln_party_id);
   lv_class_code.EXTEND (1);
   lv_class_code (1) :=
                ego_col_name_value_pair_obj ('CLASSIFICATION_CODE', 'BS:BASE');


   IF lv_attr_group_name = 'XXAH_COUPA_CONTENT'
   THEN
      lv_attributes_data_table :=
         ego_user_attr_data_table
            (ego_user_attr_data_obj
                                  (row_identifier            => 1,
                                   attr_name                 => 'XXAH_COUPA_CONTENT',
                                   attr_value_str            => TRIM(ln_attr_value_str1),
                                   attr_value_num            => NULL,
                                   attr_value_date           => NULL,
                                   attr_disp_value           => NULL,
                                   attr_unit_of_measure      => NULL,
                                   user_row_identifier       => 1
                                  )         );
   END IF;

      fnd_file.put_line (fnd_file.LOG,'p_data_level_1 '||p_data_level_1||' p_data_level_2'||p_data_level_2||' ln_party_id '||ln_party_id);

   lv_attributes_row_table :=
      ego_user_attr_row_table
         (ego_user_attr_row_obj
                    (row_identifier         => 1,
                     attr_group_id          => lv_attr_group_id,
                     attr_group_app_id      => 177,
                     attr_group_type        => 'POS_SUPP_PROFMGMT_GROUP',
                     attr_group_name        => lv_attr_group_name,
                     data_level             => p_data_level,
                     data_level_1           => 'N',
                     data_level_2           => p_data_level_1,
                     data_level_3           => p_data_level_2,
                     data_level_4           => NULL,
                     data_level_5           => NULL,
                     transaction_type       => ego_user_attrs_data_pvt.g_create_mode
                    )
         );
   --Supplier uda updation started
   pos_vendor_pub_pkg.process_user_attrs_data
                         (p_api_version                      => 1.0,
                          p_attributes_row_table             => lv_attributes_row_table,
                          p_attributes_data_table            => lv_attributes_data_table,
                          p_pk_column_name_value_pairs       => lv_pk_column_values,
                          p_class_code_name_value_pairs      => lv_class_code,
                          x_failed_row_id_list               => lv_failed_row_id_list,
                          x_return_status                    => lv_return_status,
                          x_errorcode                        => ln_errorcode,
                          x_msg_count                        => ln_msg_count,
                          x_msg_data                         => lv_msg_data
                         );

   IF lv_return_status = fnd_api.g_ret_sts_success
   THEN
      COMMIT;
        FND_FILE.PUT_LINE(FND_FILE.LOG,'UDA created '|| ln_party_id);
   ELSE
      fnd_file.put_line (fnd_file.LOG,'Error Message Count : ' || ln_msg_count);
      fnd_file.put_line (fnd_file.LOG,'Error Message Data  : ' || lv_msg_data);
      fnd_file.put_line (fnd_file.LOG,'Error Code          : ' || ln_errorcode);
      fnd_file.put_line (fnd_file.LOG,'Entering Error Loop ');

      FOR i IN 1 .. ln_msg_count
      LOOP
         fnd_msg_pub.get (p_msg_index          => i,
                          p_data               => lv_msg_data,
                          p_encoded            => 'F',
                          p_msg_index_out      => ln_msg_index_out
                         );
         fnd_message.set_encoded (lv_msg_data);
         fnd_file.put_line (fnd_file.LOG,
                            'Inside Error Loop P_UDA : ' || i || ', ' || lv_msg_data
                           );
      END LOOP;

      ROLLBACK;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
FND_FILE.PUT_LINE(FND_FILE.LOG,'+---------------------------------------------------------------------------+');
FND_FILE.PUT_LINE(FND_FILE.LOG,'Error -P_UDA '||SQLCODE||' -ERROR- '||SQLERRM);
FND_FILE.PUT_LINE(FND_FILE.LOG,'+---------------------------------------------------------------------------+');
      ROLLBACK;
END P_CRE_UDA;

end XXAH_SUPP_SITE_UPDATE_PKG;

/
